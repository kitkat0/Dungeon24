#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTT_FaceTo

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BTT_FaceTo.BTT_FaceTo_C.CleanUp
// 0x0008 (0x0008 - 0x0000)
struct BTT_FaceTo_C_CleanUp final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_FaceTo_C_CleanUp) == 0x000008, "Wrong alignment on BTT_FaceTo_C_CleanUp");
static_assert(sizeof(BTT_FaceTo_C_CleanUp) == 0x000008, "Wrong size on BTT_FaceTo_C_CleanUp");
static_assert(offsetof(BTT_FaceTo_C_CleanUp, OwnerController) == 0x000000, "Member 'BTT_FaceTo_C_CleanUp::OwnerController' has a wrong offset!");

// Function BTT_FaceTo.BTT_FaceTo_C.ExecuteUbergraph_BTT_FaceTo
// 0x0270 (0x0270 - 0x0000)
struct BTT_FaceTo_C_ExecuteUbergraph_BTT_FaceTo final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_Event_OwnerController_1;                    // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn_1;                     // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AAIController*                          K2Node_Event_OwnerController;                      // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn;                       // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCharacterMovementComponent*            CallFunc_GetComponentByClass_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue_1;      // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue_2;      // 0x00B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAIController*                          K2Node_CustomEvent_OwnerController;                // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetFocalPoint_ReturnValue;                // 0x00D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetFocusActor_ReturnValue;                // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualExactly_VectorVector_ReturnValue;    // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FB[0x1];                                       // 0x00FB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetBlackboardValueAsFloat_ReturnValue;    // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue;        // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0102(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_103[0x5];                                      // 0x0103(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_GetBlackboardValueAsRotator_ReturnValue;  // 0x0108(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetBlackboardValueAsVector_ReturnValue;   // 0x0120(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0138(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0150(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0168(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAngleBetweenTwoVectors2D_ReturnValue;  // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_184[0x4];                                      // 0x0184(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0188(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAngleBetweenTwoVectors2D_ReturnValue_1; // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidAILocation_ReturnValue;            // 0x01A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidAIRotation_ReturnValue;            // 0x01A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A6[0x2];                                      // 0x01A6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetBlackboardValueAsActor_ReturnValue;    // 0x01A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B1[0x7];                                      // 0x01B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_3;        // 0x01B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x01D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue_1;      // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E9[0x3];                                      // 0x01E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetAngleBetweenTwoVectors2D_ReturnValue_2; // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue_2;      // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue_3;      // 0x01F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x01F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_1;     // 0x01F3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_2;     // 0x01F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F5[0x3];                                      // 0x01F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsTaskExecuting_ReturnValue;              // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_209[0x7];                                      // 0x0209(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsTaskExecuting_ReturnValue_1;            // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_219[0x7];                                      // 0x0219(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_B_ImplicitCast;       // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_PrecisionReal_ImplicitCast;     // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NotEqual_DoubleDouble_A_ImplicitCast;     // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_Angle_ImplicitCast;             // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_A_ImplicitCast;    // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_Angle_ImplicitCast_1;           // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_1;  // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_Angle_ImplicitCast_2;           // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_2;  // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Delay_Duration_ImplicitCast;              // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_FaceTo_C_ExecuteUbergraph_BTT_FaceTo) == 0x000008, "Wrong alignment on BTT_FaceTo_C_ExecuteUbergraph_BTT_FaceTo");
static_assert(sizeof(BTT_FaceTo_C_ExecuteUbergraph_BTT_FaceTo) == 0x000270, "Wrong size on BTT_FaceTo_C_ExecuteUbergraph_BTT_FaceTo");
static_assert(offsetof(BTT_FaceTo_C_ExecuteUbergraph_BTT_FaceTo, EntryPoint) == 0x000000, "Member 'BTT_FaceTo_C_ExecuteUbergraph_BTT_FaceTo::EntryPoint' has a wrong offset!");
static_assert(offsetof(BTT_FaceTo_C_ExecuteUbergraph_BTT_FaceTo, K2Node_Event_OwnerController_1) == 0x000008, "Member 'BTT_FaceTo_C_ExecuteUbergraph_BTT_FaceTo::K2Node_Event_OwnerController_1' has a wrong offset!");
static_assert(offsetof(BTT_FaceTo_C_ExecuteUbergraph_BTT_FaceTo, K2Node_Event_ControlledPawn_1) == 0x000010, "Member 'BTT_FaceTo_C_ExecuteUbergraph_BTT_FaceTo::K2Node_Event_ControlledPawn_1' has a wrong offset!");
static_assert(offsetof(BTT_FaceTo_C_ExecuteUbergraph_BTT_FaceTo, K2Node_Event_OwnerController) == 0x000018, "Member 'BTT_FaceTo_C_ExecuteUbergraph_BTT_FaceTo::K2Node_Event_OwnerController' has a wrong offset!");
static_assert(offsetof(BTT_FaceTo_C_ExecuteUbergraph_BTT_FaceTo, K2Node_Event_ControlledPawn) == 0x000020, "Member 'BTT_FaceTo_C_ExecuteUbergraph_BTT_FaceTo::K2Node_Event_ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTT_FaceTo_C_ExecuteUbergraph_BTT_FaceTo, CallFunc_GetComponentByClass_ReturnValue) == 0x000028, "Member 'BTT_FaceTo_C_ExecuteUbergraph_BTT_FaceTo::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_FaceTo_C_ExecuteUbergraph_BTT_FaceTo, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BTT_FaceTo_C_ExecuteUbergraph_BTT_FaceTo::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_FaceTo_C_ExecuteUbergraph_BTT_FaceTo, CallFunc_BreakRotator_Roll) == 0x000034, "Member 'BTT_FaceTo_C_ExecuteUbergraph_BTT_FaceTo::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BTT_FaceTo_C_ExecuteUbergraph_BTT_FaceTo, CallFunc_BreakRotator_Pitch) == 0x000038, "Member 'BTT_FaceTo_C_ExecuteUbergraph_BTT_FaceTo::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BTT_FaceTo_C_ExecuteUbergraph_BTT_FaceTo, CallFunc_BreakRotator_Yaw) == 0x00003C, "Member 'BTT_FaceTo_C_ExecuteUbergraph_BTT_FaceTo::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BTT_FaceTo_C_ExecuteUbergraph_BTT_FaceTo, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000040, "Member 'BTT_FaceTo_C_ExecuteUbergraph_BTT_FaceTo::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_FaceTo_C_ExecuteUbergraph_BTT_FaceTo, CallFunc_GetActorForwardVector_ReturnValue) == 0x000058, "Member 'BTT_FaceTo_C_ExecuteUbergraph_BTT_FaceTo::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_FaceTo_C_ExecuteUbergraph_BTT_FaceTo, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000070, "Member 'BTT_FaceTo_C_ExecuteUbergraph_BTT_FaceTo::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTT_FaceTo_C_ExecuteUbergraph_BTT_FaceTo, CallFunc_GetActorForwardVector_ReturnValue_1) == 0x000088, "Member 'BTT_FaceTo_C_ExecuteUbergraph_BTT_FaceTo::CallFunc_GetActorForwardVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTT_FaceTo_C_ExecuteUbergraph_BTT_FaceTo, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x0000A0, "Member 'BTT_FaceTo_C_ExecuteUbergraph_BTT_FaceTo::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BTT_FaceTo_C_ExecuteUbergraph_BTT_FaceTo, CallFunc_GetActorForwardVector_ReturnValue_2) == 0x0000B8, "Member 'BTT_FaceTo_C_ExecuteUbergraph_BTT_FaceTo::CallFunc_GetActorForwardVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BTT_FaceTo_C_ExecuteUbergraph_BTT_FaceTo, K2Node_CustomEvent_OwnerController) == 0x0000D0, "Member 'BTT_FaceTo_C_ExecuteUbergraph_BTT_FaceTo::K2Node_CustomEvent_OwnerController' has a wrong offset!");
static_assert(offsetof(BTT_FaceTo_C_ExecuteUbergraph_BTT_FaceTo, CallFunc_GetFocalPoint_ReturnValue) == 0x0000D8, "Member 'BTT_FaceTo_C_ExecuteUbergraph_BTT_FaceTo::CallFunc_GetFocalPoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_FaceTo_C_ExecuteUbergraph_BTT_FaceTo, CallFunc_GetFocusActor_ReturnValue) == 0x0000F0, "Member 'BTT_FaceTo_C_ExecuteUbergraph_BTT_FaceTo::CallFunc_GetFocusActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_FaceTo_C_ExecuteUbergraph_BTT_FaceTo, CallFunc_EqualExactly_VectorVector_ReturnValue) == 0x0000F8, "Member 'BTT_FaceTo_C_ExecuteUbergraph_BTT_FaceTo::CallFunc_EqualExactly_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_FaceTo_C_ExecuteUbergraph_BTT_FaceTo, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0000F9, "Member 'BTT_FaceTo_C_ExecuteUbergraph_BTT_FaceTo::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_FaceTo_C_ExecuteUbergraph_BTT_FaceTo, CallFunc_IsValid_ReturnValue_1) == 0x0000FA, "Member 'BTT_FaceTo_C_ExecuteUbergraph_BTT_FaceTo::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTT_FaceTo_C_ExecuteUbergraph_BTT_FaceTo, CallFunc_GetBlackboardValueAsFloat_ReturnValue) == 0x0000FC, "Member 'BTT_FaceTo_C_ExecuteUbergraph_BTT_FaceTo::CallFunc_GetBlackboardValueAsFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_FaceTo_C_ExecuteUbergraph_BTT_FaceTo, CallFunc_NotEqual_DoubleDouble_ReturnValue) == 0x000100, "Member 'BTT_FaceTo_C_ExecuteUbergraph_BTT_FaceTo::CallFunc_NotEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_FaceTo_C_ExecuteUbergraph_BTT_FaceTo, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x000101, "Member 'BTT_FaceTo_C_ExecuteUbergraph_BTT_FaceTo::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_FaceTo_C_ExecuteUbergraph_BTT_FaceTo, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000102, "Member 'BTT_FaceTo_C_ExecuteUbergraph_BTT_FaceTo::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_FaceTo_C_ExecuteUbergraph_BTT_FaceTo, CallFunc_GetBlackboardValueAsRotator_ReturnValue) == 0x000108, "Member 'BTT_FaceTo_C_ExecuteUbergraph_BTT_FaceTo::CallFunc_GetBlackboardValueAsRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_FaceTo_C_ExecuteUbergraph_BTT_FaceTo, CallFunc_GetBlackboardValueAsVector_ReturnValue) == 0x000120, "Member 'BTT_FaceTo_C_ExecuteUbergraph_BTT_FaceTo::CallFunc_GetBlackboardValueAsVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_FaceTo_C_ExecuteUbergraph_BTT_FaceTo, CallFunc_GetForwardVector_ReturnValue) == 0x000138, "Member 'BTT_FaceTo_C_ExecuteUbergraph_BTT_FaceTo::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_FaceTo_C_ExecuteUbergraph_BTT_FaceTo, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000150, "Member 'BTT_FaceTo_C_ExecuteUbergraph_BTT_FaceTo::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_FaceTo_C_ExecuteUbergraph_BTT_FaceTo, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000168, "Member 'BTT_FaceTo_C_ExecuteUbergraph_BTT_FaceTo::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_FaceTo_C_ExecuteUbergraph_BTT_FaceTo, CallFunc_GetAngleBetweenTwoVectors2D_ReturnValue) == 0x000180, "Member 'BTT_FaceTo_C_ExecuteUbergraph_BTT_FaceTo::CallFunc_GetAngleBetweenTwoVectors2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_FaceTo_C_ExecuteUbergraph_BTT_FaceTo, CallFunc_Add_VectorVector_ReturnValue) == 0x000188, "Member 'BTT_FaceTo_C_ExecuteUbergraph_BTT_FaceTo::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_FaceTo_C_ExecuteUbergraph_BTT_FaceTo, CallFunc_GetAngleBetweenTwoVectors2D_ReturnValue_1) == 0x0001A0, "Member 'BTT_FaceTo_C_ExecuteUbergraph_BTT_FaceTo::CallFunc_GetAngleBetweenTwoVectors2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTT_FaceTo_C_ExecuteUbergraph_BTT_FaceTo, CallFunc_IsValidAILocation_ReturnValue) == 0x0001A4, "Member 'BTT_FaceTo_C_ExecuteUbergraph_BTT_FaceTo::CallFunc_IsValidAILocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_FaceTo_C_ExecuteUbergraph_BTT_FaceTo, CallFunc_IsValidAIRotation_ReturnValue) == 0x0001A5, "Member 'BTT_FaceTo_C_ExecuteUbergraph_BTT_FaceTo::CallFunc_IsValidAIRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_FaceTo_C_ExecuteUbergraph_BTT_FaceTo, CallFunc_GetBlackboardValueAsActor_ReturnValue) == 0x0001A8, "Member 'BTT_FaceTo_C_ExecuteUbergraph_BTT_FaceTo::CallFunc_GetBlackboardValueAsActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_FaceTo_C_ExecuteUbergraph_BTT_FaceTo, CallFunc_IsValid_ReturnValue_2) == 0x0001B0, "Member 'BTT_FaceTo_C_ExecuteUbergraph_BTT_FaceTo::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BTT_FaceTo_C_ExecuteUbergraph_BTT_FaceTo, CallFunc_K2_GetActorLocation_ReturnValue_3) == 0x0001B8, "Member 'BTT_FaceTo_C_ExecuteUbergraph_BTT_FaceTo::CallFunc_K2_GetActorLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BTT_FaceTo_C_ExecuteUbergraph_BTT_FaceTo, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x0001D0, "Member 'BTT_FaceTo_C_ExecuteUbergraph_BTT_FaceTo::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTT_FaceTo_C_ExecuteUbergraph_BTT_FaceTo, CallFunc_EqualEqual_ClassClass_ReturnValue_1) == 0x0001E8, "Member 'BTT_FaceTo_C_ExecuteUbergraph_BTT_FaceTo::CallFunc_EqualEqual_ClassClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTT_FaceTo_C_ExecuteUbergraph_BTT_FaceTo, CallFunc_GetAngleBetweenTwoVectors2D_ReturnValue_2) == 0x0001EC, "Member 'BTT_FaceTo_C_ExecuteUbergraph_BTT_FaceTo::CallFunc_GetAngleBetweenTwoVectors2D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BTT_FaceTo_C_ExecuteUbergraph_BTT_FaceTo, CallFunc_EqualEqual_ClassClass_ReturnValue_2) == 0x0001F0, "Member 'BTT_FaceTo_C_ExecuteUbergraph_BTT_FaceTo::CallFunc_EqualEqual_ClassClass_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BTT_FaceTo_C_ExecuteUbergraph_BTT_FaceTo, CallFunc_EqualEqual_ClassClass_ReturnValue_3) == 0x0001F1, "Member 'BTT_FaceTo_C_ExecuteUbergraph_BTT_FaceTo::CallFunc_EqualEqual_ClassClass_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BTT_FaceTo_C_ExecuteUbergraph_BTT_FaceTo, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x0001F2, "Member 'BTT_FaceTo_C_ExecuteUbergraph_BTT_FaceTo::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_FaceTo_C_ExecuteUbergraph_BTT_FaceTo, CallFunc_LessEqual_DoubleDouble_ReturnValue_1) == 0x0001F3, "Member 'BTT_FaceTo_C_ExecuteUbergraph_BTT_FaceTo::CallFunc_LessEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTT_FaceTo_C_ExecuteUbergraph_BTT_FaceTo, CallFunc_LessEqual_DoubleDouble_ReturnValue_2) == 0x0001F4, "Member 'BTT_FaceTo_C_ExecuteUbergraph_BTT_FaceTo::CallFunc_LessEqual_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BTT_FaceTo_C_ExecuteUbergraph_BTT_FaceTo, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0001F8, "Member 'BTT_FaceTo_C_ExecuteUbergraph_BTT_FaceTo::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_FaceTo_C_ExecuteUbergraph_BTT_FaceTo, CallFunc_FMax_ReturnValue) == 0x000200, "Member 'BTT_FaceTo_C_ExecuteUbergraph_BTT_FaceTo::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_FaceTo_C_ExecuteUbergraph_BTT_FaceTo, CallFunc_IsTaskExecuting_ReturnValue) == 0x000208, "Member 'BTT_FaceTo_C_ExecuteUbergraph_BTT_FaceTo::CallFunc_IsTaskExecuting_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_FaceTo_C_ExecuteUbergraph_BTT_FaceTo, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000210, "Member 'BTT_FaceTo_C_ExecuteUbergraph_BTT_FaceTo::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_FaceTo_C_ExecuteUbergraph_BTT_FaceTo, CallFunc_IsTaskExecuting_ReturnValue_1) == 0x000218, "Member 'BTT_FaceTo_C_ExecuteUbergraph_BTT_FaceTo::CallFunc_IsTaskExecuting_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTT_FaceTo_C_ExecuteUbergraph_BTT_FaceTo, CallFunc_Divide_DoubleDouble_B_ImplicitCast) == 0x000220, "Member 'BTT_FaceTo_C_ExecuteUbergraph_BTT_FaceTo::CallFunc_Divide_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BTT_FaceTo_C_ExecuteUbergraph_BTT_FaceTo, K2Node_VariableSet_PrecisionReal_ImplicitCast) == 0x000228, "Member 'BTT_FaceTo_C_ExecuteUbergraph_BTT_FaceTo::K2Node_VariableSet_PrecisionReal_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BTT_FaceTo_C_ExecuteUbergraph_BTT_FaceTo, CallFunc_NotEqual_DoubleDouble_A_ImplicitCast) == 0x000230, "Member 'BTT_FaceTo_C_ExecuteUbergraph_BTT_FaceTo::CallFunc_NotEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BTT_FaceTo_C_ExecuteUbergraph_BTT_FaceTo, K2Node_VariableSet_Angle_ImplicitCast) == 0x000238, "Member 'BTT_FaceTo_C_ExecuteUbergraph_BTT_FaceTo::K2Node_VariableSet_Angle_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BTT_FaceTo_C_ExecuteUbergraph_BTT_FaceTo, CallFunc_LessEqual_DoubleDouble_A_ImplicitCast) == 0x000240, "Member 'BTT_FaceTo_C_ExecuteUbergraph_BTT_FaceTo::CallFunc_LessEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BTT_FaceTo_C_ExecuteUbergraph_BTT_FaceTo, K2Node_VariableSet_Angle_ImplicitCast_1) == 0x000248, "Member 'BTT_FaceTo_C_ExecuteUbergraph_BTT_FaceTo::K2Node_VariableSet_Angle_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BTT_FaceTo_C_ExecuteUbergraph_BTT_FaceTo, CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_1) == 0x000250, "Member 'BTT_FaceTo_C_ExecuteUbergraph_BTT_FaceTo::CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BTT_FaceTo_C_ExecuteUbergraph_BTT_FaceTo, K2Node_VariableSet_Angle_ImplicitCast_2) == 0x000258, "Member 'BTT_FaceTo_C_ExecuteUbergraph_BTT_FaceTo::K2Node_VariableSet_Angle_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BTT_FaceTo_C_ExecuteUbergraph_BTT_FaceTo, CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_2) == 0x000260, "Member 'BTT_FaceTo_C_ExecuteUbergraph_BTT_FaceTo::CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BTT_FaceTo_C_ExecuteUbergraph_BTT_FaceTo, CallFunc_Delay_Duration_ImplicitCast) == 0x000268, "Member 'BTT_FaceTo_C_ExecuteUbergraph_BTT_FaceTo::CallFunc_Delay_Duration_ImplicitCast' has a wrong offset!");

// Function BTT_FaceTo.BTT_FaceTo_C.ReceiveAbortAI
// 0x0010 (0x0010 - 0x0000)
struct BTT_FaceTo_C_ReceiveAbortAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_FaceTo_C_ReceiveAbortAI) == 0x000008, "Wrong alignment on BTT_FaceTo_C_ReceiveAbortAI");
static_assert(sizeof(BTT_FaceTo_C_ReceiveAbortAI) == 0x000010, "Wrong size on BTT_FaceTo_C_ReceiveAbortAI");
static_assert(offsetof(BTT_FaceTo_C_ReceiveAbortAI, OwnerController) == 0x000000, "Member 'BTT_FaceTo_C_ReceiveAbortAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTT_FaceTo_C_ReceiveAbortAI, ControlledPawn) == 0x000008, "Member 'BTT_FaceTo_C_ReceiveAbortAI::ControlledPawn' has a wrong offset!");

// Function BTT_FaceTo.BTT_FaceTo_C.ReceiveExecuteAI
// 0x0010 (0x0010 - 0x0000)
struct BTT_FaceTo_C_ReceiveExecuteAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_FaceTo_C_ReceiveExecuteAI) == 0x000008, "Wrong alignment on BTT_FaceTo_C_ReceiveExecuteAI");
static_assert(sizeof(BTT_FaceTo_C_ReceiveExecuteAI) == 0x000010, "Wrong size on BTT_FaceTo_C_ReceiveExecuteAI");
static_assert(offsetof(BTT_FaceTo_C_ReceiveExecuteAI, OwnerController) == 0x000000, "Member 'BTT_FaceTo_C_ReceiveExecuteAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTT_FaceTo_C_ReceiveExecuteAI, ControlledPawn) == 0x000008, "Member 'BTT_FaceTo_C_ReceiveExecuteAI::ControlledPawn' has a wrong offset!");

}

