#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_Tgf_SwordMaster_RuneSword_SkillHelper

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"


namespace SDK::Params
{

// Function ABP_Tgf_SwordMaster_RuneSword_SkillHelper.ABP_Tgf_SwordMaster_RuneSword_SkillHelper_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct ABP_Tgf_SwordMaster_RuneSword_SkillHelper_C_AnimGraph final
{
public:
	struct FPoseLink                              Param_AnimGraph;                                   // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABP_Tgf_SwordMaster_RuneSword_SkillHelper_C_AnimGraph) == 0x000008, "Wrong alignment on ABP_Tgf_SwordMaster_RuneSword_SkillHelper_C_AnimGraph");
static_assert(sizeof(ABP_Tgf_SwordMaster_RuneSword_SkillHelper_C_AnimGraph) == 0x000010, "Wrong size on ABP_Tgf_SwordMaster_RuneSword_SkillHelper_C_AnimGraph");
static_assert(offsetof(ABP_Tgf_SwordMaster_RuneSword_SkillHelper_C_AnimGraph, Param_AnimGraph) == 0x000000, "Member 'ABP_Tgf_SwordMaster_RuneSword_SkillHelper_C_AnimGraph::Param_AnimGraph' has a wrong offset!");

// Function ABP_Tgf_SwordMaster_RuneSword_SkillHelper.ABP_Tgf_SwordMaster_RuneSword_SkillHelper_C.BlueprintThreadSafeUpdateAnimation
// 0x0010 (0x0010 - 0x0000)
struct ABP_Tgf_SwordMaster_RuneSword_SkillHelper_C_BlueprintThreadSafeUpdateAnimation final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_UpdateAimingData_DeltaTime_ImplicitCast;  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Tgf_SwordMaster_RuneSword_SkillHelper_C_BlueprintThreadSafeUpdateAnimation) == 0x000008, "Wrong alignment on ABP_Tgf_SwordMaster_RuneSword_SkillHelper_C_BlueprintThreadSafeUpdateAnimation");
static_assert(sizeof(ABP_Tgf_SwordMaster_RuneSword_SkillHelper_C_BlueprintThreadSafeUpdateAnimation) == 0x000010, "Wrong size on ABP_Tgf_SwordMaster_RuneSword_SkillHelper_C_BlueprintThreadSafeUpdateAnimation");
static_assert(offsetof(ABP_Tgf_SwordMaster_RuneSword_SkillHelper_C_BlueprintThreadSafeUpdateAnimation, DeltaTime) == 0x000000, "Member 'ABP_Tgf_SwordMaster_RuneSword_SkillHelper_C_BlueprintThreadSafeUpdateAnimation::DeltaTime' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_SwordMaster_RuneSword_SkillHelper_C_BlueprintThreadSafeUpdateAnimation, CallFunc_UpdateAimingData_DeltaTime_ImplicitCast) == 0x000008, "Member 'ABP_Tgf_SwordMaster_RuneSword_SkillHelper_C_BlueprintThreadSafeUpdateAnimation::CallFunc_UpdateAimingData_DeltaTime_ImplicitCast' has a wrong offset!");

// Function ABP_Tgf_SwordMaster_RuneSword_SkillHelper.ABP_Tgf_SwordMaster_RuneSword_SkillHelper_C.ExecuteUbergraph_ABP_Tgf_SwordMaster_RuneSword_SkillHelper
// 0x0004 (0x0004 - 0x0000)
struct ABP_Tgf_SwordMaster_RuneSword_SkillHelper_C_ExecuteUbergraph_ABP_Tgf_SwordMaster_RuneSword_SkillHelper final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Tgf_SwordMaster_RuneSword_SkillHelper_C_ExecuteUbergraph_ABP_Tgf_SwordMaster_RuneSword_SkillHelper) == 0x000004, "Wrong alignment on ABP_Tgf_SwordMaster_RuneSword_SkillHelper_C_ExecuteUbergraph_ABP_Tgf_SwordMaster_RuneSword_SkillHelper");
static_assert(sizeof(ABP_Tgf_SwordMaster_RuneSword_SkillHelper_C_ExecuteUbergraph_ABP_Tgf_SwordMaster_RuneSword_SkillHelper) == 0x000004, "Wrong size on ABP_Tgf_SwordMaster_RuneSword_SkillHelper_C_ExecuteUbergraph_ABP_Tgf_SwordMaster_RuneSword_SkillHelper");
static_assert(offsetof(ABP_Tgf_SwordMaster_RuneSword_SkillHelper_C_ExecuteUbergraph_ABP_Tgf_SwordMaster_RuneSword_SkillHelper, EntryPoint) == 0x000000, "Member 'ABP_Tgf_SwordMaster_RuneSword_SkillHelper_C_ExecuteUbergraph_ABP_Tgf_SwordMaster_RuneSword_SkillHelper::EntryPoint' has a wrong offset!");

// Function ABP_Tgf_SwordMaster_RuneSword_SkillHelper.ABP_Tgf_SwordMaster_RuneSword_SkillHelper_C.GetParentActor
// 0x0018 (0x0018 - 0x0000)
struct ABP_Tgf_SwordMaster_RuneSword_SkillHelper_C_GetParentActor final
{
public:
	class ABP_Tgf_RuneSwordSkillHelperActor_C*    ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
	class ABP_Tgf_RuneSwordSkillHelperActor_C*    K2Node_DynamicCast_AsBP_Tgf_Rune_Sword_Skill_Helper_Actor; // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Tgf_SwordMaster_RuneSword_SkillHelper_C_GetParentActor) == 0x000008, "Wrong alignment on ABP_Tgf_SwordMaster_RuneSword_SkillHelper_C_GetParentActor");
static_assert(sizeof(ABP_Tgf_SwordMaster_RuneSword_SkillHelper_C_GetParentActor) == 0x000018, "Wrong size on ABP_Tgf_SwordMaster_RuneSword_SkillHelper_C_GetParentActor");
static_assert(offsetof(ABP_Tgf_SwordMaster_RuneSword_SkillHelper_C_GetParentActor, ReturnValue) == 0x000000, "Member 'ABP_Tgf_SwordMaster_RuneSword_SkillHelper_C_GetParentActor::ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_SwordMaster_RuneSword_SkillHelper_C_GetParentActor, K2Node_DynamicCast_AsBP_Tgf_Rune_Sword_Skill_Helper_Actor) == 0x000008, "Member 'ABP_Tgf_SwordMaster_RuneSword_SkillHelper_C_GetParentActor::K2Node_DynamicCast_AsBP_Tgf_Rune_Sword_Skill_Helper_Actor' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_SwordMaster_RuneSword_SkillHelper_C_GetParentActor, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'ABP_Tgf_SwordMaster_RuneSword_SkillHelper_C_GetParentActor::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function ABP_Tgf_SwordMaster_RuneSword_SkillHelper.ABP_Tgf_SwordMaster_RuneSword_SkillHelper_C.SelectAimingAnimation
// 0x0058 (0x0058 - 0x0000)
struct ABP_Tgf_SwordMaster_RuneSword_SkillHelper_C_SelectAimingAnimation final
{
public:
	struct FAnimUpdateContext                     Context;                                           // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FAnimNodeReference                     Node;                                              // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSequenceEvaluatorReference            CallFunc_ConvertToSequenceEvaluatorPure_SequenceEvaluator; // 0x0028(0x0010)(NoDestructor)
	bool                                          CallFunc_ConvertToSequenceEvaluatorPure_Result;    // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      K2Node_Select_Default;                             // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FSequenceEvaluatorReference            CallFunc_SetSequence_ReturnValue;                  // 0x0048(0x0010)(NoDestructor)
};
static_assert(alignof(ABP_Tgf_SwordMaster_RuneSword_SkillHelper_C_SelectAimingAnimation) == 0x000008, "Wrong alignment on ABP_Tgf_SwordMaster_RuneSword_SkillHelper_C_SelectAimingAnimation");
static_assert(sizeof(ABP_Tgf_SwordMaster_RuneSword_SkillHelper_C_SelectAimingAnimation) == 0x000058, "Wrong size on ABP_Tgf_SwordMaster_RuneSword_SkillHelper_C_SelectAimingAnimation");
static_assert(offsetof(ABP_Tgf_SwordMaster_RuneSword_SkillHelper_C_SelectAimingAnimation, Context) == 0x000000, "Member 'ABP_Tgf_SwordMaster_RuneSword_SkillHelper_C_SelectAimingAnimation::Context' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_SwordMaster_RuneSword_SkillHelper_C_SelectAimingAnimation, Node) == 0x000010, "Member 'ABP_Tgf_SwordMaster_RuneSword_SkillHelper_C_SelectAimingAnimation::Node' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_SwordMaster_RuneSword_SkillHelper_C_SelectAimingAnimation, Temp_bool_Variable) == 0x000020, "Member 'ABP_Tgf_SwordMaster_RuneSword_SkillHelper_C_SelectAimingAnimation::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_SwordMaster_RuneSword_SkillHelper_C_SelectAimingAnimation, CallFunc_ConvertToSequenceEvaluatorPure_SequenceEvaluator) == 0x000028, "Member 'ABP_Tgf_SwordMaster_RuneSword_SkillHelper_C_SelectAimingAnimation::CallFunc_ConvertToSequenceEvaluatorPure_SequenceEvaluator' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_SwordMaster_RuneSword_SkillHelper_C_SelectAimingAnimation, CallFunc_ConvertToSequenceEvaluatorPure_Result) == 0x000038, "Member 'ABP_Tgf_SwordMaster_RuneSword_SkillHelper_C_SelectAimingAnimation::CallFunc_ConvertToSequenceEvaluatorPure_Result' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_SwordMaster_RuneSword_SkillHelper_C_SelectAimingAnimation, K2Node_Select_Default) == 0x000040, "Member 'ABP_Tgf_SwordMaster_RuneSword_SkillHelper_C_SelectAimingAnimation::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_SwordMaster_RuneSword_SkillHelper_C_SelectAimingAnimation, CallFunc_SetSequence_ReturnValue) == 0x000048, "Member 'ABP_Tgf_SwordMaster_RuneSword_SkillHelper_C_SelectAimingAnimation::CallFunc_SetSequence_ReturnValue' has a wrong offset!");

// Function ABP_Tgf_SwordMaster_RuneSword_SkillHelper.ABP_Tgf_SwordMaster_RuneSword_SkillHelper_C.UpdateAimingData
// 0x0090 (0x0090 - 0x0000)
struct ABP_Tgf_SwordMaster_RuneSword_SkillHelper_C_UpdateAimingData final
{
public:
	double                                        DeltaTime;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               ControlRotation;                                   // 0x0008(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_NormalizedDeltaRotator_ReturnValue;       // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_RInterpTo_ReturnValue;                    // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_ClampAngle_ReturnValue;                   // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RInterpTo_DeltaTime_ImplicitCast;         // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Pitch_ImplicitCast;           // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_ClampAngle_AngleDegrees_ImplicitCast;     // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Tgf_SwordMaster_RuneSword_SkillHelper_C_UpdateAimingData) == 0x000008, "Wrong alignment on ABP_Tgf_SwordMaster_RuneSword_SkillHelper_C_UpdateAimingData");
static_assert(sizeof(ABP_Tgf_SwordMaster_RuneSword_SkillHelper_C_UpdateAimingData) == 0x000090, "Wrong size on ABP_Tgf_SwordMaster_RuneSword_SkillHelper_C_UpdateAimingData");
static_assert(offsetof(ABP_Tgf_SwordMaster_RuneSword_SkillHelper_C_UpdateAimingData, DeltaTime) == 0x000000, "Member 'ABP_Tgf_SwordMaster_RuneSword_SkillHelper_C_UpdateAimingData::DeltaTime' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_SwordMaster_RuneSword_SkillHelper_C_UpdateAimingData, ControlRotation) == 0x000008, "Member 'ABP_Tgf_SwordMaster_RuneSword_SkillHelper_C_UpdateAimingData::ControlRotation' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_SwordMaster_RuneSword_SkillHelper_C_UpdateAimingData, CallFunc_MakeRotator_ReturnValue) == 0x000020, "Member 'ABP_Tgf_SwordMaster_RuneSword_SkillHelper_C_UpdateAimingData::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_SwordMaster_RuneSword_SkillHelper_C_UpdateAimingData, CallFunc_NormalizedDeltaRotator_ReturnValue) == 0x000038, "Member 'ABP_Tgf_SwordMaster_RuneSword_SkillHelper_C_UpdateAimingData::CallFunc_NormalizedDeltaRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_SwordMaster_RuneSword_SkillHelper_C_UpdateAimingData, CallFunc_RInterpTo_ReturnValue) == 0x000050, "Member 'ABP_Tgf_SwordMaster_RuneSword_SkillHelper_C_UpdateAimingData::CallFunc_RInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_SwordMaster_RuneSword_SkillHelper_C_UpdateAimingData, CallFunc_BreakRotator_Roll) == 0x000068, "Member 'ABP_Tgf_SwordMaster_RuneSword_SkillHelper_C_UpdateAimingData::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_SwordMaster_RuneSword_SkillHelper_C_UpdateAimingData, CallFunc_BreakRotator_Pitch) == 0x00006C, "Member 'ABP_Tgf_SwordMaster_RuneSword_SkillHelper_C_UpdateAimingData::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_SwordMaster_RuneSword_SkillHelper_C_UpdateAimingData, CallFunc_BreakRotator_Yaw) == 0x000070, "Member 'ABP_Tgf_SwordMaster_RuneSword_SkillHelper_C_UpdateAimingData::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_SwordMaster_RuneSword_SkillHelper_C_UpdateAimingData, CallFunc_ClampAngle_ReturnValue) == 0x000078, "Member 'ABP_Tgf_SwordMaster_RuneSword_SkillHelper_C_UpdateAimingData::CallFunc_ClampAngle_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_SwordMaster_RuneSword_SkillHelper_C_UpdateAimingData, CallFunc_RInterpTo_DeltaTime_ImplicitCast) == 0x000080, "Member 'ABP_Tgf_SwordMaster_RuneSword_SkillHelper_C_UpdateAimingData::CallFunc_RInterpTo_DeltaTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_SwordMaster_RuneSword_SkillHelper_C_UpdateAimingData, CallFunc_MakeRotator_Pitch_ImplicitCast) == 0x000084, "Member 'ABP_Tgf_SwordMaster_RuneSword_SkillHelper_C_UpdateAimingData::CallFunc_MakeRotator_Pitch_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_SwordMaster_RuneSword_SkillHelper_C_UpdateAimingData, CallFunc_ClampAngle_AngleDegrees_ImplicitCast) == 0x000088, "Member 'ABP_Tgf_SwordMaster_RuneSword_SkillHelper_C_UpdateAimingData::CallFunc_ClampAngle_AngleDegrees_ImplicitCast' has a wrong offset!");

}

