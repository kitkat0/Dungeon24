#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TencentGME_Wwise

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK
{

// Enum TencentGME_Wwise.UTencentGME_TeamMode
// NumValues: 0x0003
enum class EUTencentGME_TeamMode : uint8
{
	TEAMMODE_GLOBAL                          = 0,
	TEAMMODE_TEAM                            = 1,
	TEAMMODE_MAX                             = 2,
};

// Enum TencentGME_Wwise.UTencentGME_Region
// NumValues: 0x0004
enum class EUTencentGME_Region : uint8
{
	REGION_DEFAULT                           = 0,
	REGION_INTERNATIONAL                     = 1,
	REGION_AWS                               = 2,
	REGION_MAX                               = 3,
};

// Enum TencentGME_Wwise.UTencentGME_StreamProfile
// NumValues: 0x0005
enum class EUTencentGME_StreamProfile : uint8
{
	STREAMPROFILE_NA                         = 0,
	STREAMPROFILE_LOW_LATENCY                = 1,
	STREAMPROFILE_STANDARD                   = 2,
	STREAMPROFILE_HD                         = 3,
	STREAMPROFILE_MAX                        = 4,
};

// Enum TencentGME_Wwise.UTencentGME_LogLevel
// NumValues: 0x0006
enum class EUTencentGME_LogLevel : uint8
{
	GMESDK_LOGLEVEL_NONE                     = 0,
	GMESDK_LOGLEVEL_ERROR                    = 1,
	GMESDK_LOGLEVEL_INFO                     = 2,
	GMESDK_LOGLEVEL_DEBUG                    = 3,
	GMESDK_LOGLEVEL_VERBOSE                  = 4,
	GMESDK_LOGLEVEL_MAX                      = 5,
};

// Enum TencentGME_Wwise.UTencentGME_MessageType
// NumValues: 0x000A
enum class EUTencentGME_MessageType : uint8
{
	Invalid                                  = 0,
	RoomStatus                               = 101,
	RoomMemberIn                             = 102,
	RoomMemberOut                            = 103,
	RecordComplete                           = 104,
	PlayoutComplete                          = 105,
	ASRComplete                              = 106,
	GetVoiceDurationComplete                 = 107,
	StreamingASRIntermediate                 = 108,
	UTencentGME_MAX                          = 109,
};

// ScriptStruct TencentGME_Wwise.TencentGmeMessage
// 0x0030 (0x0030 - 0x0000)
struct FTencentGmeMessage final
{
public:
	struct FDateTime                              LocalUTCTime;                                      // 0x0000(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EUTencentGME_MessageType                      MessageType;                                       // 0x0008(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Code;                                              // 0x000C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Message1;                                          // 0x0010(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Message2;                                          // 0x0020(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FTencentGmeMessage) == 0x000008, "Wrong alignment on FTencentGmeMessage");
static_assert(sizeof(FTencentGmeMessage) == 0x000030, "Wrong size on FTencentGmeMessage");
static_assert(offsetof(FTencentGmeMessage, LocalUTCTime) == 0x000000, "Member 'FTencentGmeMessage::LocalUTCTime' has a wrong offset!");
static_assert(offsetof(FTencentGmeMessage, MessageType) == 0x000008, "Member 'FTencentGmeMessage::MessageType' has a wrong offset!");
static_assert(offsetof(FTencentGmeMessage, Code) == 0x00000C, "Member 'FTencentGmeMessage::Code' has a wrong offset!");
static_assert(offsetof(FTencentGmeMessage, Message1) == 0x000010, "Member 'FTencentGmeMessage::Message1' has a wrong offset!");
static_assert(offsetof(FTencentGmeMessage, Message2) == 0x000020, "Member 'FTencentGmeMessage::Message2' has a wrong offset!");

}

