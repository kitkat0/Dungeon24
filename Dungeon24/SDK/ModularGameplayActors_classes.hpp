#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ModularGameplayActors

#include "Basic.hpp"

#include "AIModule_classes.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// Class ModularGameplayActors.ModularAIController
// 0x0000 (0x03C0 - 0x03C0)
class AModularAIController : public AAIController
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModularAIController">();
	}
	static class AModularAIController* GetDefaultObj()
	{
		return GetDefaultObjImpl<AModularAIController>();
	}
};
static_assert(alignof(AModularAIController) == 0x000008, "Wrong alignment on AModularAIController");
static_assert(sizeof(AModularAIController) == 0x0003C0, "Wrong size on AModularAIController");

// Class ModularGameplayActors.ModularCharacter
// 0x0000 (0x0630 - 0x0630)
class AModularCharacter : public ACharacter
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModularCharacter">();
	}
	static class AModularCharacter* GetDefaultObj()
	{
		return GetDefaultObjImpl<AModularCharacter>();
	}
};
static_assert(alignof(AModularCharacter) == 0x000010, "Wrong alignment on AModularCharacter");
static_assert(sizeof(AModularCharacter) == 0x000630, "Wrong size on AModularCharacter");

// Class ModularGameplayActors.ModularGameModeBase
// 0x0000 (0x0338 - 0x0338)
class AModularGameModeBase : public AGameModeBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModularGameModeBase">();
	}
	static class AModularGameModeBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<AModularGameModeBase>();
	}
};
static_assert(alignof(AModularGameModeBase) == 0x000008, "Wrong alignment on AModularGameModeBase");
static_assert(sizeof(AModularGameModeBase) == 0x000338, "Wrong size on AModularGameModeBase");

// Class ModularGameplayActors.ModularGameMode
// 0x0000 (0x0380 - 0x0380)
class AModularGameMode final : public AGameMode
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModularGameMode">();
	}
	static class AModularGameMode* GetDefaultObj()
	{
		return GetDefaultObjImpl<AModularGameMode>();
	}
};
static_assert(alignof(AModularGameMode) == 0x000008, "Wrong alignment on AModularGameMode");
static_assert(sizeof(AModularGameMode) == 0x000380, "Wrong size on AModularGameMode");

// Class ModularGameplayActors.ModularGameStateBase
// 0x0000 (0x02E8 - 0x02E8)
class AModularGameStateBase : public AGameStateBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModularGameStateBase">();
	}
	static class AModularGameStateBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<AModularGameStateBase>();
	}
};
static_assert(alignof(AModularGameStateBase) == 0x000008, "Wrong alignment on AModularGameStateBase");
static_assert(sizeof(AModularGameStateBase) == 0x0002E8, "Wrong size on AModularGameStateBase");

// Class ModularGameplayActors.ModularGameState
// 0x0000 (0x0308 - 0x0308)
class AModularGameState final : public AGameState
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModularGameState">();
	}
	static class AModularGameState* GetDefaultObj()
	{
		return GetDefaultObjImpl<AModularGameState>();
	}
};
static_assert(alignof(AModularGameState) == 0x000008, "Wrong alignment on AModularGameState");
static_assert(sizeof(AModularGameState) == 0x000308, "Wrong size on AModularGameState");

// Class ModularGameplayActors.ModularPawn
// 0x0000 (0x0320 - 0x0320)
class AModularPawn : public APawn
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModularPawn">();
	}
	static class AModularPawn* GetDefaultObj()
	{
		return GetDefaultObjImpl<AModularPawn>();
	}
};
static_assert(alignof(AModularPawn) == 0x000008, "Wrong alignment on AModularPawn");
static_assert(sizeof(AModularPawn) == 0x000320, "Wrong size on AModularPawn");

// Class ModularGameplayActors.ModularPlayerController
// 0x0000 (0x0860 - 0x0860)
class AModularPlayerController : public APlayerController
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModularPlayerController">();
	}
	static class AModularPlayerController* GetDefaultObj()
	{
		return GetDefaultObjImpl<AModularPlayerController>();
	}
};
static_assert(alignof(AModularPlayerController) == 0x000008, "Wrong alignment on AModularPlayerController");
static_assert(sizeof(AModularPlayerController) == 0x000860, "Wrong size on AModularPlayerController");

// Class ModularGameplayActors.ModularPlayerState
// 0x0000 (0x03B0 - 0x03B0)
class AModularPlayerState : public APlayerState
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModularPlayerState">();
	}
	static class AModularPlayerState* GetDefaultObj()
	{
		return GetDefaultObjImpl<AModularPlayerState>();
	}
};
static_assert(alignof(AModularPlayerState) == 0x000008, "Wrong alignment on AModularPlayerState");
static_assert(sizeof(AModularPlayerState) == 0x0003B0, "Wrong size on AModularPlayerState");

}

