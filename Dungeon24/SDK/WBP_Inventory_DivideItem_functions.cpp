#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Inventory_DivideItem

#include "Basic.hpp"

#include "WBP_Inventory_DivideItem_classes.hpp"
#include "WBP_Inventory_DivideItem_parameters.hpp"


namespace SDK
{

// Function WBP_Inventory_DivideItem.WBP_Inventory_DivideItem_C.BndEvt__WBP_Inventory_DivideItem_ButtonPlus_1_K2Node_ComponentBoundEvent_2_CommonButtonBaseClicked__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UCommonButtonBase*                Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWBP_Inventory_DivideItem_C::BndEvt__WBP_Inventory_DivideItem_ButtonPlus_1_K2Node_ComponentBoundEvent_2_CommonButtonBaseClicked__DelegateSignature(class UCommonButtonBase* Button)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Inventory_DivideItem_C", "BndEvt__WBP_Inventory_DivideItem_ButtonPlus_1_K2Node_ComponentBoundEvent_2_CommonButtonBaseClicked__DelegateSignature");

	Params::WBP_Inventory_DivideItem_C_BndEvt__WBP_Inventory_DivideItem_ButtonPlus_1_K2Node_ComponentBoundEvent_2_CommonButtonBaseClicked__DelegateSignature Parms{};

	Parms.Button = Button;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Inventory_DivideItem.WBP_Inventory_DivideItem_C.BndEvt__WBP_Inventory_DivideItem_WBP_Tgf_ButtonBase_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UCommonButtonBase*                Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWBP_Inventory_DivideItem_C::BndEvt__WBP_Inventory_DivideItem_WBP_Tgf_ButtonBase_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature(class UCommonButtonBase* Button)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Inventory_DivideItem_C", "BndEvt__WBP_Inventory_DivideItem_WBP_Tgf_ButtonBase_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature");

	Params::WBP_Inventory_DivideItem_C_BndEvt__WBP_Inventory_DivideItem_WBP_Tgf_ButtonBase_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature Parms{};

	Parms.Button = Button;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Inventory_DivideItem.WBP_Inventory_DivideItem_C.BndEvt__WBP_Lobby_InventoryItemHeap2_Button_BG_K2Node_ComponentBoundEvent_3_OnButtonClickedEvent__DelegateSignature
// (BlueprintEvent)

void UWBP_Inventory_DivideItem_C::BndEvt__WBP_Lobby_InventoryItemHeap2_Button_BG_K2Node_ComponentBoundEvent_3_OnButtonClickedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Inventory_DivideItem_C", "BndEvt__WBP_Lobby_InventoryItemHeap2_Button_BG_K2Node_ComponentBoundEvent_3_OnButtonClickedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_Inventory_DivideItem.WBP_Inventory_DivideItem_C.Construct
// (BlueprintCosmetic, Native, Event, Public, BlueprintEvent)

void UWBP_Inventory_DivideItem_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Inventory_DivideItem_C", "Construct");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function WBP_Inventory_DivideItem.WBP_Inventory_DivideItem_C.ExecuteUbergraph_WBP_Inventory_DivideItem
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Inventory_DivideItem_C::ExecuteUbergraph_WBP_Inventory_DivideItem(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Inventory_DivideItem_C", "ExecuteUbergraph_WBP_Inventory_DivideItem");

	Params::WBP_Inventory_DivideItem_C_ExecuteUbergraph_WBP_Inventory_DivideItem Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Inventory_DivideItem.WBP_Inventory_DivideItem_C.InitButtons
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_Inventory_DivideItem_C::InitButtons()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Inventory_DivideItem_C", "InitButtons");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_Inventory_DivideItem.WBP_Inventory_DivideItem_C.OnHeapSubmit__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Num                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Inventory_DivideItem_C::OnHeapSubmit__DelegateSignature(int32 Param_Num)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Inventory_DivideItem_C", "OnHeapSubmit__DelegateSignature");

	Params::WBP_Inventory_DivideItem_C_OnHeapSubmit__DelegateSignature Parms{};

	Parms.Param_Num = Param_Num;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Inventory_DivideItem.WBP_Inventory_DivideItem_C.OnMouseButtonDown
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FPointerEvent                    MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UWBP_Inventory_DivideItem_C::OnMouseButtonDown(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Inventory_DivideItem_C", "OnMouseButtonDown");

	Params::WBP_Inventory_DivideItem_C_OnMouseButtonDown Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WBP_Inventory_DivideItem.WBP_Inventory_DivideItem_C.OnMouseButtonUp
// (BlueprintCosmetic, Native, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FPointerEvent                    MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UWBP_Inventory_DivideItem_C::OnMouseButtonUp(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Inventory_DivideItem_C", "OnMouseButtonUp");

	Params::WBP_Inventory_DivideItem_C_OnMouseButtonUp Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function WBP_Inventory_DivideItem.WBP_Inventory_DivideItem_C.PlaceNearMouseCursor
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        Anchor                                                 (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FGeometry                        Geometry                                               (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)

void UWBP_Inventory_DivideItem_C::PlaceNearMouseCursor(const struct FGeometry& Anchor, const struct FGeometry& Geometry)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Inventory_DivideItem_C", "PlaceNearMouseCursor");

	Params::WBP_Inventory_DivideItem_C_PlaceNearMouseCursor Parms{};

	Parms.Anchor = std::move(Anchor);
	Parms.Geometry = std::move(Geometry);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Inventory_DivideItem.WBP_Inventory_DivideItem_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Inventory_DivideItem_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Inventory_DivideItem_C", "PreConstruct");

	Params::WBP_Inventory_DivideItem_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Inventory_DivideItem.WBP_Inventory_DivideItem_C.SetUp
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UTgfInventoryItemWrapper*         Item                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UUserWidget*                      Param_InstigatorWidget                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// struct FGeometry                        Anchor                                                 (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)

void UWBP_Inventory_DivideItem_C::SetUp(class UTgfInventoryItemWrapper* Item, class UUserWidget* Param_InstigatorWidget, const struct FGeometry& Anchor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Inventory_DivideItem_C", "SetUp");

	Params::WBP_Inventory_DivideItem_C_SetUp Parms{};

	Parms.Item = Item;
	Parms.Param_InstigatorWidget = Param_InstigatorWidget;
	Parms.Anchor = std::move(Anchor);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Inventory_DivideItem.WBP_Inventory_DivideItem_C.UpdateNumberLabel
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWBP_Inventory_DivideItem_C::UpdateNumberLabel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Inventory_DivideItem_C", "UpdateNumberLabel");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_Inventory_DivideItem.WBP_Inventory_DivideItem_C.GetModuleName
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)

class FString UWBP_Inventory_DivideItem_C::GetModuleName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Inventory_DivideItem_C", "GetModuleName");

	Params::WBP_Inventory_DivideItem_C_GetModuleName Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

