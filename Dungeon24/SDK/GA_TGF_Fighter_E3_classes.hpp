#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_TGF_Fighter_E3

#include "Basic.hpp"

#include "GA_TGF_Skill_Base_classes.hpp"
#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_TGF_Fighter_E3.GA_TGF_Fighter_E3_C
// 0x0070 (0x0F40 - 0x0ED0)
class UGA_TGF_Fighter_E3_C final : public UGA_TGF_Skill_Base_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_GA_TGF_Fighter_E3_C;                // 0x0EC8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	double                                        Radius;                                            // 0x0ED0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 BuffGE;                                            // 0x0ED8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxNum;                                            // 0x0EE0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DisperseBuffNum;                                   // 0x0EE4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           DisperseBuffTag;                                   // 0x0EE8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 BuffGE_HasTalent;                                  // 0x0EF0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   Fire_Socket_Name;                                  // 0x0EF8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectContextHandle           Gameplay_Effect_Context_Handler;                   // 0x0F00(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	double                                        HitBackDistance;                                   // 0x0F18(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MoveDuration;                                      // 0x0F20(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveVector*                           Location_Curve;                                    // 0x0F28(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         Clamp_Velocity;                                    // 0x0F30(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          StopMoveWhenBlocked;                               // 0x0F34(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F35[0x3];                                      // 0x0F35(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Root_Motion_Priority;                              // 0x0F38(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BeginSpeedLine();
	void DoEffect();
	void EndSpeedLine();
	void ExecuteUbergraph_GA_TGF_Fighter_E3(int32 EntryPoint);
	void K2_ActivateAbility();
	void K2_OnAbilityAdded();
	void K2_OnEndAbility(bool bWasCancelled);
	void MoveActorBlock111(const struct FHitResult& ImpactHitResult);
	void MoveFighter();
	void OnTimedOut_90C758884771DD824177009E3C9C673B();
	void PostEndAbility(class UGameplayAbility* ActivatedAbility);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_TGF_Fighter_E3_C">();
	}
	static class UGA_TGF_Fighter_E3_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_TGF_Fighter_E3_C>();
	}
};
static_assert(alignof(UGA_TGF_Fighter_E3_C) == 0x000010, "Wrong alignment on UGA_TGF_Fighter_E3_C");
static_assert(sizeof(UGA_TGF_Fighter_E3_C) == 0x000F40, "Wrong size on UGA_TGF_Fighter_E3_C");
static_assert(offsetof(UGA_TGF_Fighter_E3_C, UberGraphFrame_GA_TGF_Fighter_E3_C) == 0x000EC8, "Member 'UGA_TGF_Fighter_E3_C::UberGraphFrame_GA_TGF_Fighter_E3_C' has a wrong offset!");
static_assert(offsetof(UGA_TGF_Fighter_E3_C, Radius) == 0x000ED0, "Member 'UGA_TGF_Fighter_E3_C::Radius' has a wrong offset!");
static_assert(offsetof(UGA_TGF_Fighter_E3_C, BuffGE) == 0x000ED8, "Member 'UGA_TGF_Fighter_E3_C::BuffGE' has a wrong offset!");
static_assert(offsetof(UGA_TGF_Fighter_E3_C, MaxNum) == 0x000EE0, "Member 'UGA_TGF_Fighter_E3_C::MaxNum' has a wrong offset!");
static_assert(offsetof(UGA_TGF_Fighter_E3_C, DisperseBuffNum) == 0x000EE4, "Member 'UGA_TGF_Fighter_E3_C::DisperseBuffNum' has a wrong offset!");
static_assert(offsetof(UGA_TGF_Fighter_E3_C, DisperseBuffTag) == 0x000EE8, "Member 'UGA_TGF_Fighter_E3_C::DisperseBuffTag' has a wrong offset!");
static_assert(offsetof(UGA_TGF_Fighter_E3_C, BuffGE_HasTalent) == 0x000EF0, "Member 'UGA_TGF_Fighter_E3_C::BuffGE_HasTalent' has a wrong offset!");
static_assert(offsetof(UGA_TGF_Fighter_E3_C, Fire_Socket_Name) == 0x000EF8, "Member 'UGA_TGF_Fighter_E3_C::Fire_Socket_Name' has a wrong offset!");
static_assert(offsetof(UGA_TGF_Fighter_E3_C, Gameplay_Effect_Context_Handler) == 0x000F00, "Member 'UGA_TGF_Fighter_E3_C::Gameplay_Effect_Context_Handler' has a wrong offset!");
static_assert(offsetof(UGA_TGF_Fighter_E3_C, HitBackDistance) == 0x000F18, "Member 'UGA_TGF_Fighter_E3_C::HitBackDistance' has a wrong offset!");
static_assert(offsetof(UGA_TGF_Fighter_E3_C, MoveDuration) == 0x000F20, "Member 'UGA_TGF_Fighter_E3_C::MoveDuration' has a wrong offset!");
static_assert(offsetof(UGA_TGF_Fighter_E3_C, Location_Curve) == 0x000F28, "Member 'UGA_TGF_Fighter_E3_C::Location_Curve' has a wrong offset!");
static_assert(offsetof(UGA_TGF_Fighter_E3_C, Clamp_Velocity) == 0x000F30, "Member 'UGA_TGF_Fighter_E3_C::Clamp_Velocity' has a wrong offset!");
static_assert(offsetof(UGA_TGF_Fighter_E3_C, StopMoveWhenBlocked) == 0x000F34, "Member 'UGA_TGF_Fighter_E3_C::StopMoveWhenBlocked' has a wrong offset!");
static_assert(offsetof(UGA_TGF_Fighter_E3_C, Root_Motion_Priority) == 0x000F38, "Member 'UGA_TGF_Fighter_E3_C::Root_Motion_Priority' has a wrong offset!");

}

