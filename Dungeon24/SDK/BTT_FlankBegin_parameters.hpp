#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTT_FlankBegin

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BTT_FlankBegin.BTT_FlankBegin_C.CalcFlankPoint
// 0x0160 (0x0160 - 0x0000)
struct BTT_FlankBegin_C_CalcFlankPoint final
{
public:
	class ABP_Tgf_Monster_C*                      Monster;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                StartPoint;                                        // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Target;                                            // 0x0020(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Point;                                             // 0x0038(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X_1;                          // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMin_ReturnValue;                         // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RandomBool_ReturnValue;                   // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue;              // 0x00F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0108(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_2;                          // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_2;                          // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_2;                          // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0140(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast;    // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_FlankBegin_C_CalcFlankPoint) == 0x000008, "Wrong alignment on BTT_FlankBegin_C_CalcFlankPoint");
static_assert(sizeof(BTT_FlankBegin_C_CalcFlankPoint) == 0x000160, "Wrong size on BTT_FlankBegin_C_CalcFlankPoint");
static_assert(offsetof(BTT_FlankBegin_C_CalcFlankPoint, Monster) == 0x000000, "Member 'BTT_FlankBegin_C_CalcFlankPoint::Monster' has a wrong offset!");
static_assert(offsetof(BTT_FlankBegin_C_CalcFlankPoint, StartPoint) == 0x000008, "Member 'BTT_FlankBegin_C_CalcFlankPoint::StartPoint' has a wrong offset!");
static_assert(offsetof(BTT_FlankBegin_C_CalcFlankPoint, Target) == 0x000020, "Member 'BTT_FlankBegin_C_CalcFlankPoint::Target' has a wrong offset!");
static_assert(offsetof(BTT_FlankBegin_C_CalcFlankPoint, Point) == 0x000038, "Member 'BTT_FlankBegin_C_CalcFlankPoint::Point' has a wrong offset!");
static_assert(offsetof(BTT_FlankBegin_C_CalcFlankPoint, CallFunc_BreakVector_X) == 0x000050, "Member 'BTT_FlankBegin_C_CalcFlankPoint::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BTT_FlankBegin_C_CalcFlankPoint, CallFunc_BreakVector_Y) == 0x000058, "Member 'BTT_FlankBegin_C_CalcFlankPoint::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BTT_FlankBegin_C_CalcFlankPoint, CallFunc_BreakVector_Z) == 0x000060, "Member 'BTT_FlankBegin_C_CalcFlankPoint::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BTT_FlankBegin_C_CalcFlankPoint, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000068, "Member 'BTT_FlankBegin_C_CalcFlankPoint::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_FlankBegin_C_CalcFlankPoint, CallFunc_BreakVector_X_1) == 0x000070, "Member 'BTT_FlankBegin_C_CalcFlankPoint::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BTT_FlankBegin_C_CalcFlankPoint, CallFunc_BreakVector_Y_1) == 0x000078, "Member 'BTT_FlankBegin_C_CalcFlankPoint::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BTT_FlankBegin_C_CalcFlankPoint, CallFunc_BreakVector_Z_1) == 0x000080, "Member 'BTT_FlankBegin_C_CalcFlankPoint::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BTT_FlankBegin_C_CalcFlankPoint, CallFunc_FMin_ReturnValue) == 0x000088, "Member 'BTT_FlankBegin_C_CalcFlankPoint::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_FlankBegin_C_CalcFlankPoint, CallFunc_MakeVector_ReturnValue) == 0x000090, "Member 'BTT_FlankBegin_C_CalcFlankPoint::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_FlankBegin_C_CalcFlankPoint, CallFunc_RandomFloatInRange_ReturnValue) == 0x0000A8, "Member 'BTT_FlankBegin_C_CalcFlankPoint::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_FlankBegin_C_CalcFlankPoint, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0000B0, "Member 'BTT_FlankBegin_C_CalcFlankPoint::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_FlankBegin_C_CalcFlankPoint, CallFunc_RandomBool_ReturnValue) == 0x0000C8, "Member 'BTT_FlankBegin_C_CalcFlankPoint::CallFunc_RandomBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_FlankBegin_C_CalcFlankPoint, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x0000D0, "Member 'BTT_FlankBegin_C_CalcFlankPoint::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTT_FlankBegin_C_CalcFlankPoint, CallFunc_SelectFloat_ReturnValue) == 0x0000D8, "Member 'BTT_FlankBegin_C_CalcFlankPoint::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_FlankBegin_C_CalcFlankPoint, CallFunc_SelectFloat_ReturnValue_1) == 0x0000E0, "Member 'BTT_FlankBegin_C_CalcFlankPoint::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTT_FlankBegin_C_CalcFlankPoint, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0000E8, "Member 'BTT_FlankBegin_C_CalcFlankPoint::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_FlankBegin_C_CalcFlankPoint, CallFunc_RotateAngleAxis_ReturnValue) == 0x0000F0, "Member 'BTT_FlankBegin_C_CalcFlankPoint::CallFunc_RotateAngleAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_FlankBegin_C_CalcFlankPoint, CallFunc_Add_VectorVector_ReturnValue) == 0x000108, "Member 'BTT_FlankBegin_C_CalcFlankPoint::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_FlankBegin_C_CalcFlankPoint, CallFunc_BreakVector_X_2) == 0x000120, "Member 'BTT_FlankBegin_C_CalcFlankPoint::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(BTT_FlankBegin_C_CalcFlankPoint, CallFunc_BreakVector_Y_2) == 0x000128, "Member 'BTT_FlankBegin_C_CalcFlankPoint::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(BTT_FlankBegin_C_CalcFlankPoint, CallFunc_BreakVector_Z_2) == 0x000130, "Member 'BTT_FlankBegin_C_CalcFlankPoint::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(BTT_FlankBegin_C_CalcFlankPoint, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000138, "Member 'BTT_FlankBegin_C_CalcFlankPoint::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_FlankBegin_C_CalcFlankPoint, CallFunc_MakeVector_ReturnValue_1) == 0x000140, "Member 'BTT_FlankBegin_C_CalcFlankPoint::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTT_FlankBegin_C_CalcFlankPoint, CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast) == 0x000158, "Member 'BTT_FlankBegin_C_CalcFlankPoint::CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast' has a wrong offset!");

// Function BTT_FlankBegin.BTT_FlankBegin_C.ExecuteUbergraph_BTT_FlankBegin
// 0x0058 (0x0058 - 0x0000)
struct BTT_FlankBegin_C_ExecuteUbergraph_BTT_FlankBegin final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RandomBool_ReturnValue;                   // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_Event_OwnerController;                      // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn;                       // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_Tgf_Monster_C*                      K2Node_DynamicCast_AsBP_Tgf_Monster;               // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Setup_Flank_Path_Result;                  // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RandomBool_ReturnValue_1;                 // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetBlackboardValueAsFloat_Value_ImplicitCast; // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_FlankBegin_C_ExecuteUbergraph_BTT_FlankBegin) == 0x000008, "Wrong alignment on BTT_FlankBegin_C_ExecuteUbergraph_BTT_FlankBegin");
static_assert(sizeof(BTT_FlankBegin_C_ExecuteUbergraph_BTT_FlankBegin) == 0x000058, "Wrong size on BTT_FlankBegin_C_ExecuteUbergraph_BTT_FlankBegin");
static_assert(offsetof(BTT_FlankBegin_C_ExecuteUbergraph_BTT_FlankBegin, EntryPoint) == 0x000000, "Member 'BTT_FlankBegin_C_ExecuteUbergraph_BTT_FlankBegin::EntryPoint' has a wrong offset!");
static_assert(offsetof(BTT_FlankBegin_C_ExecuteUbergraph_BTT_FlankBegin, CallFunc_RandomBool_ReturnValue) == 0x000004, "Member 'BTT_FlankBegin_C_ExecuteUbergraph_BTT_FlankBegin::CallFunc_RandomBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_FlankBegin_C_ExecuteUbergraph_BTT_FlankBegin, CallFunc_Greater_IntInt_ReturnValue) == 0x000005, "Member 'BTT_FlankBegin_C_ExecuteUbergraph_BTT_FlankBegin::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_FlankBegin_C_ExecuteUbergraph_BTT_FlankBegin, CallFunc_SelectInt_ReturnValue) == 0x000008, "Member 'BTT_FlankBegin_C_ExecuteUbergraph_BTT_FlankBegin::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_FlankBegin_C_ExecuteUbergraph_BTT_FlankBegin, K2Node_Event_OwnerController) == 0x000010, "Member 'BTT_FlankBegin_C_ExecuteUbergraph_BTT_FlankBegin::K2Node_Event_OwnerController' has a wrong offset!");
static_assert(offsetof(BTT_FlankBegin_C_ExecuteUbergraph_BTT_FlankBegin, K2Node_Event_ControlledPawn) == 0x000018, "Member 'BTT_FlankBegin_C_ExecuteUbergraph_BTT_FlankBegin::K2Node_Event_ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTT_FlankBegin_C_ExecuteUbergraph_BTT_FlankBegin, K2Node_DynamicCast_AsBP_Tgf_Monster) == 0x000020, "Member 'BTT_FlankBegin_C_ExecuteUbergraph_BTT_FlankBegin::K2Node_DynamicCast_AsBP_Tgf_Monster' has a wrong offset!");
static_assert(offsetof(BTT_FlankBegin_C_ExecuteUbergraph_BTT_FlankBegin, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BTT_FlankBegin_C_ExecuteUbergraph_BTT_FlankBegin::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BTT_FlankBegin_C_ExecuteUbergraph_BTT_FlankBegin, CallFunc_Setup_Flank_Path_Result) == 0x000029, "Member 'BTT_FlankBegin_C_ExecuteUbergraph_BTT_FlankBegin::CallFunc_Setup_Flank_Path_Result' has a wrong offset!");
static_assert(offsetof(BTT_FlankBegin_C_ExecuteUbergraph_BTT_FlankBegin, CallFunc_RandomFloatInRange_ReturnValue) == 0x000030, "Member 'BTT_FlankBegin_C_ExecuteUbergraph_BTT_FlankBegin::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_FlankBegin_C_ExecuteUbergraph_BTT_FlankBegin, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'BTT_FlankBegin_C_ExecuteUbergraph_BTT_FlankBegin::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_FlankBegin_C_ExecuteUbergraph_BTT_FlankBegin, CallFunc_Multiply_IntInt_ReturnValue) == 0x00003C, "Member 'BTT_FlankBegin_C_ExecuteUbergraph_BTT_FlankBegin::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_FlankBegin_C_ExecuteUbergraph_BTT_FlankBegin, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'BTT_FlankBegin_C_ExecuteUbergraph_BTT_FlankBegin::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_FlankBegin_C_ExecuteUbergraph_BTT_FlankBegin, CallFunc_RandomBool_ReturnValue_1) == 0x000044, "Member 'BTT_FlankBegin_C_ExecuteUbergraph_BTT_FlankBegin::CallFunc_RandomBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTT_FlankBegin_C_ExecuteUbergraph_BTT_FlankBegin, CallFunc_SelectFloat_ReturnValue) == 0x000048, "Member 'BTT_FlankBegin_C_ExecuteUbergraph_BTT_FlankBegin::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_FlankBegin_C_ExecuteUbergraph_BTT_FlankBegin, CallFunc_SetBlackboardValueAsFloat_Value_ImplicitCast) == 0x000050, "Member 'BTT_FlankBegin_C_ExecuteUbergraph_BTT_FlankBegin::CallFunc_SetBlackboardValueAsFloat_Value_ImplicitCast' has a wrong offset!");

// Function BTT_FlankBegin.BTT_FlankBegin_C.ReceiveExecuteAI
// 0x0010 (0x0010 - 0x0000)
struct BTT_FlankBegin_C_ReceiveExecuteAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_FlankBegin_C_ReceiveExecuteAI) == 0x000008, "Wrong alignment on BTT_FlankBegin_C_ReceiveExecuteAI");
static_assert(sizeof(BTT_FlankBegin_C_ReceiveExecuteAI) == 0x000010, "Wrong size on BTT_FlankBegin_C_ReceiveExecuteAI");
static_assert(offsetof(BTT_FlankBegin_C_ReceiveExecuteAI, OwnerController) == 0x000000, "Member 'BTT_FlankBegin_C_ReceiveExecuteAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTT_FlankBegin_C_ReceiveExecuteAI, ControlledPawn) == 0x000008, "Member 'BTT_FlankBegin_C_ReceiveExecuteAI::ControlledPawn' has a wrong offset!");

// Function BTT_FlankBegin.BTT_FlankBegin_C.Setup Flank Path
// 0x0090 (0x0090 - 0x0000)
struct BTT_FlankBegin_C_Setup_Flank_Path final
{
public:
	class ABP_Tgf_Monster_C*                      Monster;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Point;                                             // 0x0010(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetBlackboardValueAsActor_ReturnValue;    // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52[0x6];                                       // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_CalcFlankPoint_Point;                     // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_FlankBegin_C_Setup_Flank_Path) == 0x000008, "Wrong alignment on BTT_FlankBegin_C_Setup_Flank_Path");
static_assert(sizeof(BTT_FlankBegin_C_Setup_Flank_Path) == 0x000090, "Wrong size on BTT_FlankBegin_C_Setup_Flank_Path");
static_assert(offsetof(BTT_FlankBegin_C_Setup_Flank_Path, Monster) == 0x000000, "Member 'BTT_FlankBegin_C_Setup_Flank_Path::Monster' has a wrong offset!");
static_assert(offsetof(BTT_FlankBegin_C_Setup_Flank_Path, Result) == 0x000008, "Member 'BTT_FlankBegin_C_Setup_Flank_Path::Result' has a wrong offset!");
static_assert(offsetof(BTT_FlankBegin_C_Setup_Flank_Path, Point) == 0x000010, "Member 'BTT_FlankBegin_C_Setup_Flank_Path::Point' has a wrong offset!");
static_assert(offsetof(BTT_FlankBegin_C_Setup_Flank_Path, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000028, "Member 'BTT_FlankBegin_C_Setup_Flank_Path::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_FlankBegin_C_Setup_Flank_Path, CallFunc_Array_Add_ReturnValue) == 0x000040, "Member 'BTT_FlankBegin_C_Setup_Flank_Path::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_FlankBegin_C_Setup_Flank_Path, Temp_int_Variable) == 0x000044, "Member 'BTT_FlankBegin_C_Setup_Flank_Path::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BTT_FlankBegin_C_Setup_Flank_Path, CallFunc_GetBlackboardValueAsActor_ReturnValue) == 0x000048, "Member 'BTT_FlankBegin_C_Setup_Flank_Path::CallFunc_GetBlackboardValueAsActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_FlankBegin_C_Setup_Flank_Path, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000050, "Member 'BTT_FlankBegin_C_Setup_Flank_Path::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_FlankBegin_C_Setup_Flank_Path, CallFunc_IsValid_ReturnValue) == 0x000051, "Member 'BTT_FlankBegin_C_Setup_Flank_Path::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_FlankBegin_C_Setup_Flank_Path, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000058, "Member 'BTT_FlankBegin_C_Setup_Flank_Path::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTT_FlankBegin_C_Setup_Flank_Path, CallFunc_Add_IntInt_ReturnValue) == 0x000070, "Member 'BTT_FlankBegin_C_Setup_Flank_Path::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_FlankBegin_C_Setup_Flank_Path, CallFunc_CalcFlankPoint_Point) == 0x000078, "Member 'BTT_FlankBegin_C_Setup_Flank_Path::CallFunc_CalcFlankPoint_Point' has a wrong offset!");

}

