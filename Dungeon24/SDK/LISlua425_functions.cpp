#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LISlua425

#include "Basic.hpp"

#include "LISlua425_classes.hpp"
#include "LISlua425_parameters.hpp"


namespace SDK
{

// Function LISlua425.INTLLatentDelegate.OnLatentCallback
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ThreadRef                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UINTLLatentDelegate::OnLatentCallback(int32 ThreadRef)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTLLatentDelegate", "OnLatentCallback");

	Params::INTLLatentDelegate_OnLatentCallback Parms{};

	Parms.ThreadRef = ThreadRef;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LISlua425.INTLLuaActor.CallLuaMember
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           FunctionName                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FINTLLuaBPVar>            Args                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FINTLLuaBPVar                    ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FINTLLuaBPVar AINTLLuaActor::CallLuaMember(const class FString& FunctionName, const TArray<struct FINTLLuaBPVar>& Args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTLLuaActor", "CallLuaMember");

	Params::INTLLuaActor_CallLuaMember Parms{};

	Parms.FunctionName = std::move(FunctionName);
	Parms.Args = std::move(Args);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LISlua425.INTLLuaPawn.CallLuaMember
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           FunctionName                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FINTLLuaBPVar>            Args                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FINTLLuaBPVar                    ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FINTLLuaBPVar AINTLLuaPawn::CallLuaMember(const class FString& FunctionName, const TArray<struct FINTLLuaBPVar>& Args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTLLuaPawn", "CallLuaMember");

	Params::INTLLuaPawn_CallLuaMember Parms{};

	Parms.FunctionName = std::move(FunctionName);
	Parms.Args = std::move(Args);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LISlua425.INTLLuaCharacter.CallLuaMember
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           FunctionName                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FINTLLuaBPVar>            Args                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FINTLLuaBPVar                    ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FINTLLuaBPVar AINTLLuaCharacter::CallLuaMember(const class FString& FunctionName, const TArray<struct FINTLLuaBPVar>& Args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTLLuaCharacter", "CallLuaMember");

	Params::INTLLuaCharacter_CallLuaMember Parms{};

	Parms.FunctionName = std::move(FunctionName);
	Parms.Args = std::move(Args);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LISlua425.INTLLuaController.CallLuaMember
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           FunctionName                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FINTLLuaBPVar>            Args                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FINTLLuaBPVar                    ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FINTLLuaBPVar AINTLLuaController::CallLuaMember(const class FString& FunctionName, const TArray<struct FINTLLuaBPVar>& Args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTLLuaController", "CallLuaMember");

	Params::INTLLuaController_CallLuaMember Parms{};

	Parms.FunctionName = std::move(FunctionName);
	Parms.Args = std::move(Args);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LISlua425.INTLLuaPlayerController.CallLuaMember
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           FunctionName                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FINTLLuaBPVar>            Args                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FINTLLuaBPVar                    ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FINTLLuaBPVar AINTLLuaPlayerController::CallLuaMember(const class FString& FunctionName, const TArray<struct FINTLLuaBPVar>& Args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTLLuaPlayerController", "CallLuaMember");

	Params::INTLLuaPlayerController_CallLuaMember Parms{};

	Parms.FunctionName = std::move(FunctionName);
	Parms.Args = std::move(Args);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LISlua425.INTLLuaActorComponent.CallLuaMember
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           FunctionName                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FINTLLuaBPVar>            Args                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FINTLLuaBPVar                    ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FINTLLuaBPVar UINTLLuaActorComponent::CallLuaMember(const class FString& FunctionName, const TArray<struct FINTLLuaBPVar>& Args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTLLuaActorComponent", "CallLuaMember");

	Params::INTLLuaActorComponent_CallLuaMember Parms{};

	Parms.FunctionName = std::move(FunctionName);
	Parms.Args = std::move(Args);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LISlua425.INTLLuaGameModeBase.CallLuaMember
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           FunctionName                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FINTLLuaBPVar>            Args                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FINTLLuaBPVar                    ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FINTLLuaBPVar AINTLLuaGameModeBase::CallLuaMember(const class FString& FunctionName, const TArray<struct FINTLLuaBPVar>& Args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTLLuaGameModeBase", "CallLuaMember");

	Params::INTLLuaGameModeBase_CallLuaMember Parms{};

	Parms.FunctionName = std::move(FunctionName);
	Parms.Args = std::move(Args);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LISlua425.INTLLuaHUD.CallLuaMember
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           FunctionName                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FINTLLuaBPVar>            Args                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FINTLLuaBPVar                    ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FINTLLuaBPVar AINTLLuaHUD::CallLuaMember(const class FString& FunctionName, const TArray<struct FINTLLuaBPVar>& Args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTLLuaHUD", "CallLuaMember");

	Params::INTLLuaHUD_CallLuaMember Parms{};

	Parms.FunctionName = std::move(FunctionName);
	Parms.Args = std::move(Args);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LISlua425.INTLLuaBlueprintLibrary.CallToLua
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           FunctionName                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           StateName                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FINTLLuaBPVar                    ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FINTLLuaBPVar UINTLLuaBlueprintLibrary::CallToLua(class UObject* WorldContextObject, const class FString& FunctionName, const class FString& StateName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("INTLLuaBlueprintLibrary", "CallToLua");

	Params::INTLLuaBlueprintLibrary_CallToLua Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.FunctionName = std::move(FunctionName);
	Parms.StateName = std::move(StateName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LISlua425.INTLLuaBlueprintLibrary.CallToLuaWithArgs
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           FunctionName                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FINTLLuaBPVar>            Args                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// class FString                           StateName                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FINTLLuaBPVar                    ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FINTLLuaBPVar UINTLLuaBlueprintLibrary::CallToLuaWithArgs(class UObject* WorldContextObject, const class FString& FunctionName, const TArray<struct FINTLLuaBPVar>& Args, const class FString& StateName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("INTLLuaBlueprintLibrary", "CallToLuaWithArgs");

	Params::INTLLuaBlueprintLibrary_CallToLuaWithArgs Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.FunctionName = std::move(FunctionName);
	Parms.Args = std::move(Args);
	Parms.StateName = std::move(StateName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LISlua425.INTLLuaBlueprintLibrary.CreateVarFromBool
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FINTLLuaBPVar                    ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FINTLLuaBPVar UINTLLuaBlueprintLibrary::CreateVarFromBool(bool Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("INTLLuaBlueprintLibrary", "CreateVarFromBool");

	Params::INTLLuaBlueprintLibrary_CreateVarFromBool Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LISlua425.INTLLuaBlueprintLibrary.CreateVarFromInt
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FINTLLuaBPVar                    ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FINTLLuaBPVar UINTLLuaBlueprintLibrary::CreateVarFromInt(int32 Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("INTLLuaBlueprintLibrary", "CreateVarFromInt");

	Params::INTLLuaBlueprintLibrary_CreateVarFromInt Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LISlua425.INTLLuaBlueprintLibrary.CreateVarFromNumber
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FINTLLuaBPVar                    ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FINTLLuaBPVar UINTLLuaBlueprintLibrary::CreateVarFromNumber(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("INTLLuaBlueprintLibrary", "CreateVarFromNumber");

	Params::INTLLuaBlueprintLibrary_CreateVarFromNumber Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LISlua425.INTLLuaBlueprintLibrary.CreateVarFromObject
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          Value                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FINTLLuaBPVar                    ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FINTLLuaBPVar UINTLLuaBlueprintLibrary::CreateVarFromObject(class UObject* WorldContextObject, class UObject* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("INTLLuaBlueprintLibrary", "CreateVarFromObject");

	Params::INTLLuaBlueprintLibrary_CreateVarFromObject Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LISlua425.INTLLuaBlueprintLibrary.CreateVarFromString
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           Value                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FINTLLuaBPVar                    ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FINTLLuaBPVar UINTLLuaBlueprintLibrary::CreateVarFromString(const class FString& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("INTLLuaBlueprintLibrary", "CreateVarFromString");

	Params::INTLLuaBlueprintLibrary_CreateVarFromString Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LISlua425.INTLLuaBlueprintLibrary.GetBoolFromVar
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FINTLLuaBPVar                    Value                                                  (Parm, NativeAccessSpecifierPublic)
// int32                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UINTLLuaBlueprintLibrary::GetBoolFromVar(const struct FINTLLuaBPVar& Value, int32 Param_Index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("INTLLuaBlueprintLibrary", "GetBoolFromVar");

	Params::INTLLuaBlueprintLibrary_GetBoolFromVar Parms{};

	Parms.Value = std::move(Value);
	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LISlua425.INTLLuaBlueprintLibrary.GetIntFromVar
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FINTLLuaBPVar                    Value                                                  (Parm, NativeAccessSpecifierPublic)
// int32                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UINTLLuaBlueprintLibrary::GetIntFromVar(const struct FINTLLuaBPVar& Value, int32 Param_Index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("INTLLuaBlueprintLibrary", "GetIntFromVar");

	Params::INTLLuaBlueprintLibrary_GetIntFromVar Parms{};

	Parms.Value = std::move(Value);
	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LISlua425.INTLLuaBlueprintLibrary.GetNumberFromVar
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FINTLLuaBPVar                    Value                                                  (Parm, NativeAccessSpecifierPublic)
// int32                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UINTLLuaBlueprintLibrary::GetNumberFromVar(const struct FINTLLuaBPVar& Value, int32 Param_Index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("INTLLuaBlueprintLibrary", "GetNumberFromVar");

	Params::INTLLuaBlueprintLibrary_GetNumberFromVar Parms{};

	Parms.Value = std::move(Value);
	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LISlua425.INTLLuaBlueprintLibrary.GetObjectFromVar
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FINTLLuaBPVar                    Value                                                  (Parm, NativeAccessSpecifierPublic)
// int32                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UObject* UINTLLuaBlueprintLibrary::GetObjectFromVar(const struct FINTLLuaBPVar& Value, int32 Param_Index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("INTLLuaBlueprintLibrary", "GetObjectFromVar");

	Params::INTLLuaBlueprintLibrary_GetObjectFromVar Parms{};

	Parms.Value = std::move(Value);
	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LISlua425.INTLLuaBlueprintLibrary.GetStringFromVar
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FINTLLuaBPVar                    Value                                                  (Parm, NativeAccessSpecifierPublic)
// int32                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UINTLLuaBlueprintLibrary::GetStringFromVar(const struct FINTLLuaBPVar& Value, int32 Param_Index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("INTLLuaBlueprintLibrary", "GetStringFromVar");

	Params::INTLLuaBlueprintLibrary_GetStringFromVar Parms{};

	Parms.Value = std::move(Value);
	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LISlua425.INTLLuaDelegate.EventTrigger
// (Final, Native, Public, BlueprintCallable)

void UINTLLuaDelegate::EventTrigger()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTLLuaDelegate", "EventTrigger");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function LISlua425.INTLLuaUserWidget.CallLuaMember
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           FunctionName                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FINTLLuaBPVar>            Args                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FINTLLuaBPVar                    ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FINTLLuaBPVar UINTLLuaUserWidget::CallLuaMember(const class FString& FunctionName, const TArray<struct FINTLLuaBPVar>& Args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTLLuaUserWidget", "CallLuaMember");

	Params::INTLLuaUserWidget_CallLuaMember Parms{};

	Parms.FunctionName = std::move(FunctionName);
	Parms.Args = std::move(Args);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

