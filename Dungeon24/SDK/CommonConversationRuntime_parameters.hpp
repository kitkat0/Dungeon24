#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CommonConversationRuntime

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "CommonConversationRuntime_structs.hpp"


namespace SDK::Params
{

// Function CommonConversationRuntime.ConversationNode.GetDebugParticipantColor
// 0x0018 (0x0018 - 0x0000)
struct ConversationNode_GetDebugParticipantColor final
{
public:
	struct FGameplayTag                           ParticipantID;                                     // 0x0000(0x0008)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ConversationNode_GetDebugParticipantColor) == 0x000004, "Wrong alignment on ConversationNode_GetDebugParticipantColor");
static_assert(sizeof(ConversationNode_GetDebugParticipantColor) == 0x000018, "Wrong size on ConversationNode_GetDebugParticipantColor");
static_assert(offsetof(ConversationNode_GetDebugParticipantColor, ParticipantID) == 0x000000, "Member 'ConversationNode_GetDebugParticipantColor::ParticipantID' has a wrong offset!");
static_assert(offsetof(ConversationNode_GetDebugParticipantColor, ReturnValue) == 0x000008, "Member 'ConversationNode_GetDebugParticipantColor::ReturnValue' has a wrong offset!");

// Function CommonConversationRuntime.ConversationChoiceNode.FillChoice
// 0x00A8 (0x00A8 - 0x0000)
struct ConversationChoiceNode_FillChoice final
{
public:
	struct FConversationContext                   Context;                                           // 0x0000(0x0038)(ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FClientConversationOptionEntry         ChoiceEntry;                                       // 0x0038(0x0070)(Parm, OutParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ConversationChoiceNode_FillChoice) == 0x000008, "Wrong alignment on ConversationChoiceNode_FillChoice");
static_assert(sizeof(ConversationChoiceNode_FillChoice) == 0x0000A8, "Wrong size on ConversationChoiceNode_FillChoice");
static_assert(offsetof(ConversationChoiceNode_FillChoice, Context) == 0x000000, "Member 'ConversationChoiceNode_FillChoice::Context' has a wrong offset!");
static_assert(offsetof(ConversationChoiceNode_FillChoice, ChoiceEntry) == 0x000038, "Member 'ConversationChoiceNode_FillChoice::ChoiceEntry' has a wrong offset!");

// Function CommonConversationRuntime.ConversationContextHelpers.AbortConversation
// 0x00B8 (0x00B8 - 0x0000)
struct ConversationContextHelpers_AbortConversation final
{
public:
	struct FConversationContext                   Context;                                           // 0x0000(0x0038)(ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FConversationTaskResult                ReturnValue;                                       // 0x0038(0x0080)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ConversationContextHelpers_AbortConversation) == 0x000008, "Wrong alignment on ConversationContextHelpers_AbortConversation");
static_assert(sizeof(ConversationContextHelpers_AbortConversation) == 0x0000B8, "Wrong size on ConversationContextHelpers_AbortConversation");
static_assert(offsetof(ConversationContextHelpers_AbortConversation, Context) == 0x000000, "Member 'ConversationContextHelpers_AbortConversation::Context' has a wrong offset!");
static_assert(offsetof(ConversationContextHelpers_AbortConversation, ReturnValue) == 0x000038, "Member 'ConversationContextHelpers_AbortConversation::ReturnValue' has a wrong offset!");

// Function CommonConversationRuntime.ConversationContextHelpers.AdvanceConversation
// 0x00B8 (0x00B8 - 0x0000)
struct ConversationContextHelpers_AdvanceConversation final
{
public:
	struct FConversationContext                   Context;                                           // 0x0000(0x0038)(ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FConversationTaskResult                ReturnValue;                                       // 0x0038(0x0080)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ConversationContextHelpers_AdvanceConversation) == 0x000008, "Wrong alignment on ConversationContextHelpers_AdvanceConversation");
static_assert(sizeof(ConversationContextHelpers_AdvanceConversation) == 0x0000B8, "Wrong size on ConversationContextHelpers_AdvanceConversation");
static_assert(offsetof(ConversationContextHelpers_AdvanceConversation, Context) == 0x000000, "Member 'ConversationContextHelpers_AdvanceConversation::Context' has a wrong offset!");
static_assert(offsetof(ConversationContextHelpers_AdvanceConversation, ReturnValue) == 0x000038, "Member 'ConversationContextHelpers_AdvanceConversation::ReturnValue' has a wrong offset!");

// Function CommonConversationRuntime.ConversationContextHelpers.AdvanceConversationWithChoice
// 0x00E8 (0x00E8 - 0x0000)
struct ConversationContextHelpers_AdvanceConversationWithChoice final
{
public:
	struct FConversationContext                   Context;                                           // 0x0000(0x0038)(ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FAdvanceConversationRequest            Choice;                                            // 0x0038(0x0030)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FConversationTaskResult                ReturnValue;                                       // 0x0068(0x0080)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ConversationContextHelpers_AdvanceConversationWithChoice) == 0x000008, "Wrong alignment on ConversationContextHelpers_AdvanceConversationWithChoice");
static_assert(sizeof(ConversationContextHelpers_AdvanceConversationWithChoice) == 0x0000E8, "Wrong size on ConversationContextHelpers_AdvanceConversationWithChoice");
static_assert(offsetof(ConversationContextHelpers_AdvanceConversationWithChoice, Context) == 0x000000, "Member 'ConversationContextHelpers_AdvanceConversationWithChoice::Context' has a wrong offset!");
static_assert(offsetof(ConversationContextHelpers_AdvanceConversationWithChoice, Choice) == 0x000038, "Member 'ConversationContextHelpers_AdvanceConversationWithChoice::Choice' has a wrong offset!");
static_assert(offsetof(ConversationContextHelpers_AdvanceConversationWithChoice, ReturnValue) == 0x000068, "Member 'ConversationContextHelpers_AdvanceConversationWithChoice::ReturnValue' has a wrong offset!");

// Function CommonConversationRuntime.ConversationContextHelpers.CanConversationContinue
// 0x0088 (0x0088 - 0x0000)
struct ConversationContextHelpers_CanConversationContinue final
{
public:
	struct FConversationTaskResult                ConversationTasResult;                             // 0x0000(0x0080)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0080(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ConversationContextHelpers_CanConversationContinue) == 0x000008, "Wrong alignment on ConversationContextHelpers_CanConversationContinue");
static_assert(sizeof(ConversationContextHelpers_CanConversationContinue) == 0x000088, "Wrong size on ConversationContextHelpers_CanConversationContinue");
static_assert(offsetof(ConversationContextHelpers_CanConversationContinue, ConversationTasResult) == 0x000000, "Member 'ConversationContextHelpers_CanConversationContinue::ConversationTasResult' has a wrong offset!");
static_assert(offsetof(ConversationContextHelpers_CanConversationContinue, ReturnValue) == 0x000080, "Member 'ConversationContextHelpers_CanConversationContinue::ReturnValue' has a wrong offset!");

// Function CommonConversationRuntime.ConversationContextHelpers.FindConversationComponent
// 0x0010 (0x0010 - 0x0000)
struct ConversationContextHelpers_FindConversationComponent final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UConversationParticipantComponent*      ReturnValue;                                       // 0x0008(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ConversationContextHelpers_FindConversationComponent) == 0x000008, "Wrong alignment on ConversationContextHelpers_FindConversationComponent");
static_assert(sizeof(ConversationContextHelpers_FindConversationComponent) == 0x000010, "Wrong size on ConversationContextHelpers_FindConversationComponent");
static_assert(offsetof(ConversationContextHelpers_FindConversationComponent, Actor) == 0x000000, "Member 'ConversationContextHelpers_FindConversationComponent::Actor' has a wrong offset!");
static_assert(offsetof(ConversationContextHelpers_FindConversationComponent, ReturnValue) == 0x000008, "Member 'ConversationContextHelpers_FindConversationComponent::ReturnValue' has a wrong offset!");

// Function CommonConversationRuntime.ConversationContextHelpers.GetConversationInstance
// 0x0040 (0x0040 - 0x0000)
struct ConversationContextHelpers_GetConversationInstance final
{
public:
	struct FConversationContext                   Context;                                           // 0x0000(0x0038)(ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class UConversationInstance*                  ReturnValue;                                       // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ConversationContextHelpers_GetConversationInstance) == 0x000008, "Wrong alignment on ConversationContextHelpers_GetConversationInstance");
static_assert(sizeof(ConversationContextHelpers_GetConversationInstance) == 0x000040, "Wrong size on ConversationContextHelpers_GetConversationInstance");
static_assert(offsetof(ConversationContextHelpers_GetConversationInstance, Context) == 0x000000, "Member 'ConversationContextHelpers_GetConversationInstance::Context' has a wrong offset!");
static_assert(offsetof(ConversationContextHelpers_GetConversationInstance, ReturnValue) == 0x000038, "Member 'ConversationContextHelpers_GetConversationInstance::ReturnValue' has a wrong offset!");

// Function CommonConversationRuntime.ConversationContextHelpers.GetConversationParticipant
// 0x0048 (0x0048 - 0x0000)
struct ConversationContextHelpers_GetConversationParticipant final
{
public:
	struct FConversationContext                   Context;                                           // 0x0000(0x0038)(ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FGameplayTag                           ParticipantTag;                                    // 0x0038(0x0008)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UConversationParticipantComponent*      ReturnValue;                                       // 0x0040(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ConversationContextHelpers_GetConversationParticipant) == 0x000008, "Wrong alignment on ConversationContextHelpers_GetConversationParticipant");
static_assert(sizeof(ConversationContextHelpers_GetConversationParticipant) == 0x000048, "Wrong size on ConversationContextHelpers_GetConversationParticipant");
static_assert(offsetof(ConversationContextHelpers_GetConversationParticipant, Context) == 0x000000, "Member 'ConversationContextHelpers_GetConversationParticipant::Context' has a wrong offset!");
static_assert(offsetof(ConversationContextHelpers_GetConversationParticipant, ParticipantTag) == 0x000038, "Member 'ConversationContextHelpers_GetConversationParticipant::ParticipantTag' has a wrong offset!");
static_assert(offsetof(ConversationContextHelpers_GetConversationParticipant, ReturnValue) == 0x000040, "Member 'ConversationContextHelpers_GetConversationParticipant::ReturnValue' has a wrong offset!");

// Function CommonConversationRuntime.ConversationContextHelpers.GetConversationParticipantActor
// 0x0048 (0x0048 - 0x0000)
struct ConversationContextHelpers_GetConversationParticipantActor final
{
public:
	struct FConversationContext                   Context;                                           // 0x0000(0x0038)(ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FGameplayTag                           ParticipantTag;                                    // 0x0038(0x0008)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ConversationContextHelpers_GetConversationParticipantActor) == 0x000008, "Wrong alignment on ConversationContextHelpers_GetConversationParticipantActor");
static_assert(sizeof(ConversationContextHelpers_GetConversationParticipantActor) == 0x000048, "Wrong size on ConversationContextHelpers_GetConversationParticipantActor");
static_assert(offsetof(ConversationContextHelpers_GetConversationParticipantActor, Context) == 0x000000, "Member 'ConversationContextHelpers_GetConversationParticipantActor::Context' has a wrong offset!");
static_assert(offsetof(ConversationContextHelpers_GetConversationParticipantActor, ParticipantTag) == 0x000038, "Member 'ConversationContextHelpers_GetConversationParticipantActor::ParticipantTag' has a wrong offset!");
static_assert(offsetof(ConversationContextHelpers_GetConversationParticipantActor, ReturnValue) == 0x000040, "Member 'ConversationContextHelpers_GetConversationParticipantActor::ReturnValue' has a wrong offset!");

// Function CommonConversationRuntime.ConversationContextHelpers.GetCurrentConversationNodeHandle
// 0x0048 (0x0048 - 0x0000)
struct ConversationContextHelpers_GetCurrentConversationNodeHandle final
{
public:
	struct FConversationContext                   Context;                                           // 0x0000(0x0038)(ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FConversationNodeHandle                ReturnValue;                                       // 0x0038(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ConversationContextHelpers_GetCurrentConversationNodeHandle) == 0x000008, "Wrong alignment on ConversationContextHelpers_GetCurrentConversationNodeHandle");
static_assert(sizeof(ConversationContextHelpers_GetCurrentConversationNodeHandle) == 0x000048, "Wrong size on ConversationContextHelpers_GetCurrentConversationNodeHandle");
static_assert(offsetof(ConversationContextHelpers_GetCurrentConversationNodeHandle, Context) == 0x000000, "Member 'ConversationContextHelpers_GetCurrentConversationNodeHandle::Context' has a wrong offset!");
static_assert(offsetof(ConversationContextHelpers_GetCurrentConversationNodeHandle, ReturnValue) == 0x000038, "Member 'ConversationContextHelpers_GetCurrentConversationNodeHandle::ReturnValue' has a wrong offset!");

// Function CommonConversationRuntime.ConversationContextHelpers.MakeConversationParticipant
// 0x0048 (0x0048 - 0x0000)
struct ConversationContextHelpers_MakeConversationParticipant final
{
public:
	struct FConversationContext                   Context;                                           // 0x0000(0x0038)(ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class AActor*                                 ParticipantActor;                                  // 0x0038(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                           ParticipantTag;                                    // 0x0040(0x0008)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ConversationContextHelpers_MakeConversationParticipant) == 0x000008, "Wrong alignment on ConversationContextHelpers_MakeConversationParticipant");
static_assert(sizeof(ConversationContextHelpers_MakeConversationParticipant) == 0x000048, "Wrong size on ConversationContextHelpers_MakeConversationParticipant");
static_assert(offsetof(ConversationContextHelpers_MakeConversationParticipant, Context) == 0x000000, "Member 'ConversationContextHelpers_MakeConversationParticipant::Context' has a wrong offset!");
static_assert(offsetof(ConversationContextHelpers_MakeConversationParticipant, ParticipantActor) == 0x000038, "Member 'ConversationContextHelpers_MakeConversationParticipant::ParticipantActor' has a wrong offset!");
static_assert(offsetof(ConversationContextHelpers_MakeConversationParticipant, ParticipantTag) == 0x000040, "Member 'ConversationContextHelpers_MakeConversationParticipant::ParticipantTag' has a wrong offset!");

// Function CommonConversationRuntime.ConversationContextHelpers.PauseConversationAndSendClientChoices
// 0x0100 (0x0100 - 0x0000)
struct ConversationContextHelpers_PauseConversationAndSendClientChoices final
{
public:
	struct FConversationContext                   Context;                                           // 0x0000(0x0038)(ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FClientConversationMessage             Message;                                           // 0x0038(0x0048)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FConversationTaskResult                ReturnValue;                                       // 0x0080(0x0080)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ConversationContextHelpers_PauseConversationAndSendClientChoices) == 0x000008, "Wrong alignment on ConversationContextHelpers_PauseConversationAndSendClientChoices");
static_assert(sizeof(ConversationContextHelpers_PauseConversationAndSendClientChoices) == 0x000100, "Wrong size on ConversationContextHelpers_PauseConversationAndSendClientChoices");
static_assert(offsetof(ConversationContextHelpers_PauseConversationAndSendClientChoices, Context) == 0x000000, "Member 'ConversationContextHelpers_PauseConversationAndSendClientChoices::Context' has a wrong offset!");
static_assert(offsetof(ConversationContextHelpers_PauseConversationAndSendClientChoices, Message) == 0x000038, "Member 'ConversationContextHelpers_PauseConversationAndSendClientChoices::Message' has a wrong offset!");
static_assert(offsetof(ConversationContextHelpers_PauseConversationAndSendClientChoices, ReturnValue) == 0x000080, "Member 'ConversationContextHelpers_PauseConversationAndSendClientChoices::ReturnValue' has a wrong offset!");

// Function CommonConversationRuntime.ConversationContextHelpers.ReturnToConversationStart
// 0x00B8 (0x00B8 - 0x0000)
struct ConversationContextHelpers_ReturnToConversationStart final
{
public:
	struct FConversationContext                   Context;                                           // 0x0000(0x0038)(ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FConversationTaskResult                ReturnValue;                                       // 0x0038(0x0080)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ConversationContextHelpers_ReturnToConversationStart) == 0x000008, "Wrong alignment on ConversationContextHelpers_ReturnToConversationStart");
static_assert(sizeof(ConversationContextHelpers_ReturnToConversationStart) == 0x0000B8, "Wrong size on ConversationContextHelpers_ReturnToConversationStart");
static_assert(offsetof(ConversationContextHelpers_ReturnToConversationStart, Context) == 0x000000, "Member 'ConversationContextHelpers_ReturnToConversationStart::Context' has a wrong offset!");
static_assert(offsetof(ConversationContextHelpers_ReturnToConversationStart, ReturnValue) == 0x000038, "Member 'ConversationContextHelpers_ReturnToConversationStart::ReturnValue' has a wrong offset!");

// Function CommonConversationRuntime.ConversationContextHelpers.ReturnToCurrentClientChoice
// 0x00B8 (0x00B8 - 0x0000)
struct ConversationContextHelpers_ReturnToCurrentClientChoice final
{
public:
	struct FConversationContext                   Context;                                           // 0x0000(0x0038)(ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FConversationTaskResult                ReturnValue;                                       // 0x0038(0x0080)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ConversationContextHelpers_ReturnToCurrentClientChoice) == 0x000008, "Wrong alignment on ConversationContextHelpers_ReturnToCurrentClientChoice");
static_assert(sizeof(ConversationContextHelpers_ReturnToCurrentClientChoice) == 0x0000B8, "Wrong size on ConversationContextHelpers_ReturnToCurrentClientChoice");
static_assert(offsetof(ConversationContextHelpers_ReturnToCurrentClientChoice, Context) == 0x000000, "Member 'ConversationContextHelpers_ReturnToCurrentClientChoice::Context' has a wrong offset!");
static_assert(offsetof(ConversationContextHelpers_ReturnToCurrentClientChoice, ReturnValue) == 0x000038, "Member 'ConversationContextHelpers_ReturnToCurrentClientChoice::ReturnValue' has a wrong offset!");

// Function CommonConversationRuntime.ConversationContextHelpers.ReturnToLastClientChoice
// 0x00B8 (0x00B8 - 0x0000)
struct ConversationContextHelpers_ReturnToLastClientChoice final
{
public:
	struct FConversationContext                   Context;                                           // 0x0000(0x0038)(ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FConversationTaskResult                ReturnValue;                                       // 0x0038(0x0080)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ConversationContextHelpers_ReturnToLastClientChoice) == 0x000008, "Wrong alignment on ConversationContextHelpers_ReturnToLastClientChoice");
static_assert(sizeof(ConversationContextHelpers_ReturnToLastClientChoice) == 0x0000B8, "Wrong size on ConversationContextHelpers_ReturnToLastClientChoice");
static_assert(offsetof(ConversationContextHelpers_ReturnToLastClientChoice, Context) == 0x000000, "Member 'ConversationContextHelpers_ReturnToLastClientChoice::Context' has a wrong offset!");
static_assert(offsetof(ConversationContextHelpers_ReturnToLastClientChoice, ReturnValue) == 0x000038, "Member 'ConversationContextHelpers_ReturnToLastClientChoice::ReturnValue' has a wrong offset!");

// Function CommonConversationRuntime.ConversationLibrary.StartConversation
// 0x0038 (0x0038 - 0x0000)
struct ConversationLibrary_StartConversation final
{
public:
	struct FGameplayTag                           ConversationEntryTag;                              // 0x0000(0x0008)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 Instigator;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                           InstigatorTag;                                     // 0x0010(0x0008)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 Target;                                            // 0x0018(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                           TargetTag;                                         // 0x0020(0x0008)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UConversationInstance>      ConversationInstanceClass;                         // 0x0028(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UConversationInstance*                  ReturnValue;                                       // 0x0030(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ConversationLibrary_StartConversation) == 0x000008, "Wrong alignment on ConversationLibrary_StartConversation");
static_assert(sizeof(ConversationLibrary_StartConversation) == 0x000038, "Wrong size on ConversationLibrary_StartConversation");
static_assert(offsetof(ConversationLibrary_StartConversation, ConversationEntryTag) == 0x000000, "Member 'ConversationLibrary_StartConversation::ConversationEntryTag' has a wrong offset!");
static_assert(offsetof(ConversationLibrary_StartConversation, Instigator) == 0x000008, "Member 'ConversationLibrary_StartConversation::Instigator' has a wrong offset!");
static_assert(offsetof(ConversationLibrary_StartConversation, InstigatorTag) == 0x000010, "Member 'ConversationLibrary_StartConversation::InstigatorTag' has a wrong offset!");
static_assert(offsetof(ConversationLibrary_StartConversation, Target) == 0x000018, "Member 'ConversationLibrary_StartConversation::Target' has a wrong offset!");
static_assert(offsetof(ConversationLibrary_StartConversation, TargetTag) == 0x000020, "Member 'ConversationLibrary_StartConversation::TargetTag' has a wrong offset!");
static_assert(offsetof(ConversationLibrary_StartConversation, ConversationInstanceClass) == 0x000028, "Member 'ConversationLibrary_StartConversation::ConversationInstanceClass' has a wrong offset!");
static_assert(offsetof(ConversationLibrary_StartConversation, ReturnValue) == 0x000030, "Member 'ConversationLibrary_StartConversation::ReturnValue' has a wrong offset!");

// Function CommonConversationRuntime.ConversationTaskNode.ExecuteClientEffects
// 0x0038 (0x0038 - 0x0000)
struct ConversationTaskNode_ExecuteClientEffects final
{
public:
	struct FConversationContext                   Context;                                           // 0x0000(0x0038)(ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
static_assert(alignof(ConversationTaskNode_ExecuteClientEffects) == 0x000008, "Wrong alignment on ConversationTaskNode_ExecuteClientEffects");
static_assert(sizeof(ConversationTaskNode_ExecuteClientEffects) == 0x000038, "Wrong size on ConversationTaskNode_ExecuteClientEffects");
static_assert(offsetof(ConversationTaskNode_ExecuteClientEffects, Context) == 0x000000, "Member 'ConversationTaskNode_ExecuteClientEffects::Context' has a wrong offset!");

// Function CommonConversationRuntime.ConversationTaskNode.ExecuteTaskNode
// 0x00B8 (0x00B8 - 0x0000)
struct ConversationTaskNode_ExecuteTaskNode final
{
public:
	struct FConversationContext                   Context;                                           // 0x0000(0x0038)(ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FConversationTaskResult                ReturnValue;                                       // 0x0038(0x0080)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ConversationTaskNode_ExecuteTaskNode) == 0x000008, "Wrong alignment on ConversationTaskNode_ExecuteTaskNode");
static_assert(sizeof(ConversationTaskNode_ExecuteTaskNode) == 0x0000B8, "Wrong size on ConversationTaskNode_ExecuteTaskNode");
static_assert(offsetof(ConversationTaskNode_ExecuteTaskNode, Context) == 0x000000, "Member 'ConversationTaskNode_ExecuteTaskNode::Context' has a wrong offset!");
static_assert(offsetof(ConversationTaskNode_ExecuteTaskNode, ReturnValue) == 0x000038, "Member 'ConversationTaskNode_ExecuteTaskNode::ReturnValue' has a wrong offset!");

// Function CommonConversationRuntime.ConversationTaskNode.GatherStaticExtraData
// 0x0048 (0x0048 - 0x0000)
struct ConversationTaskNode_GatherStaticExtraData final
{
public:
	struct FConversationContext                   Context;                                           // 0x0000(0x0038)(ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<struct FConversationNodeParameterPair> InOutExtraData;                                    // 0x0038(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(ConversationTaskNode_GatherStaticExtraData) == 0x000008, "Wrong alignment on ConversationTaskNode_GatherStaticExtraData");
static_assert(sizeof(ConversationTaskNode_GatherStaticExtraData) == 0x000048, "Wrong size on ConversationTaskNode_GatherStaticExtraData");
static_assert(offsetof(ConversationTaskNode_GatherStaticExtraData, Context) == 0x000000, "Member 'ConversationTaskNode_GatherStaticExtraData::Context' has a wrong offset!");
static_assert(offsetof(ConversationTaskNode_GatherStaticExtraData, InOutExtraData) == 0x000038, "Member 'ConversationTaskNode_GatherStaticExtraData::InOutExtraData' has a wrong offset!");

// Function CommonConversationRuntime.ConversationTaskNode.GetNodeBodyColor
// 0x0014 (0x0014 - 0x0000)
struct ConversationTaskNode_GetNodeBodyColor final
{
public:
	struct FLinearColor                           BodyColor;                                         // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ConversationTaskNode_GetNodeBodyColor) == 0x000004, "Wrong alignment on ConversationTaskNode_GetNodeBodyColor");
static_assert(sizeof(ConversationTaskNode_GetNodeBodyColor) == 0x000014, "Wrong size on ConversationTaskNode_GetNodeBodyColor");
static_assert(offsetof(ConversationTaskNode_GetNodeBodyColor, BodyColor) == 0x000000, "Member 'ConversationTaskNode_GetNodeBodyColor::BodyColor' has a wrong offset!");
static_assert(offsetof(ConversationTaskNode_GetNodeBodyColor, ReturnValue) == 0x000010, "Member 'ConversationTaskNode_GetNodeBodyColor::ReturnValue' has a wrong offset!");

// Function CommonConversationRuntime.ConversationTaskNode.IsRequirementSatisfied
// 0x0040 (0x0040 - 0x0000)
struct ConversationTaskNode_IsRequirementSatisfied final
{
public:
	struct FConversationContext                   Context;                                           // 0x0000(0x0038)(ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	EConversationRequirementResult                ReturnValue;                                       // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ConversationTaskNode_IsRequirementSatisfied) == 0x000008, "Wrong alignment on ConversationTaskNode_IsRequirementSatisfied");
static_assert(sizeof(ConversationTaskNode_IsRequirementSatisfied) == 0x000040, "Wrong size on ConversationTaskNode_IsRequirementSatisfied");
static_assert(offsetof(ConversationTaskNode_IsRequirementSatisfied, Context) == 0x000000, "Member 'ConversationTaskNode_IsRequirementSatisfied::Context' has a wrong offset!");
static_assert(offsetof(ConversationTaskNode_IsRequirementSatisfied, ReturnValue) == 0x000038, "Member 'ConversationTaskNode_IsRequirementSatisfied::ReturnValue' has a wrong offset!");

// Function CommonConversationRuntime.ConversationParticipantComponent.ClientExecuteTaskAndSideEffects
// 0x0010 (0x0010 - 0x0000)
struct ConversationParticipantComponent_ClientExecuteTaskAndSideEffects final
{
public:
	struct FConversationNodeHandle                Handle;                                            // 0x0000(0x0010)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ConversationParticipantComponent_ClientExecuteTaskAndSideEffects) == 0x000004, "Wrong alignment on ConversationParticipantComponent_ClientExecuteTaskAndSideEffects");
static_assert(sizeof(ConversationParticipantComponent_ClientExecuteTaskAndSideEffects) == 0x000010, "Wrong size on ConversationParticipantComponent_ClientExecuteTaskAndSideEffects");
static_assert(offsetof(ConversationParticipantComponent_ClientExecuteTaskAndSideEffects, Handle) == 0x000000, "Member 'ConversationParticipantComponent_ClientExecuteTaskAndSideEffects::Handle' has a wrong offset!");

// Function CommonConversationRuntime.ConversationParticipantComponent.ClientStartConversation
// 0x0008 (0x0008 - 0x0000)
struct ConversationParticipantComponent_ClientStartConversation final
{
public:
	struct FGameplayTag                           AsParticipant;                                     // 0x0000(0x0008)(ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ConversationParticipantComponent_ClientStartConversation) == 0x000004, "Wrong alignment on ConversationParticipantComponent_ClientStartConversation");
static_assert(sizeof(ConversationParticipantComponent_ClientStartConversation) == 0x000008, "Wrong size on ConversationParticipantComponent_ClientStartConversation");
static_assert(offsetof(ConversationParticipantComponent_ClientStartConversation, AsParticipant) == 0x000000, "Member 'ConversationParticipantComponent_ClientStartConversation::AsParticipant' has a wrong offset!");

// Function CommonConversationRuntime.ConversationParticipantComponent.ClientUpdateConversation
// 0x0078 (0x0078 - 0x0000)
struct ConversationParticipantComponent_ClientUpdateConversation final
{
public:
	struct FClientConversationMessagePayload      Message;                                           // 0x0000(0x0078)(ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ConversationParticipantComponent_ClientUpdateConversation) == 0x000008, "Wrong alignment on ConversationParticipantComponent_ClientUpdateConversation");
static_assert(sizeof(ConversationParticipantComponent_ClientUpdateConversation) == 0x000078, "Wrong size on ConversationParticipantComponent_ClientUpdateConversation");
static_assert(offsetof(ConversationParticipantComponent_ClientUpdateConversation, Message) == 0x000000, "Member 'ConversationParticipantComponent_ClientUpdateConversation::Message' has a wrong offset!");

// Function CommonConversationRuntime.ConversationParticipantComponent.ClientUpdateConversations
// 0x0004 (0x0004 - 0x0000)
struct ConversationParticipantComponent_ClientUpdateConversations final
{
public:
	int32                                         InConversationsActive;                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ConversationParticipantComponent_ClientUpdateConversations) == 0x000004, "Wrong alignment on ConversationParticipantComponent_ClientUpdateConversations");
static_assert(sizeof(ConversationParticipantComponent_ClientUpdateConversations) == 0x000004, "Wrong size on ConversationParticipantComponent_ClientUpdateConversations");
static_assert(offsetof(ConversationParticipantComponent_ClientUpdateConversations, InConversationsActive) == 0x000000, "Member 'ConversationParticipantComponent_ClientUpdateConversations::InConversationsActive' has a wrong offset!");

// Function CommonConversationRuntime.ConversationParticipantComponent.ClientUpdateConversationTaskChoiceData
// 0x0080 (0x0080 - 0x0000)
struct ConversationParticipantComponent_ClientUpdateConversationTaskChoiceData final
{
public:
	struct FConversationNodeHandle                Handle;                                            // 0x0000(0x0010)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientConversationOptionEntry         OptionEntry;                                       // 0x0010(0x0070)(ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ConversationParticipantComponent_ClientUpdateConversationTaskChoiceData) == 0x000008, "Wrong alignment on ConversationParticipantComponent_ClientUpdateConversationTaskChoiceData");
static_assert(sizeof(ConversationParticipantComponent_ClientUpdateConversationTaskChoiceData) == 0x000080, "Wrong size on ConversationParticipantComponent_ClientUpdateConversationTaskChoiceData");
static_assert(offsetof(ConversationParticipantComponent_ClientUpdateConversationTaskChoiceData, Handle) == 0x000000, "Member 'ConversationParticipantComponent_ClientUpdateConversationTaskChoiceData::Handle' has a wrong offset!");
static_assert(offsetof(ConversationParticipantComponent_ClientUpdateConversationTaskChoiceData, OptionEntry) == 0x000010, "Member 'ConversationParticipantComponent_ClientUpdateConversationTaskChoiceData::OptionEntry' has a wrong offset!");

// Function CommonConversationRuntime.ConversationParticipantComponent.ClientUpdateParticipants
// 0x0010 (0x0010 - 0x0000)
struct ConversationParticipantComponent_ClientUpdateParticipants final
{
public:
	struct FConversationParticipants              InParticipants;                                    // 0x0000(0x0010)(ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ConversationParticipantComponent_ClientUpdateParticipants) == 0x000008, "Wrong alignment on ConversationParticipantComponent_ClientUpdateParticipants");
static_assert(sizeof(ConversationParticipantComponent_ClientUpdateParticipants) == 0x000010, "Wrong size on ConversationParticipantComponent_ClientUpdateParticipants");
static_assert(offsetof(ConversationParticipantComponent_ClientUpdateParticipants, InParticipants) == 0x000000, "Member 'ConversationParticipantComponent_ClientUpdateParticipants::InParticipants' has a wrong offset!");

// Function CommonConversationRuntime.ConversationParticipantComponent.GetParticipantDisplayName
// 0x0018 (0x0018 - 0x0000)
struct ConversationParticipantComponent_GetParticipantDisplayName final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ConversationParticipantComponent_GetParticipantDisplayName) == 0x000008, "Wrong alignment on ConversationParticipantComponent_GetParticipantDisplayName");
static_assert(sizeof(ConversationParticipantComponent_GetParticipantDisplayName) == 0x000018, "Wrong size on ConversationParticipantComponent_GetParticipantDisplayName");
static_assert(offsetof(ConversationParticipantComponent_GetParticipantDisplayName, ReturnValue) == 0x000000, "Member 'ConversationParticipantComponent_GetParticipantDisplayName::ReturnValue' has a wrong offset!");

// Function CommonConversationRuntime.ConversationParticipantComponent.OnRep_ConversationsActive
// 0x0004 (0x0004 - 0x0000)
struct ConversationParticipantComponent_OnRep_ConversationsActive final
{
public:
	int32                                         OldConversationsActive;                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ConversationParticipantComponent_OnRep_ConversationsActive) == 0x000004, "Wrong alignment on ConversationParticipantComponent_OnRep_ConversationsActive");
static_assert(sizeof(ConversationParticipantComponent_OnRep_ConversationsActive) == 0x000004, "Wrong size on ConversationParticipantComponent_OnRep_ConversationsActive");
static_assert(offsetof(ConversationParticipantComponent_OnRep_ConversationsActive, OldConversationsActive) == 0x000000, "Member 'ConversationParticipantComponent_OnRep_ConversationsActive::OldConversationsActive' has a wrong offset!");

// Function CommonConversationRuntime.ConversationParticipantComponent.RequestServerAdvanceConversation
// 0x0030 (0x0030 - 0x0000)
struct ConversationParticipantComponent_RequestServerAdvanceConversation final
{
public:
	struct FAdvanceConversationRequest            InChoicePicked;                                    // 0x0000(0x0030)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ConversationParticipantComponent_RequestServerAdvanceConversation) == 0x000008, "Wrong alignment on ConversationParticipantComponent_RequestServerAdvanceConversation");
static_assert(sizeof(ConversationParticipantComponent_RequestServerAdvanceConversation) == 0x000030, "Wrong size on ConversationParticipantComponent_RequestServerAdvanceConversation");
static_assert(offsetof(ConversationParticipantComponent_RequestServerAdvanceConversation, InChoicePicked) == 0x000000, "Member 'ConversationParticipantComponent_RequestServerAdvanceConversation::InChoicePicked' has a wrong offset!");

// Function CommonConversationRuntime.ConversationParticipantComponent.ServerAdvanceConversation
// 0x0030 (0x0030 - 0x0000)
struct ConversationParticipantComponent_ServerAdvanceConversation final
{
public:
	struct FAdvanceConversationRequest            InChoicePicked;                                    // 0x0000(0x0030)(ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ConversationParticipantComponent_ServerAdvanceConversation) == 0x000008, "Wrong alignment on ConversationParticipantComponent_ServerAdvanceConversation");
static_assert(sizeof(ConversationParticipantComponent_ServerAdvanceConversation) == 0x000030, "Wrong size on ConversationParticipantComponent_ServerAdvanceConversation");
static_assert(offsetof(ConversationParticipantComponent_ServerAdvanceConversation, InChoicePicked) == 0x000000, "Member 'ConversationParticipantComponent_ServerAdvanceConversation::InChoicePicked' has a wrong offset!");

// Function CommonConversationRuntime.ConversationParticipantComponent.IsInActiveConversation
// 0x0001 (0x0001 - 0x0000)
struct ConversationParticipantComponent_IsInActiveConversation final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ConversationParticipantComponent_IsInActiveConversation) == 0x000001, "Wrong alignment on ConversationParticipantComponent_IsInActiveConversation");
static_assert(sizeof(ConversationParticipantComponent_IsInActiveConversation) == 0x000001, "Wrong size on ConversationParticipantComponent_IsInActiveConversation");
static_assert(offsetof(ConversationParticipantComponent_IsInActiveConversation, ReturnValue) == 0x000000, "Member 'ConversationParticipantComponent_IsInActiveConversation::ReturnValue' has a wrong offset!");

// Function CommonConversationRuntime.ConversationRequirementNode.IsRequirementSatisfied
// 0x0040 (0x0040 - 0x0000)
struct ConversationRequirementNode_IsRequirementSatisfied final
{
public:
	struct FConversationContext                   Context;                                           // 0x0000(0x0038)(ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	EConversationRequirementResult                ReturnValue;                                       // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ConversationRequirementNode_IsRequirementSatisfied) == 0x000008, "Wrong alignment on ConversationRequirementNode_IsRequirementSatisfied");
static_assert(sizeof(ConversationRequirementNode_IsRequirementSatisfied) == 0x000040, "Wrong size on ConversationRequirementNode_IsRequirementSatisfied");
static_assert(offsetof(ConversationRequirementNode_IsRequirementSatisfied, Context) == 0x000000, "Member 'ConversationRequirementNode_IsRequirementSatisfied::Context' has a wrong offset!");
static_assert(offsetof(ConversationRequirementNode_IsRequirementSatisfied, ReturnValue) == 0x000038, "Member 'ConversationRequirementNode_IsRequirementSatisfied::ReturnValue' has a wrong offset!");

// Function CommonConversationRuntime.ConversationSideEffectNode.ClientCauseSideEffect
// 0x0038 (0x0038 - 0x0000)
struct ConversationSideEffectNode_ClientCauseSideEffect final
{
public:
	struct FConversationContext                   Context;                                           // 0x0000(0x0038)(ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
static_assert(alignof(ConversationSideEffectNode_ClientCauseSideEffect) == 0x000008, "Wrong alignment on ConversationSideEffectNode_ClientCauseSideEffect");
static_assert(sizeof(ConversationSideEffectNode_ClientCauseSideEffect) == 0x000038, "Wrong size on ConversationSideEffectNode_ClientCauseSideEffect");
static_assert(offsetof(ConversationSideEffectNode_ClientCauseSideEffect, Context) == 0x000000, "Member 'ConversationSideEffectNode_ClientCauseSideEffect::Context' has a wrong offset!");

// Function CommonConversationRuntime.ConversationSideEffectNode.ServerCauseSideEffect
// 0x0038 (0x0038 - 0x0000)
struct ConversationSideEffectNode_ServerCauseSideEffect final
{
public:
	struct FConversationContext                   Context;                                           // 0x0000(0x0038)(ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
static_assert(alignof(ConversationSideEffectNode_ServerCauseSideEffect) == 0x000008, "Wrong alignment on ConversationSideEffectNode_ServerCauseSideEffect");
static_assert(sizeof(ConversationSideEffectNode_ServerCauseSideEffect) == 0x000038, "Wrong size on ConversationSideEffectNode_ServerCauseSideEffect");
static_assert(offsetof(ConversationSideEffectNode_ServerCauseSideEffect, Context) == 0x000000, "Member 'ConversationSideEffectNode_ServerCauseSideEffect::Context' has a wrong offset!");

}

