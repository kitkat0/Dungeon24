#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTS_CheckInCombatZone

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BTS_CheckInCombatZone.BTS_CheckInCombatZone_C.ExecuteUbergraph_BTS_CheckInCombatZone
// 0x0048 (0x0048 - 0x0000)
struct BTS_CheckInCombatZone_C_ExecuteUbergraph_BTS_CheckInCombatZone final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_Event_OwnerController;                      // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn;                       // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAIC_Monster_Default_C*                 K2Node_DynamicCast_AsAIC_Monster_Default;          // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInCombatZone_Result;                    // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTS_CheckInCombatZone_C_ExecuteUbergraph_BTS_CheckInCombatZone) == 0x000008, "Wrong alignment on BTS_CheckInCombatZone_C_ExecuteUbergraph_BTS_CheckInCombatZone");
static_assert(sizeof(BTS_CheckInCombatZone_C_ExecuteUbergraph_BTS_CheckInCombatZone) == 0x000048, "Wrong size on BTS_CheckInCombatZone_C_ExecuteUbergraph_BTS_CheckInCombatZone");
static_assert(offsetof(BTS_CheckInCombatZone_C_ExecuteUbergraph_BTS_CheckInCombatZone, EntryPoint) == 0x000000, "Member 'BTS_CheckInCombatZone_C_ExecuteUbergraph_BTS_CheckInCombatZone::EntryPoint' has a wrong offset!");
static_assert(offsetof(BTS_CheckInCombatZone_C_ExecuteUbergraph_BTS_CheckInCombatZone, K2Node_Event_OwnerController) == 0x000008, "Member 'BTS_CheckInCombatZone_C_ExecuteUbergraph_BTS_CheckInCombatZone::K2Node_Event_OwnerController' has a wrong offset!");
static_assert(offsetof(BTS_CheckInCombatZone_C_ExecuteUbergraph_BTS_CheckInCombatZone, K2Node_Event_ControlledPawn) == 0x000010, "Member 'BTS_CheckInCombatZone_C_ExecuteUbergraph_BTS_CheckInCombatZone::K2Node_Event_ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTS_CheckInCombatZone_C_ExecuteUbergraph_BTS_CheckInCombatZone, K2Node_Event_DeltaSeconds) == 0x000018, "Member 'BTS_CheckInCombatZone_C_ExecuteUbergraph_BTS_CheckInCombatZone::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BTS_CheckInCombatZone_C_ExecuteUbergraph_BTS_CheckInCombatZone, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000020, "Member 'BTS_CheckInCombatZone_C_ExecuteUbergraph_BTS_CheckInCombatZone::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_CheckInCombatZone_C_ExecuteUbergraph_BTS_CheckInCombatZone, K2Node_DynamicCast_AsAIC_Monster_Default) == 0x000038, "Member 'BTS_CheckInCombatZone_C_ExecuteUbergraph_BTS_CheckInCombatZone::K2Node_DynamicCast_AsAIC_Monster_Default' has a wrong offset!");
static_assert(offsetof(BTS_CheckInCombatZone_C_ExecuteUbergraph_BTS_CheckInCombatZone, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BTS_CheckInCombatZone_C_ExecuteUbergraph_BTS_CheckInCombatZone::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BTS_CheckInCombatZone_C_ExecuteUbergraph_BTS_CheckInCombatZone, CallFunc_IsInCombatZone_Result) == 0x000041, "Member 'BTS_CheckInCombatZone_C_ExecuteUbergraph_BTS_CheckInCombatZone::CallFunc_IsInCombatZone_Result' has a wrong offset!");

// Function BTS_CheckInCombatZone.BTS_CheckInCombatZone_C.ReceiveTickAI
// 0x0018 (0x0018 - 0x0000)
struct BTS_CheckInCombatZone_C_ReceiveTickAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaSeconds;                                      // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTS_CheckInCombatZone_C_ReceiveTickAI) == 0x000008, "Wrong alignment on BTS_CheckInCombatZone_C_ReceiveTickAI");
static_assert(sizeof(BTS_CheckInCombatZone_C_ReceiveTickAI) == 0x000018, "Wrong size on BTS_CheckInCombatZone_C_ReceiveTickAI");
static_assert(offsetof(BTS_CheckInCombatZone_C_ReceiveTickAI, OwnerController) == 0x000000, "Member 'BTS_CheckInCombatZone_C_ReceiveTickAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTS_CheckInCombatZone_C_ReceiveTickAI, ControlledPawn) == 0x000008, "Member 'BTS_CheckInCombatZone_C_ReceiveTickAI::ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTS_CheckInCombatZone_C_ReceiveTickAI, DeltaSeconds) == 0x000010, "Member 'BTS_CheckInCombatZone_C_ReceiveTickAI::DeltaSeconds' has a wrong offset!");

}

