#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TGFBattleProtocol

#include "Basic.hpp"

#include "TGFBattleProtocol_classes.hpp"
#include "TGFBattleProtocol_parameters.hpp"


namespace SDK
{

// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufAny.GetTypeUrl
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderGoogleProtobufAny::GetTypeUrl(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufAny", "GetTypeUrl");

	Params::ExcelLoaderGoogleProtobufAny_GetTypeUrl Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDRankBoardBasicData.GetAllOfExtFields
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<int64>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int64> UExcelLoaderTgfDRankBoardBasicData::GetAllOfExtFields()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDRankBoardBasicData", "GetAllOfExtFields");

	Params::ExcelLoaderTgfDRankBoardBasicData_GetAllOfExtFields Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDRankBoardBasicData.GetAllOfSortFields
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<int64>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int64> UExcelLoaderTgfDRankBoardBasicData::GetAllOfSortFields()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDRankBoardBasicData", "GetAllOfSortFields");

	Params::ExcelLoaderTgfDRankBoardBasicData_GetAllOfSortFields Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDRankBoardBasicData.GetExtFields
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfDRankBoardBasicData::GetExtFields(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDRankBoardBasicData", "GetExtFields");

	Params::ExcelLoaderTgfDRankBoardBasicData_GetExtFields Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDRankBoardBasicData.GetExtFieldsSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfDRankBoardBasicData::GetExtFieldsSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDRankBoardBasicData", "GetExtFieldsSize");

	Params::ExcelLoaderTgfDRankBoardBasicData_GetExtFieldsSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDRankBoardBasicData.GetRankKey
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDRankKey*          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDRankKey* UExcelLoaderTgfDRankBoardBasicData::GetRankKey(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDRankBoardBasicData", "GetRankKey");

	Params::ExcelLoaderTgfDRankBoardBasicData_GetRankKey Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDRankBoardBasicData.GetRankNo
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfDRankBoardBasicData::GetRankNo(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDRankBoardBasicData", "GetRankNo");

	Params::ExcelLoaderTgfDRankBoardBasicData_GetRankNo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDRankBoardBasicData.GetRoleGuid
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfDRankBoardBasicData::GetRoleGuid(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDRankBoardBasicData", "GetRoleGuid");

	Params::ExcelLoaderTgfDRankBoardBasicData_GetRoleGuid Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDRankBoardBasicData.GetScore
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfDRankBoardBasicData::GetScore(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDRankBoardBasicData", "GetScore");

	Params::ExcelLoaderTgfDRankBoardBasicData_GetScore Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDRankBoardBasicData.GetSettleRankNo
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfDRankBoardBasicData::GetSettleRankNo(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDRankBoardBasicData", "GetSettleRankNo");

	Params::ExcelLoaderTgfDRankBoardBasicData_GetSettleRankNo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDRankBoardBasicData.GetSortFields
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfDRankBoardBasicData::GetSortFields(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDRankBoardBasicData", "GetSortFields");

	Params::ExcelLoaderTgfDRankBoardBasicData_GetSortFields Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDRankBoardBasicData.GetSortFieldsSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfDRankBoardBasicData::GetSortFieldsSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDRankBoardBasicData", "GetSortFieldsSize");

	Params::ExcelLoaderTgfDRankBoardBasicData_GetSortFieldsSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDRankBoardBasicData.GetSubmitTimepoint
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfDRankBoardBasicData::GetSubmitTimepoint(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDRankBoardBasicData", "GetSubmitTimepoint");

	Params::ExcelLoaderTgfDRankBoardBasicData_GetSubmitTimepoint Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetAllOfEnableSmallBackpackRoleTypeIdList
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UExcelLoaderTgfConfigExcelConstConfig::GetAllOfEnableSmallBackpackRoleTypeIdList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetAllOfEnableSmallBackpackRoleTypeIdList");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetAllOfEnableSmallBackpackRoleTypeIdList Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetAllOfIdipProhibitedItems
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UExcelLoaderTgfConfigExcelConstConfig::GetAllOfIdipProhibitedItems()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetAllOfIdipProhibitedItems");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetAllOfIdipProhibitedItems Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetAllOfItemEaResaveItemIds
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UExcelLoaderTgfConfigExcelConstConfig::GetAllOfItemEaResaveItemIds()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetAllOfItemEaResaveItemIds");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetAllOfItemEaResaveItemIds Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetAllOfMatchingNotCreateRoomForRoleForce
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UExcelLoaderTgfConfigExcelConstConfig::GetAllOfMatchingNotCreateRoomForRoleForce()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetAllOfMatchingNotCreateRoomForRoleForce");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetAllOfMatchingNotCreateRoomForRoleForce Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetAllOfMatchingSameTeamAndFactionForRoleForce
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UExcelLoaderTgfConfigExcelConstConfig::GetAllOfMatchingSameTeamAndFactionForRoleForce()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetAllOfMatchingSameTeamAndFactionForRoleForce");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetAllOfMatchingSameTeamAndFactionForRoleForce Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetAllOfMithrilForceLevelList
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UExcelLoaderTgfConfigExcelConstConfig::GetAllOfMithrilForceLevelList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetAllOfMithrilForceLevelList");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetAllOfMithrilForceLevelList Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetAllOfRepairMaterialIds
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UExcelLoaderTgfConfigExcelConstConfig::GetAllOfRepairMaterialIds()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetAllOfRepairMaterialIds");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetAllOfRepairMaterialIds Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetAllOfRoleFirstCreatePresentBackpackItems
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfDItemOffset*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfDItemOffset*> UExcelLoaderTgfConfigExcelConstConfig::GetAllOfRoleFirstCreatePresentBackpackItems()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetAllOfRoleFirstCreatePresentBackpackItems");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetAllOfRoleFirstCreatePresentBackpackItems Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetAllOfRoleReshapeFacePinchingCostItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfDItemOffset*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfDItemOffset*> UExcelLoaderTgfConfigExcelConstConfig::GetAllOfRoleReshapeFacePinchingCostItem()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetAllOfRoleReshapeFacePinchingCostItem");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetAllOfRoleReshapeFacePinchingCostItem Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetAllOfRoomGameplayList
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UExcelLoaderTgfConfigExcelConstConfig::GetAllOfRoomGameplayList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetAllOfRoomGameplayList");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetAllOfRoomGameplayList Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetAllOfRoomMapList
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UExcelLoaderTgfConfigExcelConstConfig::GetAllOfRoomMapList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetAllOfRoomMapList");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetAllOfRoomMapList Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetAllOfTestTimestamp
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderGoogleProtobufTimestamp*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderGoogleProtobufTimestamp*> UExcelLoaderTgfConfigExcelConstConfig::GetAllOfTestTimestamp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetAllOfTestTimestamp");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetAllOfTestTimestamp Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetBanMailRankAllTypeDesc
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfConfigExcelConstConfig::GetBanMailRankAllTypeDesc(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetBanMailRankAllTypeDesc");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetBanMailRankAllTypeDesc Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetBanMailRankAllTypeName
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfConfigExcelConstConfig::GetBanMailRankAllTypeName(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetBanMailRankAllTypeName");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetBanMailRankAllTypeName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetBattleCountOssDuration
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufDuration*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufDuration* UExcelLoaderTgfConfigExcelConstConfig::GetBattleCountOssDuration(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetBattleCountOssDuration");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetBattleCountOssDuration Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetBattleRoomLogExpireTimeout
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufDuration*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufDuration* UExcelLoaderTgfConfigExcelConstConfig::GetBattleRoomLogExpireTimeout(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetBattleRoomLogExpireTimeout");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetBattleRoomLogExpireTimeout Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetBattleRoomLogKeepCount
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelConstConfig::GetBattleRoomLogKeepCount(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetBattleRoomLogKeepCount");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetBattleRoomLogKeepCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetBattleRoomLogMaxCount
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelConstConfig::GetBattleRoomLogMaxCount(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetBattleRoomLogMaxCount");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetBattleRoomLogMaxCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetCraftingSeasonChangeMailTemplateId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelConstConfig::GetCraftingSeasonChangeMailTemplateId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetCraftingSeasonChangeMailTemplateId");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetCraftingSeasonChangeMailTemplateId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetDailyResetTimeOffset
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufDuration*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufDuration* UExcelLoaderTgfConfigExcelConstConfig::GetDailyResetTimeOffset(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetDailyResetTimeOffset");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetDailyResetTimeOffset Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetDsMaxFps
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelConstConfig::GetDsMaxFps(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetDsMaxFps");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetDsMaxFps Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetEnableProdExcelCheck
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UExcelLoaderTgfConfigExcelConstConfig::GetEnableProdExcelCheck(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetEnableProdExcelCheck");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetEnableProdExcelCheck Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetEnableSmallBackpackRoleTypeIdList
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelConstConfig::GetEnableSmallBackpackRoleTypeIdList(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetEnableSmallBackpackRoleTypeIdList");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetEnableSmallBackpackRoleTypeIdList Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetEnableSmallBackpackRoleTypeIdListSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelConstConfig::GetEnableSmallBackpackRoleTypeIdListSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetEnableSmallBackpackRoleTypeIdListSize");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetEnableSmallBackpackRoleTypeIdListSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetFacadeTemplateListSize
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelConstConfig::GetFacadeTemplateListSize(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetFacadeTemplateListSize");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetFacadeTemplateListSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetFacadeTemplateNameLength
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelConstConfig::GetFacadeTemplateNameLength(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetFacadeTemplateNameLength");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetFacadeTemplateNameLength Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetFriendAllowCrossZone
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UExcelLoaderTgfConfigExcelConstConfig::GetFriendAllowCrossZone(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetFriendAllowCrossZone");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetFriendAllowCrossZone Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetFriendDailyInviteLimit
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelConstConfig::GetFriendDailyInviteLimit(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetFriendDailyInviteLimit");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetFriendDailyInviteLimit Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetFriendDailyReceiveGiftLimit
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelConstConfig::GetFriendDailyReceiveGiftLimit(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetFriendDailyReceiveGiftLimit");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetFriendDailyReceiveGiftLimit Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetFriendDailySendGiftLimit
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelConstConfig::GetFriendDailySendGiftLimit(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetFriendDailySendGiftLimit");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetFriendDailySendGiftLimit Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetFriendGiftExpire
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufDuration*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufDuration* UExcelLoaderTgfConfigExcelConstConfig::GetFriendGiftExpire(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetFriendGiftExpire");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetFriendGiftExpire Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetFriendInviteExpire
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufDuration*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufDuration* UExcelLoaderTgfConfigExcelConstConfig::GetFriendInviteExpire(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetFriendInviteExpire");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetFriendInviteExpire Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetFriendMaxNumber
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelConstConfig::GetFriendMaxNumber(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetFriendMaxNumber");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetFriendMaxNumber Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetFriendSuggestLevelDown
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelConstConfig::GetFriendSuggestLevelDown(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetFriendSuggestLevelDown");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetFriendSuggestLevelDown Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetFriendSuggestLevelUp
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelConstConfig::GetFriendSuggestLevelUp(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetFriendSuggestLevelUp");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetFriendSuggestLevelUp Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetFriendSuggestNumber
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelConstConfig::GetFriendSuggestNumber(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetFriendSuggestNumber");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetFriendSuggestNumber Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetFriendTotalInviteeLimit
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelConstConfig::GetFriendTotalInviteeLimit(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetFriendTotalInviteeLimit");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetFriendTotalInviteeLimit Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetFriendTotalInviterLimit
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelConstConfig::GetFriendTotalInviterLimit(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetFriendTotalInviterLimit");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetFriendTotalInviterLimit Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetGearInventoryMaxCount
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelConstConfig::GetGearInventoryMaxCount(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetGearInventoryMaxCount");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetGearInventoryMaxCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetGearMaxLockCount
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelConstConfig::GetGearMaxLockCount(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetGearMaxLockCount");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetGearMaxLockCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetGearSingleAttrLower
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelConstConfig::GetGearSingleAttrLower(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetGearSingleAttrLower");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetGearSingleAttrLower Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetGearSingleAttrUpper
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelConstConfig::GetGearSingleAttrUpper(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetGearSingleAttrUpper");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetGearSingleAttrUpper Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetGearThreeDSumDiffLower
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelConstConfig::GetGearThreeDSumDiffLower(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetGearThreeDSumDiffLower");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetGearThreeDSumDiffLower Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetGearThreeDSumDiffUpper
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelConstConfig::GetGearThreeDSumDiffUpper(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetGearThreeDSumDiffUpper");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetGearThreeDSumDiffUpper Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetGearThreeDSumLower
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelConstConfig::GetGearThreeDSumLower(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetGearThreeDSumLower");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetGearThreeDSumLower Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetGearThreeDSumUpper
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelConstConfig::GetGearThreeDSumUpper(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetGearThreeDSumUpper");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetGearThreeDSumUpper Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetGlobalFutureReserveMailMaxCountPerMajorType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelConstConfig::GetGlobalFutureReserveMailMaxCountPerMajorType(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetGlobalFutureReserveMailMaxCountPerMajorType");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetGlobalFutureReserveMailMaxCountPerMajorType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetGlobalMailMaxCountPerMajorType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelConstConfig::GetGlobalMailMaxCountPerMajorType(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetGlobalMailMaxCountPerMajorType");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetGlobalMailMaxCountPerMajorType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetGuildAnnouncementLengthLimit
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelConstConfig::GetGuildAnnouncementLengthLimit(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetGuildAnnouncementLengthLimit");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetGuildAnnouncementLengthLimit Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetGuildApplyExpireTimeout
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufDuration*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufDuration* UExcelLoaderTgfConfigExcelConstConfig::GetGuildApplyExpireTimeout(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetGuildApplyExpireTimeout");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetGuildApplyExpireTimeout Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetGuildApplyMaxCount
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelConstConfig::GetGuildApplyMaxCount(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetGuildApplyMaxCount");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetGuildApplyMaxCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetGuildApplyMaxCountPerUser
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelConstConfig::GetGuildApplyMaxCountPerUser(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetGuildApplyMaxCountPerUser");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetGuildApplyMaxCountPerUser Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetGuildBatchGetMaxCount
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelConstConfig::GetGuildBatchGetMaxCount(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetGuildBatchGetMaxCount");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetGuildBatchGetMaxCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetGuildCreateCostItem
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDItemOffset*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDItemOffset* UExcelLoaderTgfConfigExcelConstConfig::GetGuildCreateCostItem(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetGuildCreateCostItem");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetGuildCreateCostItem Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetGuildDefaultMaxMemberNumber
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelConstConfig::GetGuildDefaultMaxMemberNumber(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetGuildDefaultMaxMemberNumber");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetGuildDefaultMaxMemberNumber Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetGuildExitLockTime
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufDuration*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufDuration* UExcelLoaderTgfConfigExcelConstConfig::GetGuildExitLockTime(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetGuildExitLockTime");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetGuildExitLockTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetGuildForceUpdateInterval
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufDuration*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufDuration* UExcelLoaderTgfConfigExcelConstConfig::GetGuildForceUpdateInterval(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetGuildForceUpdateInterval");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetGuildForceUpdateInterval Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetGuildImpeachmentConfirmAgreePemillage
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelConstConfig::GetGuildImpeachmentConfirmAgreePemillage(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetGuildImpeachmentConfirmAgreePemillage");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetGuildImpeachmentConfirmAgreePemillage Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetGuildImpeachmentDuration
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufDuration*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufDuration* UExcelLoaderTgfConfigExcelConstConfig::GetGuildImpeachmentDuration(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetGuildImpeachmentDuration");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetGuildImpeachmentDuration Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetGuildImpeachmentInterval
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufDuration*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufDuration* UExcelLoaderTgfConfigExcelConstConfig::GetGuildImpeachmentInterval(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetGuildImpeachmentInterval");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetGuildImpeachmentInterval Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetGuildImpeachmentOfflineTime
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufDuration*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufDuration* UExcelLoaderTgfConfigExcelConstConfig::GetGuildImpeachmentOfflineTime(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetGuildImpeachmentOfflineTime");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetGuildImpeachmentOfflineTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetGuildImpeachmentShowTime
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufDuration*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufDuration* UExcelLoaderTgfConfigExcelConstConfig::GetGuildImpeachmentShowTime(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetGuildImpeachmentShowTime");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetGuildImpeachmentShowTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetGuildImpeachmentSuccessVotePemillage
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelConstConfig::GetGuildImpeachmentSuccessVotePemillage(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetGuildImpeachmentSuccessVotePemillage");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetGuildImpeachmentSuccessVotePemillage Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetGuildInvitationExpireTimeout
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufDuration*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufDuration* UExcelLoaderTgfConfigExcelConstConfig::GetGuildInvitationExpireTimeout(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetGuildInvitationExpireTimeout");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetGuildInvitationExpireTimeout Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetGuildInvitationMaxCount
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelConstConfig::GetGuildInvitationMaxCount(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetGuildInvitationMaxCount");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetGuildInvitationMaxCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetGuildInvitationMaxCountPerUser
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelConstConfig::GetGuildInvitationMaxCountPerUser(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetGuildInvitationMaxCountPerUser");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetGuildInvitationMaxCountPerUser Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetGuildLogExpireTimeout
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufDuration*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufDuration* UExcelLoaderTgfConfigExcelConstConfig::GetGuildLogExpireTimeout(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetGuildLogExpireTimeout");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetGuildLogExpireTimeout Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetGuildLogKeepCount
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelConstConfig::GetGuildLogKeepCount(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetGuildLogKeepCount");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetGuildLogKeepCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetGuildLogMaxCount
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelConstConfig::GetGuildLogMaxCount(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetGuildLogMaxCount");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetGuildLogMaxCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetGuildLogShowCount
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelConstConfig::GetGuildLogShowCount(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetGuildLogShowCount");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetGuildLogShowCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetGuildNameLengthLimit
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelConstConfig::GetGuildNameLengthLimit(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetGuildNameLengthLimit");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetGuildNameLengthLimit Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetGuildNotifyMailIdForExitGuild
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelConstConfig::GetGuildNotifyMailIdForExitGuild(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetGuildNotifyMailIdForExitGuild");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetGuildNotifyMailIdForExitGuild Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetGuildNotifyMailIdForRemoveAdmin
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelConstConfig::GetGuildNotifyMailIdForRemoveAdmin(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetGuildNotifyMailIdForRemoveAdmin");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetGuildNotifyMailIdForRemoveAdmin Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetGuildNotifyMailIdForRemoveMember
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelConstConfig::GetGuildNotifyMailIdForRemoveMember(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetGuildNotifyMailIdForRemoveMember");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetGuildNotifyMailIdForRemoveMember Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetGuildNotifyMailIdForSetAdmin
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelConstConfig::GetGuildNotifyMailIdForSetAdmin(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetGuildNotifyMailIdForSetAdmin");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetGuildNotifyMailIdForSetAdmin Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetGuildNotifyMailIdForSetOwner
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelConstConfig::GetGuildNotifyMailIdForSetOwner(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetGuildNotifyMailIdForSetOwner");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetGuildNotifyMailIdForSetOwner Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetGuildRenameCostItem
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDItemOffset*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDItemOffset* UExcelLoaderTgfConfigExcelConstConfig::GetGuildRenameCostItem(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetGuildRenameCostItem");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetGuildRenameCostItem Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetGuildSetOwnerLockTime
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufDuration*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufDuration* UExcelLoaderTgfConfigExcelConstConfig::GetGuildSetOwnerLockTime(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetGuildSetOwnerLockTime");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetGuildSetOwnerLockTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetGuildSubscribeMemberInterval
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufDuration*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufDuration* UExcelLoaderTgfConfigExcelConstConfig::GetGuildSubscribeMemberInterval(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetGuildSubscribeMemberInterval");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetGuildSubscribeMemberInterval Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetHomelandModeRewardId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelConstConfig::GetHomelandModeRewardId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetHomelandModeRewardId");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetHomelandModeRewardId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetHomelandModeRewardMailTemplateId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelConstConfig::GetHomelandModeRewardMailTemplateId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetHomelandModeRewardMailTemplateId");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetHomelandModeRewardMailTemplateId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetI18nSystemAdmin
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfConfigExcelConstConfig::GetI18nSystemAdmin(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetI18nSystemAdmin");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetI18nSystemAdmin Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetIdipProhibitedItems
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelConstConfig::GetIdipProhibitedItems(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetIdipProhibitedItems");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetIdipProhibitedItems Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetIdipProhibitedItemsSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelConstConfig::GetIdipProhibitedItemsSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetIdipProhibitedItemsSize");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetIdipProhibitedItemsSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetIdipUpdateItemMaxLimit
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelConstConfig::GetIdipUpdateItemMaxLimit(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetIdipUpdateItemMaxLimit");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetIdipUpdateItemMaxLimit Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetInventoryDefaultRowSize
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelConstConfig::GetInventoryDefaultRowSize(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetInventoryDefaultRowSize");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetInventoryDefaultRowSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetInventoryDefualtColumnSize
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelConstConfig::GetInventoryDefualtColumnSize(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetInventoryDefualtColumnSize");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetInventoryDefualtColumnSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetInventoryMaxPage
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelConstConfig::GetInventoryMaxPage(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetInventoryMaxPage");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetInventoryMaxPage Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetIsDisabledBanLastBattleUsersByExcel
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UExcelLoaderTgfConfigExcelConstConfig::GetIsDisabledBanLastBattleUsersByExcel(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetIsDisabledBanLastBattleUsersByExcel");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetIsDisabledBanLastBattleUsersByExcel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetIsEnableNoobMatchingLogicStatisticsIds
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelConstConfig::GetIsEnableNoobMatchingLogicStatisticsIds(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetIsEnableNoobMatchingLogicStatisticsIds");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetIsEnableNoobMatchingLogicStatisticsIds Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetItemDefaultMaxCount
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelConstConfig::GetItemDefaultMaxCount(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetItemDefaultMaxCount");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetItemDefaultMaxCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetItemEaResaveItemIds
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelConstConfig::GetItemEaResaveItemIds(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetItemEaResaveItemIds");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetItemEaResaveItemIds Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetItemEaResaveItemIdsSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelConstConfig::GetItemEaResaveItemIdsSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetItemEaResaveItemIdsSize");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetItemEaResaveItemIdsSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetItemStorageColumnSizeLimit
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelConstConfig::GetItemStorageColumnSizeLimit(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetItemStorageColumnSizeLimit");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetItemStorageColumnSizeLimit Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetItemStorageRowSizeLimit
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelConstConfig::GetItemStorageRowSizeLimit(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetItemStorageRowSizeLimit");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetItemStorageRowSizeLimit Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetItemStorageStockOssLogPeriod
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelConstConfig::GetItemStorageStockOssLogPeriod(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetItemStorageStockOssLogPeriod");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetItemStorageStockOssLogPeriod Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetItemStorageStockOssLogStartTimepoint
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelConstConfig::GetItemStorageStockOssLogStartTimepoint(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetItemStorageStockOssLogStartTimepoint");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetItemStorageStockOssLogStartTimepoint Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetLastBattleStartNewMatchingSameDurationByExcel
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufDuration*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufDuration* UExcelLoaderTgfConfigExcelConstConfig::GetLastBattleStartNewMatchingSameDurationByExcel(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetLastBattleStartNewMatchingSameDurationByExcel");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetLastBattleStartNewMatchingSameDurationByExcel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetLatencyLowLimit
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelConstConfig::GetLatencyLowLimit(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetLatencyLowLimit");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetLatencyLowLimit Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetLatencyMediumLimit
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelConstConfig::GetLatencyMediumLimit(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetLatencyMediumLimit");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetLatencyMediumLimit Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetLazySearchRandomBeginSecond
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelConstConfig::GetLazySearchRandomBeginSecond(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetLazySearchRandomBeginSecond");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetLazySearchRandomBeginSecond Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetLazySearchRandomEndSecond
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelConstConfig::GetLazySearchRandomEndSecond(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetLazySearchRandomEndSecond");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetLazySearchRandomEndSecond Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetMailDefaultExpire
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufDuration*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufDuration* UExcelLoaderTgfConfigExcelConstConfig::GetMailDefaultExpire(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetMailDefaultExpire");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetMailDefaultExpire Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetMailDetailItemMaxSize
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelConstConfig::GetMailDetailItemMaxSize(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetMailDetailItemMaxSize");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetMailDetailItemMaxSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetMarketGoodsDeliverMailId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelConstConfig::GetMarketGoodsDeliverMailId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetMarketGoodsDeliverMailId");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetMarketGoodsDeliverMailId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetMarketMaxCanBuyCountSingle
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelConstConfig::GetMarketMaxCanBuyCountSingle(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetMarketMaxCanBuyCountSingle");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetMarketMaxCanBuyCountSingle Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetMarketPoorManCdSecond
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelConstConfig::GetMarketPoorManCdSecond(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetMarketPoorManCdSecond");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetMarketPoorManCdSecond Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetMarketPoorManLvlCondition
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelConstConfig::GetMarketPoorManLvlCondition(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetMarketPoorManLvlCondition");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetMarketPoorManLvlCondition Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetMarketPoorManProductCountPerTab
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelConstConfig::GetMarketPoorManProductCountPerTab(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetMarketPoorManProductCountPerTab");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetMarketPoorManProductCountPerTab Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetMarketPoorManWealthCondition
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelConstConfig::GetMarketPoorManWealthCondition(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetMarketPoorManWealthCondition");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetMarketPoorManWealthCondition Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetMarketProductDailyResetTimeOffset
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufDuration*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufDuration* UExcelLoaderTgfConfigExcelConstConfig::GetMarketProductDailyResetTimeOffset(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetMarketProductDailyResetTimeOffset");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetMarketProductDailyResetTimeOffset Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetMarketProductMonthResetTimeOffset
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufDuration*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufDuration* UExcelLoaderTgfConfigExcelConstConfig::GetMarketProductMonthResetTimeOffset(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetMarketProductMonthResetTimeOffset");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetMarketProductMonthResetTimeOffset Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetMarketProductWeeklyResetTimeOffset
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufDuration*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufDuration* UExcelLoaderTgfConfigExcelConstConfig::GetMarketProductWeeklyResetTimeOffset(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetMarketProductWeeklyResetTimeOffset");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetMarketProductWeeklyResetTimeOffset Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetMarketRefreshEnable
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UExcelLoaderTgfConfigExcelConstConfig::GetMarketRefreshEnable(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetMarketRefreshEnable");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetMarketRefreshEnable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetMatchingCalcTotalMatchingPlayerCountCacheTimeout
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufDuration*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufDuration* UExcelLoaderTgfConfigExcelConstConfig::GetMatchingCalcTotalMatchingPlayerCountCacheTimeout(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetMatchingCalcTotalMatchingPlayerCountCacheTimeout");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetMatchingCalcTotalMatchingPlayerCountCacheTimeout Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetMatchingCountOssDuration
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufDuration*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufDuration* UExcelLoaderTgfConfigExcelConstConfig::GetMatchingCountOssDuration(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetMatchingCountOssDuration");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetMatchingCountOssDuration Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetMatchingCurrentRoleCombatValueCoefficient
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UExcelLoaderTgfConfigExcelConstConfig::GetMatchingCurrentRoleCombatValueCoefficient(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetMatchingCurrentRoleCombatValueCoefficient");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetMatchingCurrentRoleCombatValueCoefficient Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetMatchingEquipmentCombatValueCoefficient
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UExcelLoaderTgfConfigExcelConstConfig::GetMatchingEquipmentCombatValueCoefficient(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetMatchingEquipmentCombatValueCoefficient");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetMatchingEquipmentCombatValueCoefficient Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetMatchingEquipmentCombatValueFix
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UExcelLoaderTgfConfigExcelConstConfig::GetMatchingEquipmentCombatValueFix(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetMatchingEquipmentCombatValueFix");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetMatchingEquipmentCombatValueFix Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetMatchingEquipmentDurabilityCoefficient
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UExcelLoaderTgfConfigExcelConstConfig::GetMatchingEquipmentDurabilityCoefficient(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetMatchingEquipmentDurabilityCoefficient");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetMatchingEquipmentDurabilityCoefficient Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetMatchingEquipmentDurabilityThreshold
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UExcelLoaderTgfConfigExcelConstConfig::GetMatchingEquipmentDurabilityThreshold(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetMatchingEquipmentDurabilityThreshold");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetMatchingEquipmentDurabilityThreshold Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetMatchingGemCombatValueCoefficient
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UExcelLoaderTgfConfigExcelConstConfig::GetMatchingGemCombatValueCoefficient(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetMatchingGemCombatValueCoefficient");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetMatchingGemCombatValueCoefficient Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetMatchingGemCombatValueFix
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UExcelLoaderTgfConfigExcelConstConfig::GetMatchingGemCombatValueFix(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetMatchingGemCombatValueFix");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetMatchingGemCombatValueFix Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetMatchingGemDurabilityCoefficient
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UExcelLoaderTgfConfigExcelConstConfig::GetMatchingGemDurabilityCoefficient(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetMatchingGemDurabilityCoefficient");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetMatchingGemDurabilityCoefficient Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetMatchingHistoryMaxRoleTotalCombatValueCoefficient
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UExcelLoaderTgfConfigExcelConstConfig::GetMatchingHistoryMaxRoleTotalCombatValueCoefficient(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetMatchingHistoryMaxRoleTotalCombatValueCoefficient");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetMatchingHistoryMaxRoleTotalCombatValueCoefficient Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetMatchingHistoryTotalRoleLevelCombatValueFix
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UExcelLoaderTgfConfigExcelConstConfig::GetMatchingHistoryTotalRoleLevelCombatValueFix(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetMatchingHistoryTotalRoleLevelCombatValueFix");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetMatchingHistoryTotalRoleLevelCombatValueFix Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetMatchingHistoryTotalRoleLevelCombatValueThreshold
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UExcelLoaderTgfConfigExcelConstConfig::GetMatchingHistoryTotalRoleLevelCombatValueThreshold(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetMatchingHistoryTotalRoleLevelCombatValueThreshold");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetMatchingHistoryTotalRoleLevelCombatValueThreshold Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetMatchingLogExpireTimeout
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufDuration*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufDuration* UExcelLoaderTgfConfigExcelConstConfig::GetMatchingLogExpireTimeout(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetMatchingLogExpireTimeout");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetMatchingLogExpireTimeout Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetMatchingLogKeepCount
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelConstConfig::GetMatchingLogKeepCount(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetMatchingLogKeepCount");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetMatchingLogKeepCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetMatchingLogMaxCount
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelConstConfig::GetMatchingLogMaxCount(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetMatchingLogMaxCount");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetMatchingLogMaxCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetMatchingNotCreateRoomForRoleForce
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelConstConfig::GetMatchingNotCreateRoomForRoleForce(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetMatchingNotCreateRoomForRoleForce");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetMatchingNotCreateRoomForRoleForce Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetMatchingNotCreateRoomForRoleForceSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelConstConfig::GetMatchingNotCreateRoomForRoleForceSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetMatchingNotCreateRoomForRoleForceSize");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetMatchingNotCreateRoomForRoleForceSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetMatchingPvpRankScoreDamageCoefficient
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UExcelLoaderTgfConfigExcelConstConfig::GetMatchingPvpRankScoreDamageCoefficient(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetMatchingPvpRankScoreDamageCoefficient");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetMatchingPvpRankScoreDamageCoefficient Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetMatchingPvpRankScoreDamageMaxScore
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelConstConfig::GetMatchingPvpRankScoreDamageMaxScore(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetMatchingPvpRankScoreDamageMaxScore");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetMatchingPvpRankScoreDamageMaxScore Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetMatchingPvpRankScoreHealCoefficient
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UExcelLoaderTgfConfigExcelConstConfig::GetMatchingPvpRankScoreHealCoefficient(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetMatchingPvpRankScoreHealCoefficient");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetMatchingPvpRankScoreHealCoefficient Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetMatchingPvpRankScoreHealMaxScore
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelConstConfig::GetMatchingPvpRankScoreHealMaxScore(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetMatchingPvpRankScoreHealMaxScore");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetMatchingPvpRankScoreHealMaxScore Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetMatchingPvpRankScoreSuccAddingScore
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelConstConfig::GetMatchingPvpRankScoreSuccAddingScore(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetMatchingPvpRankScoreSuccAddingScore");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetMatchingPvpRankScoreSuccAddingScore Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetMatchingSameFactionIdStart
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelConstConfig::GetMatchingSameFactionIdStart(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetMatchingSameFactionIdStart");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetMatchingSameFactionIdStart Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetMatchingSameTeamAndFactionForRoleForce
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelConstConfig::GetMatchingSameTeamAndFactionForRoleForce(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetMatchingSameTeamAndFactionForRoleForce");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetMatchingSameTeamAndFactionForRoleForce Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetMatchingSameTeamAndFactionForRoleForceSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelConstConfig::GetMatchingSameTeamAndFactionForRoleForceSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetMatchingSameTeamAndFactionForRoleForceSize");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetMatchingSameTeamAndFactionForRoleForceSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetMerchantRepurchaseListMaxSize
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelConstConfig::GetMerchantRepurchaseListMaxSize(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetMerchantRepurchaseListMaxSize");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetMerchantRepurchaseListMaxSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetMithrilForceAffixBasicProbability
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelConstConfig::GetMithrilForceAffixBasicProbability(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetMithrilForceAffixBasicProbability");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetMithrilForceAffixBasicProbability Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetMithrilForceCurrencyBasicFactor
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelConstConfig::GetMithrilForceCurrencyBasicFactor(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetMithrilForceCurrencyBasicFactor");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetMithrilForceCurrencyBasicFactor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetMithrilForceCurrencyFixedReward
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelConstConfig::GetMithrilForceCurrencyFixedReward(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetMithrilForceCurrencyFixedReward");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetMithrilForceCurrencyFixedReward Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetMithrilForceCurrencyItemId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelConstConfig::GetMithrilForceCurrencyItemId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetMithrilForceCurrencyItemId");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetMithrilForceCurrencyItemId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetMithrilForceDefaultLevelId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelConstConfig::GetMithrilForceDefaultLevelId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetMithrilForceDefaultLevelId");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetMithrilForceDefaultLevelId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetMithrilForceDefaultLevelType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelConstConfig::GetMithrilForceDefaultLevelType(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetMithrilForceDefaultLevelType");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetMithrilForceDefaultLevelType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetMithrilForceExpbottleBasicProbability
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelConstConfig::GetMithrilForceExpbottleBasicProbability(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetMithrilForceExpbottleBasicProbability");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetMithrilForceExpbottleBasicProbability Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetMithrilForceExpBottleItemId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelConstConfig::GetMithrilForceExpBottleItemId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetMithrilForceExpBottleItemId");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetMithrilForceExpBottleItemId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetMithrilForceExpBottleItemNum
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelConstConfig::GetMithrilForceExpBottleItemNum(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetMithrilForceExpBottleItemNum");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetMithrilForceExpBottleItemNum Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetMithrilForceHeirloomBasicFactor
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelConstConfig::GetMithrilForceHeirloomBasicFactor(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetMithrilForceHeirloomBasicFactor");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetMithrilForceHeirloomBasicFactor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetMithrilForceHeirloomFixedReward
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelConstConfig::GetMithrilForceHeirloomFixedReward(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetMithrilForceHeirloomFixedReward");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetMithrilForceHeirloomFixedReward Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetMithrilForceHeirloomItemId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelConstConfig::GetMithrilForceHeirloomItemId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetMithrilForceHeirloomItemId");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetMithrilForceHeirloomItemId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetMithrilForceLevelList
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelConstConfig::GetMithrilForceLevelList(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetMithrilForceLevelList");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetMithrilForceLevelList Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetMithrilForceLevelListSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelConstConfig::GetMithrilForceLevelListSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetMithrilForceLevelListSize");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetMithrilForceLevelListSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetMithrilForceMailId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelConstConfig::GetMithrilForceMailId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetMithrilForceMailId");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetMithrilForceMailId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetMithrilForcePotionBasicProbability
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelConstConfig::GetMithrilForcePotionBasicProbability(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetMithrilForcePotionBasicProbability");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetMithrilForcePotionBasicProbability Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetMithrilForcePotionItemId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelConstConfig::GetMithrilForcePotionItemId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetMithrilForcePotionItemId");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetMithrilForcePotionItemId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetMithrilForcePotionItemNum
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelConstConfig::GetMithrilForcePotionItemNum(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetMithrilForcePotionItemNum");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetMithrilForcePotionItemNum Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetMithrilForceSameFactionRebirthsCount
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelConstConfig::GetMithrilForceSameFactionRebirthsCount(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetMithrilForceSameFactionRebirthsCount");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetMithrilForceSameFactionRebirthsCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetMoonPhasesStarttime
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufDuration*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufDuration* UExcelLoaderTgfConfigExcelConstConfig::GetMoonPhasesStarttime(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetMoonPhasesStarttime");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetMoonPhasesStarttime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetMoonPhasesTime
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufDuration*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufDuration* UExcelLoaderTgfConfigExcelConstConfig::GetMoonPhasesTime(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetMoonPhasesTime");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetMoonPhasesTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetNoobMatchingLogicEnableBattleTimes
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelConstConfig::GetNoobMatchingLogicEnableBattleTimes(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetNoobMatchingLogicEnableBattleTimes");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetNoobMatchingLogicEnableBattleTimes Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetNoobMatchingLogicEscapeRateLessThan
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UExcelLoaderTgfConfigExcelConstConfig::GetNoobMatchingLogicEscapeRateLessThan(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetNoobMatchingLogicEscapeRateLessThan");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetNoobMatchingLogicEscapeRateLessThan Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetNoobMatchingLogicKdLessThan
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UExcelLoaderTgfConfigExcelConstConfig::GetNoobMatchingLogicKdLessThan(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetNoobMatchingLogicKdLessThan");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetNoobMatchingLogicKdLessThan Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetNoobMatchingLogicStatisticsMBattleTimes
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelConstConfig::GetNoobMatchingLogicStatisticsMBattleTimes(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetNoobMatchingLogicStatisticsMBattleTimes");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetNoobMatchingLogicStatisticsMBattleTimes Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetNoobMatchingLogicStatisticsNDays
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelConstConfig::GetNoobMatchingLogicStatisticsNDays(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetNoobMatchingLogicStatisticsNDays");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetNoobMatchingLogicStatisticsNDays Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetNoobMatchingLogicSubScore
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelConstConfig::GetNoobMatchingLogicSubScore(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetNoobMatchingLogicSubScore");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetNoobMatchingLogicSubScore Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetPayCompliancePolicy
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfConfigExcelConstConfig::GetPayCompliancePolicy(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetPayCompliancePolicy");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetPayCompliancePolicy Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetPlayerRecentLimit
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelConstConfig::GetPlayerRecentLimit(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetPlayerRecentLimit");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetPlayerRecentLimit Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetPreSearchMaxTimeout
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelConstConfig::GetPreSearchMaxTimeout(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetPreSearchMaxTimeout");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetPreSearchMaxTimeout Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetPveKillPlayerRankMaxSaveBattleCount
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelConstConfig::GetPveKillPlayerRankMaxSaveBattleCount(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetPveKillPlayerRankMaxSaveBattleCount");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetPveKillPlayerRankMaxSaveBattleCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetPvpOnlineAddStarByWin
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelConstConfig::GetPvpOnlineAddStarByWin(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetPvpOnlineAddStarByWin");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetPvpOnlineAddStarByWin Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetPvpOnlineMatchingAmpilyInterval
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufDuration*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufDuration* UExcelLoaderTgfConfigExcelConstConfig::GetPvpOnlineMatchingAmpilyInterval(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetPvpOnlineMatchingAmpilyInterval");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetPvpOnlineMatchingAmpilyInterval Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetPvpOnlineMaxHistoryReportCount
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelConstConfig::GetPvpOnlineMaxHistoryReportCount(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetPvpOnlineMaxHistoryReportCount");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetPvpOnlineMaxHistoryReportCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetPvpOnlineMaxHistoryReportTimeout
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufDuration*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufDuration* UExcelLoaderTgfConfigExcelConstConfig::GetPvpOnlineMaxHistoryReportTimeout(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetPvpOnlineMaxHistoryReportTimeout");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetPvpOnlineMaxHistoryReportTimeout Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetPvpOnlineMaxHistorySeasonCount
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelConstConfig::GetPvpOnlineMaxHistorySeasonCount(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetPvpOnlineMaxHistorySeasonCount");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetPvpOnlineMaxHistorySeasonCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetPvpOnlineRecentlyMatchingHistoryCount
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelConstConfig::GetPvpOnlineRecentlyMatchingHistoryCount(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetPvpOnlineRecentlyMatchingHistoryCount");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetPvpOnlineRecentlyMatchingHistoryCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetPvpOnlineRecentlyMatchingProtection
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelConstConfig::GetPvpOnlineRecentlyMatchingProtection(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetPvpOnlineRecentlyMatchingProtection");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetPvpOnlineRecentlyMatchingProtection Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetPvpOnlineSubStarByLose
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelConstConfig::GetPvpOnlineSubStarByLose(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetPvpOnlineSubStarByLose");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetPvpOnlineSubStarByLose Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetRepairMaterialIds
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelConstConfig::GetRepairMaterialIds(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetRepairMaterialIds");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetRepairMaterialIds Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetRepairMaterialIdsSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelConstConfig::GetRepairMaterialIdsSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetRepairMaterialIdsSize");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetRepairMaterialIdsSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetReportPveKillPlayerRankMinBatlleCount
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelConstConfig::GetReportPveKillPlayerRankMinBatlleCount(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetReportPveKillPlayerRankMinBatlleCount");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetReportPveKillPlayerRankMinBatlleCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetRobotCreateIndexStart
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelConstConfig::GetRobotCreateIndexStart(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetRobotCreateIndexStart");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetRobotCreateIndexStart Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetRobotDisable
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UExcelLoaderTgfConfigExcelConstConfig::GetRobotDisable(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetRobotDisable");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetRobotDisable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetRobotZoneId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelConstConfig::GetRobotZoneId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetRobotZoneId");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetRobotZoneId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetRoleBackpackDefaultRowSize
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelConstConfig::GetRoleBackpackDefaultRowSize(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetRoleBackpackDefaultRowSize");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetRoleBackpackDefaultRowSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetRoleBackpackDefualtColumnSize
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelConstConfig::GetRoleBackpackDefualtColumnSize(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetRoleBackpackDefualtColumnSize");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetRoleBackpackDefualtColumnSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetRoleBackpackRaceAddRowSize
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelConstConfig::GetRoleBackpackRaceAddRowSize(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetRoleBackpackRaceAddRowSize");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetRoleBackpackRaceAddRowSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetRoleCountLimit
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelConstConfig::GetRoleCountLimit(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetRoleCountLimit");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetRoleCountLimit Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetRoleCreateIndexOffest
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelConstConfig::GetRoleCreateIndexOffest(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetRoleCreateIndexOffest");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetRoleCreateIndexOffest Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetRoleDefultNameDelimiter
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfConfigExcelConstConfig::GetRoleDefultNameDelimiter(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetRoleDefultNameDelimiter");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetRoleDefultNameDelimiter Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetRoleFirstCreatePresentBackpackItems
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDItemOffset*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDItemOffset* UExcelLoaderTgfConfigExcelConstConfig::GetRoleFirstCreatePresentBackpackItems(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetRoleFirstCreatePresentBackpackItems");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetRoleFirstCreatePresentBackpackItems Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetRoleFirstCreatePresentBackpackItemsSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelConstConfig::GetRoleFirstCreatePresentBackpackItemsSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetRoleFirstCreatePresentBackpackItemsSize");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetRoleFirstCreatePresentBackpackItemsSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetRoleLazyDeleteDuration
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufDuration*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufDuration* UExcelLoaderTgfConfigExcelConstConfig::GetRoleLazyDeleteDuration(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetRoleLazyDeleteDuration");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetRoleLazyDeleteDuration Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetRoleMoveSeasonMailTemplateId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelConstConfig::GetRoleMoveSeasonMailTemplateId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetRoleMoveSeasonMailTemplateId");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetRoleMoveSeasonMailTemplateId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetRoleNameAsciiCharLength
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelConstConfig::GetRoleNameAsciiCharLength(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetRoleNameAsciiCharLength");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetRoleNameAsciiCharLength Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetRoleNameLengthLimit
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelConstConfig::GetRoleNameLengthLimit(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetRoleNameLengthLimit");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetRoleNameLengthLimit Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetRoleNameLengthLowerLimit
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelConstConfig::GetRoleNameLengthLowerLimit(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetRoleNameLengthLowerLimit");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetRoleNameLengthLowerLimit Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetRoleNameNoAsciiCharLength
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelConstConfig::GetRoleNameNoAsciiCharLength(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetRoleNameNoAsciiCharLength");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetRoleNameNoAsciiCharLength Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetRoleNamePreservePrefix
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfConfigExcelConstConfig::GetRoleNamePreservePrefix(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetRoleNamePreservePrefix");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetRoleNamePreservePrefix Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetRoleReshapeFacePinchingCostItem
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDItemOffset*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDItemOffset* UExcelLoaderTgfConfigExcelConstConfig::GetRoleReshapeFacePinchingCostItem(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetRoleReshapeFacePinchingCostItem");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetRoleReshapeFacePinchingCostItem Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetRoleReshapeFacePinchingCostItemSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelConstConfig::GetRoleReshapeFacePinchingCostItemSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetRoleReshapeFacePinchingCostItemSize");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetRoleReshapeFacePinchingCostItemSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetRoleSmallBackpackDefaultRowSize
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelConstConfig::GetRoleSmallBackpackDefaultRowSize(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetRoleSmallBackpackDefaultRowSize");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetRoleSmallBackpackDefaultRowSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetRoleSmallBackpackDefualtColumnSize
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelConstConfig::GetRoleSmallBackpackDefualtColumnSize(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetRoleSmallBackpackDefualtColumnSize");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetRoleSmallBackpackDefualtColumnSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetRoleSnapshotSaveInterval
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelConstConfig::GetRoleSnapshotSaveInterval(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetRoleSnapshotSaveInterval");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetRoleSnapshotSaveInterval Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetRoomBatchGetMaxCount
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelConstConfig::GetRoomBatchGetMaxCount(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetRoomBatchGetMaxCount");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetRoomBatchGetMaxCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetRoomDeleteOutlineTime
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufDuration*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufDuration* UExcelLoaderTgfConfigExcelConstConfig::GetRoomDeleteOutlineTime(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetRoomDeleteOutlineTime");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetRoomDeleteOutlineTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetRoomGameplayList
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelConstConfig::GetRoomGameplayList(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetRoomGameplayList");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetRoomGameplayList Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetRoomGameplayListSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelConstConfig::GetRoomGameplayListSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetRoomGameplayListSize");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetRoomGameplayListSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetRoomInviteDuration
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufDuration*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufDuration* UExcelLoaderTgfConfigExcelConstConfig::GetRoomInviteDuration(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetRoomInviteDuration");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetRoomInviteDuration Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetRoomInviteIgnoreCount
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelConstConfig::GetRoomInviteIgnoreCount(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetRoomInviteIgnoreCount");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetRoomInviteIgnoreCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetRoomMapList
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelConstConfig::GetRoomMapList(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetRoomMapList");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetRoomMapList Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetRoomMapListSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelConstConfig::GetRoomMapListSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetRoomMapListSize");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetRoomMapListSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetRoomMenberMaxSize
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelConstConfig::GetRoomMenberMaxSize(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetRoomMenberMaxSize");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetRoomMenberMaxSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetRoomNameMaxSize
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelConstConfig::GetRoomNameMaxSize(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetRoomNameMaxSize");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetRoomNameMaxSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetRoomPasswordMaxSize
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelConstConfig::GetRoomPasswordMaxSize(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetRoomPasswordMaxSize");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetRoomPasswordMaxSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetRoomRefreshButtonCD
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufDuration*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufDuration* UExcelLoaderTgfConfigExcelConstConfig::GetRoomRefreshButtonCD(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetRoomRefreshButtonCD");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetRoomRefreshButtonCD Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetSelfQuitBanCreatMatchingTimeDuration
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufDuration*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufDuration* UExcelLoaderTgfConfigExcelConstConfig::GetSelfQuitBanCreatMatchingTimeDuration(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetSelfQuitBanCreatMatchingTimeDuration");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetSelfQuitBanCreatMatchingTimeDuration Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetStandAloneDisable
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UExcelLoaderTgfConfigExcelConstConfig::GetStandAloneDisable(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetStandAloneDisable");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetStandAloneDisable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetStartAddRobotGlobalMatchingUser
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelConstConfig::GetStartAddRobotGlobalMatchingUser(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetStartAddRobotGlobalMatchingUser");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetStartAddRobotGlobalMatchingUser Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetStartAddRobotTimeDuration
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufDuration*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufDuration* UExcelLoaderTgfConfigExcelConstConfig::GetStartAddRobotTimeDuration(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetStartAddRobotTimeDuration");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetStartAddRobotTimeDuration Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetTeamActionTimeTolerance
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufDuration*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufDuration* UExcelLoaderTgfConfigExcelConstConfig::GetTeamActionTimeTolerance(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetTeamActionTimeTolerance");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetTeamActionTimeTolerance Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetTeamGlobalMaxSize
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelConstConfig::GetTeamGlobalMaxSize(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetTeamGlobalMaxSize");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetTeamGlobalMaxSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetTeamInvitationExpiredTimeout
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufDuration*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufDuration* UExcelLoaderTgfConfigExcelConstConfig::GetTeamInvitationExpiredTimeout(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetTeamInvitationExpiredTimeout");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetTeamInvitationExpiredTimeout Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetTeamInviteeJoinTeamTimeout
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufDuration*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufDuration* UExcelLoaderTgfConfigExcelConstConfig::GetTeamInviteeJoinTeamTimeout(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetTeamInviteeJoinTeamTimeout");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetTeamInviteeJoinTeamTimeout Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetTeamMatchExpiredTimeout
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufDuration*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufDuration* UExcelLoaderTgfConfigExcelConstConfig::GetTeamMatchExpiredTimeout(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetTeamMatchExpiredTimeout");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetTeamMatchExpiredTimeout Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetTeenChatGlobalChangeMailTemplateId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelConstConfig::GetTeenChatGlobalChangeMailTemplateId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetTeenChatGlobalChangeMailTemplateId");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetTeenChatGlobalChangeMailTemplateId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetTeenChatMailTemplateId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelConstConfig::GetTeenChatMailTemplateId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetTeenChatMailTemplateId");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetTeenChatMailTemplateId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetTestDuration
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufDuration*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufDuration* UExcelLoaderTgfConfigExcelConstConfig::GetTestDuration(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetTestDuration");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetTestDuration Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetTestTimestamp
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufTimestamp*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufTimestamp* UExcelLoaderTgfConfigExcelConstConfig::GetTestTimestamp(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetTestTimestamp");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetTestTimestamp Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetTestTimestampSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelConstConfig::GetTestTimestampSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetTestTimestampSize");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetTestTimestampSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetTradeAuctionSearchCount
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelConstConfig::GetTradeAuctionSearchCount(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetTradeAuctionSearchCount");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetTradeAuctionSearchCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetTradeFixedOrderVaildTime
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelConstConfig::GetTradeFixedOrderVaildTime(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetTradeFixedOrderVaildTime");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetTradeFixedOrderVaildTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetTradeMarketProductBestSellingCount
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelConstConfig::GetTradeMarketProductBestSellingCount(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetTradeMarketProductBestSellingCount");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetTradeMarketProductBestSellingCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetTradeMarketProductPriceIncreaseCount
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelConstConfig::GetTradeMarketProductPriceIncreaseCount(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetTradeMarketProductPriceIncreaseCount");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetTradeMarketProductPriceIncreaseCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetTradeMarketProductShowPermillageBound
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelConstConfig::GetTradeMarketProductShowPermillageBound(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetTradeMarketProductShowPermillageBound");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetTradeMarketProductShowPermillageBound Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetTradeMarketProductShowPriceStatBound
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelConstConfig::GetTradeMarketProductShowPriceStatBound(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetTradeMarketProductShowPriceStatBound");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetTradeMarketProductShowPriceStatBound Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetTradeMarketUserMaxHistoryOrder
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelConstConfig::GetTradeMarketUserMaxHistoryOrder(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetTradeMarketUserMaxHistoryOrder");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetTradeMarketUserMaxHistoryOrder Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetTradeMaxDisplayStacksOfSamePrice
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelConstConfig::GetTradeMaxDisplayStacksOfSamePrice(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetTradeMaxDisplayStacksOfSamePrice");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetTradeMaxDisplayStacksOfSamePrice Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetTradeOrderDetailTtlHour
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelConstConfig::GetTradeOrderDetailTtlHour(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetTradeOrderDetailTtlHour");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetTradeOrderDetailTtlHour Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetTradeOrderPublishNewUnit
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufDuration*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufDuration* UExcelLoaderTgfConfigExcelConstConfig::GetTradeOrderPublishNewUnit(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetTradeOrderPublishNewUnit");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetTradeOrderPublishNewUnit Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetUnregisterAccountTips
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfConfigExcelConstConfig::GetUnregisterAccountTips(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetUnregisterAccountTips");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetUnregisterAccountTips Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetUserFutureReserveMailMaxCountPerMajorType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelConstConfig::GetUserFutureReserveMailMaxCountPerMajorType(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetUserFutureReserveMailMaxCountPerMajorType");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetUserFutureReserveMailMaxCountPerMajorType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetUserMailMaxCountPerMajorType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelConstConfig::GetUserMailMaxCountPerMajorType(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetUserMailMaxCountPerMajorType");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetUserMailMaxCountPerMajorType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetUserNicknameAsciiCharLength
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelConstConfig::GetUserNicknameAsciiCharLength(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetUserNicknameAsciiCharLength");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetUserNicknameAsciiCharLength Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetUserNicknameLengthLimit
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelConstConfig::GetUserNicknameLengthLimit(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetUserNicknameLengthLimit");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetUserNicknameLengthLimit Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetUserNicknameNoAsciiCharLength
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelConstConfig::GetUserNicknameNoAsciiCharLength(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetUserNicknameNoAsciiCharLength");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetUserNicknameNoAsciiCharLength Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetUserNicknamePreservePrefix
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfConfigExcelConstConfig::GetUserNicknamePreservePrefix(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetUserNicknamePreservePrefix");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetUserNicknamePreservePrefix Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetUserOptionsMaxSize
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelConstConfig::GetUserOptionsMaxSize(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetUserOptionsMaxSize");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetUserOptionsMaxSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetWordsAsciiCharLength
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelConstConfig::GetWordsAsciiCharLength(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetWordsAsciiCharLength");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetWordsAsciiCharLength Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConstConfig.GetWordsNoAsciiCharLength
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelConstConfig::GetWordsNoAsciiCharLength(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConstConfig", "GetWordsNoAsciiCharLength");

	Params::ExcelLoaderTgfConfigExcelConstConfig_GetWordsNoAsciiCharLength Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelOriginConstConfig.GetKey
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfConfigExcelOriginConstConfig::GetKey(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelOriginConstConfig", "GetKey");

	Params::ExcelLoaderTgfConfigExcelOriginConstConfig_GetKey Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelOriginConstConfig.GetValue
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfConfigExcelOriginConstConfig::GetValue(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelOriginConstConfig", "GetValue");

	Params::ExcelLoaderTgfConfigExcelOriginConstConfig_GetValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigPatchTimeInfo.GetPatchData
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufTimestamp*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufTimestamp* UExcelLoaderTgfConfigPatchTimeInfo::GetPatchData(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigPatchTimeInfo", "GetPatchData");

	Params::ExcelLoaderTgfConfigPatchTimeInfo_GetPatchData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigPatchTimeInfo.GetPatchDataTime
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufTimestamp*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufTimestamp* UExcelLoaderTgfConfigPatchTimeInfo::GetPatchDataTime(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigPatchTimeInfo", "GetPatchDataTime");

	Params::ExcelLoaderTgfConfigPatchTimeInfo_GetPatchDataTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigTblCheck.GetAllOfTimeInfos
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigPatchTimeInfo*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigPatchTimeInfo*> UExcelLoaderTgfConfigTblCheck::GetAllOfTimeInfos()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigTblCheck", "GetAllOfTimeInfos");

	Params::ExcelLoaderTgfConfigTblCheck_GetAllOfTimeInfos Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigTblCheck.GetId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigTblCheck::GetId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigTblCheck", "GetId");

	Params::ExcelLoaderTgfConfigTblCheck_GetId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigTblCheck.GetPatchData
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufTimestamp*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufTimestamp* UExcelLoaderTgfConfigTblCheck::GetPatchData(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigTblCheck", "GetPatchData");

	Params::ExcelLoaderTgfConfigTblCheck_GetPatchData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigTblCheck.GetPatchDataTime
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufTimestamp*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufTimestamp* UExcelLoaderTgfConfigTblCheck::GetPatchDataTime(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigTblCheck", "GetPatchDataTime");

	Params::ExcelLoaderTgfConfigTblCheck_GetPatchDataTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigTblCheck.GetRegion
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfConfigTblCheck::GetRegion(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigTblCheck", "GetRegion");

	Params::ExcelLoaderTgfConfigTblCheck_GetRegion Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigTblCheck.GetTimeInfo
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigPatchTimeInfo*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigPatchTimeInfo* UExcelLoaderTgfConfigTblCheck::GetTimeInfo(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigTblCheck", "GetTimeInfo");

	Params::ExcelLoaderTgfConfigTblCheck_GetTimeInfo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigTblCheck.GetTimeInfos
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigPatchTimeInfo*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigPatchTimeInfo* UExcelLoaderTgfConfigTblCheck::GetTimeInfos(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigTblCheck", "GetTimeInfos");

	Params::ExcelLoaderTgfConfigTblCheck_GetTimeInfos Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigTblCheck.GetTimeInfosSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigTblCheck::GetTimeInfosSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigTblCheck", "GetTimeInfosSize");

	Params::ExcelLoaderTgfConfigTblCheck_GetTimeInfosSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRankBanRule.GetAllOfBanRankIds
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UExcelLoaderTgfConfigExcelRankBanRule::GetAllOfBanRankIds()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRankBanRule", "GetAllOfBanRankIds");

	Params::ExcelLoaderTgfConfigExcelRankBanRule_GetAllOfBanRankIds Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRankBanRule.GetBanRankIds
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelRankBanRule::GetBanRankIds(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRankBanRule", "GetBanRankIds");

	Params::ExcelLoaderTgfConfigExcelRankBanRule_GetBanRankIds Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRankBanRule.GetBanRankIdsSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelRankBanRule::GetBanRankIdsSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRankBanRule", "GetBanRankIdsSize");

	Params::ExcelLoaderTgfConfigExcelRankBanRule_GetBanRankIdsSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRankBanRule.GetBanRuleId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelRankBanRule::GetBanRuleId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRankBanRule", "GetBanRuleId");

	Params::ExcelLoaderTgfConfigExcelRankBanRule_GetBanRuleId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRankBanRule.GetDescription
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfConfigExcelRankBanRule::GetDescription(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRankBanRule", "GetDescription");

	Params::ExcelLoaderTgfConfigExcelRankBanRule_GetDescription Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRankBanRule.GetName
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfConfigExcelRankBanRule::GetName(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRankBanRule", "GetName");

	Params::ExcelLoaderTgfConfigExcelRankBanRule_GetName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfItemTypeRangeOption.GetEndIndex
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfItemTypeRangeOption::GetEndIndex(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfItemTypeRangeOption", "GetEndIndex");

	Params::ExcelLoaderTgfItemTypeRangeOption_GetEndIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfItemTypeRangeOption.GetStartIndex
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfItemTypeRangeOption::GetStartIndex(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfItemTypeRangeOption", "GetStartIndex");

	Params::ExcelLoaderTgfItemTypeRangeOption_GetStartIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfItemTypeOption.GetAllOfItemTypeRange
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfItemTypeRangeOption*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfItemTypeRangeOption*> UExcelLoaderTgfItemTypeOption::GetAllOfItemTypeRange()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfItemTypeOption", "GetAllOfItemTypeRange");

	Params::ExcelLoaderTgfItemTypeOption_GetAllOfItemTypeRange Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfItemTypeOption.GetItemStorage
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UExcelLoaderTgfItemTypeOption::GetItemStorage(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfItemTypeOption", "GetItemStorage");

	Params::ExcelLoaderTgfItemTypeOption_GetItemStorage Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfItemTypeOption.GetItemTypeRange
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfItemTypeRangeOption*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfItemTypeRangeOption* UExcelLoaderTgfItemTypeOption::GetItemTypeRange(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfItemTypeOption", "GetItemTypeRange");

	Params::ExcelLoaderTgfItemTypeOption_GetItemTypeRange Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfItemTypeOption.GetItemTypeRangeSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfItemTypeOption::GetItemTypeRangeSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfItemTypeOption", "GetItemTypeRangeSize");

	Params::ExcelLoaderTgfItemTypeOption_GetItemTypeRangeSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfItemTypeOption.GetNeedGuid
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UExcelLoaderTgfItemTypeOption::GetNeedGuid(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfItemTypeOption", "GetNeedGuid");

	Params::ExcelLoaderTgfItemTypeOption_GetNeedGuid Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfItemTypeOption.GetNeedOccupyTheGrid
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UExcelLoaderTgfItemTypeOption::GetNeedOccupyTheGrid(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfItemTypeOption", "GetNeedOccupyTheGrid");

	Params::ExcelLoaderTgfItemTypeOption_GetNeedOccupyTheGrid Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufSourceCodeInfoLocation.GetAllOfLeadingDetachedComments
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> UExcelLoaderGoogleProtobufSourceCodeInfoLocation::GetAllOfLeadingDetachedComments()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufSourceCodeInfoLocation", "GetAllOfLeadingDetachedComments");

	Params::ExcelLoaderGoogleProtobufSourceCodeInfoLocation_GetAllOfLeadingDetachedComments Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufSourceCodeInfoLocation.GetAllOfPath
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UExcelLoaderGoogleProtobufSourceCodeInfoLocation::GetAllOfPath()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufSourceCodeInfoLocation", "GetAllOfPath");

	Params::ExcelLoaderGoogleProtobufSourceCodeInfoLocation_GetAllOfPath Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufSourceCodeInfoLocation.GetAllOfSpan
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UExcelLoaderGoogleProtobufSourceCodeInfoLocation::GetAllOfSpan()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufSourceCodeInfoLocation", "GetAllOfSpan");

	Params::ExcelLoaderGoogleProtobufSourceCodeInfoLocation_GetAllOfSpan Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufSourceCodeInfoLocation.GetLeadingComments
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderGoogleProtobufSourceCodeInfoLocation::GetLeadingComments(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufSourceCodeInfoLocation", "GetLeadingComments");

	Params::ExcelLoaderGoogleProtobufSourceCodeInfoLocation_GetLeadingComments Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufSourceCodeInfoLocation.GetLeadingDetachedComments
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderGoogleProtobufSourceCodeInfoLocation::GetLeadingDetachedComments(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufSourceCodeInfoLocation", "GetLeadingDetachedComments");

	Params::ExcelLoaderGoogleProtobufSourceCodeInfoLocation_GetLeadingDetachedComments Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufSourceCodeInfoLocation.GetLeadingDetachedCommentsSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderGoogleProtobufSourceCodeInfoLocation::GetLeadingDetachedCommentsSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufSourceCodeInfoLocation", "GetLeadingDetachedCommentsSize");

	Params::ExcelLoaderGoogleProtobufSourceCodeInfoLocation_GetLeadingDetachedCommentsSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufSourceCodeInfoLocation.GetPath
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderGoogleProtobufSourceCodeInfoLocation::GetPath(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufSourceCodeInfoLocation", "GetPath");

	Params::ExcelLoaderGoogleProtobufSourceCodeInfoLocation_GetPath Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufSourceCodeInfoLocation.GetPathSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderGoogleProtobufSourceCodeInfoLocation::GetPathSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufSourceCodeInfoLocation", "GetPathSize");

	Params::ExcelLoaderGoogleProtobufSourceCodeInfoLocation_GetPathSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufSourceCodeInfoLocation.GetSpan
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderGoogleProtobufSourceCodeInfoLocation::GetSpan(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufSourceCodeInfoLocation", "GetSpan");

	Params::ExcelLoaderGoogleProtobufSourceCodeInfoLocation_GetSpan Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufSourceCodeInfoLocation.GetSpanSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderGoogleProtobufSourceCodeInfoLocation::GetSpanSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufSourceCodeInfoLocation", "GetSpanSize");

	Params::ExcelLoaderGoogleProtobufSourceCodeInfoLocation_GetSpanSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufSourceCodeInfoLocation.GetTrailingComments
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderGoogleProtobufSourceCodeInfoLocation::GetTrailingComments(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufSourceCodeInfoLocation", "GetTrailingComments");

	Params::ExcelLoaderGoogleProtobufSourceCodeInfoLocation_GetTrailingComments Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDActivityDailyQuestRefreshCfg.GetAddCnt
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDActivityDailyQuestRefreshCfg::GetAddCnt(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDActivityDailyQuestRefreshCfg", "GetAddCnt");

	Params::ExcelLoaderTgfDActivityDailyQuestRefreshCfg_GetAddCnt Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDActivityDailyQuestRefreshCfg.GetInitCnt
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDActivityDailyQuestRefreshCfg::GetInitCnt(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDActivityDailyQuestRefreshCfg", "GetInitCnt");

	Params::ExcelLoaderTgfDActivityDailyQuestRefreshCfg_GetInitCnt Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDActivityDailyQuestRefreshCfg.GetMaxCnt
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDActivityDailyQuestRefreshCfg::GetMaxCnt(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDActivityDailyQuestRefreshCfg", "GetMaxCnt");

	Params::ExcelLoaderTgfDActivityDailyQuestRefreshCfg_GetMaxCnt Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDActivityDailyQuestRefreshCfg.GetPoolId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDActivityDailyQuestRefreshCfg::GetPoolId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDActivityDailyQuestRefreshCfg", "GetPoolId");

	Params::ExcelLoaderTgfDActivityDailyQuestRefreshCfg_GetPoolId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDActivityCoin.GetCount
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfDActivityCoin::GetCount(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDActivityCoin", "GetCount");

	Params::ExcelLoaderTgfDActivityCoin_GetCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDActivityCoin.GetTypeId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDActivityCoin::GetTypeId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDActivityCoin", "GetTypeId");

	Params::ExcelLoaderTgfDActivityCoin_GetTypeId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRobotNameDatabase.GetGenderType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelRobotNameDatabase::GetGenderType(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRobotNameDatabase", "GetGenderType");

	Params::ExcelLoaderTgfConfigExcelRobotNameDatabase_GetGenderType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRobotNameDatabase.GetRace
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelRobotNameDatabase::GetRace(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRobotNameDatabase", "GetRace");

	Params::ExcelLoaderTgfConfigExcelRobotNameDatabase_GetRace Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRobotNameDatabase.GetRoleNamePrefix
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfConfigExcelRobotNameDatabase::GetRoleNamePrefix(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRobotNameDatabase", "GetRoleNamePrefix");

	Params::ExcelLoaderTgfConfigExcelRobotNameDatabase_GetRoleNamePrefix Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDActivityMaxExp.GetCycleExp
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDActivityMaxExp::GetCycleExp(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDActivityMaxExp", "GetCycleExp");

	Params::ExcelLoaderTgfDActivityMaxExp_GetCycleExp Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDActivityMaxExp.GetLevelId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDActivityMaxExp::GetLevelId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDActivityMaxExp", "GetLevelId");

	Params::ExcelLoaderTgfDActivityMaxExp_GetLevelId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDActivityMaxExp.GetMaxExp
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDActivityMaxExp::GetMaxExp(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDActivityMaxExp", "GetMaxExp");

	Params::ExcelLoaderTgfDActivityMaxExp_GetMaxExp Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelActivityCenter.GetActivityRule
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelActivityCenter::GetActivityRule(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelActivityCenter", "GetActivityRule");

	Params::ExcelLoaderTgfConfigExcelActivityCenter_GetActivityRule Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelActivityCenter.GetAllOfBindLevels
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UExcelLoaderTgfConfigExcelActivityCenter::GetAllOfBindLevels()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelActivityCenter", "GetAllOfBindLevels");

	Params::ExcelLoaderTgfConfigExcelActivityCenter_GetAllOfBindLevels Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelActivityCenter.GetAllOfEntitys
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfDIntKV*>    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfDIntKV*> UExcelLoaderTgfConfigExcelActivityCenter::GetAllOfEntitys()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelActivityCenter", "GetAllOfEntitys");

	Params::ExcelLoaderTgfConfigExcelActivityCenter_GetAllOfEntitys Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelActivityCenter.GetAllOfManualRefreshCosts
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfDIntKV*>    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfDIntKV*> UExcelLoaderTgfConfigExcelActivityCenter::GetAllOfManualRefreshCosts()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelActivityCenter", "GetAllOfManualRefreshCosts");

	Params::ExcelLoaderTgfConfigExcelActivityCenter_GetAllOfManualRefreshCosts Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelActivityCenter.GetAllOfMinorPics
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> UExcelLoaderTgfConfigExcelActivityCenter::GetAllOfMinorPics()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelActivityCenter", "GetAllOfMinorPics");

	Params::ExcelLoaderTgfConfigExcelActivityCenter_GetAllOfMinorPics Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelActivityCenter.GetBindLevels
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelActivityCenter::GetBindLevels(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelActivityCenter", "GetBindLevels");

	Params::ExcelLoaderTgfConfigExcelActivityCenter_GetBindLevels Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelActivityCenter.GetBindLevelsSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelActivityCenter::GetBindLevelsSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelActivityCenter", "GetBindLevelsSize");

	Params::ExcelLoaderTgfConfigExcelActivityCenter_GetBindLevelsSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelActivityCenter.GetClientCustomText
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfConfigExcelActivityCenter::GetClientCustomText(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelActivityCenter", "GetClientCustomText");

	Params::ExcelLoaderTgfConfigExcelActivityCenter_GetClientCustomText Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelActivityCenter.GetClientHidden
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UExcelLoaderTgfConfigExcelActivityCenter::GetClientHidden(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelActivityCenter", "GetClientHidden");

	Params::ExcelLoaderTgfConfigExcelActivityCenter_GetClientHidden Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelActivityCenter.GetCommonCondition
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDConditionBasicLimit*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDConditionBasicLimit* UExcelLoaderTgfConfigExcelActivityCenter::GetCommonCondition(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelActivityCenter", "GetCommonCondition");

	Params::ExcelLoaderTgfConfigExcelActivityCenter_GetCommonCondition Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelActivityCenter.GetCustomPeriodDays
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelActivityCenter::GetCustomPeriodDays(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelActivityCenter", "GetCustomPeriodDays");

	Params::ExcelLoaderTgfConfigExcelActivityCenter_GetCustomPeriodDays Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelActivityCenter.GetDailyLimit
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelActivityCenter::GetDailyLimit(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelActivityCenter", "GetDailyLimit");

	Params::ExcelLoaderTgfConfigExcelActivityCenter_GetDailyLimit Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelActivityCenter.GetDailyQuestCfg
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDActivityDailyQuestRefreshCfg*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDActivityDailyQuestRefreshCfg* UExcelLoaderTgfConfigExcelActivityCenter::GetDailyQuestCfg(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelActivityCenter", "GetDailyQuestCfg");

	Params::ExcelLoaderTgfConfigExcelActivityCenter_GetDailyQuestCfg Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelActivityCenter.GetDescription
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfConfigExcelActivityCenter::GetDescription(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelActivityCenter", "GetDescription");

	Params::ExcelLoaderTgfConfigExcelActivityCenter_GetDescription Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelActivityCenter.GetDurationDays
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelActivityCenter::GetDurationDays(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelActivityCenter", "GetDurationDays");

	Params::ExcelLoaderTgfConfigExcelActivityCenter_GetDurationDays Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelActivityCenter.GetEndTime
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufTimestamp*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufTimestamp* UExcelLoaderTgfConfigExcelActivityCenter::GetEndTime(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelActivityCenter", "GetEndTime");

	Params::ExcelLoaderTgfConfigExcelActivityCenter_GetEndTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelActivityCenter.GetEntitys
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDIntKV*            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDIntKV* UExcelLoaderTgfConfigExcelActivityCenter::GetEntitys(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelActivityCenter", "GetEntitys");

	Params::ExcelLoaderTgfConfigExcelActivityCenter_GetEntitys Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelActivityCenter.GetEntitysSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelActivityCenter::GetEntitysSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelActivityCenter", "GetEntitysSize");

	Params::ExcelLoaderTgfConfigExcelActivityCenter_GetEntitysSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelActivityCenter.GetExpCost
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDIntKV*            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDIntKV* UExcelLoaderTgfConfigExcelActivityCenter::GetExpCost(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelActivityCenter", "GetExpCost");

	Params::ExcelLoaderTgfConfigExcelActivityCenter_GetExpCost Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelActivityCenter.GetExpiredTime
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufTimestamp*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufTimestamp* UExcelLoaderTgfConfigExcelActivityCenter::GetExpiredTime(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelActivityCenter", "GetExpiredTime");

	Params::ExcelLoaderTgfConfigExcelActivityCenter_GetExpiredTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelActivityCenter.GetExpiredType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelActivityCenter::GetExpiredType(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelActivityCenter", "GetExpiredType");

	Params::ExcelLoaderTgfConfigExcelActivityCenter_GetExpiredType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelActivityCenter.GetExpItemType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelActivityCenter::GetExpItemType(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelActivityCenter", "GetExpItemType");

	Params::ExcelLoaderTgfConfigExcelActivityCenter_GetExpItemType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelActivityCenter.GetGradeMaxExp
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDActivityMaxExp*   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDActivityMaxExp* UExcelLoaderTgfConfigExcelActivityCenter::GetGradeMaxExp(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelActivityCenter", "GetGradeMaxExp");

	Params::ExcelLoaderTgfConfigExcelActivityCenter_GetGradeMaxExp Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelActivityCenter.GetId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelActivityCenter::GetId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelActivityCenter", "GetId");

	Params::ExcelLoaderTgfConfigExcelActivityCenter_GetId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelActivityCenter.GetMainPic
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfConfigExcelActivityCenter::GetMainPic(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelActivityCenter", "GetMainPic");

	Params::ExcelLoaderTgfConfigExcelActivityCenter_GetMainPic Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelActivityCenter.GetManualRefreshCosts
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDIntKV*            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDIntKV* UExcelLoaderTgfConfigExcelActivityCenter::GetManualRefreshCosts(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelActivityCenter", "GetManualRefreshCosts");

	Params::ExcelLoaderTgfConfigExcelActivityCenter_GetManualRefreshCosts Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelActivityCenter.GetManualRefreshCostsSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelActivityCenter::GetManualRefreshCostsSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelActivityCenter", "GetManualRefreshCostsSize");

	Params::ExcelLoaderTgfConfigExcelActivityCenter_GetManualRefreshCostsSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelActivityCenter.GetMaxProgressQuestId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelActivityCenter::GetMaxProgressQuestId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelActivityCenter", "GetMaxProgressQuestId");

	Params::ExcelLoaderTgfConfigExcelActivityCenter_GetMaxProgressQuestId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelActivityCenter.GetMinorPics
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfConfigExcelActivityCenter::GetMinorPics(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelActivityCenter", "GetMinorPics");

	Params::ExcelLoaderTgfConfigExcelActivityCenter_GetMinorPics Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelActivityCenter.GetMinorPicsSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelActivityCenter::GetMinorPicsSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelActivityCenter", "GetMinorPicsSize");

	Params::ExcelLoaderTgfConfigExcelActivityCenter_GetMinorPicsSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelActivityCenter.GetName
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfConfigExcelActivityCenter::GetName(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelActivityCenter", "GetName");

	Params::ExcelLoaderTgfConfigExcelActivityCenter_GetName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelActivityCenter.GetOn
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UExcelLoaderTgfConfigExcelActivityCenter::GetOn(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelActivityCenter", "GetOn");

	Params::ExcelLoaderTgfConfigExcelActivityCenter_GetOn Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelActivityCenter.GetPeriod
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelActivityCenter::GetPeriod(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelActivityCenter", "GetPeriod");

	Params::ExcelLoaderTgfConfigExcelActivityCenter_GetPeriod Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelActivityCenter.GetPopupLevel
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelActivityCenter::GetPopupLevel(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelActivityCenter", "GetPopupLevel");

	Params::ExcelLoaderTgfConfigExcelActivityCenter_GetPopupLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelActivityCenter.GetPriority
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelActivityCenter::GetPriority(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelActivityCenter", "GetPriority");

	Params::ExcelLoaderTgfConfigExcelActivityCenter_GetPriority Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelActivityCenter.GetRedDotRefresh
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelActivityCenter::GetRedDotRefresh(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelActivityCenter", "GetRedDotRefresh");

	Params::ExcelLoaderTgfConfigExcelActivityCenter_GetRedDotRefresh Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelActivityCenter.GetRewardMailTemplateId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelActivityCenter::GetRewardMailTemplateId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelActivityCenter", "GetRewardMailTemplateId");

	Params::ExcelLoaderTgfConfigExcelActivityCenter_GetRewardMailTemplateId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelActivityCenter.GetRuleDesc
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfConfigExcelActivityCenter::GetRuleDesc(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelActivityCenter", "GetRuleDesc");

	Params::ExcelLoaderTgfConfigExcelActivityCenter_GetRuleDesc Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelActivityCenter.GetSeaonId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelActivityCenter::GetSeaonId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelActivityCenter", "GetSeaonId");

	Params::ExcelLoaderTgfConfigExcelActivityCenter_GetSeaonId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelActivityCenter.GetStartTime
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufTimestamp*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufTimestamp* UExcelLoaderTgfConfigExcelActivityCenter::GetStartTime(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelActivityCenter", "GetStartTime");

	Params::ExcelLoaderTgfConfigExcelActivityCenter_GetStartTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelActivityCenter.GetType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelActivityCenter::GetType(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelActivityCenter", "GetType");

	Params::ExcelLoaderTgfConfigExcelActivityCenter_GetType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelActivityCenterRandomRewards.GetActivityId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelActivityCenterRandomRewards::GetActivityId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelActivityCenterRandomRewards", "GetActivityId");

	Params::ExcelLoaderTgfConfigExcelActivityCenterRandomRewards_GetActivityId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelActivityCenterRandomRewards.GetAllOfItemCntPool
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfDIntKV*>    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfDIntKV*> UExcelLoaderTgfConfigExcelActivityCenterRandomRewards::GetAllOfItemCntPool()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelActivityCenterRandomRewards", "GetAllOfItemCntPool");

	Params::ExcelLoaderTgfConfigExcelActivityCenterRandomRewards_GetAllOfItemCntPool Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelActivityCenterRandomRewards.GetCareerTypeId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelActivityCenterRandomRewards::GetCareerTypeId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelActivityCenterRandomRewards", "GetCareerTypeId");

	Params::ExcelLoaderTgfConfigExcelActivityCenterRandomRewards_GetCareerTypeId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelActivityCenterRandomRewards.GetId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelActivityCenterRandomRewards::GetId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelActivityCenterRandomRewards", "GetId");

	Params::ExcelLoaderTgfConfigExcelActivityCenterRandomRewards_GetId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelActivityCenterRandomRewards.GetItemCntPool
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDIntKV*            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDIntKV* UExcelLoaderTgfConfigExcelActivityCenterRandomRewards::GetItemCntPool(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelActivityCenterRandomRewards", "GetItemCntPool");

	Params::ExcelLoaderTgfConfigExcelActivityCenterRandomRewards_GetItemCntPool Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelActivityCenterRandomRewards.GetItemCntPoolSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelActivityCenterRandomRewards::GetItemCntPoolSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelActivityCenterRandomRewards", "GetItemCntPoolSize");

	Params::ExcelLoaderTgfConfigExcelActivityCenterRandomRewards_GetItemCntPoolSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelActivityCenterRandomRewards.GetItemRandoomPoolId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelActivityCenterRandomRewards::GetItemRandoomPoolId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelActivityCenterRandomRewards", "GetItemRandoomPoolId");

	Params::ExcelLoaderTgfConfigExcelActivityCenterRandomRewards_GetItemRandoomPoolId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelActivityCenterRandomRewards.GetSelectedMax
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelActivityCenterRandomRewards::GetSelectedMax(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelActivityCenterRandomRewards", "GetSelectedMax");

	Params::ExcelLoaderTgfConfigExcelActivityCenterRandomRewards_GetSelectedMax Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelActivityCenterRandomRewardsPool.GetAllOfRandomItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfDIntTriple*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfDIntTriple*> UExcelLoaderTgfConfigExcelActivityCenterRandomRewardsPool::GetAllOfRandomItem()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelActivityCenterRandomRewardsPool", "GetAllOfRandomItem");

	Params::ExcelLoaderTgfConfigExcelActivityCenterRandomRewardsPool_GetAllOfRandomItem Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelActivityCenterRandomRewardsPool.GetId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelActivityCenterRandomRewardsPool::GetId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelActivityCenterRandomRewardsPool", "GetId");

	Params::ExcelLoaderTgfConfigExcelActivityCenterRandomRewardsPool_GetId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelActivityCenterRandomRewardsPool.GetRandomItem
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDIntTriple*        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDIntTriple* UExcelLoaderTgfConfigExcelActivityCenterRandomRewardsPool::GetRandomItem(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelActivityCenterRandomRewardsPool", "GetRandomItem");

	Params::ExcelLoaderTgfConfigExcelActivityCenterRandomRewardsPool_GetRandomItem Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelActivityCenterRandomRewardsPool.GetRandomItemSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelActivityCenterRandomRewardsPool::GetRandomItemSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelActivityCenterRandomRewardsPool", "GetRandomItemSize");

	Params::ExcelLoaderTgfConfigExcelActivityCenterRandomRewardsPool_GetRandomItemSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelActivityCenterRandomRewardsPool.GetType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelActivityCenterRandomRewardsPool::GetType(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelActivityCenterRandomRewardsPool", "GetType");

	Params::ExcelLoaderTgfConfigExcelActivityCenterRandomRewardsPool_GetType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDUserRoleBasic.GetCreateIndex
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfDUserRoleBasic::GetCreateIndex(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDUserRoleBasic", "GetCreateIndex");

	Params::ExcelLoaderTgfDUserRoleBasic_GetCreateIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDUserRoleBasic.GetCreateTimepoint
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfDUserRoleBasic::GetCreateTimepoint(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDUserRoleBasic", "GetCreateTimepoint");

	Params::ExcelLoaderTgfDUserRoleBasic_GetCreateTimepoint Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDUserRoleBasic.GetMeta
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDRoleMetaIndex*    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDRoleMetaIndex* UExcelLoaderTgfDUserRoleBasic::GetMeta(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDUserRoleBasic", "GetMeta");

	Params::ExcelLoaderTgfDUserRoleBasic_GetMeta Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDUserRoleBasic.GetRoleGuid
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfDUserRoleBasic::GetRoleGuid(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDUserRoleBasic", "GetRoleGuid");

	Params::ExcelLoaderTgfDUserRoleBasic_GetRoleGuid Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDUserRoleBasic.GetRoleName
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfDUserRoleBasic::GetRoleName(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDUserRoleBasic", "GetRoleName");

	Params::ExcelLoaderTgfDUserRoleBasic_GetRoleName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDUserRoleBasic.GetTypeId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDUserRoleBasic::GetTypeId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDUserRoleBasic", "GetTypeId");

	Params::ExcelLoaderTgfDUserRoleBasic_GetTypeId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelActivityCenterPassprotsReards.GetActivityId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelActivityCenterPassprotsReards::GetActivityId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelActivityCenterPassprotsReards", "GetActivityId");

	Params::ExcelLoaderTgfConfigExcelActivityCenterPassprotsReards_GetActivityId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelActivityCenterPassprotsReards.GetAllOfBasicRewards
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfDItemOffset*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfDItemOffset*> UExcelLoaderTgfConfigExcelActivityCenterPassprotsReards::GetAllOfBasicRewards()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelActivityCenterPassprotsReards", "GetAllOfBasicRewards");

	Params::ExcelLoaderTgfConfigExcelActivityCenterPassprotsReards_GetAllOfBasicRewards Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelActivityCenterPassprotsReards.GetAllOfHighRewards
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfDItemOffset*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfDItemOffset*> UExcelLoaderTgfConfigExcelActivityCenterPassprotsReards::GetAllOfHighRewards()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelActivityCenterPassprotsReards", "GetAllOfHighRewards");

	Params::ExcelLoaderTgfConfigExcelActivityCenterPassprotsReards_GetAllOfHighRewards Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelActivityCenterPassprotsReards.GetBasicRewards
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDItemOffset*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDItemOffset* UExcelLoaderTgfConfigExcelActivityCenterPassprotsReards::GetBasicRewards(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelActivityCenterPassprotsReards", "GetBasicRewards");

	Params::ExcelLoaderTgfConfigExcelActivityCenterPassprotsReards_GetBasicRewards Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelActivityCenterPassprotsReards.GetBasicRewardsId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelActivityCenterPassprotsReards::GetBasicRewardsId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelActivityCenterPassprotsReards", "GetBasicRewardsId");

	Params::ExcelLoaderTgfConfigExcelActivityCenterPassprotsReards_GetBasicRewardsId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelActivityCenterPassprotsReards.GetBasicRewardsSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelActivityCenterPassprotsReards::GetBasicRewardsSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelActivityCenterPassprotsReards", "GetBasicRewardsSize");

	Params::ExcelLoaderTgfConfigExcelActivityCenterPassprotsReards_GetBasicRewardsSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelActivityCenterPassprotsReards.GetExpBegin
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelActivityCenterPassprotsReards::GetExpBegin(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelActivityCenterPassprotsReards", "GetExpBegin");

	Params::ExcelLoaderTgfConfigExcelActivityCenterPassprotsReards_GetExpBegin Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelActivityCenterPassprotsReards.GetExpEnd
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelActivityCenterPassprotsReards::GetExpEnd(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelActivityCenterPassprotsReards", "GetExpEnd");

	Params::ExcelLoaderTgfConfigExcelActivityCenterPassprotsReards_GetExpEnd Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelActivityCenterPassprotsReards.GetHighRewards
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDItemOffset*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDItemOffset* UExcelLoaderTgfConfigExcelActivityCenterPassprotsReards::GetHighRewards(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelActivityCenterPassprotsReards", "GetHighRewards");

	Params::ExcelLoaderTgfConfigExcelActivityCenterPassprotsReards_GetHighRewards Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelActivityCenterPassprotsReards.GetHighRewardsId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelActivityCenterPassprotsReards::GetHighRewardsId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelActivityCenterPassprotsReards", "GetHighRewardsId");

	Params::ExcelLoaderTgfConfigExcelActivityCenterPassprotsReards_GetHighRewardsId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelActivityCenterPassprotsReards.GetHighRewardsSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelActivityCenterPassprotsReards::GetHighRewardsSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelActivityCenterPassprotsReards", "GetHighRewardsSize");

	Params::ExcelLoaderTgfConfigExcelActivityCenterPassprotsReards_GetHighRewardsSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelActivityCenterPassprotsReards.GetId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelActivityCenterPassprotsReards::GetId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelActivityCenterPassprotsReards", "GetId");

	Params::ExcelLoaderTgfConfigExcelActivityCenterPassprotsReards_GetId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelActivityCenterPassprotsReards.GetLevel
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelActivityCenterPassprotsReards::GetLevel(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelActivityCenterPassprotsReards", "GetLevel");

	Params::ExcelLoaderTgfConfigExcelActivityCenterPassprotsReards_GetLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelAutoExchange.GetAllOfProduct
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfDItemOffset*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfDItemOffset*> UExcelLoaderTgfConfigExcelAutoExchange::GetAllOfProduct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelAutoExchange", "GetAllOfProduct");

	Params::ExcelLoaderTgfConfigExcelAutoExchange_GetAllOfProduct Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelAutoExchange.GetItemId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelAutoExchange::GetItemId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelAutoExchange", "GetItemId");

	Params::ExcelLoaderTgfConfigExcelAutoExchange_GetItemId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelAutoExchange.GetProduct
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDItemOffset*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDItemOffset* UExcelLoaderTgfConfigExcelAutoExchange::GetProduct(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelAutoExchange", "GetProduct");

	Params::ExcelLoaderTgfConfigExcelAutoExchange_GetProduct Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelAutoExchange.GetProductSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelAutoExchange::GetProductSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelAutoExchange", "GetProductSize");

	Params::ExcelLoaderTgfConfigExcelAutoExchange_GetProductSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAttributeOptions.GetUeAttributeSet
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfDBattleAttributeOptions::GetUeAttributeSet(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAttributeOptions", "GetUeAttributeSet");

	Params::ExcelLoaderTgfDBattleAttributeOptions_GetUeAttributeSet Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDChallengerModel.GetChallengerType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDChallengerModel::GetChallengerType(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDChallengerModel", "GetChallengerType");

	Params::ExcelLoaderTgfDChallengerModel_GetChallengerType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufFeatureSetDefaultsFeatureSetEditionDefault.GetEdition
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderGoogleProtobufFeatureSetDefaultsFeatureSetEditionDefault::GetEdition(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufFeatureSetDefaultsFeatureSetEditionDefault", "GetEdition");

	Params::ExcelLoaderGoogleProtobufFeatureSetDefaultsFeatureSetEditionDefault_GetEdition Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufFeatureSetDefaultsFeatureSetEditionDefault.GetFeatures
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufFeatureSet*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufFeatureSet* UExcelLoaderGoogleProtobufFeatureSetDefaultsFeatureSetEditionDefault::GetFeatures(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufFeatureSetDefaultsFeatureSetEditionDefault", "GetFeatures");

	Params::ExcelLoaderGoogleProtobufFeatureSetDefaultsFeatureSetEditionDefault_GetFeatures Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixAttributeOffsetValue.GetMaxValue
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UExcelLoaderTgfDBattleAffixAttributeOffsetValue::GetMaxValue(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixAttributeOffsetValue", "GetMaxValue");

	Params::ExcelLoaderTgfDBattleAffixAttributeOffsetValue_GetMaxValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixAttributeOffsetValue.GetMinValue
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UExcelLoaderTgfDBattleAffixAttributeOffsetValue::GetMinValue(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixAttributeOffsetValue", "GetMinValue");

	Params::ExcelLoaderTgfDBattleAffixAttributeOffsetValue_GetMinValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixAttributeOffsetValue.GetUnit
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UExcelLoaderTgfDBattleAffixAttributeOffsetValue::GetUnit(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixAttributeOffsetValue", "GetUnit");

	Params::ExcelLoaderTgfDBattleAffixAttributeOffsetValue_GetUnit Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAttributeValueOffset.GetFixedValue
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UExcelLoaderTgfDBattleAttributeValueOffset::GetFixedValue(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAttributeValueOffset", "GetFixedValue");

	Params::ExcelLoaderTgfDBattleAttributeValueOffset_GetFixedValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAttributeValueOffset.GetOffset
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAffixAttributeOffsetValue*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAffixAttributeOffsetValue* UExcelLoaderTgfDBattleAttributeValueOffset::GetOffset(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAttributeValueOffset", "GetOffset");

	Params::ExcelLoaderTgfDBattleAttributeValueOffset_GetOffset Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAttributeValueOffset.GetValueCase
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EExcelLoaderTgfDBattleAttributeValueOffsetValueReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EExcelLoaderTgfDBattleAttributeValueOffsetValue UExcelLoaderTgfDBattleAttributeValueOffset::GetValueCase()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAttributeValueOffset", "GetValueCase");

	Params::ExcelLoaderTgfDBattleAttributeValueOffset_GetValueCase Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAttributeValueOffset.GetWeight
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfDBattleAttributeValueOffset::GetWeight(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAttributeValueOffset", "GetWeight");

	Params::ExcelLoaderTgfDBattleAttributeValueOffset_GetWeight Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixAbillitySetOffsetValue.GetMaxValue
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDBattleAffixAbillitySetOffsetValue::GetMaxValue(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixAbillitySetOffsetValue", "GetMaxValue");

	Params::ExcelLoaderTgfDBattleAffixAbillitySetOffsetValue_GetMaxValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixAbillitySetOffsetValue.GetMinValue
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDBattleAffixAbillitySetOffsetValue::GetMinValue(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixAbillitySetOffsetValue", "GetMinValue");

	Params::ExcelLoaderTgfDBattleAffixAbillitySetOffsetValue_GetMinValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAbillitySetOffset.GetValueCase
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EExcelLoaderTgfDBattleAbillitySetOffsetValueReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EExcelLoaderTgfDBattleAbillitySetOffsetValue UExcelLoaderTgfDBattleAbillitySetOffset::GetValueCase()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAbillitySetOffset", "GetValueCase");

	Params::ExcelLoaderTgfDBattleAbillitySetOffset_GetValueCase Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAbillitySetOffset.GetWeight
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfDBattleAbillitySetOffset::GetWeight(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAbillitySetOffset", "GetWeight");

	Params::ExcelLoaderTgfDBattleAbillitySetOffset_GetWeight Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufGeneratedCodeInfoAnnotation.GetAllOfPath
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UExcelLoaderGoogleProtobufGeneratedCodeInfoAnnotation::GetAllOfPath()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufGeneratedCodeInfoAnnotation", "GetAllOfPath");

	Params::ExcelLoaderGoogleProtobufGeneratedCodeInfoAnnotation_GetAllOfPath Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufGeneratedCodeInfoAnnotation.GetBegin
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderGoogleProtobufGeneratedCodeInfoAnnotation::GetBegin(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufGeneratedCodeInfoAnnotation", "GetBegin");

	Params::ExcelLoaderGoogleProtobufGeneratedCodeInfoAnnotation_GetBegin Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufGeneratedCodeInfoAnnotation.GetEnd
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderGoogleProtobufGeneratedCodeInfoAnnotation::GetEnd(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufGeneratedCodeInfoAnnotation", "GetEnd");

	Params::ExcelLoaderGoogleProtobufGeneratedCodeInfoAnnotation_GetEnd Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufGeneratedCodeInfoAnnotation.GetPath
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderGoogleProtobufGeneratedCodeInfoAnnotation::GetPath(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufGeneratedCodeInfoAnnotation", "GetPath");

	Params::ExcelLoaderGoogleProtobufGeneratedCodeInfoAnnotation_GetPath Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufGeneratedCodeInfoAnnotation.GetPathSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderGoogleProtobufGeneratedCodeInfoAnnotation::GetPathSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufGeneratedCodeInfoAnnotation", "GetPathSize");

	Params::ExcelLoaderGoogleProtobufGeneratedCodeInfoAnnotation_GetPathSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufGeneratedCodeInfoAnnotation.GetSemantic
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderGoogleProtobufGeneratedCodeInfoAnnotation::GetSemantic(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufGeneratedCodeInfoAnnotation", "GetSemantic");

	Params::ExcelLoaderGoogleProtobufGeneratedCodeInfoAnnotation_GetSemantic Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufGeneratedCodeInfoAnnotation.GetSourceFile
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderGoogleProtobufGeneratedCodeInfoAnnotation::GetSourceFile(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufGeneratedCodeInfoAnnotation", "GetSourceFile");

	Params::ExcelLoaderGoogleProtobufGeneratedCodeInfoAnnotation_GetSourceFile Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleGemSlotOffset.GetFixedCount
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDBattleGemSlotOffset::GetFixedCount(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleGemSlotOffset", "GetFixedCount");

	Params::ExcelLoaderTgfDBattleGemSlotOffset_GetFixedCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleGemSlotOffset.GetValueCase
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EExcelLoaderTgfDBattleGemSlotOffsetValueReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EExcelLoaderTgfDBattleGemSlotOffsetValue UExcelLoaderTgfDBattleGemSlotOffset::GetValueCase()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleGemSlotOffset", "GetValueCase");

	Params::ExcelLoaderTgfDBattleGemSlotOffset_GetValueCase Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleGemSlotOffset.GetWeight
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfDBattleGemSlotOffset::GetWeight(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleGemSlotOffset", "GetWeight");

	Params::ExcelLoaderTgfDBattleGemSlotOffset_GetWeight Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleGearSetOffset.GetFixedValue
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDBattleGearSetOffset::GetFixedValue(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleGearSetOffset", "GetFixedValue");

	Params::ExcelLoaderTgfDBattleGearSetOffset_GetFixedValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleGearSetOffset.GetValueCase
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EExcelLoaderTgfDBattleGearSetOffsetValueReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EExcelLoaderTgfDBattleGearSetOffsetValue UExcelLoaderTgfDBattleGearSetOffset::GetValueCase()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleGearSetOffset", "GetValueCase");

	Params::ExcelLoaderTgfDBattleGearSetOffset_GetValueCase Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleGearSetOffset.GetWeight
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfDBattleGearSetOffset::GetWeight(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleGearSetOffset", "GetWeight");

	Params::ExcelLoaderTgfDBattleGearSetOffset_GetWeight Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAttributeOffset.GetAbilityIndex1
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAbillitySetOffset*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAbillitySetOffset* UExcelLoaderTgfDBattleAttributeOffset::GetAbilityIndex1(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAttributeOffset", "GetAbilityIndex1");

	Params::ExcelLoaderTgfDBattleAttributeOffset_GetAbilityIndex1 Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAttributeOffset.GetAbilityIndex2
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAbillitySetOffset*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAbillitySetOffset* UExcelLoaderTgfDBattleAttributeOffset::GetAbilityIndex2(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAttributeOffset", "GetAbilityIndex2");

	Params::ExcelLoaderTgfDBattleAttributeOffset_GetAbilityIndex2 Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAttributeOffset.GetAbilityIndex3
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAbillitySetOffset*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAbillitySetOffset* UExcelLoaderTgfDBattleAttributeOffset::GetAbilityIndex3(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAttributeOffset", "GetAbilityIndex3");

	Params::ExcelLoaderTgfDBattleAttributeOffset_GetAbilityIndex3 Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAttributeOffset.GetAbilityIndex4
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAbillitySetOffset*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAbillitySetOffset* UExcelLoaderTgfDBattleAttributeOffset::GetAbilityIndex4(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAttributeOffset", "GetAbilityIndex4");

	Params::ExcelLoaderTgfDBattleAttributeOffset_GetAbilityIndex4 Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAttributeOffset.GetAbilityIndex5
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAbillitySetOffset*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAbillitySetOffset* UExcelLoaderTgfDBattleAttributeOffset::GetAbilityIndex5(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAttributeOffset", "GetAbilityIndex5");

	Params::ExcelLoaderTgfDBattleAttributeOffset_GetAbilityIndex5 Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAttributeOffset.GetAbilityIndex6
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAbillitySetOffset*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAbillitySetOffset* UExcelLoaderTgfDBattleAttributeOffset::GetAbilityIndex6(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAttributeOffset", "GetAbilityIndex6");

	Params::ExcelLoaderTgfDBattleAttributeOffset_GetAbilityIndex6 Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAttributeOffset.GetAbilitySet
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAbillitySetOffset*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAbillitySetOffset* UExcelLoaderTgfDBattleAttributeOffset::GetAbilitySet(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAttributeOffset", "GetAbilitySet");

	Params::ExcelLoaderTgfDBattleAttributeOffset_GetAbilitySet Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAttributeOffset.GetAbilitySetSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfDBattleAttributeOffset::GetAbilitySetSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAttributeOffset", "GetAbilitySetSize");

	Params::ExcelLoaderTgfDBattleAttributeOffset_GetAbilitySetSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAttributeOffset.GetAllFirstLevel
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAttributeValueOffset*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAttributeValueOffset* UExcelLoaderTgfDBattleAttributeOffset::GetAllFirstLevel(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAttributeOffset", "GetAllFirstLevel");

	Params::ExcelLoaderTgfDBattleAttributeOffset_GetAllFirstLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAttributeOffset.GetAllOfAbilitySet
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfDBattleAbillitySetOffset*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfDBattleAbillitySetOffset*> UExcelLoaderTgfDBattleAttributeOffset::GetAllOfAbilitySet()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAttributeOffset", "GetAllOfAbilitySet");

	Params::ExcelLoaderTgfDBattleAttributeOffset_GetAllOfAbilitySet Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAttributeOffset.GetAttackAttackBonus
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAttributeValueOffset*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAttributeValueOffset* UExcelLoaderTgfDBattleAttributeOffset::GetAttackAttackBonus(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAttributeOffset", "GetAttackAttackBonus");

	Params::ExcelLoaderTgfDBattleAttributeOffset_GetAttackAttackBonus Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAttributeOffset.GetAttackAttackBoostRate
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAttributeValueOffset*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAttributeValueOffset* UExcelLoaderTgfDBattleAttributeOffset::GetAttackAttackBoostRate(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAttributeOffset", "GetAttackAttackBoostRate");

	Params::ExcelLoaderTgfDBattleAttributeOffset_GetAttackAttackBoostRate Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAttributeOffset.GetAttackColdPenetration
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAttributeValueOffset*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAttributeValueOffset* UExcelLoaderTgfDBattleAttributeOffset::GetAttackColdPenetration(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAttributeOffset", "GetAttackColdPenetration");

	Params::ExcelLoaderTgfDBattleAttributeOffset_GetAttackColdPenetration Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAttributeOffset.GetAttackCritDamageRate
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAttributeValueOffset*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAttributeValueOffset* UExcelLoaderTgfDBattleAttributeOffset::GetAttackCritDamageRate(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAttributeOffset", "GetAttackCritDamageRate");

	Params::ExcelLoaderTgfDBattleAttributeOffset_GetAttackCritDamageRate Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAttributeOffset.GetAttackCriticalRate
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAttributeValueOffset*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAttributeValueOffset* UExcelLoaderTgfDBattleAttributeOffset::GetAttackCriticalRate(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAttributeOffset", "GetAttackCriticalRate");

	Params::ExcelLoaderTgfDBattleAttributeOffset_GetAttackCriticalRate Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAttributeOffset.GetAttackDefIgnoreBase
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAttributeValueOffset*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAttributeValueOffset* UExcelLoaderTgfDBattleAttributeOffset::GetAttackDefIgnoreBase(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAttributeOffset", "GetAttackDefIgnoreBase");

	Params::ExcelLoaderTgfDBattleAttributeOffset_GetAttackDefIgnoreBase Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAttributeOffset.GetAttackDivinePenetration
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAttributeValueOffset*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAttributeValueOffset* UExcelLoaderTgfDBattleAttributeOffset::GetAttackDivinePenetration(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAttributeOffset", "GetAttackDivinePenetration");

	Params::ExcelLoaderTgfDBattleAttributeOffset_GetAttackDivinePenetration Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAttributeOffset.GetAttackElementBoostRateAll
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAttributeValueOffset*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAttributeValueOffset* UExcelLoaderTgfDBattleAttributeOffset::GetAttackElementBoostRateAll(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAttributeOffset", "GetAttackElementBoostRateAll");

	Params::ExcelLoaderTgfDBattleAttributeOffset_GetAttackElementBoostRateAll Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAttributeOffset.GetAttackElementBoostRateDark
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAttributeValueOffset*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAttributeValueOffset* UExcelLoaderTgfDBattleAttributeOffset::GetAttackElementBoostRateDark(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAttributeOffset", "GetAttackElementBoostRateDark");

	Params::ExcelLoaderTgfDBattleAttributeOffset_GetAttackElementBoostRateDark Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAttributeOffset.GetAttackElementBoostRateFire
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAttributeValueOffset*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAttributeValueOffset* UExcelLoaderTgfDBattleAttributeOffset::GetAttackElementBoostRateFire(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAttributeOffset", "GetAttackElementBoostRateFire");

	Params::ExcelLoaderTgfDBattleAttributeOffset_GetAttackElementBoostRateFire Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAttributeOffset.GetAttackElementBoostRateIce
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAttributeValueOffset*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAttributeValueOffset* UExcelLoaderTgfDBattleAttributeOffset::GetAttackElementBoostRateIce(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAttributeOffset", "GetAttackElementBoostRateIce");

	Params::ExcelLoaderTgfDBattleAttributeOffset_GetAttackElementBoostRateIce Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAttributeOffset.GetAttackElementBoostRateLight
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAttributeValueOffset*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAttributeValueOffset* UExcelLoaderTgfDBattleAttributeOffset::GetAttackElementBoostRateLight(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAttributeOffset", "GetAttackElementBoostRateLight");

	Params::ExcelLoaderTgfDBattleAttributeOffset_GetAttackElementBoostRateLight Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAttributeOffset.GetAttackElementBoostRateNone
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAttributeValueOffset*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAttributeValueOffset* UExcelLoaderTgfDBattleAttributeOffset::GetAttackElementBoostRateNone(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAttributeOffset", "GetAttackElementBoostRateNone");

	Params::ExcelLoaderTgfDBattleAttributeOffset_GetAttackElementBoostRateNone Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAttributeOffset.GetAttackElementBoostRateThunder
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAttributeValueOffset*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAttributeValueOffset* UExcelLoaderTgfDBattleAttributeOffset::GetAttackElementBoostRateThunder(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAttributeOffset", "GetAttackElementBoostRateThunder");

	Params::ExcelLoaderTgfDBattleAttributeOffset_GetAttackElementBoostRateThunder Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAttributeOffset.GetAttackExtraAttGearLevel
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAttributeValueOffset*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAttributeValueOffset* UExcelLoaderTgfDBattleAttributeOffset::GetAttackExtraAttGearLevel(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAttributeOffset", "GetAttackExtraAttGearLevel");

	Params::ExcelLoaderTgfDBattleAttributeOffset_GetAttackExtraAttGearLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAttributeOffset.GetAttackFirePenetration
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAttributeValueOffset*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAttributeValueOffset* UExcelLoaderTgfDBattleAttributeOffset::GetAttackFirePenetration(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAttributeOffset", "GetAttackFirePenetration");

	Params::ExcelLoaderTgfDBattleAttributeOffset_GetAttackFirePenetration Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAttributeOffset.GetAttackLightningPenetration
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAttributeValueOffset*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAttributeValueOffset* UExcelLoaderTgfDBattleAttributeOffset::GetAttackLightningPenetration(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAttributeOffset", "GetAttackLightningPenetration");

	Params::ExcelLoaderTgfDBattleAttributeOffset_GetAttackLightningPenetration Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAttributeOffset.GetAttackPhysicalPenetration
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAttributeValueOffset*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAttributeValueOffset* UExcelLoaderTgfDBattleAttributeOffset::GetAttackPhysicalPenetration(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAttributeOffset", "GetAttackPhysicalPenetration");

	Params::ExcelLoaderTgfDBattleAttributeOffset_GetAttackPhysicalPenetration Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAttributeOffset.GetAttackRightAttGearLevel
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAttributeValueOffset*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAttributeValueOffset* UExcelLoaderTgfDBattleAttributeOffset::GetAttackRightAttGearLevel(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAttributeOffset", "GetAttackRightAttGearLevel");

	Params::ExcelLoaderTgfDBattleAttributeOffset_GetAttackRightAttGearLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAttributeOffset.GetAttackRightWeaponAttack
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAttributeValueOffset*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAttributeValueOffset* UExcelLoaderTgfDBattleAttributeOffset::GetAttackRightWeaponAttack(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAttributeOffset", "GetAttackRightWeaponAttack");

	Params::ExcelLoaderTgfDBattleAttributeOffset_GetAttackRightWeaponAttack Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAttributeOffset.GetAttackShadowPenetration
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAttributeValueOffset*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAttributeValueOffset* UExcelLoaderTgfDBattleAttributeOffset::GetAttackShadowPenetration(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAttributeOffset", "GetAttackShadowPenetration");

	Params::ExcelLoaderTgfDBattleAttributeOffset_GetAttackShadowPenetration Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAttributeOffset.GetAttackSkillBoostRate
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAttributeValueOffset*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAttributeValueOffset* UExcelLoaderTgfDBattleAttributeOffset::GetAttackSkillBoostRate(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAttributeOffset", "GetAttackSkillBoostRate");

	Params::ExcelLoaderTgfDBattleAttributeOffset_GetAttackSkillBoostRate Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAttributeOffset.GetBuffArgKillingMaxLayerAttackBoostRate
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAttributeValueOffset*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAttributeValueOffset* UExcelLoaderTgfDBattleAttributeOffset::GetBuffArgKillingMaxLayerAttackBoostRate(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAttributeOffset", "GetBuffArgKillingMaxLayerAttackBoostRate");

	Params::ExcelLoaderTgfDBattleAttributeOffset_GetBuffArgKillingMaxLayerAttackBoostRate Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAttributeOffset.GetBuffArgKillingMaxLayerCriticalRate
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAttributeValueOffset*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAttributeValueOffset* UExcelLoaderTgfDBattleAttributeOffset::GetBuffArgKillingMaxLayerCriticalRate(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAttributeOffset", "GetBuffArgKillingMaxLayerCriticalRate");

	Params::ExcelLoaderTgfDBattleAttributeOffset_GetBuffArgKillingMaxLayerCriticalRate Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAttributeOffset.GetBuffArgKillingMaxLayerMaxHealthPercent
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAttributeValueOffset*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAttributeValueOffset* UExcelLoaderTgfDBattleAttributeOffset::GetBuffArgKillingMaxLayerMaxHealthPercent(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAttributeOffset", "GetBuffArgKillingMaxLayerMaxHealthPercent");

	Params::ExcelLoaderTgfDBattleAttributeOffset_GetBuffArgKillingMaxLayerMaxHealthPercent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAttributeOffset.GetDefendDefGearLevel
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAttributeValueOffset*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAttributeValueOffset* UExcelLoaderTgfDBattleAttributeOffset::GetDefendDefGearLevel(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAttributeOffset", "GetDefendDefGearLevel");

	Params::ExcelLoaderTgfDBattleAttributeOffset_GetDefendDefGearLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAttributeOffset.GetDefendElementResistanceRateAll
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAttributeValueOffset*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAttributeValueOffset* UExcelLoaderTgfDBattleAttributeOffset::GetDefendElementResistanceRateAll(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAttributeOffset", "GetDefendElementResistanceRateAll");

	Params::ExcelLoaderTgfDBattleAttributeOffset_GetDefendElementResistanceRateAll Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAttributeOffset.GetDefendElementResistanceRateDark
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAttributeValueOffset*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAttributeValueOffset* UExcelLoaderTgfDBattleAttributeOffset::GetDefendElementResistanceRateDark(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAttributeOffset", "GetDefendElementResistanceRateDark");

	Params::ExcelLoaderTgfDBattleAttributeOffset_GetDefendElementResistanceRateDark Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAttributeOffset.GetDefendElementResistanceRateFire
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAttributeValueOffset*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAttributeValueOffset* UExcelLoaderTgfDBattleAttributeOffset::GetDefendElementResistanceRateFire(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAttributeOffset", "GetDefendElementResistanceRateFire");

	Params::ExcelLoaderTgfDBattleAttributeOffset_GetDefendElementResistanceRateFire Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAttributeOffset.GetDefendElementResistanceRateIce
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAttributeValueOffset*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAttributeValueOffset* UExcelLoaderTgfDBattleAttributeOffset::GetDefendElementResistanceRateIce(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAttributeOffset", "GetDefendElementResistanceRateIce");

	Params::ExcelLoaderTgfDBattleAttributeOffset_GetDefendElementResistanceRateIce Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAttributeOffset.GetDefendElementResistanceRateLight
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAttributeValueOffset*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAttributeValueOffset* UExcelLoaderTgfDBattleAttributeOffset::GetDefendElementResistanceRateLight(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAttributeOffset", "GetDefendElementResistanceRateLight");

	Params::ExcelLoaderTgfDBattleAttributeOffset_GetDefendElementResistanceRateLight Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAttributeOffset.GetDefendElementResistanceRateNone
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAttributeValueOffset*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAttributeValueOffset* UExcelLoaderTgfDBattleAttributeOffset::GetDefendElementResistanceRateNone(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAttributeOffset", "GetDefendElementResistanceRateNone");

	Params::ExcelLoaderTgfDBattleAttributeOffset_GetDefendElementResistanceRateNone Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAttributeOffset.GetDefendElementResistanceRateThunder
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAttributeValueOffset*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAttributeValueOffset* UExcelLoaderTgfDBattleAttributeOffset::GetDefendElementResistanceRateThunder(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAttributeOffset", "GetDefendElementResistanceRateThunder");

	Params::ExcelLoaderTgfDBattleAttributeOffset_GetDefendElementResistanceRateThunder Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAttributeOffset.GetDefendExtraDefGearLevel
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAttributeValueOffset*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAttributeValueOffset* UExcelLoaderTgfDBattleAttributeOffset::GetDefendExtraDefGearLevel(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAttributeOffset", "GetDefendExtraDefGearLevel");

	Params::ExcelLoaderTgfDBattleAttributeOffset_GetDefendExtraDefGearLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAttributeOffset.GetDefendExtraGuardedDamageReduceRate
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAttributeValueOffset*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAttributeValueOffset* UExcelLoaderTgfDBattleAttributeOffset::GetDefendExtraGuardedDamageReduceRate(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAttributeOffset", "GetDefendExtraGuardedDamageReduceRate");

	Params::ExcelLoaderTgfDBattleAttributeOffset_GetDefendExtraGuardedDamageReduceRate Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAttributeOffset.GetDefendGuardedDamageReduceRate
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAttributeValueOffset*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAttributeValueOffset* UExcelLoaderTgfDBattleAttributeOffset::GetDefendGuardedDamageReduceRate(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAttributeOffset", "GetDefendGuardedDamageReduceRate");

	Params::ExcelLoaderTgfDBattleAttributeOffset_GetDefendGuardedDamageReduceRate Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAttributeOffset.GetDefendMaxHealthBase
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAttributeValueOffset*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAttributeValueOffset* UExcelLoaderTgfDBattleAttributeOffset::GetDefendMaxHealthBase(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAttributeOffset", "GetDefendMaxHealthBase");

	Params::ExcelLoaderTgfDBattleAttributeOffset_GetDefendMaxHealthBase Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAttributeOffset.GetDefendMaxHealthExtra
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAttributeValueOffset*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAttributeValueOffset* UExcelLoaderTgfDBattleAttributeOffset::GetDefendMaxHealthExtra(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAttributeOffset", "GetDefendMaxHealthExtra");

	Params::ExcelLoaderTgfDBattleAttributeOffset_GetDefendMaxHealthExtra Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAttributeOffset.GetDefendMaxHealthPercent
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAttributeValueOffset*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAttributeValueOffset* UExcelLoaderTgfDBattleAttributeOffset::GetDefendMaxHealthPercent(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAttributeOffset", "GetDefendMaxHealthPercent");

	Params::ExcelLoaderTgfDBattleAttributeOffset_GetDefendMaxHealthPercent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAttributeOffset.GetFirstLevelDexterity
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAttributeValueOffset*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAttributeValueOffset* UExcelLoaderTgfDBattleAttributeOffset::GetFirstLevelDexterity(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAttributeOffset", "GetFirstLevelDexterity");

	Params::ExcelLoaderTgfDBattleAttributeOffset_GetFirstLevelDexterity Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAttributeOffset.GetFirstLevelFaith
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAttributeValueOffset*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAttributeValueOffset* UExcelLoaderTgfDBattleAttributeOffset::GetFirstLevelFaith(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAttributeOffset", "GetFirstLevelFaith");

	Params::ExcelLoaderTgfDBattleAttributeOffset_GetFirstLevelFaith Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAttributeOffset.GetFirstLevelIntelligence
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAttributeValueOffset*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAttributeValueOffset* UExcelLoaderTgfDBattleAttributeOffset::GetFirstLevelIntelligence(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAttributeOffset", "GetFirstLevelIntelligence");

	Params::ExcelLoaderTgfDBattleAttributeOffset_GetFirstLevelIntelligence Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAttributeOffset.GetFirstLevelStamina
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAttributeValueOffset*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAttributeValueOffset* UExcelLoaderTgfDBattleAttributeOffset::GetFirstLevelStamina(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAttributeOffset", "GetFirstLevelStamina");

	Params::ExcelLoaderTgfDBattleAttributeOffset_GetFirstLevelStamina Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAttributeOffset.GetFirstLevelStrength
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAttributeValueOffset*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAttributeValueOffset* UExcelLoaderTgfDBattleAttributeOffset::GetFirstLevelStrength(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAttributeOffset", "GetFirstLevelStrength");

	Params::ExcelLoaderTgfDBattleAttributeOffset_GetFirstLevelStrength Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAttributeOffset.GetFirstLevelWill
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAttributeValueOffset*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAttributeValueOffset* UExcelLoaderTgfDBattleAttributeOffset::GetFirstLevelWill(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAttributeOffset", "GetFirstLevelWill");

	Params::ExcelLoaderTgfDBattleAttributeOffset_GetFirstLevelWill Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAttributeOffset.GetGearSetAvoidDeath
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleGearSetOffset*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleGearSetOffset* UExcelLoaderTgfDBattleAttributeOffset::GetGearSetAvoidDeath(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAttributeOffset", "GetGearSetAvoidDeath");

	Params::ExcelLoaderTgfDBattleAttributeOffset_GetGearSetAvoidDeath Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAttributeOffset.GetGearSetBonePlating
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleGearSetOffset*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleGearSetOffset* UExcelLoaderTgfDBattleAttributeOffset::GetGearSetBonePlating(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAttributeOffset", "GetGearSetBonePlating");

	Params::ExcelLoaderTgfDBattleAttributeOffset_GetGearSetBonePlating Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAttributeOffset.GetGearSetCoinMaster
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleGearSetOffset*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleGearSetOffset* UExcelLoaderTgfDBattleAttributeOffset::GetGearSetCoinMaster(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAttributeOffset", "GetGearSetCoinMaster");

	Params::ExcelLoaderTgfDBattleAttributeOffset_GetGearSetCoinMaster Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAttributeOffset.GetGearSetFleetFootWork
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleGearSetOffset*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleGearSetOffset* UExcelLoaderTgfDBattleAttributeOffset::GetGearSetFleetFootWork(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAttributeOffset", "GetGearSetFleetFootWork");

	Params::ExcelLoaderTgfDBattleAttributeOffset_GetGearSetFleetFootWork Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAttributeOffset.GetGearSetKleptomancy
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleGearSetOffset*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleGearSetOffset* UExcelLoaderTgfDBattleAttributeOffset::GetGearSetKleptomancy(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAttributeOffset", "GetGearSetKleptomancy");

	Params::ExcelLoaderTgfDBattleAttributeOffset_GetGearSetKleptomancy Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAttributeOffset.GetGearSetScorchingTouch
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleGearSetOffset*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleGearSetOffset* UExcelLoaderTgfDBattleAttributeOffset::GetGearSetScorchingTouch(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAttributeOffset", "GetGearSetScorchingTouch");

	Params::ExcelLoaderTgfDBattleAttributeOffset_GetGearSetScorchingTouch Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAttributeOffset.GetGearSetSummoningAery
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleGearSetOffset*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleGearSetOffset* UExcelLoaderTgfDBattleAttributeOffset::GetGearSetSummoningAery(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAttributeOffset", "GetGearSetSummoningAery");

	Params::ExcelLoaderTgfDBattleAttributeOffset_GetGearSetSummoningAery Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAttributeOffset.GetGearSetThunderLaw
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleGearSetOffset*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleGearSetOffset* UExcelLoaderTgfDBattleAttributeOffset::GetGearSetThunderLaw(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAttributeOffset", "GetGearSetThunderLaw");

	Params::ExcelLoaderTgfDBattleAttributeOffset_GetGearSetThunderLaw Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAttributeOffset.GetGearSetUndyingGrasp
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleGearSetOffset*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleGearSetOffset* UExcelLoaderTgfDBattleAttributeOffset::GetGearSetUndyingGrasp(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAttributeOffset", "GetGearSetUndyingGrasp");

	Params::ExcelLoaderTgfDBattleAttributeOffset_GetGearSetUndyingGrasp Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAttributeOffset.GetGemSlot2Attack
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleGemSlotOffset*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleGemSlotOffset* UExcelLoaderTgfDBattleAttributeOffset::GetGemSlot2Attack(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAttributeOffset", "GetGemSlot2Attack");

	Params::ExcelLoaderTgfDBattleAttributeOffset_GetGemSlot2Attack Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAttributeOffset.GetGemSlot2Defend
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleGemSlotOffset*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleGemSlotOffset* UExcelLoaderTgfDBattleAttributeOffset::GetGemSlot2Defend(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAttributeOffset", "GetGemSlot2Defend");

	Params::ExcelLoaderTgfDBattleAttributeOffset_GetGemSlot2Defend Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAttributeOffset.GetGemSlot2FirstLevel
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleGemSlotOffset*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleGemSlotOffset* UExcelLoaderTgfDBattleAttributeOffset::GetGemSlot2FirstLevel(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAttributeOffset", "GetGemSlot2FirstLevel");

	Params::ExcelLoaderTgfDBattleAttributeOffset_GetGemSlot2FirstLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAttributeOffset.GetGemSlot2Function
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleGemSlotOffset*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleGemSlotOffset* UExcelLoaderTgfDBattleAttributeOffset::GetGemSlot2Function(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAttributeOffset", "GetGemSlot2Function");

	Params::ExcelLoaderTgfDBattleAttributeOffset_GetGemSlot2Function Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAttributeOffset.GetGemSlot2GearSet
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleGemSlotOffset*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleGemSlotOffset* UExcelLoaderTgfDBattleAttributeOffset::GetGemSlot2GearSet(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAttributeOffset", "GetGemSlot2GearSet");

	Params::ExcelLoaderTgfDBattleAttributeOffset_GetGemSlot2GearSet Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAttributeOffset.GetGemSlotAttack
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleGemSlotOffset*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleGemSlotOffset* UExcelLoaderTgfDBattleAttributeOffset::GetGemSlotAttack(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAttributeOffset", "GetGemSlotAttack");

	Params::ExcelLoaderTgfDBattleAttributeOffset_GetGemSlotAttack Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAttributeOffset.GetGemSlotBegin
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleGemSlotOffset*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleGemSlotOffset* UExcelLoaderTgfDBattleAttributeOffset::GetGemSlotBegin(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAttributeOffset", "GetGemSlotBegin");

	Params::ExcelLoaderTgfDBattleAttributeOffset_GetGemSlotBegin Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAttributeOffset.GetGemSlotDefend
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleGemSlotOffset*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleGemSlotOffset* UExcelLoaderTgfDBattleAttributeOffset::GetGemSlotDefend(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAttributeOffset", "GetGemSlotDefend");

	Params::ExcelLoaderTgfDBattleAttributeOffset_GetGemSlotDefend Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAttributeOffset.GetGemSlotFirstLevel
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleGemSlotOffset*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleGemSlotOffset* UExcelLoaderTgfDBattleAttributeOffset::GetGemSlotFirstLevel(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAttributeOffset", "GetGemSlotFirstLevel");

	Params::ExcelLoaderTgfDBattleAttributeOffset_GetGemSlotFirstLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAttributeOffset.GetGemSlotFunction
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleGemSlotOffset*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleGemSlotOffset* UExcelLoaderTgfDBattleAttributeOffset::GetGemSlotFunction(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAttributeOffset", "GetGemSlotFunction");

	Params::ExcelLoaderTgfDBattleAttributeOffset_GetGemSlotFunction Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAttributeOffset.GetGemSlotGearSet
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleGemSlotOffset*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleGemSlotOffset* UExcelLoaderTgfDBattleAttributeOffset::GetGemSlotGearSet(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAttributeOffset", "GetGemSlotGearSet");

	Params::ExcelLoaderTgfDBattleAttributeOffset_GetGemSlotGearSet Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAttributeOffset.GetMagicMagicGenerateRate
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAttributeValueOffset*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAttributeValueOffset* UExcelLoaderTgfDBattleAttributeOffset::GetMagicMagicGenerateRate(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAttributeOffset", "GetMagicMagicGenerateRate");

	Params::ExcelLoaderTgfDBattleAttributeOffset_GetMagicMagicGenerateRate Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAttributeOffset.GetMagicMagicOnHit
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAttributeValueOffset*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAttributeValueOffset* UExcelLoaderTgfDBattleAttributeOffset::GetMagicMagicOnHit(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAttributeOffset", "GetMagicMagicOnHit");

	Params::ExcelLoaderTgfDBattleAttributeOffset_GetMagicMagicOnHit Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAttributeOffset.GetMagicMagicOnHurt
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAttributeValueOffset*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAttributeValueOffset* UExcelLoaderTgfDBattleAttributeOffset::GetMagicMagicOnHurt(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAttributeOffset", "GetMagicMagicOnHurt");

	Params::ExcelLoaderTgfDBattleAttributeOffset_GetMagicMagicOnHurt Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAttributeOffset.GetMagicMagicOnKill
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAttributeValueOffset*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAttributeValueOffset* UExcelLoaderTgfDBattleAttributeOffset::GetMagicMagicOnKill(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAttributeOffset", "GetMagicMagicOnKill");

	Params::ExcelLoaderTgfDBattleAttributeOffset_GetMagicMagicOnKill Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAttributeOffset.GetMagicMagicOverTime
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAttributeValueOffset*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAttributeValueOffset* UExcelLoaderTgfDBattleAttributeOffset::GetMagicMagicOverTime(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAttributeOffset", "GetMagicMagicOverTime");

	Params::ExcelLoaderTgfDBattleAttributeOffset_GetMagicMagicOverTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAttributeOffset.GetMagicMaxMagicBase
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAttributeValueOffset*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAttributeValueOffset* UExcelLoaderTgfDBattleAttributeOffset::GetMagicMaxMagicBase(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAttributeOffset", "GetMagicMaxMagicBase");

	Params::ExcelLoaderTgfDBattleAttributeOffset_GetMagicMaxMagicBase Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAttributeOffset.GetNaturalEnergyMaxNaturalEnergyBase
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAttributeValueOffset*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAttributeValueOffset* UExcelLoaderTgfDBattleAttributeOffset::GetNaturalEnergyMaxNaturalEnergyBase(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAttributeOffset", "GetNaturalEnergyMaxNaturalEnergyBase");

	Params::ExcelLoaderTgfDBattleAttributeOffset_GetNaturalEnergyMaxNaturalEnergyBase Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAttributeOffset.GetNaturalEnergyNaturalEnergyGenerateRate
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAttributeValueOffset*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAttributeValueOffset* UExcelLoaderTgfDBattleAttributeOffset::GetNaturalEnergyNaturalEnergyGenerateRate(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAttributeOffset", "GetNaturalEnergyNaturalEnergyGenerateRate");

	Params::ExcelLoaderTgfDBattleAttributeOffset_GetNaturalEnergyNaturalEnergyGenerateRate Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAttributeOffset.GetNaturalEnergyNaturalEnergyOnHit
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAttributeValueOffset*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAttributeValueOffset* UExcelLoaderTgfDBattleAttributeOffset::GetNaturalEnergyNaturalEnergyOnHit(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAttributeOffset", "GetNaturalEnergyNaturalEnergyOnHit");

	Params::ExcelLoaderTgfDBattleAttributeOffset_GetNaturalEnergyNaturalEnergyOnHit Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAttributeOffset.GetNaturalEnergyNaturalEnergyOnHurt
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAttributeValueOffset*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAttributeValueOffset* UExcelLoaderTgfDBattleAttributeOffset::GetNaturalEnergyNaturalEnergyOnHurt(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAttributeOffset", "GetNaturalEnergyNaturalEnergyOnHurt");

	Params::ExcelLoaderTgfDBattleAttributeOffset_GetNaturalEnergyNaturalEnergyOnHurt Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAttributeOffset.GetNaturalEnergyNaturalEnergyOnKill
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAttributeValueOffset*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAttributeValueOffset* UExcelLoaderTgfDBattleAttributeOffset::GetNaturalEnergyNaturalEnergyOnKill(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAttributeOffset", "GetNaturalEnergyNaturalEnergyOnKill");

	Params::ExcelLoaderTgfDBattleAttributeOffset_GetNaturalEnergyNaturalEnergyOnKill Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAttributeOffset.GetNaturalEnergyNaturalEnergyOverTime
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAttributeValueOffset*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAttributeValueOffset* UExcelLoaderTgfDBattleAttributeOffset::GetNaturalEnergyNaturalEnergyOverTime(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAttributeOffset", "GetNaturalEnergyNaturalEnergyOverTime");

	Params::ExcelLoaderTgfDBattleAttributeOffset_GetNaturalEnergyNaturalEnergyOverTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAttributeOffset.GetRecoverExpBoostRateOutOfPortal
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAttributeValueOffset*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAttributeValueOffset* UExcelLoaderTgfDBattleAttributeOffset::GetRecoverExpBoostRateOutOfPortal(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAttributeOffset", "GetRecoverExpBoostRateOutOfPortal");

	Params::ExcelLoaderTgfDBattleAttributeOffset_GetRecoverExpBoostRateOutOfPortal Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAttributeOffset.GetRecoverGainGoldOutOfPortal
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAttributeValueOffset*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAttributeValueOffset* UExcelLoaderTgfDBattleAttributeOffset::GetRecoverGainGoldOutOfPortal(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAttributeOffset", "GetRecoverGainGoldOutOfPortal");

	Params::ExcelLoaderTgfDBattleAttributeOffset_GetRecoverGainGoldOutOfPortal Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAttributeOffset.GetRecoverHealBoostRate
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAttributeValueOffset*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAttributeValueOffset* UExcelLoaderTgfDBattleAttributeOffset::GetRecoverHealBoostRate(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAttributeOffset", "GetRecoverHealBoostRate");

	Params::ExcelLoaderTgfDBattleAttributeOffset_GetRecoverHealBoostRate Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAttributeOffset.GetRecoverHealOnHitBase
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAttributeValueOffset*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAttributeValueOffset* UExcelLoaderTgfDBattleAttributeOffset::GetRecoverHealOnHitBase(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAttributeOffset", "GetRecoverHealOnHitBase");

	Params::ExcelLoaderTgfDBattleAttributeOffset_GetRecoverHealOnHitBase Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAttributeOffset.GetRecoverHealOnKillBase
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAttributeValueOffset*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAttributeValueOffset* UExcelLoaderTgfDBattleAttributeOffset::GetRecoverHealOnKillBase(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAttributeOffset", "GetRecoverHealOnKillBase");

	Params::ExcelLoaderTgfDBattleAttributeOffset_GetRecoverHealOnKillBase Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAttributeOffset.GetRecoverHealOverTimeBase
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAttributeValueOffset*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAttributeValueOffset* UExcelLoaderTgfDBattleAttributeOffset::GetRecoverHealOverTimeBase(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAttributeOffset", "GetRecoverHealOverTimeBase");

	Params::ExcelLoaderTgfDBattleAttributeOffset_GetRecoverHealOverTimeBase Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAttributeOffset.GetRecoverHealWoundRate
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAttributeValueOffset*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAttributeValueOffset* UExcelLoaderTgfDBattleAttributeOffset::GetRecoverHealWoundRate(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAttributeOffset", "GetRecoverHealWoundRate");

	Params::ExcelLoaderTgfDBattleAttributeOffset_GetRecoverHealWoundRate Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAttributeOffset.GetRecoverLifeLeachRate
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAttributeValueOffset*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAttributeValueOffset* UExcelLoaderTgfDBattleAttributeOffset::GetRecoverLifeLeachRate(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAttributeOffset", "GetRecoverLifeLeachRate");

	Params::ExcelLoaderTgfDBattleAttributeOffset_GetRecoverLifeLeachRate Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAttributeOffset.GetRecoverShieldBoostRate
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAttributeValueOffset*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAttributeValueOffset* UExcelLoaderTgfDBattleAttributeOffset::GetRecoverShieldBoostRate(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAttributeOffset", "GetRecoverShieldBoostRate");

	Params::ExcelLoaderTgfDBattleAttributeOffset_GetRecoverShieldBoostRate Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAttributeOffset.GetRecoverSkillCooldownScaleRate
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAttributeValueOffset*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAttributeValueOffset* UExcelLoaderTgfDBattleAttributeOffset::GetRecoverSkillCooldownScaleRate(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAttributeOffset", "GetRecoverSkillCooldownScaleRate");

	Params::ExcelLoaderTgfDBattleAttributeOffset_GetRecoverSkillCooldownScaleRate Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAttributeOffset.GetSoulEnergyMaxSoulEnergyBase
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAttributeValueOffset*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAttributeValueOffset* UExcelLoaderTgfDBattleAttributeOffset::GetSoulEnergyMaxSoulEnergyBase(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAttributeOffset", "GetSoulEnergyMaxSoulEnergyBase");

	Params::ExcelLoaderTgfDBattleAttributeOffset_GetSoulEnergyMaxSoulEnergyBase Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAttributeOffset.GetSoulEnergySoulEnergyGenerateRate
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAttributeValueOffset*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAttributeValueOffset* UExcelLoaderTgfDBattleAttributeOffset::GetSoulEnergySoulEnergyGenerateRate(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAttributeOffset", "GetSoulEnergySoulEnergyGenerateRate");

	Params::ExcelLoaderTgfDBattleAttributeOffset_GetSoulEnergySoulEnergyGenerateRate Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAttributeOffset.GetSoulEnergySoulEnergyOnHit
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAttributeValueOffset*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAttributeValueOffset* UExcelLoaderTgfDBattleAttributeOffset::GetSoulEnergySoulEnergyOnHit(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAttributeOffset", "GetSoulEnergySoulEnergyOnHit");

	Params::ExcelLoaderTgfDBattleAttributeOffset_GetSoulEnergySoulEnergyOnHit Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAttributeOffset.GetSoulEnergySoulEnergyOnHurt
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAttributeValueOffset*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAttributeValueOffset* UExcelLoaderTgfDBattleAttributeOffset::GetSoulEnergySoulEnergyOnHurt(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAttributeOffset", "GetSoulEnergySoulEnergyOnHurt");

	Params::ExcelLoaderTgfDBattleAttributeOffset_GetSoulEnergySoulEnergyOnHurt Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAttributeOffset.GetSoulEnergySoulEnergyOnKill
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAttributeValueOffset*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAttributeValueOffset* UExcelLoaderTgfDBattleAttributeOffset::GetSoulEnergySoulEnergyOnKill(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAttributeOffset", "GetSoulEnergySoulEnergyOnKill");

	Params::ExcelLoaderTgfDBattleAttributeOffset_GetSoulEnergySoulEnergyOnKill Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAttributeOffset.GetSpeedLevelInteractSpeedRate
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAttributeValueOffset*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAttributeValueOffset* UExcelLoaderTgfDBattleAttributeOffset::GetSpeedLevelInteractSpeedRate(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAttributeOffset", "GetSpeedLevelInteractSpeedRate");

	Params::ExcelLoaderTgfDBattleAttributeOffset_GetSpeedLevelInteractSpeedRate Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAttributeOffset.GetSpeedMoveSpeedBase
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAttributeValueOffset*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAttributeValueOffset* UExcelLoaderTgfDBattleAttributeOffset::GetSpeedMoveSpeedBase(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAttributeOffset", "GetSpeedMoveSpeedBase");

	Params::ExcelLoaderTgfDBattleAttributeOffset_GetSpeedMoveSpeedBase Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAttributeOffset.GetStatEffectAttackBoostRateWithFullHealth
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAttributeValueOffset*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAttributeValueOffset* UExcelLoaderTgfDBattleAttributeOffset::GetStatEffectAttackBoostRateWithFullHealth(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAttributeOffset", "GetStatEffectAttackBoostRateWithFullHealth");

	Params::ExcelLoaderTgfDBattleAttributeOffset_GetStatEffectAttackBoostRateWithFullHealth Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAttributeOffset.GetStatEffectCriticalRateWithFullHealth
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAttributeValueOffset*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAttributeValueOffset* UExcelLoaderTgfDBattleAttributeOffset::GetStatEffectCriticalRateWithFullHealth(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAttributeOffset", "GetStatEffectCriticalRateWithFullHealth");

	Params::ExcelLoaderTgfDBattleAttributeOffset_GetStatEffectCriticalRateWithFullHealth Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAttributeOffset.GetStatEffectCriticalRateWithHitRunning
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAttributeValueOffset*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAttributeValueOffset* UExcelLoaderTgfDBattleAttributeOffset::GetStatEffectCriticalRateWithHitRunning(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAttributeOffset", "GetStatEffectCriticalRateWithHitRunning");

	Params::ExcelLoaderTgfDBattleAttributeOffset_GetStatEffectCriticalRateWithHitRunning Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAttributeOffset.GetStatEffectHealOverTimeWithHitRunning
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAttributeValueOffset*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAttributeValueOffset* UExcelLoaderTgfDBattleAttributeOffset::GetStatEffectHealOverTimeWithHitRunning(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAttributeOffset", "GetStatEffectHealOverTimeWithHitRunning");

	Params::ExcelLoaderTgfDBattleAttributeOffset_GetStatEffectHealOverTimeWithHitRunning Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAttributeOffset.GetStatEffectLifeLeachRateWithHitRunning
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAttributeValueOffset*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAttributeValueOffset* UExcelLoaderTgfDBattleAttributeOffset::GetStatEffectLifeLeachRateWithHitRunning(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAttributeOffset", "GetStatEffectLifeLeachRateWithHitRunning");

	Params::ExcelLoaderTgfDBattleAttributeOffset_GetStatEffectLifeLeachRateWithHitRunning Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAttributeOffset.GetStatEffectMoveSpeedWithHitRunning
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAttributeValueOffset*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAttributeValueOffset* UExcelLoaderTgfDBattleAttributeOffset::GetStatEffectMoveSpeedWithHitRunning(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAttributeOffset", "GetStatEffectMoveSpeedWithHitRunning");

	Params::ExcelLoaderTgfDBattleAttributeOffset_GetStatEffectMoveSpeedWithHitRunning Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAttributeOffset.GetTriggerEffectAdditionalElementDarkDamageOnCausingHit
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAttributeValueOffset*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAttributeValueOffset* UExcelLoaderTgfDBattleAttributeOffset::GetTriggerEffectAdditionalElementDarkDamageOnCausingHit(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAttributeOffset", "GetTriggerEffectAdditionalElementDarkDamageOnCausingHit");

	Params::ExcelLoaderTgfDBattleAttributeOffset_GetTriggerEffectAdditionalElementDarkDamageOnCausingHit Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAttributeOffset.GetTriggerEffectAdditionalElementFireDamageOnCausingHit
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAttributeValueOffset*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAttributeValueOffset* UExcelLoaderTgfDBattleAttributeOffset::GetTriggerEffectAdditionalElementFireDamageOnCausingHit(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAttributeOffset", "GetTriggerEffectAdditionalElementFireDamageOnCausingHit");

	Params::ExcelLoaderTgfDBattleAttributeOffset_GetTriggerEffectAdditionalElementFireDamageOnCausingHit Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAttributeOffset.GetTriggerEffectAdditionalElementIceDamageOnCausingHit
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAttributeValueOffset*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAttributeValueOffset* UExcelLoaderTgfDBattleAttributeOffset::GetTriggerEffectAdditionalElementIceDamageOnCausingHit(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAttributeOffset", "GetTriggerEffectAdditionalElementIceDamageOnCausingHit");

	Params::ExcelLoaderTgfDBattleAttributeOffset_GetTriggerEffectAdditionalElementIceDamageOnCausingHit Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAttributeOffset.GetTriggerEffectAdditionalElementLightDamageOnCausingHit
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAttributeValueOffset*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAttributeValueOffset* UExcelLoaderTgfDBattleAttributeOffset::GetTriggerEffectAdditionalElementLightDamageOnCausingHit(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAttributeOffset", "GetTriggerEffectAdditionalElementLightDamageOnCausingHit");

	Params::ExcelLoaderTgfDBattleAttributeOffset_GetTriggerEffectAdditionalElementLightDamageOnCausingHit Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAttributeOffset.GetTriggerEffectAdditionalElementNoneDamageOnCausingHit
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAttributeValueOffset*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAttributeValueOffset* UExcelLoaderTgfDBattleAttributeOffset::GetTriggerEffectAdditionalElementNoneDamageOnCausingHit(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAttributeOffset", "GetTriggerEffectAdditionalElementNoneDamageOnCausingHit");

	Params::ExcelLoaderTgfDBattleAttributeOffset_GetTriggerEffectAdditionalElementNoneDamageOnCausingHit Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAttributeOffset.GetTriggerEffectAdditionalElementThunderDamageOnCausingHit
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAttributeValueOffset*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAttributeValueOffset* UExcelLoaderTgfDBattleAttributeOffset::GetTriggerEffectAdditionalElementThunderDamageOnCausingHit(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAttributeOffset", "GetTriggerEffectAdditionalElementThunderDamageOnCausingHit");

	Params::ExcelLoaderTgfDBattleAttributeOffset_GetTriggerEffectAdditionalElementThunderDamageOnCausingHit Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAttributeOffset.GetTriggerEffectAdditionalFixedDamageOnCausingHit
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAttributeValueOffset*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAttributeValueOffset* UExcelLoaderTgfDBattleAttributeOffset::GetTriggerEffectAdditionalFixedDamageOnCausingHit(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAttributeOffset", "GetTriggerEffectAdditionalFixedDamageOnCausingHit");

	Params::ExcelLoaderTgfDBattleAttributeOffset_GetTriggerEffectAdditionalFixedDamageOnCausingHit Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAttributeOffset.GetTriggerEffectAddShieldOnCastSkill
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAttributeValueOffset*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAttributeValueOffset* UExcelLoaderTgfDBattleAttributeOffset::GetTriggerEffectAddShieldOnCastSkill(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAttributeOffset", "GetTriggerEffectAddShieldOnCastSkill");

	Params::ExcelLoaderTgfDBattleAttributeOffset_GetTriggerEffectAddShieldOnCastSkill Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAttributeOffset.GetTriggerEffectDamageOnDefendSuccess
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAttributeValueOffset*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAttributeValueOffset* UExcelLoaderTgfDBattleAttributeOffset::GetTriggerEffectDamageOnDefendSuccess(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAttributeOffset", "GetTriggerEffectDamageOnDefendSuccess");

	Params::ExcelLoaderTgfDBattleAttributeOffset_GetTriggerEffectDamageOnDefendSuccess Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAttributeOffset.GetTriggerEffectGainGoldOnKill
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAttributeValueOffset*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAttributeValueOffset* UExcelLoaderTgfDBattleAttributeOffset::GetTriggerEffectGainGoldOnKill(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAttributeOffset", "GetTriggerEffectGainGoldOnKill");

	Params::ExcelLoaderTgfDBattleAttributeOffset_GetTriggerEffectGainGoldOnKill Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAttributeOffset.GetTriggerEffectGainGoldOnOpenChest
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAttributeValueOffset*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAttributeValueOffset* UExcelLoaderTgfDBattleAttributeOffset::GetTriggerEffectGainGoldOnOpenChest(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAttributeOffset", "GetTriggerEffectGainGoldOnOpenChest");

	Params::ExcelLoaderTgfDBattleAttributeOffset_GetTriggerEffectGainGoldOnOpenChest Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAttributeOffset.GetTriggerEffectHealOnDefendSuccess
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAttributeValueOffset*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAttributeValueOffset* UExcelLoaderTgfDBattleAttributeOffset::GetTriggerEffectHealOnDefendSuccess(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAttributeOffset", "GetTriggerEffectHealOnDefendSuccess");

	Params::ExcelLoaderTgfDBattleAttributeOffset_GetTriggerEffectHealOnDefendSuccess Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAttributeOffset.GetTriggerEffectHealOnOpenChest
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAttributeValueOffset*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAttributeValueOffset* UExcelLoaderTgfDBattleAttributeOffset::GetTriggerEffectHealOnOpenChest(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAttributeOffset", "GetTriggerEffectHealOnOpenChest");

	Params::ExcelLoaderTgfDBattleAttributeOffset_GetTriggerEffectHealOnOpenChest Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAttributeOffset.GetTriggerEffectMagicOnOpenChest
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAttributeValueOffset*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAttributeValueOffset* UExcelLoaderTgfDBattleAttributeOffset::GetTriggerEffectMagicOnOpenChest(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAttributeOffset", "GetTriggerEffectMagicOnOpenChest");

	Params::ExcelLoaderTgfDBattleAttributeOffset_GetTriggerEffectMagicOnOpenChest Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixKey.GetAffixLevel
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDBattleAffixKey::GetAffixLevel(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixKey", "GetAffixLevel");

	Params::ExcelLoaderTgfDBattleAffixKey_GetAffixLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixKey.GetTypeId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDBattleAffixKey::GetTypeId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixKey", "GetTypeId");

	Params::ExcelLoaderTgfDBattleAffixKey_GetTypeId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderOrgXresloaderPbXresloaderHeader.GetAllOfDataSource
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderOrgXresloaderPbXresloaderDataSource*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderOrgXresloaderPbXresloaderDataSource*> UExcelLoaderOrgXresloaderPbXresloaderHeader::GetAllOfDataSource()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderOrgXresloaderPbXresloaderHeader", "GetAllOfDataSource");

	Params::ExcelLoaderOrgXresloaderPbXresloaderHeader_GetAllOfDataSource Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderOrgXresloaderPbXresloaderHeader.GetCount
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderOrgXresloaderPbXresloaderHeader::GetCount(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderOrgXresloaderPbXresloaderHeader", "GetCount");

	Params::ExcelLoaderOrgXresloaderPbXresloaderHeader_GetCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderOrgXresloaderPbXresloaderHeader.GetDataSource
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderOrgXresloaderPbXresloaderDataSource*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderOrgXresloaderPbXresloaderDataSource* UExcelLoaderOrgXresloaderPbXresloaderHeader::GetDataSource(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderOrgXresloaderPbXresloaderHeader", "GetDataSource");

	Params::ExcelLoaderOrgXresloaderPbXresloaderHeader_GetDataSource Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderOrgXresloaderPbXresloaderHeader.GetDataSourceSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderOrgXresloaderPbXresloaderHeader::GetDataSourceSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderOrgXresloaderPbXresloaderHeader", "GetDataSourceSize");

	Params::ExcelLoaderOrgXresloaderPbXresloaderHeader_GetDataSourceSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderOrgXresloaderPbXresloaderHeader.GetDataVer
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderOrgXresloaderPbXresloaderHeader::GetDataVer(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderOrgXresloaderPbXresloaderHeader", "GetDataVer");

	Params::ExcelLoaderOrgXresloaderPbXresloaderHeader_GetDataVer Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderOrgXresloaderPbXresloaderHeader.GetDescription
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderOrgXresloaderPbXresloaderHeader::GetDescription(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderOrgXresloaderPbXresloaderHeader", "GetDescription");

	Params::ExcelLoaderOrgXresloaderPbXresloaderHeader_GetDescription Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderOrgXresloaderPbXresloaderHeader.GetHashCode
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderOrgXresloaderPbXresloaderHeader::GetHashCode(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderOrgXresloaderPbXresloaderHeader", "GetHashCode");

	Params::ExcelLoaderOrgXresloaderPbXresloaderHeader_GetHashCode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderOrgXresloaderPbXresloaderHeader.GetXresVer
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderOrgXresloaderPbXresloaderHeader::GetXresVer(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderOrgXresloaderPbXresloaderHeader", "GetXresVer");

	Params::ExcelLoaderOrgXresloaderPbXresloaderHeader_GetXresVer Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixAbilityRandomData.GetAffixTypeIdCase
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EExcelLoaderTgfDBattleAffixAbilityRandomDataAffixTypeIdReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EExcelLoaderTgfDBattleAffixAbilityRandomDataAffixTypeId UExcelLoaderTgfDBattleAffixAbilityRandomData::GetAffixTypeIdCase()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixAbilityRandomData", "GetAffixTypeIdCase");

	Params::ExcelLoaderTgfDBattleAffixAbilityRandomData_GetAffixTypeIdCase Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixAbilityRandomData.GetGroupIndex
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDBattleAffixAbilityRandomData::GetGroupIndex(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixAbilityRandomData", "GetGroupIndex");

	Params::ExcelLoaderTgfDBattleAffixAbilityRandomData_GetGroupIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixAbilityRandomData.GetLegendaryAffixId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDBattleAffixAbilityRandomData::GetLegendaryAffixId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixAbilityRandomData", "GetLegendaryAffixId");

	Params::ExcelLoaderTgfDBattleAffixAbilityRandomData_GetLegendaryAffixId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixAbilityRandomData.GetNormalAffixId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDBattleAffixAbilityRandomData::GetNormalAffixId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixAbilityRandomData", "GetNormalAffixId");

	Params::ExcelLoaderTgfDBattleAffixAbilityRandomData_GetNormalAffixId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixAbilityRandomData.GetRandomLevel
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDBattleAffixAbilityRandomData::GetRandomLevel(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixAbilityRandomData", "GetRandomLevel");

	Params::ExcelLoaderTgfDBattleAffixAbilityRandomData_GetRandomLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixAbilityData.GetAbilityLevel
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDBattleAffixAbilityData::GetAbilityLevel(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixAbilityData", "GetAbilityLevel");

	Params::ExcelLoaderTgfDBattleAffixAbilityData_GetAbilityLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixAbilityData.GetAffixTypeIdCase
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EExcelLoaderTgfDBattleAffixAbilityDataAffixTypeIdReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EExcelLoaderTgfDBattleAffixAbilityDataAffixTypeId UExcelLoaderTgfDBattleAffixAbilityData::GetAffixTypeIdCase()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixAbilityData", "GetAffixTypeIdCase");

	Params::ExcelLoaderTgfDBattleAffixAbilityData_GetAffixTypeIdCase Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixAbilityData.GetLegendaryAffixId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDBattleAffixAbilityData::GetLegendaryAffixId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixAbilityData", "GetLegendaryAffixId");

	Params::ExcelLoaderTgfDBattleAffixAbilityData_GetLegendaryAffixId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixAbilityData.GetNormalAffixId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDBattleAffixAbilityData::GetNormalAffixId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixAbilityData", "GetNormalAffixId");

	Params::ExcelLoaderTgfDBattleAffixAbilityData_GetNormalAffixId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufFileDescriptorProto.GetAllOfDependency
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> UExcelLoaderGoogleProtobufFileDescriptorProto::GetAllOfDependency()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufFileDescriptorProto", "GetAllOfDependency");

	Params::ExcelLoaderGoogleProtobufFileDescriptorProto_GetAllOfDependency Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufFileDescriptorProto.GetAllOfEnumType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderGoogleProtobufEnumDescriptorProto*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderGoogleProtobufEnumDescriptorProto*> UExcelLoaderGoogleProtobufFileDescriptorProto::GetAllOfEnumType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufFileDescriptorProto", "GetAllOfEnumType");

	Params::ExcelLoaderGoogleProtobufFileDescriptorProto_GetAllOfEnumType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufFileDescriptorProto.GetAllOfExtension
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderGoogleProtobufFieldDescriptorProto*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderGoogleProtobufFieldDescriptorProto*> UExcelLoaderGoogleProtobufFileDescriptorProto::GetAllOfExtension()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufFileDescriptorProto", "GetAllOfExtension");

	Params::ExcelLoaderGoogleProtobufFileDescriptorProto_GetAllOfExtension Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufFileDescriptorProto.GetAllOfMessageType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderGoogleProtobufDescriptorProto*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderGoogleProtobufDescriptorProto*> UExcelLoaderGoogleProtobufFileDescriptorProto::GetAllOfMessageType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufFileDescriptorProto", "GetAllOfMessageType");

	Params::ExcelLoaderGoogleProtobufFileDescriptorProto_GetAllOfMessageType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufFileDescriptorProto.GetAllOfPublicDependency
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UExcelLoaderGoogleProtobufFileDescriptorProto::GetAllOfPublicDependency()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufFileDescriptorProto", "GetAllOfPublicDependency");

	Params::ExcelLoaderGoogleProtobufFileDescriptorProto_GetAllOfPublicDependency Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufFileDescriptorProto.GetAllOfService
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderGoogleProtobufServiceDescriptorProto*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderGoogleProtobufServiceDescriptorProto*> UExcelLoaderGoogleProtobufFileDescriptorProto::GetAllOfService()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufFileDescriptorProto", "GetAllOfService");

	Params::ExcelLoaderGoogleProtobufFileDescriptorProto_GetAllOfService Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufFileDescriptorProto.GetAllOfWeakDependency
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UExcelLoaderGoogleProtobufFileDescriptorProto::GetAllOfWeakDependency()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufFileDescriptorProto", "GetAllOfWeakDependency");

	Params::ExcelLoaderGoogleProtobufFileDescriptorProto_GetAllOfWeakDependency Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufFileDescriptorProto.GetDependency
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderGoogleProtobufFileDescriptorProto::GetDependency(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufFileDescriptorProto", "GetDependency");

	Params::ExcelLoaderGoogleProtobufFileDescriptorProto_GetDependency Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufFileDescriptorProto.GetDependencySize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderGoogleProtobufFileDescriptorProto::GetDependencySize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufFileDescriptorProto", "GetDependencySize");

	Params::ExcelLoaderGoogleProtobufFileDescriptorProto_GetDependencySize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufFileDescriptorProto.GetEdition
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderGoogleProtobufFileDescriptorProto::GetEdition(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufFileDescriptorProto", "GetEdition");

	Params::ExcelLoaderGoogleProtobufFileDescriptorProto_GetEdition Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufFileDescriptorProto.GetEnumType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufEnumDescriptorProto*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufEnumDescriptorProto* UExcelLoaderGoogleProtobufFileDescriptorProto::GetEnumType(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufFileDescriptorProto", "GetEnumType");

	Params::ExcelLoaderGoogleProtobufFileDescriptorProto_GetEnumType Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufFileDescriptorProto.GetEnumTypeSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderGoogleProtobufFileDescriptorProto::GetEnumTypeSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufFileDescriptorProto", "GetEnumTypeSize");

	Params::ExcelLoaderGoogleProtobufFileDescriptorProto_GetEnumTypeSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufFileDescriptorProto.GetExtension
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufFieldDescriptorProto*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufFieldDescriptorProto* UExcelLoaderGoogleProtobufFileDescriptorProto::GetExtension(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufFileDescriptorProto", "GetExtension");

	Params::ExcelLoaderGoogleProtobufFileDescriptorProto_GetExtension Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufFileDescriptorProto.GetExtensionSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderGoogleProtobufFileDescriptorProto::GetExtensionSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufFileDescriptorProto", "GetExtensionSize");

	Params::ExcelLoaderGoogleProtobufFileDescriptorProto_GetExtensionSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufFileDescriptorProto.GetMessageType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufDescriptorProto*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufDescriptorProto* UExcelLoaderGoogleProtobufFileDescriptorProto::GetMessageType(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufFileDescriptorProto", "GetMessageType");

	Params::ExcelLoaderGoogleProtobufFileDescriptorProto_GetMessageType Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufFileDescriptorProto.GetMessageTypeSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderGoogleProtobufFileDescriptorProto::GetMessageTypeSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufFileDescriptorProto", "GetMessageTypeSize");

	Params::ExcelLoaderGoogleProtobufFileDescriptorProto_GetMessageTypeSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufFileDescriptorProto.GetName
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderGoogleProtobufFileDescriptorProto::GetName(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufFileDescriptorProto", "GetName");

	Params::ExcelLoaderGoogleProtobufFileDescriptorProto_GetName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufFileDescriptorProto.GetOptions
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufFileOptions*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufFileOptions* UExcelLoaderGoogleProtobufFileDescriptorProto::GetOptions(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufFileDescriptorProto", "GetOptions");

	Params::ExcelLoaderGoogleProtobufFileDescriptorProto_GetOptions Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufFileDescriptorProto.GetPackage
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderGoogleProtobufFileDescriptorProto::GetPackage(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufFileDescriptorProto", "GetPackage");

	Params::ExcelLoaderGoogleProtobufFileDescriptorProto_GetPackage Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufFileDescriptorProto.GetPublicDependency
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderGoogleProtobufFileDescriptorProto::GetPublicDependency(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufFileDescriptorProto", "GetPublicDependency");

	Params::ExcelLoaderGoogleProtobufFileDescriptorProto_GetPublicDependency Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufFileDescriptorProto.GetPublicDependencySize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderGoogleProtobufFileDescriptorProto::GetPublicDependencySize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufFileDescriptorProto", "GetPublicDependencySize");

	Params::ExcelLoaderGoogleProtobufFileDescriptorProto_GetPublicDependencySize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufFileDescriptorProto.GetService
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufServiceDescriptorProto*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufServiceDescriptorProto* UExcelLoaderGoogleProtobufFileDescriptorProto::GetService(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufFileDescriptorProto", "GetService");

	Params::ExcelLoaderGoogleProtobufFileDescriptorProto_GetService Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufFileDescriptorProto.GetServiceSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderGoogleProtobufFileDescriptorProto::GetServiceSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufFileDescriptorProto", "GetServiceSize");

	Params::ExcelLoaderGoogleProtobufFileDescriptorProto_GetServiceSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufFileDescriptorProto.GetSourceCodeInfo
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufSourceCodeInfo*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufSourceCodeInfo* UExcelLoaderGoogleProtobufFileDescriptorProto::GetSourceCodeInfo(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufFileDescriptorProto", "GetSourceCodeInfo");

	Params::ExcelLoaderGoogleProtobufFileDescriptorProto_GetSourceCodeInfo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufFileDescriptorProto.GetSyntax
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderGoogleProtobufFileDescriptorProto::GetSyntax(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufFileDescriptorProto", "GetSyntax");

	Params::ExcelLoaderGoogleProtobufFileDescriptorProto_GetSyntax Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufFileDescriptorProto.GetWeakDependency
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderGoogleProtobufFileDescriptorProto::GetWeakDependency(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufFileDescriptorProto", "GetWeakDependency");

	Params::ExcelLoaderGoogleProtobufFileDescriptorProto_GetWeakDependency Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufFileDescriptorProto.GetWeakDependencySize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderGoogleProtobufFileDescriptorProto::GetWeakDependencySize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufFileDescriptorProto", "GetWeakDependencySize");

	Params::ExcelLoaderGoogleProtobufFileDescriptorProto_GetWeakDependencySize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixAttributeRandomValueDataEffect.GetCorruption
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDBattleAffixAttributeRandomValueDataEffect::GetCorruption(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixAttributeRandomValueDataEffect", "GetCorruption");

	Params::ExcelLoaderTgfDBattleAffixAttributeRandomValueDataEffect_GetCorruption Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixAttributeRandomValueDataEffect.GetTypeCase
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EExcelLoaderTgfDBattleAffixAttributeRandomValueDataEffectTypeReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EExcelLoaderTgfDBattleAffixAttributeRandomValueDataEffectType UExcelLoaderTgfDBattleAffixAttributeRandomValueDataEffect::GetTypeCase()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixAttributeRandomValueDataEffect", "GetTypeCase");

	Params::ExcelLoaderTgfDBattleAffixAttributeRandomValueDataEffect_GetTypeCase Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixAttributeRandomValueData.GetAffixPoolValue
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UExcelLoaderTgfDBattleAffixAttributeRandomValueData::GetAffixPoolValue(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixAttributeRandomValueData", "GetAffixPoolValue");

	Params::ExcelLoaderTgfDBattleAffixAttributeRandomValueData_GetAffixPoolValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixAttributeRandomValueData.GetEffect
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAffixAttributeRandomValueDataEffect*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAffixAttributeRandomValueDataEffect* UExcelLoaderTgfDBattleAffixAttributeRandomValueData::GetEffect(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixAttributeRandomValueData", "GetEffect");

	Params::ExcelLoaderTgfDBattleAffixAttributeRandomValueData_GetEffect Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixAttributeRandomValueData.GetGroupIndex
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDBattleAffixAttributeRandomValueData::GetGroupIndex(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixAttributeRandomValueData", "GetGroupIndex");

	Params::ExcelLoaderTgfDBattleAffixAttributeRandomValueData_GetGroupIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixAttributeRandomValueData.GetRandomLevel
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDBattleAffixAttributeRandomValueData::GetRandomLevel(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixAttributeRandomValueData", "GetRandomLevel");

	Params::ExcelLoaderTgfDBattleAffixAttributeRandomValueData_GetRandomLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixAttributeRandomValueCollectData.GetAllOfRandomData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfDBattleAffixAttributeRandomValueData*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfDBattleAffixAttributeRandomValueData*> UExcelLoaderTgfDBattleAffixAttributeRandomValueCollectData::GetAllOfRandomData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixAttributeRandomValueCollectData", "GetAllOfRandomData");

	Params::ExcelLoaderTgfDBattleAffixAttributeRandomValueCollectData_GetAllOfRandomData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixAttributeRandomValueCollectData.GetRandomData
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAffixAttributeRandomValueData*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAffixAttributeRandomValueData* UExcelLoaderTgfDBattleAffixAttributeRandomValueCollectData::GetRandomData(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixAttributeRandomValueCollectData", "GetRandomData");

	Params::ExcelLoaderTgfDBattleAffixAttributeRandomValueCollectData_GetRandomData Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixAttributeRandomValueCollectData.GetRandomDataSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfDBattleAffixAttributeRandomValueCollectData::GetRandomDataSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixAttributeRandomValueCollectData", "GetRandomDataSize");

	Params::ExcelLoaderTgfDBattleAffixAttributeRandomValueCollectData_GetRandomDataSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixAttributeValueData.GetValue
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UExcelLoaderTgfDBattleAffixAttributeValueData::GetValue(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixAttributeValueData", "GetValue");

	Params::ExcelLoaderTgfDBattleAffixAttributeValueData_GetValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixAttributeValueCollectData.GetAllOfValueData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfDBattleAffixAttributeValueData*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfDBattleAffixAttributeValueData*> UExcelLoaderTgfDBattleAffixAttributeValueCollectData::GetAllOfValueData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixAttributeValueCollectData", "GetAllOfValueData");

	Params::ExcelLoaderTgfDBattleAffixAttributeValueCollectData_GetAllOfValueData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixAttributeValueCollectData.GetValueData
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAffixAttributeValueData*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAffixAttributeValueData* UExcelLoaderTgfDBattleAffixAttributeValueCollectData::GetValueData(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixAttributeValueCollectData", "GetValueData");

	Params::ExcelLoaderTgfDBattleAffixAttributeValueCollectData_GetValueData Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixAttributeValueCollectData.GetValueDataSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfDBattleAffixAttributeValueCollectData::GetValueDataSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixAttributeValueCollectData", "GetValueDataSize");

	Params::ExcelLoaderTgfDBattleAffixAttributeValueCollectData_GetValueDataSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigUeSourceEquipmentSubType.GetAllOfCareerConfig
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigEquipmentSubTypeCareerConfig*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigEquipmentSubTypeCareerConfig*> UExcelLoaderTgfConfigUeSourceEquipmentSubType::GetAllOfCareerConfig()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigUeSourceEquipmentSubType", "GetAllOfCareerConfig");

	Params::ExcelLoaderTgfConfigUeSourceEquipmentSubType_GetAllOfCareerConfig Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigUeSourceEquipmentSubType.GetCareerConfig
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigEquipmentSubTypeCareerConfig*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigEquipmentSubTypeCareerConfig* UExcelLoaderTgfConfigUeSourceEquipmentSubType::GetCareerConfig(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigUeSourceEquipmentSubType", "GetCareerConfig");

	Params::ExcelLoaderTgfConfigUeSourceEquipmentSubType_GetCareerConfig Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigUeSourceEquipmentSubType.GetCareerConfigSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigUeSourceEquipmentSubType::GetCareerConfigSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigUeSourceEquipmentSubType", "GetCareerConfigSize");

	Params::ExcelLoaderTgfConfigUeSourceEquipmentSubType_GetCareerConfigSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigUeSourceEquipmentSubType.GetUePath
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfConfigUeSourceEquipmentSubType::GetUePath(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigUeSourceEquipmentSubType", "GetUePath");

	Params::ExcelLoaderTgfConfigUeSourceEquipmentSubType_GetUePath Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixAbilityRandomCollectData.GetAllOfRandomData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfDBattleAffixAbilityRandomData*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfDBattleAffixAbilityRandomData*> UExcelLoaderTgfDBattleAffixAbilityRandomCollectData::GetAllOfRandomData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixAbilityRandomCollectData", "GetAllOfRandomData");

	Params::ExcelLoaderTgfDBattleAffixAbilityRandomCollectData_GetAllOfRandomData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixAbilityRandomCollectData.GetRandomData
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAffixAbilityRandomData*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAffixAbilityRandomData* UExcelLoaderTgfDBattleAffixAbilityRandomCollectData::GetRandomData(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixAbilityRandomCollectData", "GetRandomData");

	Params::ExcelLoaderTgfDBattleAffixAbilityRandomCollectData_GetRandomData Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixAbilityRandomCollectData.GetRandomDataSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfDBattleAffixAbilityRandomCollectData::GetRandomDataSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixAbilityRandomCollectData", "GetRandomDataSize");

	Params::ExcelLoaderTgfDBattleAffixAbilityRandomCollectData_GetRandomDataSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixAbilityCollectData.GetAllOfLevelData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfDBattleAffixAbilityData*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfDBattleAffixAbilityData*> UExcelLoaderTgfDBattleAffixAbilityCollectData::GetAllOfLevelData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixAbilityCollectData", "GetAllOfLevelData");

	Params::ExcelLoaderTgfDBattleAffixAbilityCollectData_GetAllOfLevelData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixAbilityCollectData.GetLevelData
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAffixAbilityData*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAffixAbilityData* UExcelLoaderTgfDBattleAffixAbilityCollectData::GetLevelData(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixAbilityCollectData", "GetLevelData");

	Params::ExcelLoaderTgfDBattleAffixAbilityCollectData_GetLevelData Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixAbilityCollectData.GetLevelDataSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfDBattleAffixAbilityCollectData::GetLevelDataSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixAbilityCollectData", "GetLevelDataSize");

	Params::ExcelLoaderTgfDBattleAffixAbilityCollectData_GetLevelDataSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelFacade.GetAccessType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfFacadeAccessType*  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfFacadeAccessType* UExcelLoaderTgfConfigExcelFacade::GetAccessType(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelFacade", "GetAccessType");

	Params::ExcelLoaderTgfConfigExcelFacade_GetAccessType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelFacade.GetAllOfCostOptions
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfMarketNormalOptionCost*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfMarketNormalOptionCost*> UExcelLoaderTgfConfigExcelFacade::GetAllOfCostOptions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelFacade", "GetAllOfCostOptions");

	Params::ExcelLoaderTgfConfigExcelFacade_GetAllOfCostOptions Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelFacade.GetAllOfMaterials
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UExcelLoaderTgfConfigExcelFacade::GetAllOfMaterials()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelFacade", "GetAllOfMaterials");

	Params::ExcelLoaderTgfConfigExcelFacade_GetAllOfMaterials Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelFacade.GetAllOfMaterialsShows
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UExcelLoaderTgfConfigExcelFacade::GetAllOfMaterialsShows()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelFacade", "GetAllOfMaterialsShows");

	Params::ExcelLoaderTgfConfigExcelFacade_GetAllOfMaterialsShows Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelFacade.GetAllOfPutThirdSorts
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UExcelLoaderTgfConfigExcelFacade::GetAllOfPutThirdSorts()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelFacade", "GetAllOfPutThirdSorts");

	Params::ExcelLoaderTgfConfigExcelFacade_GetAllOfPutThirdSorts Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelFacade.GetAllOfUeSkinIds
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UExcelLoaderTgfConfigExcelFacade::GetAllOfUeSkinIds()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelFacade", "GetAllOfUeSkinIds");

	Params::ExcelLoaderTgfConfigExcelFacade_GetAllOfUeSkinIds Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelFacade.GetCostOptions
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfMarketNormalOptionCost*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfMarketNormalOptionCost* UExcelLoaderTgfConfigExcelFacade::GetCostOptions(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelFacade", "GetCostOptions");

	Params::ExcelLoaderTgfConfigExcelFacade_GetCostOptions Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelFacade.GetCostOptionsSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelFacade::GetCostOptionsSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelFacade", "GetCostOptionsSize");

	Params::ExcelLoaderTgfConfigExcelFacade_GetCostOptionsSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelFacade.GetDescs
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfConfigExcelFacade::GetDescs(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelFacade", "GetDescs");

	Params::ExcelLoaderTgfConfigExcelFacade_GetDescs Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelFacade.GetHiddenShadow
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UExcelLoaderTgfConfigExcelFacade::GetHiddenShadow(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelFacade", "GetHiddenShadow");

	Params::ExcelLoaderTgfConfigExcelFacade_GetHiddenShadow Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelFacade.GetIcon
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfConfigExcelFacade::GetIcon(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelFacade", "GetIcon");

	Params::ExcelLoaderTgfConfigExcelFacade_GetIcon Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelFacade.GetId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelFacade::GetId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelFacade", "GetId");

	Params::ExcelLoaderTgfConfigExcelFacade_GetId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelFacade.GetMarketplacePic
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfConfigExcelFacade::GetMarketplacePic(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelFacade", "GetMarketplacePic");

	Params::ExcelLoaderTgfConfigExcelFacade_GetMarketplacePic Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelFacade.GetMaterials
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelFacade::GetMaterials(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelFacade", "GetMaterials");

	Params::ExcelLoaderTgfConfigExcelFacade_GetMaterials Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelFacade.GetMaterialsShows
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelFacade::GetMaterialsShows(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelFacade", "GetMaterialsShows");

	Params::ExcelLoaderTgfConfigExcelFacade_GetMaterialsShows Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelFacade.GetMaterialsShowsSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelFacade::GetMaterialsShowsSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelFacade", "GetMaterialsShowsSize");

	Params::ExcelLoaderTgfConfigExcelFacade_GetMaterialsShowsSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelFacade.GetMaterialsSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelFacade::GetMaterialsSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelFacade", "GetMaterialsSize");

	Params::ExcelLoaderTgfConfigExcelFacade_GetMaterialsSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelFacade.GetName
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfConfigExcelFacade::GetName(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelFacade", "GetName");

	Params::ExcelLoaderTgfConfigExcelFacade_GetName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelFacade.GetOffset
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDExcelUeXYZ*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDExcelUeXYZ* UExcelLoaderTgfConfigExcelFacade::GetOffset(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelFacade", "GetOffset");

	Params::ExcelLoaderTgfConfigExcelFacade_GetOffset Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelFacade.GetOnSales
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UExcelLoaderTgfConfigExcelFacade::GetOnSales(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelFacade", "GetOnSales");

	Params::ExcelLoaderTgfConfigExcelFacade_GetOnSales Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelFacade.GetPriority
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelFacade::GetPriority(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelFacade", "GetPriority");

	Params::ExcelLoaderTgfConfigExcelFacade_GetPriority Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelFacade.GetPutThirdSorts
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelFacade::GetPutThirdSorts(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelFacade", "GetPutThirdSorts");

	Params::ExcelLoaderTgfConfigExcelFacade_GetPutThirdSorts Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelFacade.GetPutThirdSortsSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelFacade::GetPutThirdSortsSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelFacade", "GetPutThirdSortsSize");

	Params::ExcelLoaderTgfConfigExcelFacade_GetPutThirdSortsSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelFacade.GetQualityType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfConfigExcelFacade::GetQualityType(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelFacade", "GetQualityType");

	Params::ExcelLoaderTgfConfigExcelFacade_GetQualityType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelFacade.GetRarity
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelFacade::GetRarity(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelFacade", "GetRarity");

	Params::ExcelLoaderTgfConfigExcelFacade_GetRarity Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelFacade.GetSalesTime
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufTimestamp*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufTimestamp* UExcelLoaderTgfConfigExcelFacade::GetSalesTime(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelFacade", "GetSalesTime");

	Params::ExcelLoaderTgfConfigExcelFacade_GetSalesTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelFacade.GetScale
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UExcelLoaderTgfConfigExcelFacade::GetScale(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelFacade", "GetScale");

	Params::ExcelLoaderTgfConfigExcelFacade_GetScale Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelFacade.GetShowRedDot
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UExcelLoaderTgfConfigExcelFacade::GetShowRedDot(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelFacade", "GetShowRedDot");

	Params::ExcelLoaderTgfConfigExcelFacade_GetShowRedDot Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelFacade.GetSuitId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelFacade::GetSuitId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelFacade", "GetSuitId");

	Params::ExcelLoaderTgfConfigExcelFacade_GetSuitId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelFacade.GetTipsIcon
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfConfigExcelFacade::GetTipsIcon(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelFacade", "GetTipsIcon");

	Params::ExcelLoaderTgfConfigExcelFacade_GetTipsIcon Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelFacade.GetType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelFacade::GetType(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelFacade", "GetType");

	Params::ExcelLoaderTgfConfigExcelFacade_GetType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelFacade.GetUeSkinIds
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelFacade::GetUeSkinIds(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelFacade", "GetUeSkinIds");

	Params::ExcelLoaderTgfConfigExcelFacade_GetUeSkinIds Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelFacade.GetUeSkinIdsSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelFacade::GetUeSkinIdsSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelFacade", "GetUeSkinIdsSize");

	Params::ExcelLoaderTgfConfigExcelFacade_GetUeSkinIdsSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelFacade.GetUseDescription
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfConfigExcelFacade::GetUseDescription(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelFacade", "GetUseDescription");

	Params::ExcelLoaderTgfConfigExcelFacade_GetUseDescription Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelFacade.GetVideo
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfConfigExcelFacade::GetVideo(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelFacade", "GetVideo");

	Params::ExcelLoaderTgfConfigExcelFacade_GetVideo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelFacade.GetWorthValue
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelFacade::GetWorthValue(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelFacade", "GetWorthValue");

	Params::ExcelLoaderTgfConfigExcelFacade_GetWorthValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelFacade.GetXyz
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDExcelUeXYZ*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDExcelUeXYZ* UExcelLoaderTgfConfigExcelFacade::GetXyz(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelFacade", "GetXyz");

	Params::ExcelLoaderTgfConfigExcelFacade_GetXyz Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixGemSlotRandomData.GetGroupIndex
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDBattleAffixGemSlotRandomData::GetGroupIndex(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixGemSlotRandomData", "GetGroupIndex");

	Params::ExcelLoaderTgfDBattleAffixGemSlotRandomData_GetGroupIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixGemSlotRandomCollectData.GetAllOfRandomData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfDBattleAffixGemSlotRandomData*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfDBattleAffixGemSlotRandomData*> UExcelLoaderTgfDBattleAffixGemSlotRandomCollectData::GetAllOfRandomData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixGemSlotRandomCollectData", "GetAllOfRandomData");

	Params::ExcelLoaderTgfDBattleAffixGemSlotRandomCollectData_GetAllOfRandomData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixGemSlotRandomCollectData.GetRandomData
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAffixGemSlotRandomData*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAffixGemSlotRandomData* UExcelLoaderTgfDBattleAffixGemSlotRandomCollectData::GetRandomData(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixGemSlotRandomCollectData", "GetRandomData");

	Params::ExcelLoaderTgfDBattleAffixGemSlotRandomCollectData_GetRandomData Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixGemSlotRandomCollectData.GetRandomDataSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfDBattleAffixGemSlotRandomCollectData::GetRandomDataSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixGemSlotRandomCollectData", "GetRandomDataSize");

	Params::ExcelLoaderTgfDBattleAffixGemSlotRandomCollectData_GetRandomDataSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelGearDismantle.GetAllOfReward
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfDItemOffset*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfDItemOffset*> UExcelLoaderTgfConfigExcelGearDismantle::GetAllOfReward()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelGearDismantle", "GetAllOfReward");

	Params::ExcelLoaderTgfConfigExcelGearDismantle_GetAllOfReward Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelGearDismantle.GetItemId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelGearDismantle::GetItemId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelGearDismantle", "GetItemId");

	Params::ExcelLoaderTgfConfigExcelGearDismantle_GetItemId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelGearDismantle.GetReward
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDItemOffset*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDItemOffset* UExcelLoaderTgfConfigExcelGearDismantle::GetReward(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelGearDismantle", "GetReward");

	Params::ExcelLoaderTgfConfigExcelGearDismantle_GetReward Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelGearDismantle.GetRewardSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelGearDismantle::GetRewardSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelGearDismantle", "GetRewardSize");

	Params::ExcelLoaderTgfConfigExcelGearDismantle_GetRewardSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixGearSetData.GetLevel
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDBattleAffixGearSetData::GetLevel(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixGearSetData", "GetLevel");

	Params::ExcelLoaderTgfDBattleAffixGearSetData_GetLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixGearSetRandomData.GetGroupIndex
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDBattleAffixGearSetRandomData::GetGroupIndex(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixGearSetRandomData", "GetGroupIndex");

	Params::ExcelLoaderTgfDBattleAffixGearSetRandomData_GetGroupIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixGearSetRandomData.GetRandomLevel
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDBattleAffixGearSetRandomData::GetRandomLevel(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixGearSetRandomData", "GetRandomLevel");

	Params::ExcelLoaderTgfDBattleAffixGearSetRandomData_GetRandomLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelLevelType.GetLevelType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelLevelType::GetLevelType(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelLevelType", "GetLevelType");

	Params::ExcelLoaderTgfConfigExcelLevelType_GetLevelType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelLevelType.GetMatchMakingPoolId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelLevelType::GetMatchMakingPoolId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelLevelType", "GetMatchMakingPoolId");

	Params::ExcelLoaderTgfConfigExcelLevelType_GetMatchMakingPoolId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixGearSetCollectData.GetAllOfLevelData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfDBattleAffixGearSetData*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfDBattleAffixGearSetData*> UExcelLoaderTgfDBattleAffixGearSetCollectData::GetAllOfLevelData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixGearSetCollectData", "GetAllOfLevelData");

	Params::ExcelLoaderTgfDBattleAffixGearSetCollectData_GetAllOfLevelData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixGearSetCollectData.GetLevelData
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAffixGearSetData*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAffixGearSetData* UExcelLoaderTgfDBattleAffixGearSetCollectData::GetLevelData(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixGearSetCollectData", "GetLevelData");

	Params::ExcelLoaderTgfDBattleAffixGearSetCollectData_GetLevelData Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixGearSetCollectData.GetLevelDataSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfDBattleAffixGearSetCollectData::GetLevelDataSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixGearSetCollectData", "GetLevelDataSize");

	Params::ExcelLoaderTgfDBattleAffixGearSetCollectData_GetLevelDataSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixGearSetRandomCollectData.GetAllOfRandomData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfDBattleAffixGearSetRandomData*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfDBattleAffixGearSetRandomData*> UExcelLoaderTgfDBattleAffixGearSetRandomCollectData::GetAllOfRandomData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixGearSetRandomCollectData", "GetAllOfRandomData");

	Params::ExcelLoaderTgfDBattleAffixGearSetRandomCollectData_GetAllOfRandomData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixGearSetRandomCollectData.GetRandomData
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAffixGearSetRandomData*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAffixGearSetRandomData* UExcelLoaderTgfDBattleAffixGearSetRandomCollectData::GetRandomData(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixGearSetRandomCollectData", "GetRandomData");

	Params::ExcelLoaderTgfDBattleAffixGearSetRandomCollectData_GetRandomData Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixGearSetRandomCollectData.GetRandomDataSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfDBattleAffixGearSetRandomCollectData::GetRandomDataSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixGearSetRandomCollectData", "GetRandomDataSize");

	Params::ExcelLoaderTgfDBattleAffixGearSetRandomCollectData_GetRandomDataSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelGearGemGuide.GetAllOfUnlockCost
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfDItemOffset*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfDItemOffset*> UExcelLoaderTgfConfigExcelGearGemGuide::GetAllOfUnlockCost()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelGearGemGuide", "GetAllOfUnlockCost");

	Params::ExcelLoaderTgfConfigExcelGearGemGuide_GetAllOfUnlockCost Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelGearGemGuide.GetAllOfUnlockCosts
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfDConfigCostItem*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfDConfigCostItem*> UExcelLoaderTgfConfigExcelGearGemGuide::GetAllOfUnlockCosts()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelGearGemGuide", "GetAllOfUnlockCosts");

	Params::ExcelLoaderTgfConfigExcelGearGemGuide_GetAllOfUnlockCosts Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelGearGemGuide.GetId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelGearGemGuide::GetId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelGearGemGuide", "GetId");

	Params::ExcelLoaderTgfConfigExcelGearGemGuide_GetId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelGearGemGuide.GetInstId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelGearGemGuide::GetInstId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelGearGemGuide", "GetInstId");

	Params::ExcelLoaderTgfConfigExcelGearGemGuide_GetInstId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelGearGemGuide.GetNameText
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfConfigExcelGearGemGuide::GetNameText(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelGearGemGuide", "GetNameText");

	Params::ExcelLoaderTgfConfigExcelGearGemGuide_GetNameText Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelGearGemGuide.GetSortPriority
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelGearGemGuide::GetSortPriority(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelGearGemGuide", "GetSortPriority");

	Params::ExcelLoaderTgfConfigExcelGearGemGuide_GetSortPriority Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelGearGemGuide.GetUnlockConditionText
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfConfigExcelGearGemGuide::GetUnlockConditionText(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelGearGemGuide", "GetUnlockConditionText");

	Params::ExcelLoaderTgfConfigExcelGearGemGuide_GetUnlockConditionText Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelGearGemGuide.GetUnlockCost
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDItemOffset*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDItemOffset* UExcelLoaderTgfConfigExcelGearGemGuide::GetUnlockCost(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelGearGemGuide", "GetUnlockCost");

	Params::ExcelLoaderTgfConfigExcelGearGemGuide_GetUnlockCost Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelGearGemGuide.GetUnlockCosts
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDConfigCostItem*   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDConfigCostItem* UExcelLoaderTgfConfigExcelGearGemGuide::GetUnlockCosts(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelGearGemGuide", "GetUnlockCosts");

	Params::ExcelLoaderTgfConfigExcelGearGemGuide_GetUnlockCosts Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelGearGemGuide.GetUnlockCostSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelGearGemGuide::GetUnlockCostSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelGearGemGuide", "GetUnlockCostSize");

	Params::ExcelLoaderTgfConfigExcelGearGemGuide_GetUnlockCostSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelGearGemGuide.GetUnlockCostsSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelGearGemGuide::GetUnlockCostsSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelGearGemGuide", "GetUnlockCostsSize");

	Params::ExcelLoaderTgfConfigExcelGearGemGuide_GetUnlockCostsSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixRandomData.FindAbilitySetRandom
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAffixAbilityRandomCollectData*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAffixAbilityRandomCollectData* UExcelLoaderTgfDBattleAffixRandomData::FindAbilitySetRandom(int32 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixRandomData", "FindAbilitySetRandom");

	Params::ExcelLoaderTgfDBattleAffixRandomData_FindAbilitySetRandom Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixRandomData.FindAttributeRandom
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAffixAttributeRandomValueCollectData*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAffixAttributeRandomValueCollectData* UExcelLoaderTgfDBattleAffixRandomData::FindAttributeRandom(int32 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixRandomData", "FindAttributeRandom");

	Params::ExcelLoaderTgfDBattleAffixRandomData_FindAttributeRandom Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixRandomData.FindGearSetRandom
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAffixGearSetRandomCollectData*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAffixGearSetRandomCollectData* UExcelLoaderTgfDBattleAffixRandomData::FindGearSetRandom(int32 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixRandomData", "FindGearSetRandom");

	Params::ExcelLoaderTgfDBattleAffixRandomData_FindGearSetRandom Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixRandomData.FindGemSlotRandom
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAffixGemSlotRandomCollectData*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAffixGemSlotRandomCollectData* UExcelLoaderTgfDBattleAffixRandomData::FindGemSlotRandom(int32 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixRandomData", "FindGemSlotRandom");

	Params::ExcelLoaderTgfDBattleAffixRandomData_FindGemSlotRandom Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixRandomData.GetAbilitySetRandomSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfDBattleAffixRandomData::GetAbilitySetRandomSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixRandomData", "GetAbilitySetRandomSize");

	Params::ExcelLoaderTgfDBattleAffixRandomData_GetAbilitySetRandomSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixRandomData.GetAffixType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDBattleAffixRandomData::GetAffixType(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixRandomData", "GetAffixType");

	Params::ExcelLoaderTgfDBattleAffixRandomData_GetAffixType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixRandomData.GetAllOfAbilitySetRandom
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfDBattleAffixRandomDataAbilitySetRandomEntry*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfDBattleAffixRandomDataAbilitySetRandomEntry*> UExcelLoaderTgfDBattleAffixRandomData::GetAllOfAbilitySetRandom()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixRandomData", "GetAllOfAbilitySetRandom");

	Params::ExcelLoaderTgfDBattleAffixRandomData_GetAllOfAbilitySetRandom Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixRandomData.GetAllOfAttributeRandom
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfDBattleAffixRandomDataAttributeRandomEntry*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfDBattleAffixRandomDataAttributeRandomEntry*> UExcelLoaderTgfDBattleAffixRandomData::GetAllOfAttributeRandom()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixRandomData", "GetAllOfAttributeRandom");

	Params::ExcelLoaderTgfDBattleAffixRandomData_GetAllOfAttributeRandom Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixRandomData.GetAllOfGearSetRandom
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfDBattleAffixRandomDataGearSetRandomEntry*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfDBattleAffixRandomDataGearSetRandomEntry*> UExcelLoaderTgfDBattleAffixRandomData::GetAllOfGearSetRandom()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixRandomData", "GetAllOfGearSetRandom");

	Params::ExcelLoaderTgfDBattleAffixRandomData_GetAllOfGearSetRandom Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixRandomData.GetAllOfGemSlotRandom
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfDBattleAffixRandomDataGemSlotRandomEntry*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfDBattleAffixRandomDataGemSlotRandomEntry*> UExcelLoaderTgfDBattleAffixRandomData::GetAllOfGemSlotRandom()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixRandomData", "GetAllOfGemSlotRandom");

	Params::ExcelLoaderTgfDBattleAffixRandomData_GetAllOfGemSlotRandom Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixRandomData.GetAttributeRandomSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfDBattleAffixRandomData::GetAttributeRandomSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixRandomData", "GetAttributeRandomSize");

	Params::ExcelLoaderTgfDBattleAffixRandomData_GetAttributeRandomSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixRandomData.GetGearSetRandomSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfDBattleAffixRandomData::GetGearSetRandomSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixRandomData", "GetGearSetRandomSize");

	Params::ExcelLoaderTgfDBattleAffixRandomData_GetGearSetRandomSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixRandomData.GetGemSlotRandomSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfDBattleAffixRandomData::GetGemSlotRandomSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixRandomData", "GetGemSlotRandomSize");

	Params::ExcelLoaderTgfDBattleAffixRandomData_GetGemSlotRandomSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixRandomData.GetLocation
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDBattleAffixRandomData::GetLocation(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixRandomData", "GetLocation");

	Params::ExcelLoaderTgfDBattleAffixRandomData_GetLocation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixRandomDataAttributeRandomEntry.GetKey
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDBattleAffixRandomDataAttributeRandomEntry::GetKey(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixRandomDataAttributeRandomEntry", "GetKey");

	Params::ExcelLoaderTgfDBattleAffixRandomDataAttributeRandomEntry_GetKey Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixRandomDataAttributeRandomEntry.GetValue
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAffixAttributeRandomValueCollectData*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAffixAttributeRandomValueCollectData* UExcelLoaderTgfDBattleAffixRandomDataAttributeRandomEntry::GetValue(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixRandomDataAttributeRandomEntry", "GetValue");

	Params::ExcelLoaderTgfDBattleAffixRandomDataAttributeRandomEntry_GetValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigUeSourceEquipment.GetAllOfGearConfigs
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigEquipmentGearConfig*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigEquipmentGearConfig*> UExcelLoaderTgfConfigUeSourceEquipment::GetAllOfGearConfigs()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigUeSourceEquipment", "GetAllOfGearConfigs");

	Params::ExcelLoaderTgfConfigUeSourceEquipment_GetAllOfGearConfigs Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigUeSourceEquipment.GetAllOfWeaponConfigs
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigEquipmentWeaponConfig*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigEquipmentWeaponConfig*> UExcelLoaderTgfConfigUeSourceEquipment::GetAllOfWeaponConfigs()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigUeSourceEquipment", "GetAllOfWeaponConfigs");

	Params::ExcelLoaderTgfConfigUeSourceEquipment_GetAllOfWeaponConfigs Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigUeSourceEquipment.GetEquipId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigUeSourceEquipment::GetEquipId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigUeSourceEquipment", "GetEquipId");

	Params::ExcelLoaderTgfConfigUeSourceEquipment_GetEquipId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigUeSourceEquipment.GetEquipmentType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigUeSourceEquipment::GetEquipmentType(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigUeSourceEquipment", "GetEquipmentType");

	Params::ExcelLoaderTgfConfigUeSourceEquipment_GetEquipmentType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigUeSourceEquipment.GetEquipSubtype
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigUeSourceEquipment::GetEquipSubtype(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigUeSourceEquipment", "GetEquipSubtype");

	Params::ExcelLoaderTgfConfigUeSourceEquipment_GetEquipSubtype Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigUeSourceEquipment.GetGearConfigs
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigEquipmentGearConfig*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigEquipmentGearConfig* UExcelLoaderTgfConfigUeSourceEquipment::GetGearConfigs(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigUeSourceEquipment", "GetGearConfigs");

	Params::ExcelLoaderTgfConfigUeSourceEquipment_GetGearConfigs Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigUeSourceEquipment.GetGearConfigsSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigUeSourceEquipment::GetGearConfigsSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigUeSourceEquipment", "GetGearConfigsSize");

	Params::ExcelLoaderTgfConfigUeSourceEquipment_GetGearConfigsSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigUeSourceEquipment.GetUePath
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfConfigUeSourceEquipment::GetUePath(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigUeSourceEquipment", "GetUePath");

	Params::ExcelLoaderTgfConfigUeSourceEquipment_GetUePath Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigUeSourceEquipment.GetWeaponConfigs
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigEquipmentWeaponConfig*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigEquipmentWeaponConfig* UExcelLoaderTgfConfigUeSourceEquipment::GetWeaponConfigs(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigUeSourceEquipment", "GetWeaponConfigs");

	Params::ExcelLoaderTgfConfigUeSourceEquipment_GetWeaponConfigs Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigUeSourceEquipment.GetWeaponConfigsSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigUeSourceEquipment::GetWeaponConfigsSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigUeSourceEquipment", "GetWeaponConfigsSize");

	Params::ExcelLoaderTgfConfigUeSourceEquipment_GetWeaponConfigsSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixRandomDataAbilitySetRandomEntry.GetKey
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDBattleAffixRandomDataAbilitySetRandomEntry::GetKey(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixRandomDataAbilitySetRandomEntry", "GetKey");

	Params::ExcelLoaderTgfDBattleAffixRandomDataAbilitySetRandomEntry_GetKey Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixRandomDataAbilitySetRandomEntry.GetValue
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAffixAbilityRandomCollectData*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAffixAbilityRandomCollectData* UExcelLoaderTgfDBattleAffixRandomDataAbilitySetRandomEntry::GetValue(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixRandomDataAbilitySetRandomEntry", "GetValue");

	Params::ExcelLoaderTgfDBattleAffixRandomDataAbilitySetRandomEntry_GetValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixRandomDataGemSlotRandomEntry.GetKey
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDBattleAffixRandomDataGemSlotRandomEntry::GetKey(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixRandomDataGemSlotRandomEntry", "GetKey");

	Params::ExcelLoaderTgfDBattleAffixRandomDataGemSlotRandomEntry_GetKey Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixRandomDataGemSlotRandomEntry.GetValue
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAffixGemSlotRandomCollectData*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAffixGemSlotRandomCollectData* UExcelLoaderTgfDBattleAffixRandomDataGemSlotRandomEntry::GetValue(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixRandomDataGemSlotRandomEntry", "GetValue");

	Params::ExcelLoaderTgfDBattleAffixRandomDataGemSlotRandomEntry_GetValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDTrialDisplayerCond.GetFailedCount
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDTrialDisplayerCond::GetFailedCount(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDTrialDisplayerCond", "GetFailedCount");

	Params::ExcelLoaderTgfDTrialDisplayerCond_GetFailedCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDTrialDisplayerCond.GetWinCount
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDTrialDisplayerCond::GetWinCount(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDTrialDisplayerCond", "GetWinCount");

	Params::ExcelLoaderTgfDTrialDisplayerCond_GetWinCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixRandomDataGearSetRandomEntry.GetKey
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDBattleAffixRandomDataGearSetRandomEntry::GetKey(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixRandomDataGearSetRandomEntry", "GetKey");

	Params::ExcelLoaderTgfDBattleAffixRandomDataGearSetRandomEntry_GetKey Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixRandomDataGearSetRandomEntry.GetValue
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAffixGearSetRandomCollectData*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAffixGearSetRandomCollectData* UExcelLoaderTgfDBattleAffixRandomDataGearSetRandomEntry::GetValue(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixRandomDataGearSetRandomEntry", "GetValue");

	Params::ExcelLoaderTgfDBattleAffixRandomDataGearSetRandomEntry_GetValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixData.FindAbilitySet
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAffixAbilityCollectData*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAffixAbilityCollectData* UExcelLoaderTgfDBattleAffixData::FindAbilitySet(int32 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixData", "FindAbilitySet");

	Params::ExcelLoaderTgfDBattleAffixData_FindAbilitySet Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixData.FindAttribute
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAffixAttributeValueCollectData*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAffixAttributeValueCollectData* UExcelLoaderTgfDBattleAffixData::FindAttribute(int32 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixData", "FindAttribute");

	Params::ExcelLoaderTgfDBattleAffixData_FindAttribute Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixData.FindGearSet
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAffixGearSetCollectData*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAffixGearSetCollectData* UExcelLoaderTgfDBattleAffixData::FindGearSet(int32 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixData", "FindGearSet");

	Params::ExcelLoaderTgfDBattleAffixData_FindGearSet Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixData.GetAbilitySetSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfDBattleAffixData::GetAbilitySetSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixData", "GetAbilitySetSize");

	Params::ExcelLoaderTgfDBattleAffixData_GetAbilitySetSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixData.GetAffixType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDBattleAffixData::GetAffixType(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixData", "GetAffixType");

	Params::ExcelLoaderTgfDBattleAffixData_GetAffixType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixData.GetAllOfAbilitySet
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfDBattleAffixDataAbilitySetEntry*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfDBattleAffixDataAbilitySetEntry*> UExcelLoaderTgfDBattleAffixData::GetAllOfAbilitySet()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixData", "GetAllOfAbilitySet");

	Params::ExcelLoaderTgfDBattleAffixData_GetAllOfAbilitySet Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixData.GetAllOfAttribute
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfDBattleAffixDataAttributeEntry*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfDBattleAffixDataAttributeEntry*> UExcelLoaderTgfDBattleAffixData::GetAllOfAttribute()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixData", "GetAllOfAttribute");

	Params::ExcelLoaderTgfDBattleAffixData_GetAllOfAttribute Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixData.GetAllOfGearSet
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfDBattleAffixDataGearSetEntry*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfDBattleAffixDataGearSetEntry*> UExcelLoaderTgfDBattleAffixData::GetAllOfGearSet()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixData", "GetAllOfGearSet");

	Params::ExcelLoaderTgfDBattleAffixData_GetAllOfGearSet Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixData.GetAttributeSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfDBattleAffixData::GetAttributeSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixData", "GetAttributeSize");

	Params::ExcelLoaderTgfDBattleAffixData_GetAttributeSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixData.GetGearSetSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfDBattleAffixData::GetGearSetSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixData", "GetGearSetSize");

	Params::ExcelLoaderTgfDBattleAffixData_GetGearSetSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixData.GetLocation
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDBattleAffixData::GetLocation(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixData", "GetLocation");

	Params::ExcelLoaderTgfDBattleAffixData_GetLocation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfBattleAttributeConversion.GetAllOfEquipTypeAttribute
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfBattleAttributeConversionEquipType*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfBattleAttributeConversionEquipType*> UExcelLoaderTgfBattleAttributeConversion::GetAllOfEquipTypeAttribute()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfBattleAttributeConversion", "GetAllOfEquipTypeAttribute");

	Params::ExcelLoaderTgfBattleAttributeConversion_GetAllOfEquipTypeAttribute Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfBattleAttributeConversion.GetAllOfNoramlAttribute
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> UExcelLoaderTgfBattleAttributeConversion::GetAllOfNoramlAttribute()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfBattleAttributeConversion", "GetAllOfNoramlAttribute");

	Params::ExcelLoaderTgfBattleAttributeConversion_GetAllOfNoramlAttribute Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfBattleAttributeConversion.GetEquipTypeAttribute
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfBattleAttributeConversionEquipType*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfBattleAttributeConversionEquipType* UExcelLoaderTgfBattleAttributeConversion::GetEquipTypeAttribute(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfBattleAttributeConversion", "GetEquipTypeAttribute");

	Params::ExcelLoaderTgfBattleAttributeConversion_GetEquipTypeAttribute Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfBattleAttributeConversion.GetEquipTypeAttributeSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfBattleAttributeConversion::GetEquipTypeAttributeSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfBattleAttributeConversion", "GetEquipTypeAttributeSize");

	Params::ExcelLoaderTgfBattleAttributeConversion_GetEquipTypeAttributeSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfBattleAttributeConversion.GetNoramlAttribute
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfBattleAttributeConversion::GetNoramlAttribute(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfBattleAttributeConversion", "GetNoramlAttribute");

	Params::ExcelLoaderTgfBattleAttributeConversion_GetNoramlAttribute Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfBattleAttributeConversion.GetNoramlAttributeSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfBattleAttributeConversion::GetNoramlAttributeSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfBattleAttributeConversion", "GetNoramlAttributeSize");

	Params::ExcelLoaderTgfBattleAttributeConversion_GetNoramlAttributeSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixDataAttributeEntry.GetKey
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDBattleAffixDataAttributeEntry::GetKey(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixDataAttributeEntry", "GetKey");

	Params::ExcelLoaderTgfDBattleAffixDataAttributeEntry_GetKey Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixDataAttributeEntry.GetValue
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAffixAttributeValueCollectData*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAffixAttributeValueCollectData* UExcelLoaderTgfDBattleAffixDataAttributeEntry::GetValue(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixDataAttributeEntry", "GetValue");

	Params::ExcelLoaderTgfDBattleAffixDataAttributeEntry_GetValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixDataAbilitySetEntry.GetKey
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDBattleAffixDataAbilitySetEntry::GetKey(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixDataAbilitySetEntry", "GetKey");

	Params::ExcelLoaderTgfDBattleAffixDataAbilitySetEntry_GetKey Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixDataAbilitySetEntry.GetValue
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAffixAbilityCollectData*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAffixAbilityCollectData* UExcelLoaderTgfDBattleAffixDataAbilitySetEntry::GetValue(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixDataAbilitySetEntry", "GetValue");

	Params::ExcelLoaderTgfDBattleAffixDataAbilitySetEntry_GetValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMarketPoorMan.GetAllOfPoormanDiscountProductIds
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UExcelLoaderTgfConfigExcelMarketPoorMan::GetAllOfPoormanDiscountProductIds()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMarketPoorMan", "GetAllOfPoormanDiscountProductIds");

	Params::ExcelLoaderTgfConfigExcelMarketPoorMan_GetAllOfPoormanDiscountProductIds Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMarketPoorMan.GetPoormanDiscountProductIds
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelMarketPoorMan::GetPoormanDiscountProductIds(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMarketPoorMan", "GetPoormanDiscountProductIds");

	Params::ExcelLoaderTgfConfigExcelMarketPoorMan_GetPoormanDiscountProductIds Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMarketPoorMan.GetPoormanDiscountProductIdsSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelMarketPoorMan::GetPoormanDiscountProductIdsSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMarketPoorMan", "GetPoormanDiscountProductIdsSize");

	Params::ExcelLoaderTgfConfigExcelMarketPoorMan_GetPoormanDiscountProductIdsSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMarketPoorMan.GetRoleTypeId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelMarketPoorMan::GetRoleTypeId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMarketPoorMan", "GetRoleTypeId");

	Params::ExcelLoaderTgfConfigExcelMarketPoorMan_GetRoleTypeId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixDataGearSetEntry.GetKey
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDBattleAffixDataGearSetEntry::GetKey(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixDataGearSetEntry", "GetKey");

	Params::ExcelLoaderTgfDBattleAffixDataGearSetEntry_GetKey Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixDataGearSetEntry.GetValue
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAffixGearSetCollectData*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAffixGearSetCollectData* UExcelLoaderTgfDBattleAffixDataGearSetEntry::GetValue(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixDataGearSetEntry", "GetValue");

	Params::ExcelLoaderTgfDBattleAffixDataGearSetEntry_GetValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixAppendData.FindAbilitySet
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAffixAbilityCollectData*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAffixAbilityCollectData* UExcelLoaderTgfDBattleAffixAppendData::FindAbilitySet(int32 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixAppendData", "FindAbilitySet");

	Params::ExcelLoaderTgfDBattleAffixAppendData_FindAbilitySet Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixAppendData.FindAttribute
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UExcelLoaderTgfDBattleAffixAppendData::FindAttribute(int32 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixAppendData", "FindAttribute");

	Params::ExcelLoaderTgfDBattleAffixAppendData_FindAttribute Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixAppendData.FindGearSet
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDBattleAffixAppendData::FindGearSet(int32 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixAppendData", "FindGearSet");

	Params::ExcelLoaderTgfDBattleAffixAppendData_FindGearSet Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixAppendData.GetAbilitySetSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfDBattleAffixAppendData::GetAbilitySetSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixAppendData", "GetAbilitySetSize");

	Params::ExcelLoaderTgfDBattleAffixAppendData_GetAbilitySetSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixAppendData.GetAllOfAbilitySet
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfDBattleAffixAppendDataAbilitySetEntry*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfDBattleAffixAppendDataAbilitySetEntry*> UExcelLoaderTgfDBattleAffixAppendData::GetAllOfAbilitySet()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixAppendData", "GetAllOfAbilitySet");

	Params::ExcelLoaderTgfDBattleAffixAppendData_GetAllOfAbilitySet Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixAppendData.GetAllOfAttribute
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfDBattleAffixAppendDataAttributeEntry*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfDBattleAffixAppendDataAttributeEntry*> UExcelLoaderTgfDBattleAffixAppendData::GetAllOfAttribute()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixAppendData", "GetAllOfAttribute");

	Params::ExcelLoaderTgfDBattleAffixAppendData_GetAllOfAttribute Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixAppendData.GetAllOfGearSet
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfDBattleAffixAppendDataGearSetEntry*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfDBattleAffixAppendDataGearSetEntry*> UExcelLoaderTgfDBattleAffixAppendData::GetAllOfGearSet()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixAppendData", "GetAllOfGearSet");

	Params::ExcelLoaderTgfDBattleAffixAppendData_GetAllOfGearSet Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixAppendData.GetAttributeSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfDBattleAffixAppendData::GetAttributeSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixAppendData", "GetAttributeSize");

	Params::ExcelLoaderTgfDBattleAffixAppendData_GetAttributeSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixAppendData.GetGearSetSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfDBattleAffixAppendData::GetGearSetSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixAppendData", "GetGearSetSize");

	Params::ExcelLoaderTgfDBattleAffixAppendData_GetGearSetSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelGearSoulBoundWearPartRandom.GetGroupId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelGearSoulBoundWearPartRandom::GetGroupId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelGearSoulBoundWearPartRandom", "GetGroupId");

	Params::ExcelLoaderTgfConfigExcelGearSoulBoundWearPartRandom_GetGroupId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelGearSoulBoundWearPartRandom.GetWearPart
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelGearSoulBoundWearPartRandom::GetWearPart(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelGearSoulBoundWearPartRandom", "GetWearPart");

	Params::ExcelLoaderTgfConfigExcelGearSoulBoundWearPartRandom_GetWearPart Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixAppendDataAttributeEntry.GetKey
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDBattleAffixAppendDataAttributeEntry::GetKey(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixAppendDataAttributeEntry", "GetKey");

	Params::ExcelLoaderTgfDBattleAffixAppendDataAttributeEntry_GetKey Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixAppendDataAttributeEntry.GetValue
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UExcelLoaderTgfDBattleAffixAppendDataAttributeEntry::GetValue(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixAppendDataAttributeEntry", "GetValue");

	Params::ExcelLoaderTgfDBattleAffixAppendDataAttributeEntry_GetValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixAppendDataAbilitySetEntry.GetKey
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDBattleAffixAppendDataAbilitySetEntry::GetKey(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixAppendDataAbilitySetEntry", "GetKey");

	Params::ExcelLoaderTgfDBattleAffixAppendDataAbilitySetEntry_GetKey Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixAppendDataAbilitySetEntry.GetValue
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAffixAbilityCollectData*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAffixAbilityCollectData* UExcelLoaderTgfDBattleAffixAppendDataAbilitySetEntry::GetValue(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixAppendDataAbilitySetEntry", "GetValue");

	Params::ExcelLoaderTgfDBattleAffixAppendDataAbilitySetEntry_GetValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigDMatchingRuleItem.GetAllOfValues
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UExcelLoaderTgfConfigDMatchingRuleItem::GetAllOfValues()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigDMatchingRuleItem", "GetAllOfValues");

	Params::ExcelLoaderTgfConfigDMatchingRuleItem_GetAllOfValues Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigDMatchingRuleItem.GetType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigDMatchingRuleItem::GetType(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigDMatchingRuleItem", "GetType");

	Params::ExcelLoaderTgfConfigDMatchingRuleItem_GetType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigDMatchingRuleItem.GetValues
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigDMatchingRuleItem::GetValues(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigDMatchingRuleItem", "GetValues");

	Params::ExcelLoaderTgfConfigDMatchingRuleItem_GetValues Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigDMatchingRuleItem.GetValuesSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigDMatchingRuleItem::GetValuesSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigDMatchingRuleItem", "GetValuesSize");

	Params::ExcelLoaderTgfConfigDMatchingRuleItem_GetValuesSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixAppendDataGearSetEntry.GetKey
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDBattleAffixAppendDataGearSetEntry::GetKey(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixAppendDataGearSetEntry", "GetKey");

	Params::ExcelLoaderTgfDBattleAffixAppendDataGearSetEntry_GetKey Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixAppendDataGearSetEntry.GetValue
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDBattleAffixAppendDataGearSetEntry::GetValue(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixAppendDataGearSetEntry", "GetValue");

	Params::ExcelLoaderTgfDBattleAffixAppendDataGearSetEntry_GetValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixDisplayDataRandomInt.GetCurrentValue
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDBattleAffixDisplayDataRandomInt::GetCurrentValue(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixDisplayDataRandomInt", "GetCurrentValue");

	Params::ExcelLoaderTgfDBattleAffixDisplayDataRandomInt_GetCurrentValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixDisplayDataRandomInt.GetRandomValueMax
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDBattleAffixDisplayDataRandomInt::GetRandomValueMax(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixDisplayDataRandomInt", "GetRandomValueMax");

	Params::ExcelLoaderTgfDBattleAffixDisplayDataRandomInt_GetRandomValueMax Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixDisplayDataRandomInt.GetRandomValueMin
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDBattleAffixDisplayDataRandomInt::GetRandomValueMin(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixDisplayDataRandomInt", "GetRandomValueMin");

	Params::ExcelLoaderTgfDBattleAffixDisplayDataRandomInt_GetRandomValueMin Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixDisplayDataRandomFloat.GetCurrentValue
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UExcelLoaderTgfDBattleAffixDisplayDataRandomFloat::GetCurrentValue(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixDisplayDataRandomFloat", "GetCurrentValue");

	Params::ExcelLoaderTgfDBattleAffixDisplayDataRandomFloat_GetCurrentValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixDisplayDataRandomFloat.GetRandomValueMax
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UExcelLoaderTgfDBattleAffixDisplayDataRandomFloat::GetRandomValueMax(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixDisplayDataRandomFloat", "GetRandomValueMax");

	Params::ExcelLoaderTgfDBattleAffixDisplayDataRandomFloat_GetRandomValueMax Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixDisplayDataRandomFloat.GetRandomValueMin
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UExcelLoaderTgfDBattleAffixDisplayDataRandomFloat::GetRandomValueMin(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixDisplayDataRandomFloat", "GetRandomValueMin");

	Params::ExcelLoaderTgfDBattleAffixDisplayDataRandomFloat_GetRandomValueMin Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixDisplayDataAbilitySet.GetDisplayOrder
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDBattleAffixDisplayDataAbilitySet::GetDisplayOrder(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixDisplayDataAbilitySet", "GetDisplayOrder");

	Params::ExcelLoaderTgfDBattleAffixDisplayDataAbilitySet_GetDisplayOrder Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixDisplayDataAbilitySet.GetFixed
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDBattleAffixDisplayDataAbilitySet::GetFixed(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixDisplayDataAbilitySet", "GetFixed");

	Params::ExcelLoaderTgfDBattleAffixDisplayDataAbilitySet_GetFixed Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixDisplayDataAbilitySet.GetGroupOrder
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDBattleAffixDisplayDataAbilitySet::GetGroupOrder(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixDisplayDataAbilitySet", "GetGroupOrder");

	Params::ExcelLoaderTgfDBattleAffixDisplayDataAbilitySet_GetGroupOrder Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixDisplayDataAbilitySet.GetId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDBattleAffixDisplayDataAbilitySet::GetId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixDisplayDataAbilitySet", "GetId");

	Params::ExcelLoaderTgfDBattleAffixDisplayDataAbilitySet_GetId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixDisplayDataAbilitySet.GetInit
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UExcelLoaderTgfDBattleAffixDisplayDataAbilitySet::GetInit(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixDisplayDataAbilitySet", "GetInit");

	Params::ExcelLoaderTgfDBattleAffixDisplayDataAbilitySet_GetInit Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixDisplayDataAbilitySet.GetName
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfDBattleAffixDisplayDataAbilitySet::GetName(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixDisplayDataAbilitySet", "GetName");

	Params::ExcelLoaderTgfDBattleAffixDisplayDataAbilitySet_GetName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixDisplayDataAbilitySet.GetRandom
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAffixDisplayDataRandomInt*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAffixDisplayDataRandomInt* UExcelLoaderTgfDBattleAffixDisplayDataAbilitySet::GetRandom(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixDisplayDataAbilitySet", "GetRandom");

	Params::ExcelLoaderTgfDBattleAffixDisplayDataAbilitySet_GetRandom Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixDisplayDataAbilitySet.GetRoleDisplayOrder
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDBattleAffixDisplayDataAbilitySet::GetRoleDisplayOrder(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixDisplayDataAbilitySet", "GetRoleDisplayOrder");

	Params::ExcelLoaderTgfDBattleAffixDisplayDataAbilitySet_GetRoleDisplayOrder Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixDisplayDataAbilitySet.GetValueCase
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EExcelLoaderTgfDBattleAffixDisplayDataAbilitySetValueReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EExcelLoaderTgfDBattleAffixDisplayDataAbilitySetValue UExcelLoaderTgfDBattleAffixDisplayDataAbilitySet::GetValueCase()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixDisplayDataAbilitySet", "GetValueCase");

	Params::ExcelLoaderTgfDBattleAffixDisplayDataAbilitySet_GetValueCase Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMatchingRuleGroup.GetAllOfPoolRules
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UExcelLoaderTgfConfigExcelMatchingRuleGroup::GetAllOfPoolRules()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMatchingRuleGroup", "GetAllOfPoolRules");

	Params::ExcelLoaderTgfConfigExcelMatchingRuleGroup_GetAllOfPoolRules Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMatchingRuleGroup.GetGlobalUesrUpper
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelMatchingRuleGroup::GetGlobalUesrUpper(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMatchingRuleGroup", "GetGlobalUesrUpper");

	Params::ExcelLoaderTgfConfigExcelMatchingRuleGroup_GetGlobalUesrUpper Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMatchingRuleGroup.GetGlobalUserLower
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelMatchingRuleGroup::GetGlobalUserLower(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMatchingRuleGroup", "GetGlobalUserLower");

	Params::ExcelLoaderTgfConfigExcelMatchingRuleGroup_GetGlobalUserLower Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMatchingRuleGroup.GetGroupId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelMatchingRuleGroup::GetGroupId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMatchingRuleGroup", "GetGroupId");

	Params::ExcelLoaderTgfConfigExcelMatchingRuleGroup_GetGroupId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMatchingRuleGroup.GetPoolRules
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelMatchingRuleGroup::GetPoolRules(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMatchingRuleGroup", "GetPoolRules");

	Params::ExcelLoaderTgfConfigExcelMatchingRuleGroup_GetPoolRules Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMatchingRuleGroup.GetPoolRulesSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelMatchingRuleGroup::GetPoolRulesSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMatchingRuleGroup", "GetPoolRulesSize");

	Params::ExcelLoaderTgfConfigExcelMatchingRuleGroup_GetPoolRulesSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixDisplayDataAttribute.GetDisplayOrder
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDBattleAffixDisplayDataAttribute::GetDisplayOrder(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixDisplayDataAttribute", "GetDisplayOrder");

	Params::ExcelLoaderTgfDBattleAffixDisplayDataAttribute_GetDisplayOrder Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixDisplayDataAttribute.GetDisplayPercentage
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UExcelLoaderTgfDBattleAffixDisplayDataAttribute::GetDisplayPercentage(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixDisplayDataAttribute", "GetDisplayPercentage");

	Params::ExcelLoaderTgfDBattleAffixDisplayDataAttribute_GetDisplayPercentage Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixDisplayDataAttribute.GetFixed
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UExcelLoaderTgfDBattleAffixDisplayDataAttribute::GetFixed(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixDisplayDataAttribute", "GetFixed");

	Params::ExcelLoaderTgfDBattleAffixDisplayDataAttribute_GetFixed Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixDisplayDataAttribute.GetGroupOrder
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDBattleAffixDisplayDataAttribute::GetGroupOrder(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixDisplayDataAttribute", "GetGroupOrder");

	Params::ExcelLoaderTgfDBattleAffixDisplayDataAttribute_GetGroupOrder Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixDisplayDataAttribute.GetId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDBattleAffixDisplayDataAttribute::GetId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixDisplayDataAttribute", "GetId");

	Params::ExcelLoaderTgfDBattleAffixDisplayDataAttribute_GetId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixDisplayDataAttribute.GetInit
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UExcelLoaderTgfDBattleAffixDisplayDataAttribute::GetInit(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixDisplayDataAttribute", "GetInit");

	Params::ExcelLoaderTgfDBattleAffixDisplayDataAttribute_GetInit Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixDisplayDataAttribute.GetIsCorruption
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UExcelLoaderTgfDBattleAffixDisplayDataAttribute::GetIsCorruption(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixDisplayDataAttribute", "GetIsCorruption");

	Params::ExcelLoaderTgfDBattleAffixDisplayDataAttribute_GetIsCorruption Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixDisplayDataAttribute.GetName
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfDBattleAffixDisplayDataAttribute::GetName(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixDisplayDataAttribute", "GetName");

	Params::ExcelLoaderTgfDBattleAffixDisplayDataAttribute_GetName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixDisplayDataAttribute.GetRandom
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAffixDisplayDataRandomFloat*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAffixDisplayDataRandomFloat* UExcelLoaderTgfDBattleAffixDisplayDataAttribute::GetRandom(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixDisplayDataAttribute", "GetRandom");

	Params::ExcelLoaderTgfDBattleAffixDisplayDataAttribute_GetRandom Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixDisplayDataAttribute.GetRoleDisplayOrder
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDBattleAffixDisplayDataAttribute::GetRoleDisplayOrder(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixDisplayDataAttribute", "GetRoleDisplayOrder");

	Params::ExcelLoaderTgfDBattleAffixDisplayDataAttribute_GetRoleDisplayOrder Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixDisplayDataAttribute.GetValueCase
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EExcelLoaderTgfDBattleAffixDisplayDataAttributeValueReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EExcelLoaderTgfDBattleAffixDisplayDataAttributeValue UExcelLoaderTgfDBattleAffixDisplayDataAttribute::GetValueCase()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixDisplayDataAttribute", "GetValueCase");

	Params::ExcelLoaderTgfDBattleAffixDisplayDataAttribute_GetValueCase Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixDisplayDataMinorAffixDefaultRule.GetGroupOrder
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDBattleAffixDisplayDataMinorAffixDefaultRule::GetGroupOrder(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixDisplayDataMinorAffixDefaultRule", "GetGroupOrder");

	Params::ExcelLoaderTgfDBattleAffixDisplayDataMinorAffixDefaultRule_GetGroupOrder Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixDisplayDataMinorAffixDefaultRule.GetInit
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UExcelLoaderTgfDBattleAffixDisplayDataMinorAffixDefaultRule::GetInit(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixDisplayDataMinorAffixDefaultRule", "GetInit");

	Params::ExcelLoaderTgfDBattleAffixDisplayDataMinorAffixDefaultRule_GetInit Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixDisplayDataMinorAffixDefaultRule.GetText
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfDBattleAffixDisplayDataMinorAffixDefaultRule::GetText(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixDisplayDataMinorAffixDefaultRule", "GetText");

	Params::ExcelLoaderTgfDBattleAffixDisplayDataMinorAffixDefaultRule_GetText Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelImmaculateTrialGrade.GetActivityRuleId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelImmaculateTrialGrade::GetActivityRuleId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelImmaculateTrialGrade", "GetActivityRuleId");

	Params::ExcelLoaderTgfConfigExcelImmaculateTrialGrade_GetActivityRuleId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelImmaculateTrialGrade.GetAllOfFirstRewards
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfDItemOffset*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfDItemOffset*> UExcelLoaderTgfConfigExcelImmaculateTrialGrade::GetAllOfFirstRewards()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelImmaculateTrialGrade", "GetAllOfFirstRewards");

	Params::ExcelLoaderTgfConfigExcelImmaculateTrialGrade_GetAllOfFirstRewards Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelImmaculateTrialGrade.GetDisplayCond
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDTrialDisplayerCond*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDTrialDisplayerCond* UExcelLoaderTgfConfigExcelImmaculateTrialGrade::GetDisplayCond(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelImmaculateTrialGrade", "GetDisplayCond");

	Params::ExcelLoaderTgfConfigExcelImmaculateTrialGrade_GetDisplayCond Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelImmaculateTrialGrade.GetDisplayQuantity
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelImmaculateTrialGrade::GetDisplayQuantity(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelImmaculateTrialGrade", "GetDisplayQuantity");

	Params::ExcelLoaderTgfConfigExcelImmaculateTrialGrade_GetDisplayQuantity Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelImmaculateTrialGrade.GetFirstRewards
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDItemOffset*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDItemOffset* UExcelLoaderTgfConfigExcelImmaculateTrialGrade::GetFirstRewards(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelImmaculateTrialGrade", "GetFirstRewards");

	Params::ExcelLoaderTgfConfigExcelImmaculateTrialGrade_GetFirstRewards Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelImmaculateTrialGrade.GetFirstRewardsSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelImmaculateTrialGrade::GetFirstRewardsSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelImmaculateTrialGrade", "GetFirstRewardsSize");

	Params::ExcelLoaderTgfConfigExcelImmaculateTrialGrade_GetFirstRewardsSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelImmaculateTrialGrade.GetGradeId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelImmaculateTrialGrade::GetGradeId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelImmaculateTrialGrade", "GetGradeId");

	Params::ExcelLoaderTgfConfigExcelImmaculateTrialGrade_GetGradeId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelImmaculateTrialGrade.GetIcon
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfConfigExcelImmaculateTrialGrade::GetIcon(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelImmaculateTrialGrade", "GetIcon");

	Params::ExcelLoaderTgfConfigExcelImmaculateTrialGrade_GetIcon Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelImmaculateTrialGrade.GetRandomRewardId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelImmaculateTrialGrade::GetRandomRewardId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelImmaculateTrialGrade", "GetRandomRewardId");

	Params::ExcelLoaderTgfConfigExcelImmaculateTrialGrade_GetRandomRewardId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelImmaculateTrialGrade.GetReachedCond
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDTrialLevelCond*   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDTrialLevelCond* UExcelLoaderTgfConfigExcelImmaculateTrialGrade::GetReachedCond(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelImmaculateTrialGrade", "GetReachedCond");

	Params::ExcelLoaderTgfConfigExcelImmaculateTrialGrade_GetReachedCond Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelImmaculateTrialGrade.GetStrDesc
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfConfigExcelImmaculateTrialGrade::GetStrDesc(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelImmaculateTrialGrade", "GetStrDesc");

	Params::ExcelLoaderTgfConfigExcelImmaculateTrialGrade_GetStrDesc Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixDisplayDataAttrGearSet.GetAffixCase
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EExcelLoaderTgfDBattleAffixDisplayDataAttrGearSetAffixReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EExcelLoaderTgfDBattleAffixDisplayDataAttrGearSetAffix UExcelLoaderTgfDBattleAffixDisplayDataAttrGearSet::GetAffixCase()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixDisplayDataAttrGearSet", "GetAffixCase");

	Params::ExcelLoaderTgfDBattleAffixDisplayDataAttrGearSet_GetAffixCase Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixDisplayDataAttrGearSet.GetAttribute
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAffixDisplayDataAttribute*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAffixDisplayDataAttribute* UExcelLoaderTgfDBattleAffixDisplayDataAttrGearSet::GetAttribute(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixDisplayDataAttrGearSet", "GetAttribute");

	Params::ExcelLoaderTgfDBattleAffixDisplayDataAttrGearSet_GetAttribute Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixDisplayDataAttrGearSet.GetGearSet
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAffixDisplayDataGearSet*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAffixDisplayDataGearSet* UExcelLoaderTgfDBattleAffixDisplayDataAttrGearSet::GetGearSet(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixDisplayDataAttrGearSet", "GetGearSet");

	Params::ExcelLoaderTgfDBattleAffixDisplayDataAttrGearSet_GetGearSet Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixDisplayDataGemSlot.GetAllOfGemAttributeDisplay
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfDBattleAffixDisplayDataAttrGearSet*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfDBattleAffixDisplayDataAttrGearSet*> UExcelLoaderTgfDBattleAffixDisplayDataGemSlot::GetAllOfGemAttributeDisplay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixDisplayDataGemSlot", "GetAllOfGemAttributeDisplay");

	Params::ExcelLoaderTgfDBattleAffixDisplayDataGemSlot_GetAllOfGemAttributeDisplay Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixDisplayDataGemSlot.GetGemAttributeDisplay
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAffixDisplayDataAttrGearSet*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAffixDisplayDataAttrGearSet* UExcelLoaderTgfDBattleAffixDisplayDataGemSlot::GetGemAttributeDisplay(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixDisplayDataGemSlot", "GetGemAttributeDisplay");

	Params::ExcelLoaderTgfDBattleAffixDisplayDataGemSlot_GetGemAttributeDisplay Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixDisplayDataGemSlot.GetGemAttributeDisplaySize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfDBattleAffixDisplayDataGemSlot::GetGemAttributeDisplaySize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixDisplayDataGemSlot", "GetGemAttributeDisplaySize");

	Params::ExcelLoaderTgfDBattleAffixDisplayDataGemSlot_GetGemAttributeDisplaySize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixDisplayDataGemSlot.GetGemDisable
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UExcelLoaderTgfDBattleAffixDisplayDataGemSlot::GetGemDisable(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixDisplayDataGemSlot", "GetGemDisable");

	Params::ExcelLoaderTgfDBattleAffixDisplayDataGemSlot_GetGemDisable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixDisplayDataGemSlot.GetGemId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDBattleAffixDisplayDataGemSlot::GetGemId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixDisplayDataGemSlot", "GetGemId");

	Params::ExcelLoaderTgfDBattleAffixDisplayDataGemSlot_GetGemId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixDisplayDataGemSlot.GetGemShapeType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDBattleAffixDisplayDataGemSlot::GetGemShapeType(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixDisplayDataGemSlot", "GetGemShapeType");

	Params::ExcelLoaderTgfDBattleAffixDisplayDataGemSlot_GetGemShapeType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixDisplayDataGemSlot.GetInit
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UExcelLoaderTgfDBattleAffixDisplayDataGemSlot::GetInit(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixDisplayDataGemSlot", "GetInit");

	Params::ExcelLoaderTgfDBattleAffixDisplayDataGemSlot_GetInit Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixDisplayDataGemSlot.GetSlotId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDBattleAffixDisplayDataGemSlot::GetSlotId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixDisplayDataGemSlot", "GetSlotId");

	Params::ExcelLoaderTgfDBattleAffixDisplayDataGemSlot_GetSlotId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMatchingBattleRankStatistics.GetCount
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelMatchingBattleRankStatistics::GetCount(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMatchingBattleRankStatistics", "GetCount");

	Params::ExcelLoaderTgfConfigExcelMatchingBattleRankStatistics_GetCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMatchingBattleRankStatistics.GetScore
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelMatchingBattleRankStatistics::GetScore(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMatchingBattleRankStatistics", "GetScore");

	Params::ExcelLoaderTgfConfigExcelMatchingBattleRankStatistics_GetScore Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMatchingBattleRankStatistics.GetType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelMatchingBattleRankStatistics::GetType(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMatchingBattleRankStatistics", "GetType");

	Params::ExcelLoaderTgfConfigExcelMatchingBattleRankStatistics_GetType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixDisplayDataGearSet.GetDisplayOrder
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDBattleAffixDisplayDataGearSet::GetDisplayOrder(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixDisplayDataGearSet", "GetDisplayOrder");

	Params::ExcelLoaderTgfDBattleAffixDisplayDataGearSet_GetDisplayOrder Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixDisplayDataGearSet.GetFixed
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDBattleAffixDisplayDataGearSet::GetFixed(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixDisplayDataGearSet", "GetFixed");

	Params::ExcelLoaderTgfDBattleAffixDisplayDataGearSet_GetFixed Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixDisplayDataGearSet.GetGroupOrder
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDBattleAffixDisplayDataGearSet::GetGroupOrder(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixDisplayDataGearSet", "GetGroupOrder");

	Params::ExcelLoaderTgfDBattleAffixDisplayDataGearSet_GetGroupOrder Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixDisplayDataGearSet.GetId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDBattleAffixDisplayDataGearSet::GetId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixDisplayDataGearSet", "GetId");

	Params::ExcelLoaderTgfDBattleAffixDisplayDataGearSet_GetId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixDisplayDataGearSet.GetInit
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UExcelLoaderTgfDBattleAffixDisplayDataGearSet::GetInit(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixDisplayDataGearSet", "GetInit");

	Params::ExcelLoaderTgfDBattleAffixDisplayDataGearSet_GetInit Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixDisplayDataGearSet.GetName
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfDBattleAffixDisplayDataGearSet::GetName(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixDisplayDataGearSet", "GetName");

	Params::ExcelLoaderTgfDBattleAffixDisplayDataGearSet_GetName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixDisplayDataGearSet.GetRandom
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAffixDisplayDataRandomInt*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAffixDisplayDataRandomInt* UExcelLoaderTgfDBattleAffixDisplayDataGearSet::GetRandom(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixDisplayDataGearSet", "GetRandom");

	Params::ExcelLoaderTgfDBattleAffixDisplayDataGearSet_GetRandom Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixDisplayDataGearSet.GetRoleDisplayOrder
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDBattleAffixDisplayDataGearSet::GetRoleDisplayOrder(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixDisplayDataGearSet", "GetRoleDisplayOrder");

	Params::ExcelLoaderTgfDBattleAffixDisplayDataGearSet_GetRoleDisplayOrder Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixDisplayDataGearSet.GetValueCase
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EExcelLoaderTgfDBattleAffixDisplayDataGearSetValueReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EExcelLoaderTgfDBattleAffixDisplayDataGearSetValue UExcelLoaderTgfDBattleAffixDisplayDataGearSet::GetValueCase()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixDisplayDataGearSet", "GetValueCase");

	Params::ExcelLoaderTgfDBattleAffixDisplayDataGearSet_GetValueCase Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixDisplayData.GetAbilitySet
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAffixDisplayDataAbilitySet*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAffixDisplayDataAbilitySet* UExcelLoaderTgfDBattleAffixDisplayData::GetAbilitySet(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixDisplayData", "GetAbilitySet");

	Params::ExcelLoaderTgfDBattleAffixDisplayData_GetAbilitySet Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixDisplayData.GetAffixType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDBattleAffixDisplayData::GetAffixType(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixDisplayData", "GetAffixType");

	Params::ExcelLoaderTgfDBattleAffixDisplayData_GetAffixType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixDisplayData.GetAttribute
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAffixDisplayDataAttribute*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAffixDisplayDataAttribute* UExcelLoaderTgfDBattleAffixDisplayData::GetAttribute(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixDisplayData", "GetAttribute");

	Params::ExcelLoaderTgfDBattleAffixDisplayData_GetAttribute Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixDisplayData.GetDataCase
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EExcelLoaderTgfDBattleAffixDisplayDataDataReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EExcelLoaderTgfDBattleAffixDisplayDataData UExcelLoaderTgfDBattleAffixDisplayData::GetDataCase()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixDisplayData", "GetDataCase");

	Params::ExcelLoaderTgfDBattleAffixDisplayData_GetDataCase Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixDisplayData.GetGearSet
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAffixDisplayDataGearSet*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAffixDisplayDataGearSet* UExcelLoaderTgfDBattleAffixDisplayData::GetGearSet(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixDisplayData", "GetGearSet");

	Params::ExcelLoaderTgfDBattleAffixDisplayData_GetGearSet Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixDisplayData.GetGemSlot
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAffixDisplayDataGemSlot*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAffixDisplayDataGemSlot* UExcelLoaderTgfDBattleAffixDisplayData::GetGemSlot(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixDisplayData", "GetGemSlot");

	Params::ExcelLoaderTgfDBattleAffixDisplayData_GetGemSlot Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixDisplayData.GetLocation
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDBattleAffixDisplayData::GetLocation(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixDisplayData", "GetLocation");

	Params::ExcelLoaderTgfDBattleAffixDisplayData_GetLocation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixDisplayData.GetMinorAffixDefaultRule
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAffixDisplayDataMinorAffixDefaultRule*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAffixDisplayDataMinorAffixDefaultRule* UExcelLoaderTgfDBattleAffixDisplayData::GetMinorAffixDefaultRule(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixDisplayData", "GetMinorAffixDefaultRule");

	Params::ExcelLoaderTgfDBattleAffixDisplayData_GetMinorAffixDefaultRule Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigDGearDurabilityLoss.GetMax
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigDGearDurabilityLoss::GetMax(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigDGearDurabilityLoss", "GetMax");

	Params::ExcelLoaderTgfConfigDGearDurabilityLoss_GetMax Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigDGearDurabilityLoss.GetMin
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigDGearDurabilityLoss::GetMin(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigDGearDurabilityLoss", "GetMin");

	Params::ExcelLoaderTgfConfigDGearDurabilityLoss_GetMin Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffix.GetAffixKey
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAffixKey*   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAffixKey* UExcelLoaderTgfDBattleAffix::GetAffixKey(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffix", "GetAffixKey");

	Params::ExcelLoaderTgfDBattleAffix_GetAffixKey Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffix.GetData
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAffixData*  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAffixData* UExcelLoaderTgfDBattleAffix::GetData(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffix", "GetData");

	Params::ExcelLoaderTgfDBattleAffix_GetData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixAttributeOffset.GetMaxValue
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UExcelLoaderTgfDBattleAffixAttributeOffset::GetMaxValue(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixAttributeOffset", "GetMaxValue");

	Params::ExcelLoaderTgfDBattleAffixAttributeOffset_GetMaxValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixAttributeOffset.GetMinValue
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UExcelLoaderTgfDBattleAffixAttributeOffset::GetMinValue(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixAttributeOffset", "GetMinValue");

	Params::ExcelLoaderTgfDBattleAffixAttributeOffset_GetMinValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDCoin.GetCoinTypeId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDCoin::GetCoinTypeId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDCoin", "GetCoinTypeId");

	Params::ExcelLoaderTgfDCoin_GetCoinTypeId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDCoin.GetCount
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfDCoin::GetCount(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDCoin", "GetCount");

	Params::ExcelLoaderTgfDCoin_GetCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDCoin.GetLimitOption
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDLimitOption*      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDLimitOption* UExcelLoaderTgfDCoin::GetLimitOption(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDCoin", "GetLimitOption");

	Params::ExcelLoaderTgfDCoin_GetLimitOption Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixWeightIndex.GetAffixAliasIndex
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDBattleAffixWeightIndex::GetAffixAliasIndex(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixWeightIndex", "GetAffixAliasIndex");

	Params::ExcelLoaderTgfDBattleAffixWeightIndex_GetAffixAliasIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixWeightIndex.GetAttributeType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDBattleAffixWeightIndex::GetAttributeType(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixWeightIndex", "GetAttributeType");

	Params::ExcelLoaderTgfDBattleAffixWeightIndex_GetAttributeType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixWeightIndex.GetGearSetType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDBattleAffixWeightIndex::GetGearSetType(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixWeightIndex", "GetGearSetType");

	Params::ExcelLoaderTgfDBattleAffixWeightIndex_GetGearSetType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixWeightIndex.GetGemSlotType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDBattleAffixWeightIndex::GetGemSlotType(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixWeightIndex", "GetGemSlotType");

	Params::ExcelLoaderTgfDBattleAffixWeightIndex_GetGemSlotType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixWeightIndex.GetTypeCase
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EExcelLoaderTgfDBattleAffixWeightIndexTypeReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EExcelLoaderTgfDBattleAffixWeightIndexType UExcelLoaderTgfDBattleAffixWeightIndex::GetTypeCase()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixWeightIndex", "GetTypeCase");

	Params::ExcelLoaderTgfDBattleAffixWeightIndex_GetTypeCase Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixWeightIndex.GetWeight
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfDBattleAffixWeightIndex::GetWeight(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixWeightIndex", "GetWeight");

	Params::ExcelLoaderTgfDBattleAffixWeightIndex_GetWeight Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufEnumValueDescriptorProto.GetName
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderGoogleProtobufEnumValueDescriptorProto::GetName(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufEnumValueDescriptorProto", "GetName");

	Params::ExcelLoaderGoogleProtobufEnumValueDescriptorProto_GetName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufEnumValueDescriptorProto.GetNumber
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderGoogleProtobufEnumValueDescriptorProto::GetNumber(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufEnumValueDescriptorProto", "GetNumber");

	Params::ExcelLoaderGoogleProtobufEnumValueDescriptorProto_GetNumber Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufEnumValueDescriptorProto.GetOptions
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufEnumValueOptions*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufEnumValueOptions* UExcelLoaderGoogleProtobufEnumValueDescriptorProto::GetOptions(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufEnumValueDescriptorProto", "GetOptions");

	Params::ExcelLoaderGoogleProtobufEnumValueDescriptorProto_GetOptions Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixAttributeValue.FindRarityRange
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAffixAttributeOffset*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAffixAttributeOffset* UExcelLoaderTgfDBattleAffixAttributeValue::FindRarityRange(int32 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixAttributeValue", "FindRarityRange");

	Params::ExcelLoaderTgfDBattleAffixAttributeValue_FindRarityRange Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixAttributeValue.GetAffixType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDBattleAffixAttributeValue::GetAffixType(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixAttributeValue", "GetAffixType");

	Params::ExcelLoaderTgfDBattleAffixAttributeValue_GetAffixType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixAttributeValue.GetAllOfRarityRange
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfDBattleAffixAttributeValueRarityRangeEntry*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfDBattleAffixAttributeValueRarityRangeEntry*> UExcelLoaderTgfDBattleAffixAttributeValue::GetAllOfRarityRange()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixAttributeValue", "GetAllOfRarityRange");

	Params::ExcelLoaderTgfDBattleAffixAttributeValue_GetAllOfRarityRange Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixAttributeValue.GetRarityRangeSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfDBattleAffixAttributeValue::GetRarityRangeSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixAttributeValue", "GetRarityRangeSize");

	Params::ExcelLoaderTgfDBattleAffixAttributeValue_GetRarityRangeSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixAttributeValueRarityRangeEntry.GetKey
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDBattleAffixAttributeValueRarityRangeEntry::GetKey(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixAttributeValueRarityRangeEntry", "GetKey");

	Params::ExcelLoaderTgfDBattleAffixAttributeValueRarityRangeEntry_GetKey Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixAttributeValueRarityRangeEntry.GetValue
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAffixAttributeOffset*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAffixAttributeOffset* UExcelLoaderTgfDBattleAffixAttributeValueRarityRangeEntry::GetValue(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixAttributeValueRarityRangeEntry", "GetValue");

	Params::ExcelLoaderTgfDBattleAffixAttributeValueRarityRangeEntry_GetValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixAttributeValueOffset.GetAffixData
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAffixAttributeValue*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAffixAttributeValue* UExcelLoaderTgfDBattleAffixAttributeValueOffset::GetAffixData(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixAttributeValueOffset", "GetAffixData");

	Params::ExcelLoaderTgfDBattleAffixAttributeValueOffset_GetAffixData Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixAttributeValueOffset.GetAffixDataSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfDBattleAffixAttributeValueOffset::GetAffixDataSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixAttributeValueOffset", "GetAffixDataSize");

	Params::ExcelLoaderTgfDBattleAffixAttributeValueOffset_GetAffixDataSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixAttributeValueOffset.GetAllOfAffixData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfDBattleAffixAttributeValue*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfDBattleAffixAttributeValue*> UExcelLoaderTgfDBattleAffixAttributeValueOffset::GetAllOfAffixData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixAttributeValueOffset", "GetAllOfAffixData");

	Params::ExcelLoaderTgfDBattleAffixAttributeValueOffset_GetAllOfAffixData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixAttributeValueOffset.GetAttributeType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDBattleAffixAttributeValueOffset::GetAttributeType(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixAttributeValueOffset", "GetAttributeType");

	Params::ExcelLoaderTgfDBattleAffixAttributeValueOffset_GetAttributeType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixAttributeValueOffset.GetUnit
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UExcelLoaderTgfDBattleAffixAttributeValueOffset::GetUnit(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixAttributeValueOffset", "GetUnit");

	Params::ExcelLoaderTgfDBattleAffixAttributeValueOffset_GetUnit Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigDUeSourceBrushData.GetImageSize
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigDUeSourceBrushSizeData*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigDUeSourceBrushSizeData* UExcelLoaderTgfConfigDUeSourceBrushData::GetImageSize(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigDUeSourceBrushData", "GetImageSize");

	Params::ExcelLoaderTgfConfigDUeSourceBrushData_GetImageSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigDUeSourceBrushData.GetResourceName
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfConfigDUeSourceBrushData::GetResourceName(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigDUeSourceBrushData", "GetResourceName");

	Params::ExcelLoaderTgfConfigDUeSourceBrushData_GetResourceName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixAbilityParameterOffset.GetKey
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfDBattleAffixAbilityParameterOffset::GetKey(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixAbilityParameterOffset", "GetKey");

	Params::ExcelLoaderTgfDBattleAffixAbilityParameterOffset_GetKey Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixAbilityParameterOffset.GetMaxValue
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UExcelLoaderTgfDBattleAffixAbilityParameterOffset::GetMaxValue(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixAbilityParameterOffset", "GetMaxValue");

	Params::ExcelLoaderTgfDBattleAffixAbilityParameterOffset_GetMaxValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixAbilityParameterOffset.GetMinValue
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UExcelLoaderTgfDBattleAffixAbilityParameterOffset::GetMinValue(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixAbilityParameterOffset", "GetMinValue");

	Params::ExcelLoaderTgfDBattleAffixAbilityParameterOffset_GetMinValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufMessageOptions.GetAllOfUninterpretedOption
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderGoogleProtobufUninterpretedOption*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderGoogleProtobufUninterpretedOption*> UExcelLoaderGoogleProtobufMessageOptions::GetAllOfUninterpretedOption()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufMessageOptions", "GetAllOfUninterpretedOption");

	Params::ExcelLoaderGoogleProtobufMessageOptions_GetAllOfUninterpretedOption Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufMessageOptions.GetDeprecated
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UExcelLoaderGoogleProtobufMessageOptions::GetDeprecated(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufMessageOptions", "GetDeprecated");

	Params::ExcelLoaderGoogleProtobufMessageOptions_GetDeprecated Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufMessageOptions.GetDeprecatedLegacyJsonFieldConflicts
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UExcelLoaderGoogleProtobufMessageOptions::GetDeprecatedLegacyJsonFieldConflicts(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufMessageOptions", "GetDeprecatedLegacyJsonFieldConflicts");

	Params::ExcelLoaderGoogleProtobufMessageOptions_GetDeprecatedLegacyJsonFieldConflicts Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufMessageOptions.GetFeatures
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufFeatureSet*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufFeatureSet* UExcelLoaderGoogleProtobufMessageOptions::GetFeatures(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufMessageOptions", "GetFeatures");

	Params::ExcelLoaderGoogleProtobufMessageOptions_GetFeatures Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufMessageOptions.GetMapEntry
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UExcelLoaderGoogleProtobufMessageOptions::GetMapEntry(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufMessageOptions", "GetMapEntry");

	Params::ExcelLoaderGoogleProtobufMessageOptions_GetMapEntry Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufMessageOptions.GetMessageSetWireFormat
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UExcelLoaderGoogleProtobufMessageOptions::GetMessageSetWireFormat(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufMessageOptions", "GetMessageSetWireFormat");

	Params::ExcelLoaderGoogleProtobufMessageOptions_GetMessageSetWireFormat Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufMessageOptions.GetNoStandardDescriptorAccessor
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UExcelLoaderGoogleProtobufMessageOptions::GetNoStandardDescriptorAccessor(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufMessageOptions", "GetNoStandardDescriptorAccessor");

	Params::ExcelLoaderGoogleProtobufMessageOptions_GetNoStandardDescriptorAccessor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufMessageOptions.GetUninterpretedOption
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufUninterpretedOption*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufUninterpretedOption* UExcelLoaderGoogleProtobufMessageOptions::GetUninterpretedOption(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufMessageOptions", "GetUninterpretedOption");

	Params::ExcelLoaderGoogleProtobufMessageOptions_GetUninterpretedOption Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufMessageOptions.GetUninterpretedOptionSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderGoogleProtobufMessageOptions::GetUninterpretedOptionSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufMessageOptions", "GetUninterpretedOptionSize");

	Params::ExcelLoaderGoogleProtobufMessageOptions_GetUninterpretedOptionSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixAbilityOffset.GetAbillitySetId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDBattleAffixAbilityOffset::GetAbillitySetId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixAbilityOffset", "GetAbillitySetId");

	Params::ExcelLoaderTgfDBattleAffixAbilityOffset_GetAbillitySetId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixAbilityOffset.GetGuid
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDBattleAffixAbilityOffset::GetGuid(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixAbilityOffset", "GetGuid");

	Params::ExcelLoaderTgfDBattleAffixAbilityOffset_GetGuid Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixRandomRulePoolCondition.GetCorruptionType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDBattleAffixRandomRulePoolCondition::GetCorruptionType(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixRandomRulePoolCondition", "GetCorruptionType");

	Params::ExcelLoaderTgfDBattleAffixRandomRulePoolCondition_GetCorruptionType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixRandomRulePoolCondition.GetLevelRuleId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDBattleAffixRandomRulePoolCondition::GetLevelRuleId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixRandomRulePoolCondition", "GetLevelRuleId");

	Params::ExcelLoaderTgfDBattleAffixRandomRulePoolCondition_GetLevelRuleId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixRandomRulePoolCondition.GetMonsterRuleId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDBattleAffixRandomRulePoolCondition::GetMonsterRuleId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixRandomRulePoolCondition", "GetMonsterRuleId");

	Params::ExcelLoaderTgfDBattleAffixRandomRulePoolCondition_GetMonsterRuleId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixRandomRulePoolCondition.GetTypeCase
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EExcelLoaderTgfDBattleAffixRandomRulePoolConditionTypeReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EExcelLoaderTgfDBattleAffixRandomRulePoolConditionType UExcelLoaderTgfDBattleAffixRandomRulePoolCondition::GetTypeCase()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixRandomRulePoolCondition", "GetTypeCase");

	Params::ExcelLoaderTgfDBattleAffixRandomRulePoolCondition_GetTypeCase Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixRandomRulePoolConditionRuntime.GetCorruption
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDBattleAffixRandomRulePoolConditionRuntime::GetCorruption(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixRandomRulePoolConditionRuntime", "GetCorruption");

	Params::ExcelLoaderTgfDBattleAffixRandomRulePoolConditionRuntime_GetCorruption Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixRandomRulePoolConditionRuntime.GetLevelId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDBattleAffixRandomRulePoolConditionRuntime::GetLevelId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixRandomRulePoolConditionRuntime", "GetLevelId");

	Params::ExcelLoaderTgfDBattleAffixRandomRulePoolConditionRuntime_GetLevelId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixRandomRulePoolConditionRuntime.GetMonsterId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDBattleAffixRandomRulePoolConditionRuntime::GetMonsterId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixRandomRulePoolConditionRuntime", "GetMonsterId");

	Params::ExcelLoaderTgfDBattleAffixRandomRulePoolConditionRuntime_GetMonsterId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDItemPositionCfg.GetAccumulationLimit
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDItemPositionCfg::GetAccumulationLimit(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDItemPositionCfg", "GetAccumulationLimit");

	Params::ExcelLoaderTgfDItemPositionCfg_GetAccumulationLimit Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDItemPositionCfg.GetColumnSize
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDItemPositionCfg::GetColumnSize(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDItemPositionCfg", "GetColumnSize");

	Params::ExcelLoaderTgfDItemPositionCfg_GetColumnSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDItemPositionCfg.GetRowSize
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDItemPositionCfg::GetRowSize(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDItemPositionCfg", "GetRowSize");

	Params::ExcelLoaderTgfDItemPositionCfg_GetRowSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixRandomRulePoolConditionCorruption.GetCorruptionType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDBattleAffixRandomRulePoolConditionCorruption::GetCorruptionType(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixRandomRulePoolConditionCorruption", "GetCorruptionType");

	Params::ExcelLoaderTgfDBattleAffixRandomRulePoolConditionCorruption_GetCorruptionType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixRandomRulePoolConditionCorruption.GetGroupId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDBattleAffixRandomRulePoolConditionCorruption::GetGroupId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixRandomRulePoolConditionCorruption", "GetGroupId");

	Params::ExcelLoaderTgfDBattleAffixRandomRulePoolConditionCorruption_GetGroupId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufEnumOptions.GetAllOfUninterpretedOption
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderGoogleProtobufUninterpretedOption*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderGoogleProtobufUninterpretedOption*> UExcelLoaderGoogleProtobufEnumOptions::GetAllOfUninterpretedOption()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufEnumOptions", "GetAllOfUninterpretedOption");

	Params::ExcelLoaderGoogleProtobufEnumOptions_GetAllOfUninterpretedOption Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufEnumOptions.GetAllowAlias
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UExcelLoaderGoogleProtobufEnumOptions::GetAllowAlias(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufEnumOptions", "GetAllowAlias");

	Params::ExcelLoaderGoogleProtobufEnumOptions_GetAllowAlias Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufEnumOptions.GetDeprecated
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UExcelLoaderGoogleProtobufEnumOptions::GetDeprecated(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufEnumOptions", "GetDeprecated");

	Params::ExcelLoaderGoogleProtobufEnumOptions_GetDeprecated Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufEnumOptions.GetDeprecatedLegacyJsonFieldConflicts
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UExcelLoaderGoogleProtobufEnumOptions::GetDeprecatedLegacyJsonFieldConflicts(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufEnumOptions", "GetDeprecatedLegacyJsonFieldConflicts");

	Params::ExcelLoaderGoogleProtobufEnumOptions_GetDeprecatedLegacyJsonFieldConflicts Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufEnumOptions.GetFeatures
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufFeatureSet*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufFeatureSet* UExcelLoaderGoogleProtobufEnumOptions::GetFeatures(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufEnumOptions", "GetFeatures");

	Params::ExcelLoaderGoogleProtobufEnumOptions_GetFeatures Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufEnumOptions.GetUninterpretedOption
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufUninterpretedOption*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufUninterpretedOption* UExcelLoaderGoogleProtobufEnumOptions::GetUninterpretedOption(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufEnumOptions", "GetUninterpretedOption");

	Params::ExcelLoaderGoogleProtobufEnumOptions_GetUninterpretedOption Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufEnumOptions.GetUninterpretedOptionSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderGoogleProtobufEnumOptions::GetUninterpretedOptionSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufEnumOptions", "GetUninterpretedOptionSize");

	Params::ExcelLoaderGoogleProtobufEnumOptions_GetUninterpretedOptionSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixRandomRulePoolConditionCollect.GetCorruption
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAffixRandomRulePoolConditionCorruption*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAffixRandomRulePoolConditionCorruption* UExcelLoaderTgfDBattleAffixRandomRulePoolConditionCollect::GetCorruption(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixRandomRulePoolConditionCollect", "GetCorruption");

	Params::ExcelLoaderTgfDBattleAffixRandomRulePoolConditionCollect_GetCorruption Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixRandomRulePoolConditionCollect.GetTypeCase
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EExcelLoaderTgfDBattleAffixRandomRulePoolConditionCollectTypeReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EExcelLoaderTgfDBattleAffixRandomRulePoolConditionCollectType UExcelLoaderTgfDBattleAffixRandomRulePoolConditionCollect::GetTypeCase()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixRandomRulePoolConditionCollect", "GetTypeCase");

	Params::ExcelLoaderTgfDBattleAffixRandomRulePoolConditionCollect_GetTypeCase Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDItemUseBase.GetItemBasic
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDItemBasic*        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDItemBasic* UExcelLoaderTgfDItemUseBase::GetItemBasic(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDItemUseBase", "GetItemBasic");

	Params::ExcelLoaderTgfDItemUseBase_GetItemBasic Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDItemUseBase.GetParam
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDItemUseParam*     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDItemUseParam* UExcelLoaderTgfDItemUseBase::GetParam(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDItemUseBase", "GetParam");

	Params::ExcelLoaderTgfDItemUseBase_GetParam Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixRandomRulePool.GetAffixPoolId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDBattleAffixRandomRulePool::GetAffixPoolId(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixRandomRulePool", "GetAffixPoolId");

	Params::ExcelLoaderTgfDBattleAffixRandomRulePool_GetAffixPoolId Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixRandomRulePool.GetAffixPoolIdSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfDBattleAffixRandomRulePool::GetAffixPoolIdSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixRandomRulePool", "GetAffixPoolIdSize");

	Params::ExcelLoaderTgfDBattleAffixRandomRulePool_GetAffixPoolIdSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixRandomRulePool.GetAllOfAffixPoolId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UExcelLoaderTgfDBattleAffixRandomRulePool::GetAllOfAffixPoolId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixRandomRulePool", "GetAllOfAffixPoolId");

	Params::ExcelLoaderTgfDBattleAffixRandomRulePool_GetAllOfAffixPoolId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixRandomRulePool.GetCondition
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAffixRandomRulePoolCondition*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAffixRandomRulePoolCondition* UExcelLoaderTgfDBattleAffixRandomRulePool::GetCondition(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixRandomRulePool", "GetCondition");

	Params::ExcelLoaderTgfDBattleAffixRandomRulePool_GetCondition Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixRandomRule.GetAffixCountPoolId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDBattleAffixRandomRule::GetAffixCountPoolId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixRandomRule", "GetAffixCountPoolId");

	Params::ExcelLoaderTgfDBattleAffixRandomRule_GetAffixCountPoolId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixRandomRule.GetAffixType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDBattleAffixRandomRule::GetAffixType(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixRandomRule", "GetAffixType");

	Params::ExcelLoaderTgfDBattleAffixRandomRule_GetAffixType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixRandomRule.GetAllOfPoolRandom
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfDBattleAffixRandomRulePool*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfDBattleAffixRandomRulePool*> UExcelLoaderTgfDBattleAffixRandomRule::GetAllOfPoolRandom()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixRandomRule", "GetAllOfPoolRandom");

	Params::ExcelLoaderTgfDBattleAffixRandomRule_GetAllOfPoolRandom Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixRandomRule.GetLocation
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDBattleAffixRandomRule::GetLocation(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixRandomRule", "GetLocation");

	Params::ExcelLoaderTgfDBattleAffixRandomRule_GetLocation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixRandomRule.GetMinorAffixDefaultRuleText
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfDBattleAffixRandomRule::GetMinorAffixDefaultRuleText(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixRandomRule", "GetMinorAffixDefaultRuleText");

	Params::ExcelLoaderTgfDBattleAffixRandomRule_GetMinorAffixDefaultRuleText Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixRandomRule.GetPoolRandom
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAffixRandomRulePool*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAffixRandomRulePool* UExcelLoaderTgfDBattleAffixRandomRule::GetPoolRandom(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixRandomRule", "GetPoolRandom");

	Params::ExcelLoaderTgfDBattleAffixRandomRule_GetPoolRandom Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixRandomRule.GetPoolRandomSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfDBattleAffixRandomRule::GetPoolRandomSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixRandomRule", "GetPoolRandomSize");

	Params::ExcelLoaderTgfDBattleAffixRandomRule_GetPoolRandomSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigLootRarePoolConfig.GetBasicRate
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigLootRarePoolConfig::GetBasicRate(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigLootRarePoolConfig", "GetBasicRate");

	Params::ExcelLoaderTgfConfigLootRarePoolConfig_GetBasicRate Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigLootRarePoolConfig.GetMinRate
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigLootRarePoolConfig::GetMinRate(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigLootRarePoolConfig", "GetMinRate");

	Params::ExcelLoaderTgfConfigLootRarePoolConfig_GetMinRate Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigLootRarePoolConfig.GetPoolId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigLootRarePoolConfig::GetPoolId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigLootRarePoolConfig", "GetPoolId");

	Params::ExcelLoaderTgfConfigLootRarePoolConfig_GetPoolId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixFixedRule.GetAffixType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDBattleAffixFixedRule::GetAffixType(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixFixedRule", "GetAffixType");

	Params::ExcelLoaderTgfDBattleAffixFixedRule_GetAffixType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixFixedRule.GetAttribute
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAttributeOffset*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAttributeOffset* UExcelLoaderTgfDBattleAffixFixedRule::GetAttribute(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixFixedRule", "GetAttribute");

	Params::ExcelLoaderTgfDBattleAffixFixedRule_GetAttribute Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixFixedRule.GetLocation
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDBattleAffixFixedRule::GetLocation(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixFixedRule", "GetLocation");

	Params::ExcelLoaderTgfDBattleAffixFixedRule_GetLocation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufUninterpretedOption.GetAggregateValue
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderGoogleProtobufUninterpretedOption::GetAggregateValue(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufUninterpretedOption", "GetAggregateValue");

	Params::ExcelLoaderGoogleProtobufUninterpretedOption_GetAggregateValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufUninterpretedOption.GetAllOfName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderGoogleProtobufUninterpretedOptionNamePart*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderGoogleProtobufUninterpretedOptionNamePart*> UExcelLoaderGoogleProtobufUninterpretedOption::GetAllOfName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufUninterpretedOption", "GetAllOfName");

	Params::ExcelLoaderGoogleProtobufUninterpretedOption_GetAllOfName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufUninterpretedOption.GetDoubleValue
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UExcelLoaderGoogleProtobufUninterpretedOption::GetDoubleValue(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufUninterpretedOption", "GetDoubleValue");

	Params::ExcelLoaderGoogleProtobufUninterpretedOption_GetDoubleValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufUninterpretedOption.GetIdentifierValue
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderGoogleProtobufUninterpretedOption::GetIdentifierValue(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufUninterpretedOption", "GetIdentifierValue");

	Params::ExcelLoaderGoogleProtobufUninterpretedOption_GetIdentifierValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufUninterpretedOption.GetName
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufUninterpretedOptionNamePart*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufUninterpretedOptionNamePart* UExcelLoaderGoogleProtobufUninterpretedOption::GetName(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufUninterpretedOption", "GetName");

	Params::ExcelLoaderGoogleProtobufUninterpretedOption_GetName Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufUninterpretedOption.GetNameSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderGoogleProtobufUninterpretedOption::GetNameSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufUninterpretedOption", "GetNameSize");

	Params::ExcelLoaderGoogleProtobufUninterpretedOption_GetNameSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufUninterpretedOption.GetNegativeIntValue
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderGoogleProtobufUninterpretedOption::GetNegativeIntValue(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufUninterpretedOption", "GetNegativeIntValue");

	Params::ExcelLoaderGoogleProtobufUninterpretedOption_GetNegativeIntValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufUninterpretedOption.GetPositiveIntValue
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderGoogleProtobufUninterpretedOption::GetPositiveIntValue(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufUninterpretedOption", "GetPositiveIntValue");

	Params::ExcelLoaderGoogleProtobufUninterpretedOption_GetPositiveIntValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixLegendaryRule.GetAffixAliasId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDBattleAffixLegendaryRule::GetAffixAliasId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixLegendaryRule", "GetAffixAliasId");

	Params::ExcelLoaderTgfDBattleAffixLegendaryRule_GetAffixAliasId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixLegendaryRule.GetLocation
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDBattleAffixLegendaryRule::GetLocation(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixLegendaryRule", "GetLocation");

	Params::ExcelLoaderTgfDBattleAffixLegendaryRule_GetLocation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDItemGem.GetAllOfSlotData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfDItemGemSlot*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfDItemGemSlot*> UExcelLoaderTgfDItemGem::GetAllOfSlotData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDItemGem", "GetAllOfSlotData");

	Params::ExcelLoaderTgfDItemGem_GetAllOfSlotData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDItemGem.GetSlotData
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDItemGemSlot*      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDItemGemSlot* UExcelLoaderTgfDItemGem::GetSlotData(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDItemGem", "GetSlotData");

	Params::ExcelLoaderTgfDItemGem_GetSlotData Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDItemGem.GetSlotDataSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfDItemGem::GetSlotDataSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDItemGem", "GetSlotDataSize");

	Params::ExcelLoaderTgfDItemGem_GetSlotDataSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixLegendaryOffset.GetAbilitySetId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDBattleAffixLegendaryOffset::GetAbilitySetId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixLegendaryOffset", "GetAbilitySetId");

	Params::ExcelLoaderTgfDBattleAffixLegendaryOffset_GetAbilitySetId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixLegendaryOffset.GetDisplayOrder
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDBattleAffixLegendaryOffset::GetDisplayOrder(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixLegendaryOffset", "GetDisplayOrder");

	Params::ExcelLoaderTgfDBattleAffixLegendaryOffset_GetDisplayOrder Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixLegendaryOffset.GetMaxValue
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDBattleAffixLegendaryOffset::GetMaxValue(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixLegendaryOffset", "GetMaxValue");

	Params::ExcelLoaderTgfDBattleAffixLegendaryOffset_GetMaxValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixLegendaryOffset.GetMinValue
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDBattleAffixLegendaryOffset::GetMinValue(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixLegendaryOffset", "GetMinValue");

	Params::ExcelLoaderTgfDBattleAffixLegendaryOffset_GetMinValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixLegendaryOffset.GetRoleDisplayOrder
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDBattleAffixLegendaryOffset::GetRoleDisplayOrder(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixLegendaryOffset", "GetRoleDisplayOrder");

	Params::ExcelLoaderTgfDBattleAffixLegendaryOffset_GetRoleDisplayOrder Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixOffset.GetAffixValueId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDBattleAffixOffset::GetAffixValueId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixOffset", "GetAffixValueId");

	Params::ExcelLoaderTgfDBattleAffixOffset_GetAffixValueId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixOffset.GetAllOfFixedRule
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfDBattleAffixFixedRule*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfDBattleAffixFixedRule*> UExcelLoaderTgfDBattleAffixOffset::GetAllOfFixedRule()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixOffset", "GetAllOfFixedRule");

	Params::ExcelLoaderTgfDBattleAffixOffset_GetAllOfFixedRule Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixOffset.GetAllOfLegendaryRule
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfDBattleAffixLegendaryRule*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfDBattleAffixLegendaryRule*> UExcelLoaderTgfDBattleAffixOffset::GetAllOfLegendaryRule()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixOffset", "GetAllOfLegendaryRule");

	Params::ExcelLoaderTgfDBattleAffixOffset_GetAllOfLegendaryRule Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixOffset.GetAllOfRandomRule
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfDBattleAffixRandomRule*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfDBattleAffixRandomRule*> UExcelLoaderTgfDBattleAffixOffset::GetAllOfRandomRule()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixOffset", "GetAllOfRandomRule");

	Params::ExcelLoaderTgfDBattleAffixOffset_GetAllOfRandomRule Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixOffset.GetFixedRule
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAffixFixedRule*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAffixFixedRule* UExcelLoaderTgfDBattleAffixOffset::GetFixedRule(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixOffset", "GetFixedRule");

	Params::ExcelLoaderTgfDBattleAffixOffset_GetFixedRule Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixOffset.GetFixedRuleSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfDBattleAffixOffset::GetFixedRuleSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixOffset", "GetFixedRuleSize");

	Params::ExcelLoaderTgfDBattleAffixOffset_GetFixedRuleSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixOffset.GetLegendaryRule
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAffixLegendaryRule*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAffixLegendaryRule* UExcelLoaderTgfDBattleAffixOffset::GetLegendaryRule(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixOffset", "GetLegendaryRule");

	Params::ExcelLoaderTgfDBattleAffixOffset_GetLegendaryRule Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixOffset.GetLegendaryRuleSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfDBattleAffixOffset::GetLegendaryRuleSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixOffset", "GetLegendaryRuleSize");

	Params::ExcelLoaderTgfDBattleAffixOffset_GetLegendaryRuleSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixOffset.GetRandomRule
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAffixRandomRule*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAffixRandomRule* UExcelLoaderTgfDBattleAffixOffset::GetRandomRule(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixOffset", "GetRandomRule");

	Params::ExcelLoaderTgfDBattleAffixOffset_GetRandomRule Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixOffset.GetRandomRuleSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfDBattleAffixOffset::GetRandomRuleSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixOffset", "GetRandomRuleSize");

	Params::ExcelLoaderTgfDBattleAffixOffset_GetRandomRuleSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfUeEnumConversion.GetDefaultPbEnum
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfUeEnumConversion::GetDefaultPbEnum(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfUeEnumConversion", "GetDefaultPbEnum");

	Params::ExcelLoaderTgfUeEnumConversion_GetDefaultPbEnum Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfUeEnumConversion.GetDefaultUeEnum
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfUeEnumConversion::GetDefaultUeEnum(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfUeEnumConversion", "GetDefaultUeEnum");

	Params::ExcelLoaderTgfUeEnumConversion_GetDefaultUeEnum Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfUeEnumConversion.GetUeEnumAlias
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfUeEnumConversion::GetUeEnumAlias(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfUeEnumConversion", "GetUeEnumAlias");

	Params::ExcelLoaderTgfUeEnumConversion_GetUeEnumAlias Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleMapArgsTypeDataLootLevelUp.GetAllOfRandomId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<int64>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int64> UExcelLoaderTgfDBattleMapArgsTypeDataLootLevelUp::GetAllOfRandomId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleMapArgsTypeDataLootLevelUp", "GetAllOfRandomId");

	Params::ExcelLoaderTgfDBattleMapArgsTypeDataLootLevelUp_GetAllOfRandomId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleMapArgsTypeDataLootLevelUp.GetLevel
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDBattleMapArgsTypeDataLootLevelUp::GetLevel(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleMapArgsTypeDataLootLevelUp", "GetLevel");

	Params::ExcelLoaderTgfDBattleMapArgsTypeDataLootLevelUp_GetLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleMapArgsTypeDataLootLevelUp.GetRandomId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfDBattleMapArgsTypeDataLootLevelUp::GetRandomId(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleMapArgsTypeDataLootLevelUp", "GetRandomId");

	Params::ExcelLoaderTgfDBattleMapArgsTypeDataLootLevelUp_GetRandomId Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleMapArgsTypeDataLootLevelUp.GetRandomIdSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfDBattleMapArgsTypeDataLootLevelUp::GetRandomIdSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleMapArgsTypeDataLootLevelUp", "GetRandomIdSize");

	Params::ExcelLoaderTgfDBattleMapArgsTypeDataLootLevelUp_GetRandomIdSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleMapArgsTypeDataLootBaseUp.GetAllOfRandomId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<int64>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int64> UExcelLoaderTgfDBattleMapArgsTypeDataLootBaseUp::GetAllOfRandomId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleMapArgsTypeDataLootBaseUp", "GetAllOfRandomId");

	Params::ExcelLoaderTgfDBattleMapArgsTypeDataLootBaseUp_GetAllOfRandomId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleMapArgsTypeDataLootBaseUp.GetBase
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDBattleMapArgsTypeDataLootBaseUp::GetBase(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleMapArgsTypeDataLootBaseUp", "GetBase");

	Params::ExcelLoaderTgfDBattleMapArgsTypeDataLootBaseUp_GetBase Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleMapArgsTypeDataLootBaseUp.GetRandomId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfDBattleMapArgsTypeDataLootBaseUp::GetRandomId(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleMapArgsTypeDataLootBaseUp", "GetRandomId");

	Params::ExcelLoaderTgfDBattleMapArgsTypeDataLootBaseUp_GetRandomId Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleMapArgsTypeDataLootBaseUp.GetRandomIdSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfDBattleMapArgsTypeDataLootBaseUp::GetRandomIdSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleMapArgsTypeDataLootBaseUp", "GetRandomIdSize");

	Params::ExcelLoaderTgfDBattleMapArgsTypeDataLootBaseUp_GetRandomIdSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelIdipItemLimit.GetCountLimit
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelIdipItemLimit::GetCountLimit(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelIdipItemLimit", "GetCountLimit");

	Params::ExcelLoaderTgfConfigExcelIdipItemLimit_GetCountLimit Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelIdipItemLimit.GetTypeId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelIdipItemLimit::GetTypeId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelIdipItemLimit", "GetTypeId");

	Params::ExcelLoaderTgfConfigExcelIdipItemLimit_GetTypeId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleMapArgsTypeDataLevelArgs.GetAllOfValues
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UExcelLoaderTgfDBattleMapArgsTypeDataLevelArgs::GetAllOfValues()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleMapArgsTypeDataLevelArgs", "GetAllOfValues");

	Params::ExcelLoaderTgfDBattleMapArgsTypeDataLevelArgs_GetAllOfValues Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleMapArgsTypeDataLevelArgs.GetValues
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDBattleMapArgsTypeDataLevelArgs::GetValues(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleMapArgsTypeDataLevelArgs", "GetValues");

	Params::ExcelLoaderTgfDBattleMapArgsTypeDataLevelArgs_GetValues Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleMapArgsTypeDataLevelArgs.GetValuesSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfDBattleMapArgsTypeDataLevelArgs::GetValuesSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleMapArgsTypeDataLevelArgs", "GetValuesSize");

	Params::ExcelLoaderTgfDBattleMapArgsTypeDataLevelArgs_GetValuesSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleMapArgsTypeData.GetLevelArgs
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleMapArgsTypeDataLevelArgs*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleMapArgsTypeDataLevelArgs* UExcelLoaderTgfDBattleMapArgsTypeData::GetLevelArgs(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleMapArgsTypeData", "GetLevelArgs");

	Params::ExcelLoaderTgfDBattleMapArgsTypeData_GetLevelArgs Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleMapArgsTypeData.GetLootBaseUp
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleMapArgsTypeDataLootBaseUp*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleMapArgsTypeDataLootBaseUp* UExcelLoaderTgfDBattleMapArgsTypeData::GetLootBaseUp(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleMapArgsTypeData", "GetLootBaseUp");

	Params::ExcelLoaderTgfDBattleMapArgsTypeData_GetLootBaseUp Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleMapArgsTypeData.GetLootLevelUp
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleMapArgsTypeDataLootLevelUp*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleMapArgsTypeDataLootLevelUp* UExcelLoaderTgfDBattleMapArgsTypeData::GetLootLevelUp(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleMapArgsTypeData", "GetLootLevelUp");

	Params::ExcelLoaderTgfDBattleMapArgsTypeData_GetLootLevelUp Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleMapArgsTypeData.GetValueCase
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EExcelLoaderTgfDBattleMapArgsTypeDataValueReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EExcelLoaderTgfDBattleMapArgsTypeDataValue UExcelLoaderTgfDBattleMapArgsTypeData::GetValueCase()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleMapArgsTypeData", "GetValueCase");

	Params::ExcelLoaderTgfDBattleMapArgsTypeData_GetValueCase Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDUserFacadeItemSkin.GetSkinId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDUserFacadeItemSkin::GetSkinId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDUserFacadeItemSkin", "GetSkinId");

	Params::ExcelLoaderTgfDUserFacadeItemSkin_GetSkinId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDUserFacadeItemSkin.GetTypeId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDUserFacadeItemSkin::GetTypeId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDUserFacadeItemSkin", "GetTypeId");

	Params::ExcelLoaderTgfDUserFacadeItemSkin_GetTypeId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleMapArgsData.GetAgrsData
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleMapArgsTypeData*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleMapArgsTypeData* UExcelLoaderTgfDBattleMapArgsData::GetAgrsData(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleMapArgsData", "GetAgrsData");

	Params::ExcelLoaderTgfDBattleMapArgsData_GetAgrsData Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleMapArgsData.GetAgrsDataSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfDBattleMapArgsData::GetAgrsDataSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleMapArgsData", "GetAgrsDataSize");

	Params::ExcelLoaderTgfDBattleMapArgsData_GetAgrsDataSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleMapArgsData.GetAllOfAgrsData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfDBattleMapArgsTypeData*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfDBattleMapArgsTypeData*> UExcelLoaderTgfDBattleMapArgsData::GetAllOfAgrsData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleMapArgsData", "GetAllOfAgrsData");

	Params::ExcelLoaderTgfDBattleMapArgsData_GetAllOfAgrsData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleMapArgsData.GetMapArgsConfigId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDBattleMapArgsData::GetMapArgsConfigId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleMapArgsData", "GetMapArgsConfigId");

	Params::ExcelLoaderTgfDBattleMapArgsData_GetMapArgsConfigId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleGearServerAffixScore.GetAttackScore
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDBattleGearServerAffixScore::GetAttackScore(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleGearServerAffixScore", "GetAttackScore");

	Params::ExcelLoaderTgfDBattleGearServerAffixScore_GetAttackScore Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleGearServerAffixScore.GetDefendScore
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDBattleGearServerAffixScore::GetDefendScore(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleGearServerAffixScore", "GetDefendScore");

	Params::ExcelLoaderTgfDBattleGearServerAffixScore_GetDefendScore Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDItem.GetBasic
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDItemBasic*        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDItemBasic* UExcelLoaderTgfDItem::GetBasic(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDItem", "GetBasic");

	Params::ExcelLoaderTgfDItem_GetBasic Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDItem.GetCreateInfo
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDItemCreateInfo*   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDItemCreateInfo* UExcelLoaderTgfDItem::GetCreateInfo(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDItem", "GetCreateInfo");

	Params::ExcelLoaderTgfDItem_GetCreateInfo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDItem.GetData
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDItemData*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDItemData* UExcelLoaderTgfDItem::GetData(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDItem", "GetData");

	Params::ExcelLoaderTgfDItem_GetData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixDisplayConfig.GetDisplayAttackRightAttGearLevel
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UExcelLoaderTgfDBattleAffixDisplayConfig::GetDisplayAttackRightAttGearLevel(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixDisplayConfig", "GetDisplayAttackRightAttGearLevel");

	Params::ExcelLoaderTgfDBattleAffixDisplayConfig_GetDisplayAttackRightAttGearLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDBattleAffixDisplayConfig.GetDisplayDefendDefGearLevel
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UExcelLoaderTgfDBattleAffixDisplayConfig::GetDisplayDefendDefGearLevel(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDBattleAffixDisplayConfig", "GetDisplayDefendDefGearLevel");

	Params::ExcelLoaderTgfDBattleAffixDisplayConfig_GetDisplayDefendDefGearLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigUESourceAbilitySet.GetUePath
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfConfigUESourceAbilitySet::GetUePath(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigUESourceAbilitySet", "GetUePath");

	Params::ExcelLoaderTgfConfigUESourceAbilitySet_GetUePath Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigUESourceAbilitySet.GetUeSourceId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigUESourceAbilitySet::GetUeSourceId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigUESourceAbilitySet", "GetUeSourceId");

	Params::ExcelLoaderTgfConfigUESourceAbilitySet_GetUeSourceId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigUeSourceActorSkin.GetCategoryType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigUeSourceActorSkin::GetCategoryType(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigUeSourceActorSkin", "GetCategoryType");

	Params::ExcelLoaderTgfConfigUeSourceActorSkin_GetCategoryType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigUeSourceActorSkin.GetSkinId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigUeSourceActorSkin::GetSkinId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigUeSourceActorSkin", "GetSkinId");

	Params::ExcelLoaderTgfConfigUeSourceActorSkin_GetSkinId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigUeSourceActorSkin.GetSlotType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigUeSourceActorSkin::GetSlotType(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigUeSourceActorSkin", "GetSlotType");

	Params::ExcelLoaderTgfConfigUeSourceActorSkin_GetSlotType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigUeSourceActorSkin.GetUePath
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfConfigUeSourceActorSkin::GetUePath(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigUeSourceActorSkin", "GetUePath");

	Params::ExcelLoaderTgfConfigUeSourceActorSkin_GetUePath Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigUESourceGameplayAbility.GetGameplayAbilityId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigUESourceGameplayAbility::GetGameplayAbilityId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigUESourceGameplayAbility", "GetGameplayAbilityId");

	Params::ExcelLoaderTgfConfigUESourceGameplayAbility_GetGameplayAbilityId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigUESourceGameplayAbility.GetUePath
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfConfigUESourceGameplayAbility::GetUePath(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigUESourceGameplayAbility", "GetUePath");

	Params::ExcelLoaderTgfConfigUESourceGameplayAbility_GetUePath Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigUESourceGameplayEffect.GetActiveType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigUESourceGameplayEffect::GetActiveType(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigUESourceGameplayEffect", "GetActiveType");

	Params::ExcelLoaderTgfConfigUESourceGameplayEffect_GetActiveType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigUESourceGameplayEffect.GetGameplayEffectId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigUESourceGameplayEffect::GetGameplayEffectId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigUESourceGameplayEffect", "GetGameplayEffectId");

	Params::ExcelLoaderTgfConfigUESourceGameplayEffect_GetGameplayEffectId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigUESourceGameplayEffect.GetSkillType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigUESourceGameplayEffect::GetSkillType(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigUESourceGameplayEffect", "GetSkillType");

	Params::ExcelLoaderTgfConfigUESourceGameplayEffect_GetSkillType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigUESourceGameplayEffect.GetUePath
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfConfigUESourceGameplayEffect::GetUePath(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigUESourceGameplayEffect", "GetUePath");

	Params::ExcelLoaderTgfConfigUESourceGameplayEffect_GetUePath Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelItemMagicFound.GetCoefficient
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelItemMagicFound::GetCoefficient(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelItemMagicFound", "GetCoefficient");

	Params::ExcelLoaderTgfConfigExcelItemMagicFound_GetCoefficient Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelItemMagicFound.GetLevel
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelItemMagicFound::GetLevel(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelItemMagicFound", "GetLevel");

	Params::ExcelLoaderTgfConfigExcelItemMagicFound_GetLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelAffixTemplate.GetAffixDisplay
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAffixDisplayConfig*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAffixDisplayConfig* UExcelLoaderTgfConfigExcelAffixTemplate::GetAffixDisplay(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelAffixTemplate", "GetAffixDisplay");

	Params::ExcelLoaderTgfConfigExcelAffixTemplate_GetAffixDisplay Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelAffixTemplate.GetData
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAffixOffset*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAffixOffset* UExcelLoaderTgfConfigExcelAffixTemplate::GetData(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelAffixTemplate", "GetData");

	Params::ExcelLoaderTgfConfigExcelAffixTemplate_GetData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelAffixTemplate.GetItemId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelAffixTemplate::GetItemId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelAffixTemplate", "GetItemId");

	Params::ExcelLoaderTgfConfigExcelAffixTemplate_GetItemId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelAffixTemplate.GetServerAffixScore
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleGearServerAffixScore*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleGearServerAffixScore* UExcelLoaderTgfConfigExcelAffixTemplate::GetServerAffixScore(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelAffixTemplate", "GetServerAffixScore");

	Params::ExcelLoaderTgfConfigExcelAffixTemplate_GetServerAffixScore Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelAffixCountRandomPool.GetAffixCountPoolId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelAffixCountRandomPool::GetAffixCountPoolId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelAffixCountRandomPool", "GetAffixCountPoolId");

	Params::ExcelLoaderTgfConfigExcelAffixCountRandomPool_GetAffixCountPoolId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelAffixCountRandomPool.GetCount
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelAffixCountRandomPool::GetCount(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelAffixCountRandomPool", "GetCount");

	Params::ExcelLoaderTgfConfigExcelAffixCountRandomPool_GetCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelAffixCountRandomPool.GetRandomWeight
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelAffixCountRandomPool::GetRandomWeight(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelAffixCountRandomPool", "GetRandomWeight");

	Params::ExcelLoaderTgfConfigExcelAffixCountRandomPool_GetRandomWeight Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigEquipmentWeaponConfig.GetAllOfCareerRestrict
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UExcelLoaderTgfConfigEquipmentWeaponConfig::GetAllOfCareerRestrict()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigEquipmentWeaponConfig", "GetAllOfCareerRestrict");

	Params::ExcelLoaderTgfConfigEquipmentWeaponConfig_GetAllOfCareerRestrict Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigEquipmentWeaponConfig.GetAllOfSecondaryWeaponTypes
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UExcelLoaderTgfConfigEquipmentWeaponConfig::GetAllOfSecondaryWeaponTypes()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigEquipmentWeaponConfig", "GetAllOfSecondaryWeaponTypes");

	Params::ExcelLoaderTgfConfigEquipmentWeaponConfig_GetAllOfSecondaryWeaponTypes Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigEquipmentWeaponConfig.GetCanEquipDouble
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UExcelLoaderTgfConfigEquipmentWeaponConfig::GetCanEquipDouble(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigEquipmentWeaponConfig", "GetCanEquipDouble");

	Params::ExcelLoaderTgfConfigEquipmentWeaponConfig_GetCanEquipDouble Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigEquipmentWeaponConfig.GetCareerRestrict
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigEquipmentWeaponConfig::GetCareerRestrict(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigEquipmentWeaponConfig", "GetCareerRestrict");

	Params::ExcelLoaderTgfConfigEquipmentWeaponConfig_GetCareerRestrict Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigEquipmentWeaponConfig.GetCareerRestrictSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigEquipmentWeaponConfig::GetCareerRestrictSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigEquipmentWeaponConfig", "GetCareerRestrictSize");

	Params::ExcelLoaderTgfConfigEquipmentWeaponConfig_GetCareerRestrictSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigEquipmentWeaponConfig.GetIsWeapon
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UExcelLoaderTgfConfigEquipmentWeaponConfig::GetIsWeapon(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigEquipmentWeaponConfig", "GetIsWeapon");

	Params::ExcelLoaderTgfConfigEquipmentWeaponConfig_GetIsWeapon Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigEquipmentWeaponConfig.GetSecondaryWeaponTypes
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigEquipmentWeaponConfig::GetSecondaryWeaponTypes(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigEquipmentWeaponConfig", "GetSecondaryWeaponTypes");

	Params::ExcelLoaderTgfConfigEquipmentWeaponConfig_GetSecondaryWeaponTypes Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigEquipmentWeaponConfig.GetSecondaryWeaponTypesSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigEquipmentWeaponConfig::GetSecondaryWeaponTypesSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigEquipmentWeaponConfig", "GetSecondaryWeaponTypesSize");

	Params::ExcelLoaderTgfConfigEquipmentWeaponConfig_GetSecondaryWeaponTypesSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigEquipmentWeaponConfig.GetWeaponEquipType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigEquipmentWeaponConfig::GetWeaponEquipType(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigEquipmentWeaponConfig", "GetWeaponEquipType");

	Params::ExcelLoaderTgfConfigEquipmentWeaponConfig_GetWeaponEquipType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelAffixPool.GetAffixPoolId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelAffixPool::GetAffixPoolId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelAffixPool", "GetAffixPoolId");

	Params::ExcelLoaderTgfConfigExcelAffixPool_GetAffixPoolId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelAffixPool.GetAttributeWeight
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAttributeOffset*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAttributeOffset* UExcelLoaderTgfConfigExcelAffixPool::GetAttributeWeight(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelAffixPool", "GetAttributeWeight");

	Params::ExcelLoaderTgfConfigExcelAffixPool_GetAttributeWeight Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelAffixLegendaryRule.GetAffixAliasId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelAffixLegendaryRule::GetAffixAliasId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelAffixLegendaryRule", "GetAffixAliasId");

	Params::ExcelLoaderTgfConfigExcelAffixLegendaryRule_GetAffixAliasId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelAffixLegendaryRule.GetOffset
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAffixLegendaryOffset*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAffixLegendaryOffset* UExcelLoaderTgfConfigExcelAffixLegendaryRule::GetOffset(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelAffixLegendaryRule", "GetOffset");

	Params::ExcelLoaderTgfConfigExcelAffixLegendaryRule_GetOffset Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelItemType.GetAllOfSpecialCareerRequire
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UExcelLoaderTgfConfigExcelItemType::GetAllOfSpecialCareerRequire()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelItemType", "GetAllOfSpecialCareerRequire");

	Params::ExcelLoaderTgfConfigExcelItemType_GetAllOfSpecialCareerRequire Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelItemType.GetBringOutIngameType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelItemType::GetBringOutIngameType(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelItemType", "GetBringOutIngameType");

	Params::ExcelLoaderTgfConfigExcelItemType_GetBringOutIngameType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelItemType.GetDescription
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfConfigExcelItemType::GetDescription(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelItemType", "GetDescription");

	Params::ExcelLoaderTgfConfigExcelItemType_GetDescription Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelItemType.GetDisplaySeason
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelItemType::GetDisplaySeason(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelItemType", "GetDisplaySeason");

	Params::ExcelLoaderTgfConfigExcelItemType_GetDisplaySeason Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelItemType.GetGameLootSort
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelItemType::GetGameLootSort(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelItemType", "GetGameLootSort");

	Params::ExcelLoaderTgfConfigExcelItemType_GetGameLootSort Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelItemType.GetIsForbiddenBringIntoBattle
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UExcelLoaderTgfConfigExcelItemType::GetIsForbiddenBringIntoBattle(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelItemType", "GetIsForbiddenBringIntoBattle");

	Params::ExcelLoaderTgfConfigExcelItemType_GetIsForbiddenBringIntoBattle Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelItemType.GetItemCombatValue
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelItemType::GetItemCombatValue(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelItemType", "GetItemCombatValue");

	Params::ExcelLoaderTgfConfigExcelItemType_GetItemCombatValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelItemType.GetItemMajorType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelItemType::GetItemMajorType(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelItemType", "GetItemMajorType");

	Params::ExcelLoaderTgfConfigExcelItemType_GetItemMajorType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelItemType.GetItemMinorType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelItemType::GetItemMinorType(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelItemType", "GetItemMinorType");

	Params::ExcelLoaderTgfConfigExcelItemType_GetItemMinorType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelItemType.GetItemQuestValue
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelItemType::GetItemQuestValue(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelItemType", "GetItemQuestValue");

	Params::ExcelLoaderTgfConfigExcelItemType_GetItemQuestValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelItemType.GetLevelRequire
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelItemType::GetLevelRequire(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelItemType", "GetLevelRequire");

	Params::ExcelLoaderTgfConfigExcelItemType_GetLevelRequire Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelItemType.GetLootLog
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UExcelLoaderTgfConfigExcelItemType::GetLootLog(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelItemType", "GetLootLog");

	Params::ExcelLoaderTgfConfigExcelItemType_GetLootLog Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelItemType.GetName
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfConfigExcelItemType::GetName(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelItemType", "GetName");

	Params::ExcelLoaderTgfConfigExcelItemType_GetName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelItemType.GetSkinThirdSort
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelItemType::GetSkinThirdSort(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelItemType", "GetSkinThirdSort");

	Params::ExcelLoaderTgfConfigExcelItemType_GetSkinThirdSort Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelItemType.GetSpecialCareerRequire
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelItemType::GetSpecialCareerRequire(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelItemType", "GetSpecialCareerRequire");

	Params::ExcelLoaderTgfConfigExcelItemType_GetSpecialCareerRequire Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelItemType.GetSpecialCareerRequireSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelItemType::GetSpecialCareerRequireSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelItemType", "GetSpecialCareerRequireSize");

	Params::ExcelLoaderTgfConfigExcelItemType_GetSpecialCareerRequireSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelItemType.GetSystemRepurchasePrice
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelItemType::GetSystemRepurchasePrice(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelItemType", "GetSystemRepurchasePrice");

	Params::ExcelLoaderTgfConfigExcelItemType_GetSystemRepurchasePrice Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelItemType.GetTypeId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelItemType::GetTypeId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelItemType", "GetTypeId");

	Params::ExcelLoaderTgfConfigExcelItemType_GetTypeId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelItemType.GetTypeName
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfConfigExcelItemType::GetTypeName(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelItemType", "GetTypeName");

	Params::ExcelLoaderTgfConfigExcelItemType_GetTypeName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelItemType.GetUeSourceTypeId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelItemType::GetUeSourceTypeId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelItemType", "GetUeSourceTypeId");

	Params::ExcelLoaderTgfConfigExcelItemType_GetUeSourceTypeId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelItemType.GetUseAction
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDItemUseAction*    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDItemUseAction* UExcelLoaderTgfConfigExcelItemType::GetUseAction(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelItemType", "GetUseAction");

	Params::ExcelLoaderTgfConfigExcelItemType_GetUseAction Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelItemType.GetUseDescription
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfConfigExcelItemType::GetUseDescription(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelItemType", "GetUseDescription");

	Params::ExcelLoaderTgfConfigExcelItemType_GetUseDescription Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelAffixValueTemplate.GetAffixValueId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelAffixValueTemplate::GetAffixValueId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelAffixValueTemplate", "GetAffixValueId");

	Params::ExcelLoaderTgfConfigExcelAffixValueTemplate_GetAffixValueId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelAffixValueTemplate.GetAttributeType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelAffixValueTemplate::GetAttributeType(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelAffixValueTemplate", "GetAttributeType");

	Params::ExcelLoaderTgfConfigExcelAffixValueTemplate_GetAttributeType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelAffixValueTemplate.GetData
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAffixAttributeValueOffset*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAffixAttributeValueOffset* UExcelLoaderTgfConfigExcelAffixValueTemplate::GetData(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelAffixValueTemplate", "GetData");

	Params::ExcelLoaderTgfConfigExcelAffixValueTemplate_GetData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelAffixAbilitySetId.GetAbilitySetId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelAffixAbilitySetId::GetAbilitySetId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelAffixAbilitySetId", "GetAbilitySetId");

	Params::ExcelLoaderTgfConfigExcelAffixAbilitySetId_GetAbilitySetId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelAffixAbilitySetId.GetAffixIndexId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelAffixAbilitySetId::GetAffixIndexId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelAffixAbilitySetId", "GetAffixIndexId");

	Params::ExcelLoaderTgfConfigExcelAffixAbilitySetId_GetAffixIndexId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMapDetail.GetAllOfMapConfig
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelMapDetailMapConfig*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelMapDetailMapConfig*> UExcelLoaderTgfConfigExcelMapDetail::GetAllOfMapConfig()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMapDetail", "GetAllOfMapConfig");

	Params::ExcelLoaderTgfConfigExcelMapDetail_GetAllOfMapConfig Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMapDetail.GetAllOfOptionArgs
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UExcelLoaderTgfConfigExcelMapDetail::GetAllOfOptionArgs()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMapDetail", "GetAllOfOptionArgs");

	Params::ExcelLoaderTgfConfigExcelMapDetail_GetAllOfOptionArgs Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMapDetail.GetDsFleet
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfConfigExcelMapDetail::GetDsFleet(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMapDetail", "GetDsFleet");

	Params::ExcelLoaderTgfConfigExcelMapDetail_GetDsFleet Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMapDetail.GetLootMapId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelMapDetail::GetLootMapId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMapDetail", "GetLootMapId");

	Params::ExcelLoaderTgfConfigExcelMapDetail_GetLootMapId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMapDetail.GetMapConfig
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelMapDetailMapConfig*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelMapDetailMapConfig* UExcelLoaderTgfConfigExcelMapDetail::GetMapConfig(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMapDetail", "GetMapConfig");

	Params::ExcelLoaderTgfConfigExcelMapDetail_GetMapConfig Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMapDetail.GetMapConfigSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelMapDetail::GetMapConfigSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMapDetail", "GetMapConfigSize");

	Params::ExcelLoaderTgfConfigExcelMapDetail_GetMapConfigSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMapDetail.GetMapId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelMapDetail::GetMapId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMapDetail", "GetMapId");

	Params::ExcelLoaderTgfConfigExcelMapDetail_GetMapId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMapDetail.GetOptionArgs
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelMapDetail::GetOptionArgs(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMapDetail", "GetOptionArgs");

	Params::ExcelLoaderTgfConfigExcelMapDetail_GetOptionArgs Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMapDetail.GetOptionArgsSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelMapDetail::GetOptionArgsSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMapDetail", "GetOptionArgsSize");

	Params::ExcelLoaderTgfConfigExcelMapDetail_GetOptionArgsSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMapDetail.GetSettleInterfaceType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelMapDetail::GetSettleInterfaceType(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMapDetail", "GetSettleInterfaceType");

	Params::ExcelLoaderTgfConfigExcelMapDetail_GetSettleInterfaceType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMapDetail.GetTimeout
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelMapDetail::GetTimeout(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMapDetail", "GetTimeout");

	Params::ExcelLoaderTgfConfigExcelMapDetail_GetTimeout Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMapDetail.GetWaitingRoomTimeout
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelMapDetail::GetWaitingRoomTimeout(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMapDetail", "GetWaitingRoomTimeout");

	Params::ExcelLoaderTgfConfigExcelMapDetail_GetWaitingRoomTimeout Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelBattleAttributeDescription.GetAttributeClassify
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelBattleAttributeDescription::GetAttributeClassify(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelBattleAttributeDescription", "GetAttributeClassify");

	Params::ExcelLoaderTgfConfigExcelBattleAttributeDescription_GetAttributeClassify Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelBattleAttributeDescription.GetAttributeIcon
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfConfigExcelBattleAttributeDescription::GetAttributeIcon(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelBattleAttributeDescription", "GetAttributeIcon");

	Params::ExcelLoaderTgfConfigExcelBattleAttributeDescription_GetAttributeIcon Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelBattleAttributeDescription.GetAttributeType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelBattleAttributeDescription::GetAttributeType(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelBattleAttributeDescription", "GetAttributeType");

	Params::ExcelLoaderTgfConfigExcelBattleAttributeDescription_GetAttributeType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelBattleAttributeDescription.GetDisplayOrder
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelBattleAttributeDescription::GetDisplayOrder(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelBattleAttributeDescription", "GetDisplayOrder");

	Params::ExcelLoaderTgfConfigExcelBattleAttributeDescription_GetDisplayOrder Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelBattleAttributeDescription.GetDisplayPercentage
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UExcelLoaderTgfConfigExcelBattleAttributeDescription::GetDisplayPercentage(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelBattleAttributeDescription", "GetDisplayPercentage");

	Params::ExcelLoaderTgfConfigExcelBattleAttributeDescription_GetDisplayPercentage Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelBattleAttributeDescription.GetMajorAttributeRating
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelBattleAttributeDescription::GetMajorAttributeRating(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelBattleAttributeDescription", "GetMajorAttributeRating");

	Params::ExcelLoaderTgfConfigExcelBattleAttributeDescription_GetMajorAttributeRating Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelBattleAttributeDescription.GetMinorAttributeRating
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelBattleAttributeDescription::GetMinorAttributeRating(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelBattleAttributeDescription", "GetMinorAttributeRating");

	Params::ExcelLoaderTgfConfigExcelBattleAttributeDescription_GetMinorAttributeRating Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelBattleAttributeDescription.GetName
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfConfigExcelBattleAttributeDescription::GetName(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelBattleAttributeDescription", "GetName");

	Params::ExcelLoaderTgfConfigExcelBattleAttributeDescription_GetName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelBattleAttributeDescription.GetRoleDisplayOrder
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelBattleAttributeDescription::GetRoleDisplayOrder(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelBattleAttributeDescription", "GetRoleDisplayOrder");

	Params::ExcelLoaderTgfConfigExcelBattleAttributeDescription_GetRoleDisplayOrder Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelBattleAbilitySetDescription.GetAbilitySetId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelBattleAbilitySetDescription::GetAbilitySetId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelBattleAbilitySetDescription", "GetAbilitySetId");

	Params::ExcelLoaderTgfConfigExcelBattleAbilitySetDescription_GetAbilitySetId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelBattleAbilitySetDescription.GetAttribute
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAttributeOffset*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAttributeOffset* UExcelLoaderTgfConfigExcelBattleAbilitySetDescription::GetAttribute(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelBattleAbilitySetDescription", "GetAttribute");

	Params::ExcelLoaderTgfConfigExcelBattleAbilitySetDescription_GetAttribute Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelBattleAbilitySetDescription.GetDescription
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfConfigExcelBattleAbilitySetDescription::GetDescription(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelBattleAbilitySetDescription", "GetDescription");

	Params::ExcelLoaderTgfConfigExcelBattleAbilitySetDescription_GetDescription Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelBattleAbilitySetDescription.GetLevel
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelBattleAbilitySetDescription::GetLevel(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelBattleAbilitySetDescription", "GetLevel");

	Params::ExcelLoaderTgfConfigExcelBattleAbilitySetDescription_GetLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigLootDisableLootId.GetAllOfLootIds
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<int64>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int64> UExcelLoaderTgfConfigLootDisableLootId::GetAllOfLootIds()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigLootDisableLootId", "GetAllOfLootIds");

	Params::ExcelLoaderTgfConfigLootDisableLootId_GetAllOfLootIds Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigLootDisableLootId.GetLootIds
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigLootDisableLootId::GetLootIds(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigLootDisableLootId", "GetLootIds");

	Params::ExcelLoaderTgfConfigLootDisableLootId_GetLootIds Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigLootDisableLootId.GetLootIdsSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigLootDisableLootId::GetLootIdsSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigLootDisableLootId", "GetLootIdsSize");

	Params::ExcelLoaderTgfConfigLootDisableLootId_GetLootIdsSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigBattleAffixEffectRuleEffect.GetOffset
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UExcelLoaderTgfConfigBattleAffixEffectRuleEffect::GetOffset(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigBattleAffixEffectRuleEffect", "GetOffset");

	Params::ExcelLoaderTgfConfigBattleAffixEffectRuleEffect_GetOffset Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigBattleAffixEffectRuleEffect.GetPercentage
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigBattleAffixEffectRuleEffect::GetPercentage(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigBattleAffixEffectRuleEffect", "GetPercentage");

	Params::ExcelLoaderTgfConfigBattleAffixEffectRuleEffect_GetPercentage Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelBattleAffixEffectRule.GetAttributeType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelBattleAffixEffectRule::GetAttributeType(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelBattleAffixEffectRule", "GetAttributeType");

	Params::ExcelLoaderTgfConfigExcelBattleAffixEffectRule_GetAttributeType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelBattleAffixEffectRule.GetEffect
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigBattleAffixEffectRuleEffect*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigBattleAffixEffectRuleEffect* UExcelLoaderTgfConfigExcelBattleAffixEffectRule::GetEffect(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelBattleAffixEffectRule", "GetEffect");

	Params::ExcelLoaderTgfConfigExcelBattleAffixEffectRule_GetEffect Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelBattleAffixEffectRule.GetGroupId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelBattleAffixEffectRule::GetGroupId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelBattleAffixEffectRule", "GetGroupId");

	Params::ExcelLoaderTgfConfigExcelBattleAffixEffectRule_GetGroupId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelBattleAffixEffectRule.GetId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelBattleAffixEffectRule::GetId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelBattleAffixEffectRule", "GetId");

	Params::ExcelLoaderTgfConfigExcelBattleAffixEffectRule_GetId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelBattleAffixEffectRule.GetRandomConditionId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelBattleAffixEffectRule::GetRandomConditionId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelBattleAffixEffectRule", "GetRandomConditionId");

	Params::ExcelLoaderTgfConfigExcelBattleAffixEffectRule_GetRandomConditionId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMapSelectModelFeature.GetIconRes
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfConfigExcelMapSelectModelFeature::GetIconRes(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMapSelectModelFeature", "GetIconRes");

	Params::ExcelLoaderTgfConfigExcelMapSelectModelFeature_GetIconRes Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMapSelectModelFeature.GetModelFeatureDescribe
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfConfigExcelMapSelectModelFeature::GetModelFeatureDescribe(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMapSelectModelFeature", "GetModelFeatureDescribe");

	Params::ExcelLoaderTgfConfigExcelMapSelectModelFeature_GetModelFeatureDescribe Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMapSelectModelFeature.GetModelFeatureId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelMapSelectModelFeature::GetModelFeatureId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMapSelectModelFeature", "GetModelFeatureId");

	Params::ExcelLoaderTgfConfigExcelMapSelectModelFeature_GetModelFeatureId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMapSelectModelFeature.GetModelFeatureName
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfConfigExcelMapSelectModelFeature::GetModelFeatureName(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMapSelectModelFeature", "GetModelFeatureName");

	Params::ExcelLoaderTgfConfigExcelMapSelectModelFeature_GetModelFeatureName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMapSelectModelFeature.GetType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelMapSelectModelFeature::GetType(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMapSelectModelFeature", "GetType");

	Params::ExcelLoaderTgfConfigExcelMapSelectModelFeature_GetType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelAffixLevelPoolRule.GetAffixPoolIds
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelAffixLevelPoolRule::GetAffixPoolIds(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelAffixLevelPoolRule", "GetAffixPoolIds");

	Params::ExcelLoaderTgfConfigExcelAffixLevelPoolRule_GetAffixPoolIds Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelAffixLevelPoolRule.GetAffixPoolIdsSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelAffixLevelPoolRule::GetAffixPoolIdsSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelAffixLevelPoolRule", "GetAffixPoolIdsSize");

	Params::ExcelLoaderTgfConfigExcelAffixLevelPoolRule_GetAffixPoolIdsSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelAffixLevelPoolRule.GetAllOfAffixPoolIds
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UExcelLoaderTgfConfigExcelAffixLevelPoolRule::GetAllOfAffixPoolIds()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelAffixLevelPoolRule", "GetAllOfAffixPoolIds");

	Params::ExcelLoaderTgfConfigExcelAffixLevelPoolRule_GetAllOfAffixPoolIds Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelAffixLevelPoolRule.GetLevelId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelAffixLevelPoolRule::GetLevelId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelAffixLevelPoolRule", "GetLevelId");

	Params::ExcelLoaderTgfConfigExcelAffixLevelPoolRule_GetLevelId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelAffixLevelPoolRule.GetRuleId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelAffixLevelPoolRule::GetRuleId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelAffixLevelPoolRule", "GetRuleId");

	Params::ExcelLoaderTgfConfigExcelAffixLevelPoolRule_GetRuleId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelAffixGearSetRule.GetGearSetType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelAffixGearSetRule::GetGearSetType(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelAffixGearSetRule", "GetGearSetType");

	Params::ExcelLoaderTgfConfigExcelAffixGearSetRule_GetGearSetType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelAffixGearSetRule.GetLevel
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelAffixGearSetRule::GetLevel(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelAffixGearSetRule", "GetLevel");

	Params::ExcelLoaderTgfConfigExcelAffixGearSetRule_GetLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelAffixGearSetRule.GetText
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfConfigExcelAffixGearSetRule::GetText(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelAffixGearSetRule", "GetText");

	Params::ExcelLoaderTgfConfigExcelAffixGearSetRule_GetText Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelAffixGearSetRule.GetUnlockLevel
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelAffixGearSetRule::GetUnlockLevel(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelAffixGearSetRule", "GetUnlockLevel");

	Params::ExcelLoaderTgfConfigExcelAffixGearSetRule_GetUnlockLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfQuestProgressConditionData.GetBattleForAcType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfQuestProgressConditionData::GetBattleForAcType(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfQuestProgressConditionData", "GetBattleForAcType");

	Params::ExcelLoaderTgfQuestProgressConditionData_GetBattleForAcType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfQuestProgressConditionData.GetBattleGameOverType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfQuestProgressConditionData::GetBattleGameOverType(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfQuestProgressConditionData", "GetBattleGameOverType");

	Params::ExcelLoaderTgfQuestProgressConditionData_GetBattleGameOverType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfQuestProgressConditionData.GetBattleIsInTeam
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UExcelLoaderTgfQuestProgressConditionData::GetBattleIsInTeam(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfQuestProgressConditionData", "GetBattleIsInTeam");

	Params::ExcelLoaderTgfQuestProgressConditionData_GetBattleIsInTeam Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfQuestProgressConditionData.GetBattleSceneTag
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfQuestProgressConditionData::GetBattleSceneTag(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfQuestProgressConditionData", "GetBattleSceneTag");

	Params::ExcelLoaderTgfQuestProgressConditionData_GetBattleSceneTag Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfQuestProgressConditionData.GetBattleWhichLevelId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfQuestProgressConditionData::GetBattleWhichLevelId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfQuestProgressConditionData", "GetBattleWhichLevelId");

	Params::ExcelLoaderTgfQuestProgressConditionData_GetBattleWhichLevelId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfQuestProgressConditionData.GetBattleWhichLevelType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfQuestProgressConditionData::GetBattleWhichLevelType(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfQuestProgressConditionData", "GetBattleWhichLevelType");

	Params::ExcelLoaderTgfQuestProgressConditionData_GetBattleWhichLevelType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfQuestProgressConditionData.GetBattleWhichOneLevelId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfQuestProgressConditionLevelIds*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfQuestProgressConditionLevelIds* UExcelLoaderTgfQuestProgressConditionData::GetBattleWhichOneLevelId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfQuestProgressConditionData", "GetBattleWhichOneLevelId");

	Params::ExcelLoaderTgfQuestProgressConditionData_GetBattleWhichOneLevelId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfQuestProgressConditionData.GetBattleWhichRoleType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfQuestProgressConditionData::GetBattleWhichRoleType(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfQuestProgressConditionData", "GetBattleWhichRoleType");

	Params::ExcelLoaderTgfQuestProgressConditionData_GetBattleWhichRoleType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfQuestProgressConditionData.GetBattleWhichScenseType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfQuestProgressConditionData::GetBattleWhichScenseType(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfQuestProgressConditionData", "GetBattleWhichScenseType");

	Params::ExcelLoaderTgfQuestProgressConditionData_GetBattleWhichScenseType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfQuestProgressConditionData.GetItemChgChannel
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfQuestProgressConditionData::GetItemChgChannel(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfQuestProgressConditionData", "GetItemChgChannel");

	Params::ExcelLoaderTgfQuestProgressConditionData_GetItemChgChannel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfQuestProgressConditionData.GetItemChgMainType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfQuestProgressConditionData::GetItemChgMainType(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfQuestProgressConditionData", "GetItemChgMainType");

	Params::ExcelLoaderTgfQuestProgressConditionData_GetItemChgMainType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfQuestProgressConditionData.GetItemChgSubType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfQuestProgressConditionItemChgSubType*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfQuestProgressConditionItemChgSubType* UExcelLoaderTgfQuestProgressConditionData::GetItemChgSubType(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfQuestProgressConditionData", "GetItemChgSubType");

	Params::ExcelLoaderTgfQuestProgressConditionData_GetItemChgSubType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfQuestProgressConditionData.GetItemGemShapeType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfQuestProgressConditionData::GetItemGemShapeType(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfQuestProgressConditionData", "GetItemGemShapeType");

	Params::ExcelLoaderTgfQuestProgressConditionData_GetItemGemShapeType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfQuestProgressConditionData.GetItemMajorType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfQuestProgressConditionData::GetItemMajorType(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfQuestProgressConditionData", "GetItemMajorType");

	Params::ExcelLoaderTgfQuestProgressConditionData_GetItemMajorType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfQuestProgressConditionData.GetItemRaity
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfQuestProgressConditionItemRarity*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfQuestProgressConditionItemRarity* UExcelLoaderTgfQuestProgressConditionData::GetItemRaity(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfQuestProgressConditionData", "GetItemRaity");

	Params::ExcelLoaderTgfQuestProgressConditionData_GetItemRaity Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfQuestProgressConditionData.GetLimitCase
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfQuestProgressConditionData::GetLimitCase()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfQuestProgressConditionData", "GetLimitCase");

	Params::ExcelLoaderTgfQuestProgressConditionData_GetLimitCase Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfQuestProgressConditionData.GetPlayerCausedDamageForActorLt
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfQuestProgressConditionData::GetPlayerCausedDamageForActorLt(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfQuestProgressConditionData", "GetPlayerCausedDamageForActorLt");

	Params::ExcelLoaderTgfQuestProgressConditionData_GetPlayerCausedDamageForActorLt Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfQuestProgressConditionData.GetPlayerCausedDamageForActorNotLt
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfQuestProgressConditionData::GetPlayerCausedDamageForActorNotLt(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfQuestProgressConditionData", "GetPlayerCausedDamageForActorNotLt");

	Params::ExcelLoaderTgfQuestProgressConditionData_GetPlayerCausedDamageForActorNotLt Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfQuestProgressConditionData.GetPlayerCausedDamageLt
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfQuestProgressConditionData::GetPlayerCausedDamageLt(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfQuestProgressConditionData", "GetPlayerCausedDamageLt");

	Params::ExcelLoaderTgfQuestProgressConditionData_GetPlayerCausedDamageLt Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfQuestProgressConditionData.GetPlayerCausedDamageNotLt
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfQuestProgressConditionData::GetPlayerCausedDamageNotLt(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfQuestProgressConditionData", "GetPlayerCausedDamageNotLt");

	Params::ExcelLoaderTgfQuestProgressConditionData_GetPlayerCausedDamageNotLt Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfQuestProgressConditionData.GetPlayerCausedDamagePercentNotLt
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfQuestProgressConditionData::GetPlayerCausedDamagePercentNotLt(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfQuestProgressConditionData", "GetPlayerCausedDamagePercentNotLt");

	Params::ExcelLoaderTgfQuestProgressConditionData_GetPlayerCausedDamagePercentNotLt Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfQuestProgressConditionData.GetPlayerCausedHealLt
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfQuestProgressConditionData::GetPlayerCausedHealLt(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfQuestProgressConditionData", "GetPlayerCausedHealLt");

	Params::ExcelLoaderTgfQuestProgressConditionData_GetPlayerCausedHealLt Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfQuestProgressConditionData.GetPlayerCausedHealNotLt
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfQuestProgressConditionData::GetPlayerCausedHealNotLt(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfQuestProgressConditionData", "GetPlayerCausedHealNotLt");

	Params::ExcelLoaderTgfQuestProgressConditionData_GetPlayerCausedHealNotLt Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfQuestProgressConditionData.GetPlayerCausedHealPercentNotLt
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfQuestProgressConditionData::GetPlayerCausedHealPercentNotLt(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfQuestProgressConditionData", "GetPlayerCausedHealPercentNotLt");

	Params::ExcelLoaderTgfQuestProgressConditionData_GetPlayerCausedHealPercentNotLt Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfQuestProgressConditionData.GetPlayerDeathEachLt
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfQuestProgressConditionData::GetPlayerDeathEachLt(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfQuestProgressConditionData", "GetPlayerDeathEachLt");

	Params::ExcelLoaderTgfQuestProgressConditionData_GetPlayerDeathEachLt Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfQuestProgressConditionData.GetPlayerGotDamageLt
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfQuestProgressConditionData::GetPlayerGotDamageLt(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfQuestProgressConditionData", "GetPlayerGotDamageLt");

	Params::ExcelLoaderTgfQuestProgressConditionData_GetPlayerGotDamageLt Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfQuestProgressConditionData.GetPlayerGotDamageNotLt
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfQuestProgressConditionData::GetPlayerGotDamageNotLt(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfQuestProgressConditionData", "GetPlayerGotDamageNotLt");

	Params::ExcelLoaderTgfQuestProgressConditionData_GetPlayerGotDamageNotLt Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfQuestProgressConditionData.GetPlayerKillActorEachNotLt
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfQuestProgressConditionData::GetPlayerKillActorEachNotLt(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfQuestProgressConditionData", "GetPlayerKillActorEachNotLt");

	Params::ExcelLoaderTgfQuestProgressConditionData_GetPlayerKillActorEachNotLt Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfQuestProgressConditionData.GetPlayerKillActorLt
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfQuestProgressConditionData::GetPlayerKillActorLt(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfQuestProgressConditionData", "GetPlayerKillActorLt");

	Params::ExcelLoaderTgfQuestProgressConditionData_GetPlayerKillActorLt Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfQuestProgressConditionData.GetPlayerKillActorNotLt
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfQuestProgressConditionData::GetPlayerKillActorNotLt(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfQuestProgressConditionData", "GetPlayerKillActorNotLt");

	Params::ExcelLoaderTgfQuestProgressConditionData_GetPlayerKillActorNotLt Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfQuestProgressConditionData.GetPlayerKillLt
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfQuestProgressConditionData::GetPlayerKillLt(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfQuestProgressConditionData", "GetPlayerKillLt");

	Params::ExcelLoaderTgfQuestProgressConditionData_GetPlayerKillLt Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfQuestProgressConditionData.GetPlayerKillNotLt
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfQuestProgressConditionData::GetPlayerKillNotLt(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfQuestProgressConditionData", "GetPlayerKillNotLt");

	Params::ExcelLoaderTgfQuestProgressConditionData_GetPlayerKillNotLt Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfQuestProgressConditionData.GetPlayerMatchPoint
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UExcelLoaderTgfQuestProgressConditionData::GetPlayerMatchPoint(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfQuestProgressConditionData", "GetPlayerMatchPoint");

	Params::ExcelLoaderTgfQuestProgressConditionData_GetPlayerMatchPoint Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfQuestProgressConditionData.GetPlayerRivalWinQtyLt
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfQuestProgressConditionData::GetPlayerRivalWinQtyLt(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfQuestProgressConditionData", "GetPlayerRivalWinQtyLt");

	Params::ExcelLoaderTgfQuestProgressConditionData_GetPlayerRivalWinQtyLt Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfQuestProgressConditionData.GetRoleCreatedTimeGtQuest
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfQuestProgressConditionData::GetRoleCreatedTimeGtQuest(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfQuestProgressConditionData", "GetRoleCreatedTimeGtQuest");

	Params::ExcelLoaderTgfQuestProgressConditionData_GetRoleCreatedTimeGtQuest Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfQuestProgressConditionData.GetRoleHistoryMaxLevelLess
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfQuestProgressConditionData::GetRoleHistoryMaxLevelLess(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfQuestProgressConditionData", "GetRoleHistoryMaxLevelLess");

	Params::ExcelLoaderTgfQuestProgressConditionData_GetRoleHistoryMaxLevelLess Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfQuestProgressConditionData.GetRoleLevel
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfQuestProgressConditionData::GetRoleLevel(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfQuestProgressConditionData", "GetRoleLevel");

	Params::ExcelLoaderTgfQuestProgressConditionData_GetRoleLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfQuestProgressConditionData.GetRoleWhichCareer
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfQuestProgressConditionData::GetRoleWhichCareer(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfQuestProgressConditionData", "GetRoleWhichCareer");

	Params::ExcelLoaderTgfQuestProgressConditionData_GetRoleWhichCareer Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfQuestProgressConditionData.GetRoleWhichForce
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfQuestProgressConditionData::GetRoleWhichForce(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfQuestProgressConditionData", "GetRoleWhichForce");

	Params::ExcelLoaderTgfQuestProgressConditionData_GetRoleWhichForce Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfQuestProgressConditionData.GetRoleWhichGender
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfQuestProgressConditionData::GetRoleWhichGender(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfQuestProgressConditionData", "GetRoleWhichGender");

	Params::ExcelLoaderTgfQuestProgressConditionData_GetRoleWhichGender Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfQuestProgressConditionData.GetRoleWhichRace
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfQuestProgressConditionData::GetRoleWhichRace(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfQuestProgressConditionData", "GetRoleWhichRace");

	Params::ExcelLoaderTgfQuestProgressConditionData_GetRoleWhichRace Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfQuestProgressConditionData.GetTotalCoinGreaterThan
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDCoin*             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDCoin* UExcelLoaderTgfQuestProgressConditionData::GetTotalCoinGreaterThan(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfQuestProgressConditionData", "GetTotalCoinGreaterThan");

	Params::ExcelLoaderTgfQuestProgressConditionData_GetTotalCoinGreaterThan Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfQuestProgressConditionData.GetTotalCoinLessThan
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDCoin*             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDCoin* UExcelLoaderTgfQuestProgressConditionData::GetTotalCoinLessThan(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfQuestProgressConditionData", "GetTotalCoinLessThan");

	Params::ExcelLoaderTgfQuestProgressConditionData_GetTotalCoinLessThan Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfQuestProgressConditionData.GetTotalCoinNotGt
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDCoin*             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDCoin* UExcelLoaderTgfQuestProgressConditionData::GetTotalCoinNotGt(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfQuestProgressConditionData", "GetTotalCoinNotGt");

	Params::ExcelLoaderTgfQuestProgressConditionData_GetTotalCoinNotGt Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfQuestProgressConditionData.GetTotalCoinNotLt
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDCoin*             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDCoin* UExcelLoaderTgfQuestProgressConditionData::GetTotalCoinNotLt(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfQuestProgressConditionData", "GetTotalCoinNotLt");

	Params::ExcelLoaderTgfQuestProgressConditionData_GetTotalCoinNotLt Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfQuestProgressConditionData.GetTotalQuestWorthLessThan
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfQuestProgressConditionData::GetTotalQuestWorthLessThan(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfQuestProgressConditionData", "GetTotalQuestWorthLessThan");

	Params::ExcelLoaderTgfQuestProgressConditionData_GetTotalQuestWorthLessThan Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelAffixGearSetMapRule.GetEquipId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelAffixGearSetMapRule::GetEquipId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelAffixGearSetMapRule", "GetEquipId");

	Params::ExcelLoaderTgfConfigExcelAffixGearSetMapRule_GetEquipId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelAffixGearSetMapRule.GetGearSetType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelAffixGearSetMapRule::GetGearSetType(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelAffixGearSetMapRule", "GetGearSetType");

	Params::ExcelLoaderTgfConfigExcelAffixGearSetMapRule_GetGearSetType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelAffixMonsterPoolRule.GetAffixPoolIds
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelAffixMonsterPoolRule::GetAffixPoolIds(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelAffixMonsterPoolRule", "GetAffixPoolIds");

	Params::ExcelLoaderTgfConfigExcelAffixMonsterPoolRule_GetAffixPoolIds Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelAffixMonsterPoolRule.GetAffixPoolIdsSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelAffixMonsterPoolRule::GetAffixPoolIdsSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelAffixMonsterPoolRule", "GetAffixPoolIdsSize");

	Params::ExcelLoaderTgfConfigExcelAffixMonsterPoolRule_GetAffixPoolIdsSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelAffixMonsterPoolRule.GetAllOfAffixPoolIds
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UExcelLoaderTgfConfigExcelAffixMonsterPoolRule::GetAllOfAffixPoolIds()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelAffixMonsterPoolRule", "GetAllOfAffixPoolIds");

	Params::ExcelLoaderTgfConfigExcelAffixMonsterPoolRule_GetAllOfAffixPoolIds Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelAffixMonsterPoolRule.GetLevelId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelAffixMonsterPoolRule::GetLevelId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelAffixMonsterPoolRule", "GetLevelId");

	Params::ExcelLoaderTgfConfigExcelAffixMonsterPoolRule_GetLevelId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelAffixMonsterPoolRule.GetMonsterId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelAffixMonsterPoolRule::GetMonsterId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelAffixMonsterPoolRule", "GetMonsterId");

	Params::ExcelLoaderTgfConfigExcelAffixMonsterPoolRule_GetMonsterId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelAffixMonsterPoolRule.GetRuleId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelAffixMonsterPoolRule::GetRuleId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelAffixMonsterPoolRule", "GetRuleId");

	Params::ExcelLoaderTgfConfigExcelAffixMonsterPoolRule_GetRuleId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfMarketInfo.GetAllOfMarketTabIds
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UExcelLoaderTgfMarketInfo::GetAllOfMarketTabIds()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfMarketInfo", "GetAllOfMarketTabIds");

	Params::ExcelLoaderTgfMarketInfo_GetAllOfMarketTabIds Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfMarketInfo.GetAllOfSharedMarketTabIds
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UExcelLoaderTgfMarketInfo::GetAllOfSharedMarketTabIds()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfMarketInfo", "GetAllOfSharedMarketTabIds");

	Params::ExcelLoaderTgfMarketInfo_GetAllOfSharedMarketTabIds Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfMarketInfo.GetDisplayOrder
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfMarketInfo::GetDisplayOrder(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfMarketInfo", "GetDisplayOrder");

	Params::ExcelLoaderTgfMarketInfo_GetDisplayOrder Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfMarketInfo.GetIsOnSale
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UExcelLoaderTgfMarketInfo::GetIsOnSale(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfMarketInfo", "GetIsOnSale");

	Params::ExcelLoaderTgfMarketInfo_GetIsOnSale Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfMarketInfo.GetMarketId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfMarketInfo::GetMarketId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfMarketInfo", "GetMarketId");

	Params::ExcelLoaderTgfMarketInfo_GetMarketId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfMarketInfo.GetMarketTabIds
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfMarketInfo::GetMarketTabIds(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfMarketInfo", "GetMarketTabIds");

	Params::ExcelLoaderTgfMarketInfo_GetMarketTabIds Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfMarketInfo.GetMarketTabIdsSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfMarketInfo::GetMarketTabIdsSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfMarketInfo", "GetMarketTabIdsSize");

	Params::ExcelLoaderTgfMarketInfo_GetMarketTabIdsSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfMarketInfo.GetName
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfMarketInfo::GetName(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfMarketInfo", "GetName");

	Params::ExcelLoaderTgfMarketInfo_GetName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfMarketInfo.GetSharedMarketTabIds
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfMarketInfo::GetSharedMarketTabIds(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfMarketInfo", "GetSharedMarketTabIds");

	Params::ExcelLoaderTgfMarketInfo_GetSharedMarketTabIds Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfMarketInfo.GetSharedMarketTabIdsSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfMarketInfo::GetSharedMarketTabIdsSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfMarketInfo", "GetSharedMarketTabIdsSize");

	Params::ExcelLoaderTgfMarketInfo_GetSharedMarketTabIdsSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfMarketInfo.GetType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfMarketInfo::GetType(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfMarketInfo", "GetType");

	Params::ExcelLoaderTgfMarketInfo_GetType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelChatChannelType.GetBannedDuration
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelChatChannelType::GetBannedDuration(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelChatChannelType", "GetBannedDuration");

	Params::ExcelLoaderTgfConfigExcelChatChannelType_GetBannedDuration Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelChatChannelType.GetBannedRule
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDIntKV*            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDIntKV* UExcelLoaderTgfConfigExcelChatChannelType::GetBannedRule(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelChatChannelType", "GetBannedRule");

	Params::ExcelLoaderTgfConfigExcelChatChannelType_GetBannedRule Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelChatChannelType.GetChatChannelType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelChatChannelType::GetChatChannelType(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelChatChannelType", "GetChatChannelType");

	Params::ExcelLoaderTgfConfigExcelChatChannelType_GetChatChannelType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelChatChannelType.GetGcExpireDuration
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfConfigExcelChatChannelType::GetGcExpireDuration(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelChatChannelType", "GetGcExpireDuration");

	Params::ExcelLoaderTgfConfigExcelChatChannelType_GetGcExpireDuration Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelChatChannelType.GetGcLogCount
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelChatChannelType::GetGcLogCount(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelChatChannelType", "GetGcLogCount");

	Params::ExcelLoaderTgfConfigExcelChatChannelType_GetGcLogCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelChatChannelType.GetMaxLogCount
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelChatChannelType::GetMaxLogCount(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelChatChannelType", "GetMaxLogCount");

	Params::ExcelLoaderTgfConfigExcelChatChannelType_GetMaxLogCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelChatChannelType.GetMemoryOnly
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UExcelLoaderTgfConfigExcelChatChannelType::GetMemoryOnly(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelChatChannelType", "GetMemoryOnly");

	Params::ExcelLoaderTgfConfigExcelChatChannelType_GetMemoryOnly Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelChatChannelType.GetWordsLimit
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelChatChannelType::GetWordsLimit(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelChatChannelType", "GetWordsLimit");

	Params::ExcelLoaderTgfConfigExcelChatChannelType_GetWordsLimit Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelChatTeenGlobalMailTip.GetKey
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfConfigExcelChatTeenGlobalMailTip::GetKey(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelChatTeenGlobalMailTip", "GetKey");

	Params::ExcelLoaderTgfConfigExcelChatTeenGlobalMailTip_GetKey Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelChatTeenGlobalMailTip.GetNowState
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelChatTeenGlobalMailTip::GetNowState(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelChatTeenGlobalMailTip", "GetNowState");

	Params::ExcelLoaderTgfConfigExcelChatTeenGlobalMailTip_GetNowState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelChatTeenGlobalMailTip.GetOriginState
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelChatTeenGlobalMailTip::GetOriginState(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelChatTeenGlobalMailTip", "GetOriginState");

	Params::ExcelLoaderTgfConfigExcelChatTeenGlobalMailTip_GetOriginState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMapPool.GetAllOfMapId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UExcelLoaderTgfConfigExcelMapPool::GetAllOfMapId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMapPool", "GetAllOfMapId");

	Params::ExcelLoaderTgfConfigExcelMapPool_GetAllOfMapId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMapPool.GetMapId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelMapPool::GetMapId(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMapPool", "GetMapId");

	Params::ExcelLoaderTgfConfigExcelMapPool_GetMapId Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMapPool.GetMapIdSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelMapPool::GetMapIdSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMapPool", "GetMapIdSize");

	Params::ExcelLoaderTgfConfigExcelMapPool_GetMapIdSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMapPool.GetMapPoolId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelMapPool::GetMapPoolId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMapPool", "GetMapPoolId");

	Params::ExcelLoaderTgfConfigExcelMapPool_GetMapPoolId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelChatTeenMailTip.GetChatType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelChatTeenMailTip::GetChatType(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelChatTeenMailTip", "GetChatType");

	Params::ExcelLoaderTgfConfigExcelChatTeenMailTip_GetChatType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelChatTeenMailTip.GetKey
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfConfigExcelChatTeenMailTip::GetKey(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelChatTeenMailTip", "GetKey");

	Params::ExcelLoaderTgfConfigExcelChatTeenMailTip_GetKey Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelChatTeenMailTip.GetOperate
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelChatTeenMailTip::GetOperate(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelChatTeenMailTip", "GetOperate");

	Params::ExcelLoaderTgfConfigExcelChatTeenMailTip_GetOperate Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelChatTeenRegisterMailTip.GetGlobalStatus
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelChatTeenRegisterMailTip::GetGlobalStatus(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelChatTeenRegisterMailTip", "GetGlobalStatus");

	Params::ExcelLoaderTgfConfigExcelChatTeenRegisterMailTip_GetGlobalStatus Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelChatTeenRegisterMailTip.GetKey
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfConfigExcelChatTeenRegisterMailTip::GetKey(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelChatTeenRegisterMailTip", "GetKey");

	Params::ExcelLoaderTgfConfigExcelChatTeenRegisterMailTip_GetKey Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMarketProductItem.GetDisplayTemplate
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfConfigExcelMarketProductItem::GetDisplayTemplate(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMarketProductItem", "GetDisplayTemplate");

	Params::ExcelLoaderTgfConfigExcelMarketProductItem_GetDisplayTemplate Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMarketProductItem.GetMarketTabId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelMarketProductItem::GetMarketTabId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMarketProductItem", "GetMarketTabId");

	Params::ExcelLoaderTgfConfigExcelMarketProductItem_GetMarketTabId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMarketProductItem.GetProduct
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfMarketProductItem* ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfMarketProductItem* UExcelLoaderTgfConfigExcelMarketProductItem::GetProduct(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMarketProductItem", "GetProduct");

	Params::ExcelLoaderTgfConfigExcelMarketProductItem_GetProduct Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMarketProductItem.GetProductId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelMarketProductItem::GetProductId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMarketProductItem", "GetProductId");

	Params::ExcelLoaderTgfConfigExcelMarketProductItem_GetProductId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMarketProductItem.GetRefreshPoolId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelMarketProductItem::GetRefreshPoolId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMarketProductItem", "GetRefreshPoolId");

	Params::ExcelLoaderTgfConfigExcelMarketProductItem_GetRefreshPoolId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigUESourceFirstLevelAttrDataAsset.GetId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigUESourceFirstLevelAttrDataAsset::GetId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigUESourceFirstLevelAttrDataAsset", "GetId");

	Params::ExcelLoaderTgfConfigUESourceFirstLevelAttrDataAsset_GetId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigUESourceFirstLevelAttrDataAsset.GetUePath
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfConfigUESourceFirstLevelAttrDataAsset::GetUePath(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigUESourceFirstLevelAttrDataAsset", "GetUePath");

	Params::ExcelLoaderTgfConfigUESourceFirstLevelAttrDataAsset_GetUePath Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelErrorCode.GetErrorCode
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelErrorCode::GetErrorCode(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelErrorCode", "GetErrorCode");

	Params::ExcelLoaderTgfConfigExcelErrorCode_GetErrorCode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelErrorCode.GetInvisible
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UExcelLoaderTgfConfigExcelErrorCode::GetInvisible(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelErrorCode", "GetInvisible");

	Params::ExcelLoaderTgfConfigExcelErrorCode_GetInvisible Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelErrorCode.GetPopupMode
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelErrorCode::GetPopupMode(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelErrorCode", "GetPopupMode");

	Params::ExcelLoaderTgfConfigExcelErrorCode_GetPopupMode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelLootSourceMap.GetId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelLootSourceMap::GetId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelLootSourceMap", "GetId");

	Params::ExcelLoaderTgfConfigExcelLootSourceMap_GetId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelLootSourceMap.GetName
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfConfigExcelLootSourceMap::GetName(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelLootSourceMap", "GetName");

	Params::ExcelLoaderTgfConfigExcelLootSourceMap_GetName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelSkillCalculate.GetFormulaLuaId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfConfigExcelSkillCalculate::GetFormulaLuaId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelSkillCalculate", "GetFormulaLuaId");

	Params::ExcelLoaderTgfConfigExcelSkillCalculate_GetFormulaLuaId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelSkillCalculate.GetGeKey
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfConfigExcelSkillCalculate::GetGeKey(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelSkillCalculate", "GetGeKey");

	Params::ExcelLoaderTgfConfigExcelSkillCalculate_GetGeKey Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelSkillCalculate.GetId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfConfigExcelSkillCalculate::GetId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelSkillCalculate", "GetId");

	Params::ExcelLoaderTgfConfigExcelSkillCalculate_GetId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelCuverTableSource.GetId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelCuverTableSource::GetId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelCuverTableSource", "GetId");

	Params::ExcelLoaderTgfConfigExcelCuverTableSource_GetId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelCuverTableSource.GetSource
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfConfigExcelCuverTableSource::GetSource(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelCuverTableSource", "GetSource");

	Params::ExcelLoaderTgfConfigExcelCuverTableSource_GetSource Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDRoleDressUp.GetAllOfFacePinchings
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfDRoleFacePinching*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfDRoleFacePinching*> UExcelLoaderTgfDRoleDressUp::GetAllOfFacePinchings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDRoleDressUp", "GetAllOfFacePinchings");

	Params::ExcelLoaderTgfDRoleDressUp_GetAllOfFacePinchings Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDRoleDressUp.GetCurrentFacePinching
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDRoleFacePinching* ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDRoleFacePinching* UExcelLoaderTgfDRoleDressUp::GetCurrentFacePinching(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDRoleDressUp", "GetCurrentFacePinching");

	Params::ExcelLoaderTgfDRoleDressUp_GetCurrentFacePinching Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDRoleDressUp.GetDefaultDressUpTypeId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDRoleDressUp::GetDefaultDressUpTypeId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDRoleDressUp", "GetDefaultDressUpTypeId");

	Params::ExcelLoaderTgfDRoleDressUp_GetDefaultDressUpTypeId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDRoleDressUp.GetDressFacadeInfo
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfUserRoleSkinWearInfo*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfUserRoleSkinWearInfo* UExcelLoaderTgfDRoleDressUp::GetDressFacadeInfo(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDRoleDressUp", "GetDressFacadeInfo");

	Params::ExcelLoaderTgfDRoleDressUp_GetDressFacadeInfo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDRoleDressUp.GetFacePinchings
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDRoleFacePinching* ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDRoleFacePinching* UExcelLoaderTgfDRoleDressUp::GetFacePinchings(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDRoleDressUp", "GetFacePinchings");

	Params::ExcelLoaderTgfDRoleDressUp_GetFacePinchings Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDRoleDressUp.GetFacePinchingsSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfDRoleDressUp::GetFacePinchingsSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDRoleDressUp", "GetFacePinchingsSize");

	Params::ExcelLoaderTgfDRoleDressUp_GetFacePinchingsSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDRoleDressUp.GetPinchingTemplateId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDRoleDressUp::GetPinchingTemplateId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDRoleDressUp", "GetPinchingTemplateId");

	Params::ExcelLoaderTgfDRoleDressUp_GetPinchingTemplateId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelSkillNumExchange.GetAsPercent
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UExcelLoaderTgfConfigExcelSkillNumExchange::GetAsPercent(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelSkillNumExchange", "GetAsPercent");

	Params::ExcelLoaderTgfConfigExcelSkillNumExchange_GetAsPercent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelSkillNumExchange.GetDecimal
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelSkillNumExchange::GetDecimal(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelSkillNumExchange", "GetDecimal");

	Params::ExcelLoaderTgfConfigExcelSkillNumExchange_GetDecimal Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelSkillNumExchange.GetGeKey
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfConfigExcelSkillNumExchange::GetGeKey(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelSkillNumExchange", "GetGeKey");

	Params::ExcelLoaderTgfConfigExcelSkillNumExchange_GetGeKey Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelSkillNumExchange.GetId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfConfigExcelSkillNumExchange::GetId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelSkillNumExchange", "GetId");

	Params::ExcelLoaderTgfConfigExcelSkillNumExchange_GetId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelSkillNumExchange.GetValue
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfConfigExcelSkillNumExchange::GetValue(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelSkillNumExchange", "GetValue");

	Params::ExcelLoaderTgfConfigExcelSkillNumExchange_GetValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDStringKVS.GetAllOfDatas
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfDStringKV*> ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfDStringKV*> UExcelLoaderTgfDStringKVS::GetAllOfDatas()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDStringKVS", "GetAllOfDatas");

	Params::ExcelLoaderTgfDStringKVS_GetAllOfDatas Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDStringKVS.GetDatas
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDStringKV*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDStringKV* UExcelLoaderTgfDStringKVS::GetDatas(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDStringKVS", "GetDatas");

	Params::ExcelLoaderTgfDStringKVS_GetDatas Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDStringKVS.GetDatasSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfDStringKVS::GetDatasSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDStringKVS", "GetDatasSize");

	Params::ExcelLoaderTgfDStringKVS_GetDatasSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDStringKVS.GetVersion
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfDStringKVS::GetVersion(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDStringKVS", "GetVersion");

	Params::ExcelLoaderTgfDStringKVS_GetVersion Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfMarketSpecialCost.GetAllOfCostOptions
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfMarketNormalOptionCost*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfMarketNormalOptionCost*> UExcelLoaderTgfMarketSpecialCost::GetAllOfCostOptions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfMarketSpecialCost", "GetAllOfCostOptions");

	Params::ExcelLoaderTgfMarketSpecialCost_GetAllOfCostOptions Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfMarketSpecialCost.GetCostOptions
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfMarketNormalOptionCost*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfMarketNormalOptionCost* UExcelLoaderTgfMarketSpecialCost::GetCostOptions(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfMarketSpecialCost", "GetCostOptions");

	Params::ExcelLoaderTgfMarketSpecialCost_GetCostOptions Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfMarketSpecialCost.GetCostOptionsSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfMarketSpecialCost::GetCostOptionsSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfMarketSpecialCost", "GetCostOptionsSize");

	Params::ExcelLoaderTgfMarketSpecialCost_GetCostOptionsSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfMarketSpecialCost.GetStock
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfMarketSpecialCost::GetStock(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfMarketSpecialCost", "GetStock");

	Params::ExcelLoaderTgfMarketSpecialCost_GetStock Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDStringKV.GetKey
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfDStringKV::GetKey(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDStringKV", "GetKey");

	Params::ExcelLoaderTgfDStringKV_GetKey Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDStringKV.GetValue
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfDStringKV::GetValue(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDStringKV", "GetValue");

	Params::ExcelLoaderTgfDStringKV_GetValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDLimitOptionSeason.GetSeasonId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDLimitOptionSeason::GetSeasonId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDLimitOptionSeason", "GetSeasonId");

	Params::ExcelLoaderTgfDLimitOptionSeason_GetSeasonId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRoleLevelExp.GetLevel
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelRoleLevelExp::GetLevel(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRoleLevelExp", "GetLevel");

	Params::ExcelLoaderTgfConfigExcelRoleLevelExp_GetLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRoleLevelExp.GetMaxExp
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelRoleLevelExp::GetMaxExp(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRoleLevelExp", "GetMaxExp");

	Params::ExcelLoaderTgfConfigExcelRoleLevelExp_GetMaxExp Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDLimitOption.GetSeason
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDLimitOptionSeason*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDLimitOptionSeason* UExcelLoaderTgfDLimitOption::GetSeason(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDLimitOption", "GetSeason");

	Params::ExcelLoaderTgfDLimitOption_GetSeason Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDPlayerIDKey.GetUserId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfDPlayerIDKey::GetUserId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDPlayerIDKey", "GetUserId");

	Params::ExcelLoaderTgfDPlayerIDKey_GetUserId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDPlayerIDKey.GetZoneId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfDPlayerIDKey::GetZoneId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDPlayerIDKey", "GetZoneId");

	Params::ExcelLoaderTgfDPlayerIDKey_GetZoneId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelLotteryPool.GetAccessKeyTypeId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelLotteryPool::GetAccessKeyTypeId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelLotteryPool", "GetAccessKeyTypeId");

	Params::ExcelLoaderTgfConfigExcelLotteryPool_GetAccessKeyTypeId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelLotteryPool.GetId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelLotteryPool::GetId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelLotteryPool", "GetId");

	Params::ExcelLoaderTgfConfigExcelLotteryPool_GetId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelLotteryPool.GetItemType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelLotteryPool::GetItemType(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelLotteryPool", "GetItemType");

	Params::ExcelLoaderTgfConfigExcelLotteryPool_GetItemType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelLotteryPool.GetRandomPoolId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelLotteryPool::GetRandomPoolId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelLotteryPool", "GetRandomPoolId");

	Params::ExcelLoaderTgfConfigExcelLotteryPool_GetRandomPoolId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDHallData.GetLimitOption
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDLimitOption*      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDLimitOption* UExcelLoaderTgfDHallData::GetLimitOption(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDHallData", "GetLimitOption");

	Params::ExcelLoaderTgfDHallData_GetLimitOption Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDHallData.GetSwitchType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDHallData::GetSwitchType(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDHallData", "GetSwitchType");

	Params::ExcelLoaderTgfDHallData_GetSwitchType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDCompetitionRuleWaiting.GetDisplayTeamMember
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UExcelLoaderTgfDCompetitionRuleWaiting::GetDisplayTeamMember(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDCompetitionRuleWaiting", "GetDisplayTeamMember");

	Params::ExcelLoaderTgfDCompetitionRuleWaiting_GetDisplayTeamMember Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRoleSkinWidgetType.GetAllOfReplaceReward
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfDItemOffset*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfDItemOffset*> UExcelLoaderTgfConfigExcelRoleSkinWidgetType::GetAllOfReplaceReward()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRoleSkinWidgetType", "GetAllOfReplaceReward");

	Params::ExcelLoaderTgfConfigExcelRoleSkinWidgetType_GetAllOfReplaceReward Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRoleSkinWidgetType.GetMeta
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDRoleSkinWidgetMetaIndex*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDRoleSkinWidgetMetaIndex* UExcelLoaderTgfConfigExcelRoleSkinWidgetType::GetMeta(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRoleSkinWidgetType", "GetMeta");

	Params::ExcelLoaderTgfConfigExcelRoleSkinWidgetType_GetMeta Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRoleSkinWidgetType.GetReplaceReward
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDItemOffset*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDItemOffset* UExcelLoaderTgfConfigExcelRoleSkinWidgetType::GetReplaceReward(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRoleSkinWidgetType", "GetReplaceReward");

	Params::ExcelLoaderTgfConfigExcelRoleSkinWidgetType_GetReplaceReward Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRoleSkinWidgetType.GetReplaceRewardSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelRoleSkinWidgetType::GetReplaceRewardSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRoleSkinWidgetType", "GetReplaceRewardSize");

	Params::ExcelLoaderTgfConfigExcelRoleSkinWidgetType_GetReplaceRewardSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRoleSkinWidgetType.GetTypeId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelRoleSkinWidgetType::GetTypeId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRoleSkinWidgetType", "GetTypeId");

	Params::ExcelLoaderTgfConfigExcelRoleSkinWidgetType_GetTypeId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDCompetitionRuleMatching.GetConfirmTimeout
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfDCompetitionRuleMatching::GetConfirmTimeout(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDCompetitionRuleMatching", "GetConfirmTimeout");

	Params::ExcelLoaderTgfDCompetitionRuleMatching_GetConfirmTimeout Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDCompetitionRuleReady.GetBanMap
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfDCompetitionRuleReady::GetBanMap(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDCompetitionRuleReady", "GetBanMap");

	Params::ExcelLoaderTgfDCompetitionRuleReady_GetBanMap Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDCompetitionRuleReady.GetBanRole
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfDCompetitionRuleReady::GetBanRole(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDCompetitionRuleReady", "GetBanRole");

	Params::ExcelLoaderTgfDCompetitionRuleReady_GetBanRole Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDCompetitionRuleReady.GetMapPoolId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDCompetitionRuleReady::GetMapPoolId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDCompetitionRuleReady", "GetMapPoolId");

	Params::ExcelLoaderTgfDCompetitionRuleReady_GetMapPoolId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDCompetitionRuleReady.GetSelectMap
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfDCompetitionRuleReady::GetSelectMap(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDCompetitionRuleReady", "GetSelectMap");

	Params::ExcelLoaderTgfDCompetitionRuleReady_GetSelectMap Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDCompetitionRuleReady.GetSelectRole
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfDCompetitionRuleReady::GetSelectRole(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDCompetitionRuleReady", "GetSelectRole");

	Params::ExcelLoaderTgfDCompetitionRuleReady_GetSelectRole Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDCompetitionRuleReady.GetSelectSkinWidget
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfDCompetitionRuleReady::GetSelectSkinWidget(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDCompetitionRuleReady", "GetSelectSkinWidget");

	Params::ExcelLoaderTgfDCompetitionRuleReady_GetSelectSkinWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMarketRefreshPool.GetMarketLocationCount
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelMarketRefreshPool::GetMarketLocationCount(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMarketRefreshPool", "GetMarketLocationCount");

	Params::ExcelLoaderTgfConfigExcelMarketRefreshPool_GetMarketLocationCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMarketRefreshPool.GetMarketRefreshPoolId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelMarketRefreshPool::GetMarketRefreshPoolId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMarketRefreshPool", "GetMarketRefreshPoolId");

	Params::ExcelLoaderTgfConfigExcelMarketRefreshPool_GetMarketRefreshPoolId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMarketRefreshPool.GetRefreshPoolRandomWeight
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelMarketRefreshPool::GetRefreshPoolRandomWeight(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMarketRefreshPool", "GetRefreshPoolRandomWeight");

	Params::ExcelLoaderTgfConfigExcelMarketRefreshPool_GetRefreshPoolRandomWeight Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMarketRefreshPool.GetRefreshPoolType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelMarketRefreshPool::GetRefreshPoolType(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMarketRefreshPool", "GetRefreshPoolType");

	Params::ExcelLoaderTgfConfigExcelMarketRefreshPool_GetRefreshPoolType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMarketRefreshPool.GetRoleLevelLimit
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelMarketRefreshPool::GetRoleLevelLimit(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMarketRefreshPool", "GetRoleLevelLimit");

	Params::ExcelLoaderTgfConfigExcelMarketRefreshPool_GetRoleLevelLimit Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDCompetitionRuleBattle.GetBattlingTimeLimit
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfDCompetitionRuleBattle::GetBattlingTimeLimit(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDCompetitionRuleBattle", "GetBattlingTimeLimit");

	Params::ExcelLoaderTgfDCompetitionRuleBattle_GetBattlingTimeLimit Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDCompetitionRuleBattle.GetLoadingTimeLimit
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfDCompetitionRuleBattle::GetLoadingTimeLimit(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDCompetitionRuleBattle", "GetLoadingTimeLimit");

	Params::ExcelLoaderTgfDCompetitionRuleBattle_GetLoadingTimeLimit Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDCompetitionSeasonTime.GetBeginTime
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufTimestamp*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufTimestamp* UExcelLoaderTgfDCompetitionSeasonTime::GetBeginTime(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDCompetitionSeasonTime", "GetBeginTime");

	Params::ExcelLoaderTgfDCompetitionSeasonTime_GetBeginTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDCompetitionSeasonTime.GetEndTime
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufTimestamp*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufTimestamp* UExcelLoaderTgfDCompetitionSeasonTime::GetEndTime(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDCompetitionSeasonTime", "GetEndTime");

	Params::ExcelLoaderTgfDCompetitionSeasonTime_GetEndTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDCompetitionSeasonTime.GetFreezeBeginTime
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDCompetitionSeasonTime::GetFreezeBeginTime(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDCompetitionSeasonTime", "GetFreezeBeginTime");

	Params::ExcelLoaderTgfDCompetitionSeasonTime_GetFreezeBeginTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDCompetitionSeasonTime.GetFreezeEndTime
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDCompetitionSeasonTime::GetFreezeEndTime(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDCompetitionSeasonTime", "GetFreezeEndTime");

	Params::ExcelLoaderTgfDCompetitionSeasonTime_GetFreezeEndTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDCompetitionSeasonTime.GetShowTime
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufTimestamp*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufTimestamp* UExcelLoaderTgfDCompetitionSeasonTime::GetShowTime(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDCompetitionSeasonTime", "GetShowTime");

	Params::ExcelLoaderTgfDCompetitionSeasonTime_GetShowTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDStatisticsLimitKey.GetCareer
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDStatisticsLimitKey::GetCareer(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDStatisticsLimitKey", "GetCareer");

	Params::ExcelLoaderTgfDStatisticsLimitKey_GetCareer Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDStatisticsLimitKey.GetLevelId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDStatisticsLimitKey::GetLevelId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDStatisticsLimitKey", "GetLevelId");

	Params::ExcelLoaderTgfDStatisticsLimitKey_GetLevelId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDStatisticsLimitKey.GetPvpMode
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDStatisticsLimitKey::GetPvpMode(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDStatisticsLimitKey", "GetPvpMode");

	Params::ExcelLoaderTgfDStatisticsLimitKey_GetPvpMode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDStatisticsLimitKey.GetRarity
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDStatisticsLimitKey::GetRarity(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDStatisticsLimitKey", "GetRarity");

	Params::ExcelLoaderTgfDStatisticsLimitKey_GetRarity Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDStatisticsLimitKey.GetSeasonId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDStatisticsLimitKey::GetSeasonId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDStatisticsLimitKey", "GetSeasonId");

	Params::ExcelLoaderTgfDStatisticsLimitKey_GetSeasonId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDStatisticsLimitKey.GetType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDStatisticsLimitKey::GetType(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDStatisticsLimitKey", "GetType");

	Params::ExcelLoaderTgfDStatisticsLimitKey_GetType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDCompetitionCost.GetCount
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDCompetitionCost::GetCount(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDCompetitionCost", "GetCount");

	Params::ExcelLoaderTgfDCompetitionCost_GetCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDCompetitionCost.GetItemId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDCompetitionCost::GetItemId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDCompetitionCost", "GetItemId");

	Params::ExcelLoaderTgfDCompetitionCost_GetItemId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDCompetitionSeasonDetail.GetAllOfCompetitionCosts
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfDCompetitionCost*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfDCompetitionCost*> UExcelLoaderTgfDCompetitionSeasonDetail::GetAllOfCompetitionCosts()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDCompetitionSeasonDetail", "GetAllOfCompetitionCosts");

	Params::ExcelLoaderTgfDCompetitionSeasonDetail_GetAllOfCompetitionCosts Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDCompetitionSeasonDetail.GetCompetitionCosts
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDCompetitionCost*  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDCompetitionCost* UExcelLoaderTgfDCompetitionSeasonDetail::GetCompetitionCosts(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDCompetitionSeasonDetail", "GetCompetitionCosts");

	Params::ExcelLoaderTgfDCompetitionSeasonDetail_GetCompetitionCosts Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDCompetitionSeasonDetail.GetCompetitionCostsSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfDCompetitionSeasonDetail::GetCompetitionCostsSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDCompetitionSeasonDetail", "GetCompetitionCostsSize");

	Params::ExcelLoaderTgfDCompetitionSeasonDetail_GetCompetitionCostsSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDCompetitionSeasonDetail.GetCompetitionRankingId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDCompetitionSeasonDetail::GetCompetitionRankingId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDCompetitionSeasonDetail", "GetCompetitionRankingId");

	Params::ExcelLoaderTgfDCompetitionSeasonDetail_GetCompetitionRankingId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDCompetitionSeasonDetail.GetCompetitionRewardId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDCompetitionSeasonDetail::GetCompetitionRewardId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDCompetitionSeasonDetail", "GetCompetitionRewardId");

	Params::ExcelLoaderTgfDCompetitionSeasonDetail_GetCompetitionRewardId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDCompetitionSeasonDetail.GetCompetitionRuleId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDCompetitionSeasonDetail::GetCompetitionRuleId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDCompetitionSeasonDetail", "GetCompetitionRuleId");

	Params::ExcelLoaderTgfDCompetitionSeasonDetail_GetCompetitionRuleId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDCompetitionSeasonDetail.GetConditionId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDCompetitionSeasonDetail::GetConditionId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDCompetitionSeasonDetail", "GetConditionId");

	Params::ExcelLoaderTgfDCompetitionSeasonDetail_GetConditionId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDCompetitionSeasonDetail.GetJudgeRuleId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDCompetitionSeasonDetail::GetJudgeRuleId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDCompetitionSeasonDetail", "GetJudgeRuleId");

	Params::ExcelLoaderTgfDCompetitionSeasonDetail_GetJudgeRuleId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDCompetitionSeasonDetail.GetMatchMakingPoolId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDCompetitionSeasonDetail::GetMatchMakingPoolId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDCompetitionSeasonDetail", "GetMatchMakingPoolId");

	Params::ExcelLoaderTgfDCompetitionSeasonDetail_GetMatchMakingPoolId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMapActivityArgs.GetDetail
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleMapArgsData*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleMapArgsData* UExcelLoaderTgfConfigExcelMapActivityArgs::GetDetail(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMapActivityArgs", "GetDetail");

	Params::ExcelLoaderTgfConfigExcelMapActivityArgs_GetDetail Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMapActivityArgs.GetEnd
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufTimestamp*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufTimestamp* UExcelLoaderTgfConfigExcelMapActivityArgs::GetEnd(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMapActivityArgs", "GetEnd");

	Params::ExcelLoaderTgfConfigExcelMapActivityArgs_GetEnd Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMapActivityArgs.GetLevelId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelMapActivityArgs::GetLevelId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMapActivityArgs", "GetLevelId");

	Params::ExcelLoaderTgfConfigExcelMapActivityArgs_GetLevelId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMapActivityArgs.GetMapArgsConfigId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelMapActivityArgs::GetMapArgsConfigId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMapActivityArgs", "GetMapArgsConfigId");

	Params::ExcelLoaderTgfConfigExcelMapActivityArgs_GetMapArgsConfigId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMapActivityArgs.GetMapId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelMapActivityArgs::GetMapId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMapActivityArgs", "GetMapId");

	Params::ExcelLoaderTgfConfigExcelMapActivityArgs_GetMapId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMapActivityArgs.GetStart
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufTimestamp*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufTimestamp* UExcelLoaderTgfConfigExcelMapActivityArgs::GetStart(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMapActivityArgs", "GetStart");

	Params::ExcelLoaderTgfConfigExcelMapActivityArgs_GetStart Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigDCompetitionRewardLimit.GetMaxCount
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigDCompetitionRewardLimit::GetMaxCount(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigDCompetitionRewardLimit", "GetMaxCount");

	Params::ExcelLoaderTgfConfigDCompetitionRewardLimit_GetMaxCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigDCompetitionRewardLimit.GetPeriodDays
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigDCompetitionRewardLimit::GetPeriodDays(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigDCompetitionRewardLimit", "GetPeriodDays");

	Params::ExcelLoaderTgfConfigDCompetitionRewardLimit_GetPeriodDays Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigDCompetitionRewardLimit.GetStartTime
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufTimestamp*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufTimestamp* UExcelLoaderTgfConfigDCompetitionRewardLimit::GetStartTime(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigDCompetitionRewardLimit", "GetStartTime");

	Params::ExcelLoaderTgfConfigDCompetitionRewardLimit_GetStartTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigDCompetitionReward.GetAllOfItems
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfDItemOffset*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfDItemOffset*> UExcelLoaderTgfConfigDCompetitionReward::GetAllOfItems()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigDCompetitionReward", "GetAllOfItems");

	Params::ExcelLoaderTgfConfigDCompetitionReward_GetAllOfItems Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigDCompetitionReward.GetItems
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDItemOffset*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDItemOffset* UExcelLoaderTgfConfigDCompetitionReward::GetItems(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigDCompetitionReward", "GetItems");

	Params::ExcelLoaderTgfConfigDCompetitionReward_GetItems Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigDCompetitionReward.GetItemsSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigDCompetitionReward::GetItemsSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigDCompetitionReward", "GetItemsSize");

	Params::ExcelLoaderTgfConfigDCompetitionReward_GetItemsSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigDCompetitionReward.GetLimit
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigDCompetitionRewardLimit*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigDCompetitionRewardLimit* UExcelLoaderTgfConfigDCompetitionReward::GetLimit(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigDCompetitionReward", "GetLimit");

	Params::ExcelLoaderTgfConfigDCompetitionReward_GetLimit Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMithrilForcePrestige.GetDescription
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfConfigExcelMithrilForcePrestige::GetDescription(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMithrilForcePrestige", "GetDescription");

	Params::ExcelLoaderTgfConfigExcelMithrilForcePrestige_GetDescription Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMithrilForcePrestige.GetExp
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelMithrilForcePrestige::GetExp(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMithrilForcePrestige", "GetExp");

	Params::ExcelLoaderTgfConfigExcelMithrilForcePrestige_GetExp Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMithrilForcePrestige.GetLevel
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelMithrilForcePrestige::GetLevel(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMithrilForcePrestige", "GetLevel");

	Params::ExcelLoaderTgfConfigExcelMithrilForcePrestige_GetLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMithrilForcePrestige.GetName
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfConfigExcelMithrilForcePrestige::GetName(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMithrilForcePrestige", "GetName");

	Params::ExcelLoaderTgfConfigExcelMithrilForcePrestige_GetName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigDCompetitionRewardGroup.GetAllOfCost
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfDItemOffset*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfDItemOffset*> UExcelLoaderTgfConfigDCompetitionRewardGroup::GetAllOfCost()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigDCompetitionRewardGroup", "GetAllOfCost");

	Params::ExcelLoaderTgfConfigDCompetitionRewardGroup_GetAllOfCost Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigDCompetitionRewardGroup.GetAllOfReward
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigDCompetitionReward*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigDCompetitionReward*> UExcelLoaderTgfConfigDCompetitionRewardGroup::GetAllOfReward()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigDCompetitionRewardGroup", "GetAllOfReward");

	Params::ExcelLoaderTgfConfigDCompetitionRewardGroup_GetAllOfReward Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigDCompetitionRewardGroup.GetCost
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDItemOffset*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDItemOffset* UExcelLoaderTgfConfigDCompetitionRewardGroup::GetCost(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigDCompetitionRewardGroup", "GetCost");

	Params::ExcelLoaderTgfConfigDCompetitionRewardGroup_GetCost Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigDCompetitionRewardGroup.GetCostSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigDCompetitionRewardGroup::GetCostSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigDCompetitionRewardGroup", "GetCostSize");

	Params::ExcelLoaderTgfConfigDCompetitionRewardGroup_GetCostSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigDCompetitionRewardGroup.GetReward
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigDCompetitionReward*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigDCompetitionReward* UExcelLoaderTgfConfigDCompetitionRewardGroup::GetReward(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigDCompetitionRewardGroup", "GetReward");

	Params::ExcelLoaderTgfConfigDCompetitionRewardGroup_GetReward Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigDCompetitionRewardGroup.GetRewardSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigDCompetitionRewardGroup::GetRewardSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigDCompetitionRewardGroup", "GetRewardSize");

	Params::ExcelLoaderTgfConfigDCompetitionRewardGroup_GetRewardSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelCompetitionReward.GetCompetitionRewardId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelCompetitionReward::GetCompetitionRewardId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelCompetitionReward", "GetCompetitionRewardId");

	Params::ExcelLoaderTgfConfigExcelCompetitionReward_GetCompetitionRewardId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelCompetitionReward.GetLose
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigDCompetitionRewardGroup*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigDCompetitionRewardGroup* UExcelLoaderTgfConfigExcelCompetitionReward::GetLose(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelCompetitionReward", "GetLose");

	Params::ExcelLoaderTgfConfigExcelCompetitionReward_GetLose Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelCompetitionReward.GetTie
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigDCompetitionRewardGroup*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigDCompetitionRewardGroup* UExcelLoaderTgfConfigExcelCompetitionReward::GetTie(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelCompetitionReward", "GetTie");

	Params::ExcelLoaderTgfConfigExcelCompetitionReward_GetTie Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelCompetitionReward.GetWin
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigDCompetitionRewardGroup*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigDCompetitionRewardGroup* UExcelLoaderTgfConfigExcelCompetitionReward::GetWin(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelCompetitionReward", "GetWin");

	Params::ExcelLoaderTgfConfigExcelCompetitionReward_GetWin Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMatchingRule.GetAllOfPlayerForceLimit
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigDMatchingRuleForceLimit*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigDMatchingRuleForceLimit*> UExcelLoaderTgfConfigExcelMatchingRule::GetAllOfPlayerForceLimit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMatchingRule", "GetAllOfPlayerForceLimit");

	Params::ExcelLoaderTgfConfigExcelMatchingRule_GetAllOfPlayerForceLimit Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMatchingRule.GetAllOfRegionLimit
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> UExcelLoaderTgfConfigExcelMatchingRule::GetAllOfRegionLimit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMatchingRule", "GetAllOfRegionLimit");

	Params::ExcelLoaderTgfConfigExcelMatchingRule_GetAllOfRegionLimit Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMatchingRule.GetAllOfResultTemplate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UExcelLoaderTgfConfigExcelMatchingRule::GetAllOfResultTemplate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMatchingRule", "GetAllOfResultTemplate");

	Params::ExcelLoaderTgfConfigExcelMatchingRule_GetAllOfResultTemplate Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMatchingRule.GetAllOfRule
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigDMatchingRuleItem*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigDMatchingRuleItem*> UExcelLoaderTgfConfigExcelMatchingRule::GetAllOfRule()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMatchingRule", "GetAllOfRule");

	Params::ExcelLoaderTgfConfigExcelMatchingRule_GetAllOfRule Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMatchingRule.GetChallengeTeamLimit
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelMatchingRule::GetChallengeTeamLimit(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMatchingRule", "GetChallengeTeamLimit");

	Params::ExcelLoaderTgfConfigExcelMatchingRule_GetChallengeTeamLimit Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMatchingRule.GetId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelMatchingRule::GetId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMatchingRule", "GetId");

	Params::ExcelLoaderTgfConfigExcelMatchingRule_GetId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMatchingRule.GetMinTotalPlayer
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelMatchingRule::GetMinTotalPlayer(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMatchingRule", "GetMinTotalPlayer");

	Params::ExcelLoaderTgfConfigExcelMatchingRule_GetMinTotalPlayer Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMatchingRule.GetPlayerForceLimit
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigDMatchingRuleForceLimit*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigDMatchingRuleForceLimit* UExcelLoaderTgfConfigExcelMatchingRule::GetPlayerForceLimit(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMatchingRule", "GetPlayerForceLimit");

	Params::ExcelLoaderTgfConfigExcelMatchingRule_GetPlayerForceLimit Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMatchingRule.GetPlayerForceLimitSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelMatchingRule::GetPlayerForceLimitSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMatchingRule", "GetPlayerForceLimitSize");

	Params::ExcelLoaderTgfConfigExcelMatchingRule_GetPlayerForceLimitSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMatchingRule.GetRegionLimit
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfConfigExcelMatchingRule::GetRegionLimit(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMatchingRule", "GetRegionLimit");

	Params::ExcelLoaderTgfConfigExcelMatchingRule_GetRegionLimit Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMatchingRule.GetRegionLimitSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelMatchingRule::GetRegionLimitSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMatchingRule", "GetRegionLimitSize");

	Params::ExcelLoaderTgfConfigExcelMatchingRule_GetRegionLimitSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMatchingRule.GetResultTemplate
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelMatchingRule::GetResultTemplate(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMatchingRule", "GetResultTemplate");

	Params::ExcelLoaderTgfConfigExcelMatchingRule_GetResultTemplate Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMatchingRule.GetResultTemplateSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelMatchingRule::GetResultTemplateSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMatchingRule", "GetResultTemplateSize");

	Params::ExcelLoaderTgfConfigExcelMatchingRule_GetResultTemplateSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMatchingRule.GetRule
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigDMatchingRuleItem*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigDMatchingRuleItem* UExcelLoaderTgfConfigExcelMatchingRule::GetRule(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMatchingRule", "GetRule");

	Params::ExcelLoaderTgfConfigExcelMatchingRule_GetRule Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMatchingRule.GetRuleSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelMatchingRule::GetRuleSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMatchingRule", "GetRuleSize");

	Params::ExcelLoaderTgfConfigExcelMatchingRule_GetRuleSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMatchingRule.GetStartBattleMinPlayer
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelMatchingRule::GetStartBattleMinPlayer(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMatchingRule", "GetStartBattleMinPlayer");

	Params::ExcelLoaderTgfConfigExcelMatchingRule_GetStartBattleMinPlayer Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMatchingRule.GetTimeLimit
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelMatchingRuleTimeLimit*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelMatchingRuleTimeLimit* UExcelLoaderTgfConfigExcelMatchingRule::GetTimeLimit(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMatchingRule", "GetTimeLimit");

	Params::ExcelLoaderTgfConfigExcelMatchingRule_GetTimeLimit Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelCompetitionRule.GetBasicLimit
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDConditionBasicLimit*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDConditionBasicLimit* UExcelLoaderTgfConfigExcelCompetitionRule::GetBasicLimit(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelCompetitionRule", "GetBasicLimit");

	Params::ExcelLoaderTgfConfigExcelCompetitionRule_GetBasicLimit Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelCompetitionRule.GetBattle
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDCompetitionRuleBattle*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDCompetitionRuleBattle* UExcelLoaderTgfConfigExcelCompetitionRule::GetBattle(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelCompetitionRule", "GetBattle");

	Params::ExcelLoaderTgfConfigExcelCompetitionRule_GetBattle Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelCompetitionRule.GetCompetitionRuleId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelCompetitionRule::GetCompetitionRuleId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelCompetitionRule", "GetCompetitionRuleId");

	Params::ExcelLoaderTgfConfigExcelCompetitionRule_GetCompetitionRuleId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelCompetitionRule.GetCompetitionRuleMinorId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelCompetitionRule::GetCompetitionRuleMinorId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelCompetitionRule", "GetCompetitionRuleMinorId");

	Params::ExcelLoaderTgfConfigExcelCompetitionRule_GetCompetitionRuleMinorId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelCompetitionRule.GetMatching
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDCompetitionRuleMatching*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDCompetitionRuleMatching* UExcelLoaderTgfConfigExcelCompetitionRule::GetMatching(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelCompetitionRule", "GetMatching");

	Params::ExcelLoaderTgfConfigExcelCompetitionRule_GetMatching Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelCompetitionRule.GetReady
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDCompetitionRuleReady*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDCompetitionRuleReady* UExcelLoaderTgfConfigExcelCompetitionRule::GetReady(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelCompetitionRule", "GetReady");

	Params::ExcelLoaderTgfConfigExcelCompetitionRule_GetReady Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelCompetitionRule.GetWaiting
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDCompetitionRuleWaiting*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDCompetitionRuleWaiting* UExcelLoaderTgfConfigExcelCompetitionRule::GetWaiting(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelCompetitionRule", "GetWaiting");

	Params::ExcelLoaderTgfConfigExcelCompetitionRule_GetWaiting Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelCompetitionLevel.GetAllOfMatchingStatisticsIds
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UExcelLoaderTgfConfigExcelCompetitionLevel::GetAllOfMatchingStatisticsIds()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelCompetitionLevel", "GetAllOfMatchingStatisticsIds");

	Params::ExcelLoaderTgfConfigExcelCompetitionLevel_GetAllOfMatchingStatisticsIds Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelCompetitionLevel.GetBattleAffixScoreRequire
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelCompetitionLevel::GetBattleAffixScoreRequire(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelCompetitionLevel", "GetBattleAffixScoreRequire");

	Params::ExcelLoaderTgfConfigExcelCompetitionLevel_GetBattleAffixScoreRequire Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelCompetitionLevel.GetCompetitionLevelId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelCompetitionLevel::GetCompetitionLevelId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelCompetitionLevel", "GetCompetitionLevelId");

	Params::ExcelLoaderTgfConfigExcelCompetitionLevel_GetCompetitionLevelId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelCompetitionLevel.GetDetail
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDCompetitionSeasonDetail*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDCompetitionSeasonDetail* UExcelLoaderTgfConfigExcelCompetitionLevel::GetDetail(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelCompetitionLevel", "GetDetail");

	Params::ExcelLoaderTgfConfigExcelCompetitionLevel_GetDetail Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelCompetitionLevel.GetIsAllowMithrilForce
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UExcelLoaderTgfConfigExcelCompetitionLevel::GetIsAllowMithrilForce(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelCompetitionLevel", "GetIsAllowMithrilForce");

	Params::ExcelLoaderTgfConfigExcelCompetitionLevel_GetIsAllowMithrilForce Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelCompetitionLevel.GetIsOnlyActiveOpen
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UExcelLoaderTgfConfigExcelCompetitionLevel::GetIsOnlyActiveOpen(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelCompetitionLevel", "GetIsOnlyActiveOpen");

	Params::ExcelLoaderTgfConfigExcelCompetitionLevel_GetIsOnlyActiveOpen Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelCompetitionLevel.GetLevelType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelCompetitionLevel::GetLevelType(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelCompetitionLevel", "GetLevelType");

	Params::ExcelLoaderTgfConfigExcelCompetitionLevel_GetLevelType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelCompetitionLevel.GetMatchingStatisticsIds
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelCompetitionLevel::GetMatchingStatisticsIds(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelCompetitionLevel", "GetMatchingStatisticsIds");

	Params::ExcelLoaderTgfConfigExcelCompetitionLevel_GetMatchingStatisticsIds Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelCompetitionLevel.GetMatchingStatisticsIdsSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelCompetitionLevel::GetMatchingStatisticsIdsSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelCompetitionLevel", "GetMatchingStatisticsIdsSize");

	Params::ExcelLoaderTgfConfigExcelCompetitionLevel_GetMatchingStatisticsIdsSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelCompetitionLevel.GetModuleId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelCompetitionLevel::GetModuleId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelCompetitionLevel", "GetModuleId");

	Params::ExcelLoaderTgfConfigExcelCompetitionLevel_GetModuleId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelCompetitionLevel.GetOnProductEnv
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UExcelLoaderTgfConfigExcelCompetitionLevel::GetOnProductEnv(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelCompetitionLevel", "GetOnProductEnv");

	Params::ExcelLoaderTgfConfigExcelCompetitionLevel_GetOnProductEnv Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelCompetitionLevel.GetPvpMode
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelCompetitionLevel::GetPvpMode(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelCompetitionLevel", "GetPvpMode");

	Params::ExcelLoaderTgfConfigExcelCompetitionLevel_GetPvpMode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelCompetitionLevel.GetSeasonId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelCompetitionLevel::GetSeasonId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelCompetitionLevel", "GetSeasonId");

	Params::ExcelLoaderTgfConfigExcelCompetitionLevel_GetSeasonId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelCompetitionLevel.GetSettleInterfaceType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelCompetitionLevel::GetSettleInterfaceType(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelCompetitionLevel", "GetSettleInterfaceType");

	Params::ExcelLoaderTgfConfigExcelCompetitionLevel_GetSettleInterfaceType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelCompetitionLevel.GetTimeLimit
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDCompetitionSeasonTime*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDCompetitionSeasonTime* UExcelLoaderTgfConfigExcelCompetitionLevel::GetTimeLimit(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelCompetitionLevel", "GetTimeLimit");

	Params::ExcelLoaderTgfConfigExcelCompetitionLevel_GetTimeLimit Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelPlayerRegisterItemsType.GetId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelPlayerRegisterItemsType::GetId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelPlayerRegisterItemsType", "GetId");

	Params::ExcelLoaderTgfConfigExcelPlayerRegisterItemsType_GetId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelPlayerRegisterItemsType.GetInitializeItem
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDItemOffset*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDItemOffset* UExcelLoaderTgfConfigExcelPlayerRegisterItemsType::GetInitializeItem(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelPlayerRegisterItemsType", "GetInitializeItem");

	Params::ExcelLoaderTgfConfigExcelPlayerRegisterItemsType_GetInitializeItem Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigDCompetitionRankingRank.GetRankInstanceId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigDCompetitionRankingRank::GetRankInstanceId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigDCompetitionRankingRank", "GetRankInstanceId");

	Params::ExcelLoaderTgfConfigDCompetitionRankingRank_GetRankInstanceId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigDCompetitionRankingRank.GetRankType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigDCompetitionRankingRank::GetRankType(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigDCompetitionRankingRank", "GetRankType");

	Params::ExcelLoaderTgfConfigDCompetitionRankingRank_GetRankType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelCompetitionRanking.GetAllOfSeasonFirstReachDivisionReward
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfDItemOffset*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfDItemOffset*> UExcelLoaderTgfConfigExcelCompetitionRanking::GetAllOfSeasonFirstReachDivisionReward()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelCompetitionRanking", "GetAllOfSeasonFirstReachDivisionReward");

	Params::ExcelLoaderTgfConfigExcelCompetitionRanking_GetAllOfSeasonFirstReachDivisionReward Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelCompetitionRanking.GetEloK
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelCompetitionRanking::GetEloK(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelCompetitionRanking", "GetEloK");

	Params::ExcelLoaderTgfConfigExcelCompetitionRanking_GetEloK Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelCompetitionRanking.GetEloRatingPoint
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelCompetitionRanking::GetEloRatingPoint(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelCompetitionRanking", "GetEloRatingPoint");

	Params::ExcelLoaderTgfConfigExcelCompetitionRanking_GetEloRatingPoint Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelCompetitionRanking.GetLevelRankingId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelCompetitionRanking::GetLevelRankingId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelCompetitionRanking", "GetLevelRankingId");

	Params::ExcelLoaderTgfConfigExcelCompetitionRanking_GetLevelRankingId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelCompetitionRanking.GetRank
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigDCompetitionRankingRank*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigDCompetitionRankingRank* UExcelLoaderTgfConfigExcelCompetitionRanking::GetRank(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelCompetitionRanking", "GetRank");

	Params::ExcelLoaderTgfConfigExcelCompetitionRanking_GetRank Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelCompetitionRanking.GetRankingHint
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelCompetitionRanking::GetRankingHint(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelCompetitionRanking", "GetRankingHint");

	Params::ExcelLoaderTgfConfigExcelCompetitionRanking_GetRankingHint Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelCompetitionRanking.GetRankingNo
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelCompetitionRanking::GetRankingNo(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelCompetitionRanking", "GetRankingNo");

	Params::ExcelLoaderTgfConfigExcelCompetitionRanking_GetRankingNo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelCompetitionRanking.GetSeasonFirstReachDivisionReward
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDItemOffset*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDItemOffset* UExcelLoaderTgfConfigExcelCompetitionRanking::GetSeasonFirstReachDivisionReward(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelCompetitionRanking", "GetSeasonFirstReachDivisionReward");

	Params::ExcelLoaderTgfConfigExcelCompetitionRanking_GetSeasonFirstReachDivisionReward Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelCompetitionRanking.GetSeasonFirstReachDivisionRewardSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelCompetitionRanking::GetSeasonFirstReachDivisionRewardSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelCompetitionRanking", "GetSeasonFirstReachDivisionRewardSize");

	Params::ExcelLoaderTgfConfigExcelCompetitionRanking_GetSeasonFirstReachDivisionRewardSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDTrialLevelCond.GetFailedRange
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDTrialLevelRange*  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDTrialLevelRange* UExcelLoaderTgfDTrialLevelCond::GetFailedRange(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDTrialLevelCond", "GetFailedRange");

	Params::ExcelLoaderTgfDTrialLevelCond_GetFailedRange Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDTrialLevelCond.GetWinRange
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDTrialLevelRange*  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDTrialLevelRange* UExcelLoaderTgfDTrialLevelCond::GetWinRange(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDTrialLevelCond", "GetWinRange");

	Params::ExcelLoaderTgfDTrialLevelCond_GetWinRange Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDConditionCounterCheckpoint.GetNextDayCheckpoint
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfDConditionCounterCheckpoint::GetNextDayCheckpoint(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDConditionCounterCheckpoint", "GetNextDayCheckpoint");

	Params::ExcelLoaderTgfDConditionCounterCheckpoint_GetNextDayCheckpoint Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDConditionCounterCheckpoint.GetNextMonthCheckpoint
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfDConditionCounterCheckpoint::GetNextMonthCheckpoint(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDConditionCounterCheckpoint", "GetNextMonthCheckpoint");

	Params::ExcelLoaderTgfDConditionCounterCheckpoint_GetNextMonthCheckpoint Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDConditionCounterCheckpoint.GetNextWeekCheckpoint
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfDConditionCounterCheckpoint::GetNextWeekCheckpoint(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDConditionCounterCheckpoint", "GetNextWeekCheckpoint");

	Params::ExcelLoaderTgfDConditionCounterCheckpoint_GetNextWeekCheckpoint Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDConditionCounterItem.GetDailyCounter
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDConditionCounterItem::GetDailyCounter(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDConditionCounterItem", "GetDailyCounter");

	Params::ExcelLoaderTgfDConditionCounterItem_GetDailyCounter Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDConditionCounterItem.GetMDayCounter
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDConditionCounterItem::GetMDayCounter(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDConditionCounterItem", "GetMDayCounter");

	Params::ExcelLoaderTgfDConditionCounterItem_GetMDayCounter Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDConditionCounterItem.GetMDayNextCheckpoint
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfDConditionCounterItem::GetMDayNextCheckpoint(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDConditionCounterItem", "GetMDayNextCheckpoint");

	Params::ExcelLoaderTgfDConditionCounterItem_GetMDayNextCheckpoint Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDConditionCounterItem.GetMonthlyCounter
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDConditionCounterItem::GetMonthlyCounter(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDConditionCounterItem", "GetMonthlyCounter");

	Params::ExcelLoaderTgfDConditionCounterItem_GetMonthlyCounter Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDConditionCounterItem.GetSumCounter
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDConditionCounterItem::GetSumCounter(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDConditionCounterItem", "GetSumCounter");

	Params::ExcelLoaderTgfDConditionCounterItem_GetSumCounter Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDConditionCounterItem.GetWeeklyCounter
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDConditionCounterItem::GetWeeklyCounter(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDConditionCounterItem", "GetWeeklyCounter");

	Params::ExcelLoaderTgfDConditionCounterItem_GetWeeklyCounter Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfQuestProgressConditionLevelIds.GetAllOfValues
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<int64>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int64> UExcelLoaderTgfQuestProgressConditionLevelIds::GetAllOfValues()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfQuestProgressConditionLevelIds", "GetAllOfValues");

	Params::ExcelLoaderTgfQuestProgressConditionLevelIds_GetAllOfValues Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfQuestProgressConditionLevelIds.GetValues
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfQuestProgressConditionLevelIds::GetValues(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfQuestProgressConditionLevelIds", "GetValues");

	Params::ExcelLoaderTgfQuestProgressConditionLevelIds_GetValues Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfQuestProgressConditionLevelIds.GetValuesSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfQuestProgressConditionLevelIds::GetValuesSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfQuestProgressConditionLevelIds", "GetValuesSize");

	Params::ExcelLoaderTgfQuestProgressConditionLevelIds_GetValuesSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDConditionCounterStorage.GetCurrentVersion
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDConditionCounterStorage::GetCurrentVersion(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDConditionCounterStorage", "GetCurrentVersion");

	Params::ExcelLoaderTgfDConditionCounterStorage_GetCurrentVersion Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDConditionCounterStorage.GetTotalCounter
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDConditionCounterItem*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDConditionCounterItem* UExcelLoaderTgfDConditionCounterStorage::GetTotalCounter(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDConditionCounterStorage", "GetTotalCounter");

	Params::ExcelLoaderTgfDConditionCounterStorage_GetTotalCounter Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDConditionCounterStorage.GetVersionCounter
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDConditionCounterItem*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDConditionCounterItem* UExcelLoaderTgfDConditionCounterStorage::GetVersionCounter(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDConditionCounterStorage", "GetVersionCounter");

	Params::ExcelLoaderTgfDConditionCounterStorage_GetVersionCounter Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDConditionCounterLimit.GetCounterVersion
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDConditionCounterLimit::GetCounterVersion(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDConditionCounterLimit", "GetCounterVersion");

	Params::ExcelLoaderTgfDConditionCounterLimit_GetCounterVersion Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDConditionCounterLimit.GetDaily
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDConditionCounterLimit::GetDaily(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDConditionCounterLimit", "GetDaily");

	Params::ExcelLoaderTgfDConditionCounterLimit_GetDaily Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDConditionCounterLimit.GetDayStartOffset
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDConditionCounterLimit::GetDayStartOffset(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDConditionCounterLimit", "GetDayStartOffset");

	Params::ExcelLoaderTgfDConditionCounterLimit_GetDayStartOffset Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDConditionCounterLimit.GetMDayLimit
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDConditionCounterLimit::GetMDayLimit(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDConditionCounterLimit", "GetMDayLimit");

	Params::ExcelLoaderTgfDConditionCounterLimit_GetMDayLimit Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDConditionCounterLimit.GetMDayM
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDConditionCounterLimit::GetMDayM(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDConditionCounterLimit", "GetMDayM");

	Params::ExcelLoaderTgfDConditionCounterLimit_GetMDayM Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDConditionCounterLimit.GetMDayStartTime
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufTimestamp*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufTimestamp* UExcelLoaderTgfDConditionCounterLimit::GetMDayStartTime(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDConditionCounterLimit", "GetMDayStartTime");

	Params::ExcelLoaderTgfDConditionCounterLimit_GetMDayStartTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDConditionCounterLimit.GetMonthly
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDConditionCounterLimit::GetMonthly(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDConditionCounterLimit", "GetMonthly");

	Params::ExcelLoaderTgfDConditionCounterLimit_GetMonthly Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDConditionCounterLimit.GetSum
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDConditionCounterLimit::GetSum(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDConditionCounterLimit", "GetSum");

	Params::ExcelLoaderTgfDConditionCounterLimit_GetSum Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDConditionCounterLimit.GetWeekly
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDConditionCounterLimit::GetWeekly(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDConditionCounterLimit", "GetWeekly");

	Params::ExcelLoaderTgfDConditionCounterLimit_GetWeekly Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigDMatchingFactionUnit.GetFaction
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigDMatchingFactionUnit::GetFaction(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigDMatchingFactionUnit", "GetFaction");

	Params::ExcelLoaderTgfConfigDMatchingFactionUnit_GetFaction Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigDMatchingFactionUnit.GetType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigDMatchingFactionUnit::GetType(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigDMatchingFactionUnit", "GetType");

	Params::ExcelLoaderTgfConfigDMatchingFactionUnit_GetType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigDMatchingFactionUnit.GetUserCount
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigDMatchingFactionUnit::GetUserCount(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigDMatchingFactionUnit", "GetUserCount");

	Params::ExcelLoaderTgfConfigDMatchingFactionUnit_GetUserCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDConditionRuleMultipleInt.GetAllOfValues
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UExcelLoaderTgfDConditionRuleMultipleInt::GetAllOfValues()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDConditionRuleMultipleInt", "GetAllOfValues");

	Params::ExcelLoaderTgfDConditionRuleMultipleInt_GetAllOfValues Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDConditionRuleMultipleInt.GetValues
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDConditionRuleMultipleInt::GetValues(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDConditionRuleMultipleInt", "GetValues");

	Params::ExcelLoaderTgfDConditionRuleMultipleInt_GetValues Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDConditionRuleMultipleInt.GetValuesSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfDConditionRuleMultipleInt::GetValuesSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDConditionRuleMultipleInt", "GetValuesSize");

	Params::ExcelLoaderTgfDConditionRuleMultipleInt_GetValuesSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDConditionRuleMultipleUInt.GetAllOfValues
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<int64>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int64> UExcelLoaderTgfDConditionRuleMultipleUInt::GetAllOfValues()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDConditionRuleMultipleUInt", "GetAllOfValues");

	Params::ExcelLoaderTgfDConditionRuleMultipleUInt_GetAllOfValues Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDConditionRuleMultipleUInt.GetValues
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfDConditionRuleMultipleUInt::GetValues(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDConditionRuleMultipleUInt", "GetValues");

	Params::ExcelLoaderTgfDConditionRuleMultipleUInt_GetValues Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDConditionRuleMultipleUInt.GetValuesSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfDConditionRuleMultipleUInt::GetValuesSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDConditionRuleMultipleUInt", "GetValuesSize");

	Params::ExcelLoaderTgfDConditionRuleMultipleUInt_GetValuesSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelQuestGroupList.GetBasePic
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfConfigExcelQuestGroupList::GetBasePic(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelQuestGroupList", "GetBasePic");

	Params::ExcelLoaderTgfConfigExcelQuestGroupList_GetBasePic Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelQuestGroupList.GetDescription
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfConfigExcelQuestGroupList::GetDescription(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelQuestGroupList", "GetDescription");

	Params::ExcelLoaderTgfConfigExcelQuestGroupList_GetDescription Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelQuestGroupList.GetId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelQuestGroupList::GetId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelQuestGroupList", "GetId");

	Params::ExcelLoaderTgfConfigExcelQuestGroupList_GetId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelQuestGroupList.GetName
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfConfigExcelQuestGroupList::GetName(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelQuestGroupList", "GetName");

	Params::ExcelLoaderTgfConfigExcelQuestGroupList_GetName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDConditionRulInt.GetValues
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDConditionRulInt::GetValues(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDConditionRulInt", "GetValues");

	Params::ExcelLoaderTgfDConditionRulInt_GetValues Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDConditionRuleRangeInt.GetLeft
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDConditionRuleRangeInt::GetLeft(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDConditionRuleRangeInt", "GetLeft");

	Params::ExcelLoaderTgfDConditionRuleRangeInt_GetLeft Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDConditionRuleRangeInt.GetRight
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDConditionRuleRangeInt::GetRight(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDConditionRuleRangeInt", "GetRight");

	Params::ExcelLoaderTgfDConditionRuleRangeInt_GetRight Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMarketPopupVideo.GetData
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfMarketPopupVideo*  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfMarketPopupVideo* UExcelLoaderTgfConfigExcelMarketPopupVideo::GetData(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMarketPopupVideo", "GetData");

	Params::ExcelLoaderTgfConfigExcelMarketPopupVideo_GetData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMarketPopupVideo.GetPopupVideoId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelMarketPopupVideo::GetPopupVideoId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMarketPopupVideo", "GetPopupVideoId");

	Params::ExcelLoaderTgfConfigExcelMarketPopupVideo_GetPopupVideoId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDConditionRuleRangeUInt.GetLeft
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfDConditionRuleRangeUInt::GetLeft(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDConditionRuleRangeUInt", "GetLeft");

	Params::ExcelLoaderTgfDConditionRuleRangeUInt_GetLeft Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDConditionRuleRangeUInt.GetRight
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfDConditionRuleRangeUInt::GetRight(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDConditionRuleRangeUInt", "GetRight");

	Params::ExcelLoaderTgfDConditionRuleRangeUInt_GetRight Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDConditionRuleRangeVersion.GetBegin
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfDConditionRuleRangeVersion::GetBegin(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDConditionRuleRangeVersion", "GetBegin");

	Params::ExcelLoaderTgfDConditionRuleRangeVersion_GetBegin Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDConditionRuleRangeVersion.GetEnd
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfDConditionRuleRangeVersion::GetEnd(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDConditionRuleRangeVersion", "GetEnd");

	Params::ExcelLoaderTgfDConditionRuleRangeVersion_GetEnd Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelLootRarePoolCntLimit.GetItemId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelLootRarePoolCntLimit::GetItemId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelLootRarePoolCntLimit", "GetItemId");

	Params::ExcelLoaderTgfConfigExcelLootRarePoolCntLimit_GetItemId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelLootRarePoolCntLimit.GetPeriodInterval
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufDuration*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufDuration* UExcelLoaderTgfConfigExcelLootRarePoolCntLimit::GetPeriodInterval(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelLootRarePoolCntLimit", "GetPeriodInterval");

	Params::ExcelLoaderTgfConfigExcelLootRarePoolCntLimit_GetPeriodInterval Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelLootRarePoolCntLimit.GetPeriodLootLimitNum
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelLootRarePoolCntLimit::GetPeriodLootLimitNum(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelLootRarePoolCntLimit", "GetPeriodLootLimitNum");

	Params::ExcelLoaderTgfConfigExcelLootRarePoolCntLimit_GetPeriodLootLimitNum Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDConditionRuleRangeDatetime.GetBeginTime
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufTimestamp*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufTimestamp* UExcelLoaderTgfDConditionRuleRangeDatetime::GetBeginTime(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDConditionRuleRangeDatetime", "GetBeginTime");

	Params::ExcelLoaderTgfDConditionRuleRangeDatetime_GetBeginTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDConditionRuleRangeDatetime.GetEndTime
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufTimestamp*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufTimestamp* UExcelLoaderTgfDConditionRuleRangeDatetime::GetEndTime(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDConditionRuleRangeDatetime", "GetEndTime");

	Params::ExcelLoaderTgfDConditionRuleRangeDatetime_GetEndTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDConditionRuleRangeTime.GetBeginTime
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufDuration*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufDuration* UExcelLoaderTgfDConditionRuleRangeTime::GetBeginTime(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDConditionRuleRangeTime", "GetBeginTime");

	Params::ExcelLoaderTgfDConditionRuleRangeTime_GetBeginTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDConditionRuleRangeTime.GetEndTime
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufDuration*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufDuration* UExcelLoaderTgfDConditionRuleRangeTime::GetEndTime(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDConditionRuleRangeTime", "GetEndTime");

	Params::ExcelLoaderTgfDConditionRuleRangeTime_GetEndTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfQuestProgressConditionItemChgSubType.GetAllOfValues
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UExcelLoaderTgfQuestProgressConditionItemChgSubType::GetAllOfValues()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfQuestProgressConditionItemChgSubType", "GetAllOfValues");

	Params::ExcelLoaderTgfQuestProgressConditionItemChgSubType_GetAllOfValues Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfQuestProgressConditionItemChgSubType.GetValues
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfQuestProgressConditionItemChgSubType::GetValues(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfQuestProgressConditionItemChgSubType", "GetValues");

	Params::ExcelLoaderTgfQuestProgressConditionItemChgSubType_GetValues Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfQuestProgressConditionItemChgSubType.GetValuesSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfQuestProgressConditionItemChgSubType::GetValuesSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfQuestProgressConditionItemChgSubType", "GetValuesSize");

	Params::ExcelLoaderTgfQuestProgressConditionItemChgSubType_GetValuesSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderOneofHelperTgfDConditionRuleRuleType.GetRuleTypeAduitLimit
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderOneofHelperTgfDConditionRuleRuleType::GetRuleTypeAduitLimit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ExcelLoaderOneofHelperTgfDConditionRuleRuleType", "GetRuleTypeAduitLimit");

	Params::ExcelLoaderOneofHelperTgfDConditionRuleRuleType_GetRuleTypeAduitLimit Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderOneofHelperTgfDConditionRuleRuleType.GetRuleTypeClientVersion
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderOneofHelperTgfDConditionRuleRuleType::GetRuleTypeClientVersion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ExcelLoaderOneofHelperTgfDConditionRuleRuleType", "GetRuleTypeClientVersion");

	Params::ExcelLoaderOneofHelperTgfDConditionRuleRuleType_GetRuleTypeClientVersion Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderOneofHelperTgfDConditionRuleRuleType.GetRuleTypeLoginChannel
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderOneofHelperTgfDConditionRuleRuleType::GetRuleTypeLoginChannel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ExcelLoaderOneofHelperTgfDConditionRuleRuleType", "GetRuleTypeLoginChannel");

	Params::ExcelLoaderOneofHelperTgfDConditionRuleRuleType_GetRuleTypeLoginChannel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderOneofHelperTgfDConditionRuleRuleType.GetRuleTypePlayerLevel
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderOneofHelperTgfDConditionRuleRuleType::GetRuleTypePlayerLevel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ExcelLoaderOneofHelperTgfDConditionRuleRuleType", "GetRuleTypePlayerLevel");

	Params::ExcelLoaderOneofHelperTgfDConditionRuleRuleType_GetRuleTypePlayerLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderOneofHelperTgfDConditionRuleRuleType.GetRuleTypeRegisterTime
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderOneofHelperTgfDConditionRuleRuleType::GetRuleTypeRegisterTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ExcelLoaderOneofHelperTgfDConditionRuleRuleType", "GetRuleTypeRegisterTime");

	Params::ExcelLoaderOneofHelperTgfDConditionRuleRuleType_GetRuleTypeRegisterTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderOneofHelperTgfDConditionRuleRuleType.GetRuleTypeRoleCurrentMaxLevel
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderOneofHelperTgfDConditionRuleRuleType::GetRuleTypeRoleCurrentMaxLevel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ExcelLoaderOneofHelperTgfDConditionRuleRuleType", "GetRuleTypeRoleCurrentMaxLevel");

	Params::ExcelLoaderOneofHelperTgfDConditionRuleRuleType_GetRuleTypeRoleCurrentMaxLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderOneofHelperTgfDConditionRuleRuleType.GetRuleTypeRoleHistoryMaxLevel
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderOneofHelperTgfDConditionRuleRuleType::GetRuleTypeRoleHistoryMaxLevel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ExcelLoaderOneofHelperTgfDConditionRuleRuleType", "GetRuleTypeRoleHistoryMaxLevel");

	Params::ExcelLoaderOneofHelperTgfDConditionRuleRuleType_GetRuleTypeRoleHistoryMaxLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderOneofHelperTgfDConditionRuleRuleType.GetRuleTypeSystemPlatform
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderOneofHelperTgfDConditionRuleRuleType::GetRuleTypeSystemPlatform()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ExcelLoaderOneofHelperTgfDConditionRuleRuleType", "GetRuleTypeSystemPlatform");

	Params::ExcelLoaderOneofHelperTgfDConditionRuleRuleType_GetRuleTypeSystemPlatform Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderOneofHelperTgfDConditionRuleRuleType.GetRuleTypeTeamMemberCount
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderOneofHelperTgfDConditionRuleRuleType::GetRuleTypeTeamMemberCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ExcelLoaderOneofHelperTgfDConditionRuleRuleType", "GetRuleTypeTeamMemberCount");

	Params::ExcelLoaderOneofHelperTgfDConditionRuleRuleType_GetRuleTypeTeamMemberCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDConditionRule.GetAduitLimit
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDConditionRulInt*  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDConditionRulInt* UExcelLoaderTgfDConditionRule::GetAduitLimit(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDConditionRule", "GetAduitLimit");

	Params::ExcelLoaderTgfDConditionRule_GetAduitLimit Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDConditionRule.GetClientVersion
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDConditionRuleRangeVersion*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDConditionRuleRangeVersion* UExcelLoaderTgfDConditionRule::GetClientVersion(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDConditionRule", "GetClientVersion");

	Params::ExcelLoaderTgfDConditionRule_GetClientVersion Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDConditionRule.GetLoginChannel
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDConditionRuleMultipleUInt*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDConditionRuleMultipleUInt* UExcelLoaderTgfDConditionRule::GetLoginChannel(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDConditionRule", "GetLoginChannel");

	Params::ExcelLoaderTgfDConditionRule_GetLoginChannel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDConditionRule.GetPlayerLevel
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDConditionRuleRangeInt*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDConditionRuleRangeInt* UExcelLoaderTgfDConditionRule::GetPlayerLevel(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDConditionRule", "GetPlayerLevel");

	Params::ExcelLoaderTgfDConditionRule_GetPlayerLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDConditionRule.GetRegisterTime
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDConditionRuleRangeDatetime*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDConditionRuleRangeDatetime* UExcelLoaderTgfDConditionRule::GetRegisterTime(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDConditionRule", "GetRegisterTime");

	Params::ExcelLoaderTgfDConditionRule_GetRegisterTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDConditionRule.GetRoleCurrentMaxLevel
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDConditionRuleRangeInt*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDConditionRuleRangeInt* UExcelLoaderTgfDConditionRule::GetRoleCurrentMaxLevel(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDConditionRule", "GetRoleCurrentMaxLevel");

	Params::ExcelLoaderTgfDConditionRule_GetRoleCurrentMaxLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDConditionRule.GetRoleHistoryMaxLevel
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDConditionRuleRangeInt*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDConditionRuleRangeInt* UExcelLoaderTgfDConditionRule::GetRoleHistoryMaxLevel(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDConditionRule", "GetRoleHistoryMaxLevel");

	Params::ExcelLoaderTgfDConditionRule_GetRoleHistoryMaxLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDConditionRule.GetRuleTypeCase
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDConditionRule::GetRuleTypeCase()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDConditionRule", "GetRuleTypeCase");

	Params::ExcelLoaderTgfDConditionRule_GetRuleTypeCase Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDConditionRule.GetSystemPlatform
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDConditionRuleMultipleUInt*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDConditionRuleMultipleUInt* UExcelLoaderTgfDConditionRule::GetSystemPlatform(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDConditionRule", "GetSystemPlatform");

	Params::ExcelLoaderTgfDConditionRule_GetSystemPlatform Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDConditionRule.GetTeamMemberCount
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDConditionRuleRangeInt*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDConditionRuleRangeInt* UExcelLoaderTgfDConditionRule::GetTeamMemberCount(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDConditionRule", "GetTeamMemberCount");

	Params::ExcelLoaderTgfDConditionRule_GetTeamMemberCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelLootChooseGroupRate.GetAllOfPr
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UExcelLoaderTgfConfigExcelLootChooseGroupRate::GetAllOfPr()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelLootChooseGroupRate", "GetAllOfPr");

	Params::ExcelLoaderTgfConfigExcelLootChooseGroupRate_GetAllOfPr Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelLootChooseGroupRate.GetAllOfRandomIds
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<int64>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int64> UExcelLoaderTgfConfigExcelLootChooseGroupRate::GetAllOfRandomIds()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelLootChooseGroupRate", "GetAllOfRandomIds");

	Params::ExcelLoaderTgfConfigExcelLootChooseGroupRate_GetAllOfRandomIds Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelLootChooseGroupRate.GetAllOfRarePool
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigLootRarePoolConfig*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigLootRarePoolConfig*> UExcelLoaderTgfConfigExcelLootChooseGroupRate::GetAllOfRarePool()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelLootChooseGroupRate", "GetAllOfRarePool");

	Params::ExcelLoaderTgfConfigExcelLootChooseGroupRate_GetAllOfRarePool Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelLootChooseGroupRate.GetDefaultRate
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelLootChooseGroupRate::GetDefaultRate(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelLootChooseGroupRate", "GetDefaultRate");

	Params::ExcelLoaderTgfConfigExcelLootChooseGroupRate_GetDefaultRate Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelLootChooseGroupRate.GetLootId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelLootChooseGroupRate::GetLootId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelLootChooseGroupRate", "GetLootId");

	Params::ExcelLoaderTgfConfigExcelLootChooseGroupRate_GetLootId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelLootChooseGroupRate.GetMaxRate
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelLootChooseGroupRate::GetMaxRate(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelLootChooseGroupRate", "GetMaxRate");

	Params::ExcelLoaderTgfConfigExcelLootChooseGroupRate_GetMaxRate Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelLootChooseGroupRate.GetPr
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelLootChooseGroupRate::GetPr(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelLootChooseGroupRate", "GetPr");

	Params::ExcelLoaderTgfConfigExcelLootChooseGroupRate_GetPr Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelLootChooseGroupRate.GetPrSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelLootChooseGroupRate::GetPrSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelLootChooseGroupRate", "GetPrSize");

	Params::ExcelLoaderTgfConfigExcelLootChooseGroupRate_GetPrSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelLootChooseGroupRate.GetRandomIds
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelLootChooseGroupRate::GetRandomIds(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelLootChooseGroupRate", "GetRandomIds");

	Params::ExcelLoaderTgfConfigExcelLootChooseGroupRate_GetRandomIds Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelLootChooseGroupRate.GetRandomIdsSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelLootChooseGroupRate::GetRandomIdsSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelLootChooseGroupRate", "GetRandomIdsSize");

	Params::ExcelLoaderTgfConfigExcelLootChooseGroupRate_GetRandomIdsSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelLootChooseGroupRate.GetRarePool
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigLootRarePoolConfig*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigLootRarePoolConfig* UExcelLoaderTgfConfigExcelLootChooseGroupRate::GetRarePool(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelLootChooseGroupRate", "GetRarePool");

	Params::ExcelLoaderTgfConfigExcelLootChooseGroupRate_GetRarePool Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelLootChooseGroupRate.GetRarePoolSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelLootChooseGroupRate::GetRarePoolSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelLootChooseGroupRate", "GetRarePoolSize");

	Params::ExcelLoaderTgfConfigExcelLootChooseGroupRate_GetRarePoolSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDConditionBasicLimit.GetAllOfRule
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfDConditionRule*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfDConditionRule*> UExcelLoaderTgfDConditionBasicLimit::GetAllOfRule()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDConditionBasicLimit", "GetAllOfRule");

	Params::ExcelLoaderTgfDConditionBasicLimit_GetAllOfRule Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDConditionBasicLimit.GetAllOfValidTime
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfDConditionRuleRangeDatetime*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfDConditionRuleRangeDatetime*> UExcelLoaderTgfDConditionBasicLimit::GetAllOfValidTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDConditionBasicLimit", "GetAllOfValidTime");

	Params::ExcelLoaderTgfDConditionBasicLimit_GetAllOfValidTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDConditionBasicLimit.GetRule
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDConditionRule*    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDConditionRule* UExcelLoaderTgfDConditionBasicLimit::GetRule(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDConditionBasicLimit", "GetRule");

	Params::ExcelLoaderTgfDConditionBasicLimit_GetRule Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDConditionBasicLimit.GetRuleSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfDConditionBasicLimit::GetRuleSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDConditionBasicLimit", "GetRuleSize");

	Params::ExcelLoaderTgfDConditionBasicLimit_GetRuleSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDConditionBasicLimit.GetShowTime
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufTimestamp*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufTimestamp* UExcelLoaderTgfDConditionBasicLimit::GetShowTime(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDConditionBasicLimit", "GetShowTime");

	Params::ExcelLoaderTgfDConditionBasicLimit_GetShowTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDConditionBasicLimit.GetValidTime
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDConditionRuleRangeDatetime*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDConditionRuleRangeDatetime* UExcelLoaderTgfDConditionBasicLimit::GetValidTime(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDConditionBasicLimit", "GetValidTime");

	Params::ExcelLoaderTgfDConditionBasicLimit_GetValidTime Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDConditionBasicLimit.GetValidTimeSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfDConditionBasicLimit::GetValidTimeSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDConditionBasicLimit", "GetValidTimeSize");

	Params::ExcelLoaderTgfDConditionBasicLimit_GetValidTimeSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConditionPool.GetBasicLimit
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDConditionBasicLimit*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDConditionBasicLimit* UExcelLoaderTgfConfigExcelConditionPool::GetBasicLimit(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConditionPool", "GetBasicLimit");

	Params::ExcelLoaderTgfConfigExcelConditionPool_GetBasicLimit Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConditionPool.GetConditionId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelConditionPool::GetConditionId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConditionPool", "GetConditionId");

	Params::ExcelLoaderTgfConfigExcelConditionPool_GetConditionId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelConditionPool.GetCounterLimit
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDConditionCounterLimit*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDConditionCounterLimit* UExcelLoaderTgfConfigExcelConditionPool::GetCounterLimit(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelConditionPool", "GetCounterLimit");

	Params::ExcelLoaderTgfConfigExcelConditionPool_GetCounterLimit Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMatchingResultTemplate.GetAllOfTeamTemplate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigDMatchTeamTemplate*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigDMatchTeamTemplate*> UExcelLoaderTgfConfigExcelMatchingResultTemplate::GetAllOfTeamTemplate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMatchingResultTemplate", "GetAllOfTeamTemplate");

	Params::ExcelLoaderTgfConfigExcelMatchingResultTemplate_GetAllOfTeamTemplate Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMatchingResultTemplate.GetId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelMatchingResultTemplate::GetId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMatchingResultTemplate", "GetId");

	Params::ExcelLoaderTgfConfigExcelMatchingResultTemplate_GetId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMatchingResultTemplate.GetTeamTemplate
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigDMatchTeamTemplate*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigDMatchTeamTemplate* UExcelLoaderTgfConfigExcelMatchingResultTemplate::GetTeamTemplate(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMatchingResultTemplate", "GetTeamTemplate");

	Params::ExcelLoaderTgfConfigExcelMatchingResultTemplate_GetTeamTemplate Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMatchingResultTemplate.GetTeamTemplateSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelMatchingResultTemplate::GetTeamTemplateSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMatchingResultTemplate", "GetTeamTemplateSize");

	Params::ExcelLoaderTgfConfigExcelMatchingResultTemplate_GetTeamTemplateSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDIntKV.GetK
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDIntKV::GetK(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDIntKV", "GetK");

	Params::ExcelLoaderTgfDIntKV_GetK Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDIntKV.GetV
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDIntKV::GetV(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDIntKV", "GetV");

	Params::ExcelLoaderTgfDIntKV_GetV Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDIntTriple.GetA
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDIntTriple::GetA(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDIntTriple", "GetA");

	Params::ExcelLoaderTgfDIntTriple_GetA Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDIntTriple.GetB
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDIntTriple::GetB(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDIntTriple", "GetB");

	Params::ExcelLoaderTgfDIntTriple_GetB Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDIntTriple.GetC
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDIntTriple::GetC(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDIntTriple", "GetC");

	Params::ExcelLoaderTgfDIntTriple_GetC Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDLotteryKeyAccess.GetCount
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDLotteryKeyAccess::GetCount(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDLotteryKeyAccess", "GetCount");

	Params::ExcelLoaderTgfDLotteryKeyAccess_GetCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDLotteryKeyAccess.GetLimit
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDLotteryKeyAccess::GetLimit(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDLotteryKeyAccess", "GetLimit");

	Params::ExcelLoaderTgfDLotteryKeyAccess_GetLimit Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDLotteryKeyAccess.GetPeriod
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDLotteryKeyLimitResetInfo*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDLotteryKeyLimitResetInfo* UExcelLoaderTgfDLotteryKeyAccess::GetPeriod(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDLotteryKeyAccess", "GetPeriod");

	Params::ExcelLoaderTgfDLotteryKeyAccess_GetPeriod Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDLotteryKeyAccess.GetType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDLotteryKeyAccess::GetType(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDLotteryKeyAccess", "GetType");

	Params::ExcelLoaderTgfDLotteryKeyAccess_GetType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDExcelUeXYZ.GetX
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UExcelLoaderTgfDExcelUeXYZ::GetX(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDExcelUeXYZ", "GetX");

	Params::ExcelLoaderTgfDExcelUeXYZ_GetX Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDExcelUeXYZ.GetY
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UExcelLoaderTgfDExcelUeXYZ::GetY(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDExcelUeXYZ", "GetY");

	Params::ExcelLoaderTgfDExcelUeXYZ_GetY Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDExcelUeXYZ.GetZ
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UExcelLoaderTgfDExcelUeXYZ::GetZ(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDExcelUeXYZ", "GetZ");

	Params::ExcelLoaderTgfDExcelUeXYZ_GetZ Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDUserCraftingData.GetAllOfCrafting
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfDCraftingSlotData*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfDCraftingSlotData*> UExcelLoaderTgfDUserCraftingData::GetAllOfCrafting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDUserCraftingData", "GetAllOfCrafting");

	Params::ExcelLoaderTgfDUserCraftingData_GetAllOfCrafting Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDUserCraftingData.GetAllOfRecipe
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UExcelLoaderTgfDUserCraftingData::GetAllOfRecipe()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDUserCraftingData", "GetAllOfRecipe");

	Params::ExcelLoaderTgfDUserCraftingData_GetAllOfRecipe Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDUserCraftingData.GetCrafting
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDCraftingSlotData* ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDCraftingSlotData* UExcelLoaderTgfDUserCraftingData::GetCrafting(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDUserCraftingData", "GetCrafting");

	Params::ExcelLoaderTgfDUserCraftingData_GetCrafting Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDUserCraftingData.GetCraftingSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfDUserCraftingData::GetCraftingSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDUserCraftingData", "GetCraftingSize");

	Params::ExcelLoaderTgfDUserCraftingData_GetCraftingSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDUserCraftingData.GetRecipe
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDUserCraftingData::GetRecipe(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDUserCraftingData", "GetRecipe");

	Params::ExcelLoaderTgfDUserCraftingData_GetRecipe Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDUserCraftingData.GetRecipeSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfDUserCraftingData::GetRecipeSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDUserCraftingData", "GetRecipeSize");

	Params::ExcelLoaderTgfDUserCraftingData_GetRecipeSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigDQuestSpecificAvailableSeasonPeriod.GetCompetitionLevelId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigDQuestSpecificAvailableSeasonPeriod::GetCompetitionLevelId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigDQuestSpecificAvailableSeasonPeriod", "GetCompetitionLevelId");

	Params::ExcelLoaderTgfConfigDQuestSpecificAvailableSeasonPeriod_GetCompetitionLevelId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigDQuestSpecificAvailableSeasonPeriod.GetSeasonId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigDQuestSpecificAvailableSeasonPeriod::GetSeasonId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigDQuestSpecificAvailableSeasonPeriod", "GetSeasonId");

	Params::ExcelLoaderTgfConfigDQuestSpecificAvailableSeasonPeriod_GetSeasonId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDCraftingSlotData.GetCompletedCount
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDCraftingSlotData::GetCompletedCount(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDCraftingSlotData", "GetCompletedCount");

	Params::ExcelLoaderTgfDCraftingSlotData_GetCompletedCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDCraftingSlotData.GetRecipeId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDCraftingSlotData::GetRecipeId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDCraftingSlotData", "GetRecipeId");

	Params::ExcelLoaderTgfDCraftingSlotData_GetRecipeId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDCraftingSlotData.GetStartTime
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfDCraftingSlotData::GetStartTime(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDCraftingSlotData", "GetStartTime");

	Params::ExcelLoaderTgfDCraftingSlotData_GetStartTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDCraftingSlotData.GetTimeCost
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfDCraftingSlotData::GetTimeCost(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDCraftingSlotData", "GetTimeCost");

	Params::ExcelLoaderTgfDCraftingSlotData_GetTimeCost Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDCraftingSlotData.GetUncompletedCount
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDCraftingSlotData::GetUncompletedCount(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDCraftingSlotData", "GetUncompletedCount");

	Params::ExcelLoaderTgfDCraftingSlotData_GetUncompletedCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDUserCraftingDirty.GetAllOfDirtyRecipe
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UExcelLoaderTgfDUserCraftingDirty::GetAllOfDirtyRecipe()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDUserCraftingDirty", "GetAllOfDirtyRecipe");

	Params::ExcelLoaderTgfDUserCraftingDirty_GetAllOfDirtyRecipe Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDUserCraftingDirty.GetDirtyRecipe
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDUserCraftingDirty::GetDirtyRecipe(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDUserCraftingDirty", "GetDirtyRecipe");

	Params::ExcelLoaderTgfDUserCraftingDirty_GetDirtyRecipe Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDUserCraftingDirty.GetDirtyRecipeSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfDUserCraftingDirty::GetDirtyRecipeSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDUserCraftingDirty", "GetDirtyRecipeSize");

	Params::ExcelLoaderTgfDUserCraftingDirty_GetDirtyRecipeSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDMailTemplate.GetAllOfAttachments
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfDItemOffset*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfDItemOffset*> UExcelLoaderTgfDMailTemplate::GetAllOfAttachments()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDMailTemplate", "GetAllOfAttachments");

	Params::ExcelLoaderTgfDMailTemplate_GetAllOfAttachments Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDMailTemplate.GetAttachments
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDItemOffset*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDItemOffset* UExcelLoaderTgfDMailTemplate::GetAttachments(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDMailTemplate", "GetAttachments");

	Params::ExcelLoaderTgfDMailTemplate_GetAttachments Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDMailTemplate.GetAttachmentsSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfDMailTemplate::GetAttachmentsSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDMailTemplate", "GetAttachmentsSize");

	Params::ExcelLoaderTgfDMailTemplate_GetAttachmentsSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDMailTemplate.GetConditionId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDMailTemplate::GetConditionId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDMailTemplate", "GetConditionId");

	Params::ExcelLoaderTgfDMailTemplate_GetConditionId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDMailTemplate.GetContent
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfDMailTemplate::GetContent(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDMailTemplate", "GetContent");

	Params::ExcelLoaderTgfDMailTemplate_GetContent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDMailTemplate.GetExpiredDurationS
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDMailTemplate::GetExpiredDurationS(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDMailTemplate", "GetExpiredDurationS");

	Params::ExcelLoaderTgfDMailTemplate_GetExpiredDurationS Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDMailTemplate.GetExpiredTime
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufTimestamp*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufTimestamp* UExcelLoaderTgfDMailTemplate::GetExpiredTime(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDMailTemplate", "GetExpiredTime");

	Params::ExcelLoaderTgfDMailTemplate_GetExpiredTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDMailTemplate.GetIsAdminSender
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UExcelLoaderTgfDMailTemplate::GetIsAdminSender(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDMailTemplate", "GetIsAdminSender");

	Params::ExcelLoaderTgfDMailTemplate_GetIsAdminSender Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDMailTemplate.GetIsPaddingExpiredTime
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UExcelLoaderTgfDMailTemplate::GetIsPaddingExpiredTime(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDMailTemplate", "GetIsPaddingExpiredTime");

	Params::ExcelLoaderTgfDMailTemplate_GetIsPaddingExpiredTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDMailTemplate.GetKeepAfterTakeAttachments
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UExcelLoaderTgfDMailTemplate::GetKeepAfterTakeAttachments(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDMailTemplate", "GetKeepAfterTakeAttachments");

	Params::ExcelLoaderTgfDMailTemplate_GetKeepAfterTakeAttachments Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDMailTemplate.GetMajorType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDMailTemplate::GetMajorType(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDMailTemplate", "GetMajorType");

	Params::ExcelLoaderTgfDMailTemplate_GetMajorType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDMailTemplate.GetMinorType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDMailTemplate::GetMinorType(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDMailTemplate", "GetMinorType");

	Params::ExcelLoaderTgfDMailTemplate_GetMinorType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDMailTemplate.GetResolveExpiredTime
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDMailTemplate::GetResolveExpiredTime(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDMailTemplate", "GetResolveExpiredTime");

	Params::ExcelLoaderTgfDMailTemplate_GetResolveExpiredTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDMailTemplate.GetShowTime
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufTimestamp*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufTimestamp* UExcelLoaderTgfDMailTemplate::GetShowTime(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDMailTemplate", "GetShowTime");

	Params::ExcelLoaderTgfDMailTemplate_GetShowTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDMailTemplate.GetStartTime
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufTimestamp*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufTimestamp* UExcelLoaderTgfDMailTemplate::GetStartTime(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDMailTemplate", "GetStartTime");

	Params::ExcelLoaderTgfDMailTemplate_GetStartTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDMailTemplate.GetTitle
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfDMailTemplate::GetTitle(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDMailTemplate", "GetTitle");

	Params::ExcelLoaderTgfDMailTemplate_GetTitle Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelCraftingRecipe.GetAllOfItemCost
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfDItemOffset*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfDItemOffset*> UExcelLoaderTgfConfigExcelCraftingRecipe::GetAllOfItemCost()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelCraftingRecipe", "GetAllOfItemCost");

	Params::ExcelLoaderTgfConfigExcelCraftingRecipe_GetAllOfItemCost Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelCraftingRecipe.GetAllOfProduct
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfDItemOffset*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfDItemOffset*> UExcelLoaderTgfConfigExcelCraftingRecipe::GetAllOfProduct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelCraftingRecipe", "GetAllOfProduct");

	Params::ExcelLoaderTgfConfigExcelCraftingRecipe_GetAllOfProduct Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelCraftingRecipe.GetAllOfUnlockCondition
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfDFunctionUnlockCondition*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfDFunctionUnlockCondition*> UExcelLoaderTgfConfigExcelCraftingRecipe::GetAllOfUnlockCondition()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelCraftingRecipe", "GetAllOfUnlockCondition");

	Params::ExcelLoaderTgfConfigExcelCraftingRecipe_GetAllOfUnlockCondition Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelCraftingRecipe.GetCountLimt
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelCraftingRecipe::GetCountLimt(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelCraftingRecipe", "GetCountLimt");

	Params::ExcelLoaderTgfConfigExcelCraftingRecipe_GetCountLimt Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelCraftingRecipe.GetCountMaxLmit
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelCraftingRecipe::GetCountMaxLmit(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelCraftingRecipe", "GetCountMaxLmit");

	Params::ExcelLoaderTgfConfigExcelCraftingRecipe_GetCountMaxLmit Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelCraftingRecipe.GetGreatSuccessMultiple
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelCraftingRecipe::GetGreatSuccessMultiple(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelCraftingRecipe", "GetGreatSuccessMultiple");

	Params::ExcelLoaderTgfConfigExcelCraftingRecipe_GetGreatSuccessMultiple Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelCraftingRecipe.GetGreatSuccessRate
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelCraftingRecipe::GetGreatSuccessRate(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelCraftingRecipe", "GetGreatSuccessRate");

	Params::ExcelLoaderTgfConfigExcelCraftingRecipe_GetGreatSuccessRate Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelCraftingRecipe.GetId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelCraftingRecipe::GetId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelCraftingRecipe", "GetId");

	Params::ExcelLoaderTgfConfigExcelCraftingRecipe_GetId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelCraftingRecipe.GetItemCost
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDItemOffset*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDItemOffset* UExcelLoaderTgfConfigExcelCraftingRecipe::GetItemCost(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelCraftingRecipe", "GetItemCost");

	Params::ExcelLoaderTgfConfigExcelCraftingRecipe_GetItemCost Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelCraftingRecipe.GetItemCostSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelCraftingRecipe::GetItemCostSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelCraftingRecipe", "GetItemCostSize");

	Params::ExcelLoaderTgfConfigExcelCraftingRecipe_GetItemCostSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelCraftingRecipe.GetItemType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelCraftingRecipe::GetItemType(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelCraftingRecipe", "GetItemType");

	Params::ExcelLoaderTgfConfigExcelCraftingRecipe_GetItemType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelCraftingRecipe.GetProduct
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDItemOffset*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDItemOffset* UExcelLoaderTgfConfigExcelCraftingRecipe::GetProduct(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelCraftingRecipe", "GetProduct");

	Params::ExcelLoaderTgfConfigExcelCraftingRecipe_GetProduct Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelCraftingRecipe.GetProductSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelCraftingRecipe::GetProductSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelCraftingRecipe", "GetProductSize");

	Params::ExcelLoaderTgfConfigExcelCraftingRecipe_GetProductSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelCraftingRecipe.GetTag
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelCraftingRecipe::GetTag(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelCraftingRecipe", "GetTag");

	Params::ExcelLoaderTgfConfigExcelCraftingRecipe_GetTag Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelCraftingRecipe.GetTimeCost
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelCraftingRecipe::GetTimeCost(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelCraftingRecipe", "GetTimeCost");

	Params::ExcelLoaderTgfConfigExcelCraftingRecipe_GetTimeCost Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelCraftingRecipe.GetUnlockCondition
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDFunctionUnlockCondition*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDFunctionUnlockCondition* UExcelLoaderTgfConfigExcelCraftingRecipe::GetUnlockCondition(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelCraftingRecipe", "GetUnlockCondition");

	Params::ExcelLoaderTgfConfigExcelCraftingRecipe_GetUnlockCondition Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelCraftingRecipe.GetUnlockConditionSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelCraftingRecipe::GetUnlockConditionSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelCraftingRecipe", "GetUnlockConditionSize");

	Params::ExcelLoaderTgfConfigExcelCraftingRecipe_GetUnlockConditionSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelCraftingTag.GetCraftName
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfConfigExcelCraftingTag::GetCraftName(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelCraftingTag", "GetCraftName");

	Params::ExcelLoaderTgfConfigExcelCraftingTag_GetCraftName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelCraftingTag.GetTagId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelCraftingTag::GetTagId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelCraftingTag", "GetTagId");

	Params::ExcelLoaderTgfConfigExcelCraftingTag_GetTagId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMithrilForceSettlement.GetDamage
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelMithrilForceSettlement::GetDamage(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMithrilForceSettlement", "GetDamage");

	Params::ExcelLoaderTgfConfigExcelMithrilForceSettlement_GetDamage Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMithrilForceSettlement.GetExp
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelMithrilForceSettlement::GetExp(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMithrilForceSettlement", "GetExp");

	Params::ExcelLoaderTgfConfigExcelMithrilForceSettlement_GetExp Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelCraftingGroup.GetAllOfRecipes
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UExcelLoaderTgfConfigExcelCraftingGroup::GetAllOfRecipes()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelCraftingGroup", "GetAllOfRecipes");

	Params::ExcelLoaderTgfConfigExcelCraftingGroup_GetAllOfRecipes Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelCraftingGroup.GetGroupId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelCraftingGroup::GetGroupId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelCraftingGroup", "GetGroupId");

	Params::ExcelLoaderTgfConfigExcelCraftingGroup_GetGroupId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelCraftingGroup.GetRecipes
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelCraftingGroup::GetRecipes(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelCraftingGroup", "GetRecipes");

	Params::ExcelLoaderTgfConfigExcelCraftingGroup_GetRecipes Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelCraftingGroup.GetRecipesSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelCraftingGroup::GetRecipesSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelCraftingGroup", "GetRecipesSize");

	Params::ExcelLoaderTgfConfigExcelCraftingGroup_GetRecipesSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelDLCContent.GetAppId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelDLCContent::GetAppId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelDLCContent", "GetAppId");

	Params::ExcelLoaderTgfConfigExcelDLCContent_GetAppId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelDLCContent.GetDlcIcon
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfConfigExcelDLCContent::GetDlcIcon(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelDLCContent", "GetDlcIcon");

	Params::ExcelLoaderTgfConfigExcelDLCContent_GetDlcIcon Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelDLCContent.GetDlcImg
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfConfigExcelDLCContent::GetDlcImg(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelDLCContent", "GetDlcImg");

	Params::ExcelLoaderTgfConfigExcelDLCContent_GetDlcImg Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelDLCContent.GetDlcName
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfConfigExcelDLCContent::GetDlcName(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelDLCContent", "GetDlcName");

	Params::ExcelLoaderTgfConfigExcelDLCContent_GetDlcName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelDLCContent.GetDlcType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelDLCContent::GetDlcType(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelDLCContent", "GetDlcType");

	Params::ExcelLoaderTgfConfigExcelDLCContent_GetDlcType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelDLCPacket.GetAppId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelDLCPacket::GetAppId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelDLCPacket", "GetAppId");

	Params::ExcelLoaderTgfConfigExcelDLCPacket_GetAppId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelDLCPacket.GetIsRecycle
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UExcelLoaderTgfConfigExcelDLCPacket::GetIsRecycle(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelDLCPacket", "GetIsRecycle");

	Params::ExcelLoaderTgfConfigExcelDLCPacket_GetIsRecycle Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelDLCPacket.GetItem
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDItemOffset*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDItemOffset* UExcelLoaderTgfConfigExcelDLCPacket::GetItem(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelDLCPacket", "GetItem");

	Params::ExcelLoaderTgfConfigExcelDLCPacket_GetItem Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelDLCPacket.GetItemId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelDLCPacket::GetItemId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelDLCPacket", "GetItemId");

	Params::ExcelLoaderTgfConfigExcelDLCPacket_GetItemId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfBattleAttributeConversionEquipType.GetAllOfAttribute
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> UExcelLoaderTgfBattleAttributeConversionEquipType::GetAllOfAttribute()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfBattleAttributeConversionEquipType", "GetAllOfAttribute");

	Params::ExcelLoaderTgfBattleAttributeConversionEquipType_GetAllOfAttribute Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfBattleAttributeConversionEquipType.GetAttribute
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfBattleAttributeConversionEquipType::GetAttribute(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfBattleAttributeConversionEquipType", "GetAttribute");

	Params::ExcelLoaderTgfBattleAttributeConversionEquipType_GetAttribute Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfBattleAttributeConversionEquipType.GetAttributeSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfBattleAttributeConversionEquipType::GetAttributeSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfBattleAttributeConversionEquipType", "GetAttributeSize");

	Params::ExcelLoaderTgfBattleAttributeConversionEquipType_GetAttributeSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfBattleAttributeConversionEquipType.GetEquipType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfBattleAttributeConversionEquipType::GetEquipType(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfBattleAttributeConversionEquipType", "GetEquipType");

	Params::ExcelLoaderTgfBattleAttributeConversionEquipType_GetEquipType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfUserRoleSkinWearInfo.GetAllOfSkinIds
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UExcelLoaderTgfUserRoleSkinWearInfo::GetAllOfSkinIds()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfUserRoleSkinWearInfo", "GetAllOfSkinIds");

	Params::ExcelLoaderTgfUserRoleSkinWearInfo_GetAllOfSkinIds Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfUserRoleSkinWearInfo.GetHiddenHelmet
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UExcelLoaderTgfUserRoleSkinWearInfo::GetHiddenHelmet(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfUserRoleSkinWearInfo", "GetHiddenHelmet");

	Params::ExcelLoaderTgfUserRoleSkinWearInfo_GetHiddenHelmet Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfUserRoleSkinWearInfo.GetRoleId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfUserRoleSkinWearInfo::GetRoleId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfUserRoleSkinWearInfo", "GetRoleId");

	Params::ExcelLoaderTgfUserRoleSkinWearInfo_GetRoleId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfUserRoleSkinWearInfo.GetSkinIds
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfUserRoleSkinWearInfo::GetSkinIds(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfUserRoleSkinWearInfo", "GetSkinIds");

	Params::ExcelLoaderTgfUserRoleSkinWearInfo_GetSkinIds Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfUserRoleSkinWearInfo.GetSkinIdsSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfUserRoleSkinWearInfo::GetSkinIdsSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfUserRoleSkinWearInfo", "GetSkinIdsSize");

	Params::ExcelLoaderTgfUserRoleSkinWearInfo_GetSkinIdsSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfFacadeAccessType.GetType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfFacadeAccessType::GetType(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfFacadeAccessType", "GetType");

	Params::ExcelLoaderTgfFacadeAccessType_GetType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfFacadeAccessType.GetUrl
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfFacadeAccessType::GetUrl(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfFacadeAccessType", "GetUrl");

	Params::ExcelLoaderTgfFacadeAccessType_GetUrl Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelFacadeSort.GetFirstSort
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelFacadeSort::GetFirstSort(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelFacadeSort", "GetFirstSort");

	Params::ExcelLoaderTgfConfigExcelFacadeSort_GetFirstSort Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelFacadeSort.GetIcon
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfConfigExcelFacadeSort::GetIcon(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelFacadeSort", "GetIcon");

	Params::ExcelLoaderTgfConfigExcelFacadeSort_GetIcon Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelFacadeSort.GetName
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfConfigExcelFacadeSort::GetName(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelFacadeSort", "GetName");

	Params::ExcelLoaderTgfConfigExcelFacadeSort_GetName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelFacadeSort.GetOffset
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDExcelUeXYZ*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDExcelUeXYZ* UExcelLoaderTgfConfigExcelFacadeSort::GetOffset(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelFacadeSort", "GetOffset");

	Params::ExcelLoaderTgfConfigExcelFacadeSort_GetOffset Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelFacadeSort.GetOriginalResourceId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelFacadeSort::GetOriginalResourceId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelFacadeSort", "GetOriginalResourceId");

	Params::ExcelLoaderTgfConfigExcelFacadeSort_GetOriginalResourceId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelFacadeSort.GetScale
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UExcelLoaderTgfConfigExcelFacadeSort::GetScale(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelFacadeSort", "GetScale");

	Params::ExcelLoaderTgfConfigExcelFacadeSort_GetScale Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelFacadeSort.GetSecondSort
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelFacadeSort::GetSecondSort(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelFacadeSort", "GetSecondSort");

	Params::ExcelLoaderTgfConfigExcelFacadeSort_GetSecondSort Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelFacadeSort.GetShow
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UExcelLoaderTgfConfigExcelFacadeSort::GetShow(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelFacadeSort", "GetShow");

	Params::ExcelLoaderTgfConfigExcelFacadeSort_GetShow Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelFacadeSort.GetThirdSort
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelFacadeSort::GetThirdSort(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelFacadeSort", "GetThirdSort");

	Params::ExcelLoaderTgfConfigExcelFacadeSort_GetThirdSort Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelFacadeSort.GetThirdSortPriority
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelFacadeSort::GetThirdSortPriority(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelFacadeSort", "GetThirdSortPriority");

	Params::ExcelLoaderTgfConfigExcelFacadeSort_GetThirdSortPriority Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelFacadeSort.GetXyz
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDExcelUeXYZ*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDExcelUeXYZ* UExcelLoaderTgfConfigExcelFacadeSort::GetXyz(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelFacadeSort", "GetXyz");

	Params::ExcelLoaderTgfConfigExcelFacadeSort_GetXyz Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfGearDisplayConfig.GetAsShow
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UExcelLoaderTgfGearDisplayConfig::GetAsShow(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfGearDisplayConfig", "GetAsShow");

	Params::ExcelLoaderTgfGearDisplayConfig_GetAsShow Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigEquipmentGearConfig.GetAllOfAvailableEquipSlot
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UExcelLoaderTgfConfigEquipmentGearConfig::GetAllOfAvailableEquipSlot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigEquipmentGearConfig", "GetAllOfAvailableEquipSlot");

	Params::ExcelLoaderTgfConfigEquipmentGearConfig_GetAllOfAvailableEquipSlot Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigEquipmentGearConfig.GetAllOfCareerRestrict
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UExcelLoaderTgfConfigEquipmentGearConfig::GetAllOfCareerRestrict()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigEquipmentGearConfig", "GetAllOfCareerRestrict");

	Params::ExcelLoaderTgfConfigEquipmentGearConfig_GetAllOfCareerRestrict Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigEquipmentGearConfig.GetAvailableEquipSlot
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigEquipmentGearConfig::GetAvailableEquipSlot(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigEquipmentGearConfig", "GetAvailableEquipSlot");

	Params::ExcelLoaderTgfConfigEquipmentGearConfig_GetAvailableEquipSlot Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigEquipmentGearConfig.GetAvailableEquipSlotSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigEquipmentGearConfig::GetAvailableEquipSlotSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigEquipmentGearConfig", "GetAvailableEquipSlotSize");

	Params::ExcelLoaderTgfConfigEquipmentGearConfig_GetAvailableEquipSlotSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigEquipmentGearConfig.GetCareerRestrict
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigEquipmentGearConfig::GetCareerRestrict(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigEquipmentGearConfig", "GetCareerRestrict");

	Params::ExcelLoaderTgfConfigEquipmentGearConfig_GetCareerRestrict Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigEquipmentGearConfig.GetCareerRestrictSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigEquipmentGearConfig::GetCareerRestrictSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigEquipmentGearConfig", "GetCareerRestrictSize");

	Params::ExcelLoaderTgfConfigEquipmentGearConfig_GetCareerRestrictSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigEquipmentGearConfig.GetIsGear
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UExcelLoaderTgfConfigEquipmentGearConfig::GetIsGear(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigEquipmentGearConfig", "GetIsGear");

	Params::ExcelLoaderTgfConfigEquipmentGearConfig_GetIsGear Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigEquipmentSubTypeCareerConfig.GetAllOfCareerRestrict
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UExcelLoaderTgfConfigEquipmentSubTypeCareerConfig::GetAllOfCareerRestrict()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigEquipmentSubTypeCareerConfig", "GetAllOfCareerRestrict");

	Params::ExcelLoaderTgfConfigEquipmentSubTypeCareerConfig_GetAllOfCareerRestrict Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigEquipmentSubTypeCareerConfig.GetCareerRestrict
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigEquipmentSubTypeCareerConfig::GetCareerRestrict(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigEquipmentSubTypeCareerConfig", "GetCareerRestrict");

	Params::ExcelLoaderTgfConfigEquipmentSubTypeCareerConfig_GetCareerRestrict Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigEquipmentSubTypeCareerConfig.GetCareerRestrictSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigEquipmentSubTypeCareerConfig::GetCareerRestrictSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigEquipmentSubTypeCareerConfig", "GetCareerRestrictSize");

	Params::ExcelLoaderTgfConfigEquipmentSubTypeCareerConfig_GetCareerRestrictSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigEquipmentSubTypeCareerConfig.GetEquipSubtype
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigEquipmentSubTypeCareerConfig::GetEquipSubtype(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigEquipmentSubTypeCareerConfig", "GetEquipSubtype");

	Params::ExcelLoaderTgfConfigEquipmentSubTypeCareerConfig_GetEquipSubtype Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelGearTemplate.GetDisplay
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfGearDisplayConfig* ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfGearDisplayConfig* UExcelLoaderTgfConfigExcelGearTemplate::GetDisplay(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelGearTemplate", "GetDisplay");

	Params::ExcelLoaderTgfConfigExcelGearTemplate_GetDisplay Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelGearTemplate.GetDurability
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelGearTemplate::GetDurability(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelGearTemplate", "GetDurability");

	Params::ExcelLoaderTgfConfigExcelGearTemplate_GetDurability Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelGearTemplate.GetElement
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelGearTemplate::GetElement(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelGearTemplate", "GetElement");

	Params::ExcelLoaderTgfConfigExcelGearTemplate_GetElement Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelGearTemplate.GetItemId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelGearTemplate::GetItemId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelGearTemplate", "GetItemId");

	Params::ExcelLoaderTgfConfigExcelGearTemplate_GetItemId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelGearTemplate.GetSkinThirdSort
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelGearTemplate::GetSkinThirdSort(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelGearTemplate", "GetSkinThirdSort");

	Params::ExcelLoaderTgfConfigExcelGearTemplate_GetSkinThirdSort Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelGearDurability.GetAllOfRepairItemConsume
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfDItemOffset*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfDItemOffset*> UExcelLoaderTgfConfigExcelGearDurability::GetAllOfRepairItemConsume()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelGearDurability", "GetAllOfRepairItemConsume");

	Params::ExcelLoaderTgfConfigExcelGearDurability_GetAllOfRepairItemConsume Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelGearDurability.GetDeathLoss
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigDGearDurabilityLoss*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigDGearDurabilityLoss* UExcelLoaderTgfConfigExcelGearDurability::GetDeathLoss(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelGearDurability", "GetDeathLoss");

	Params::ExcelLoaderTgfConfigExcelGearDurability_GetDeathLoss Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelGearDurability.GetEquipType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelGearDurability::GetEquipType(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelGearDurability", "GetEquipType");

	Params::ExcelLoaderTgfConfigExcelGearDurability_GetEquipType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelGearDurability.GetNormalLoss
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigDGearDurabilityLoss*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigDGearDurabilityLoss* UExcelLoaderTgfConfigExcelGearDurability::GetNormalLoss(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelGearDurability", "GetNormalLoss");

	Params::ExcelLoaderTgfConfigExcelGearDurability_GetNormalLoss Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelGearDurability.GetRarity
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelGearDurability::GetRarity(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelGearDurability", "GetRarity");

	Params::ExcelLoaderTgfConfigExcelGearDurability_GetRarity Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelGearDurability.GetRepairItemConsume
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDItemOffset*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDItemOffset* UExcelLoaderTgfConfigExcelGearDurability::GetRepairItemConsume(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelGearDurability", "GetRepairItemConsume");

	Params::ExcelLoaderTgfConfigExcelGearDurability_GetRepairItemConsume Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelGearDurability.GetRepairItemConsumeSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelGearDurability::GetRepairItemConsumeSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelGearDurability", "GetRepairItemConsumeSize");

	Params::ExcelLoaderTgfConfigExcelGearDurability_GetRepairItemConsumeSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelGearSoulBoundCost.GetAllOfCostItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfDItemOffset*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfDItemOffset*> UExcelLoaderTgfConfigExcelGearSoulBoundCost::GetAllOfCostItem()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelGearSoulBoundCost", "GetAllOfCostItem");

	Params::ExcelLoaderTgfConfigExcelGearSoulBoundCost_GetAllOfCostItem Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelGearSoulBoundCost.GetCostItem
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDItemOffset*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDItemOffset* UExcelLoaderTgfConfigExcelGearSoulBoundCost::GetCostItem(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelGearSoulBoundCost", "GetCostItem");

	Params::ExcelLoaderTgfConfigExcelGearSoulBoundCost_GetCostItem Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelGearSoulBoundCost.GetCostItemSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelGearSoulBoundCost::GetCostItemSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelGearSoulBoundCost", "GetCostItemSize");

	Params::ExcelLoaderTgfConfigExcelGearSoulBoundCost_GetCostItemSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelGearSoulBoundCost.GetCount
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelGearSoulBoundCost::GetCount(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelGearSoulBoundCost", "GetCount");

	Params::ExcelLoaderTgfConfigExcelGearSoulBoundCost_GetCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelGearHeirloomGuide.GetAllOfDisplaySlot
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UExcelLoaderTgfConfigExcelGearHeirloomGuide::GetAllOfDisplaySlot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelGearHeirloomGuide", "GetAllOfDisplaySlot");

	Params::ExcelLoaderTgfConfigExcelGearHeirloomGuide_GetAllOfDisplaySlot Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelGearHeirloomGuide.GetAllOfInstantiationCosts
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfDConfigCostItem*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfDConfigCostItem*> UExcelLoaderTgfConfigExcelGearHeirloomGuide::GetAllOfInstantiationCosts()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelGearHeirloomGuide", "GetAllOfInstantiationCosts");

	Params::ExcelLoaderTgfConfigExcelGearHeirloomGuide_GetAllOfInstantiationCosts Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelGearHeirloomGuide.GetAllOfUnlockCondition
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UExcelLoaderTgfConfigExcelGearHeirloomGuide::GetAllOfUnlockCondition()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelGearHeirloomGuide", "GetAllOfUnlockCondition");

	Params::ExcelLoaderTgfConfigExcelGearHeirloomGuide_GetAllOfUnlockCondition Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelGearHeirloomGuide.GetAllOfUnlockCost
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfDItemOffset*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfDItemOffset*> UExcelLoaderTgfConfigExcelGearHeirloomGuide::GetAllOfUnlockCost()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelGearHeirloomGuide", "GetAllOfUnlockCost");

	Params::ExcelLoaderTgfConfigExcelGearHeirloomGuide_GetAllOfUnlockCost Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelGearHeirloomGuide.GetAllOfUnlockCosts
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfDConfigCostItem*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfDConfigCostItem*> UExcelLoaderTgfConfigExcelGearHeirloomGuide::GetAllOfUnlockCosts()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelGearHeirloomGuide", "GetAllOfUnlockCosts");

	Params::ExcelLoaderTgfConfigExcelGearHeirloomGuide_GetAllOfUnlockCosts Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelGearHeirloomGuide.GetDisplaySlot
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelGearHeirloomGuide::GetDisplaySlot(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelGearHeirloomGuide", "GetDisplaySlot");

	Params::ExcelLoaderTgfConfigExcelGearHeirloomGuide_GetDisplaySlot Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelGearHeirloomGuide.GetDisplaySlotSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelGearHeirloomGuide::GetDisplaySlotSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelGearHeirloomGuide", "GetDisplaySlotSize");

	Params::ExcelLoaderTgfConfigExcelGearHeirloomGuide_GetDisplaySlotSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelGearHeirloomGuide.GetGroupId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelGearHeirloomGuide::GetGroupId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelGearHeirloomGuide", "GetGroupId");

	Params::ExcelLoaderTgfConfigExcelGearHeirloomGuide_GetGroupId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelGearHeirloomGuide.GetIconPath
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfConfigExcelGearHeirloomGuide::GetIconPath(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelGearHeirloomGuide", "GetIconPath");

	Params::ExcelLoaderTgfConfigExcelGearHeirloomGuide_GetIconPath Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelGearHeirloomGuide.GetId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelGearHeirloomGuide::GetId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelGearHeirloomGuide", "GetId");

	Params::ExcelLoaderTgfConfigExcelGearHeirloomGuide_GetId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelGearHeirloomGuide.GetInstantiationCosts
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDConfigCostItem*   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDConfigCostItem* UExcelLoaderTgfConfigExcelGearHeirloomGuide::GetInstantiationCosts(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelGearHeirloomGuide", "GetInstantiationCosts");

	Params::ExcelLoaderTgfConfigExcelGearHeirloomGuide_GetInstantiationCosts Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelGearHeirloomGuide.GetInstantiationCostsSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelGearHeirloomGuide::GetInstantiationCostsSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelGearHeirloomGuide", "GetInstantiationCostsSize");

	Params::ExcelLoaderTgfConfigExcelGearHeirloomGuide_GetInstantiationCostsSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelGearHeirloomGuide.GetInstId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelGearHeirloomGuide::GetInstId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelGearHeirloomGuide", "GetInstId");

	Params::ExcelLoaderTgfConfigExcelGearHeirloomGuide_GetInstId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelGearHeirloomGuide.GetNameText
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfConfigExcelGearHeirloomGuide::GetNameText(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelGearHeirloomGuide", "GetNameText");

	Params::ExcelLoaderTgfConfigExcelGearHeirloomGuide_GetNameText Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelGearHeirloomGuide.GetSortPriority
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelGearHeirloomGuide::GetSortPriority(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelGearHeirloomGuide", "GetSortPriority");

	Params::ExcelLoaderTgfConfigExcelGearHeirloomGuide_GetSortPriority Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelGearHeirloomGuide.GetTypeId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelGearHeirloomGuide::GetTypeId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelGearHeirloomGuide", "GetTypeId");

	Params::ExcelLoaderTgfConfigExcelGearHeirloomGuide_GetTypeId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelGearHeirloomGuide.GetUnlockCondition
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelGearHeirloomGuide::GetUnlockCondition(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelGearHeirloomGuide", "GetUnlockCondition");

	Params::ExcelLoaderTgfConfigExcelGearHeirloomGuide_GetUnlockCondition Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelGearHeirloomGuide.GetUnlockConditionSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelGearHeirloomGuide::GetUnlockConditionSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelGearHeirloomGuide", "GetUnlockConditionSize");

	Params::ExcelLoaderTgfConfigExcelGearHeirloomGuide_GetUnlockConditionSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelGearHeirloomGuide.GetUnlockConditionText
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfConfigExcelGearHeirloomGuide::GetUnlockConditionText(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelGearHeirloomGuide", "GetUnlockConditionText");

	Params::ExcelLoaderTgfConfigExcelGearHeirloomGuide_GetUnlockConditionText Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelGearHeirloomGuide.GetUnlockCost
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDItemOffset*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDItemOffset* UExcelLoaderTgfConfigExcelGearHeirloomGuide::GetUnlockCost(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelGearHeirloomGuide", "GetUnlockCost");

	Params::ExcelLoaderTgfConfigExcelGearHeirloomGuide_GetUnlockCost Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelGearHeirloomGuide.GetUnlockCosts
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDConfigCostItem*   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDConfigCostItem* UExcelLoaderTgfConfigExcelGearHeirloomGuide::GetUnlockCosts(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelGearHeirloomGuide", "GetUnlockCosts");

	Params::ExcelLoaderTgfConfigExcelGearHeirloomGuide_GetUnlockCosts Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelGearHeirloomGuide.GetUnlockCostSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelGearHeirloomGuide::GetUnlockCostSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelGearHeirloomGuide", "GetUnlockCostSize");

	Params::ExcelLoaderTgfConfigExcelGearHeirloomGuide_GetUnlockCostSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelGearHeirloomGuide.GetUnlockCostsSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelGearHeirloomGuide::GetUnlockCostsSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelGearHeirloomGuide", "GetUnlockCostsSize");

	Params::ExcelLoaderTgfConfigExcelGearHeirloomGuide_GetUnlockCostsSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelGearGemInst.GetItemId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelGearGemInst::GetItemId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelGearGemInst", "GetItemId");

	Params::ExcelLoaderTgfConfigExcelGearGemInst_GetItemId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelGearGemInst.GetShapeType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelGearGemInst::GetShapeType(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelGearGemInst", "GetShapeType");

	Params::ExcelLoaderTgfConfigExcelGearGemInst_GetShapeType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDTrialLevelRange.GetMaxCount
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDTrialLevelRange::GetMaxCount(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDTrialLevelRange", "GetMaxCount");

	Params::ExcelLoaderTgfDTrialLevelRange_GetMaxCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDTrialLevelRange.GetMinCount
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDTrialLevelRange::GetMinCount(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDTrialLevelRange", "GetMinCount");

	Params::ExcelLoaderTgfDTrialLevelRange_GetMinCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelImmaculateTrialRule.GetActivityEndLockTime
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelImmaculateTrialRule::GetActivityEndLockTime(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelImmaculateTrialRule", "GetActivityEndLockTime");

	Params::ExcelLoaderTgfConfigExcelImmaculateTrialRule_GetActivityEndLockTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelImmaculateTrialRule.GetActivityEndMatchTime
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelImmaculateTrialRule::GetActivityEndMatchTime(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelImmaculateTrialRule", "GetActivityEndMatchTime");

	Params::ExcelLoaderTgfConfigExcelImmaculateTrialRule_GetActivityEndMatchTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelImmaculateTrialRule.GetActivityEndTipsTime
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelImmaculateTrialRule::GetActivityEndTipsTime(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelImmaculateTrialRule", "GetActivityEndTipsTime");

	Params::ExcelLoaderTgfConfigExcelImmaculateTrialRule_GetActivityEndTipsTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelImmaculateTrialRule.GetActivityRuleId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelImmaculateTrialRule::GetActivityRuleId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelImmaculateTrialRule", "GetActivityRuleId");

	Params::ExcelLoaderTgfConfigExcelImmaculateTrialRule_GetActivityRuleId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelImmaculateTrialRule.GetAllOfCostItmes
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfDItemOffset*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfDItemOffset*> UExcelLoaderTgfConfigExcelImmaculateTrialRule::GetAllOfCostItmes()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelImmaculateTrialRule", "GetAllOfCostItmes");

	Params::ExcelLoaderTgfConfigExcelImmaculateTrialRule_GetAllOfCostItmes Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelImmaculateTrialRule.GetAllOfOpenTime
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UExcelLoaderTgfConfigExcelImmaculateTrialRule::GetAllOfOpenTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelImmaculateTrialRule", "GetAllOfOpenTime");

	Params::ExcelLoaderTgfConfigExcelImmaculateTrialRule_GetAllOfOpenTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelImmaculateTrialRule.GetCostItmes
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDItemOffset*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDItemOffset* UExcelLoaderTgfConfigExcelImmaculateTrialRule::GetCostItmes(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelImmaculateTrialRule", "GetCostItmes");

	Params::ExcelLoaderTgfConfigExcelImmaculateTrialRule_GetCostItmes Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelImmaculateTrialRule.GetCostItmesSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelImmaculateTrialRule::GetCostItmesSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelImmaculateTrialRule", "GetCostItmesSize");

	Params::ExcelLoaderTgfConfigExcelImmaculateTrialRule_GetCostItmesSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelImmaculateTrialRule.GetFailedCount
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelImmaculateTrialRule::GetFailedCount(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelImmaculateTrialRule", "GetFailedCount");

	Params::ExcelLoaderTgfConfigExcelImmaculateTrialRule_GetFailedCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelImmaculateTrialRule.GetFirstRewardMailId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelImmaculateTrialRule::GetFirstRewardMailId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelImmaculateTrialRule", "GetFirstRewardMailId");

	Params::ExcelLoaderTgfConfigExcelImmaculateTrialRule_GetFirstRewardMailId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelImmaculateTrialRule.GetOpenTime
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelImmaculateTrialRule::GetOpenTime(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelImmaculateTrialRule", "GetOpenTime");

	Params::ExcelLoaderTgfConfigExcelImmaculateTrialRule_GetOpenTime Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelImmaculateTrialRule.GetOpenTimeSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelImmaculateTrialRule::GetOpenTimeSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelImmaculateTrialRule", "GetOpenTimeSize");

	Params::ExcelLoaderTgfConfigExcelImmaculateTrialRule_GetOpenTimeSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelImmaculateTrialRule.GetRandomRewardMailId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelImmaculateTrialRule::GetRandomRewardMailId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelImmaculateTrialRule", "GetRandomRewardMailId");

	Params::ExcelLoaderTgfConfigExcelImmaculateTrialRule_GetRandomRewardMailId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelImmaculateTrialRule.GetRankId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelImmaculateTrialRule::GetRankId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelImmaculateTrialRule", "GetRankId");

	Params::ExcelLoaderTgfConfigExcelImmaculateTrialRule_GetRankId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelImmaculateTrialRule.GetWinCount
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelImmaculateTrialRule::GetWinCount(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelImmaculateTrialRule", "GetWinCount");

	Params::ExcelLoaderTgfConfigExcelImmaculateTrialRule_GetWinCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelImmaculateTrialRandomRewards.GetCareerTypeId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelImmaculateTrialRandomRewards::GetCareerTypeId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelImmaculateTrialRandomRewards", "GetCareerTypeId");

	Params::ExcelLoaderTgfConfigExcelImmaculateTrialRandomRewards_GetCareerTypeId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelImmaculateTrialRandomRewards.GetRandomPoolId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelImmaculateTrialRandomRewards::GetRandomPoolId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelImmaculateTrialRandomRewards", "GetRandomPoolId");

	Params::ExcelLoaderTgfConfigExcelImmaculateTrialRandomRewards_GetRandomPoolId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelImmaculateTrialRandomRewards.GetRandomRewardId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelImmaculateTrialRandomRewards::GetRandomRewardId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelImmaculateTrialRandomRewards", "GetRandomRewardId");

	Params::ExcelLoaderTgfConfigExcelImmaculateTrialRandomRewards_GetRandomRewardId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDItemPosition.GetGuid
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfDItemPosition::GetGuid(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDItemPosition", "GetGuid");

	Params::ExcelLoaderTgfDItemPosition_GetGuid Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDItemPosition.GetLimitOption
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDLimitOption*      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDLimitOption* UExcelLoaderTgfDItemPosition::GetLimitOption(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDItemPosition", "GetLimitOption");

	Params::ExcelLoaderTgfDItemPosition_GetLimitOption Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDItemPosition.GetType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDItemPosition::GetType(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDItemPosition", "GetType");

	Params::ExcelLoaderTgfDItemPosition_GetType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDItemPosition.GetX
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDItemPosition::GetX(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDItemPosition", "GetX");

	Params::ExcelLoaderTgfDItemPosition_GetX Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDItemPosition.GetY
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDItemPosition::GetY(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDItemPosition", "GetY");

	Params::ExcelLoaderTgfDItemPosition_GetY Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDItemGemSlot.GetAffixLocation
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDItemGemSlot::GetAffixLocation(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDItemGemSlot", "GetAffixLocation");

	Params::ExcelLoaderTgfDItemGemSlot_GetAffixLocation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDItemGemSlot.GetGemId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDItemGemSlot::GetGemId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDItemGemSlot", "GetGemId");

	Params::ExcelLoaderTgfDItemGemSlot_GetGemId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDItemGemSlot.GetSlotId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDItemGemSlot::GetSlotId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDItemGemSlot", "GetSlotId");

	Params::ExcelLoaderTgfDItemGemSlot_GetSlotId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDItemData.GetAffixData
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAffixRandomData*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAffixRandomData* UExcelLoaderTgfDItemData::GetAffixData(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDItemData", "GetAffixData");

	Params::ExcelLoaderTgfDItemData_GetAffixData Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDItemData.GetAffixDataSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfDItemData::GetAffixDataSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDItemData", "GetAffixDataSize");

	Params::ExcelLoaderTgfDItemData_GetAffixDataSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDItemData.GetAllOfAffixData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfDBattleAffixRandomData*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfDBattleAffixRandomData*> UExcelLoaderTgfDItemData::GetAllOfAffixData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDItemData", "GetAllOfAffixData");

	Params::ExcelLoaderTgfDItemData_GetAllOfAffixData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDItemData.GetAmmoCount
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDItemData::GetAmmoCount(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDItemData", "GetAmmoCount");

	Params::ExcelLoaderTgfDItemData_GetAmmoCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDItemData.GetCorruptionId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDItemData::GetCorruptionId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDItemData", "GetCorruptionId");

	Params::ExcelLoaderTgfDItemData_GetCorruptionId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDItemData.GetGemData
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDItemGem*          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDItemGem* UExcelLoaderTgfDItemData::GetGemData(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDItemData", "GetGemData");

	Params::ExcelLoaderTgfDItemData_GetGemData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDItemData.GetLossDurability
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDItemData::GetLossDurability(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDItemData", "GetLossDurability");

	Params::ExcelLoaderTgfDItemData_GetLossDurability Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDItemCreateInfoLoot.GetBattleId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfDItemCreateInfoLoot::GetBattleId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDItemCreateInfoLoot", "GetBattleId");

	Params::ExcelLoaderTgfDItemCreateInfoLoot_GetBattleId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDItemCreateInfoLoot.GetLootPoolId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfDItemCreateInfoLoot::GetLootPoolId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDItemCreateInfoLoot", "GetLootPoolId");

	Params::ExcelLoaderTgfDItemCreateInfoLoot_GetLootPoolId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDItemCreateInfoLoot.GetLootSource
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDItemCreateInfoLoot::GetLootSource(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDItemCreateInfoLoot", "GetLootSource");

	Params::ExcelLoaderTgfDItemCreateInfoLoot_GetLootSource Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDItemCreateInfoLoot.GetMapId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDItemCreateInfoLoot::GetMapId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDItemCreateInfoLoot", "GetMapId");

	Params::ExcelLoaderTgfDItemCreateInfoLoot_GetMapId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDItemCreateInfoHeirloom.GetOwner
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDPlayerIDKey*      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDPlayerIDKey* UExcelLoaderTgfDItemCreateInfoHeirloom::GetOwner(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDItemCreateInfoHeirloom", "GetOwner");

	Params::ExcelLoaderTgfDItemCreateInfoHeirloom_GetOwner Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDItemOwnership.GetAllOfUserKeys
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfDPlayerIDKey*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfDPlayerIDKey*> UExcelLoaderTgfDItemOwnership::GetAllOfUserKeys()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDItemOwnership", "GetAllOfUserKeys");

	Params::ExcelLoaderTgfDItemOwnership_GetAllOfUserKeys Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDItemOwnership.GetUserKeys
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDPlayerIDKey*      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDPlayerIDKey* UExcelLoaderTgfDItemOwnership::GetUserKeys(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDItemOwnership", "GetUserKeys");

	Params::ExcelLoaderTgfDItemOwnership_GetUserKeys Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDItemOwnership.GetUserKeysSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfDItemOwnership::GetUserKeysSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDItemOwnership", "GetUserKeysSize");

	Params::ExcelLoaderTgfDItemOwnership_GetUserKeysSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDItemCreateInfo.GetCreateDataCase
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EExcelLoaderTgfDItemCreateInfoCreateDataReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EExcelLoaderTgfDItemCreateInfoCreateData UExcelLoaderTgfDItemCreateInfo::GetCreateDataCase()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDItemCreateInfo", "GetCreateDataCase");

	Params::ExcelLoaderTgfDItemCreateInfo_GetCreateDataCase Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDItemCreateInfo.GetCreateTimestamp
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufTimestamp*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufTimestamp* UExcelLoaderTgfDItemCreateInfo::GetCreateTimestamp(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDItemCreateInfo", "GetCreateTimestamp");

	Params::ExcelLoaderTgfDItemCreateInfo_GetCreateTimestamp Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDItemCreateInfo.GetGm
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDItemCreateInfoGm* ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDItemCreateInfoGm* UExcelLoaderTgfDItemCreateInfo::GetGm(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDItemCreateInfo", "GetGm");

	Params::ExcelLoaderTgfDItemCreateInfo_GetGm Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDItemCreateInfo.GetHeirloom
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDItemCreateInfoHeirloom*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDItemCreateInfoHeirloom* UExcelLoaderTgfDItemCreateInfo::GetHeirloom(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDItemCreateInfo", "GetHeirloom");

	Params::ExcelLoaderTgfDItemCreateInfo_GetHeirloom Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDItemCreateInfo.GetLoot
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDItemCreateInfoLoot*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDItemCreateInfoLoot* UExcelLoaderTgfDItemCreateInfo::GetLoot(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDItemCreateInfo", "GetLoot");

	Params::ExcelLoaderTgfDItemCreateInfo_GetLoot Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDItemCreateInfo.GetMarket
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDItemCreateInfoMarket*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDItemCreateInfoMarket* UExcelLoaderTgfDItemCreateInfo::GetMarket(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDItemCreateInfo", "GetMarket");

	Params::ExcelLoaderTgfDItemCreateInfo_GetMarket Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDItemCreateInfo.GetOriginGuid
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfDItemCreateInfo::GetOriginGuid(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDItemCreateInfo", "GetOriginGuid");

	Params::ExcelLoaderTgfDItemCreateInfo_GetOriginGuid Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDItemCreateInfo.GetOwnership
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDItemOwnership*    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDItemOwnership* UExcelLoaderTgfDItemCreateInfo::GetOwnership(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDItemCreateInfo", "GetOwnership");

	Params::ExcelLoaderTgfDItemCreateInfo_GetOwnership Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDItemGroup.GetAllOfElement
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfDItem*>     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfDItem*> UExcelLoaderTgfDItemGroup::GetAllOfElement()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDItemGroup", "GetAllOfElement");

	Params::ExcelLoaderTgfDItemGroup_GetAllOfElement Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDItemGroup.GetElement
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDItem*             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDItem* UExcelLoaderTgfDItemGroup::GetElement(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDItemGroup", "GetElement");

	Params::ExcelLoaderTgfDItemGroup_GetElement Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDItemGroup.GetElementSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfDItemGroup::GetElementSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDItemGroup", "GetElementSize");

	Params::ExcelLoaderTgfDItemGroup_GetElementSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDItemUseAction.GetActionTypeCase
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EExcelLoaderTgfDItemUseActionActionType ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EExcelLoaderTgfDItemUseActionActionType UExcelLoaderTgfDItemUseAction::GetActionTypeCase()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDItemUseAction", "GetActionTypeCase");

	Params::ExcelLoaderTgfDItemUseAction_GetActionTypeCase Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDItemUseAction.GetAddEnergy
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDItemUseAction::GetAddEnergy(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDItemUseAction", "GetAddEnergy");

	Params::ExcelLoaderTgfDItemUseAction_GetAddEnergy Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDItemUseAction.GetAddInventoryPage
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDItemUseAction::GetAddInventoryPage(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDItemUseAction", "GetAddInventoryPage");

	Params::ExcelLoaderTgfDItemUseAction_GetAddInventoryPage Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDItemUseAction.GetIsAutoUse
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UExcelLoaderTgfDItemUseAction::GetIsAutoUse(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDItemUseAction", "GetIsAutoUse");

	Params::ExcelLoaderTgfDItemUseAction_GetIsAutoUse Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDItemUseAction.GetRandomPool
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDItemUseAction::GetRandomPool(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDItemUseAction", "GetRandomPool");

	Params::ExcelLoaderTgfDItemUseAction_GetRandomPool Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDItemUseAction.GetRecipeId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDItemUseAction::GetRecipeId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDItemUseAction", "GetRecipeId");

	Params::ExcelLoaderTgfDItemUseAction_GetRecipeId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDItemUseAction.GetSoulBound
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDItemUseAction::GetSoulBound(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDItemUseAction", "GetSoulBound");

	Params::ExcelLoaderTgfDItemUseAction_GetSoulBound Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDItemUseParam.GetIndex
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDItemUseParam::GetIndex(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDItemUseParam", "GetIndex");

	Params::ExcelLoaderTgfDItemUseParam_GetIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDItemBasic.GetCount
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDItemBasic::GetCount(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDItemBasic", "GetCount");

	Params::ExcelLoaderTgfDItemBasic_GetCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDItemBasic.GetExpireTimepoint
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfDItemBasic::GetExpireTimepoint(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDItemBasic", "GetExpireTimepoint");

	Params::ExcelLoaderTgfDItemBasic_GetExpireTimepoint Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDItemBasic.GetGuid
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfDItemBasic::GetGuid(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDItemBasic", "GetGuid");

	Params::ExcelLoaderTgfDItemBasic_GetGuid Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDItemBasic.GetPosition
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDItemPosition*     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDItemPosition* UExcelLoaderTgfDItemBasic::GetPosition(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDItemBasic", "GetPosition");

	Params::ExcelLoaderTgfDItemBasic_GetPosition Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDItemBasic.GetTypeId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDItemBasic::GetTypeId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDItemBasic", "GetTypeId");

	Params::ExcelLoaderTgfDItemBasic_GetTypeId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDConfigCostItem.GetAllOfItems
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfDItemOffset*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfDItemOffset*> UExcelLoaderTgfDConfigCostItem::GetAllOfItems()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDConfigCostItem", "GetAllOfItems");

	Params::ExcelLoaderTgfDConfigCostItem_GetAllOfItems Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDConfigCostItem.GetIndex
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDConfigCostItem::GetIndex(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDConfigCostItem", "GetIndex");

	Params::ExcelLoaderTgfDConfigCostItem_GetIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDConfigCostItem.GetItems
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDItemOffset*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDItemOffset* UExcelLoaderTgfDConfigCostItem::GetItems(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDConfigCostItem", "GetItems");

	Params::ExcelLoaderTgfDConfigCostItem_GetItems Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDConfigCostItem.GetItemsSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfDConfigCostItem::GetItemsSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDConfigCostItem", "GetItemsSize");

	Params::ExcelLoaderTgfDConfigCostItem_GetItemsSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigDUeSourceBrushSizeData.GetX
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UExcelLoaderTgfConfigDUeSourceBrushSizeData::GetX(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigDUeSourceBrushSizeData", "GetX");

	Params::ExcelLoaderTgfConfigDUeSourceBrushSizeData_GetX Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigDUeSourceBrushSizeData.GetY
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UExcelLoaderTgfConfigDUeSourceBrushSizeData::GetY(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigDUeSourceBrushSizeData", "GetY");

	Params::ExcelLoaderTgfConfigDUeSourceBrushSizeData_GetY Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigUESourceItemType.GetBrushData
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigDUeSourceBrushData*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigDUeSourceBrushData* UExcelLoaderTgfConfigUESourceItemType::GetBrushData(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigUESourceItemType", "GetBrushData");

	Params::ExcelLoaderTgfConfigUESourceItemType_GetBrushData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigUESourceItemType.GetCategoryType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigUESourceItemType::GetCategoryType(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigUESourceItemType", "GetCategoryType");

	Params::ExcelLoaderTgfConfigUESourceItemType_GetCategoryType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigUESourceItemType.GetItemType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigUESourceItemType::GetItemType(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigUESourceItemType", "GetItemType");

	Params::ExcelLoaderTgfConfigUESourceItemType_GetItemType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigUESourceItemType.GetPositionCfg
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDItemPositionCfg*  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDItemPositionCfg* UExcelLoaderTgfConfigUESourceItemType::GetPositionCfg(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigUESourceItemType", "GetPositionCfg");

	Params::ExcelLoaderTgfConfigUESourceItemType_GetPositionCfg Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigUESourceItemType.GetRarity
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigUESourceItemType::GetRarity(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigUESourceItemType", "GetRarity");

	Params::ExcelLoaderTgfConfigUESourceItemType_GetRarity Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigUESourceItemType.GetSlotType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigUESourceItemType::GetSlotType(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigUESourceItemType", "GetSlotType");

	Params::ExcelLoaderTgfConfigUESourceItemType_GetSlotType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigUESourceItemType.GetTipsBrushData
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigDUeSourceBrushData*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigDUeSourceBrushData* UExcelLoaderTgfConfigUESourceItemType::GetTipsBrushData(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigUESourceItemType", "GetTipsBrushData");

	Params::ExcelLoaderTgfConfigUESourceItemType_GetTipsBrushData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigUESourceItemType.GetTypeId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigUESourceItemType::GetTypeId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigUESourceItemType", "GetTypeId");

	Params::ExcelLoaderTgfConfigUESourceItemType_GetTypeId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigUESourceItemType.GetUePath
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfConfigUESourceItemType::GetUePath(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigUESourceItemType", "GetUePath");

	Params::ExcelLoaderTgfConfigUESourceItemType_GetUePath Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigUESourceItemType.GetUeSourceEquipmentEquipId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigUESourceItemType::GetUeSourceEquipmentEquipId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigUESourceItemType", "GetUeSourceEquipmentEquipId");

	Params::ExcelLoaderTgfConfigUESourceItemType_GetUeSourceEquipmentEquipId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelItemRouter.GetItemComingEnum
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelItemRouter::GetItemComingEnum(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelItemRouter", "GetItemComingEnum");

	Params::ExcelLoaderTgfConfigExcelItemRouter_GetItemComingEnum Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelItemRouter.GetItemRouter
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelItemRouter::GetItemRouter(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelItemRouter", "GetItemRouter");

	Params::ExcelLoaderTgfConfigExcelItemRouter_GetItemRouter Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelItemRouter.GetItemTypeEnum
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelItemRouter::GetItemTypeEnum(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelItemRouter", "GetItemTypeEnum");

	Params::ExcelLoaderTgfConfigExcelItemRouter_GetItemTypeEnum Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDItemOffset.GetCount
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDItemOffset::GetCount(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDItemOffset", "GetCount");

	Params::ExcelLoaderTgfDItemOffset_GetCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDItemOffset.GetExpireOffset
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfDItemOffset::GetExpireOffset(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDItemOffset", "GetExpireOffset");

	Params::ExcelLoaderTgfDItemOffset_GetExpireOffset Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDItemOffset.GetTypeId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDItemOffset::GetTypeId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDItemOffset", "GetTypeId");

	Params::ExcelLoaderTgfDItemOffset_GetTypeId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelItemDropItem.GetCnt
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelItemDropItem::GetCnt(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelItemDropItem", "GetCnt");

	Params::ExcelLoaderTgfConfigExcelItemDropItem_GetCnt Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelItemDropItem.GetItemId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelItemDropItem::GetItemId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelItemDropItem", "GetItemId");

	Params::ExcelLoaderTgfConfigExcelItemDropItem_GetItemId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelItemDropItem.GetLevel
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelItemDropItem::GetLevel(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelItemDropItem", "GetLevel");

	Params::ExcelLoaderTgfConfigExcelItemDropItem_GetLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelItemDropItem.GetRandomId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelItemDropItem::GetRandomId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelItemDropItem", "GetRandomId");

	Params::ExcelLoaderTgfConfigExcelItemDropItem_GetRandomId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelItemDropItem.GetRate
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelItemDropItem::GetRate(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelItemDropItem", "GetRate");

	Params::ExcelLoaderTgfConfigExcelItemDropItem_GetRate Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelItemLootRate.GetCorruptionId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelItemLootRate::GetCorruptionId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelItemLootRate", "GetCorruptionId");

	Params::ExcelLoaderTgfConfigExcelItemLootRate_GetCorruptionId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelItemLootRate.GetCorruptionRate
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelItemLootRate::GetCorruptionRate(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelItemLootRate", "GetCorruptionRate");

	Params::ExcelLoaderTgfConfigExcelItemLootRate_GetCorruptionRate Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelItemLootRate.GetRandomId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelItemLootRate::GetRandomId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelItemLootRate", "GetRandomId");

	Params::ExcelLoaderTgfConfigExcelItemLootRate_GetRandomId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelItemLootRate.GetUnluckyGroup
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelItemLootRate::GetUnluckyGroup(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelItemLootRate", "GetUnluckyGroup");

	Params::ExcelLoaderTgfConfigExcelItemLootRate_GetUnluckyGroup Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelItemLootRate.GetUnluckyValue
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelItemLootRate::GetUnluckyValue(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelItemLootRate", "GetUnluckyValue");

	Params::ExcelLoaderTgfConfigExcelItemLootRate_GetUnluckyValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelLootUnluckyValue.GetOnlyActiveByOther
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UExcelLoaderTgfConfigExcelLootUnluckyValue::GetOnlyActiveByOther(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelLootUnluckyValue", "GetOnlyActiveByOther");

	Params::ExcelLoaderTgfConfigExcelLootUnluckyValue_GetOnlyActiveByOther Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelLootUnluckyValue.GetPriority
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelLootUnluckyValue::GetPriority(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelLootUnluckyValue", "GetPriority");

	Params::ExcelLoaderTgfConfigExcelLootUnluckyValue_GetPriority Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelLootUnluckyValue.GetRewardScore
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelLootUnluckyValue::GetRewardScore(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelLootUnluckyValue", "GetRewardScore");

	Params::ExcelLoaderTgfConfigExcelLootUnluckyValue_GetRewardScore Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelLootUnluckyValue.GetRuleId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelLootUnluckyValue::GetRuleId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelLootUnluckyValue", "GetRuleId");

	Params::ExcelLoaderTgfConfigExcelLootUnluckyValue_GetRuleId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelLootRarePoolItemRate.GetCnt
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelLootRarePoolItemRate::GetCnt(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelLootRarePoolItemRate", "GetCnt");

	Params::ExcelLoaderTgfConfigExcelLootRarePoolItemRate_GetCnt Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelLootRarePoolItemRate.GetItemId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelLootRarePoolItemRate::GetItemId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelLootRarePoolItemRate", "GetItemId");

	Params::ExcelLoaderTgfConfigExcelLootRarePoolItemRate_GetItemId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelLootRarePoolItemRate.GetRandomId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelLootRarePoolItemRate::GetRandomId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelLootRarePoolItemRate", "GetRandomId");

	Params::ExcelLoaderTgfConfigExcelLootRarePoolItemRate_GetRandomId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelLootRarePoolItemRate.GetRate
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelLootRarePoolItemRate::GetRate(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelLootRarePoolItemRate", "GetRate");

	Params::ExcelLoaderTgfConfigExcelLootRarePoolItemRate_GetRate Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelLootUeSourceChooseGroup.GetAllOfLootIds
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<int64>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int64> UExcelLoaderTgfConfigExcelLootUeSourceChooseGroup::GetAllOfLootIds()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelLootUeSourceChooseGroup", "GetAllOfLootIds");

	Params::ExcelLoaderTgfConfigExcelLootUeSourceChooseGroup_GetAllOfLootIds Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelLootUeSourceChooseGroup.GetLootIds
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelLootUeSourceChooseGroup::GetLootIds(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelLootUeSourceChooseGroup", "GetLootIds");

	Params::ExcelLoaderTgfConfigExcelLootUeSourceChooseGroup_GetLootIds Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelLootUeSourceChooseGroup.GetLootIdsSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelLootUeSourceChooseGroup::GetLootIdsSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelLootUeSourceChooseGroup", "GetLootIdsSize");

	Params::ExcelLoaderTgfConfigExcelLootUeSourceChooseGroup_GetLootIdsSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelLootUeSourceChooseGroup.GetLootType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelLootUeSourceChooseGroup::GetLootType(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelLootUeSourceChooseGroup", "GetLootType");

	Params::ExcelLoaderTgfConfigExcelLootUeSourceChooseGroup_GetLootType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelLootUeSourceChooseGroup.GetMapId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelLootUeSourceChooseGroup::GetMapId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelLootUeSourceChooseGroup", "GetMapId");

	Params::ExcelLoaderTgfConfigExcelLootUeSourceChooseGroup_GetMapId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelLootUeSourceChooseGroup.GetUeLootSourceId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelLootUeSourceChooseGroup::GetUeLootSourceId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelLootUeSourceChooseGroup", "GetUeLootSourceId");

	Params::ExcelLoaderTgfConfigExcelLootUeSourceChooseGroup_GetUeLootSourceId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelLootDisableLootId.GetLootId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelLootDisableLootId::GetLootId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelLootDisableLootId", "GetLootId");

	Params::ExcelLoaderTgfConfigExcelLootDisableLootId_GetLootId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigUeSourceLootType.GetName
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfConfigUeSourceLootType::GetName(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigUeSourceLootType", "GetName");

	Params::ExcelLoaderTgfConfigUeSourceLootType_GetName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigUeSourceLootType.GetUePath
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfConfigUeSourceLootType::GetUePath(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigUeSourceLootType", "GetUePath");

	Params::ExcelLoaderTgfConfigUeSourceLootType_GetUePath Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDLotteryKeyLimitResetInfo.GetPeriodDays
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDLotteryKeyLimitResetInfo::GetPeriodDays(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDLotteryKeyLimitResetInfo", "GetPeriodDays");

	Params::ExcelLoaderTgfDLotteryKeyLimitResetInfo_GetPeriodDays Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDLotteryKeyLimitResetInfo.GetStartDayResetTimepoint
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufTimestamp*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufTimestamp* UExcelLoaderTgfDLotteryKeyLimitResetInfo::GetStartDayResetTimepoint(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDLotteryKeyLimitResetInfo", "GetStartDayResetTimepoint");

	Params::ExcelLoaderTgfDLotteryKeyLimitResetInfo_GetStartDayResetTimepoint Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelLotteryAccessKey.GetAccessToKeys
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDLotteryKeyAccess* ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDLotteryKeyAccess* UExcelLoaderTgfConfigExcelLotteryAccessKey::GetAccessToKeys(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelLotteryAccessKey", "GetAccessToKeys");

	Params::ExcelLoaderTgfConfigExcelLotteryAccessKey_GetAccessToKeys Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelLotteryAccessKey.GetAccessToKeysSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelLotteryAccessKey::GetAccessToKeysSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelLotteryAccessKey", "GetAccessToKeysSize");

	Params::ExcelLoaderTgfConfigExcelLotteryAccessKey_GetAccessToKeysSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelLotteryAccessKey.GetAllOfAccessToKeys
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfDLotteryKeyAccess*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfDLotteryKeyAccess*> UExcelLoaderTgfConfigExcelLotteryAccessKey::GetAllOfAccessToKeys()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelLotteryAccessKey", "GetAllOfAccessToKeys");

	Params::ExcelLoaderTgfConfigExcelLotteryAccessKey_GetAllOfAccessToKeys Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelLotteryAccessKey.GetTypeId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelLotteryAccessKey::GetTypeId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelLotteryAccessKey", "GetTypeId");

	Params::ExcelLoaderTgfConfigExcelLotteryAccessKey_GetTypeId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMailTemplate.GetConfig
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDMailTemplate*     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDMailTemplate* UExcelLoaderTgfConfigExcelMailTemplate::GetConfig(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMailTemplate", "GetConfig");

	Params::ExcelLoaderTgfConfigExcelMailTemplate_GetConfig Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMailTemplate.GetTypeId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelMailTemplate::GetTypeId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMailTemplate", "GetTypeId");

	Params::ExcelLoaderTgfConfigExcelMailTemplate_GetTypeId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMapDetailMapConfig.GetRoomType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelMapDetailMapConfig::GetRoomType(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMapDetailMapConfig", "GetRoomType");

	Params::ExcelLoaderTgfConfigExcelMapDetailMapConfig_GetRoomType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMapDetailMapConfig.GetUePath
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfConfigExcelMapDetailMapConfig::GetUePath(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMapDetailMapConfig", "GetUePath");

	Params::ExcelLoaderTgfConfigExcelMapDetailMapConfig_GetUePath Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMapExp.GetAliveTime
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelMapExp::GetAliveTime(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMapExp", "GetAliveTime");

	Params::ExcelLoaderTgfConfigExcelMapExp_GetAliveTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMapExp.GetExp
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelMapExp::GetExp(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMapExp", "GetExp");

	Params::ExcelLoaderTgfConfigExcelMapExp_GetExp Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMapExp.GetMapId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelMapExp::GetMapId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMapExp", "GetMapId");

	Params::ExcelLoaderTgfConfigExcelMapExp_GetMapId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMapExp.GetTeamBonus
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelMapExp::GetTeamBonus(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMapExp", "GetTeamBonus");

	Params::ExcelLoaderTgfConfigExcelMapExp_GetTeamBonus Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMapSelect.GetAllOfModelFeatureIds
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UExcelLoaderTgfConfigExcelMapSelect::GetAllOfModelFeatureIds()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMapSelect", "GetAllOfModelFeatureIds");

	Params::ExcelLoaderTgfConfigExcelMapSelect_GetAllOfModelFeatureIds Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMapSelect.GetDifficulty
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelMapSelect::GetDifficulty(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMapSelect", "GetDifficulty");

	Params::ExcelLoaderTgfConfigExcelMapSelect_GetDifficulty Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMapSelect.GetJoinMembers
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelMapSelect::GetJoinMembers(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMapSelect", "GetJoinMembers");

	Params::ExcelLoaderTgfConfigExcelMapSelect_GetJoinMembers Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMapSelect.GetLevelId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelMapSelect::GetLevelId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMapSelect", "GetLevelId");

	Params::ExcelLoaderTgfConfigExcelMapSelect_GetLevelId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMapSelect.GetLevelType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelMapSelect::GetLevelType(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMapSelect", "GetLevelType");

	Params::ExcelLoaderTgfConfigExcelMapSelect_GetLevelType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMapSelect.GetMapId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelMapSelect::GetMapId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMapSelect", "GetMapId");

	Params::ExcelLoaderTgfConfigExcelMapSelect_GetMapId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMapSelect.GetMapName
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfConfigExcelMapSelect::GetMapName(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMapSelect", "GetMapName");

	Params::ExcelLoaderTgfConfigExcelMapSelect_GetMapName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMapSelect.GetMapNameId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfConfigExcelMapSelect::GetMapNameId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMapSelect", "GetMapNameId");

	Params::ExcelLoaderTgfConfigExcelMapSelect_GetMapNameId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMapSelect.GetMapRes
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfConfigExcelMapSelect::GetMapRes(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMapSelect", "GetMapRes");

	Params::ExcelLoaderTgfConfigExcelMapSelect_GetMapRes Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMapSelect.GetMapSelectBgRes
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfConfigExcelMapSelect::GetMapSelectBgRes(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMapSelect", "GetMapSelectBgRes");

	Params::ExcelLoaderTgfConfigExcelMapSelect_GetMapSelectBgRes Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMapSelect.GetModelFeatureIds
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelMapSelect::GetModelFeatureIds(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMapSelect", "GetModelFeatureIds");

	Params::ExcelLoaderTgfConfigExcelMapSelect_GetModelFeatureIds Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMapSelect.GetModelFeatureIdsSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelMapSelect::GetModelFeatureIdsSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMapSelect", "GetModelFeatureIdsSize");

	Params::ExcelLoaderTgfConfigExcelMapSelect_GetModelFeatureIdsSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfMarketNormalCost.GetCostPrice
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfMarketNormalCost::GetCostPrice(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfMarketNormalCost", "GetCostPrice");

	Params::ExcelLoaderTgfMarketNormalCost_GetCostPrice Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfMarketNormalCost.GetCostType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfMarketNormalCost::GetCostType(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfMarketNormalCost", "GetCostType");

	Params::ExcelLoaderTgfMarketNormalCost_GetCostType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfMarketNormalCost.GetOriginPrice
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfMarketNormalCost::GetOriginPrice(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfMarketNormalCost", "GetOriginPrice");

	Params::ExcelLoaderTgfMarketNormalCost_GetOriginPrice Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfMarketTabInfo.GetDisplayOrder
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfMarketTabInfo::GetDisplayOrder(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfMarketTabInfo", "GetDisplayOrder");

	Params::ExcelLoaderTgfMarketTabInfo_GetDisplayOrder Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfMarketTabInfo.GetDisplayTabId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfMarketTabInfo::GetDisplayTabId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfMarketTabInfo", "GetDisplayTabId");

	Params::ExcelLoaderTgfMarketTabInfo_GetDisplayTabId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfMarketTabInfo.GetMarketTabId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfMarketTabInfo::GetMarketTabId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfMarketTabInfo", "GetMarketTabId");

	Params::ExcelLoaderTgfMarketTabInfo_GetMarketTabId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfMarketTabInfo.GetName
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfMarketTabInfo::GetName(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfMarketTabInfo", "GetName");

	Params::ExcelLoaderTgfMarketTabInfo_GetName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfMarketTabInfo.GetPeriod
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfMarketTabInfo::GetPeriod(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfMarketTabInfo", "GetPeriod");

	Params::ExcelLoaderTgfMarketTabInfo_GetPeriod Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfMarketTabInfo.GetRandomCount
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfMarketTabInfo::GetRandomCount(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfMarketTabInfo", "GetRandomCount");

	Params::ExcelLoaderTgfMarketTabInfo_GetRandomCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfMarketTabInfo.GetStartTimepoint
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufTimestamp*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufTimestamp* UExcelLoaderTgfMarketTabInfo::GetStartTimepoint(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfMarketTabInfo", "GetStartTimepoint");

	Params::ExcelLoaderTgfMarketTabInfo_GetStartTimepoint Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfMarketProductItem.GetAllOfCostOptions
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfMarketNormalOptionCost*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfMarketNormalOptionCost*> UExcelLoaderTgfMarketProductItem::GetAllOfCostOptions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfMarketProductItem", "GetAllOfCostOptions");

	Params::ExcelLoaderTgfMarketProductItem_GetAllOfCostOptions Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfMarketProductItem.GetAllOfRewardItems
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfDItemOffset*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfDItemOffset*> UExcelLoaderTgfMarketProductItem::GetAllOfRewardItems()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfMarketProductItem", "GetAllOfRewardItems");

	Params::ExcelLoaderTgfMarketProductItem_GetAllOfRewardItems Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfMarketProductItem.GetAutoUseRewardItems
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UExcelLoaderTgfMarketProductItem::GetAutoUseRewardItems(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfMarketProductItem", "GetAutoUseRewardItems");

	Params::ExcelLoaderTgfMarketProductItem_GetAutoUseRewardItems Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfMarketProductItem.GetBuyEndTimepoint
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufTimestamp*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufTimestamp* UExcelLoaderTgfMarketProductItem::GetBuyEndTimepoint(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfMarketProductItem", "GetBuyEndTimepoint");

	Params::ExcelLoaderTgfMarketProductItem_GetBuyEndTimepoint Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfMarketProductItem.GetBuyStartTimepoint
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufTimestamp*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufTimestamp* UExcelLoaderTgfMarketProductItem::GetBuyStartTimepoint(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfMarketProductItem", "GetBuyStartTimepoint");

	Params::ExcelLoaderTgfMarketProductItem_GetBuyStartTimepoint Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfMarketProductItem.GetCostOptions
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfMarketNormalOptionCost*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfMarketNormalOptionCost* UExcelLoaderTgfMarketProductItem::GetCostOptions(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfMarketProductItem", "GetCostOptions");

	Params::ExcelLoaderTgfMarketProductItem_GetCostOptions Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfMarketProductItem.GetCostOptionsSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfMarketProductItem::GetCostOptionsSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfMarketProductItem", "GetCostOptionsSize");

	Params::ExcelLoaderTgfMarketProductItem_GetCostOptionsSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfMarketProductItem.GetDescription
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfMarketProductItem::GetDescription(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfMarketProductItem", "GetDescription");

	Params::ExcelLoaderTgfMarketProductItem_GetDescription Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfMarketProductItem.GetDiscountEndTimepoint
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufTimestamp*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufTimestamp* UExcelLoaderTgfMarketProductItem::GetDiscountEndTimepoint(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfMarketProductItem", "GetDiscountEndTimepoint");

	Params::ExcelLoaderTgfMarketProductItem_GetDiscountEndTimepoint Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfMarketProductItem.GetDiscountStartTimepoint
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufTimestamp*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufTimestamp* UExcelLoaderTgfMarketProductItem::GetDiscountStartTimepoint(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfMarketProductItem", "GetDiscountStartTimepoint");

	Params::ExcelLoaderTgfMarketProductItem_GetDiscountStartTimepoint Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfMarketProductItem.GetDisplayOrder
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfMarketProductItem::GetDisplayOrder(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfMarketProductItem", "GetDisplayOrder");

	Params::ExcelLoaderTgfMarketProductItem_GetDisplayOrder Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfMarketProductItem.GetIcon
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfMarketProductItem::GetIcon(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfMarketProductItem", "GetIcon");

	Params::ExcelLoaderTgfMarketProductItem_GetIcon Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfMarketProductItem.GetIdentified
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UExcelLoaderTgfMarketProductItem::GetIdentified(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfMarketProductItem", "GetIdentified");

	Params::ExcelLoaderTgfMarketProductItem_GetIdentified Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfMarketProductItem.GetIsDisabledAutoRefresh
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UExcelLoaderTgfMarketProductItem::GetIsDisabledAutoRefresh(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfMarketProductItem", "GetIsDisabledAutoRefresh");

	Params::ExcelLoaderTgfMarketProductItem_GetIsDisabledAutoRefresh Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfMarketProductItem.GetIsOnSale
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UExcelLoaderTgfMarketProductItem::GetIsOnSale(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfMarketProductItem", "GetIsOnSale");

	Params::ExcelLoaderTgfMarketProductItem_GetIsOnSale Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfMarketProductItem.GetIsSpecialCost
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UExcelLoaderTgfMarketProductItem::GetIsSpecialCost(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfMarketProductItem", "GetIsSpecialCost");

	Params::ExcelLoaderTgfMarketProductItem_GetIsSpecialCost Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfMarketProductItem.GetLevelTrigger
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfMarketProductItem::GetLevelTrigger(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfMarketProductItem", "GetLevelTrigger");

	Params::ExcelLoaderTgfMarketProductItem_GetLevelTrigger Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfMarketProductItem.GetMarketTabId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfMarketProductItem::GetMarketTabId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfMarketProductItem", "GetMarketTabId");

	Params::ExcelLoaderTgfMarketProductItem_GetMarketTabId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfMarketProductItem.GetMarketType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfMarketProductItem::GetMarketType(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfMarketProductItem", "GetMarketType");

	Params::ExcelLoaderTgfMarketProductItem_GetMarketType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfMarketProductItem.GetName
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfMarketProductItem::GetName(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfMarketProductItem", "GetName");

	Params::ExcelLoaderTgfMarketProductItem_GetName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfMarketProductItem.GetProductId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfMarketProductItem::GetProductId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfMarketProductItem", "GetProductId");

	Params::ExcelLoaderTgfMarketProductItem_GetProductId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfMarketProductItem.GetRandomWeight
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfMarketProductItem::GetRandomWeight(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfMarketProductItem", "GetRandomWeight");

	Params::ExcelLoaderTgfMarketProductItem_GetRandomWeight Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfMarketProductItem.GetRarity
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfMarketProductItem::GetRarity(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfMarketProductItem", "GetRarity");

	Params::ExcelLoaderTgfMarketProductItem_GetRarity Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfMarketProductItem.GetRefreshCount
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfMarketProductItem::GetRefreshCount(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfMarketProductItem", "GetRefreshCount");

	Params::ExcelLoaderTgfMarketProductItem_GetRefreshCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfMarketProductItem.GetRefreshPoolId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfMarketProductItem::GetRefreshPoolId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfMarketProductItem", "GetRefreshPoolId");

	Params::ExcelLoaderTgfMarketProductItem_GetRefreshPoolId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfMarketProductItem.GetRewardItems
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDItemOffset*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDItemOffset* UExcelLoaderTgfMarketProductItem::GetRewardItems(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfMarketProductItem", "GetRewardItems");

	Params::ExcelLoaderTgfMarketProductItem_GetRewardItems Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfMarketProductItem.GetRewardItemsSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfMarketProductItem::GetRewardItemsSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfMarketProductItem", "GetRewardItemsSize");

	Params::ExcelLoaderTgfMarketProductItem_GetRewardItemsSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfMarketProductItem.GetSkuId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfMarketProductItem::GetSkuId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfMarketProductItem", "GetSkuId");

	Params::ExcelLoaderTgfMarketProductItem_GetSkuId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfMarketProductItem.GetVideopath
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfMarketProductItem::GetVideopath(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfMarketProductItem", "GetVideopath");

	Params::ExcelLoaderTgfMarketProductItem_GetVideopath Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfMarketNormalOptionCost.GetAllOfCostItems
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfMarketNormalCost*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfMarketNormalCost*> UExcelLoaderTgfMarketNormalOptionCost::GetAllOfCostItems()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfMarketNormalOptionCost", "GetAllOfCostItems");

	Params::ExcelLoaderTgfMarketNormalOptionCost_GetAllOfCostItems Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfMarketNormalOptionCost.GetCostItems
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfMarketNormalCost*  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfMarketNormalCost* UExcelLoaderTgfMarketNormalOptionCost::GetCostItems(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfMarketNormalOptionCost", "GetCostItems");

	Params::ExcelLoaderTgfMarketNormalOptionCost_GetCostItems Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfMarketNormalOptionCost.GetCostItemsSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfMarketNormalOptionCost::GetCostItemsSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfMarketNormalOptionCost", "GetCostItemsSize");

	Params::ExcelLoaderTgfMarketNormalOptionCost_GetCostItemsSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfMarketPopupVideo.GetBeginTime
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufTimestamp*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufTimestamp* UExcelLoaderTgfMarketPopupVideo::GetBeginTime(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfMarketPopupVideo", "GetBeginTime");

	Params::ExcelLoaderTgfMarketPopupVideo_GetBeginTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfMarketPopupVideo.GetEndTime
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufTimestamp*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufTimestamp* UExcelLoaderTgfMarketPopupVideo::GetEndTime(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfMarketPopupVideo", "GetEndTime");

	Params::ExcelLoaderTgfMarketPopupVideo_GetEndTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfMarketPopupVideo.GetMarketId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfMarketPopupVideo::GetMarketId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfMarketPopupVideo", "GetMarketId");

	Params::ExcelLoaderTgfMarketPopupVideo_GetMarketId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfMarketPopupVideo.GetPopupVideoId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfMarketPopupVideo::GetPopupVideoId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfMarketPopupVideo", "GetPopupVideoId");

	Params::ExcelLoaderTgfMarketPopupVideo_GetPopupVideoId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfMarketPopupVideo.GetVideopath
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfMarketPopupVideo::GetVideopath(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfMarketPopupVideo", "GetVideopath");

	Params::ExcelLoaderTgfMarketPopupVideo_GetVideopath Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMarketTabInfo.GetData
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfMarketTabInfo*     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfMarketTabInfo* UExcelLoaderTgfConfigExcelMarketTabInfo::GetData(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMarketTabInfo", "GetData");

	Params::ExcelLoaderTgfConfigExcelMarketTabInfo_GetData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMarketTabInfo.GetMarketTabId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelMarketTabInfo::GetMarketTabId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMarketTabInfo", "GetMarketTabId");

	Params::ExcelLoaderTgfConfigExcelMarketTabInfo_GetMarketTabId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMarketInfo.GetData
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfMarketInfo*        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfMarketInfo* UExcelLoaderTgfConfigExcelMarketInfo::GetData(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMarketInfo", "GetData");

	Params::ExcelLoaderTgfConfigExcelMarketInfo_GetData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMarketInfo.GetMarketId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelMarketInfo::GetMarketId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMarketInfo", "GetMarketId");

	Params::ExcelLoaderTgfConfigExcelMarketInfo_GetMarketId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMarketSpecialCost.GetData
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfMarketSpecialCost* ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfMarketSpecialCost* UExcelLoaderTgfConfigExcelMarketSpecialCost::GetData(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMarketSpecialCost", "GetData");

	Params::ExcelLoaderTgfConfigExcelMarketSpecialCost_GetData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMarketSpecialCost.GetProductId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelMarketSpecialCost::GetProductId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMarketSpecialCost", "GetProductId");

	Params::ExcelLoaderTgfConfigExcelMarketSpecialCost_GetProductId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMarketSpecialCost.GetSortIdx
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelMarketSpecialCost::GetSortIdx(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMarketSpecialCost", "GetSortIdx");

	Params::ExcelLoaderTgfConfigExcelMarketSpecialCost_GetSortIdx Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMatchingPool.GetAllOfRuleGroupIds
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UExcelLoaderTgfConfigExcelMatchingPool::GetAllOfRuleGroupIds()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMatchingPool", "GetAllOfRuleGroupIds");

	Params::ExcelLoaderTgfConfigExcelMatchingPool_GetAllOfRuleGroupIds Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMatchingPool.GetFactionMaxSize
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelMatchingPool::GetFactionMaxSize(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMatchingPool", "GetFactionMaxSize");

	Params::ExcelLoaderTgfConfigExcelMatchingPool_GetFactionMaxSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMatchingPool.GetFactionMinSize
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelMatchingPool::GetFactionMinSize(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMatchingPool", "GetFactionMinSize");

	Params::ExcelLoaderTgfConfigExcelMatchingPool_GetFactionMinSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMatchingPool.GetId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelMatchingPool::GetId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMatchingPool", "GetId");

	Params::ExcelLoaderTgfConfigExcelMatchingPool_GetId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMatchingPool.GetOrderBy
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelMatchingPool::GetOrderBy(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMatchingPool", "GetOrderBy");

	Params::ExcelLoaderTgfConfigExcelMatchingPool_GetOrderBy Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMatchingPool.GetRuleGroupIds
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelMatchingPool::GetRuleGroupIds(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMatchingPool", "GetRuleGroupIds");

	Params::ExcelLoaderTgfConfigExcelMatchingPool_GetRuleGroupIds Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMatchingPool.GetRuleGroupIdsSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelMatchingPool::GetRuleGroupIdsSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMatchingPool", "GetRuleGroupIdsSize");

	Params::ExcelLoaderTgfConfigExcelMatchingPool_GetRuleGroupIdsSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMatchingPool.GetTeamMaxSize
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelMatchingPool::GetTeamMaxSize(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMatchingPool", "GetTeamMaxSize");

	Params::ExcelLoaderTgfConfigExcelMatchingPool_GetTeamMaxSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMatchingPool.GetUserLower
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelMatchingPool::GetUserLower(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMatchingPool", "GetUserLower");

	Params::ExcelLoaderTgfConfigExcelMatchingPool_GetUserLower Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMatchingPool.GetUserUpper
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelMatchingPool::GetUserUpper(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMatchingPool", "GetUserUpper");

	Params::ExcelLoaderTgfConfigExcelMatchingPool_GetUserUpper Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigDMatchingRuleForceLimit.GetCount
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigDMatchingRuleForceLimit::GetCount(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigDMatchingRuleForceLimit", "GetCount");

	Params::ExcelLoaderTgfConfigDMatchingRuleForceLimit_GetCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigDMatchingRuleForceLimit.GetForceType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigDMatchingRuleForceLimit::GetForceType(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigDMatchingRuleForceLimit", "GetForceType");

	Params::ExcelLoaderTgfConfigDMatchingRuleForceLimit_GetForceType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMatchingRuleTimeLimit.GetMax
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelMatchingRuleTimeLimit::GetMax(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMatchingRuleTimeLimit", "GetMax");

	Params::ExcelLoaderTgfConfigExcelMatchingRuleTimeLimit_GetMax Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMatchingRuleTimeLimit.GetMin
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelMatchingRuleTimeLimit::GetMin(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMatchingRuleTimeLimit", "GetMin");

	Params::ExcelLoaderTgfConfigExcelMatchingRuleTimeLimit_GetMin Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigDMatchTeamTemplate.GetCount
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigDMatchTeamTemplate::GetCount(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigDMatchTeamTemplate", "GetCount");

	Params::ExcelLoaderTgfConfigDMatchTeamTemplate_GetCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigDMatchTeamTemplate.GetPlayerNumber
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigDMatchTeamTemplate::GetPlayerNumber(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigDMatchTeamTemplate", "GetPlayerNumber");

	Params::ExcelLoaderTgfConfigDMatchTeamTemplate_GetPlayerNumber Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMatchingContinuousSuccessOrFailureAdding.GetFailed
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelMatchingContinuousSuccessOrFailureAdding::GetFailed(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMatchingContinuousSuccessOrFailureAdding", "GetFailed");

	Params::ExcelLoaderTgfConfigExcelMatchingContinuousSuccessOrFailureAdding_GetFailed Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMatchingContinuousSuccessOrFailureAdding.GetSuccess
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelMatchingContinuousSuccessOrFailureAdding::GetSuccess(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMatchingContinuousSuccessOrFailureAdding", "GetSuccess");

	Params::ExcelLoaderTgfConfigExcelMatchingContinuousSuccessOrFailureAdding_GetSuccess Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMatchingContinuousSuccessOrFailureAdding.GetTimes
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelMatchingContinuousSuccessOrFailureAdding::GetTimes(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMatchingContinuousSuccessOrFailureAdding", "GetTimes");

	Params::ExcelLoaderTgfConfigExcelMatchingContinuousSuccessOrFailureAdding_GetTimes Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMatchingAddRobotRule.GetLowerLimit
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelMatchingAddRobotRule::GetLowerLimit(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMatchingAddRobotRule", "GetLowerLimit");

	Params::ExcelLoaderTgfConfigExcelMatchingAddRobotRule_GetLowerLimit Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMatchingAddRobotRule.GetUpperLimit
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelMatchingAddRobotRule::GetUpperLimit(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMatchingAddRobotRule", "GetUpperLimit");

	Params::ExcelLoaderTgfConfigExcelMatchingAddRobotRule_GetUpperLimit Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMatchingAddRobotRule.GetUserCount
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelMatchingAddRobotRule::GetUserCount(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMatchingAddRobotRule", "GetUserCount");

	Params::ExcelLoaderTgfConfigExcelMatchingAddRobotRule_GetUserCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMatchingFactionTemplate.GetAllOfUnit
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigDMatchingFactionUnit*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigDMatchingFactionUnit*> UExcelLoaderTgfConfigExcelMatchingFactionTemplate::GetAllOfUnit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMatchingFactionTemplate", "GetAllOfUnit");

	Params::ExcelLoaderTgfConfigExcelMatchingFactionTemplate_GetAllOfUnit Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMatchingFactionTemplate.GetId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelMatchingFactionTemplate::GetId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMatchingFactionTemplate", "GetId");

	Params::ExcelLoaderTgfConfigExcelMatchingFactionTemplate_GetId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMatchingFactionTemplate.GetUnit
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigDMatchingFactionUnit*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigDMatchingFactionUnit* UExcelLoaderTgfConfigExcelMatchingFactionTemplate::GetUnit(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMatchingFactionTemplate", "GetUnit");

	Params::ExcelLoaderTgfConfigExcelMatchingFactionTemplate_GetUnit Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMatchingFactionTemplate.GetUnitSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelMatchingFactionTemplate::GetUnitSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMatchingFactionTemplate", "GetUnitSize");

	Params::ExcelLoaderTgfConfigExcelMatchingFactionTemplate_GetUnitSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMithrilForceItem.GetDescription
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfConfigExcelMithrilForceItem::GetDescription(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMithrilForceItem", "GetDescription");

	Params::ExcelLoaderTgfConfigExcelMithrilForceItem_GetDescription Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMithrilForceItem.GetId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelMithrilForceItem::GetId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMithrilForceItem", "GetId");

	Params::ExcelLoaderTgfConfigExcelMithrilForceItem_GetId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMithrilForceItem.GetTabId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelMithrilForceItem::GetTabId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMithrilForceItem", "GetTabId");

	Params::ExcelLoaderTgfConfigExcelMithrilForceItem_GetTabId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMithrilForceItem.GetUnlockLevel
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelMithrilForceItem::GetUnlockLevel(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMithrilForceItem", "GetUnlockLevel");

	Params::ExcelLoaderTgfConfigExcelMithrilForceItem_GetUnlockLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMithrilForceItem.GetWearingCountLimit
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelMithrilForceItem::GetWearingCountLimit(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMithrilForceItem", "GetWearingCountLimit");

	Params::ExcelLoaderTgfConfigExcelMithrilForceItem_GetWearingCountLimit Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMithrilForceSettlementFactor.GetAffixActiveCoefficient
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelMithrilForceSettlementFactor::GetAffixActiveCoefficient(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMithrilForceSettlementFactor", "GetAffixActiveCoefficient");

	Params::ExcelLoaderTgfConfigExcelMithrilForceSettlementFactor_GetAffixActiveCoefficient Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMithrilForceSettlementFactor.GetCurrencyActiveCoefficient
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelMithrilForceSettlementFactor::GetCurrencyActiveCoefficient(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMithrilForceSettlementFactor", "GetCurrencyActiveCoefficient");

	Params::ExcelLoaderTgfConfigExcelMithrilForceSettlementFactor_GetCurrencyActiveCoefficient Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMithrilForceSettlementFactor.GetDamage
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelMithrilForceSettlementFactor::GetDamage(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMithrilForceSettlementFactor", "GetDamage");

	Params::ExcelLoaderTgfConfigExcelMithrilForceSettlementFactor_GetDamage Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMithrilForceSettlementFactor.GetExpBottleActiveCoefficient
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelMithrilForceSettlementFactor::GetExpBottleActiveCoefficient(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMithrilForceSettlementFactor", "GetExpBottleActiveCoefficient");

	Params::ExcelLoaderTgfConfigExcelMithrilForceSettlementFactor_GetExpBottleActiveCoefficient Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMithrilForceSettlementFactor.GetHeirloomItemCoefficient
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelMithrilForceSettlementFactor::GetHeirloomItemCoefficient(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMithrilForceSettlementFactor", "GetHeirloomItemCoefficient");

	Params::ExcelLoaderTgfConfigExcelMithrilForceSettlementFactor_GetHeirloomItemCoefficient Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelMithrilForceSettlementFactor.GetPotionActiveCoefficient
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelMithrilForceSettlementFactor::GetPotionActiveCoefficient(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelMithrilForceSettlementFactor", "GetPotionActiveCoefficient");

	Params::ExcelLoaderTgfConfigExcelMithrilForceSettlementFactor_GetPotionActiveCoefficient Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDQuestUnlockConditionItem.GetAddByOutBusinessSystem
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfDQuestUnlockConditionItem::GetAddByOutBusinessSystem(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDQuestUnlockConditionItem", "GetAddByOutBusinessSystem");

	Params::ExcelLoaderTgfDQuestUnlockConditionItem_GetAddByOutBusinessSystem Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDQuestUnlockConditionItem.GetHasSpecifyRole
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfDQuestUnlockConditionItem::GetHasSpecifyRole(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDQuestUnlockConditionItem", "GetHasSpecifyRole");

	Params::ExcelLoaderTgfDQuestUnlockConditionItem_GetHasSpecifyRole Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDQuestUnlockConditionItem.GetPlayerLevel
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfDQuestUnlockConditionItem::GetPlayerLevel(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDQuestUnlockConditionItem", "GetPlayerLevel");

	Params::ExcelLoaderTgfDQuestUnlockConditionItem_GetPlayerLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDQuestUnlockConditionItem.GetPreviousQuest
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfDQuestUnlockConditionItem::GetPreviousQuest(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDQuestUnlockConditionItem", "GetPreviousQuest");

	Params::ExcelLoaderTgfDQuestUnlockConditionItem_GetPreviousQuest Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDQuestUnlockConditionItem.GetRankArrive
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfDQuestUnlockConditionItem::GetRankArrive(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDQuestUnlockConditionItem", "GetRankArrive");

	Params::ExcelLoaderTgfDQuestUnlockConditionItem_GetRankArrive Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDQuestUnlockConditionItem.GetRoleTotal
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfDQuestUnlockConditionItem::GetRoleTotal(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDQuestUnlockConditionItem", "GetRoleTotal");

	Params::ExcelLoaderTgfDQuestUnlockConditionItem_GetRoleTotal Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDQuestUnlockConditionItem.GetSeasonId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDQuestUnlockConditionItem::GetSeasonId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDQuestUnlockConditionItem", "GetSeasonId");

	Params::ExcelLoaderTgfDQuestUnlockConditionItem_GetSeasonId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDQuestUnlockConditionItem.GetStartTimepoint
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfDQuestUnlockConditionItem::GetStartTimepoint(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDQuestUnlockConditionItem", "GetStartTimepoint");

	Params::ExcelLoaderTgfDQuestUnlockConditionItem_GetStartTimepoint Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDQuestUnlockConditionItem.GetUnlockTypeCase
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EExcelLoaderTgfDQuestUnlockConditionItemUnlockTypeReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EExcelLoaderTgfDQuestUnlockConditionItemUnlockType UExcelLoaderTgfDQuestUnlockConditionItem::GetUnlockTypeCase()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDQuestUnlockConditionItem", "GetUnlockTypeCase");

	Params::ExcelLoaderTgfDQuestUnlockConditionItem_GetUnlockTypeCase Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDQuestUnlockConditionItem.GetVipLevel
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfDQuestUnlockConditionItem::GetVipLevel(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDQuestUnlockConditionItem", "GetVipLevel");

	Params::ExcelLoaderTgfDQuestUnlockConditionItem_GetVipLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfQuestProgressConditionItemRarity.GetAllOfValues
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UExcelLoaderTgfQuestProgressConditionItemRarity::GetAllOfValues()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfQuestProgressConditionItemRarity", "GetAllOfValues");

	Params::ExcelLoaderTgfQuestProgressConditionItemRarity_GetAllOfValues Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfQuestProgressConditionItemRarity.GetValues
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfQuestProgressConditionItemRarity::GetValues(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfQuestProgressConditionItemRarity", "GetValues");

	Params::ExcelLoaderTgfQuestProgressConditionItemRarity_GetValues Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfQuestProgressConditionItemRarity.GetValuesSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfQuestProgressConditionItemRarity::GetValuesSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfQuestProgressConditionItemRarity", "GetValuesSize");

	Params::ExcelLoaderTgfQuestProgressConditionItemRarity_GetValuesSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit.GetLimitBattleForAcType
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit::GetLimitBattleForAcType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit", "GetLimitBattleForAcType");

	Params::ExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit_GetLimitBattleForAcType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit.GetLimitBattleGameOverType
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit::GetLimitBattleGameOverType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit", "GetLimitBattleGameOverType");

	Params::ExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit_GetLimitBattleGameOverType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit.GetLimitBattleIsInTeam
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit::GetLimitBattleIsInTeam()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit", "GetLimitBattleIsInTeam");

	Params::ExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit_GetLimitBattleIsInTeam Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit.GetLimitBattleSceneTag
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit::GetLimitBattleSceneTag()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit", "GetLimitBattleSceneTag");

	Params::ExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit_GetLimitBattleSceneTag Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit.GetLimitBattleWhichLevelId
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit::GetLimitBattleWhichLevelId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit", "GetLimitBattleWhichLevelId");

	Params::ExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit_GetLimitBattleWhichLevelId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit.GetLimitBattleWhichLevelType
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit::GetLimitBattleWhichLevelType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit", "GetLimitBattleWhichLevelType");

	Params::ExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit_GetLimitBattleWhichLevelType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit.GetLimitBattleWhichOneLevelId
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit::GetLimitBattleWhichOneLevelId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit", "GetLimitBattleWhichOneLevelId");

	Params::ExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit_GetLimitBattleWhichOneLevelId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit.GetLimitBattleWhichRoleType
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit::GetLimitBattleWhichRoleType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit", "GetLimitBattleWhichRoleType");

	Params::ExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit_GetLimitBattleWhichRoleType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit.GetLimitBattleWhichScenseType
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit::GetLimitBattleWhichScenseType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit", "GetLimitBattleWhichScenseType");

	Params::ExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit_GetLimitBattleWhichScenseType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit.GetLimitItemChgChannel
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit::GetLimitItemChgChannel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit", "GetLimitItemChgChannel");

	Params::ExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit_GetLimitItemChgChannel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit.GetLimitItemChgMainType
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit::GetLimitItemChgMainType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit", "GetLimitItemChgMainType");

	Params::ExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit_GetLimitItemChgMainType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit.GetLimitItemChgSubType
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit::GetLimitItemChgSubType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit", "GetLimitItemChgSubType");

	Params::ExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit_GetLimitItemChgSubType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit.GetLimitItemGemShapeType
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit::GetLimitItemGemShapeType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit", "GetLimitItemGemShapeType");

	Params::ExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit_GetLimitItemGemShapeType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit.GetLimitItemMajorType
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit::GetLimitItemMajorType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit", "GetLimitItemMajorType");

	Params::ExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit_GetLimitItemMajorType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit.GetLimitItemRaity
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit::GetLimitItemRaity()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit", "GetLimitItemRaity");

	Params::ExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit_GetLimitItemRaity Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit.GetLimitPlayerCausedDamageForActorLt
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit::GetLimitPlayerCausedDamageForActorLt()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit", "GetLimitPlayerCausedDamageForActorLt");

	Params::ExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit_GetLimitPlayerCausedDamageForActorLt Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit.GetLimitPlayerCausedDamageForActorNotLt
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit::GetLimitPlayerCausedDamageForActorNotLt()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit", "GetLimitPlayerCausedDamageForActorNotLt");

	Params::ExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit_GetLimitPlayerCausedDamageForActorNotLt Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit.GetLimitPlayerCausedDamageLt
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit::GetLimitPlayerCausedDamageLt()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit", "GetLimitPlayerCausedDamageLt");

	Params::ExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit_GetLimitPlayerCausedDamageLt Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit.GetLimitPlayerCausedDamageNotLt
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit::GetLimitPlayerCausedDamageNotLt()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit", "GetLimitPlayerCausedDamageNotLt");

	Params::ExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit_GetLimitPlayerCausedDamageNotLt Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit.GetLimitPlayerCausedDamagePercentNotLt
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit::GetLimitPlayerCausedDamagePercentNotLt()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit", "GetLimitPlayerCausedDamagePercentNotLt");

	Params::ExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit_GetLimitPlayerCausedDamagePercentNotLt Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit.GetLimitPlayerCausedHealLt
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit::GetLimitPlayerCausedHealLt()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit", "GetLimitPlayerCausedHealLt");

	Params::ExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit_GetLimitPlayerCausedHealLt Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit.GetLimitPlayerCausedHealNotLt
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit::GetLimitPlayerCausedHealNotLt()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit", "GetLimitPlayerCausedHealNotLt");

	Params::ExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit_GetLimitPlayerCausedHealNotLt Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit.GetLimitPlayerCausedHealPercentNotLt
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit::GetLimitPlayerCausedHealPercentNotLt()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit", "GetLimitPlayerCausedHealPercentNotLt");

	Params::ExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit_GetLimitPlayerCausedHealPercentNotLt Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit.GetLimitPlayerDeathEachLt
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit::GetLimitPlayerDeathEachLt()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit", "GetLimitPlayerDeathEachLt");

	Params::ExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit_GetLimitPlayerDeathEachLt Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit.GetLimitPlayerGotDamageLt
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit::GetLimitPlayerGotDamageLt()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit", "GetLimitPlayerGotDamageLt");

	Params::ExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit_GetLimitPlayerGotDamageLt Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit.GetLimitPlayerGotDamageNotLt
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit::GetLimitPlayerGotDamageNotLt()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit", "GetLimitPlayerGotDamageNotLt");

	Params::ExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit_GetLimitPlayerGotDamageNotLt Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit.GetLimitPlayerKillActorEachNotLt
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit::GetLimitPlayerKillActorEachNotLt()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit", "GetLimitPlayerKillActorEachNotLt");

	Params::ExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit_GetLimitPlayerKillActorEachNotLt Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit.GetLimitPlayerKillActorLt
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit::GetLimitPlayerKillActorLt()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit", "GetLimitPlayerKillActorLt");

	Params::ExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit_GetLimitPlayerKillActorLt Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit.GetLimitPlayerKillActorNotLt
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit::GetLimitPlayerKillActorNotLt()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit", "GetLimitPlayerKillActorNotLt");

	Params::ExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit_GetLimitPlayerKillActorNotLt Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit.GetLimitPlayerKillLt
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit::GetLimitPlayerKillLt()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit", "GetLimitPlayerKillLt");

	Params::ExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit_GetLimitPlayerKillLt Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit.GetLimitPlayerKillNotLt
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit::GetLimitPlayerKillNotLt()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit", "GetLimitPlayerKillNotLt");

	Params::ExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit_GetLimitPlayerKillNotLt Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit.GetLimitPlayerMatchPoint
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit::GetLimitPlayerMatchPoint()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit", "GetLimitPlayerMatchPoint");

	Params::ExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit_GetLimitPlayerMatchPoint Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit.GetLimitPlayerRivalWinQtyLt
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit::GetLimitPlayerRivalWinQtyLt()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit", "GetLimitPlayerRivalWinQtyLt");

	Params::ExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit_GetLimitPlayerRivalWinQtyLt Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit.GetLimitRoleCreatedTimeGtQuest
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit::GetLimitRoleCreatedTimeGtQuest()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit", "GetLimitRoleCreatedTimeGtQuest");

	Params::ExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit_GetLimitRoleCreatedTimeGtQuest Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit.GetLimitRoleHistoryMaxLevelLess
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit::GetLimitRoleHistoryMaxLevelLess()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit", "GetLimitRoleHistoryMaxLevelLess");

	Params::ExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit_GetLimitRoleHistoryMaxLevelLess Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit.GetLimitRoleLevel
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit::GetLimitRoleLevel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit", "GetLimitRoleLevel");

	Params::ExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit_GetLimitRoleLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit.GetLimitRoleWhichCareer
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit::GetLimitRoleWhichCareer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit", "GetLimitRoleWhichCareer");

	Params::ExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit_GetLimitRoleWhichCareer Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit.GetLimitRoleWhichForce
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit::GetLimitRoleWhichForce()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit", "GetLimitRoleWhichForce");

	Params::ExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit_GetLimitRoleWhichForce Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit.GetLimitRoleWhichGender
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit::GetLimitRoleWhichGender()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit", "GetLimitRoleWhichGender");

	Params::ExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit_GetLimitRoleWhichGender Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit.GetLimitRoleWhichRace
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit::GetLimitRoleWhichRace()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit", "GetLimitRoleWhichRace");

	Params::ExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit_GetLimitRoleWhichRace Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit.GetLimitTotalCoinGreaterThan
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit::GetLimitTotalCoinGreaterThan()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit", "GetLimitTotalCoinGreaterThan");

	Params::ExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit_GetLimitTotalCoinGreaterThan Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit.GetLimitTotalCoinLessThan
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit::GetLimitTotalCoinLessThan()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit", "GetLimitTotalCoinLessThan");

	Params::ExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit_GetLimitTotalCoinLessThan Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit.GetLimitTotalCoinNotGt
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit::GetLimitTotalCoinNotGt()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit", "GetLimitTotalCoinNotGt");

	Params::ExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit_GetLimitTotalCoinNotGt Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit.GetLimitTotalCoinNotLt
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit::GetLimitTotalCoinNotLt()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit", "GetLimitTotalCoinNotLt");

	Params::ExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit_GetLimitTotalCoinNotLt Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit.GetLimitTotalQuestWorthLessThan
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit::GetLimitTotalQuestWorthLessThan()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit", "GetLimitTotalQuestWorthLessThan");

	Params::ExcelLoaderOneofHelperTgfQuestProgressConditionDataLimit_GetLimitTotalQuestWorthLessThan Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelQuestList.GetActivityId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelQuestList::GetActivityId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelQuestList", "GetActivityId");

	Params::ExcelLoaderTgfConfigExcelQuestList_GetActivityId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelQuestList.GetAddProgress
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelQuestList::GetAddProgress(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelQuestList", "GetAddProgress");

	Params::ExcelLoaderTgfConfigExcelQuestList_GetAddProgress Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelQuestList.GetAdventureId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelQuestList::GetAdventureId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelQuestList", "GetAdventureId");

	Params::ExcelLoaderTgfConfigExcelQuestList_GetAdventureId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelQuestList.GetAllOfDeleteAfterUnlock
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UExcelLoaderTgfConfigExcelQuestList::GetAllOfDeleteAfterUnlock()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelQuestList", "GetAllOfDeleteAfterUnlock");

	Params::ExcelLoaderTgfConfigExcelQuestList_GetAllOfDeleteAfterUnlock Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelQuestList.GetAllOfProgress
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigDQuestConditionProgress*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigDQuestConditionProgress*> UExcelLoaderTgfConfigExcelQuestList::GetAllOfProgress()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelQuestList", "GetAllOfProgress");

	Params::ExcelLoaderTgfConfigExcelQuestList_GetAllOfProgress Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelQuestList.GetAllOfUnlockConditions
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfDQuestUnlockConditionItem*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfDQuestUnlockConditionItem*> UExcelLoaderTgfConfigExcelQuestList::GetAllOfUnlockConditions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelQuestList", "GetAllOfUnlockConditions");

	Params::ExcelLoaderTgfConfigExcelQuestList_GetAllOfUnlockConditions Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelQuestList.GetAvailablePeriod
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigDQuestAvailablePeriodType*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigDQuestAvailablePeriodType* UExcelLoaderTgfConfigExcelQuestList::GetAvailablePeriod(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelQuestList", "GetAvailablePeriod");

	Params::ExcelLoaderTgfConfigExcelQuestList_GetAvailablePeriod Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelQuestList.GetBasePic
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfConfigExcelQuestList::GetBasePic(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelQuestList", "GetBasePic");

	Params::ExcelLoaderTgfConfigExcelQuestList_GetBasePic Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelQuestList.GetClientSubmitType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelQuestList::GetClientSubmitType(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelQuestList", "GetClientSubmitType");

	Params::ExcelLoaderTgfConfigExcelQuestList_GetClientSubmitType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelQuestList.GetCommonCondition
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDConditionBasicLimit*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDConditionBasicLimit* UExcelLoaderTgfConfigExcelQuestList::GetCommonCondition(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelQuestList", "GetCommonCondition");

	Params::ExcelLoaderTgfConfigExcelQuestList_GetCommonCondition Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelQuestList.GetDeleteAfterUnlock
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelQuestList::GetDeleteAfterUnlock(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelQuestList", "GetDeleteAfterUnlock");

	Params::ExcelLoaderTgfConfigExcelQuestList_GetDeleteAfterUnlock Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelQuestList.GetDeleteAfterUnlockSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelQuestList::GetDeleteAfterUnlockSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelQuestList", "GetDeleteAfterUnlockSize");

	Params::ExcelLoaderTgfConfigExcelQuestList_GetDeleteAfterUnlockSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelQuestList.GetDisplayGroup
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelQuestList::GetDisplayGroup(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelQuestList", "GetDisplayGroup");

	Params::ExcelLoaderTgfConfigExcelQuestList_GetDisplayGroup Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelQuestList.GetDisplayOrder
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelQuestList::GetDisplayOrder(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelQuestList", "GetDisplayOrder");

	Params::ExcelLoaderTgfConfigExcelQuestList_GetDisplayOrder Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelQuestList.GetDisplayPosition
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelQuestList::GetDisplayPosition(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelQuestList", "GetDisplayPosition");

	Params::ExcelLoaderTgfConfigExcelQuestList_GetDisplayPosition Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelQuestList.GetDisplayType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelQuestList::GetDisplayType(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelQuestList", "GetDisplayType");

	Params::ExcelLoaderTgfConfigExcelQuestList_GetDisplayType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelQuestList.GetId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelQuestList::GetId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelQuestList", "GetId");

	Params::ExcelLoaderTgfConfigExcelQuestList_GetId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelQuestList.GetName
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfConfigExcelQuestList::GetName(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelQuestList", "GetName");

	Params::ExcelLoaderTgfConfigExcelQuestList_GetName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelQuestList.GetOn
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UExcelLoaderTgfConfigExcelQuestList::GetOn(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelQuestList", "GetOn");

	Params::ExcelLoaderTgfConfigExcelQuestList_GetOn Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelQuestList.GetProgress
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigDQuestConditionProgress*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigDQuestConditionProgress* UExcelLoaderTgfConfigExcelQuestList::GetProgress(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelQuestList", "GetProgress");

	Params::ExcelLoaderTgfConfigExcelQuestList_GetProgress Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelQuestList.GetProgressResetPeriod
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigDQuestProgressResetInfo*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigDQuestProgressResetInfo* UExcelLoaderTgfConfigExcelQuestList::GetProgressResetPeriod(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelQuestList", "GetProgressResetPeriod");

	Params::ExcelLoaderTgfConfigExcelQuestList_GetProgressResetPeriod Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelQuestList.GetProgressSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelQuestList::GetProgressSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelQuestList", "GetProgressSize");

	Params::ExcelLoaderTgfConfigExcelQuestList_GetProgressSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelQuestList.GetRandomPoolId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelQuestList::GetRandomPoolId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelQuestList", "GetRandomPoolId");

	Params::ExcelLoaderTgfConfigExcelQuestList_GetRandomPoolId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelQuestList.GetRandomPoolWeight
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelQuestList::GetRandomPoolWeight(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelQuestList", "GetRandomPoolWeight");

	Params::ExcelLoaderTgfConfigExcelQuestList_GetRandomPoolWeight Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelQuestList.GetReceivedReset
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UExcelLoaderTgfConfigExcelQuestList::GetReceivedReset(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelQuestList", "GetReceivedReset");

	Params::ExcelLoaderTgfConfigExcelQuestList_GetReceivedReset Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelQuestList.GetRedirectAddr
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfConfigExcelQuestList::GetRedirectAddr(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelQuestList", "GetRedirectAddr");

	Params::ExcelLoaderTgfConfigExcelQuestList_GetRedirectAddr Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelQuestList.GetRewards
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigDQuestReward*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigDQuestReward* UExcelLoaderTgfConfigExcelQuestList::GetRewards(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelQuestList", "GetRewards");

	Params::ExcelLoaderTgfConfigExcelQuestList_GetRewards Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelQuestList.GetSteamAchievementApi
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfConfigExcelQuestList::GetSteamAchievementApi(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelQuestList", "GetSteamAchievementApi");

	Params::ExcelLoaderTgfConfigExcelQuestList_GetSteamAchievementApi Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelQuestList.GetSteamStatisticApi
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfConfigExcelQuestList::GetSteamStatisticApi(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelQuestList", "GetSteamStatisticApi");

	Params::ExcelLoaderTgfConfigExcelQuestList_GetSteamStatisticApi Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelQuestList.GetType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelQuestList::GetType(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelQuestList", "GetType");

	Params::ExcelLoaderTgfConfigExcelQuestList_GetType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelQuestList.GetUnlockConditions
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDQuestUnlockConditionItem*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDQuestUnlockConditionItem* UExcelLoaderTgfConfigExcelQuestList::GetUnlockConditions(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelQuestList", "GetUnlockConditions");

	Params::ExcelLoaderTgfConfigExcelQuestList_GetUnlockConditions Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelQuestList.GetUnlockConditionsSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelQuestList::GetUnlockConditionsSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelQuestList", "GetUnlockConditionsSize");

	Params::ExcelLoaderTgfConfigExcelQuestList_GetUnlockConditionsSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigDQuestSpecificAvailableTimePeriod.GetEnd
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufTimestamp*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufTimestamp* UExcelLoaderTgfConfigDQuestSpecificAvailableTimePeriod::GetEnd(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigDQuestSpecificAvailableTimePeriod", "GetEnd");

	Params::ExcelLoaderTgfConfigDQuestSpecificAvailableTimePeriod_GetEnd Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigDQuestSpecificAvailableTimePeriod.GetStart
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufTimestamp*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufTimestamp* UExcelLoaderTgfConfigDQuestSpecificAvailableTimePeriod::GetStart(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigDQuestSpecificAvailableTimePeriod", "GetStart");

	Params::ExcelLoaderTgfConfigDQuestSpecificAvailableTimePeriod_GetStart Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigDQuestAvailablePeriodType.GetPackageVersion
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfConfigDQuestAvailablePeriodType::GetPackageVersion(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigDQuestAvailablePeriodType", "GetPackageVersion");

	Params::ExcelLoaderTgfConfigDQuestAvailablePeriodType_GetPackageVersion Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigDQuestAvailablePeriodType.GetResourceVersion
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfConfigDQuestAvailablePeriodType::GetResourceVersion(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigDQuestAvailablePeriodType", "GetResourceVersion");

	Params::ExcelLoaderTgfConfigDQuestAvailablePeriodType_GetResourceVersion Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigDQuestAvailablePeriodType.GetSpecificPeriod
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigDQuestSpecificAvailableTimePeriod*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigDQuestSpecificAvailableTimePeriod* UExcelLoaderTgfConfigDQuestAvailablePeriodType::GetSpecificPeriod(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigDQuestAvailablePeriodType", "GetSpecificPeriod");

	Params::ExcelLoaderTgfConfigDQuestAvailablePeriodType_GetSpecificPeriod Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigDQuestAvailablePeriodType.GetSpecificSeasonBefore
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigDQuestSpecificAvailableSeasonPeriod*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigDQuestSpecificAvailableSeasonPeriod* UExcelLoaderTgfConfigDQuestAvailablePeriodType::GetSpecificSeasonBefore(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigDQuestAvailablePeriodType", "GetSpecificSeasonBefore");

	Params::ExcelLoaderTgfConfigDQuestAvailablePeriodType_GetSpecificSeasonBefore Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigDQuestAvailablePeriodType.GetTimedesc
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigDQuestAvailablePeriodType::GetTimedesc(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigDQuestAvailablePeriodType", "GetTimedesc");

	Params::ExcelLoaderTgfConfigDQuestAvailablePeriodType_GetTimedesc Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigDQuestAvailablePeriodType.GetType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigDQuestAvailablePeriodType::GetType(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigDQuestAvailablePeriodType", "GetType");

	Params::ExcelLoaderTgfConfigDQuestAvailablePeriodType_GetType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigDQuestAvailablePeriodType.GetValueCase
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EExcelLoaderTgfConfigDQuestAvailablePeriodTypeValueReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EExcelLoaderTgfConfigDQuestAvailablePeriodTypeValue UExcelLoaderTgfConfigDQuestAvailablePeriodType::GetValueCase()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigDQuestAvailablePeriodType", "GetValueCase");

	Params::ExcelLoaderTgfConfigDQuestAvailablePeriodType_GetValueCase Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigDQuestProgressResetInfo.GetPeriodDays
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigDQuestProgressResetInfo::GetPeriodDays(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigDQuestProgressResetInfo", "GetPeriodDays");

	Params::ExcelLoaderTgfConfigDQuestProgressResetInfo_GetPeriodDays Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigDQuestProgressResetInfo.GetStartDayResetTimepoint
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufTimestamp*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufTimestamp* UExcelLoaderTgfConfigDQuestProgressResetInfo::GetStartDayResetTimepoint(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigDQuestProgressResetInfo", "GetStartDayResetTimepoint");

	Params::ExcelLoaderTgfConfigDQuestProgressResetInfo_GetStartDayResetTimepoint Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigDQuestConditionProgress.GetAllOfConditionIds
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<int64>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int64> UExcelLoaderTgfConfigDQuestConditionProgress::GetAllOfConditionIds()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigDQuestConditionProgress", "GetAllOfConditionIds");

	Params::ExcelLoaderTgfConfigDQuestConditionProgress_GetAllOfConditionIds Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigDQuestConditionProgress.GetAllOfEntityArgs
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UExcelLoaderTgfConfigDQuestConditionProgress::GetAllOfEntityArgs()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigDQuestConditionProgress", "GetAllOfEntityArgs");

	Params::ExcelLoaderTgfConfigDQuestConditionProgress_GetAllOfEntityArgs Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigDQuestConditionProgress.GetAllOfIgnoreEntityArgs
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UExcelLoaderTgfConfigDQuestConditionProgress::GetAllOfIgnoreEntityArgs()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigDQuestConditionProgress", "GetAllOfIgnoreEntityArgs");

	Params::ExcelLoaderTgfConfigDQuestConditionProgress_GetAllOfIgnoreEntityArgs Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigDQuestConditionProgress.GetConditionIds
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigDQuestConditionProgress::GetConditionIds(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigDQuestConditionProgress", "GetConditionIds");

	Params::ExcelLoaderTgfConfigDQuestConditionProgress_GetConditionIds Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigDQuestConditionProgress.GetConditionIdsSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigDQuestConditionProgress::GetConditionIdsSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigDQuestConditionProgress", "GetConditionIdsSize");

	Params::ExcelLoaderTgfConfigDQuestConditionProgress_GetConditionIdsSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigDQuestConditionProgress.GetCountType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigDQuestConditionProgress::GetCountType(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigDQuestConditionProgress", "GetCountType");

	Params::ExcelLoaderTgfConfigDQuestConditionProgress_GetCountType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigDQuestConditionProgress.GetEntityArgs
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigDQuestConditionProgress::GetEntityArgs(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigDQuestConditionProgress", "GetEntityArgs");

	Params::ExcelLoaderTgfConfigDQuestConditionProgress_GetEntityArgs Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigDQuestConditionProgress.GetEntityArgsSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigDQuestConditionProgress::GetEntityArgsSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigDQuestConditionProgress", "GetEntityArgsSize");

	Params::ExcelLoaderTgfConfigDQuestConditionProgress_GetEntityArgsSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigDQuestConditionProgress.GetIgnoreEntityArgs
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigDQuestConditionProgress::GetIgnoreEntityArgs(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigDQuestConditionProgress", "GetIgnoreEntityArgs");

	Params::ExcelLoaderTgfConfigDQuestConditionProgress_GetIgnoreEntityArgs Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigDQuestConditionProgress.GetIgnoreEntityArgsSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigDQuestConditionProgress::GetIgnoreEntityArgsSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigDQuestConditionProgress", "GetIgnoreEntityArgsSize");

	Params::ExcelLoaderTgfConfigDQuestConditionProgress_GetIgnoreEntityArgsSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigDQuestConditionProgress.GetSeasonId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigDQuestConditionProgress::GetSeasonId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigDQuestConditionProgress", "GetSeasonId");

	Params::ExcelLoaderTgfConfigDQuestConditionProgress_GetSeasonId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigDQuestConditionProgress.GetTypeId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigDQuestConditionProgress::GetTypeId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigDQuestConditionProgress", "GetTypeId");

	Params::ExcelLoaderTgfConfigDQuestConditionProgress_GetTypeId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigDQuestConditionProgress.GetValue
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigDQuestConditionProgress::GetValue(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigDQuestConditionProgress", "GetValue");

	Params::ExcelLoaderTgfConfigDQuestConditionProgress_GetValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigDQuestReward.GetAllOfItems
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfDItemOffset*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfDItemOffset*> UExcelLoaderTgfConfigDQuestReward::GetAllOfItems()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigDQuestReward", "GetAllOfItems");

	Params::ExcelLoaderTgfConfigDQuestReward_GetAllOfItems Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigDQuestReward.GetDynamic
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigDQuestDynamicReward*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigDQuestDynamicReward* UExcelLoaderTgfConfigDQuestReward::GetDynamic(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigDQuestReward", "GetDynamic");

	Params::ExcelLoaderTgfConfigDQuestReward_GetDynamic Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigDQuestReward.GetGiveOutType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigDQuestReward::GetGiveOutType(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigDQuestReward", "GetGiveOutType");

	Params::ExcelLoaderTgfConfigDQuestReward_GetGiveOutType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigDQuestReward.GetItems
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDItemOffset*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDItemOffset* UExcelLoaderTgfConfigDQuestReward::GetItems(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigDQuestReward", "GetItems");

	Params::ExcelLoaderTgfConfigDQuestReward_GetItems Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigDQuestReward.GetItemsSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigDQuestReward::GetItemsSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigDQuestReward", "GetItemsSize");

	Params::ExcelLoaderTgfConfigDQuestReward_GetItemsSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigDQuestReward.GetMailTemplateId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigDQuestReward::GetMailTemplateId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigDQuestReward", "GetMailTemplateId");

	Params::ExcelLoaderTgfConfigDQuestReward_GetMailTemplateId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigDQuestDynamicReward.GetAllOfDetails
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigDQuestDynamicRewardItem*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigDQuestDynamicRewardItem*> UExcelLoaderTgfConfigDQuestDynamicReward::GetAllOfDetails()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigDQuestDynamicReward", "GetAllOfDetails");

	Params::ExcelLoaderTgfConfigDQuestDynamicReward_GetAllOfDetails Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigDQuestDynamicReward.GetDetails
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigDQuestDynamicRewardItem*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigDQuestDynamicRewardItem* UExcelLoaderTgfConfigDQuestDynamicReward::GetDetails(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigDQuestDynamicReward", "GetDetails");

	Params::ExcelLoaderTgfConfigDQuestDynamicReward_GetDetails Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigDQuestDynamicReward.GetDetailsSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigDQuestDynamicReward::GetDetailsSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigDQuestDynamicReward", "GetDetailsSize");

	Params::ExcelLoaderTgfConfigDQuestDynamicReward_GetDetailsSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigDQuestDynamicReward.GetType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigDQuestDynamicReward::GetType(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigDQuestDynamicReward", "GetType");

	Params::ExcelLoaderTgfConfigDQuestDynamicReward_GetType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigDQuestDynamicRewardItem.GetAllOfItems
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfDItemOffset*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfDItemOffset*> UExcelLoaderTgfConfigDQuestDynamicRewardItem::GetAllOfItems()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigDQuestDynamicRewardItem", "GetAllOfItems");

	Params::ExcelLoaderTgfConfigDQuestDynamicRewardItem_GetAllOfItems Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigDQuestDynamicRewardItem.GetItems
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDItemOffset*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDItemOffset* UExcelLoaderTgfConfigDQuestDynamicRewardItem::GetItems(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigDQuestDynamicRewardItem", "GetItems");

	Params::ExcelLoaderTgfConfigDQuestDynamicRewardItem_GetItems Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigDQuestDynamicRewardItem.GetItemsSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigDQuestDynamicRewardItem::GetItemsSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigDQuestDynamicRewardItem", "GetItemsSize");

	Params::ExcelLoaderTgfConfigDQuestDynamicRewardItem_GetItemsSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigDQuestDynamicRewardItem.GetKey
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigDQuestDynamicRewardItem::GetKey(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigDQuestDynamicRewardItem", "GetKey");

	Params::ExcelLoaderTgfConfigDQuestDynamicRewardItem_GetKey Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelQuestProgressType.GetAllOfQuestConditionTypes
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UExcelLoaderTgfConfigExcelQuestProgressType::GetAllOfQuestConditionTypes()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelQuestProgressType", "GetAllOfQuestConditionTypes");

	Params::ExcelLoaderTgfConfigExcelQuestProgressType_GetAllOfQuestConditionTypes Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelQuestProgressType.GetId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelQuestProgressType::GetId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelQuestProgressType", "GetId");

	Params::ExcelLoaderTgfConfigExcelQuestProgressType_GetId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelQuestProgressType.GetQuestConditionTypes
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelQuestProgressType::GetQuestConditionTypes(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelQuestProgressType", "GetQuestConditionTypes");

	Params::ExcelLoaderTgfConfigExcelQuestProgressType_GetQuestConditionTypes Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelQuestProgressType.GetQuestConditionTypesSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelQuestProgressType::GetQuestConditionTypesSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelQuestProgressType", "GetQuestConditionTypesSize");

	Params::ExcelLoaderTgfConfigExcelQuestProgressType_GetQuestConditionTypesSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelQuestProgressType.GetValueCompareType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelQuestProgressType::GetValueCompareType(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelQuestProgressType", "GetValueCompareType");

	Params::ExcelLoaderTgfConfigExcelQuestProgressType_GetValueCompareType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelQuestProgressCondition.GetId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelQuestProgressCondition::GetId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelQuestProgressCondition", "GetId");

	Params::ExcelLoaderTgfConfigExcelQuestProgressCondition_GetId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelQuestProgressCondition.GetValue
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfQuestProgressConditionData*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfQuestProgressConditionData* UExcelLoaderTgfConfigExcelQuestProgressCondition::GetValue(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelQuestProgressCondition", "GetValue");

	Params::ExcelLoaderTgfConfigExcelQuestProgressCondition_GetValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelQuestTriggerEventType.GetAllOfProgressTypes
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UExcelLoaderTgfConfigExcelQuestTriggerEventType::GetAllOfProgressTypes()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelQuestTriggerEventType", "GetAllOfProgressTypes");

	Params::ExcelLoaderTgfConfigExcelQuestTriggerEventType_GetAllOfProgressTypes Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelQuestTriggerEventType.GetAllOfUnlockConditionTypes
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UExcelLoaderTgfConfigExcelQuestTriggerEventType::GetAllOfUnlockConditionTypes()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelQuestTriggerEventType", "GetAllOfUnlockConditionTypes");

	Params::ExcelLoaderTgfConfigExcelQuestTriggerEventType_GetAllOfUnlockConditionTypes Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelQuestTriggerEventType.GetId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelQuestTriggerEventType::GetId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelQuestTriggerEventType", "GetId");

	Params::ExcelLoaderTgfConfigExcelQuestTriggerEventType_GetId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelQuestTriggerEventType.GetProgressTypes
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelQuestTriggerEventType::GetProgressTypes(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelQuestTriggerEventType", "GetProgressTypes");

	Params::ExcelLoaderTgfConfigExcelQuestTriggerEventType_GetProgressTypes Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelQuestTriggerEventType.GetProgressTypesSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelQuestTriggerEventType::GetProgressTypesSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelQuestTriggerEventType", "GetProgressTypesSize");

	Params::ExcelLoaderTgfConfigExcelQuestTriggerEventType_GetProgressTypesSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelQuestTriggerEventType.GetUnlockConditionTypes
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelQuestTriggerEventType::GetUnlockConditionTypes(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelQuestTriggerEventType", "GetUnlockConditionTypes");

	Params::ExcelLoaderTgfConfigExcelQuestTriggerEventType_GetUnlockConditionTypes Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelQuestTriggerEventType.GetUnlockConditionTypesSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelQuestTriggerEventType::GetUnlockConditionTypesSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelQuestTriggerEventType", "GetUnlockConditionTypesSize");

	Params::ExcelLoaderTgfConfigExcelQuestTriggerEventType_GetUnlockConditionTypesSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDRandomPoolElement.GetItem
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDItemOffset*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDItemOffset* UExcelLoaderTgfDRandomPoolElement::GetItem(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDRandomPoolElement", "GetItem");

	Params::ExcelLoaderTgfDRandomPoolElement_GetItem Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDRandomPoolElement.GetWeight
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDRandomPoolElement::GetWeight(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDRandomPoolElement", "GetWeight");

	Params::ExcelLoaderTgfDRandomPoolElement_GetWeight Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRandomPool.GetElement
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDRandomPoolElement*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDRandomPoolElement* UExcelLoaderTgfConfigExcelRandomPool::GetElement(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRandomPool", "GetElement");

	Params::ExcelLoaderTgfConfigExcelRandomPool_GetElement Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRandomPool.GetGiveOutType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelRandomPool::GetGiveOutType(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRandomPool", "GetGiveOutType");

	Params::ExcelLoaderTgfConfigExcelRandomPool_GetGiveOutType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRandomPool.GetMailTemplateId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelRandomPool::GetMailTemplateId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRandomPool", "GetMailTemplateId");

	Params::ExcelLoaderTgfConfigExcelRandomPool_GetMailTemplateId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRandomPool.GetRandomType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelRandomPool::GetRandomType(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRandomPool", "GetRandomType");

	Params::ExcelLoaderTgfConfigExcelRandomPool_GetRandomType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRandomPool.GetTimes
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelRandomPool::GetTimes(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRandomPool", "GetTimes");

	Params::ExcelLoaderTgfConfigExcelRandomPool_GetTimes Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRandomPool.GetTypeId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelRandomPool::GetTypeId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRandomPool", "GetTypeId");

	Params::ExcelLoaderTgfConfigExcelRandomPool_GetTypeId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDRankPeriodRewardPoolIndex.GetIntervalDays
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDRankPeriodRewardPoolIndex::GetIntervalDays(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDRankPeriodRewardPoolIndex", "GetIntervalDays");

	Params::ExcelLoaderTgfDRankPeriodRewardPoolIndex_GetIntervalDays Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDRankPeriodRewardPoolIndex.GetLocalModeSeasonSettlementSetScore
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDRankPeriodRewardPoolIndex::GetLocalModeSeasonSettlementSetScore(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDRankPeriodRewardPoolIndex", "GetLocalModeSeasonSettlementSetScore");

	Params::ExcelLoaderTgfDRankPeriodRewardPoolIndex_GetLocalModeSeasonSettlementSetScore Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDRankPeriodRewardPoolIndex.GetLockFirstDays
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDRankPeriodRewardPoolIndex::GetLockFirstDays(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDRankPeriodRewardPoolIndex", "GetLockFirstDays");

	Params::ExcelLoaderTgfDRankPeriodRewardPoolIndex_GetLockFirstDays Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDRankPeriodRewardPoolIndex.GetLockLastDays
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDRankPeriodRewardPoolIndex::GetLockLastDays(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDRankPeriodRewardPoolIndex", "GetLockLastDays");

	Params::ExcelLoaderTgfDRankPeriodRewardPoolIndex_GetLockLastDays Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDRankPeriodRewardPoolIndex.GetRankRewardPoolId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDRankPeriodRewardPoolIndex::GetRankRewardPoolId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDRankPeriodRewardPoolIndex", "GetRankRewardPoolId");

	Params::ExcelLoaderTgfDRankPeriodRewardPoolIndex_GetRankRewardPoolId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDRankPeriodRewardPoolIndex.GetRewardType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDRankPeriodRewardPoolIndex::GetRewardType(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDRankPeriodRewardPoolIndex", "GetRewardType");

	Params::ExcelLoaderTgfDRankPeriodRewardPoolIndex_GetRewardType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDRankPeriodRewardPoolIndex.GetSaveHistory
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UExcelLoaderTgfDRankPeriodRewardPoolIndex::GetSaveHistory(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDRankPeriodRewardPoolIndex", "GetSaveHistory");

	Params::ExcelLoaderTgfDRankPeriodRewardPoolIndex_GetSaveHistory Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDRankRuleBindLevel.GetLevelId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDRankRuleBindLevel::GetLevelId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDRankRuleBindLevel", "GetLevelId");

	Params::ExcelLoaderTgfDRankRuleBindLevel_GetLevelId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDRankRuleBindLevel.GetLevelType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDRankRuleBindLevel::GetLevelType(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDRankRuleBindLevel", "GetLevelType");

	Params::ExcelLoaderTgfDRankRuleBindLevel_GetLevelType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDRankRuleContent.GetActivityId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDRankRuleContent::GetActivityId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDRankRuleContent", "GetActivityId");

	Params::ExcelLoaderTgfDRankRuleContent_GetActivityId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDRankRuleContent.GetBindLevel
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDRankRuleBindLevel*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDRankRuleBindLevel* UExcelLoaderTgfDRankRuleContent::GetBindLevel(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDRankRuleContent", "GetBindLevel");

	Params::ExcelLoaderTgfDRankRuleContent_GetBindLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDRankRuleContent.GetCustomSettlement
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDRankPeriodRewardPoolIndex*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDRankPeriodRewardPoolIndex* UExcelLoaderTgfDRankRuleContent::GetCustomSettlement(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDRankRuleContent", "GetCustomSettlement");

	Params::ExcelLoaderTgfDRankRuleContent_GetCustomSettlement Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDRankRuleContent.GetDailySettlement
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDRankPeriodRewardPoolIndex*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDRankPeriodRewardPoolIndex* UExcelLoaderTgfDRankRuleContent::GetDailySettlement(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDRankRuleContent", "GetDailySettlement");

	Params::ExcelLoaderTgfDRankRuleContent_GetDailySettlement Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDRankRuleContent.GetDescription
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfDRankRuleContent::GetDescription(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDRankRuleContent", "GetDescription");

	Params::ExcelLoaderTgfDRankRuleContent_GetDescription Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDRankRuleContent.GetLockTime
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDConditionRuleRangeTime*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDConditionRuleRangeTime* UExcelLoaderTgfDRankRuleContent::GetLockTime(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDRankRuleContent", "GetLockTime");

	Params::ExcelLoaderTgfDRankRuleContent_GetLockTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDRankRuleContent.GetLockType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDRankRuleContent::GetLockType(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDRankRuleContent", "GetLockType");

	Params::ExcelLoaderTgfDRankRuleContent_GetLockType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDRankRuleContent.GetName
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfDRankRuleContent::GetName(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDRankRuleContent", "GetName");

	Params::ExcelLoaderTgfDRankRuleContent_GetName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDRankRuleContent.GetSettlementTimeOffset
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufDuration*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufDuration* UExcelLoaderTgfDRankRuleContent::GetSettlementTimeOffset(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDRankRuleContent", "GetSettlementTimeOffset");

	Params::ExcelLoaderTgfDRankRuleContent_GetSettlementTimeOffset Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDRankRuleContent.GetSettlementType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDRankRuleContent::GetSettlementType(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDRankRuleContent", "GetSettlementType");

	Params::ExcelLoaderTgfDRankRuleContent_GetSettlementType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDRankRuleContent.GetSharedZoneId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfDRankRuleContent::GetSharedZoneId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDRankRuleContent", "GetSharedZoneId");

	Params::ExcelLoaderTgfDRankRuleContent_GetSharedZoneId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDRankRuleContent.GetSortType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDRankRuleContent::GetSortType(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDRankRuleContent", "GetSortType");

	Params::ExcelLoaderTgfDRankRuleContent_GetSortType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDRankRuleContent.GetSubRankInstanceId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfDRankRuleContent::GetSubRankInstanceId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDRankRuleContent", "GetSubRankInstanceId");

	Params::ExcelLoaderTgfDRankRuleContent_GetSubRankInstanceId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDRankRuleContent.GetSubRankType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfDRankRuleContent::GetSubRankType(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDRankRuleContent", "GetSubRankType");

	Params::ExcelLoaderTgfDRankRuleContent_GetSubRankType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDRankRuleContent.GetValidTime
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDConditionRuleRangeDatetime*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDConditionRuleRangeDatetime* UExcelLoaderTgfDRankRuleContent::GetValidTime(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDRankRuleContent", "GetValidTime");

	Params::ExcelLoaderTgfDRankRuleContent_GetValidTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDRankPeriodRewardPoolContent.GetAllOfReward
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfDItemOffset*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfDItemOffset*> UExcelLoaderTgfDRankPeriodRewardPoolContent::GetAllOfReward()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDRankPeriodRewardPoolContent", "GetAllOfReward");

	Params::ExcelLoaderTgfDRankPeriodRewardPoolContent_GetAllOfReward Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDRankPeriodRewardPoolContent.GetEloK
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDRankPeriodRewardPoolContent::GetEloK(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDRankPeriodRewardPoolContent", "GetEloK");

	Params::ExcelLoaderTgfDRankPeriodRewardPoolContent_GetEloK Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDRankPeriodRewardPoolContent.GetEloRatingPoint
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDRankPeriodRewardPoolContent::GetEloRatingPoint(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDRankPeriodRewardPoolContent", "GetEloRatingPoint");

	Params::ExcelLoaderTgfDRankPeriodRewardPoolContent_GetEloRatingPoint Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDRankPeriodRewardPoolContent.GetMailTemplateId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDRankPeriodRewardPoolContent::GetMailTemplateId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDRankPeriodRewardPoolContent", "GetMailTemplateId");

	Params::ExcelLoaderTgfDRankPeriodRewardPoolContent_GetMailTemplateId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDRankPeriodRewardPoolContent.GetRankDescription
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfDRankPeriodRewardPoolContent::GetRankDescription(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDRankPeriodRewardPoolContent", "GetRankDescription");

	Params::ExcelLoaderTgfDRankPeriodRewardPoolContent_GetRankDescription Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDRankPeriodRewardPoolContent.GetRankName
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfDRankPeriodRewardPoolContent::GetRankName(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDRankPeriodRewardPoolContent", "GetRankName");

	Params::ExcelLoaderTgfDRankPeriodRewardPoolContent_GetRankName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDRankPeriodRewardPoolContent.GetReward
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDItemOffset*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDItemOffset* UExcelLoaderTgfDRankPeriodRewardPoolContent::GetReward(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDRankPeriodRewardPoolContent", "GetReward");

	Params::ExcelLoaderTgfDRankPeriodRewardPoolContent_GetReward Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDRankPeriodRewardPoolContent.GetRewardSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfDRankPeriodRewardPoolContent::GetRewardSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDRankPeriodRewardPoolContent", "GetRewardSize");

	Params::ExcelLoaderTgfDRankPeriodRewardPoolContent_GetRewardSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDRankPeriodRewardPoolContent.GetScoreChangeParam
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDRankPeriodRewardPoolContent::GetScoreChangeParam(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDRankPeriodRewardPoolContent", "GetScoreChangeParam");

	Params::ExcelLoaderTgfDRankPeriodRewardPoolContent_GetScoreChangeParam Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDRankPeriodRewardPoolContent.GetScoreChangeType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDRankPeriodRewardPoolContent::GetScoreChangeType(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDRankPeriodRewardPoolContent", "GetScoreChangeType");

	Params::ExcelLoaderTgfDRankPeriodRewardPoolContent_GetScoreChangeType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDRankKey.GetRankInstanceId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfDRankKey::GetRankInstanceId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDRankKey", "GetRankInstanceId");

	Params::ExcelLoaderTgfDRankKey_GetRankInstanceId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDRankKey.GetRankType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfDRankKey::GetRankType(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDRankKey", "GetRankType");

	Params::ExcelLoaderTgfDRankKey_GetRankType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDRankKey.GetSubRankInstanceId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfDRankKey::GetSubRankInstanceId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDRankKey", "GetSubRankInstanceId");

	Params::ExcelLoaderTgfDRankKey_GetSubRankInstanceId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDRankKey.GetSubRankType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfDRankKey::GetSubRankType(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDRankKey", "GetSubRankType");

	Params::ExcelLoaderTgfDRankKey_GetSubRankType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRankRule.GetBanId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelRankRule::GetBanId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRankRule", "GetBanId");

	Params::ExcelLoaderTgfConfigExcelRankRule_GetBanId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRankRule.GetContent
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDRankRuleContent*  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDRankRuleContent* UExcelLoaderTgfConfigExcelRankRule::GetContent(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRankRule", "GetContent");

	Params::ExcelLoaderTgfConfigExcelRankRule_GetContent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRankRule.GetIsRoleRank
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UExcelLoaderTgfConfigExcelRankRule::GetIsRoleRank(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRankRule", "GetIsRoleRank");

	Params::ExcelLoaderTgfConfigExcelRankRule_GetIsRoleRank Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRankRule.GetRankInstanceId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelRankRule::GetRankInstanceId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRankRule", "GetRankInstanceId");

	Params::ExcelLoaderTgfConfigExcelRankRule_GetRankInstanceId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRankRule.GetRankShowType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelRankRule::GetRankShowType(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRankRule", "GetRankShowType");

	Params::ExcelLoaderTgfConfigExcelRankRule_GetRankShowType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRankRule.GetRankType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelRankRule::GetRankType(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRankRule", "GetRankType");

	Params::ExcelLoaderTgfConfigExcelRankRule_GetRankType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRankPeriodRewardPool.GetContent
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDRankPeriodRewardPoolContent*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDRankPeriodRewardPoolContent* UExcelLoaderTgfConfigExcelRankPeriodRewardPool::GetContent(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRankPeriodRewardPool", "GetContent");

	Params::ExcelLoaderTgfConfigExcelRankPeriodRewardPool_GetContent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRankPeriodRewardPool.GetRankOrScore
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelRankPeriodRewardPool::GetRankOrScore(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRankPeriodRewardPool", "GetRankOrScore");

	Params::ExcelLoaderTgfConfigExcelRankPeriodRewardPool_GetRankOrScore Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRankPeriodRewardPool.GetRankRewardPoolId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelRankPeriodRewardPool::GetRankRewardPoolId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRankPeriodRewardPool", "GetRankRewardPoolId");

	Params::ExcelLoaderTgfConfigExcelRankPeriodRewardPool_GetRankRewardPoolId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRankReportSetting.GetAllOfLevelIds
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UExcelLoaderTgfConfigExcelRankReportSetting::GetAllOfLevelIds()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRankReportSetting", "GetAllOfLevelIds");

	Params::ExcelLoaderTgfConfigExcelRankReportSetting_GetAllOfLevelIds Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRankReportSetting.GetDataType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelRankReportSetting::GetDataType(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRankReportSetting", "GetDataType");

	Params::ExcelLoaderTgfConfigExcelRankReportSetting_GetDataType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRankReportSetting.GetLevelIds
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelRankReportSetting::GetLevelIds(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRankReportSetting", "GetLevelIds");

	Params::ExcelLoaderTgfConfigExcelRankReportSetting_GetLevelIds Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRankReportSetting.GetLevelIdsSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelRankReportSetting::GetLevelIdsSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRankReportSetting", "GetLevelIdsSize");

	Params::ExcelLoaderTgfConfigExcelRankReportSetting_GetLevelIdsSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRankReportSetting.GetRankInstanceId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelRankReportSetting::GetRankInstanceId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRankReportSetting", "GetRankInstanceId");

	Params::ExcelLoaderTgfConfigExcelRankReportSetting_GetRankInstanceId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRankReportSetting.GetRankType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelRankReportSetting::GetRankType(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRankReportSetting", "GetRankType");

	Params::ExcelLoaderTgfConfigExcelRankReportSetting_GetRankType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRankReportSetting.GetSort
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelRankReportSetting::GetSort(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRankReportSetting", "GetSort");

	Params::ExcelLoaderTgfConfigExcelRankReportSetting_GetSort Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRankReportSetting.GetTypeId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelRankReportSetting::GetTypeId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRankReportSetting", "GetTypeId");

	Params::ExcelLoaderTgfConfigExcelRankReportSetting_GetTypeId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRobotFaction.GetAllOfRobotIds
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UExcelLoaderTgfConfigExcelRobotFaction::GetAllOfRobotIds()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRobotFaction", "GetAllOfRobotIds");

	Params::ExcelLoaderTgfConfigExcelRobotFaction_GetAllOfRobotIds Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRobotFaction.GetRobotFactionTempleteId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelRobotFaction::GetRobotFactionTempleteId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRobotFaction", "GetRobotFactionTempleteId");

	Params::ExcelLoaderTgfConfigExcelRobotFaction_GetRobotFactionTempleteId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRobotFaction.GetRobotIds
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelRobotFaction::GetRobotIds(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRobotFaction", "GetRobotIds");

	Params::ExcelLoaderTgfConfigExcelRobotFaction_GetRobotIds Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRobotFaction.GetRobotIdsSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelRobotFaction::GetRobotIdsSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRobotFaction", "GetRobotIdsSize");

	Params::ExcelLoaderTgfConfigExcelRobotFaction_GetRobotIdsSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRobotFaction.GetScore
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelRobotFaction::GetScore(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRobotFaction", "GetScore");

	Params::ExcelLoaderTgfConfigExcelRobotFaction_GetScore Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRobotNormalFaction.GetAllOfRobotIds
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UExcelLoaderTgfConfigExcelRobotNormalFaction::GetAllOfRobotIds()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRobotNormalFaction", "GetAllOfRobotIds");

	Params::ExcelLoaderTgfConfigExcelRobotNormalFaction_GetAllOfRobotIds Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRobotNormalFaction.GetRobotFactionTempleteId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelRobotNormalFaction::GetRobotFactionTempleteId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRobotNormalFaction", "GetRobotFactionTempleteId");

	Params::ExcelLoaderTgfConfigExcelRobotNormalFaction_GetRobotFactionTempleteId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRobotNormalFaction.GetRobotIds
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelRobotNormalFaction::GetRobotIds(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRobotNormalFaction", "GetRobotIds");

	Params::ExcelLoaderTgfConfigExcelRobotNormalFaction_GetRobotIds Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRobotNormalFaction.GetRobotIdsSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelRobotNormalFaction::GetRobotIdsSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRobotNormalFaction", "GetRobotIdsSize");

	Params::ExcelLoaderTgfConfigExcelRobotNormalFaction_GetRobotIdsSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRobotNormalFaction.GetScore
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelRobotNormalFaction::GetScore(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRobotNormalFaction", "GetScore");

	Params::ExcelLoaderTgfConfigExcelRobotNormalFaction_GetScore Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRobotTemplate.GetAllOfRoleWearingItemConfigIds
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UExcelLoaderTgfConfigExcelRobotTemplate::GetAllOfRoleWearingItemConfigIds()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRobotTemplate", "GetAllOfRoleWearingItemConfigIds");

	Params::ExcelLoaderTgfConfigExcelRobotTemplate_GetAllOfRoleWearingItemConfigIds Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRobotTemplate.GetFacePinching
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDRoleFacePinching* ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDRoleFacePinching* UExcelLoaderTgfConfigExcelRobotTemplate::GetFacePinching(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRobotTemplate", "GetFacePinching");

	Params::ExcelLoaderTgfConfigExcelRobotTemplate_GetFacePinching Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRobotTemplate.GetRobotTempleteId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelRobotTemplate::GetRobotTempleteId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRobotTemplate", "GetRobotTempleteId");

	Params::ExcelLoaderTgfConfigExcelRobotTemplate_GetRobotTempleteId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRobotTemplate.GetRoleGender
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelRobotTemplate::GetRoleGender(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRobotTemplate", "GetRoleGender");

	Params::ExcelLoaderTgfConfigExcelRobotTemplate_GetRoleGender Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRobotTemplate.GetRoleLevel
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelRobotTemplate::GetRoleLevel(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRobotTemplate", "GetRoleLevel");

	Params::ExcelLoaderTgfConfigExcelRobotTemplate_GetRoleLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRobotTemplate.GetRoleType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelRobotTemplate::GetRoleType(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRobotTemplate", "GetRoleType");

	Params::ExcelLoaderTgfConfigExcelRobotTemplate_GetRoleType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRobotTemplate.GetRoleWearingItemConfigIds
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelRobotTemplate::GetRoleWearingItemConfigIds(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRobotTemplate", "GetRoleWearingItemConfigIds");

	Params::ExcelLoaderTgfConfigExcelRobotTemplate_GetRoleWearingItemConfigIds Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRobotTemplate.GetRoleWearingItemConfigIdsSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelRobotTemplate::GetRoleWearingItemConfigIdsSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRobotTemplate", "GetRoleWearingItemConfigIdsSize");

	Params::ExcelLoaderTgfConfigExcelRobotTemplate_GetRoleWearingItemConfigIdsSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDRoleSkillKeyPosition.GetKeyPosition
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDRoleSkillKeyPosition::GetKeyPosition(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDRoleSkillKeyPosition", "GetKeyPosition");

	Params::ExcelLoaderTgfDRoleSkillKeyPosition_GetKeyPosition Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDRoleSkillKeyPosition.GetSkillId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDRoleSkillKeyPosition::GetSkillId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDRoleSkillKeyPosition", "GetSkillId");

	Params::ExcelLoaderTgfDRoleSkillKeyPosition_GetSkillId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDRoleSkillData.GetAllOfRoleActiveSkill
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfDRoleSkillKeyPosition*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfDRoleSkillKeyPosition*> UExcelLoaderTgfDRoleSkillData::GetAllOfRoleActiveSkill()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDRoleSkillData", "GetAllOfRoleActiveSkill");

	Params::ExcelLoaderTgfDRoleSkillData_GetAllOfRoleActiveSkill Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDRoleSkillData.GetAllOfRolePassiveSkill
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UExcelLoaderTgfDRoleSkillData::GetAllOfRolePassiveSkill()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDRoleSkillData", "GetAllOfRolePassiveSkill");

	Params::ExcelLoaderTgfDRoleSkillData_GetAllOfRolePassiveSkill Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDRoleSkillData.GetRoleActiveSkill
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDRoleSkillKeyPosition*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDRoleSkillKeyPosition* UExcelLoaderTgfDRoleSkillData::GetRoleActiveSkill(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDRoleSkillData", "GetRoleActiveSkill");

	Params::ExcelLoaderTgfDRoleSkillData_GetRoleActiveSkill Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDRoleSkillData.GetRoleActiveSkillSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfDRoleSkillData::GetRoleActiveSkillSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDRoleSkillData", "GetRoleActiveSkillSize");

	Params::ExcelLoaderTgfDRoleSkillData_GetRoleActiveSkillSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDRoleSkillData.GetRolePassiveSkill
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDRoleSkillData::GetRolePassiveSkill(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDRoleSkillData", "GetRolePassiveSkill");

	Params::ExcelLoaderTgfDRoleSkillData_GetRolePassiveSkill Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDRoleSkillData.GetRolePassiveSkillSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfDRoleSkillData::GetRolePassiveSkillSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDRoleSkillData", "GetRolePassiveSkillSize");

	Params::ExcelLoaderTgfDRoleSkillData_GetRolePassiveSkillSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDRoleMetaIndex.GetCareer
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDRoleMetaIndex::GetCareer(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDRoleMetaIndex", "GetCareer");

	Params::ExcelLoaderTgfDRoleMetaIndex_GetCareer Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDRoleMetaIndex.GetForce
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDRoleMetaIndex::GetForce(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDRoleMetaIndex", "GetForce");

	Params::ExcelLoaderTgfDRoleMetaIndex_GetForce Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDRoleMetaIndex.GetGender
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDRoleMetaIndex::GetGender(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDRoleMetaIndex", "GetGender");

	Params::ExcelLoaderTgfDRoleMetaIndex_GetGender Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDRoleMetaIndex.GetRace
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDRoleMetaIndex::GetRace(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDRoleMetaIndex", "GetRace");

	Params::ExcelLoaderTgfDRoleMetaIndex_GetRace Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDRoleSkinWidgetMetaIndex.GetBelongToRoleType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDRoleSkinWidgetMetaIndex::GetBelongToRoleType(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDRoleSkinWidgetMetaIndex", "GetBelongToRoleType");

	Params::ExcelLoaderTgfDRoleSkinWidgetMetaIndex_GetBelongToRoleType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDRoleSkinWidgetMetaIndex.GetPosition
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDRoleSkinWidgetMetaIndex::GetPosition(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDRoleSkinWidgetMetaIndex", "GetPosition");

	Params::ExcelLoaderTgfDRoleSkinWidgetMetaIndex_GetPosition Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDRoleSkinWidgetMetaIndex.GetSuitId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDRoleSkinWidgetMetaIndex::GetSuitId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDRoleSkinWidgetMetaIndex", "GetSuitId");

	Params::ExcelLoaderTgfDRoleSkinWidgetMetaIndex_GetSuitId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDRoleBackpackData.GetAllOfItems
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfDItem*>     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfDItem*> UExcelLoaderTgfDRoleBackpackData::GetAllOfItems()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDRoleBackpackData", "GetAllOfItems");

	Params::ExcelLoaderTgfDRoleBackpackData_GetAllOfItems Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDRoleBackpackData.GetColumnSize
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDRoleBackpackData::GetColumnSize(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDRoleBackpackData", "GetColumnSize");

	Params::ExcelLoaderTgfDRoleBackpackData_GetColumnSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDRoleBackpackData.GetItems
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDItem*             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDItem* UExcelLoaderTgfDRoleBackpackData::GetItems(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDRoleBackpackData", "GetItems");

	Params::ExcelLoaderTgfDRoleBackpackData_GetItems Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDRoleBackpackData.GetItemsSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfDRoleBackpackData::GetItemsSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDRoleBackpackData", "GetItemsSize");

	Params::ExcelLoaderTgfDRoleBackpackData_GetItemsSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDRoleBackpackData.GetRowSize
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDRoleBackpackData::GetRowSize(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDRoleBackpackData", "GetRowSize");

	Params::ExcelLoaderTgfDRoleBackpackData_GetRowSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDRoleWearingData.GetAllOfItems
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfDItem*>     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfDItem*> UExcelLoaderTgfDRoleWearingData::GetAllOfItems()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDRoleWearingData", "GetAllOfItems");

	Params::ExcelLoaderTgfDRoleWearingData_GetAllOfItems Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDRoleWearingData.GetItems
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDItem*             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDItem* UExcelLoaderTgfDRoleWearingData::GetItems(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDRoleWearingData", "GetItems");

	Params::ExcelLoaderTgfDRoleWearingData_GetItems Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDRoleWearingData.GetItemsSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfDRoleWearingData::GetItemsSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDRoleWearingData", "GetItemsSize");

	Params::ExcelLoaderTgfDRoleWearingData_GetItemsSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDRoleFacePinching.GetBeardColor
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDRoleFacePinching::GetBeardColor(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDRoleFacePinching", "GetBeardColor");

	Params::ExcelLoaderTgfDRoleFacePinching_GetBeardColor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDRoleFacePinching.GetBeardType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDRoleFacePinching::GetBeardType(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDRoleFacePinching", "GetBeardType");

	Params::ExcelLoaderTgfDRoleFacePinching_GetBeardType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDRoleFacePinching.GetEyeColor
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDRoleFacePinching::GetEyeColor(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDRoleFacePinching", "GetEyeColor");

	Params::ExcelLoaderTgfDRoleFacePinching_GetEyeColor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDRoleFacePinching.GetFacePinchingGuid
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfDRoleFacePinching::GetFacePinchingGuid(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDRoleFacePinching", "GetFacePinchingGuid");

	Params::ExcelLoaderTgfDRoleFacePinching_GetFacePinchingGuid Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDRoleFacePinching.GetFaceType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDRoleFacePinching::GetFaceType(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDRoleFacePinching", "GetFaceType");

	Params::ExcelLoaderTgfDRoleFacePinching_GetFaceType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDRoleFacePinching.GetHairColor
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDRoleFacePinching::GetHairColor(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDRoleFacePinching", "GetHairColor");

	Params::ExcelLoaderTgfDRoleFacePinching_GetHairColor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDRoleFacePinching.GetHairType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDRoleFacePinching::GetHairType(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDRoleFacePinching", "GetHairType");

	Params::ExcelLoaderTgfDRoleFacePinching_GetHairType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDRoleFacePinching.GetMakeupColor
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDRoleFacePinching::GetMakeupColor(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDRoleFacePinching", "GetMakeupColor");

	Params::ExcelLoaderTgfDRoleFacePinching_GetMakeupColor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDRoleFacePinching.GetMakeupType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDRoleFacePinching::GetMakeupType(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDRoleFacePinching", "GetMakeupType");

	Params::ExcelLoaderTgfDRoleFacePinching_GetMakeupType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDRoleFacePinching.GetScarType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDRoleFacePinching::GetScarType(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDRoleFacePinching", "GetScarType");

	Params::ExcelLoaderTgfDRoleFacePinching_GetScarType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDRoleFacePinching.GetSkinType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDRoleFacePinching::GetSkinType(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDRoleFacePinching", "GetSkinType");

	Params::ExcelLoaderTgfDRoleFacePinching_GetSkinType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDRoleFacePinching.GetTatooColor
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDRoleFacePinching::GetTatooColor(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDRoleFacePinching", "GetTatooColor");

	Params::ExcelLoaderTgfDRoleFacePinching_GetTatooColor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDRoleFacePinching.GetTatooType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDRoleFacePinching::GetTatooType(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDRoleFacePinching", "GetTatooType");

	Params::ExcelLoaderTgfDRoleFacePinching_GetTatooType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigUeSourceCharacter.GetRoleId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigUeSourceCharacter::GetRoleId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigUeSourceCharacter", "GetRoleId");

	Params::ExcelLoaderTgfConfigUeSourceCharacter_GetRoleId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigUeSourceCharacter.GetUePath
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfConfigUeSourceCharacter::GetUePath(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigUeSourceCharacter", "GetUePath");

	Params::ExcelLoaderTgfConfigUeSourceCharacter_GetUePath Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRoleType.GetAllOfAvailableGender
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UExcelLoaderTgfConfigExcelRoleType::GetAllOfAvailableGender()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRoleType", "GetAllOfAvailableGender");

	Params::ExcelLoaderTgfConfigExcelRoleType_GetAllOfAvailableGender Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRoleType.GetAllOfCreateDefaultItemConfigIds
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UExcelLoaderTgfConfigExcelRoleType::GetAllOfCreateDefaultItemConfigIds()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRoleType", "GetAllOfCreateDefaultItemConfigIds");

	Params::ExcelLoaderTgfConfigExcelRoleType_GetAllOfCreateDefaultItemConfigIds Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRoleType.GetAllOfCreateShowItemConfigIds
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UExcelLoaderTgfConfigExcelRoleType::GetAllOfCreateShowItemConfigIds()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRoleType", "GetAllOfCreateShowItemConfigIds");

	Params::ExcelLoaderTgfConfigExcelRoleType_GetAllOfCreateShowItemConfigIds Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRoleType.GetAllOfGameFailedDefaultItemConfigIds
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UExcelLoaderTgfConfigExcelRoleType::GetAllOfGameFailedDefaultItemConfigIds()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRoleType", "GetAllOfGameFailedDefaultItemConfigIds");

	Params::ExcelLoaderTgfConfigExcelRoleType_GetAllOfGameFailedDefaultItemConfigIds Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRoleType.GetAllOfRoleInitialPassiveSkill
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UExcelLoaderTgfConfigExcelRoleType::GetAllOfRoleInitialPassiveSkill()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRoleType", "GetAllOfRoleInitialPassiveSkill");

	Params::ExcelLoaderTgfConfigExcelRoleType_GetAllOfRoleInitialPassiveSkill Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRoleType.GetAllOfRoleInitialSkill
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfDRoleSkillKeyPosition*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfDRoleSkillKeyPosition*> UExcelLoaderTgfConfigExcelRoleType::GetAllOfRoleInitialSkill()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRoleType", "GetAllOfRoleInitialSkill");

	Params::ExcelLoaderTgfConfigExcelRoleType_GetAllOfRoleInitialSkill Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRoleType.GetAllOfRolePassiveSkill
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UExcelLoaderTgfConfigExcelRoleType::GetAllOfRolePassiveSkill()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRoleType", "GetAllOfRolePassiveSkill");

	Params::ExcelLoaderTgfConfigExcelRoleType_GetAllOfRolePassiveSkill Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRoleType.GetAllOfRoleSkill
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UExcelLoaderTgfConfigExcelRoleType::GetAllOfRoleSkill()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRoleType", "GetAllOfRoleSkill");

	Params::ExcelLoaderTgfConfigExcelRoleType_GetAllOfRoleSkill Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRoleType.GetAllOfSkinIds
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UExcelLoaderTgfConfigExcelRoleType::GetAllOfSkinIds()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRoleType", "GetAllOfSkinIds");

	Params::ExcelLoaderTgfConfigExcelRoleType_GetAllOfSkinIds Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRoleType.GetAvailableGender
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelRoleType::GetAvailableGender(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRoleType", "GetAvailableGender");

	Params::ExcelLoaderTgfConfigExcelRoleType_GetAvailableGender Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRoleType.GetAvailableGenderSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelRoleType::GetAvailableGenderSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRoleType", "GetAvailableGenderSize");

	Params::ExcelLoaderTgfConfigExcelRoleType_GetAvailableGenderSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRoleType.GetCreateDefaultItemConfigIds
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelRoleType::GetCreateDefaultItemConfigIds(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRoleType", "GetCreateDefaultItemConfigIds");

	Params::ExcelLoaderTgfConfigExcelRoleType_GetCreateDefaultItemConfigIds Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRoleType.GetCreateDefaultItemConfigIdsSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelRoleType::GetCreateDefaultItemConfigIdsSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRoleType", "GetCreateDefaultItemConfigIdsSize");

	Params::ExcelLoaderTgfConfigExcelRoleType_GetCreateDefaultItemConfigIdsSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRoleType.GetCreateLimit
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDConditionBasicLimit*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDConditionBasicLimit* UExcelLoaderTgfConfigExcelRoleType::GetCreateLimit(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRoleType", "GetCreateLimit");

	Params::ExcelLoaderTgfConfigExcelRoleType_GetCreateLimit Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRoleType.GetCreateShowItemConfigIds
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelRoleType::GetCreateShowItemConfigIds(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRoleType", "GetCreateShowItemConfigIds");

	Params::ExcelLoaderTgfConfigExcelRoleType_GetCreateShowItemConfigIds Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRoleType.GetCreateShowItemConfigIdsSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelRoleType::GetCreateShowItemConfigIdsSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRoleType", "GetCreateShowItemConfigIdsSize");

	Params::ExcelLoaderTgfConfigExcelRoleType_GetCreateShowItemConfigIdsSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRoleType.GetCumulativeLoginDay
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelRoleType::GetCumulativeLoginDay(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRoleType", "GetCumulativeLoginDay");

	Params::ExcelLoaderTgfConfigExcelRoleType_GetCumulativeLoginDay Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRoleType.GetEnvironment
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelRoleType::GetEnvironment(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRoleType", "GetEnvironment");

	Params::ExcelLoaderTgfConfigExcelRoleType_GetEnvironment Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRoleType.GetForce
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelRoleType::GetForce(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRoleType", "GetForce");

	Params::ExcelLoaderTgfConfigExcelRoleType_GetForce Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRoleType.GetGameFailedDefaultItemConfigIds
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelRoleType::GetGameFailedDefaultItemConfigIds(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRoleType", "GetGameFailedDefaultItemConfigIds");

	Params::ExcelLoaderTgfConfigExcelRoleType_GetGameFailedDefaultItemConfigIds Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRoleType.GetGameFailedDefaultItemConfigIdsSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelRoleType::GetGameFailedDefaultItemConfigIdsSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRoleType", "GetGameFailedDefaultItemConfigIdsSize");

	Params::ExcelLoaderTgfConfigExcelRoleType_GetGameFailedDefaultItemConfigIdsSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRoleType.GetIconCareer
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfConfigExcelRoleType::GetIconCareer(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRoleType", "GetIconCareer");

	Params::ExcelLoaderTgfConfigExcelRoleType_GetIconCareer Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRoleType.GetIconHead
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfConfigExcelRoleType::GetIconHead(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRoleType", "GetIconHead");

	Params::ExcelLoaderTgfConfigExcelRoleType_GetIconHead Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRoleType.GetMeta
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDRoleMetaIndex*    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDRoleMetaIndex* UExcelLoaderTgfConfigExcelRoleType::GetMeta(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRoleType", "GetMeta");

	Params::ExcelLoaderTgfConfigExcelRoleType_GetMeta Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRoleType.GetOrder
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelRoleType::GetOrder(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRoleType", "GetOrder");

	Params::ExcelLoaderTgfConfigExcelRoleType_GetOrder Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRoleType.GetRevivalDefaultWeapon
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelRoleType::GetRevivalDefaultWeapon(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRoleType", "GetRevivalDefaultWeapon");

	Params::ExcelLoaderTgfConfigExcelRoleType_GetRevivalDefaultWeapon Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRoleType.GetRoleInitialPassiveSkill
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelRoleType::GetRoleInitialPassiveSkill(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRoleType", "GetRoleInitialPassiveSkill");

	Params::ExcelLoaderTgfConfigExcelRoleType_GetRoleInitialPassiveSkill Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRoleType.GetRoleInitialPassiveSkillSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelRoleType::GetRoleInitialPassiveSkillSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRoleType", "GetRoleInitialPassiveSkillSize");

	Params::ExcelLoaderTgfConfigExcelRoleType_GetRoleInitialPassiveSkillSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRoleType.GetRoleInitialSkill
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDRoleSkillKeyPosition*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDRoleSkillKeyPosition* UExcelLoaderTgfConfigExcelRoleType::GetRoleInitialSkill(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRoleType", "GetRoleInitialSkill");

	Params::ExcelLoaderTgfConfigExcelRoleType_GetRoleInitialSkill Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRoleType.GetRoleInitialSkillSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelRoleType::GetRoleInitialSkillSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRoleType", "GetRoleInitialSkillSize");

	Params::ExcelLoaderTgfConfigExcelRoleType_GetRoleInitialSkillSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRoleType.GetRolePassiveSkill
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelRoleType::GetRolePassiveSkill(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRoleType", "GetRolePassiveSkill");

	Params::ExcelLoaderTgfConfigExcelRoleType_GetRolePassiveSkill Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRoleType.GetRolePassiveSkillSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelRoleType::GetRolePassiveSkillSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRoleType", "GetRolePassiveSkillSize");

	Params::ExcelLoaderTgfConfigExcelRoleType_GetRolePassiveSkillSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRoleType.GetRoleSkill
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelRoleType::GetRoleSkill(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRoleType", "GetRoleSkill");

	Params::ExcelLoaderTgfConfigExcelRoleType_GetRoleSkill Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRoleType.GetRoleSkillSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelRoleType::GetRoleSkillSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRoleType", "GetRoleSkillSize");

	Params::ExcelLoaderTgfConfigExcelRoleType_GetRoleSkillSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRoleType.GetRotation
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDExcelUeXYZ*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDExcelUeXYZ* UExcelLoaderTgfConfigExcelRoleType::GetRotation(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRoleType", "GetRotation");

	Params::ExcelLoaderTgfConfigExcelRoleType_GetRotation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRoleType.GetSkinIds
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelRoleType::GetSkinIds(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRoleType", "GetSkinIds");

	Params::ExcelLoaderTgfConfigExcelRoleType_GetSkinIds Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRoleType.GetSkinIdsSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelRoleType::GetSkinIdsSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRoleType", "GetSkinIdsSize");

	Params::ExcelLoaderTgfConfigExcelRoleType_GetSkinIdsSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRoleType.GetStrAdvantages
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfConfigExcelRoleType::GetStrAdvantages(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRoleType", "GetStrAdvantages");

	Params::ExcelLoaderTgfConfigExcelRoleType_GetStrAdvantages Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRoleType.GetStrDesc
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfConfigExcelRoleType::GetStrDesc(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRoleType", "GetStrDesc");

	Params::ExcelLoaderTgfConfigExcelRoleType_GetStrDesc Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRoleType.GetStrDisadvantages
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfConfigExcelRoleType::GetStrDisadvantages(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRoleType", "GetStrDisadvantages");

	Params::ExcelLoaderTgfConfigExcelRoleType_GetStrDisadvantages Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRoleType.GetStrEquipments
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfConfigExcelRoleType::GetStrEquipments(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRoleType", "GetStrEquipments");

	Params::ExcelLoaderTgfConfigExcelRoleType_GetStrEquipments Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRoleType.GetStrName
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfConfigExcelRoleType::GetStrName(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRoleType", "GetStrName");

	Params::ExcelLoaderTgfConfigExcelRoleType_GetStrName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRoleType.GetTypeId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelRoleType::GetTypeId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRoleType", "GetTypeId");

	Params::ExcelLoaderTgfConfigExcelRoleType_GetTypeId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRoleType.GetUnlockTime
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufTimestamp*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufTimestamp* UExcelLoaderTgfConfigExcelRoleType::GetUnlockTime(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRoleType", "GetUnlockTime");

	Params::ExcelLoaderTgfConfigExcelRoleType_GetUnlockTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRoleDefaultEquipment.GetConfigId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelRoleDefaultEquipment::GetConfigId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRoleDefaultEquipment", "GetConfigId");

	Params::ExcelLoaderTgfConfigExcelRoleDefaultEquipment_GetConfigId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRoleDefaultEquipment.GetCount
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelRoleDefaultEquipment::GetCount(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRoleDefaultEquipment", "GetCount");

	Params::ExcelLoaderTgfConfigExcelRoleDefaultEquipment_GetCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRoleDefaultEquipment.GetItemId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelRoleDefaultEquipment::GetItemId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRoleDefaultEquipment", "GetItemId");

	Params::ExcelLoaderTgfConfigExcelRoleDefaultEquipment_GetItemId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRoleDefaultEquipment.GetStorageType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelRoleDefaultEquipment::GetStorageType(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRoleDefaultEquipment", "GetStorageType");

	Params::ExcelLoaderTgfConfigExcelRoleDefaultEquipment_GetStorageType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRoleDefaultEquipment.GetWearPart
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelRoleDefaultEquipment::GetWearPart(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRoleDefaultEquipment", "GetWearPart");

	Params::ExcelLoaderTgfConfigExcelRoleDefaultEquipment_GetWearPart Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRoleLevelUpgrade.GetRoleAttribute
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDBattleAttributeOffset*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDBattleAttributeOffset* UExcelLoaderTgfConfigExcelRoleLevelUpgrade::GetRoleAttribute(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRoleLevelUpgrade", "GetRoleAttribute");

	Params::ExcelLoaderTgfConfigExcelRoleLevelUpgrade_GetRoleAttribute Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRoleLevelUpgrade.GetRoleLevel
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelRoleLevelUpgrade::GetRoleLevel(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRoleLevelUpgrade", "GetRoleLevel");

	Params::ExcelLoaderTgfConfigExcelRoleLevelUpgrade_GetRoleLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRoleLevelUpgrade.GetRoleTypeId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelRoleLevelUpgrade::GetRoleTypeId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRoleLevelUpgrade", "GetRoleTypeId");

	Params::ExcelLoaderTgfConfigExcelRoleLevelUpgrade_GetRoleTypeId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRoleSkinType.GetSkinId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelRoleSkinType::GetSkinId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRoleSkinType", "GetSkinId");

	Params::ExcelLoaderTgfConfigExcelRoleSkinType_GetSkinId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRoleSkinType.GetSkinName
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfConfigExcelRoleSkinType::GetSkinName(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRoleSkinType", "GetSkinName");

	Params::ExcelLoaderTgfConfigExcelRoleSkinType_GetSkinName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRoleSkill.GetAbilitySetId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelRoleSkill::GetAbilitySetId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRoleSkill", "GetAbilitySetId");

	Params::ExcelLoaderTgfConfigExcelRoleSkill_GetAbilitySetId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRoleSkill.GetDisplayOrder
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelRoleSkill::GetDisplayOrder(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRoleSkill", "GetDisplayOrder");

	Params::ExcelLoaderTgfConfigExcelRoleSkill_GetDisplayOrder Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRoleSkill.GetInitialSkillDescr
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfConfigExcelRoleSkill::GetInitialSkillDescr(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRoleSkill", "GetInitialSkillDescr");

	Params::ExcelLoaderTgfConfigExcelRoleSkill_GetInitialSkillDescr Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRoleSkill.GetIsDisplay
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UExcelLoaderTgfConfigExcelRoleSkill::GetIsDisplay(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRoleSkill", "GetIsDisplay");

	Params::ExcelLoaderTgfConfigExcelRoleSkill_GetIsDisplay Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRoleSkill.GetSkillDescr
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfConfigExcelRoleSkill::GetSkillDescr(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRoleSkill", "GetSkillDescr");

	Params::ExcelLoaderTgfConfigExcelRoleSkill_GetSkillDescr Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRoleSkill.GetSkillId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelRoleSkill::GetSkillId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRoleSkill", "GetSkillId");

	Params::ExcelLoaderTgfConfigExcelRoleSkill_GetSkillId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRoleSkill.GetSkillName
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfConfigExcelRoleSkill::GetSkillName(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRoleSkill", "GetSkillName");

	Params::ExcelLoaderTgfConfigExcelRoleSkill_GetSkillName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRoleSkill.GetSkillPosition
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelRoleSkill::GetSkillPosition(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRoleSkill", "GetSkillPosition");

	Params::ExcelLoaderTgfConfigExcelRoleSkill_GetSkillPosition Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRoleFacePinchingLimit.GetAllOfBeardIds
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UExcelLoaderTgfConfigExcelRoleFacePinchingLimit::GetAllOfBeardIds()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRoleFacePinchingLimit", "GetAllOfBeardIds");

	Params::ExcelLoaderTgfConfigExcelRoleFacePinchingLimit_GetAllOfBeardIds Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRoleFacePinchingLimit.GetAllOfEyecolorIds
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UExcelLoaderTgfConfigExcelRoleFacePinchingLimit::GetAllOfEyecolorIds()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRoleFacePinchingLimit", "GetAllOfEyecolorIds");

	Params::ExcelLoaderTgfConfigExcelRoleFacePinchingLimit_GetAllOfEyecolorIds Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRoleFacePinchingLimit.GetAllOfFaceIds
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UExcelLoaderTgfConfigExcelRoleFacePinchingLimit::GetAllOfFaceIds()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRoleFacePinchingLimit", "GetAllOfFaceIds");

	Params::ExcelLoaderTgfConfigExcelRoleFacePinchingLimit_GetAllOfFaceIds Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRoleFacePinchingLimit.GetAllOfHaircolorIds
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UExcelLoaderTgfConfigExcelRoleFacePinchingLimit::GetAllOfHaircolorIds()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRoleFacePinchingLimit", "GetAllOfHaircolorIds");

	Params::ExcelLoaderTgfConfigExcelRoleFacePinchingLimit_GetAllOfHaircolorIds Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRoleFacePinchingLimit.GetAllOfHairIds
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UExcelLoaderTgfConfigExcelRoleFacePinchingLimit::GetAllOfHairIds()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRoleFacePinchingLimit", "GetAllOfHairIds");

	Params::ExcelLoaderTgfConfigExcelRoleFacePinchingLimit_GetAllOfHairIds Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRoleFacePinchingLimit.GetAllOfMakeupColorIds
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UExcelLoaderTgfConfigExcelRoleFacePinchingLimit::GetAllOfMakeupColorIds()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRoleFacePinchingLimit", "GetAllOfMakeupColorIds");

	Params::ExcelLoaderTgfConfigExcelRoleFacePinchingLimit_GetAllOfMakeupColorIds Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRoleFacePinchingLimit.GetAllOfMakeupTypeIds
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UExcelLoaderTgfConfigExcelRoleFacePinchingLimit::GetAllOfMakeupTypeIds()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRoleFacePinchingLimit", "GetAllOfMakeupTypeIds");

	Params::ExcelLoaderTgfConfigExcelRoleFacePinchingLimit_GetAllOfMakeupTypeIds Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRoleFacePinchingLimit.GetAllOfScarTypeIds
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UExcelLoaderTgfConfigExcelRoleFacePinchingLimit::GetAllOfScarTypeIds()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRoleFacePinchingLimit", "GetAllOfScarTypeIds");

	Params::ExcelLoaderTgfConfigExcelRoleFacePinchingLimit_GetAllOfScarTypeIds Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRoleFacePinchingLimit.GetAllOfSkincolorIds
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UExcelLoaderTgfConfigExcelRoleFacePinchingLimit::GetAllOfSkincolorIds()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRoleFacePinchingLimit", "GetAllOfSkincolorIds");

	Params::ExcelLoaderTgfConfigExcelRoleFacePinchingLimit_GetAllOfSkincolorIds Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRoleFacePinchingLimit.GetAllOfTatoocolorIds
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UExcelLoaderTgfConfigExcelRoleFacePinchingLimit::GetAllOfTatoocolorIds()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRoleFacePinchingLimit", "GetAllOfTatoocolorIds");

	Params::ExcelLoaderTgfConfigExcelRoleFacePinchingLimit_GetAllOfTatoocolorIds Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRoleFacePinchingLimit.GetAllOfTatooIds
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UExcelLoaderTgfConfigExcelRoleFacePinchingLimit::GetAllOfTatooIds()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRoleFacePinchingLimit", "GetAllOfTatooIds");

	Params::ExcelLoaderTgfConfigExcelRoleFacePinchingLimit_GetAllOfTatooIds Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRoleFacePinchingLimit.GetAllOfTemplateIds
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UExcelLoaderTgfConfigExcelRoleFacePinchingLimit::GetAllOfTemplateIds()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRoleFacePinchingLimit", "GetAllOfTemplateIds");

	Params::ExcelLoaderTgfConfigExcelRoleFacePinchingLimit_GetAllOfTemplateIds Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRoleFacePinchingLimit.GetBeardIds
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelRoleFacePinchingLimit::GetBeardIds(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRoleFacePinchingLimit", "GetBeardIds");

	Params::ExcelLoaderTgfConfigExcelRoleFacePinchingLimit_GetBeardIds Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRoleFacePinchingLimit.GetBeardIdsSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelRoleFacePinchingLimit::GetBeardIdsSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRoleFacePinchingLimit", "GetBeardIdsSize");

	Params::ExcelLoaderTgfConfigExcelRoleFacePinchingLimit_GetBeardIdsSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRoleFacePinchingLimit.GetEyecolorIds
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelRoleFacePinchingLimit::GetEyecolorIds(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRoleFacePinchingLimit", "GetEyecolorIds");

	Params::ExcelLoaderTgfConfigExcelRoleFacePinchingLimit_GetEyecolorIds Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRoleFacePinchingLimit.GetEyecolorIdsSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelRoleFacePinchingLimit::GetEyecolorIdsSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRoleFacePinchingLimit", "GetEyecolorIdsSize");

	Params::ExcelLoaderTgfConfigExcelRoleFacePinchingLimit_GetEyecolorIdsSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRoleFacePinchingLimit.GetFaceIds
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelRoleFacePinchingLimit::GetFaceIds(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRoleFacePinchingLimit", "GetFaceIds");

	Params::ExcelLoaderTgfConfigExcelRoleFacePinchingLimit_GetFaceIds Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRoleFacePinchingLimit.GetFaceIdsSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelRoleFacePinchingLimit::GetFaceIdsSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRoleFacePinchingLimit", "GetFaceIdsSize");

	Params::ExcelLoaderTgfConfigExcelRoleFacePinchingLimit_GetFaceIdsSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRoleFacePinchingLimit.GetGenderType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelRoleFacePinchingLimit::GetGenderType(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRoleFacePinchingLimit", "GetGenderType");

	Params::ExcelLoaderTgfConfigExcelRoleFacePinchingLimit_GetGenderType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRoleFacePinchingLimit.GetHaircolorIds
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelRoleFacePinchingLimit::GetHaircolorIds(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRoleFacePinchingLimit", "GetHaircolorIds");

	Params::ExcelLoaderTgfConfigExcelRoleFacePinchingLimit_GetHaircolorIds Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRoleFacePinchingLimit.GetHaircolorIdsSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelRoleFacePinchingLimit::GetHaircolorIdsSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRoleFacePinchingLimit", "GetHaircolorIdsSize");

	Params::ExcelLoaderTgfConfigExcelRoleFacePinchingLimit_GetHaircolorIdsSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRoleFacePinchingLimit.GetHairIds
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelRoleFacePinchingLimit::GetHairIds(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRoleFacePinchingLimit", "GetHairIds");

	Params::ExcelLoaderTgfConfigExcelRoleFacePinchingLimit_GetHairIds Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRoleFacePinchingLimit.GetHairIdsSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelRoleFacePinchingLimit::GetHairIdsSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRoleFacePinchingLimit", "GetHairIdsSize");

	Params::ExcelLoaderTgfConfigExcelRoleFacePinchingLimit_GetHairIdsSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRoleFacePinchingLimit.GetMakeupColorIds
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelRoleFacePinchingLimit::GetMakeupColorIds(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRoleFacePinchingLimit", "GetMakeupColorIds");

	Params::ExcelLoaderTgfConfigExcelRoleFacePinchingLimit_GetMakeupColorIds Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRoleFacePinchingLimit.GetMakeupColorIdsSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelRoleFacePinchingLimit::GetMakeupColorIdsSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRoleFacePinchingLimit", "GetMakeupColorIdsSize");

	Params::ExcelLoaderTgfConfigExcelRoleFacePinchingLimit_GetMakeupColorIdsSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRoleFacePinchingLimit.GetMakeupTypeIds
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelRoleFacePinchingLimit::GetMakeupTypeIds(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRoleFacePinchingLimit", "GetMakeupTypeIds");

	Params::ExcelLoaderTgfConfigExcelRoleFacePinchingLimit_GetMakeupTypeIds Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRoleFacePinchingLimit.GetMakeupTypeIdsSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelRoleFacePinchingLimit::GetMakeupTypeIdsSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRoleFacePinchingLimit", "GetMakeupTypeIdsSize");

	Params::ExcelLoaderTgfConfigExcelRoleFacePinchingLimit_GetMakeupTypeIdsSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRoleFacePinchingLimit.GetRace
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelRoleFacePinchingLimit::GetRace(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRoleFacePinchingLimit", "GetRace");

	Params::ExcelLoaderTgfConfigExcelRoleFacePinchingLimit_GetRace Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRoleFacePinchingLimit.GetScarTypeIds
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelRoleFacePinchingLimit::GetScarTypeIds(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRoleFacePinchingLimit", "GetScarTypeIds");

	Params::ExcelLoaderTgfConfigExcelRoleFacePinchingLimit_GetScarTypeIds Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRoleFacePinchingLimit.GetScarTypeIdsSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelRoleFacePinchingLimit::GetScarTypeIdsSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRoleFacePinchingLimit", "GetScarTypeIdsSize");

	Params::ExcelLoaderTgfConfigExcelRoleFacePinchingLimit_GetScarTypeIdsSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRoleFacePinchingLimit.GetSkincolorIds
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelRoleFacePinchingLimit::GetSkincolorIds(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRoleFacePinchingLimit", "GetSkincolorIds");

	Params::ExcelLoaderTgfConfigExcelRoleFacePinchingLimit_GetSkincolorIds Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRoleFacePinchingLimit.GetSkincolorIdsSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelRoleFacePinchingLimit::GetSkincolorIdsSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRoleFacePinchingLimit", "GetSkincolorIdsSize");

	Params::ExcelLoaderTgfConfigExcelRoleFacePinchingLimit_GetSkincolorIdsSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRoleFacePinchingLimit.GetTatoocolorIds
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelRoleFacePinchingLimit::GetTatoocolorIds(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRoleFacePinchingLimit", "GetTatoocolorIds");

	Params::ExcelLoaderTgfConfigExcelRoleFacePinchingLimit_GetTatoocolorIds Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRoleFacePinchingLimit.GetTatoocolorIdsSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelRoleFacePinchingLimit::GetTatoocolorIdsSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRoleFacePinchingLimit", "GetTatoocolorIdsSize");

	Params::ExcelLoaderTgfConfigExcelRoleFacePinchingLimit_GetTatoocolorIdsSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRoleFacePinchingLimit.GetTatooIds
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelRoleFacePinchingLimit::GetTatooIds(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRoleFacePinchingLimit", "GetTatooIds");

	Params::ExcelLoaderTgfConfigExcelRoleFacePinchingLimit_GetTatooIds Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRoleFacePinchingLimit.GetTatooIdsSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelRoleFacePinchingLimit::GetTatooIdsSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRoleFacePinchingLimit", "GetTatooIdsSize");

	Params::ExcelLoaderTgfConfigExcelRoleFacePinchingLimit_GetTatooIdsSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRoleFacePinchingLimit.GetTemplateIds
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelRoleFacePinchingLimit::GetTemplateIds(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRoleFacePinchingLimit", "GetTemplateIds");

	Params::ExcelLoaderTgfConfigExcelRoleFacePinchingLimit_GetTemplateIds Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRoleFacePinchingLimit.GetTemplateIdsSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelRoleFacePinchingLimit::GetTemplateIdsSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRoleFacePinchingLimit", "GetTemplateIdsSize");

	Params::ExcelLoaderTgfConfigExcelRoleFacePinchingLimit_GetTemplateIdsSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRoleHeadIcon.GetFaceId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelRoleHeadIcon::GetFaceId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRoleHeadIcon", "GetFaceId");

	Params::ExcelLoaderTgfConfigExcelRoleHeadIcon_GetFaceId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRoleHeadIcon.GetGenderType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelRoleHeadIcon::GetGenderType(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRoleHeadIcon", "GetGenderType");

	Params::ExcelLoaderTgfConfigExcelRoleHeadIcon_GetGenderType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRoleHeadIcon.GetHeadIcon
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfConfigExcelRoleHeadIcon::GetHeadIcon(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRoleHeadIcon", "GetHeadIcon");

	Params::ExcelLoaderTgfConfigExcelRoleHeadIcon_GetHeadIcon Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRoleHeadIcon.GetSkincolorId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelRoleHeadIcon::GetSkincolorId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRoleHeadIcon", "GetSkincolorId");

	Params::ExcelLoaderTgfConfigExcelRoleHeadIcon_GetSkincolorId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelRoleHeadIcon.GetTypeId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelRoleHeadIcon::GetTypeId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelRoleHeadIcon", "GetTypeId");

	Params::ExcelLoaderTgfConfigExcelRoleHeadIcon_GetTypeId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelSeasonRule.GetAllOfTradeMarketId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UExcelLoaderTgfConfigExcelSeasonRule::GetAllOfTradeMarketId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelSeasonRule", "GetAllOfTradeMarketId");

	Params::ExcelLoaderTgfConfigExcelSeasonRule_GetAllOfTradeMarketId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelSeasonRule.GetCraftGroupId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelSeasonRule::GetCraftGroupId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelSeasonRule", "GetCraftGroupId");

	Params::ExcelLoaderTgfConfigExcelSeasonRule_GetCraftGroupId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelSeasonRule.GetLogicMailMajorType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelSeasonRule::GetLogicMailMajorType(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelSeasonRule", "GetLogicMailMajorType");

	Params::ExcelLoaderTgfConfigExcelSeasonRule_GetLogicMailMajorType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelSeasonRule.GetMallMarketId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelSeasonRule::GetMallMarketId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelSeasonRule", "GetMallMarketId");

	Params::ExcelLoaderTgfConfigExcelSeasonRule_GetMallMarketId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelSeasonRule.GetMerchantMarketId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelSeasonRule::GetMerchantMarketId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelSeasonRule", "GetMerchantMarketId");

	Params::ExcelLoaderTgfConfigExcelSeasonRule_GetMerchantMarketId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelSeasonRule.GetPreseasonBeginTime
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufTimestamp*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufTimestamp* UExcelLoaderTgfConfigExcelSeasonRule::GetPreseasonBeginTime(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelSeasonRule", "GetPreseasonBeginTime");

	Params::ExcelLoaderTgfConfigExcelSeasonRule_GetPreseasonBeginTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelSeasonRule.GetSeasonBeginTime
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufTimestamp*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufTimestamp* UExcelLoaderTgfConfigExcelSeasonRule::GetSeasonBeginTime(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelSeasonRule", "GetSeasonBeginTime");

	Params::ExcelLoaderTgfConfigExcelSeasonRule_GetSeasonBeginTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelSeasonRule.GetSeasonEndTime
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufTimestamp*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufTimestamp* UExcelLoaderTgfConfigExcelSeasonRule::GetSeasonEndTime(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelSeasonRule", "GetSeasonEndTime");

	Params::ExcelLoaderTgfConfigExcelSeasonRule_GetSeasonEndTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelSeasonRule.GetSeasonId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelSeasonRule::GetSeasonId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelSeasonRule", "GetSeasonId");

	Params::ExcelLoaderTgfConfigExcelSeasonRule_GetSeasonId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelSeasonRule.GetSpecialMarketId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelSeasonRule::GetSpecialMarketId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelSeasonRule", "GetSpecialMarketId");

	Params::ExcelLoaderTgfConfigExcelSeasonRule_GetSpecialMarketId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelSeasonRule.GetTradeMarketId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelSeasonRule::GetTradeMarketId(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelSeasonRule", "GetTradeMarketId");

	Params::ExcelLoaderTgfConfigExcelSeasonRule_GetTradeMarketId Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelSeasonRule.GetTradeMarketIdSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelSeasonRule::GetTradeMarketIdSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelSeasonRule", "GetTradeMarketIdSize");

	Params::ExcelLoaderTgfConfigExcelSeasonRule_GetTradeMarketIdSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDStatisticsData.GetKey
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDStatisticsLimitKey*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDStatisticsLimitKey* UExcelLoaderTgfDStatisticsData::GetKey(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDStatisticsData", "GetKey");

	Params::ExcelLoaderTgfDStatisticsData_GetKey Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDStatisticsData.GetValue
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfDStatisticsData::GetValue(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDStatisticsData", "GetValue");

	Params::ExcelLoaderTgfDStatisticsData_GetValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDStatisticsDatas.GetAllOfStatistics
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfDStatisticsData*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfDStatisticsData*> UExcelLoaderTgfDStatisticsDatas::GetAllOfStatistics()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDStatisticsDatas", "GetAllOfStatistics");

	Params::ExcelLoaderTgfDStatisticsDatas_GetAllOfStatistics Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDStatisticsDatas.GetStatistics
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDStatisticsData*   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDStatisticsData* UExcelLoaderTgfDStatisticsDatas::GetStatistics(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDStatisticsDatas", "GetStatistics");

	Params::ExcelLoaderTgfDStatisticsDatas_GetStatistics Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDStatisticsDatas.GetStatisticsSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfDStatisticsDatas::GetStatisticsSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDStatisticsDatas", "GetStatisticsSize");

	Params::ExcelLoaderTgfDStatisticsDatas_GetStatisticsSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDuserMatchBattleStatisticsData.GetAllOfStatisticsData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfDMatchBattleStatisticsData*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfDMatchBattleStatisticsData*> UExcelLoaderTgfDuserMatchBattleStatisticsData::GetAllOfStatisticsData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDuserMatchBattleStatisticsData", "GetAllOfStatisticsData");

	Params::ExcelLoaderTgfDuserMatchBattleStatisticsData_GetAllOfStatisticsData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDuserMatchBattleStatisticsData.GetStatisticsData
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDMatchBattleStatisticsData*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDMatchBattleStatisticsData* UExcelLoaderTgfDuserMatchBattleStatisticsData::GetStatisticsData(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDuserMatchBattleStatisticsData", "GetStatisticsData");

	Params::ExcelLoaderTgfDuserMatchBattleStatisticsData_GetStatisticsData Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDuserMatchBattleStatisticsData.GetStatisticsDataSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfDuserMatchBattleStatisticsData::GetStatisticsDataSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDuserMatchBattleStatisticsData", "GetStatisticsDataSize");

	Params::ExcelLoaderTgfDuserMatchBattleStatisticsData_GetStatisticsDataSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDMatchBattleStatisticsData.GetAllOfData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfDMatchBattleStatisticsUnit*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfDMatchBattleStatisticsUnit*> UExcelLoaderTgfDMatchBattleStatisticsData::GetAllOfData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDMatchBattleStatisticsData", "GetAllOfData");

	Params::ExcelLoaderTgfDMatchBattleStatisticsData_GetAllOfData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDMatchBattleStatisticsData.GetData
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDMatchBattleStatisticsUnit*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDMatchBattleStatisticsUnit* UExcelLoaderTgfDMatchBattleStatisticsData::GetData(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDMatchBattleStatisticsData", "GetData");

	Params::ExcelLoaderTgfDMatchBattleStatisticsData_GetData Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDMatchBattleStatisticsData.GetDataSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfDMatchBattleStatisticsData::GetDataSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDMatchBattleStatisticsData", "GetDataSize");

	Params::ExcelLoaderTgfDMatchBattleStatisticsData_GetDataSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDMatchBattleStatisticsData.GetLimitOption
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDLimitOption*      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDLimitOption* UExcelLoaderTgfDMatchBattleStatisticsData::GetLimitOption(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDMatchBattleStatisticsData", "GetLimitOption");

	Params::ExcelLoaderTgfDMatchBattleStatisticsData_GetLimitOption Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDMatchBattleStatisticsData.GetMatchingStatisticsId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDMatchBattleStatisticsData::GetMatchingStatisticsId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDMatchBattleStatisticsData", "GetMatchingStatisticsId");

	Params::ExcelLoaderTgfDMatchBattleStatisticsData_GetMatchingStatisticsId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDMatchBattleStatisticsData.GetRoleTypeId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDMatchBattleStatisticsData::GetRoleTypeId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDMatchBattleStatisticsData", "GetRoleTypeId");

	Params::ExcelLoaderTgfDMatchBattleStatisticsData_GetRoleTypeId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDMatchBattleStatisticsUnit.GetDead
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDMatchBattleStatisticsUnit::GetDead(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDMatchBattleStatisticsUnit", "GetDead");

	Params::ExcelLoaderTgfDMatchBattleStatisticsUnit_GetDead Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDMatchBattleStatisticsUnit.GetDeathCount
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDMatchBattleStatisticsUnit::GetDeathCount(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDMatchBattleStatisticsUnit", "GetDeathCount");

	Params::ExcelLoaderTgfDMatchBattleStatisticsUnit_GetDeathCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDMatchBattleStatisticsUnit.GetEscape
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDMatchBattleStatisticsUnit::GetEscape(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDMatchBattleStatisticsUnit", "GetEscape");

	Params::ExcelLoaderTgfDMatchBattleStatisticsUnit_GetEscape Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDMatchBattleStatisticsUnit.GetKillCount
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDMatchBattleStatisticsUnit::GetKillCount(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDMatchBattleStatisticsUnit", "GetKillCount");

	Params::ExcelLoaderTgfDMatchBattleStatisticsUnit_GetKillCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDMatchBattleStatisticsUnit.GetTimestamp
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfDMatchBattleStatisticsUnit::GetTimestamp(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDMatchBattleStatisticsUnit", "GetTimestamp");

	Params::ExcelLoaderTgfDMatchBattleStatisticsUnit_GetTimestamp Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelTradeMarket.GetAllOfTicketType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UExcelLoaderTgfConfigExcelTradeMarket::GetAllOfTicketType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelTradeMarket", "GetAllOfTicketType");

	Params::ExcelLoaderTgfConfigExcelTradeMarket_GetAllOfTicketType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelTradeMarket.GetBidPricePercentage
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelTradeMarket::GetBidPricePercentage(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelTradeMarket", "GetBidPricePercentage");

	Params::ExcelLoaderTgfConfigExcelTradeMarket_GetBidPricePercentage Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelTradeMarket.GetCalculatePoolId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelTradeMarket::GetCalculatePoolId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelTradeMarket", "GetCalculatePoolId");

	Params::ExcelLoaderTgfConfigExcelTradeMarket_GetCalculatePoolId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelTradeMarket.GetCurrencyType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelTradeMarket::GetCurrencyType(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelTradeMarket", "GetCurrencyType");

	Params::ExcelLoaderTgfConfigExcelTradeMarket_GetCurrencyType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelTradeMarket.GetId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelTradeMarket::GetId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelTradeMarket", "GetId");

	Params::ExcelLoaderTgfConfigExcelTradeMarket_GetId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelTradeMarket.GetMarketType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelTradeMarket::GetMarketType(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelTradeMarket", "GetMarketType");

	Params::ExcelLoaderTgfConfigExcelTradeMarket_GetMarketType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelTradeMarket.GetPoAmountLimit
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelTradeMarket::GetPoAmountLimit(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelTradeMarket", "GetPoAmountLimit");

	Params::ExcelLoaderTgfConfigExcelTradeMarket_GetPoAmountLimit Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelTradeMarket.GetPublishCostCurrencyType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelTradeMarket::GetPublishCostCurrencyType(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelTradeMarket", "GetPublishCostCurrencyType");

	Params::ExcelLoaderTgfConfigExcelTradeMarket_GetPublishCostCurrencyType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelTradeMarket.GetRandomItem
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UExcelLoaderTgfConfigExcelTradeMarket::GetRandomItem(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelTradeMarket", "GetRandomItem");

	Params::ExcelLoaderTgfConfigExcelTradeMarket_GetRandomItem Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelTradeMarket.GetReturnPriceDifference
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UExcelLoaderTgfConfigExcelTradeMarket::GetReturnPriceDifference(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelTradeMarket", "GetReturnPriceDifference");

	Params::ExcelLoaderTgfConfigExcelTradeMarket_GetReturnPriceDifference Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelTradeMarket.GetSoAmountLimit
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelTradeMarket::GetSoAmountLimit(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelTradeMarket", "GetSoAmountLimit");

	Params::ExcelLoaderTgfConfigExcelTradeMarket_GetSoAmountLimit Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelTradeMarket.GetTicketType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelTradeMarket::GetTicketType(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelTradeMarket", "GetTicketType");

	Params::ExcelLoaderTgfConfigExcelTradeMarket_GetTicketType Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelTradeMarket.GetTicketTypeSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelTradeMarket::GetTicketTypeSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelTradeMarket", "GetTicketTypeSize");

	Params::ExcelLoaderTgfConfigExcelTradeMarket_GetTicketTypeSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelTradeMarket.GetValidLowerLimit
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelTradeMarket::GetValidLowerLimit(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelTradeMarket", "GetValidLowerLimit");

	Params::ExcelLoaderTgfConfigExcelTradeMarket_GetValidLowerLimit Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelTradeMarket.GetValidPrice
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelTradeMarket::GetValidPrice(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelTradeMarket", "GetValidPrice");

	Params::ExcelLoaderTgfConfigExcelTradeMarket_GetValidPrice Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigSellDelayConfig.GetMax
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufDuration*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufDuration* UExcelLoaderTgfConfigSellDelayConfig::GetMax(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigSellDelayConfig", "GetMax");

	Params::ExcelLoaderTgfConfigSellDelayConfig_GetMax Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigSellDelayConfig.GetMin
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufDuration*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufDuration* UExcelLoaderTgfConfigSellDelayConfig::GetMin(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigSellDelayConfig", "GetMin");

	Params::ExcelLoaderTgfConfigSellDelayConfig_GetMin Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelTradeSellDelay.GetAllOfRandomTime
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigSellDelayConfig*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigSellDelayConfig*> UExcelLoaderTgfConfigExcelTradeSellDelay::GetAllOfRandomTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelTradeSellDelay", "GetAllOfRandomTime");

	Params::ExcelLoaderTgfConfigExcelTradeSellDelay_GetAllOfRandomTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelTradeSellDelay.GetId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelTradeSellDelay::GetId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelTradeSellDelay", "GetId");

	Params::ExcelLoaderTgfConfigExcelTradeSellDelay_GetId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelTradeSellDelay.GetRandomTime
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigSellDelayConfig*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigSellDelayConfig* UExcelLoaderTgfConfigExcelTradeSellDelay::GetRandomTime(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelTradeSellDelay", "GetRandomTime");

	Params::ExcelLoaderTgfConfigExcelTradeSellDelay_GetRandomTime Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelTradeSellDelay.GetRandomTimeSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelTradeSellDelay::GetRandomTimeSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelTradeSellDelay", "GetRandomTimeSize");

	Params::ExcelLoaderTgfConfigExcelTradeSellDelay_GetRandomTimeSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelTradeCommodity.GetDecreasePercentageLimit
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelTradeCommodity::GetDecreasePercentageLimit(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelTradeCommodity", "GetDecreasePercentageLimit");

	Params::ExcelLoaderTgfConfigExcelTradeCommodity_GetDecreasePercentageLimit Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelTradeCommodity.GetForceSaveDb
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UExcelLoaderTgfConfigExcelTradeCommodity::GetForceSaveDb(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelTradeCommodity", "GetForceSaveDb");

	Params::ExcelLoaderTgfConfigExcelTradeCommodity_GetForceSaveDb Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelTradeCommodity.GetId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelTradeCommodity::GetId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelTradeCommodity", "GetId");

	Params::ExcelLoaderTgfConfigExcelTradeCommodity_GetId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelTradeCommodity.GetIncresePercentageLimit
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelTradeCommodity::GetIncresePercentageLimit(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelTradeCommodity", "GetIncresePercentageLimit");

	Params::ExcelLoaderTgfConfigExcelTradeCommodity_GetIncresePercentageLimit Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelTradeCommodity.GetIsCalculateSp
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UExcelLoaderTgfConfigExcelTradeCommodity::GetIsCalculateSp(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelTradeCommodity", "GetIsCalculateSp");

	Params::ExcelLoaderTgfConfigExcelTradeCommodity_GetIsCalculateSp Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelTradeCommodity.GetIsOnShelf
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UExcelLoaderTgfConfigExcelTradeCommodity::GetIsOnShelf(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelTradeCommodity", "GetIsOnShelf");

	Params::ExcelLoaderTgfConfigExcelTradeCommodity_GetIsOnShelf Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelTradeCommodity.GetItemDataRequireId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelTradeCommodity::GetItemDataRequireId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelTradeCommodity", "GetItemDataRequireId");

	Params::ExcelLoaderTgfConfigExcelTradeCommodity_GetItemDataRequireId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelTradeCommodity.GetItemId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelTradeCommodity::GetItemId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelTradeCommodity", "GetItemId");

	Params::ExcelLoaderTgfConfigExcelTradeCommodity_GetItemId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelTradeCommodity.GetMarketId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelTradeCommodity::GetMarketId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelTradeCommodity", "GetMarketId");

	Params::ExcelLoaderTgfConfigExcelTradeCommodity_GetMarketId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelTradeCommodity.GetMatchMethod
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelTradeCommodity::GetMatchMethod(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelTradeCommodity", "GetMatchMethod");

	Params::ExcelLoaderTgfConfigExcelTradeCommodity_GetMatchMethod Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelTradeCommodity.GetOrderValidTime
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelTradeCommodity::GetOrderValidTime(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelTradeCommodity", "GetOrderValidTime");

	Params::ExcelLoaderTgfConfigExcelTradeCommodity_GetOrderValidTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelTradeCommodity.GetPriceDef
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelTradeCommodity::GetPriceDef(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelTradeCommodity", "GetPriceDef");

	Params::ExcelLoaderTgfConfigExcelTradeCommodity_GetPriceDef Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelTradeCommodity.GetPriceLocked
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelTradeCommodity::GetPriceLocked(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelTradeCommodity", "GetPriceLocked");

	Params::ExcelLoaderTgfConfigExcelTradeCommodity_GetPriceLocked Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelTradeCommodity.GetPriceLowerLimit
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelTradeCommodity::GetPriceLowerLimit(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelTradeCommodity", "GetPriceLowerLimit");

	Params::ExcelLoaderTgfConfigExcelTradeCommodity_GetPriceLowerLimit Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelTradeCommodity.GetPriceMethod
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelTradeCommodity::GetPriceMethod(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelTradeCommodity", "GetPriceMethod");

	Params::ExcelLoaderTgfConfigExcelTradeCommodity_GetPriceMethod Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelTradeCommodity.GetPriceUpperLimit
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelTradeCommodity::GetPriceUpperLimit(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelTradeCommodity", "GetPriceUpperLimit");

	Params::ExcelLoaderTgfConfigExcelTradeCommodity_GetPriceUpperLimit Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelTradeCommodity.GetPublishCost
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelTradeCommodity::GetPublishCost(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelTradeCommodity", "GetPublishCost");

	Params::ExcelLoaderTgfConfigExcelTradeCommodity_GetPublishCost Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelTradeCommodity.GetPurchaseCountLimit
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelTradeCommodity::GetPurchaseCountLimit(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelTradeCommodity", "GetPurchaseCountLimit");

	Params::ExcelLoaderTgfConfigExcelTradeCommodity_GetPurchaseCountLimit Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelTradeCommodity.GetSaleCountLimit
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelTradeCommodity::GetSaleCountLimit(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelTradeCommodity", "GetSaleCountLimit");

	Params::ExcelLoaderTgfConfigExcelTradeCommodity_GetSaleCountLimit Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelTradeCommodity.GetSellDelay
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelTradeCommodity::GetSellDelay(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelTradeCommodity", "GetSellDelay");

	Params::ExcelLoaderTgfConfigExcelTradeCommodity_GetSellDelay Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelTradeCommodity.GetSystemBuyAllowed
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UExcelLoaderTgfConfigExcelTradeCommodity::GetSystemBuyAllowed(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelTradeCommodity", "GetSystemBuyAllowed");

	Params::ExcelLoaderTgfConfigExcelTradeCommodity_GetSystemBuyAllowed Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelTradeCommodity.GetSystemBuyPriceCoefficient
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelTradeCommodity::GetSystemBuyPriceCoefficient(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelTradeCommodity", "GetSystemBuyPriceCoefficient");

	Params::ExcelLoaderTgfConfigExcelTradeCommodity_GetSystemBuyPriceCoefficient Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelTradeCommodity.GetSystemBuyTime
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufDuration*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufDuration* UExcelLoaderTgfConfigExcelTradeCommodity::GetSystemBuyTime(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelTradeCommodity", "GetSystemBuyTime");

	Params::ExcelLoaderTgfConfigExcelTradeCommodity_GetSystemBuyTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelTradeCommodity.GetTaxPercentage
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelTradeCommodity::GetTaxPercentage(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelTradeCommodity", "GetTaxPercentage");

	Params::ExcelLoaderTgfConfigExcelTradeCommodity_GetTaxPercentage Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelTradeCommodity.GetTradeAmountCoefficient
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelTradeCommodity::GetTradeAmountCoefficient(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelTradeCommodity", "GetTradeAmountCoefficient");

	Params::ExcelLoaderTgfConfigExcelTradeCommodity_GetTradeAmountCoefficient Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelTradeValidTime.GetId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelTradeValidTime::GetId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelTradeValidTime", "GetId");

	Params::ExcelLoaderTgfConfigExcelTradeValidTime_GetId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelTradeValidTime.GetPoValidTime
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufDuration*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufDuration* UExcelLoaderTgfConfigExcelTradeValidTime::GetPoValidTime(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelTradeValidTime", "GetPoValidTime");

	Params::ExcelLoaderTgfConfigExcelTradeValidTime_GetPoValidTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelTradeValidTime.GetSoValidTime
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufDuration*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufDuration* UExcelLoaderTgfConfigExcelTradeValidTime::GetSoValidTime(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelTradeValidTime", "GetSoValidTime");

	Params::ExcelLoaderTgfConfigExcelTradeValidTime_GetSoValidTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelTradeStandardPrice.GetId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelTradeStandardPrice::GetId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelTradeStandardPrice", "GetId");

	Params::ExcelLoaderTgfConfigExcelTradeStandardPrice_GetId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelTradeStandardPrice.GetUpdateInterval
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufDuration*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufDuration* UExcelLoaderTgfConfigExcelTradeStandardPrice::GetUpdateInterval(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelTradeStandardPrice", "GetUpdateInterval");

	Params::ExcelLoaderTgfConfigExcelTradeStandardPrice_GetUpdateInterval Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelTradeValidPrice.GetId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelTradeValidPrice::GetId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelTradeValidPrice", "GetId");

	Params::ExcelLoaderTgfConfigExcelTradeValidPrice_GetId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelTradeValidPrice.GetRange
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelTradeValidPrice::GetRange(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelTradeValidPrice", "GetRange");

	Params::ExcelLoaderTgfConfigExcelTradeValidPrice_GetRange Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelTradeValidPrice.GetSpMax
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelTradeValidPrice::GetSpMax(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelTradeValidPrice", "GetSpMax");

	Params::ExcelLoaderTgfConfigExcelTradeValidPrice_GetSpMax Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelTradeValidPrice.GetSpMin
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelTradeValidPrice::GetSpMin(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelTradeValidPrice", "GetSpMin");

	Params::ExcelLoaderTgfConfigExcelTradeValidPrice_GetSpMin Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelTradeAmountCoefficient.GetIdGroup
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelTradeAmountCoefficient::GetIdGroup(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelTradeAmountCoefficient", "GetIdGroup");

	Params::ExcelLoaderTgfConfigExcelTradeAmountCoefficient_GetIdGroup Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelTradeAmountCoefficient.GetTradeAmount
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelTradeAmountCoefficient::GetTradeAmount(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelTradeAmountCoefficient", "GetTradeAmount");

	Params::ExcelLoaderTgfConfigExcelTradeAmountCoefficient_GetTradeAmount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelTradeAmountCoefficient.GetTradeAmountCofficient
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelTradeAmountCoefficient::GetTradeAmountCofficient(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelTradeAmountCoefficient", "GetTradeAmountCofficient");

	Params::ExcelLoaderTgfConfigExcelTradeAmountCoefficient_GetTradeAmountCofficient Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelTradeItemRequire.GetAllOfRequire
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UExcelLoaderTgfConfigExcelTradeItemRequire::GetAllOfRequire()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelTradeItemRequire", "GetAllOfRequire");

	Params::ExcelLoaderTgfConfigExcelTradeItemRequire_GetAllOfRequire Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelTradeItemRequire.GetId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelTradeItemRequire::GetId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelTradeItemRequire", "GetId");

	Params::ExcelLoaderTgfConfigExcelTradeItemRequire_GetId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelTradeItemRequire.GetPriority
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelTradeItemRequire::GetPriority(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelTradeItemRequire", "GetPriority");

	Params::ExcelLoaderTgfConfigExcelTradeItemRequire_GetPriority Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelTradeItemRequire.GetRequire
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelTradeItemRequire::GetRequire(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelTradeItemRequire", "GetRequire");

	Params::ExcelLoaderTgfConfigExcelTradeItemRequire_GetRequire Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelTradeItemRequire.GetRequireSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelTradeItemRequire::GetRequireSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelTradeItemRequire", "GetRequireSize");

	Params::ExcelLoaderTgfConfigExcelTradeItemRequire_GetRequireSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelTradeSearchOrder.GetItemMinorType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelTradeSearchOrder::GetItemMinorType(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelTradeSearchOrder", "GetItemMinorType");

	Params::ExcelLoaderTgfConfigExcelTradeSearchOrder_GetItemMinorType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelTradeSearchOrder.GetSearchOrder
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelTradeSearchOrder::GetSearchOrder(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelTradeSearchOrder", "GetSearchOrder");

	Params::ExcelLoaderTgfConfigExcelTradeSearchOrder_GetSearchOrder Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelTradeEquipmentRating.GetPercent
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelTradeEquipmentRating::GetPercent(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelTradeEquipmentRating", "GetPercent");

	Params::ExcelLoaderTgfConfigExcelTradeEquipmentRating_GetPercent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelTradeEquipmentRating.GetRarity
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelTradeEquipmentRating::GetRarity(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelTradeEquipmentRating", "GetRarity");

	Params::ExcelLoaderTgfConfigExcelTradeEquipmentRating_GetRarity Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDFunctionUnlockConditionPairInt.GetK
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDFunctionUnlockConditionPairInt::GetK(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDFunctionUnlockConditionPairInt", "GetK");

	Params::ExcelLoaderTgfDFunctionUnlockConditionPairInt_GetK Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDFunctionUnlockConditionPairInt.GetV
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDFunctionUnlockConditionPairInt::GetV(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDFunctionUnlockConditionPairInt", "GetV");

	Params::ExcelLoaderTgfDFunctionUnlockConditionPairInt_GetV Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDFunctionUnlockConditionInt.GetValue
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDFunctionUnlockConditionInt::GetValue(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDFunctionUnlockConditionInt", "GetValue");

	Params::ExcelLoaderTgfDFunctionUnlockConditionInt_GetValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDFunctionUnlockCondition.GetConditionTypeCase
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EExcelLoaderTgfDFunctionUnlockConditionConditionTypeReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EExcelLoaderTgfDFunctionUnlockConditionConditionType UExcelLoaderTgfDFunctionUnlockCondition::GetConditionTypeCase()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDFunctionUnlockCondition", "GetConditionTypeCase");

	Params::ExcelLoaderTgfDFunctionUnlockCondition_GetConditionTypeCase Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDFunctionUnlockCondition.GetRoleLevel
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDFunctionUnlockCondition::GetRoleLevel(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDFunctionUnlockCondition", "GetRoleLevel");

	Params::ExcelLoaderTgfDFunctionUnlockCondition_GetRoleLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDFunctionUnlockCondition.GetSeasonRoleLevel
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDFunctionUnlockConditionPairInt*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDFunctionUnlockConditionPairInt* UExcelLoaderTgfDFunctionUnlockCondition::GetSeasonRoleLevel(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDFunctionUnlockCondition", "GetSeasonRoleLevel");

	Params::ExcelLoaderTgfDFunctionUnlockCondition_GetSeasonRoleLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDFunctionUnlockCondition.GetUnlockByOtherSystem
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDFunctionUnlockCondition::GetUnlockByOtherSystem(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDFunctionUnlockCondition", "GetUnlockByOtherSystem");

	Params::ExcelLoaderTgfDFunctionUnlockCondition_GetUnlockByOtherSystem Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDModuleCircularData.GetDuration
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfDModuleCircularData::GetDuration(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDModuleCircularData", "GetDuration");

	Params::ExcelLoaderTgfDModuleCircularData_GetDuration Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDModuleCircularData.GetModuleId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDModuleCircularData::GetModuleId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDModuleCircularData", "GetModuleId");

	Params::ExcelLoaderTgfDModuleCircularData_GetModuleId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDModuleCircularCfgData.GetAllOfCircularQueue
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfDModuleCircularData*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfDModuleCircularData*> UExcelLoaderTgfDModuleCircularCfgData::GetAllOfCircularQueue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDModuleCircularCfgData", "GetAllOfCircularQueue");

	Params::ExcelLoaderTgfDModuleCircularCfgData_GetAllOfCircularQueue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDModuleCircularCfgData.GetCircularQueue
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDModuleCircularData*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDModuleCircularData* UExcelLoaderTgfDModuleCircularCfgData::GetCircularQueue(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDModuleCircularCfgData", "GetCircularQueue");

	Params::ExcelLoaderTgfDModuleCircularCfgData_GetCircularQueue Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDModuleCircularCfgData.GetCircularQueueSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfDModuleCircularCfgData::GetCircularQueueSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDModuleCircularCfgData", "GetCircularQueueSize");

	Params::ExcelLoaderTgfDModuleCircularCfgData_GetCircularQueueSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDModuleCircularCfgData.GetEndTime
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfDModuleCircularCfgData::GetEndTime(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDModuleCircularCfgData", "GetEndTime");

	Params::ExcelLoaderTgfDModuleCircularCfgData_GetEndTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDModuleCircularCfgData.GetId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfDModuleCircularCfgData::GetId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDModuleCircularCfgData", "GetId");

	Params::ExcelLoaderTgfDModuleCircularCfgData_GetId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfDModuleCircularCfgData.GetStartTime
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfDModuleCircularCfgData::GetStartTime(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfDModuleCircularCfgData", "GetStartTime");

	Params::ExcelLoaderTgfDModuleCircularCfgData_GetStartTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelModuleUnlockType.GetAllOfDailyRangeTimes
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfDConditionRuleRangeTime*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfDConditionRuleRangeTime*> UExcelLoaderTgfConfigExcelModuleUnlockType::GetAllOfDailyRangeTimes()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelModuleUnlockType", "GetAllOfDailyRangeTimes");

	Params::ExcelLoaderTgfConfigExcelModuleUnlockType_GetAllOfDailyRangeTimes Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelModuleUnlockType.GetAllOfDateRangeTimes
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfDConditionRuleRangeDatetime*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfDConditionRuleRangeDatetime*> UExcelLoaderTgfConfigExcelModuleUnlockType::GetAllOfDateRangeTimes()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelModuleUnlockType", "GetAllOfDateRangeTimes");

	Params::ExcelLoaderTgfConfigExcelModuleUnlockType_GetAllOfDateRangeTimes Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelModuleUnlockType.GetAllOfUnlockCondition
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfDFunctionUnlockCondition*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfDFunctionUnlockCondition*> UExcelLoaderTgfConfigExcelModuleUnlockType::GetAllOfUnlockCondition()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelModuleUnlockType", "GetAllOfUnlockCondition");

	Params::ExcelLoaderTgfConfigExcelModuleUnlockType_GetAllOfUnlockCondition Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelModuleUnlockType.GetBanMail
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelModuleUnlockType::GetBanMail(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelModuleUnlockType", "GetBanMail");

	Params::ExcelLoaderTgfConfigExcelModuleUnlockType_GetBanMail Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelModuleUnlockType.GetBanTip
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfConfigExcelModuleUnlockType::GetBanTip(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelModuleUnlockType", "GetBanTip");

	Params::ExcelLoaderTgfConfigExcelModuleUnlockType_GetBanTip Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelModuleUnlockType.GetCustomBanMail
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelModuleUnlockType::GetCustomBanMail(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelModuleUnlockType", "GetCustomBanMail");

	Params::ExcelLoaderTgfConfigExcelModuleUnlockType_GetCustomBanMail Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelModuleUnlockType.GetDailyRangeTimes
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDConditionRuleRangeTime*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDConditionRuleRangeTime* UExcelLoaderTgfConfigExcelModuleUnlockType::GetDailyRangeTimes(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelModuleUnlockType", "GetDailyRangeTimes");

	Params::ExcelLoaderTgfConfigExcelModuleUnlockType_GetDailyRangeTimes Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelModuleUnlockType.GetDailyRangeTimesSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelModuleUnlockType::GetDailyRangeTimesSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelModuleUnlockType", "GetDailyRangeTimesSize");

	Params::ExcelLoaderTgfConfigExcelModuleUnlockType_GetDailyRangeTimesSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelModuleUnlockType.GetDateRangeTimes
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDConditionRuleRangeDatetime*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDConditionRuleRangeDatetime* UExcelLoaderTgfConfigExcelModuleUnlockType::GetDateRangeTimes(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelModuleUnlockType", "GetDateRangeTimes");

	Params::ExcelLoaderTgfConfigExcelModuleUnlockType_GetDateRangeTimes Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelModuleUnlockType.GetDateRangeTimesSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelModuleUnlockType::GetDateRangeTimesSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelModuleUnlockType", "GetDateRangeTimesSize");

	Params::ExcelLoaderTgfConfigExcelModuleUnlockType_GetDateRangeTimesSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelModuleUnlockType.GetForbidTip
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfConfigExcelModuleUnlockType::GetForbidTip(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelModuleUnlockType", "GetForbidTip");

	Params::ExcelLoaderTgfConfigExcelModuleUnlockType_GetForbidTip Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelModuleUnlockType.GetGlobalForbid
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UExcelLoaderTgfConfigExcelModuleUnlockType::GetGlobalForbid(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelModuleUnlockType", "GetGlobalForbid");

	Params::ExcelLoaderTgfConfigExcelModuleUnlockType_GetGlobalForbid Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelModuleUnlockType.GetLockTip
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderTgfConfigExcelModuleUnlockType::GetLockTip(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelModuleUnlockType", "GetLockTip");

	Params::ExcelLoaderTgfConfigExcelModuleUnlockType_GetLockTip Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelModuleUnlockType.GetModuleId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelModuleUnlockType::GetModuleId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelModuleUnlockType", "GetModuleId");

	Params::ExcelLoaderTgfConfigExcelModuleUnlockType_GetModuleId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelModuleUnlockType.GetModuleName
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelModuleUnlockType::GetModuleName(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelModuleUnlockType", "GetModuleName");

	Params::ExcelLoaderTgfConfigExcelModuleUnlockType_GetModuleName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelModuleUnlockType.GetPermanentlyBanMail
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelModuleUnlockType::GetPermanentlyBanMail(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelModuleUnlockType", "GetPermanentlyBanMail");

	Params::ExcelLoaderTgfConfigExcelModuleUnlockType_GetPermanentlyBanMail Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelModuleUnlockType.GetPermanentlyCustomBanMail
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelModuleUnlockType::GetPermanentlyCustomBanMail(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelModuleUnlockType", "GetPermanentlyCustomBanMail");

	Params::ExcelLoaderTgfConfigExcelModuleUnlockType_GetPermanentlyCustomBanMail Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelModuleUnlockType.GetUnlockCondition
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDFunctionUnlockCondition*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDFunctionUnlockCondition* UExcelLoaderTgfConfigExcelModuleUnlockType::GetUnlockCondition(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelModuleUnlockType", "GetUnlockCondition");

	Params::ExcelLoaderTgfConfigExcelModuleUnlockType_GetUnlockCondition Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelModuleUnlockType.GetUnlockConditionSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelModuleUnlockType::GetUnlockConditionSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelModuleUnlockType", "GetUnlockConditionSize");

	Params::ExcelLoaderTgfConfigExcelModuleUnlockType_GetUnlockConditionSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelModuleUnlockType.GetUnlockDate
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufTimestamp*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufTimestamp* UExcelLoaderTgfConfigExcelModuleUnlockType::GetUnlockDate(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelModuleUnlockType", "GetUnlockDate");

	Params::ExcelLoaderTgfConfigExcelModuleUnlockType_GetUnlockDate Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelModuleUnlockCircular.GetAllOfCircularQueue
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfDModuleCircularData*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfDModuleCircularData*> UExcelLoaderTgfConfigExcelModuleUnlockCircular::GetAllOfCircularQueue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelModuleUnlockCircular", "GetAllOfCircularQueue");

	Params::ExcelLoaderTgfConfigExcelModuleUnlockCircular_GetAllOfCircularQueue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelModuleUnlockCircular.GetCircularQueue
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfDModuleCircularData*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfDModuleCircularData* UExcelLoaderTgfConfigExcelModuleUnlockCircular::GetCircularQueue(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelModuleUnlockCircular", "GetCircularQueue");

	Params::ExcelLoaderTgfConfigExcelModuleUnlockCircular_GetCircularQueue Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelModuleUnlockCircular.GetCircularQueueSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderTgfConfigExcelModuleUnlockCircular::GetCircularQueueSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelModuleUnlockCircular", "GetCircularQueueSize");

	Params::ExcelLoaderTgfConfigExcelModuleUnlockCircular_GetCircularQueueSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelModuleUnlockCircular.GetEndTime
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufTimestamp*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufTimestamp* UExcelLoaderTgfConfigExcelModuleUnlockCircular::GetEndTime(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelModuleUnlockCircular", "GetEndTime");

	Params::ExcelLoaderTgfConfigExcelModuleUnlockCircular_GetEndTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelModuleUnlockCircular.GetId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderTgfConfigExcelModuleUnlockCircular::GetId(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelModuleUnlockCircular", "GetId");

	Params::ExcelLoaderTgfConfigExcelModuleUnlockCircular_GetId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderTgfConfigExcelModuleUnlockCircular.GetStartTime
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufTimestamp*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufTimestamp* UExcelLoaderTgfConfigExcelModuleUnlockCircular::GetStartTime(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderTgfConfigExcelModuleUnlockCircular", "GetStartTime");

	Params::ExcelLoaderTgfConfigExcelModuleUnlockCircular_GetStartTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufFileDescriptorSet.GetAllOfFile
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderGoogleProtobufFileDescriptorProto*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderGoogleProtobufFileDescriptorProto*> UExcelLoaderGoogleProtobufFileDescriptorSet::GetAllOfFile()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufFileDescriptorSet", "GetAllOfFile");

	Params::ExcelLoaderGoogleProtobufFileDescriptorSet_GetAllOfFile Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufFileDescriptorSet.GetFile
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufFileDescriptorProto*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufFileDescriptorProto* UExcelLoaderGoogleProtobufFileDescriptorSet::GetFile(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufFileDescriptorSet", "GetFile");

	Params::ExcelLoaderGoogleProtobufFileDescriptorSet_GetFile Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufFileDescriptorSet.GetFileSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderGoogleProtobufFileDescriptorSet::GetFileSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufFileDescriptorSet", "GetFileSize");

	Params::ExcelLoaderGoogleProtobufFileDescriptorSet_GetFileSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufDescriptorProto.GetAllOfEnumType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderGoogleProtobufEnumDescriptorProto*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderGoogleProtobufEnumDescriptorProto*> UExcelLoaderGoogleProtobufDescriptorProto::GetAllOfEnumType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufDescriptorProto", "GetAllOfEnumType");

	Params::ExcelLoaderGoogleProtobufDescriptorProto_GetAllOfEnumType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufDescriptorProto.GetAllOfExtension
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderGoogleProtobufFieldDescriptorProto*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderGoogleProtobufFieldDescriptorProto*> UExcelLoaderGoogleProtobufDescriptorProto::GetAllOfExtension()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufDescriptorProto", "GetAllOfExtension");

	Params::ExcelLoaderGoogleProtobufDescriptorProto_GetAllOfExtension Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufDescriptorProto.GetAllOfExtensionRange
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderGoogleProtobufDescriptorProtoExtensionRange*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderGoogleProtobufDescriptorProtoExtensionRange*> UExcelLoaderGoogleProtobufDescriptorProto::GetAllOfExtensionRange()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufDescriptorProto", "GetAllOfExtensionRange");

	Params::ExcelLoaderGoogleProtobufDescriptorProto_GetAllOfExtensionRange Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufDescriptorProto.GetAllOfField
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderGoogleProtobufFieldDescriptorProto*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderGoogleProtobufFieldDescriptorProto*> UExcelLoaderGoogleProtobufDescriptorProto::GetAllOfField()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufDescriptorProto", "GetAllOfField");

	Params::ExcelLoaderGoogleProtobufDescriptorProto_GetAllOfField Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufDescriptorProto.GetAllOfNestedType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderGoogleProtobufDescriptorProto*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderGoogleProtobufDescriptorProto*> UExcelLoaderGoogleProtobufDescriptorProto::GetAllOfNestedType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufDescriptorProto", "GetAllOfNestedType");

	Params::ExcelLoaderGoogleProtobufDescriptorProto_GetAllOfNestedType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufDescriptorProto.GetAllOfOneofDecl
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderGoogleProtobufOneofDescriptorProto*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderGoogleProtobufOneofDescriptorProto*> UExcelLoaderGoogleProtobufDescriptorProto::GetAllOfOneofDecl()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufDescriptorProto", "GetAllOfOneofDecl");

	Params::ExcelLoaderGoogleProtobufDescriptorProto_GetAllOfOneofDecl Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufDescriptorProto.GetAllOfReservedName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> UExcelLoaderGoogleProtobufDescriptorProto::GetAllOfReservedName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufDescriptorProto", "GetAllOfReservedName");

	Params::ExcelLoaderGoogleProtobufDescriptorProto_GetAllOfReservedName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufDescriptorProto.GetAllOfReservedRange
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderGoogleProtobufDescriptorProtoReservedRange*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderGoogleProtobufDescriptorProtoReservedRange*> UExcelLoaderGoogleProtobufDescriptorProto::GetAllOfReservedRange()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufDescriptorProto", "GetAllOfReservedRange");

	Params::ExcelLoaderGoogleProtobufDescriptorProto_GetAllOfReservedRange Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufDescriptorProto.GetEnumType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufEnumDescriptorProto*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufEnumDescriptorProto* UExcelLoaderGoogleProtobufDescriptorProto::GetEnumType(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufDescriptorProto", "GetEnumType");

	Params::ExcelLoaderGoogleProtobufDescriptorProto_GetEnumType Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufDescriptorProto.GetEnumTypeSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderGoogleProtobufDescriptorProto::GetEnumTypeSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufDescriptorProto", "GetEnumTypeSize");

	Params::ExcelLoaderGoogleProtobufDescriptorProto_GetEnumTypeSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufDescriptorProto.GetExtension
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufFieldDescriptorProto*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufFieldDescriptorProto* UExcelLoaderGoogleProtobufDescriptorProto::GetExtension(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufDescriptorProto", "GetExtension");

	Params::ExcelLoaderGoogleProtobufDescriptorProto_GetExtension Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufDescriptorProto.GetExtensionRange
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufDescriptorProtoExtensionRange*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufDescriptorProtoExtensionRange* UExcelLoaderGoogleProtobufDescriptorProto::GetExtensionRange(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufDescriptorProto", "GetExtensionRange");

	Params::ExcelLoaderGoogleProtobufDescriptorProto_GetExtensionRange Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufDescriptorProto.GetExtensionRangeSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderGoogleProtobufDescriptorProto::GetExtensionRangeSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufDescriptorProto", "GetExtensionRangeSize");

	Params::ExcelLoaderGoogleProtobufDescriptorProto_GetExtensionRangeSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufDescriptorProto.GetExtensionSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderGoogleProtobufDescriptorProto::GetExtensionSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufDescriptorProto", "GetExtensionSize");

	Params::ExcelLoaderGoogleProtobufDescriptorProto_GetExtensionSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufDescriptorProto.GetField
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufFieldDescriptorProto*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufFieldDescriptorProto* UExcelLoaderGoogleProtobufDescriptorProto::GetField(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufDescriptorProto", "GetField");

	Params::ExcelLoaderGoogleProtobufDescriptorProto_GetField Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufDescriptorProto.GetFieldSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderGoogleProtobufDescriptorProto::GetFieldSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufDescriptorProto", "GetFieldSize");

	Params::ExcelLoaderGoogleProtobufDescriptorProto_GetFieldSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufDescriptorProto.GetName
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderGoogleProtobufDescriptorProto::GetName(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufDescriptorProto", "GetName");

	Params::ExcelLoaderGoogleProtobufDescriptorProto_GetName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufDescriptorProto.GetNestedType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufDescriptorProto*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufDescriptorProto* UExcelLoaderGoogleProtobufDescriptorProto::GetNestedType(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufDescriptorProto", "GetNestedType");

	Params::ExcelLoaderGoogleProtobufDescriptorProto_GetNestedType Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufDescriptorProto.GetNestedTypeSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderGoogleProtobufDescriptorProto::GetNestedTypeSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufDescriptorProto", "GetNestedTypeSize");

	Params::ExcelLoaderGoogleProtobufDescriptorProto_GetNestedTypeSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufDescriptorProto.GetOneofDecl
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufOneofDescriptorProto*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufOneofDescriptorProto* UExcelLoaderGoogleProtobufDescriptorProto::GetOneofDecl(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufDescriptorProto", "GetOneofDecl");

	Params::ExcelLoaderGoogleProtobufDescriptorProto_GetOneofDecl Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufDescriptorProto.GetOneofDeclSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderGoogleProtobufDescriptorProto::GetOneofDeclSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufDescriptorProto", "GetOneofDeclSize");

	Params::ExcelLoaderGoogleProtobufDescriptorProto_GetOneofDeclSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufDescriptorProto.GetOptions
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufMessageOptions*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufMessageOptions* UExcelLoaderGoogleProtobufDescriptorProto::GetOptions(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufDescriptorProto", "GetOptions");

	Params::ExcelLoaderGoogleProtobufDescriptorProto_GetOptions Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufDescriptorProto.GetReservedName
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderGoogleProtobufDescriptorProto::GetReservedName(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufDescriptorProto", "GetReservedName");

	Params::ExcelLoaderGoogleProtobufDescriptorProto_GetReservedName Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufDescriptorProto.GetReservedNameSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderGoogleProtobufDescriptorProto::GetReservedNameSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufDescriptorProto", "GetReservedNameSize");

	Params::ExcelLoaderGoogleProtobufDescriptorProto_GetReservedNameSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufDescriptorProto.GetReservedRange
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufDescriptorProtoReservedRange*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufDescriptorProtoReservedRange* UExcelLoaderGoogleProtobufDescriptorProto::GetReservedRange(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufDescriptorProto", "GetReservedRange");

	Params::ExcelLoaderGoogleProtobufDescriptorProto_GetReservedRange Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufDescriptorProto.GetReservedRangeSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderGoogleProtobufDescriptorProto::GetReservedRangeSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufDescriptorProto", "GetReservedRangeSize");

	Params::ExcelLoaderGoogleProtobufDescriptorProto_GetReservedRangeSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufDescriptorProtoExtensionRange.GetEnd
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderGoogleProtobufDescriptorProtoExtensionRange::GetEnd(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufDescriptorProtoExtensionRange", "GetEnd");

	Params::ExcelLoaderGoogleProtobufDescriptorProtoExtensionRange_GetEnd Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufDescriptorProtoExtensionRange.GetOptions
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufExtensionRangeOptions*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufExtensionRangeOptions* UExcelLoaderGoogleProtobufDescriptorProtoExtensionRange::GetOptions(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufDescriptorProtoExtensionRange", "GetOptions");

	Params::ExcelLoaderGoogleProtobufDescriptorProtoExtensionRange_GetOptions Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufDescriptorProtoExtensionRange.GetStart
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderGoogleProtobufDescriptorProtoExtensionRange::GetStart(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufDescriptorProtoExtensionRange", "GetStart");

	Params::ExcelLoaderGoogleProtobufDescriptorProtoExtensionRange_GetStart Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufDescriptorProtoReservedRange.GetEnd
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderGoogleProtobufDescriptorProtoReservedRange::GetEnd(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufDescriptorProtoReservedRange", "GetEnd");

	Params::ExcelLoaderGoogleProtobufDescriptorProtoReservedRange_GetEnd Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufDescriptorProtoReservedRange.GetStart
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderGoogleProtobufDescriptorProtoReservedRange::GetStart(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufDescriptorProtoReservedRange", "GetStart");

	Params::ExcelLoaderGoogleProtobufDescriptorProtoReservedRange_GetStart Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufExtensionRangeOptions.GetAllOfDeclaration
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderGoogleProtobufExtensionRangeOptionsDeclaration*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderGoogleProtobufExtensionRangeOptionsDeclaration*> UExcelLoaderGoogleProtobufExtensionRangeOptions::GetAllOfDeclaration()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufExtensionRangeOptions", "GetAllOfDeclaration");

	Params::ExcelLoaderGoogleProtobufExtensionRangeOptions_GetAllOfDeclaration Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufExtensionRangeOptions.GetAllOfUninterpretedOption
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderGoogleProtobufUninterpretedOption*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderGoogleProtobufUninterpretedOption*> UExcelLoaderGoogleProtobufExtensionRangeOptions::GetAllOfUninterpretedOption()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufExtensionRangeOptions", "GetAllOfUninterpretedOption");

	Params::ExcelLoaderGoogleProtobufExtensionRangeOptions_GetAllOfUninterpretedOption Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufExtensionRangeOptions.GetDeclaration
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufExtensionRangeOptionsDeclaration*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufExtensionRangeOptionsDeclaration* UExcelLoaderGoogleProtobufExtensionRangeOptions::GetDeclaration(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufExtensionRangeOptions", "GetDeclaration");

	Params::ExcelLoaderGoogleProtobufExtensionRangeOptions_GetDeclaration Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufExtensionRangeOptions.GetDeclarationSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderGoogleProtobufExtensionRangeOptions::GetDeclarationSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufExtensionRangeOptions", "GetDeclarationSize");

	Params::ExcelLoaderGoogleProtobufExtensionRangeOptions_GetDeclarationSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufExtensionRangeOptions.GetFeatures
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufFeatureSet*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufFeatureSet* UExcelLoaderGoogleProtobufExtensionRangeOptions::GetFeatures(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufExtensionRangeOptions", "GetFeatures");

	Params::ExcelLoaderGoogleProtobufExtensionRangeOptions_GetFeatures Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufExtensionRangeOptions.GetUninterpretedOption
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufUninterpretedOption*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufUninterpretedOption* UExcelLoaderGoogleProtobufExtensionRangeOptions::GetUninterpretedOption(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufExtensionRangeOptions", "GetUninterpretedOption");

	Params::ExcelLoaderGoogleProtobufExtensionRangeOptions_GetUninterpretedOption Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufExtensionRangeOptions.GetUninterpretedOptionSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderGoogleProtobufExtensionRangeOptions::GetUninterpretedOptionSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufExtensionRangeOptions", "GetUninterpretedOptionSize");

	Params::ExcelLoaderGoogleProtobufExtensionRangeOptions_GetUninterpretedOptionSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufExtensionRangeOptions.GetVerification
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderGoogleProtobufExtensionRangeOptions::GetVerification(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufExtensionRangeOptions", "GetVerification");

	Params::ExcelLoaderGoogleProtobufExtensionRangeOptions_GetVerification Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufExtensionRangeOptionsDeclaration.GetFullName
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderGoogleProtobufExtensionRangeOptionsDeclaration::GetFullName(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufExtensionRangeOptionsDeclaration", "GetFullName");

	Params::ExcelLoaderGoogleProtobufExtensionRangeOptionsDeclaration_GetFullName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufExtensionRangeOptionsDeclaration.GetNumber
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderGoogleProtobufExtensionRangeOptionsDeclaration::GetNumber(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufExtensionRangeOptionsDeclaration", "GetNumber");

	Params::ExcelLoaderGoogleProtobufExtensionRangeOptionsDeclaration_GetNumber Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufExtensionRangeOptionsDeclaration.GetRepeated
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UExcelLoaderGoogleProtobufExtensionRangeOptionsDeclaration::GetRepeated(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufExtensionRangeOptionsDeclaration", "GetRepeated");

	Params::ExcelLoaderGoogleProtobufExtensionRangeOptionsDeclaration_GetRepeated Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufExtensionRangeOptionsDeclaration.GetReserved
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UExcelLoaderGoogleProtobufExtensionRangeOptionsDeclaration::GetReserved(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufExtensionRangeOptionsDeclaration", "GetReserved");

	Params::ExcelLoaderGoogleProtobufExtensionRangeOptionsDeclaration_GetReserved Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufExtensionRangeOptionsDeclaration.GetType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderGoogleProtobufExtensionRangeOptionsDeclaration::GetType(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufExtensionRangeOptionsDeclaration", "GetType");

	Params::ExcelLoaderGoogleProtobufExtensionRangeOptionsDeclaration_GetType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufFieldDescriptorProto.GetDefaultValue
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderGoogleProtobufFieldDescriptorProto::GetDefaultValue(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufFieldDescriptorProto", "GetDefaultValue");

	Params::ExcelLoaderGoogleProtobufFieldDescriptorProto_GetDefaultValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufFieldDescriptorProto.GetExtendee
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderGoogleProtobufFieldDescriptorProto::GetExtendee(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufFieldDescriptorProto", "GetExtendee");

	Params::ExcelLoaderGoogleProtobufFieldDescriptorProto_GetExtendee Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufFieldDescriptorProto.GetJsonName
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderGoogleProtobufFieldDescriptorProto::GetJsonName(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufFieldDescriptorProto", "GetJsonName");

	Params::ExcelLoaderGoogleProtobufFieldDescriptorProto_GetJsonName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufFieldDescriptorProto.GetLabel
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderGoogleProtobufFieldDescriptorProto::GetLabel(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufFieldDescriptorProto", "GetLabel");

	Params::ExcelLoaderGoogleProtobufFieldDescriptorProto_GetLabel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufFieldDescriptorProto.GetName
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderGoogleProtobufFieldDescriptorProto::GetName(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufFieldDescriptorProto", "GetName");

	Params::ExcelLoaderGoogleProtobufFieldDescriptorProto_GetName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufFieldDescriptorProto.GetNumber
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderGoogleProtobufFieldDescriptorProto::GetNumber(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufFieldDescriptorProto", "GetNumber");

	Params::ExcelLoaderGoogleProtobufFieldDescriptorProto_GetNumber Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufFieldDescriptorProto.GetOneofIndex
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderGoogleProtobufFieldDescriptorProto::GetOneofIndex(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufFieldDescriptorProto", "GetOneofIndex");

	Params::ExcelLoaderGoogleProtobufFieldDescriptorProto_GetOneofIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufFieldDescriptorProto.GetOptions
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufFieldOptions*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufFieldOptions* UExcelLoaderGoogleProtobufFieldDescriptorProto::GetOptions(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufFieldDescriptorProto", "GetOptions");

	Params::ExcelLoaderGoogleProtobufFieldDescriptorProto_GetOptions Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufFieldDescriptorProto.GetProto3Optional
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UExcelLoaderGoogleProtobufFieldDescriptorProto::GetProto3Optional(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufFieldDescriptorProto", "GetProto3Optional");

	Params::ExcelLoaderGoogleProtobufFieldDescriptorProto_GetProto3Optional Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufFieldDescriptorProto.GetType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderGoogleProtobufFieldDescriptorProto::GetType(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufFieldDescriptorProto", "GetType");

	Params::ExcelLoaderGoogleProtobufFieldDescriptorProto_GetType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufFieldDescriptorProto.GetTypeName
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderGoogleProtobufFieldDescriptorProto::GetTypeName(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufFieldDescriptorProto", "GetTypeName");

	Params::ExcelLoaderGoogleProtobufFieldDescriptorProto_GetTypeName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufOneofDescriptorProto.GetName
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderGoogleProtobufOneofDescriptorProto::GetName(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufOneofDescriptorProto", "GetName");

	Params::ExcelLoaderGoogleProtobufOneofDescriptorProto_GetName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufOneofDescriptorProto.GetOptions
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufOneofOptions*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufOneofOptions* UExcelLoaderGoogleProtobufOneofDescriptorProto::GetOptions(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufOneofDescriptorProto", "GetOptions");

	Params::ExcelLoaderGoogleProtobufOneofDescriptorProto_GetOptions Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufEnumDescriptorProto.GetAllOfReservedName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> UExcelLoaderGoogleProtobufEnumDescriptorProto::GetAllOfReservedName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufEnumDescriptorProto", "GetAllOfReservedName");

	Params::ExcelLoaderGoogleProtobufEnumDescriptorProto_GetAllOfReservedName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufEnumDescriptorProto.GetAllOfReservedRange
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderGoogleProtobufEnumDescriptorProtoEnumReservedRange*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderGoogleProtobufEnumDescriptorProtoEnumReservedRange*> UExcelLoaderGoogleProtobufEnumDescriptorProto::GetAllOfReservedRange()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufEnumDescriptorProto", "GetAllOfReservedRange");

	Params::ExcelLoaderGoogleProtobufEnumDescriptorProto_GetAllOfReservedRange Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufEnumDescriptorProto.GetAllOfValue
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderGoogleProtobufEnumValueDescriptorProto*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderGoogleProtobufEnumValueDescriptorProto*> UExcelLoaderGoogleProtobufEnumDescriptorProto::GetAllOfValue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufEnumDescriptorProto", "GetAllOfValue");

	Params::ExcelLoaderGoogleProtobufEnumDescriptorProto_GetAllOfValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufEnumDescriptorProto.GetName
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderGoogleProtobufEnumDescriptorProto::GetName(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufEnumDescriptorProto", "GetName");

	Params::ExcelLoaderGoogleProtobufEnumDescriptorProto_GetName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufEnumDescriptorProto.GetOptions
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufEnumOptions*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufEnumOptions* UExcelLoaderGoogleProtobufEnumDescriptorProto::GetOptions(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufEnumDescriptorProto", "GetOptions");

	Params::ExcelLoaderGoogleProtobufEnumDescriptorProto_GetOptions Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufEnumDescriptorProto.GetReservedName
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderGoogleProtobufEnumDescriptorProto::GetReservedName(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufEnumDescriptorProto", "GetReservedName");

	Params::ExcelLoaderGoogleProtobufEnumDescriptorProto_GetReservedName Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufEnumDescriptorProto.GetReservedNameSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderGoogleProtobufEnumDescriptorProto::GetReservedNameSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufEnumDescriptorProto", "GetReservedNameSize");

	Params::ExcelLoaderGoogleProtobufEnumDescriptorProto_GetReservedNameSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufEnumDescriptorProto.GetReservedRange
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufEnumDescriptorProtoEnumReservedRange*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufEnumDescriptorProtoEnumReservedRange* UExcelLoaderGoogleProtobufEnumDescriptorProto::GetReservedRange(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufEnumDescriptorProto", "GetReservedRange");

	Params::ExcelLoaderGoogleProtobufEnumDescriptorProto_GetReservedRange Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufEnumDescriptorProto.GetReservedRangeSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderGoogleProtobufEnumDescriptorProto::GetReservedRangeSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufEnumDescriptorProto", "GetReservedRangeSize");

	Params::ExcelLoaderGoogleProtobufEnumDescriptorProto_GetReservedRangeSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufEnumDescriptorProto.GetValue
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufEnumValueDescriptorProto*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufEnumValueDescriptorProto* UExcelLoaderGoogleProtobufEnumDescriptorProto::GetValue(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufEnumDescriptorProto", "GetValue");

	Params::ExcelLoaderGoogleProtobufEnumDescriptorProto_GetValue Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufEnumDescriptorProto.GetValueSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderGoogleProtobufEnumDescriptorProto::GetValueSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufEnumDescriptorProto", "GetValueSize");

	Params::ExcelLoaderGoogleProtobufEnumDescriptorProto_GetValueSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderXrescodeXrescodeLoader.GetAllOfFilePath
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> UExcelLoaderXrescodeXrescodeLoader::GetAllOfFilePath()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderXrescodeXrescodeLoader", "GetAllOfFilePath");

	Params::ExcelLoaderXrescodeXrescodeLoader_GetAllOfFilePath Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderXrescodeXrescodeLoader.GetAllOfIndexes
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderXrescodeXrescodeIndex*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderXrescodeXrescodeIndex*> UExcelLoaderXrescodeXrescodeLoader::GetAllOfIndexes()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderXrescodeXrescodeLoader", "GetAllOfIndexes");

	Params::ExcelLoaderXrescodeXrescodeLoader_GetAllOfIndexes Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderXrescodeXrescodeLoader.GetAllOfTags
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> UExcelLoaderXrescodeXrescodeLoader::GetAllOfTags()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderXrescodeXrescodeLoader", "GetAllOfTags");

	Params::ExcelLoaderXrescodeXrescodeLoader_GetAllOfTags Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderXrescodeXrescodeLoader.GetClassName
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderXrescodeXrescodeLoader::GetClassName(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderXrescodeXrescodeLoader", "GetClassName");

	Params::ExcelLoaderXrescodeXrescodeLoader_GetClassName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderXrescodeXrescodeLoader.GetCodeField
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderXrescodeXrescodeLoader::GetCodeField(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderXrescodeXrescodeLoader", "GetCodeField");

	Params::ExcelLoaderXrescodeXrescodeLoader_GetCodeField Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderXrescodeXrescodeLoader.GetFileList
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderXrescodeXrescodeLoader::GetFileList(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderXrescodeXrescodeLoader", "GetFileList");

	Params::ExcelLoaderXrescodeXrescodeLoader_GetFileList Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderXrescodeXrescodeLoader.GetFilePath
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderXrescodeXrescodeLoader::GetFilePath(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderXrescodeXrescodeLoader", "GetFilePath");

	Params::ExcelLoaderXrescodeXrescodeLoader_GetFilePath Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderXrescodeXrescodeLoader.GetFilePathSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderXrescodeXrescodeLoader::GetFilePathSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderXrescodeXrescodeLoader", "GetFilePathSize");

	Params::ExcelLoaderXrescodeXrescodeLoader_GetFilePathSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderXrescodeXrescodeLoader.GetIndexes
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderXrescodeXrescodeIndex*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderXrescodeXrescodeIndex* UExcelLoaderXrescodeXrescodeLoader::GetIndexes(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderXrescodeXrescodeLoader", "GetIndexes");

	Params::ExcelLoaderXrescodeXrescodeLoader_GetIndexes Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderXrescodeXrescodeLoader.GetIndexesSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderXrescodeXrescodeLoader::GetIndexesSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderXrescodeXrescodeLoader", "GetIndexesSize");

	Params::ExcelLoaderXrescodeXrescodeLoader_GetIndexesSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderXrescodeXrescodeLoader.GetTags
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderXrescodeXrescodeLoader::GetTags(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderXrescodeXrescodeLoader", "GetTags");

	Params::ExcelLoaderXrescodeXrescodeLoader_GetTags Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderXrescodeXrescodeLoader.GetTagsSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderXrescodeXrescodeLoader::GetTagsSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderXrescodeXrescodeLoader", "GetTagsSize");

	Params::ExcelLoaderXrescodeXrescodeLoader_GetTagsSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufEnumDescriptorProtoEnumReservedRange.GetEnd
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderGoogleProtobufEnumDescriptorProtoEnumReservedRange::GetEnd(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufEnumDescriptorProtoEnumReservedRange", "GetEnd");

	Params::ExcelLoaderGoogleProtobufEnumDescriptorProtoEnumReservedRange_GetEnd Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufEnumDescriptorProtoEnumReservedRange.GetStart
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderGoogleProtobufEnumDescriptorProtoEnumReservedRange::GetStart(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufEnumDescriptorProtoEnumReservedRange", "GetStart");

	Params::ExcelLoaderGoogleProtobufEnumDescriptorProtoEnumReservedRange_GetStart Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufServiceDescriptorProto.GetAllOfMethod
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderGoogleProtobufMethodDescriptorProto*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderGoogleProtobufMethodDescriptorProto*> UExcelLoaderGoogleProtobufServiceDescriptorProto::GetAllOfMethod()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufServiceDescriptorProto", "GetAllOfMethod");

	Params::ExcelLoaderGoogleProtobufServiceDescriptorProto_GetAllOfMethod Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufServiceDescriptorProto.GetMethod
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufMethodDescriptorProto*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufMethodDescriptorProto* UExcelLoaderGoogleProtobufServiceDescriptorProto::GetMethod(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufServiceDescriptorProto", "GetMethod");

	Params::ExcelLoaderGoogleProtobufServiceDescriptorProto_GetMethod Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufServiceDescriptorProto.GetMethodSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderGoogleProtobufServiceDescriptorProto::GetMethodSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufServiceDescriptorProto", "GetMethodSize");

	Params::ExcelLoaderGoogleProtobufServiceDescriptorProto_GetMethodSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufServiceDescriptorProto.GetName
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderGoogleProtobufServiceDescriptorProto::GetName(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufServiceDescriptorProto", "GetName");

	Params::ExcelLoaderGoogleProtobufServiceDescriptorProto_GetName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufServiceDescriptorProto.GetOptions
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufServiceOptions*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufServiceOptions* UExcelLoaderGoogleProtobufServiceDescriptorProto::GetOptions(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufServiceDescriptorProto", "GetOptions");

	Params::ExcelLoaderGoogleProtobufServiceDescriptorProto_GetOptions Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufMethodDescriptorProto.GetClientStreaming
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UExcelLoaderGoogleProtobufMethodDescriptorProto::GetClientStreaming(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufMethodDescriptorProto", "GetClientStreaming");

	Params::ExcelLoaderGoogleProtobufMethodDescriptorProto_GetClientStreaming Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufMethodDescriptorProto.GetInputType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderGoogleProtobufMethodDescriptorProto::GetInputType(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufMethodDescriptorProto", "GetInputType");

	Params::ExcelLoaderGoogleProtobufMethodDescriptorProto_GetInputType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufMethodDescriptorProto.GetName
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderGoogleProtobufMethodDescriptorProto::GetName(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufMethodDescriptorProto", "GetName");

	Params::ExcelLoaderGoogleProtobufMethodDescriptorProto_GetName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufMethodDescriptorProto.GetOptions
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufMethodOptions*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufMethodOptions* UExcelLoaderGoogleProtobufMethodDescriptorProto::GetOptions(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufMethodDescriptorProto", "GetOptions");

	Params::ExcelLoaderGoogleProtobufMethodDescriptorProto_GetOptions Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufMethodDescriptorProto.GetOutputType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderGoogleProtobufMethodDescriptorProto::GetOutputType(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufMethodDescriptorProto", "GetOutputType");

	Params::ExcelLoaderGoogleProtobufMethodDescriptorProto_GetOutputType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufMethodDescriptorProto.GetServerStreaming
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UExcelLoaderGoogleProtobufMethodDescriptorProto::GetServerStreaming(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufMethodDescriptorProto", "GetServerStreaming");

	Params::ExcelLoaderGoogleProtobufMethodDescriptorProto_GetServerStreaming Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufFileOptions.GetAllOfUninterpretedOption
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderGoogleProtobufUninterpretedOption*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderGoogleProtobufUninterpretedOption*> UExcelLoaderGoogleProtobufFileOptions::GetAllOfUninterpretedOption()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufFileOptions", "GetAllOfUninterpretedOption");

	Params::ExcelLoaderGoogleProtobufFileOptions_GetAllOfUninterpretedOption Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufFileOptions.GetCcEnableArenas
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UExcelLoaderGoogleProtobufFileOptions::GetCcEnableArenas(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufFileOptions", "GetCcEnableArenas");

	Params::ExcelLoaderGoogleProtobufFileOptions_GetCcEnableArenas Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufFileOptions.GetCcGenericServices
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UExcelLoaderGoogleProtobufFileOptions::GetCcGenericServices(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufFileOptions", "GetCcGenericServices");

	Params::ExcelLoaderGoogleProtobufFileOptions_GetCcGenericServices Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufFileOptions.GetCsharpNamespace
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderGoogleProtobufFileOptions::GetCsharpNamespace(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufFileOptions", "GetCsharpNamespace");

	Params::ExcelLoaderGoogleProtobufFileOptions_GetCsharpNamespace Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufFileOptions.GetDeprecated
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UExcelLoaderGoogleProtobufFileOptions::GetDeprecated(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufFileOptions", "GetDeprecated");

	Params::ExcelLoaderGoogleProtobufFileOptions_GetDeprecated Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufFileOptions.GetFeatures
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufFeatureSet*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufFeatureSet* UExcelLoaderGoogleProtobufFileOptions::GetFeatures(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufFileOptions", "GetFeatures");

	Params::ExcelLoaderGoogleProtobufFileOptions_GetFeatures Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufFileOptions.GetGoPackage
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderGoogleProtobufFileOptions::GetGoPackage(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufFileOptions", "GetGoPackage");

	Params::ExcelLoaderGoogleProtobufFileOptions_GetGoPackage Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufFileOptions.GetJavaGenerateEqualsAndHash
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UExcelLoaderGoogleProtobufFileOptions::GetJavaGenerateEqualsAndHash(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufFileOptions", "GetJavaGenerateEqualsAndHash");

	Params::ExcelLoaderGoogleProtobufFileOptions_GetJavaGenerateEqualsAndHash Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufFileOptions.GetJavaGenericServices
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UExcelLoaderGoogleProtobufFileOptions::GetJavaGenericServices(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufFileOptions", "GetJavaGenericServices");

	Params::ExcelLoaderGoogleProtobufFileOptions_GetJavaGenericServices Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufFileOptions.GetJavaMultipleFiles
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UExcelLoaderGoogleProtobufFileOptions::GetJavaMultipleFiles(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufFileOptions", "GetJavaMultipleFiles");

	Params::ExcelLoaderGoogleProtobufFileOptions_GetJavaMultipleFiles Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufFileOptions.GetJavaOuterClassname
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderGoogleProtobufFileOptions::GetJavaOuterClassname(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufFileOptions", "GetJavaOuterClassname");

	Params::ExcelLoaderGoogleProtobufFileOptions_GetJavaOuterClassname Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufFileOptions.GetJavaPackage
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderGoogleProtobufFileOptions::GetJavaPackage(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufFileOptions", "GetJavaPackage");

	Params::ExcelLoaderGoogleProtobufFileOptions_GetJavaPackage Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufFileOptions.GetJavaStringCheckUtf8
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UExcelLoaderGoogleProtobufFileOptions::GetJavaStringCheckUtf8(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufFileOptions", "GetJavaStringCheckUtf8");

	Params::ExcelLoaderGoogleProtobufFileOptions_GetJavaStringCheckUtf8 Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufFileOptions.GetObjcClassPrefix
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderGoogleProtobufFileOptions::GetObjcClassPrefix(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufFileOptions", "GetObjcClassPrefix");

	Params::ExcelLoaderGoogleProtobufFileOptions_GetObjcClassPrefix Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufFileOptions.GetOptimizeFor
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderGoogleProtobufFileOptions::GetOptimizeFor(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufFileOptions", "GetOptimizeFor");

	Params::ExcelLoaderGoogleProtobufFileOptions_GetOptimizeFor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufFileOptions.GetPhpClassPrefix
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderGoogleProtobufFileOptions::GetPhpClassPrefix(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufFileOptions", "GetPhpClassPrefix");

	Params::ExcelLoaderGoogleProtobufFileOptions_GetPhpClassPrefix Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufFileOptions.GetPhpMetadataNamespace
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderGoogleProtobufFileOptions::GetPhpMetadataNamespace(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufFileOptions", "GetPhpMetadataNamespace");

	Params::ExcelLoaderGoogleProtobufFileOptions_GetPhpMetadataNamespace Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufFileOptions.GetPhpNamespace
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderGoogleProtobufFileOptions::GetPhpNamespace(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufFileOptions", "GetPhpNamespace");

	Params::ExcelLoaderGoogleProtobufFileOptions_GetPhpNamespace Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufFileOptions.GetPyGenericServices
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UExcelLoaderGoogleProtobufFileOptions::GetPyGenericServices(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufFileOptions", "GetPyGenericServices");

	Params::ExcelLoaderGoogleProtobufFileOptions_GetPyGenericServices Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufFileOptions.GetRubyPackage
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderGoogleProtobufFileOptions::GetRubyPackage(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufFileOptions", "GetRubyPackage");

	Params::ExcelLoaderGoogleProtobufFileOptions_GetRubyPackage Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufFileOptions.GetSwiftPrefix
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderGoogleProtobufFileOptions::GetSwiftPrefix(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufFileOptions", "GetSwiftPrefix");

	Params::ExcelLoaderGoogleProtobufFileOptions_GetSwiftPrefix Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufFileOptions.GetUninterpretedOption
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufUninterpretedOption*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufUninterpretedOption* UExcelLoaderGoogleProtobufFileOptions::GetUninterpretedOption(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufFileOptions", "GetUninterpretedOption");

	Params::ExcelLoaderGoogleProtobufFileOptions_GetUninterpretedOption Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufFileOptions.GetUninterpretedOptionSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderGoogleProtobufFileOptions::GetUninterpretedOptionSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufFileOptions", "GetUninterpretedOptionSize");

	Params::ExcelLoaderGoogleProtobufFileOptions_GetUninterpretedOptionSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufFieldOptions.GetAllOfEditionDefaults
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderGoogleProtobufFieldOptionsEditionDefault*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderGoogleProtobufFieldOptionsEditionDefault*> UExcelLoaderGoogleProtobufFieldOptions::GetAllOfEditionDefaults()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufFieldOptions", "GetAllOfEditionDefaults");

	Params::ExcelLoaderGoogleProtobufFieldOptions_GetAllOfEditionDefaults Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufFieldOptions.GetAllOfTargets
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UExcelLoaderGoogleProtobufFieldOptions::GetAllOfTargets()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufFieldOptions", "GetAllOfTargets");

	Params::ExcelLoaderGoogleProtobufFieldOptions_GetAllOfTargets Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufFieldOptions.GetAllOfUninterpretedOption
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderGoogleProtobufUninterpretedOption*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderGoogleProtobufUninterpretedOption*> UExcelLoaderGoogleProtobufFieldOptions::GetAllOfUninterpretedOption()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufFieldOptions", "GetAllOfUninterpretedOption");

	Params::ExcelLoaderGoogleProtobufFieldOptions_GetAllOfUninterpretedOption Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufFieldOptions.GetCtype
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderGoogleProtobufFieldOptions::GetCtype(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufFieldOptions", "GetCtype");

	Params::ExcelLoaderGoogleProtobufFieldOptions_GetCtype Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufFieldOptions.GetDebugRedact
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UExcelLoaderGoogleProtobufFieldOptions::GetDebugRedact(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufFieldOptions", "GetDebugRedact");

	Params::ExcelLoaderGoogleProtobufFieldOptions_GetDebugRedact Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufFieldOptions.GetDeprecated
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UExcelLoaderGoogleProtobufFieldOptions::GetDeprecated(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufFieldOptions", "GetDeprecated");

	Params::ExcelLoaderGoogleProtobufFieldOptions_GetDeprecated Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufFieldOptions.GetEditionDefaults
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufFieldOptionsEditionDefault*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufFieldOptionsEditionDefault* UExcelLoaderGoogleProtobufFieldOptions::GetEditionDefaults(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufFieldOptions", "GetEditionDefaults");

	Params::ExcelLoaderGoogleProtobufFieldOptions_GetEditionDefaults Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufFieldOptions.GetEditionDefaultsSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderGoogleProtobufFieldOptions::GetEditionDefaultsSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufFieldOptions", "GetEditionDefaultsSize");

	Params::ExcelLoaderGoogleProtobufFieldOptions_GetEditionDefaultsSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufFieldOptions.GetFeatures
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufFeatureSet*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufFeatureSet* UExcelLoaderGoogleProtobufFieldOptions::GetFeatures(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufFieldOptions", "GetFeatures");

	Params::ExcelLoaderGoogleProtobufFieldOptions_GetFeatures Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufFieldOptions.GetJstype
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderGoogleProtobufFieldOptions::GetJstype(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufFieldOptions", "GetJstype");

	Params::ExcelLoaderGoogleProtobufFieldOptions_GetJstype Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufFieldOptions.GetLazy
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UExcelLoaderGoogleProtobufFieldOptions::GetLazy(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufFieldOptions", "GetLazy");

	Params::ExcelLoaderGoogleProtobufFieldOptions_GetLazy Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufFieldOptions.GetPacked
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UExcelLoaderGoogleProtobufFieldOptions::GetPacked(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufFieldOptions", "GetPacked");

	Params::ExcelLoaderGoogleProtobufFieldOptions_GetPacked Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufFieldOptions.GetRetention
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderGoogleProtobufFieldOptions::GetRetention(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufFieldOptions", "GetRetention");

	Params::ExcelLoaderGoogleProtobufFieldOptions_GetRetention Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufFieldOptions.GetTargets
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderGoogleProtobufFieldOptions::GetTargets(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufFieldOptions", "GetTargets");

	Params::ExcelLoaderGoogleProtobufFieldOptions_GetTargets Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufFieldOptions.GetTargetsSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderGoogleProtobufFieldOptions::GetTargetsSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufFieldOptions", "GetTargetsSize");

	Params::ExcelLoaderGoogleProtobufFieldOptions_GetTargetsSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufFieldOptions.GetUninterpretedOption
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufUninterpretedOption*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufUninterpretedOption* UExcelLoaderGoogleProtobufFieldOptions::GetUninterpretedOption(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufFieldOptions", "GetUninterpretedOption");

	Params::ExcelLoaderGoogleProtobufFieldOptions_GetUninterpretedOption Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufFieldOptions.GetUninterpretedOptionSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderGoogleProtobufFieldOptions::GetUninterpretedOptionSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufFieldOptions", "GetUninterpretedOptionSize");

	Params::ExcelLoaderGoogleProtobufFieldOptions_GetUninterpretedOptionSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufFieldOptions.GetUnverifiedLazy
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UExcelLoaderGoogleProtobufFieldOptions::GetUnverifiedLazy(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufFieldOptions", "GetUnverifiedLazy");

	Params::ExcelLoaderGoogleProtobufFieldOptions_GetUnverifiedLazy Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufFieldOptions.GetWeak
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UExcelLoaderGoogleProtobufFieldOptions::GetWeak(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufFieldOptions", "GetWeak");

	Params::ExcelLoaderGoogleProtobufFieldOptions_GetWeak Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufFieldOptionsEditionDefault.GetEdition
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderGoogleProtobufFieldOptionsEditionDefault::GetEdition(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufFieldOptionsEditionDefault", "GetEdition");

	Params::ExcelLoaderGoogleProtobufFieldOptionsEditionDefault_GetEdition Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufFieldOptionsEditionDefault.GetValue
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderGoogleProtobufFieldOptionsEditionDefault::GetValue(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufFieldOptionsEditionDefault", "GetValue");

	Params::ExcelLoaderGoogleProtobufFieldOptionsEditionDefault_GetValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufOneofOptions.GetAllOfUninterpretedOption
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderGoogleProtobufUninterpretedOption*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderGoogleProtobufUninterpretedOption*> UExcelLoaderGoogleProtobufOneofOptions::GetAllOfUninterpretedOption()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufOneofOptions", "GetAllOfUninterpretedOption");

	Params::ExcelLoaderGoogleProtobufOneofOptions_GetAllOfUninterpretedOption Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufOneofOptions.GetFeatures
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufFeatureSet*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufFeatureSet* UExcelLoaderGoogleProtobufOneofOptions::GetFeatures(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufOneofOptions", "GetFeatures");

	Params::ExcelLoaderGoogleProtobufOneofOptions_GetFeatures Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufOneofOptions.GetUninterpretedOption
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufUninterpretedOption*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufUninterpretedOption* UExcelLoaderGoogleProtobufOneofOptions::GetUninterpretedOption(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufOneofOptions", "GetUninterpretedOption");

	Params::ExcelLoaderGoogleProtobufOneofOptions_GetUninterpretedOption Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufOneofOptions.GetUninterpretedOptionSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderGoogleProtobufOneofOptions::GetUninterpretedOptionSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufOneofOptions", "GetUninterpretedOptionSize");

	Params::ExcelLoaderGoogleProtobufOneofOptions_GetUninterpretedOptionSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufEnumValueOptions.GetAllOfUninterpretedOption
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderGoogleProtobufUninterpretedOption*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderGoogleProtobufUninterpretedOption*> UExcelLoaderGoogleProtobufEnumValueOptions::GetAllOfUninterpretedOption()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufEnumValueOptions", "GetAllOfUninterpretedOption");

	Params::ExcelLoaderGoogleProtobufEnumValueOptions_GetAllOfUninterpretedOption Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufEnumValueOptions.GetDebugRedact
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UExcelLoaderGoogleProtobufEnumValueOptions::GetDebugRedact(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufEnumValueOptions", "GetDebugRedact");

	Params::ExcelLoaderGoogleProtobufEnumValueOptions_GetDebugRedact Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufEnumValueOptions.GetDeprecated
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UExcelLoaderGoogleProtobufEnumValueOptions::GetDeprecated(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufEnumValueOptions", "GetDeprecated");

	Params::ExcelLoaderGoogleProtobufEnumValueOptions_GetDeprecated Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufEnumValueOptions.GetFeatures
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufFeatureSet*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufFeatureSet* UExcelLoaderGoogleProtobufEnumValueOptions::GetFeatures(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufEnumValueOptions", "GetFeatures");

	Params::ExcelLoaderGoogleProtobufEnumValueOptions_GetFeatures Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufEnumValueOptions.GetUninterpretedOption
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufUninterpretedOption*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufUninterpretedOption* UExcelLoaderGoogleProtobufEnumValueOptions::GetUninterpretedOption(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufEnumValueOptions", "GetUninterpretedOption");

	Params::ExcelLoaderGoogleProtobufEnumValueOptions_GetUninterpretedOption Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufEnumValueOptions.GetUninterpretedOptionSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderGoogleProtobufEnumValueOptions::GetUninterpretedOptionSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufEnumValueOptions", "GetUninterpretedOptionSize");

	Params::ExcelLoaderGoogleProtobufEnumValueOptions_GetUninterpretedOptionSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufServiceOptions.GetAllOfUninterpretedOption
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderGoogleProtobufUninterpretedOption*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderGoogleProtobufUninterpretedOption*> UExcelLoaderGoogleProtobufServiceOptions::GetAllOfUninterpretedOption()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufServiceOptions", "GetAllOfUninterpretedOption");

	Params::ExcelLoaderGoogleProtobufServiceOptions_GetAllOfUninterpretedOption Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufServiceOptions.GetDeprecated
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UExcelLoaderGoogleProtobufServiceOptions::GetDeprecated(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufServiceOptions", "GetDeprecated");

	Params::ExcelLoaderGoogleProtobufServiceOptions_GetDeprecated Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufServiceOptions.GetFeatures
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufFeatureSet*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufFeatureSet* UExcelLoaderGoogleProtobufServiceOptions::GetFeatures(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufServiceOptions", "GetFeatures");

	Params::ExcelLoaderGoogleProtobufServiceOptions_GetFeatures Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufServiceOptions.GetUninterpretedOption
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufUninterpretedOption*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufUninterpretedOption* UExcelLoaderGoogleProtobufServiceOptions::GetUninterpretedOption(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufServiceOptions", "GetUninterpretedOption");

	Params::ExcelLoaderGoogleProtobufServiceOptions_GetUninterpretedOption Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufServiceOptions.GetUninterpretedOptionSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderGoogleProtobufServiceOptions::GetUninterpretedOptionSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufServiceOptions", "GetUninterpretedOptionSize");

	Params::ExcelLoaderGoogleProtobufServiceOptions_GetUninterpretedOptionSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufMethodOptions.GetAllOfUninterpretedOption
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderGoogleProtobufUninterpretedOption*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderGoogleProtobufUninterpretedOption*> UExcelLoaderGoogleProtobufMethodOptions::GetAllOfUninterpretedOption()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufMethodOptions", "GetAllOfUninterpretedOption");

	Params::ExcelLoaderGoogleProtobufMethodOptions_GetAllOfUninterpretedOption Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufMethodOptions.GetDeprecated
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UExcelLoaderGoogleProtobufMethodOptions::GetDeprecated(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufMethodOptions", "GetDeprecated");

	Params::ExcelLoaderGoogleProtobufMethodOptions_GetDeprecated Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufMethodOptions.GetFeatures
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufFeatureSet*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufFeatureSet* UExcelLoaderGoogleProtobufMethodOptions::GetFeatures(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufMethodOptions", "GetFeatures");

	Params::ExcelLoaderGoogleProtobufMethodOptions_GetFeatures Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufMethodOptions.GetIdempotencyLevel
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderGoogleProtobufMethodOptions::GetIdempotencyLevel(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufMethodOptions", "GetIdempotencyLevel");

	Params::ExcelLoaderGoogleProtobufMethodOptions_GetIdempotencyLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufMethodOptions.GetUninterpretedOption
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufUninterpretedOption*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufUninterpretedOption* UExcelLoaderGoogleProtobufMethodOptions::GetUninterpretedOption(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufMethodOptions", "GetUninterpretedOption");

	Params::ExcelLoaderGoogleProtobufMethodOptions_GetUninterpretedOption Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufMethodOptions.GetUninterpretedOptionSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderGoogleProtobufMethodOptions::GetUninterpretedOptionSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufMethodOptions", "GetUninterpretedOptionSize");

	Params::ExcelLoaderGoogleProtobufMethodOptions_GetUninterpretedOptionSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufUninterpretedOptionNamePart.GetIsExtension
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UExcelLoaderGoogleProtobufUninterpretedOptionNamePart::GetIsExtension(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufUninterpretedOptionNamePart", "GetIsExtension");

	Params::ExcelLoaderGoogleProtobufUninterpretedOptionNamePart_GetIsExtension Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufUninterpretedOptionNamePart.GetNamePart
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderGoogleProtobufUninterpretedOptionNamePart::GetNamePart(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufUninterpretedOptionNamePart", "GetNamePart");

	Params::ExcelLoaderGoogleProtobufUninterpretedOptionNamePart_GetNamePart Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufFeatureSet.GetEnumType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderGoogleProtobufFeatureSet::GetEnumType(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufFeatureSet", "GetEnumType");

	Params::ExcelLoaderGoogleProtobufFeatureSet_GetEnumType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufFeatureSet.GetFieldPresence
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderGoogleProtobufFeatureSet::GetFieldPresence(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufFeatureSet", "GetFieldPresence");

	Params::ExcelLoaderGoogleProtobufFeatureSet_GetFieldPresence Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufFeatureSet.GetJsonFormat
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderGoogleProtobufFeatureSet::GetJsonFormat(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufFeatureSet", "GetJsonFormat");

	Params::ExcelLoaderGoogleProtobufFeatureSet_GetJsonFormat Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufFeatureSet.GetMessageEncoding
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderGoogleProtobufFeatureSet::GetMessageEncoding(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufFeatureSet", "GetMessageEncoding");

	Params::ExcelLoaderGoogleProtobufFeatureSet_GetMessageEncoding Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufFeatureSet.GetRepeatedFieldEncoding
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderGoogleProtobufFeatureSet::GetRepeatedFieldEncoding(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufFeatureSet", "GetRepeatedFieldEncoding");

	Params::ExcelLoaderGoogleProtobufFeatureSet_GetRepeatedFieldEncoding Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufFeatureSet.GetUtf8Validation
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderGoogleProtobufFeatureSet::GetUtf8Validation(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufFeatureSet", "GetUtf8Validation");

	Params::ExcelLoaderGoogleProtobufFeatureSet_GetUtf8Validation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufFeatureSetDefaults.GetAllOfDefaults
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderGoogleProtobufFeatureSetDefaultsFeatureSetEditionDefault*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderGoogleProtobufFeatureSetDefaultsFeatureSetEditionDefault*> UExcelLoaderGoogleProtobufFeatureSetDefaults::GetAllOfDefaults()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufFeatureSetDefaults", "GetAllOfDefaults");

	Params::ExcelLoaderGoogleProtobufFeatureSetDefaults_GetAllOfDefaults Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufFeatureSetDefaults.GetDefaults
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufFeatureSetDefaultsFeatureSetEditionDefault*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufFeatureSetDefaultsFeatureSetEditionDefault* UExcelLoaderGoogleProtobufFeatureSetDefaults::GetDefaults(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufFeatureSetDefaults", "GetDefaults");

	Params::ExcelLoaderGoogleProtobufFeatureSetDefaults_GetDefaults Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufFeatureSetDefaults.GetDefaultsSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderGoogleProtobufFeatureSetDefaults::GetDefaultsSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufFeatureSetDefaults", "GetDefaultsSize");

	Params::ExcelLoaderGoogleProtobufFeatureSetDefaults_GetDefaultsSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufFeatureSetDefaults.GetMaximumEdition
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderGoogleProtobufFeatureSetDefaults::GetMaximumEdition(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufFeatureSetDefaults", "GetMaximumEdition");

	Params::ExcelLoaderGoogleProtobufFeatureSetDefaults_GetMaximumEdition Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufFeatureSetDefaults.GetMinimumEdition
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderGoogleProtobufFeatureSetDefaults::GetMinimumEdition(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufFeatureSetDefaults", "GetMinimumEdition");

	Params::ExcelLoaderGoogleProtobufFeatureSetDefaults_GetMinimumEdition Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufSourceCodeInfo.GetAllOfLocation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderGoogleProtobufSourceCodeInfoLocation*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderGoogleProtobufSourceCodeInfoLocation*> UExcelLoaderGoogleProtobufSourceCodeInfo::GetAllOfLocation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufSourceCodeInfo", "GetAllOfLocation");

	Params::ExcelLoaderGoogleProtobufSourceCodeInfo_GetAllOfLocation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufSourceCodeInfo.GetLocation
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufSourceCodeInfoLocation*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufSourceCodeInfoLocation* UExcelLoaderGoogleProtobufSourceCodeInfo::GetLocation(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufSourceCodeInfo", "GetLocation");

	Params::ExcelLoaderGoogleProtobufSourceCodeInfo_GetLocation Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufSourceCodeInfo.GetLocationSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderGoogleProtobufSourceCodeInfo::GetLocationSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufSourceCodeInfo", "GetLocationSize");

	Params::ExcelLoaderGoogleProtobufSourceCodeInfo_GetLocationSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufGeneratedCodeInfo.GetAllOfAnnotation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderGoogleProtobufGeneratedCodeInfoAnnotation*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderGoogleProtobufGeneratedCodeInfoAnnotation*> UExcelLoaderGoogleProtobufGeneratedCodeInfo::GetAllOfAnnotation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufGeneratedCodeInfo", "GetAllOfAnnotation");

	Params::ExcelLoaderGoogleProtobufGeneratedCodeInfo_GetAllOfAnnotation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufGeneratedCodeInfo.GetAnnotation
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderGoogleProtobufGeneratedCodeInfoAnnotation*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderGoogleProtobufGeneratedCodeInfoAnnotation* UExcelLoaderGoogleProtobufGeneratedCodeInfo::GetAnnotation(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufGeneratedCodeInfo", "GetAnnotation");

	Params::ExcelLoaderGoogleProtobufGeneratedCodeInfo_GetAnnotation Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufGeneratedCodeInfo.GetAnnotationSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderGoogleProtobufGeneratedCodeInfo::GetAnnotationSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufGeneratedCodeInfo", "GetAnnotationSize");

	Params::ExcelLoaderGoogleProtobufGeneratedCodeInfo_GetAnnotationSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufDuration.GetNanos
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderGoogleProtobufDuration::GetNanos(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufDuration", "GetNanos");

	Params::ExcelLoaderGoogleProtobufDuration_GetNanos Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufDuration.GetSeconds
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderGoogleProtobufDuration::GetSeconds(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufDuration", "GetSeconds");

	Params::ExcelLoaderGoogleProtobufDuration_GetSeconds Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderOrgXresloaderPbXresloaderDataSource.GetCount
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderOrgXresloaderPbXresloaderDataSource::GetCount(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderOrgXresloaderPbXresloaderDataSource", "GetCount");

	Params::ExcelLoaderOrgXresloaderPbXresloaderDataSource_GetCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderOrgXresloaderPbXresloaderDataSource.GetFile
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderOrgXresloaderPbXresloaderDataSource::GetFile(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderOrgXresloaderPbXresloaderDataSource", "GetFile");

	Params::ExcelLoaderOrgXresloaderPbXresloaderDataSource_GetFile Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderOrgXresloaderPbXresloaderDataSource.GetSheet
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderOrgXresloaderPbXresloaderDataSource::GetSheet(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderOrgXresloaderPbXresloaderDataSource", "GetSheet");

	Params::ExcelLoaderOrgXresloaderPbXresloaderDataSource_GetSheet Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderOrgXresloaderPbXresloaderDatablocks.GetDataMessageType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderOrgXresloaderPbXresloaderDatablocks::GetDataMessageType(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderOrgXresloaderPbXresloaderDatablocks", "GetDataMessageType");

	Params::ExcelLoaderOrgXresloaderPbXresloaderDatablocks_GetDataMessageType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderOrgXresloaderPbXresloaderDatablocks.GetHeader
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderOrgXresloaderPbXresloaderHeader*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderOrgXresloaderPbXresloaderHeader* UExcelLoaderOrgXresloaderPbXresloaderDatablocks::GetHeader(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderOrgXresloaderPbXresloaderDatablocks", "GetHeader");

	Params::ExcelLoaderOrgXresloaderPbXresloaderDatablocks_GetHeader Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.TGFTableManager.GetCurrentGroupAPI
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderConfigGroupWrapper*   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderConfigGroupWrapper* UTGFTableManager::GetCurrentGroupAPI(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TGFTableManager", "GetCurrentGroupAPI");

	Params::TGFTableManager_GetCurrentGroupAPI Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.TGFTableManager.IsOverrideDirectoryEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTGFTableManager::IsOverrideDirectoryEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TGFTableManager", "IsOverrideDirectoryEnabled");

	Params::TGFTableManager_IsOverrideDirectoryEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufTimestamp.GetNanos
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderGoogleProtobufTimestamp::GetNanos(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufTimestamp", "GetNanos");

	Params::ExcelLoaderGoogleProtobufTimestamp_GetNanos Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderGoogleProtobufTimestamp.GetSeconds
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderGoogleProtobufTimestamp::GetSeconds(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderGoogleProtobufTimestamp", "GetSeconds");

	Params::ExcelLoaderGoogleProtobufTimestamp_GetSeconds Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelActivityCenter_Of_ExpItemType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelActivityCenter*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelActivityCenter*> UExcelLoaderConfigGroupWrapper::GetAllExcelActivityCenter_Of_ExpItemType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelActivityCenter_Of_ExpItemType");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelActivityCenter_Of_ExpItemType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelActivityCenter_Of_Id
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelActivityCenter*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelActivityCenter*> UExcelLoaderConfigGroupWrapper::GetAllExcelActivityCenter_Of_Id()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelActivityCenter_Of_Id");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelActivityCenter_Of_Id Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelActivityCenterPassprotsReards_Of_ActivityId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelActivityCenterPassprotsReards*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelActivityCenterPassprotsReards*> UExcelLoaderConfigGroupWrapper::GetAllExcelActivityCenterPassprotsReards_Of_ActivityId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelActivityCenterPassprotsReards_Of_ActivityId");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelActivityCenterPassprotsReards_Of_ActivityId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelActivityCenterPassprotsReards_Of_Id
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelActivityCenterPassprotsReards*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelActivityCenterPassprotsReards*> UExcelLoaderConfigGroupWrapper::GetAllExcelActivityCenterPassprotsReards_Of_Id()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelActivityCenterPassprotsReards_Of_Id");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelActivityCenterPassprotsReards_Of_Id Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelActivityCenterPassprotsReards_Of_Level
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelActivityCenterPassprotsReards*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelActivityCenterPassprotsReards*> UExcelLoaderConfigGroupWrapper::GetAllExcelActivityCenterPassprotsReards_Of_Level()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelActivityCenterPassprotsReards_Of_Level");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelActivityCenterPassprotsReards_Of_Level Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelActivityCenterRandomRewards_Of_ActivityIdCareerTypeId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelActivityCenterRandomRewards*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelActivityCenterRandomRewards*> UExcelLoaderConfigGroupWrapper::GetAllExcelActivityCenterRandomRewards_Of_ActivityIdCareerTypeId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelActivityCenterRandomRewards_Of_ActivityIdCareerTypeId");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelActivityCenterRandomRewards_Of_ActivityIdCareerTypeId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelActivityCenterRandomRewards_Of_Id
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelActivityCenterRandomRewards*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelActivityCenterRandomRewards*> UExcelLoaderConfigGroupWrapper::GetAllExcelActivityCenterRandomRewards_Of_Id()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelActivityCenterRandomRewards_Of_Id");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelActivityCenterRandomRewards_Of_Id Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelActivityCenterRandomRewardsPool_Of_Id
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelActivityCenterRandomRewardsPool*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelActivityCenterRandomRewardsPool*> UExcelLoaderConfigGroupWrapper::GetAllExcelActivityCenterRandomRewardsPool_Of_Id()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelActivityCenterRandomRewardsPool_Of_Id");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelActivityCenterRandomRewardsPool_Of_Id Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelAffixAbilitySetId_Of_AffixIndexId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelAffixAbilitySetId*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelAffixAbilitySetId*> UExcelLoaderConfigGroupWrapper::GetAllExcelAffixAbilitySetId_Of_AffixIndexId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelAffixAbilitySetId_Of_AffixIndexId");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelAffixAbilitySetId_Of_AffixIndexId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelAffixCountRandomPool_Of_AffixCountPoolId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelAffixCountRandomPool*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelAffixCountRandomPool*> UExcelLoaderConfigGroupWrapper::GetAllExcelAffixCountRandomPool_Of_AffixCountPoolId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelAffixCountRandomPool_Of_AffixCountPoolId");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelAffixCountRandomPool_Of_AffixCountPoolId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelAffixGearSetMapRule_Of_GearSetType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelAffixGearSetMapRule*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelAffixGearSetMapRule*> UExcelLoaderConfigGroupWrapper::GetAllExcelAffixGearSetMapRule_Of_GearSetType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelAffixGearSetMapRule_Of_GearSetType");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelAffixGearSetMapRule_Of_GearSetType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelAffixGearSetRule_Of_GearSetType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelAffixGearSetRule*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelAffixGearSetRule*> UExcelLoaderConfigGroupWrapper::GetAllExcelAffixGearSetRule_Of_GearSetType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelAffixGearSetRule_Of_GearSetType");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelAffixGearSetRule_Of_GearSetType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelAffixGearSetRule_Of_GearSetTypeLevel
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelAffixGearSetRule*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelAffixGearSetRule*> UExcelLoaderConfigGroupWrapper::GetAllExcelAffixGearSetRule_Of_GearSetTypeLevel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelAffixGearSetRule_Of_GearSetTypeLevel");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelAffixGearSetRule_Of_GearSetTypeLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelAffixLegendaryRule_Of_AffixAliasId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelAffixLegendaryRule*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelAffixLegendaryRule*> UExcelLoaderConfigGroupWrapper::GetAllExcelAffixLegendaryRule_Of_AffixAliasId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelAffixLegendaryRule_Of_AffixAliasId");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelAffixLegendaryRule_Of_AffixAliasId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelAffixLevelPoolRule_Of_RuleId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelAffixLevelPoolRule*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelAffixLevelPoolRule*> UExcelLoaderConfigGroupWrapper::GetAllExcelAffixLevelPoolRule_Of_RuleId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelAffixLevelPoolRule_Of_RuleId");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelAffixLevelPoolRule_Of_RuleId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelAffixLevelPoolRule_Of_RuleIdLevelId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelAffixLevelPoolRule*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelAffixLevelPoolRule*> UExcelLoaderConfigGroupWrapper::GetAllExcelAffixLevelPoolRule_Of_RuleIdLevelId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelAffixLevelPoolRule_Of_RuleIdLevelId");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelAffixLevelPoolRule_Of_RuleIdLevelId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelAffixMonsterPoolRule_Of_RuleId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelAffixMonsterPoolRule*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelAffixMonsterPoolRule*> UExcelLoaderConfigGroupWrapper::GetAllExcelAffixMonsterPoolRule_Of_RuleId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelAffixMonsterPoolRule_Of_RuleId");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelAffixMonsterPoolRule_Of_RuleId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelAffixMonsterPoolRule_Of_RuleIdMonsterIdLevelId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelAffixMonsterPoolRule*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelAffixMonsterPoolRule*> UExcelLoaderConfigGroupWrapper::GetAllExcelAffixMonsterPoolRule_Of_RuleIdMonsterIdLevelId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelAffixMonsterPoolRule_Of_RuleIdMonsterIdLevelId");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelAffixMonsterPoolRule_Of_RuleIdMonsterIdLevelId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelAffixPool_Of_AffixPoolId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelAffixPool*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelAffixPool*> UExcelLoaderConfigGroupWrapper::GetAllExcelAffixPool_Of_AffixPoolId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelAffixPool_Of_AffixPoolId");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelAffixPool_Of_AffixPoolId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelAffixTemplate_Of_ItemId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelAffixTemplate*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelAffixTemplate*> UExcelLoaderConfigGroupWrapper::GetAllExcelAffixTemplate_Of_ItemId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelAffixTemplate_Of_ItemId");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelAffixTemplate_Of_ItemId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelAffixValueTemplate_Of_AffixValueId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelAffixValueTemplate*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelAffixValueTemplate*> UExcelLoaderConfigGroupWrapper::GetAllExcelAffixValueTemplate_Of_AffixValueId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelAffixValueTemplate_Of_AffixValueId");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelAffixValueTemplate_Of_AffixValueId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelAffixValueTemplate_Of_AffixValueIdAttributeType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelAffixValueTemplate*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelAffixValueTemplate*> UExcelLoaderConfigGroupWrapper::GetAllExcelAffixValueTemplate_Of_AffixValueIdAttributeType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelAffixValueTemplate_Of_AffixValueIdAttributeType");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelAffixValueTemplate_Of_AffixValueIdAttributeType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelBattleAbilitySetDescription_Of_AbilitySetIdLevel
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelBattleAbilitySetDescription*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelBattleAbilitySetDescription*> UExcelLoaderConfigGroupWrapper::GetAllExcelBattleAbilitySetDescription_Of_AbilitySetIdLevel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelBattleAbilitySetDescription_Of_AbilitySetIdLevel");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelBattleAbilitySetDescription_Of_AbilitySetIdLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelBattleAffixEffectRule_Of_GroupIdRandomConditionIdAttributeType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelBattleAffixEffectRule*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelBattleAffixEffectRule*> UExcelLoaderConfigGroupWrapper::GetAllExcelBattleAffixEffectRule_Of_GroupIdRandomConditionIdAttributeType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelBattleAffixEffectRule_Of_GroupIdRandomConditionIdAttributeType");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelBattleAffixEffectRule_Of_GroupIdRandomConditionIdAttributeType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelBattleAffixEffectRule_Of_IdAttributeType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelBattleAffixEffectRule*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelBattleAffixEffectRule*> UExcelLoaderConfigGroupWrapper::GetAllExcelBattleAffixEffectRule_Of_IdAttributeType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelBattleAffixEffectRule_Of_IdAttributeType");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelBattleAffixEffectRule_Of_IdAttributeType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelBattleAttributeDescription_Of_AttributeType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelBattleAttributeDescription*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelBattleAttributeDescription*> UExcelLoaderConfigGroupWrapper::GetAllExcelBattleAttributeDescription_Of_AttributeType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelBattleAttributeDescription_Of_AttributeType");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelBattleAttributeDescription_Of_AttributeType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelChatChannelType_Of_ChatChannelType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelChatChannelType*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelChatChannelType*> UExcelLoaderConfigGroupWrapper::GetAllExcelChatChannelType_Of_ChatChannelType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelChatChannelType_Of_ChatChannelType");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelChatChannelType_Of_ChatChannelType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelCompetitionLevel_Of_CompetitionLevelId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelCompetitionLevel*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelCompetitionLevel*> UExcelLoaderConfigGroupWrapper::GetAllExcelCompetitionLevel_Of_CompetitionLevelId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelCompetitionLevel_Of_CompetitionLevelId");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelCompetitionLevel_Of_CompetitionLevelId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelCompetitionLevel_Of_CompetitionLevelIdSeasonId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelCompetitionLevel*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelCompetitionLevel*> UExcelLoaderConfigGroupWrapper::GetAllExcelCompetitionLevel_Of_CompetitionLevelIdSeasonId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelCompetitionLevel_Of_CompetitionLevelIdSeasonId");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelCompetitionLevel_Of_CompetitionLevelIdSeasonId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelCraftingGroup_Of_GroupId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelCraftingGroup*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelCraftingGroup*> UExcelLoaderConfigGroupWrapper::GetAllExcelCraftingGroup_Of_GroupId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelCraftingGroup_Of_GroupId");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelCraftingGroup_Of_GroupId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelCraftingRecipe_Of_Id
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelCraftingRecipe*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelCraftingRecipe*> UExcelLoaderConfigGroupWrapper::GetAllExcelCraftingRecipe_Of_Id()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelCraftingRecipe_Of_Id");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelCraftingRecipe_Of_Id Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelCraftingTag_Of_TagId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelCraftingTag*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelCraftingTag*> UExcelLoaderConfigGroupWrapper::GetAllExcelCraftingTag_Of_TagId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelCraftingTag_Of_TagId");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelCraftingTag_Of_TagId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelCuverTableSource_Of_Id
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelCuverTableSource*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelCuverTableSource*> UExcelLoaderConfigGroupWrapper::GetAllExcelCuverTableSource_Of_Id()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelCuverTableSource_Of_Id");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelCuverTableSource_Of_Id Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelDLCContent_Of_AppId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelDLCContent*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelDLCContent*> UExcelLoaderConfigGroupWrapper::GetAllExcelDLCContent_Of_AppId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelDLCContent_Of_AppId");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelDLCContent_Of_AppId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelDLCPacket_Of_AppId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelDLCPacket*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelDLCPacket*> UExcelLoaderConfigGroupWrapper::GetAllExcelDLCPacket_Of_AppId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelDLCPacket_Of_AppId");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelDLCPacket_Of_AppId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelDLCPacket_Of_AppIdItemId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelDLCPacket*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelDLCPacket*> UExcelLoaderConfigGroupWrapper::GetAllExcelDLCPacket_Of_AppIdItemId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelDLCPacket_Of_AppIdItemId");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelDLCPacket_Of_AppIdItemId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelErrorCode_Of_ErrorCode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelErrorCode*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelErrorCode*> UExcelLoaderConfigGroupWrapper::GetAllExcelErrorCode_Of_ErrorCode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelErrorCode_Of_ErrorCode");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelErrorCode_Of_ErrorCode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelFacade_Of_Id
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelFacade*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelFacade*> UExcelLoaderConfigGroupWrapper::GetAllExcelFacade_Of_Id()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelFacade_Of_Id");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelFacade_Of_Id Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelFacade_Of_SuitId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelFacade*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelFacade*> UExcelLoaderConfigGroupWrapper::GetAllExcelFacade_Of_SuitId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelFacade_Of_SuitId");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelFacade_Of_SuitId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelFacadeSort_Of_ThirdSort
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelFacadeSort*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelFacadeSort*> UExcelLoaderConfigGroupWrapper::GetAllExcelFacadeSort_Of_ThirdSort()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelFacadeSort_Of_ThirdSort");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelFacadeSort_Of_ThirdSort Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelGearDismantle_Of_ItemId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelGearDismantle*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelGearDismantle*> UExcelLoaderConfigGroupWrapper::GetAllExcelGearDismantle_Of_ItemId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelGearDismantle_Of_ItemId");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelGearDismantle_Of_ItemId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelGearDurability_Of_EquipTypeRarity
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelGearDurability*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelGearDurability*> UExcelLoaderConfigGroupWrapper::GetAllExcelGearDurability_Of_EquipTypeRarity()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelGearDurability_Of_EquipTypeRarity");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelGearDurability_Of_EquipTypeRarity Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelGearGemGuide_Of_Id
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelGearGemGuide*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelGearGemGuide*> UExcelLoaderConfigGroupWrapper::GetAllExcelGearGemGuide_Of_Id()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelGearGemGuide_Of_Id");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelGearGemGuide_Of_Id Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelGearGemGuide_Of_InstId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelGearGemGuide*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelGearGemGuide*> UExcelLoaderConfigGroupWrapper::GetAllExcelGearGemGuide_Of_InstId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelGearGemGuide_Of_InstId");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelGearGemGuide_Of_InstId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelGearGemInst_Of_ItemId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelGearGemInst*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelGearGemInst*> UExcelLoaderConfigGroupWrapper::GetAllExcelGearGemInst_Of_ItemId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelGearGemInst_Of_ItemId");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelGearGemInst_Of_ItemId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelGearHeirloomGuide_Of_Id
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelGearHeirloomGuide*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelGearHeirloomGuide*> UExcelLoaderConfigGroupWrapper::GetAllExcelGearHeirloomGuide_Of_Id()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelGearHeirloomGuide_Of_Id");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelGearHeirloomGuide_Of_Id Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelGearHeirloomGuide_Of_InstId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelGearHeirloomGuide*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelGearHeirloomGuide*> UExcelLoaderConfigGroupWrapper::GetAllExcelGearHeirloomGuide_Of_InstId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelGearHeirloomGuide_Of_InstId");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelGearHeirloomGuide_Of_InstId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelGearSoulBoundCost_Of_Count
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelGearSoulBoundCost*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelGearSoulBoundCost*> UExcelLoaderConfigGroupWrapper::GetAllExcelGearSoulBoundCost_Of_Count()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelGearSoulBoundCost_Of_Count");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelGearSoulBoundCost_Of_Count Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelGearSoulBoundWearPartRandom_Of_GroupId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelGearSoulBoundWearPartRandom*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelGearSoulBoundWearPartRandom*> UExcelLoaderConfigGroupWrapper::GetAllExcelGearSoulBoundWearPartRandom_Of_GroupId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelGearSoulBoundWearPartRandom_Of_GroupId");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelGearSoulBoundWearPartRandom_Of_GroupId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelGearTemplate_Of_ItemId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelGearTemplate*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelGearTemplate*> UExcelLoaderConfigGroupWrapper::GetAllExcelGearTemplate_Of_ItemId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelGearTemplate_Of_ItemId");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelGearTemplate_Of_ItemId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelImmaculateTrialGrade_Of_ActivityRuleId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelImmaculateTrialGrade*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelImmaculateTrialGrade*> UExcelLoaderConfigGroupWrapper::GetAllExcelImmaculateTrialGrade_Of_ActivityRuleId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelImmaculateTrialGrade_Of_ActivityRuleId");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelImmaculateTrialGrade_Of_ActivityRuleId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelImmaculateTrialGrade_Of_GradeId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelImmaculateTrialGrade*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelImmaculateTrialGrade*> UExcelLoaderConfigGroupWrapper::GetAllExcelImmaculateTrialGrade_Of_GradeId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelImmaculateTrialGrade_Of_GradeId");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelImmaculateTrialGrade_Of_GradeId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelImmaculateTrialRandomRewards_Of_RandomRewardIdCareerTypeId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelImmaculateTrialRandomRewards*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelImmaculateTrialRandomRewards*> UExcelLoaderConfigGroupWrapper::GetAllExcelImmaculateTrialRandomRewards_Of_RandomRewardIdCareerTypeId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelImmaculateTrialRandomRewards_Of_RandomRewardIdCareerTypeId");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelImmaculateTrialRandomRewards_Of_RandomRewardIdCareerTypeId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelImmaculateTrialRule_Of_ActivityRuleId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelImmaculateTrialRule*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelImmaculateTrialRule*> UExcelLoaderConfigGroupWrapper::GetAllExcelImmaculateTrialRule_Of_ActivityRuleId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelImmaculateTrialRule_Of_ActivityRuleId");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelImmaculateTrialRule_Of_ActivityRuleId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelItemDropItem_Of_RandomId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelItemDropItem*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelItemDropItem*> UExcelLoaderConfigGroupWrapper::GetAllExcelItemDropItem_Of_RandomId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelItemDropItem_Of_RandomId");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelItemDropItem_Of_RandomId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelItemLootRate_Of_RandomId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelItemLootRate*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelItemLootRate*> UExcelLoaderConfigGroupWrapper::GetAllExcelItemLootRate_Of_RandomId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelItemLootRate_Of_RandomId");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelItemLootRate_Of_RandomId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelItemMagicFound_Of_Level
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelItemMagicFound*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelItemMagicFound*> UExcelLoaderConfigGroupWrapper::GetAllExcelItemMagicFound_Of_Level()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelItemMagicFound_Of_Level");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelItemMagicFound_Of_Level Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelItemRouter_Of_ItemComingEnumItemTypeEnum
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelItemRouter*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelItemRouter*> UExcelLoaderConfigGroupWrapper::GetAllExcelItemRouter_Of_ItemComingEnumItemTypeEnum()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelItemRouter_Of_ItemComingEnumItemTypeEnum");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelItemRouter_Of_ItemComingEnumItemTypeEnum Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelItemType_Of_SkinThirdSort
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelItemType*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelItemType*> UExcelLoaderConfigGroupWrapper::GetAllExcelItemType_Of_SkinThirdSort()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelItemType_Of_SkinThirdSort");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelItemType_Of_SkinThirdSort Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelItemType_Of_TypeId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelItemType*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelItemType*> UExcelLoaderConfigGroupWrapper::GetAllExcelItemType_Of_TypeId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelItemType_Of_TypeId");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelItemType_Of_TypeId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelLevelType_Of_LevelType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelLevelType*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelLevelType*> UExcelLoaderConfigGroupWrapper::GetAllExcelLevelType_Of_LevelType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelLevelType_Of_LevelType");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelLevelType_Of_LevelType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelLootChooseGroupRate_Of_LootId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelLootChooseGroupRate*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelLootChooseGroupRate*> UExcelLoaderConfigGroupWrapper::GetAllExcelLootChooseGroupRate_Of_LootId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelLootChooseGroupRate_Of_LootId");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelLootChooseGroupRate_Of_LootId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelLootDisableLootId_Of_LootId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelLootDisableLootId*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelLootDisableLootId*> UExcelLoaderConfigGroupWrapper::GetAllExcelLootDisableLootId_Of_LootId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelLootDisableLootId_Of_LootId");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelLootDisableLootId_Of_LootId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelLootRarePoolCntLimit_Of_ItemId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelLootRarePoolCntLimit*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelLootRarePoolCntLimit*> UExcelLoaderConfigGroupWrapper::GetAllExcelLootRarePoolCntLimit_Of_ItemId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelLootRarePoolCntLimit_Of_ItemId");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelLootRarePoolCntLimit_Of_ItemId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelLootRarePoolItemRate_Of_RandomId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelLootRarePoolItemRate*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelLootRarePoolItemRate*> UExcelLoaderConfigGroupWrapper::GetAllExcelLootRarePoolItemRate_Of_RandomId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelLootRarePoolItemRate_Of_RandomId");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelLootRarePoolItemRate_Of_RandomId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelLootSourceMap_Of_Name
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelLootSourceMap*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelLootSourceMap*> UExcelLoaderConfigGroupWrapper::GetAllExcelLootSourceMap_Of_Name()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelLootSourceMap_Of_Name");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelLootSourceMap_Of_Name Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelLootUeSourceChooseGroup_Of_UeLootSourceIdMapIdLootType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelLootUeSourceChooseGroup*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelLootUeSourceChooseGroup*> UExcelLoaderConfigGroupWrapper::GetAllExcelLootUeSourceChooseGroup_Of_UeLootSourceIdMapIdLootType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelLootUeSourceChooseGroup_Of_UeLootSourceIdMapIdLootType");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelLootUeSourceChooseGroup_Of_UeLootSourceIdMapIdLootType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelLootUnluckyValue_Of_RuleId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelLootUnluckyValue*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelLootUnluckyValue*> UExcelLoaderConfigGroupWrapper::GetAllExcelLootUnluckyValue_Of_RuleId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelLootUnluckyValue_Of_RuleId");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelLootUnluckyValue_Of_RuleId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelLotteryAccessKey_Of_TypeId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelLotteryAccessKey*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelLotteryAccessKey*> UExcelLoaderConfigGroupWrapper::GetAllExcelLotteryAccessKey_Of_TypeId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelLotteryAccessKey_Of_TypeId");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelLotteryAccessKey_Of_TypeId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelLotteryPool_Of_Id
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelLotteryPool*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelLotteryPool*> UExcelLoaderConfigGroupWrapper::GetAllExcelLotteryPool_Of_Id()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelLotteryPool_Of_Id");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelLotteryPool_Of_Id Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelMailTemplate_Of_TypeId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelMailTemplate*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelMailTemplate*> UExcelLoaderConfigGroupWrapper::GetAllExcelMailTemplate_Of_TypeId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelMailTemplate_Of_TypeId");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelMailTemplate_Of_TypeId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelMapDetail_Of_MapId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelMapDetail*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelMapDetail*> UExcelLoaderConfigGroupWrapper::GetAllExcelMapDetail_Of_MapId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelMapDetail_Of_MapId");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelMapDetail_Of_MapId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelMapExp_Of_MapIdAliveTime
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelMapExp*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelMapExp*> UExcelLoaderConfigGroupWrapper::GetAllExcelMapExp_Of_MapIdAliveTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelMapExp_Of_MapIdAliveTime");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelMapExp_Of_MapIdAliveTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelMapSelect_Of_LevelId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelMapSelect*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelMapSelect*> UExcelLoaderConfigGroupWrapper::GetAllExcelMapSelect_Of_LevelId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelMapSelect_Of_LevelId");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelMapSelect_Of_LevelId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelMapSelect_Of_MapNameId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelMapSelect*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelMapSelect*> UExcelLoaderConfigGroupWrapper::GetAllExcelMapSelect_Of_MapNameId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelMapSelect_Of_MapNameId");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelMapSelect_Of_MapNameId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelMapSelectModelFeature_Of_ModelFeatureId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelMapSelectModelFeature*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelMapSelectModelFeature*> UExcelLoaderConfigGroupWrapper::GetAllExcelMapSelectModelFeature_Of_ModelFeatureId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelMapSelectModelFeature_Of_ModelFeatureId");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelMapSelectModelFeature_Of_ModelFeatureId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelMarketInfo_Of_Market
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelMarketInfo*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelMarketInfo*> UExcelLoaderConfigGroupWrapper::GetAllExcelMarketInfo_Of_Market()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelMarketInfo_Of_Market");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelMarketInfo_Of_Market Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelMarketPoorMan_Of_RoleTypeId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelMarketPoorMan*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelMarketPoorMan*> UExcelLoaderConfigGroupWrapper::GetAllExcelMarketPoorMan_Of_RoleTypeId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelMarketPoorMan_Of_RoleTypeId");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelMarketPoorMan_Of_RoleTypeId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelMarketPopupVideo_Of_PopupVideoId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelMarketPopupVideo*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelMarketPopupVideo*> UExcelLoaderConfigGroupWrapper::GetAllExcelMarketPopupVideo_Of_PopupVideoId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelMarketPopupVideo_Of_PopupVideoId");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelMarketPopupVideo_Of_PopupVideoId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelMarketProductItem_Of_Market
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelMarketProductItem*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelMarketProductItem*> UExcelLoaderConfigGroupWrapper::GetAllExcelMarketProductItem_Of_Market()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelMarketProductItem_Of_Market");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelMarketProductItem_Of_Market Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelMarketProductItem_Of_MarketTabId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelMarketProductItem*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelMarketProductItem*> UExcelLoaderConfigGroupWrapper::GetAllExcelMarketProductItem_Of_MarketTabId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelMarketProductItem_Of_MarketTabId");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelMarketProductItem_Of_MarketTabId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelMarketProductItem_Of_ProductId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelMarketProductItem*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelMarketProductItem*> UExcelLoaderConfigGroupWrapper::GetAllExcelMarketProductItem_Of_ProductId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelMarketProductItem_Of_ProductId");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelMarketProductItem_Of_ProductId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelMarketRefreshPool_Of_RefreshPoolId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelMarketRefreshPool*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelMarketRefreshPool*> UExcelLoaderConfigGroupWrapper::GetAllExcelMarketRefreshPool_Of_RefreshPoolId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelMarketRefreshPool_Of_RefreshPoolId");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelMarketRefreshPool_Of_RefreshPoolId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelMarketSpecialCost_Of_ProductId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelMarketSpecialCost*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelMarketSpecialCost*> UExcelLoaderConfigGroupWrapper::GetAllExcelMarketSpecialCost_Of_ProductId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelMarketSpecialCost_Of_ProductId");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelMarketSpecialCost_Of_ProductId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelMarketTabInfo_Of_Market
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelMarketTabInfo*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelMarketTabInfo*> UExcelLoaderConfigGroupWrapper::GetAllExcelMarketTabInfo_Of_Market()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelMarketTabInfo_Of_Market");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelMarketTabInfo_Of_Market Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelMatchingAddRobotRule_Of_UserCount
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelMatchingAddRobotRule*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelMatchingAddRobotRule*> UExcelLoaderConfigGroupWrapper::GetAllExcelMatchingAddRobotRule_Of_UserCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelMatchingAddRobotRule_Of_UserCount");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelMatchingAddRobotRule_Of_UserCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelMatchingBattleRankStatistics_Of_BattleRankTypeCount
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelMatchingBattleRankStatistics*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelMatchingBattleRankStatistics*> UExcelLoaderConfigGroupWrapper::GetAllExcelMatchingBattleRankStatistics_Of_BattleRankTypeCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelMatchingBattleRankStatistics_Of_BattleRankTypeCount");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelMatchingBattleRankStatistics_Of_BattleRankTypeCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelMatchingBattleRankStatistics_Of_Type
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelMatchingBattleRankStatistics*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelMatchingBattleRankStatistics*> UExcelLoaderConfigGroupWrapper::GetAllExcelMatchingBattleRankStatistics_Of_Type()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelMatchingBattleRankStatistics_Of_Type");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelMatchingBattleRankStatistics_Of_Type Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelMatchingContinuousSuccessOrFailureAdding_Of_Times
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelMatchingContinuousSuccessOrFailureAdding*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelMatchingContinuousSuccessOrFailureAdding*> UExcelLoaderConfigGroupWrapper::GetAllExcelMatchingContinuousSuccessOrFailureAdding_Of_Times()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelMatchingContinuousSuccessOrFailureAdding_Of_Times");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelMatchingContinuousSuccessOrFailureAdding_Of_Times Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelMatchingFactionTemplate_Of_Id
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelMatchingFactionTemplate*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelMatchingFactionTemplate*> UExcelLoaderConfigGroupWrapper::GetAllExcelMatchingFactionTemplate_Of_Id()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelMatchingFactionTemplate_Of_Id");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelMatchingFactionTemplate_Of_Id Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelMatchingPool_Of_Id
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelMatchingPool*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelMatchingPool*> UExcelLoaderConfigGroupWrapper::GetAllExcelMatchingPool_Of_Id()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelMatchingPool_Of_Id");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelMatchingPool_Of_Id Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelMatchingResultTemplate_Of_Id
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelMatchingResultTemplate*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelMatchingResultTemplate*> UExcelLoaderConfigGroupWrapper::GetAllExcelMatchingResultTemplate_Of_Id()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelMatchingResultTemplate_Of_Id");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelMatchingResultTemplate_Of_Id Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelMatchingRule_Of_Id
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelMatchingRule*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelMatchingRule*> UExcelLoaderConfigGroupWrapper::GetAllExcelMatchingRule_Of_Id()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelMatchingRule_Of_Id");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelMatchingRule_Of_Id Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelMatchingRuleGroup_Of_GroupId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelMatchingRuleGroup*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelMatchingRuleGroup*> UExcelLoaderConfigGroupWrapper::GetAllExcelMatchingRuleGroup_Of_GroupId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelMatchingRuleGroup_Of_GroupId");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelMatchingRuleGroup_Of_GroupId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelMithrilForceItem_Of_Id
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelMithrilForceItem*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelMithrilForceItem*> UExcelLoaderConfigGroupWrapper::GetAllExcelMithrilForceItem_Of_Id()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelMithrilForceItem_Of_Id");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelMithrilForceItem_Of_Id Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelMithrilForcePrestige_Of_Level
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelMithrilForcePrestige*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelMithrilForcePrestige*> UExcelLoaderConfigGroupWrapper::GetAllExcelMithrilForcePrestige_Of_Level()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelMithrilForcePrestige_Of_Level");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelMithrilForcePrestige_Of_Level Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelMithrilForceSettlement_Of_Damage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelMithrilForceSettlement*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelMithrilForceSettlement*> UExcelLoaderConfigGroupWrapper::GetAllExcelMithrilForceSettlement_Of_Damage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelMithrilForceSettlement_Of_Damage");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelMithrilForceSettlement_Of_Damage Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelMithrilForceSettlementFactor_Of_Damage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelMithrilForceSettlementFactor*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelMithrilForceSettlementFactor*> UExcelLoaderConfigGroupWrapper::GetAllExcelMithrilForceSettlementFactor_Of_Damage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelMithrilForceSettlementFactor_Of_Damage");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelMithrilForceSettlementFactor_Of_Damage Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelModuleUnlockCircular_Of_Id
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelModuleUnlockCircular*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelModuleUnlockCircular*> UExcelLoaderConfigGroupWrapper::GetAllExcelModuleUnlockCircular_Of_Id()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelModuleUnlockCircular_Of_Id");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelModuleUnlockCircular_Of_Id Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelModuleUnlockType_Of_ModuleId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelModuleUnlockType*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelModuleUnlockType*> UExcelLoaderConfigGroupWrapper::GetAllExcelModuleUnlockType_Of_ModuleId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelModuleUnlockType_Of_ModuleId");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelModuleUnlockType_Of_ModuleId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelModuleUnlockType_Of_ModuleName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelModuleUnlockType*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelModuleUnlockType*> UExcelLoaderConfigGroupWrapper::GetAllExcelModuleUnlockType_Of_ModuleName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelModuleUnlockType_Of_ModuleName");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelModuleUnlockType_Of_ModuleName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelOriginConstConfig_Of_Key
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelOriginConstConfig*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelOriginConstConfig*> UExcelLoaderConfigGroupWrapper::GetAllExcelOriginConstConfig_Of_Key()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelOriginConstConfig_Of_Key");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelOriginConstConfig_Of_Key Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelQuestGroupList_Of_Id
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelQuestGroupList*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelQuestGroupList*> UExcelLoaderConfigGroupWrapper::GetAllExcelQuestGroupList_Of_Id()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelQuestGroupList_Of_Id");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelQuestGroupList_Of_Id Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelQuestList_Of_ActivityId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelQuestList*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelQuestList*> UExcelLoaderConfigGroupWrapper::GetAllExcelQuestList_Of_ActivityId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelQuestList_Of_ActivityId");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelQuestList_Of_ActivityId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelQuestList_Of_ClientSubmitType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelQuestList*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelQuestList*> UExcelLoaderConfigGroupWrapper::GetAllExcelQuestList_Of_ClientSubmitType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelQuestList_Of_ClientSubmitType");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelQuestList_Of_ClientSubmitType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelQuestList_Of_Id
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelQuestList*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelQuestList*> UExcelLoaderConfigGroupWrapper::GetAllExcelQuestList_Of_Id()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelQuestList_Of_Id");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelQuestList_Of_Id Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelQuestList_Of_RandomPoolId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelQuestList*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelQuestList*> UExcelLoaderConfigGroupWrapper::GetAllExcelQuestList_Of_RandomPoolId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelQuestList_Of_RandomPoolId");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelQuestList_Of_RandomPoolId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelQuestProgressCondition_Of_Id
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelQuestProgressCondition*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelQuestProgressCondition*> UExcelLoaderConfigGroupWrapper::GetAllExcelQuestProgressCondition_Of_Id()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelQuestProgressCondition_Of_Id");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelQuestProgressCondition_Of_Id Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelQuestProgressType_Of_Id
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelQuestProgressType*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelQuestProgressType*> UExcelLoaderConfigGroupWrapper::GetAllExcelQuestProgressType_Of_Id()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelQuestProgressType_Of_Id");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelQuestProgressType_Of_Id Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelQuestTriggerEventType_Of_Id
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelQuestTriggerEventType*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelQuestTriggerEventType*> UExcelLoaderConfigGroupWrapper::GetAllExcelQuestTriggerEventType_Of_Id()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelQuestTriggerEventType_Of_Id");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelQuestTriggerEventType_Of_Id Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelRankPeriodRewardPool_Of_RankRewardPoolId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelRankPeriodRewardPool*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelRankPeriodRewardPool*> UExcelLoaderConfigGroupWrapper::GetAllExcelRankPeriodRewardPool_Of_RankRewardPoolId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelRankPeriodRewardPool_Of_RankRewardPoolId");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelRankPeriodRewardPool_Of_RankRewardPoolId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelRankReportSetting_Of_RankTypeRankInstanceId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelRankReportSetting*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelRankReportSetting*> UExcelLoaderConfigGroupWrapper::GetAllExcelRankReportSetting_Of_RankTypeRankInstanceId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelRankReportSetting_Of_RankTypeRankInstanceId");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelRankReportSetting_Of_RankTypeRankInstanceId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelRankRule_Of_BanId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelRankRule*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelRankRule*> UExcelLoaderConfigGroupWrapper::GetAllExcelRankRule_Of_BanId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelRankRule_Of_BanId");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelRankRule_Of_BanId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelRankRule_Of_RankTypeRankInstanceId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelRankRule*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelRankRule*> UExcelLoaderConfigGroupWrapper::GetAllExcelRankRule_Of_RankTypeRankInstanceId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelRankRule_Of_RankTypeRankInstanceId");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelRankRule_Of_RankTypeRankInstanceId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelRobotFaction_Of_RobotFactionTempleteId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelRobotFaction*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelRobotFaction*> UExcelLoaderConfigGroupWrapper::GetAllExcelRobotFaction_Of_RobotFactionTempleteId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelRobotFaction_Of_RobotFactionTempleteId");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelRobotFaction_Of_RobotFactionTempleteId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelRobotNameDatabase_Of_RaceGenderRobotName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelRobotNameDatabase*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelRobotNameDatabase*> UExcelLoaderConfigGroupWrapper::GetAllExcelRobotNameDatabase_Of_RaceGenderRobotName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelRobotNameDatabase_Of_RaceGenderRobotName");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelRobotNameDatabase_Of_RaceGenderRobotName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelRobotNormalFaction_Of_RobotFactionTempleteId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelRobotNormalFaction*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelRobotNormalFaction*> UExcelLoaderConfigGroupWrapper::GetAllExcelRobotNormalFaction_Of_RobotFactionTempleteId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelRobotNormalFaction_Of_RobotFactionTempleteId");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelRobotNormalFaction_Of_RobotFactionTempleteId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelRobotTemplate_Of_RobotTempleteId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelRobotTemplate*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelRobotTemplate*> UExcelLoaderConfigGroupWrapper::GetAllExcelRobotTemplate_Of_RobotTempleteId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelRobotTemplate_Of_RobotTempleteId");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelRobotTemplate_Of_RobotTempleteId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelRoleDefaultEquipment_Of_ConfigId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelRoleDefaultEquipment*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelRoleDefaultEquipment*> UExcelLoaderConfigGroupWrapper::GetAllExcelRoleDefaultEquipment_Of_ConfigId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelRoleDefaultEquipment_Of_ConfigId");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelRoleDefaultEquipment_Of_ConfigId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelRoleFacePinchingLimit_Of_RaceGenderFacePinching
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelRoleFacePinchingLimit*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelRoleFacePinchingLimit*> UExcelLoaderConfigGroupWrapper::GetAllExcelRoleFacePinchingLimit_Of_RaceGenderFacePinching()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelRoleFacePinchingLimit_Of_RaceGenderFacePinching");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelRoleFacePinchingLimit_Of_RaceGenderFacePinching Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelRoleHeadIcon_Of_TypeGenderFaceSkincolor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelRoleHeadIcon*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelRoleHeadIcon*> UExcelLoaderConfigGroupWrapper::GetAllExcelRoleHeadIcon_Of_TypeGenderFaceSkincolor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelRoleHeadIcon_Of_TypeGenderFaceSkincolor");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelRoleHeadIcon_Of_TypeGenderFaceSkincolor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelRoleLevelExp_Of_Level
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelRoleLevelExp*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelRoleLevelExp*> UExcelLoaderConfigGroupWrapper::GetAllExcelRoleLevelExp_Of_Level()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelRoleLevelExp_Of_Level");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelRoleLevelExp_Of_Level Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelRoleLevelUpgrade_Of_RoleTypeAndLevel
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelRoleLevelUpgrade*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelRoleLevelUpgrade*> UExcelLoaderConfigGroupWrapper::GetAllExcelRoleLevelUpgrade_Of_RoleTypeAndLevel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelRoleLevelUpgrade_Of_RoleTypeAndLevel");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelRoleLevelUpgrade_Of_RoleTypeAndLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelRoleLevelUpgrade_Of_RoleTypeId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelRoleLevelUpgrade*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelRoleLevelUpgrade*> UExcelLoaderConfigGroupWrapper::GetAllExcelRoleLevelUpgrade_Of_RoleTypeId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelRoleLevelUpgrade_Of_RoleTypeId");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelRoleLevelUpgrade_Of_RoleTypeId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelRoleSkill_Of_SkillId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelRoleSkill*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelRoleSkill*> UExcelLoaderConfigGroupWrapper::GetAllExcelRoleSkill_Of_SkillId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelRoleSkill_Of_SkillId");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelRoleSkill_Of_SkillId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelRoleSkinType_Of_SkinId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelRoleSkinType*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelRoleSkinType*> UExcelLoaderConfigGroupWrapper::GetAllExcelRoleSkinType_Of_SkinId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelRoleSkinType_Of_SkinId");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelRoleSkinType_Of_SkinId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelRoleType_Of_Force
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelRoleType*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelRoleType*> UExcelLoaderConfigGroupWrapper::GetAllExcelRoleType_Of_Force()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelRoleType_Of_Force");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelRoleType_Of_Force Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelRoleType_Of_TypeId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelRoleType*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelRoleType*> UExcelLoaderConfigGroupWrapper::GetAllExcelRoleType_Of_TypeId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelRoleType_Of_TypeId");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelRoleType_Of_TypeId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelSeasonRule_Of_SeasonId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelSeasonRule*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelSeasonRule*> UExcelLoaderConfigGroupWrapper::GetAllExcelSeasonRule_Of_SeasonId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelSeasonRule_Of_SeasonId");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelSeasonRule_Of_SeasonId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelSkillCalculate_Of_Id
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelSkillCalculate*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelSkillCalculate*> UExcelLoaderConfigGroupWrapper::GetAllExcelSkillCalculate_Of_Id()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelSkillCalculate_Of_Id");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelSkillCalculate_Of_Id Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelSkillNumExchange_Of_Id
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelSkillNumExchange*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelSkillNumExchange*> UExcelLoaderConfigGroupWrapper::GetAllExcelSkillNumExchange_Of_Id()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelSkillNumExchange_Of_Id");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelSkillNumExchange_Of_Id Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelTradeCommodity_Of_IdMarketId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelTradeCommodity*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelTradeCommodity*> UExcelLoaderConfigGroupWrapper::GetAllExcelTradeCommodity_Of_IdMarketId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelTradeCommodity_Of_IdMarketId");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelTradeCommodity_Of_IdMarketId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelTradeCommodity_Of_MarketId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelTradeCommodity*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelTradeCommodity*> UExcelLoaderConfigGroupWrapper::GetAllExcelTradeCommodity_Of_MarketId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelTradeCommodity_Of_MarketId");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelTradeCommodity_Of_MarketId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelTradeCommodity_Of_MarketIdItemId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelTradeCommodity*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelTradeCommodity*> UExcelLoaderConfigGroupWrapper::GetAllExcelTradeCommodity_Of_MarketIdItemId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelTradeCommodity_Of_MarketIdItemId");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelTradeCommodity_Of_MarketIdItemId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelTradeItemRequire_Of_Id
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelTradeItemRequire*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelTradeItemRequire*> UExcelLoaderConfigGroupWrapper::GetAllExcelTradeItemRequire_Of_Id()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelTradeItemRequire_Of_Id");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelTradeItemRequire_Of_Id Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelTradeMarket_Of_CalculatePoolId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelTradeMarket*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelTradeMarket*> UExcelLoaderConfigGroupWrapper::GetAllExcelTradeMarket_Of_CalculatePoolId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelTradeMarket_Of_CalculatePoolId");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelTradeMarket_Of_CalculatePoolId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelTradeMarket_Of_Id
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelTradeMarket*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelTradeMarket*> UExcelLoaderConfigGroupWrapper::GetAllExcelTradeMarket_Of_Id()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelTradeMarket_Of_Id");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelTradeMarket_Of_Id Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelTradeMarket_Of_MarketType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelTradeMarket*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelTradeMarket*> UExcelLoaderConfigGroupWrapper::GetAllExcelTradeMarket_Of_MarketType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelTradeMarket_Of_MarketType");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelTradeMarket_Of_MarketType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelTradeStandardPrice_Of_Id
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelTradeStandardPrice*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelTradeStandardPrice*> UExcelLoaderConfigGroupWrapper::GetAllExcelTradeStandardPrice_Of_Id()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelTradeStandardPrice_Of_Id");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelTradeStandardPrice_Of_Id Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelTradeValidPrice_Of_Id
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelTradeValidPrice*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelTradeValidPrice*> UExcelLoaderConfigGroupWrapper::GetAllExcelTradeValidPrice_Of_Id()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelTradeValidPrice_Of_Id");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelTradeValidPrice_Of_Id Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllExcelTradeValidTime_Of_Id
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelTradeValidTime*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelTradeValidTime*> UExcelLoaderConfigGroupWrapper::GetAllExcelTradeValidTime_Of_Id()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllExcelTradeValidTime_Of_Id");

	Params::ExcelLoaderConfigGroupWrapper_GetAllExcelTradeValidTime_Of_Id Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllUESourceAbilitySet_Of_UeSourceId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigUESourceAbilitySet*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigUESourceAbilitySet*> UExcelLoaderConfigGroupWrapper::GetAllUESourceAbilitySet_Of_UeSourceId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllUESourceAbilitySet_Of_UeSourceId");

	Params::ExcelLoaderConfigGroupWrapper_GetAllUESourceAbilitySet_Of_UeSourceId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllUeSourceActorSkin_Of_SkinId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigUeSourceActorSkin*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigUeSourceActorSkin*> UExcelLoaderConfigGroupWrapper::GetAllUeSourceActorSkin_Of_SkinId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllUeSourceActorSkin_Of_SkinId");

	Params::ExcelLoaderConfigGroupWrapper_GetAllUeSourceActorSkin_Of_SkinId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllUeSourceCharacter_Of_RoleId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigUeSourceCharacter*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigUeSourceCharacter*> UExcelLoaderConfigGroupWrapper::GetAllUeSourceCharacter_Of_RoleId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllUeSourceCharacter_Of_RoleId");

	Params::ExcelLoaderConfigGroupWrapper_GetAllUeSourceCharacter_Of_RoleId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllUeSourceEquipment_Of_EquipId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigUeSourceEquipment*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigUeSourceEquipment*> UExcelLoaderConfigGroupWrapper::GetAllUeSourceEquipment_Of_EquipId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllUeSourceEquipment_Of_EquipId");

	Params::ExcelLoaderConfigGroupWrapper_GetAllUeSourceEquipment_Of_EquipId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllUeSourceEquipmentSubType_Of_UePath
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigUeSourceEquipmentSubType*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigUeSourceEquipmentSubType*> UExcelLoaderConfigGroupWrapper::GetAllUeSourceEquipmentSubType_Of_UePath()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllUeSourceEquipmentSubType_Of_UePath");

	Params::ExcelLoaderConfigGroupWrapper_GetAllUeSourceEquipmentSubType_Of_UePath Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllUESourceFirstLevelAttrDataAsset_Of_Id
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigUESourceFirstLevelAttrDataAsset*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigUESourceFirstLevelAttrDataAsset*> UExcelLoaderConfigGroupWrapper::GetAllUESourceFirstLevelAttrDataAsset_Of_Id()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllUESourceFirstLevelAttrDataAsset_Of_Id");

	Params::ExcelLoaderConfigGroupWrapper_GetAllUESourceFirstLevelAttrDataAsset_Of_Id Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllUESourceItemType_Of_TypeId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigUESourceItemType*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigUESourceItemType*> UExcelLoaderConfigGroupWrapper::GetAllUESourceItemType_Of_TypeId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllUESourceItemType_Of_TypeId");

	Params::ExcelLoaderConfigGroupWrapper_GetAllUESourceItemType_Of_TypeId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetAllUeSourceLootType_Of_Name
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigUeSourceLootType*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigUeSourceLootType*> UExcelLoaderConfigGroupWrapper::GetAllUeSourceLootType_Of_Name()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetAllUeSourceLootType_Of_Name");

	Params::ExcelLoaderConfigGroupWrapper_GetAllUeSourceLootType_Of_Name Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelActivityCenter_SizeOf_ExpItemType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelActivityCenter_SizeOf_ExpItemType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelActivityCenter_SizeOf_ExpItemType");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelActivityCenter_SizeOf_ExpItemType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelActivityCenter_SizeOf_Id
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelActivityCenter_SizeOf_Id()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelActivityCenter_SizeOf_Id");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelActivityCenter_SizeOf_Id Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelActivityCenterPassprotsReards_SizeOf_ActivityId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelActivityCenterPassprotsReards_SizeOf_ActivityId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelActivityCenterPassprotsReards_SizeOf_ActivityId");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelActivityCenterPassprotsReards_SizeOf_ActivityId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelActivityCenterPassprotsReards_SizeOf_Id
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelActivityCenterPassprotsReards_SizeOf_Id()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelActivityCenterPassprotsReards_SizeOf_Id");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelActivityCenterPassprotsReards_SizeOf_Id Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelActivityCenterPassprotsReards_SizeOf_Level
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelActivityCenterPassprotsReards_SizeOf_Level()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelActivityCenterPassprotsReards_SizeOf_Level");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelActivityCenterPassprotsReards_SizeOf_Level Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelActivityCenterRandomRewards_SizeOf_ActivityIdCareerTypeId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelActivityCenterRandomRewards_SizeOf_ActivityIdCareerTypeId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelActivityCenterRandomRewards_SizeOf_ActivityIdCareerTypeId");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelActivityCenterRandomRewards_SizeOf_ActivityIdCareerTypeId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelActivityCenterRandomRewards_SizeOf_Id
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelActivityCenterRandomRewards_SizeOf_Id()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelActivityCenterRandomRewards_SizeOf_Id");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelActivityCenterRandomRewards_SizeOf_Id Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelActivityCenterRandomRewardsPool_SizeOf_Id
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelActivityCenterRandomRewardsPool_SizeOf_Id()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelActivityCenterRandomRewardsPool_SizeOf_Id");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelActivityCenterRandomRewardsPool_SizeOf_Id Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelAffixAbilitySetId_SizeOf_AffixIndexId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelAffixAbilitySetId_SizeOf_AffixIndexId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelAffixAbilitySetId_SizeOf_AffixIndexId");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelAffixAbilitySetId_SizeOf_AffixIndexId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelAffixCountRandomPool_SizeOf_AffixCountPoolId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelAffixCountRandomPool_SizeOf_AffixCountPoolId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelAffixCountRandomPool_SizeOf_AffixCountPoolId");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelAffixCountRandomPool_SizeOf_AffixCountPoolId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelAffixGearSetMapRule_SizeOf_GearSetType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelAffixGearSetMapRule_SizeOf_GearSetType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelAffixGearSetMapRule_SizeOf_GearSetType");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelAffixGearSetMapRule_SizeOf_GearSetType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelAffixGearSetRule_SizeOf_GearSetType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelAffixGearSetRule_SizeOf_GearSetType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelAffixGearSetRule_SizeOf_GearSetType");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelAffixGearSetRule_SizeOf_GearSetType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelAffixGearSetRule_SizeOf_GearSetTypeLevel
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelAffixGearSetRule_SizeOf_GearSetTypeLevel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelAffixGearSetRule_SizeOf_GearSetTypeLevel");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelAffixGearSetRule_SizeOf_GearSetTypeLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelAffixLegendaryRule_SizeOf_AffixAliasId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelAffixLegendaryRule_SizeOf_AffixAliasId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelAffixLegendaryRule_SizeOf_AffixAliasId");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelAffixLegendaryRule_SizeOf_AffixAliasId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelAffixLevelPoolRule_SizeOf_RuleId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelAffixLevelPoolRule_SizeOf_RuleId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelAffixLevelPoolRule_SizeOf_RuleId");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelAffixLevelPoolRule_SizeOf_RuleId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelAffixLevelPoolRule_SizeOf_RuleIdLevelId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelAffixLevelPoolRule_SizeOf_RuleIdLevelId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelAffixLevelPoolRule_SizeOf_RuleIdLevelId");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelAffixLevelPoolRule_SizeOf_RuleIdLevelId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelAffixMonsterPoolRule_SizeOf_RuleId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelAffixMonsterPoolRule_SizeOf_RuleId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelAffixMonsterPoolRule_SizeOf_RuleId");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelAffixMonsterPoolRule_SizeOf_RuleId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelAffixMonsterPoolRule_SizeOf_RuleIdMonsterIdLevelId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelAffixMonsterPoolRule_SizeOf_RuleIdMonsterIdLevelId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelAffixMonsterPoolRule_SizeOf_RuleIdMonsterIdLevelId");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelAffixMonsterPoolRule_SizeOf_RuleIdMonsterIdLevelId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelAffixPool_SizeOf_AffixPoolId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelAffixPool_SizeOf_AffixPoolId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelAffixPool_SizeOf_AffixPoolId");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelAffixPool_SizeOf_AffixPoolId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelAffixTemplate_SizeOf_ItemId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelAffixTemplate_SizeOf_ItemId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelAffixTemplate_SizeOf_ItemId");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelAffixTemplate_SizeOf_ItemId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelAffixValueTemplate_SizeOf_AffixValueId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelAffixValueTemplate_SizeOf_AffixValueId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelAffixValueTemplate_SizeOf_AffixValueId");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelAffixValueTemplate_SizeOf_AffixValueId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelAffixValueTemplate_SizeOf_AffixValueIdAttributeType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelAffixValueTemplate_SizeOf_AffixValueIdAttributeType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelAffixValueTemplate_SizeOf_AffixValueIdAttributeType");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelAffixValueTemplate_SizeOf_AffixValueIdAttributeType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelBattleAbilitySetDescription_SizeOf_AbilitySetIdLevel
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelBattleAbilitySetDescription_SizeOf_AbilitySetIdLevel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelBattleAbilitySetDescription_SizeOf_AbilitySetIdLevel");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelBattleAbilitySetDescription_SizeOf_AbilitySetIdLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelBattleAffixEffectRule_SizeOf_GroupIdRandomConditionIdAttributeType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelBattleAffixEffectRule_SizeOf_GroupIdRandomConditionIdAttributeType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelBattleAffixEffectRule_SizeOf_GroupIdRandomConditionIdAttributeType");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelBattleAffixEffectRule_SizeOf_GroupIdRandomConditionIdAttributeType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelBattleAffixEffectRule_SizeOf_IdAttributeType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelBattleAffixEffectRule_SizeOf_IdAttributeType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelBattleAffixEffectRule_SizeOf_IdAttributeType");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelBattleAffixEffectRule_SizeOf_IdAttributeType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelBattleAttributeDescription_SizeOf_AttributeType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelBattleAttributeDescription_SizeOf_AttributeType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelBattleAttributeDescription_SizeOf_AttributeType");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelBattleAttributeDescription_SizeOf_AttributeType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelChatChannelType_SizeOf_ChatChannelType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelChatChannelType_SizeOf_ChatChannelType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelChatChannelType_SizeOf_ChatChannelType");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelChatChannelType_SizeOf_ChatChannelType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelCompetitionLevel_SizeOf_CompetitionLevelId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelCompetitionLevel_SizeOf_CompetitionLevelId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelCompetitionLevel_SizeOf_CompetitionLevelId");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelCompetitionLevel_SizeOf_CompetitionLevelId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelCompetitionLevel_SizeOf_CompetitionLevelIdSeasonId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelCompetitionLevel_SizeOf_CompetitionLevelIdSeasonId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelCompetitionLevel_SizeOf_CompetitionLevelIdSeasonId");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelCompetitionLevel_SizeOf_CompetitionLevelIdSeasonId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelCraftingGroup_SizeOf_GroupId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelCraftingGroup_SizeOf_GroupId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelCraftingGroup_SizeOf_GroupId");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelCraftingGroup_SizeOf_GroupId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelCraftingRecipe_SizeOf_Id
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelCraftingRecipe_SizeOf_Id()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelCraftingRecipe_SizeOf_Id");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelCraftingRecipe_SizeOf_Id Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelCraftingTag_SizeOf_TagId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelCraftingTag_SizeOf_TagId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelCraftingTag_SizeOf_TagId");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelCraftingTag_SizeOf_TagId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelCuverTableSource_SizeOf_Id
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelCuverTableSource_SizeOf_Id()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelCuverTableSource_SizeOf_Id");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelCuverTableSource_SizeOf_Id Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelDLCContent_SizeOf_AppId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelDLCContent_SizeOf_AppId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelDLCContent_SizeOf_AppId");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelDLCContent_SizeOf_AppId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelDLCPacket_SizeOf_AppId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelDLCPacket_SizeOf_AppId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelDLCPacket_SizeOf_AppId");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelDLCPacket_SizeOf_AppId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelDLCPacket_SizeOf_AppIdItemId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelDLCPacket_SizeOf_AppIdItemId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelDLCPacket_SizeOf_AppIdItemId");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelDLCPacket_SizeOf_AppIdItemId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelErrorCode_SizeOf_ErrorCode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelErrorCode_SizeOf_ErrorCode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelErrorCode_SizeOf_ErrorCode");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelErrorCode_SizeOf_ErrorCode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelFacade_SizeOf_Id
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelFacade_SizeOf_Id()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelFacade_SizeOf_Id");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelFacade_SizeOf_Id Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelFacade_SizeOf_SuitId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelFacade_SizeOf_SuitId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelFacade_SizeOf_SuitId");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelFacade_SizeOf_SuitId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelFacadeSort_SizeOf_ThirdSort
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelFacadeSort_SizeOf_ThirdSort()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelFacadeSort_SizeOf_ThirdSort");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelFacadeSort_SizeOf_ThirdSort Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelGearDismantle_SizeOf_ItemId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelGearDismantle_SizeOf_ItemId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelGearDismantle_SizeOf_ItemId");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelGearDismantle_SizeOf_ItemId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelGearDurability_SizeOf_EquipTypeRarity
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelGearDurability_SizeOf_EquipTypeRarity()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelGearDurability_SizeOf_EquipTypeRarity");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelGearDurability_SizeOf_EquipTypeRarity Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelGearGemGuide_SizeOf_Id
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelGearGemGuide_SizeOf_Id()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelGearGemGuide_SizeOf_Id");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelGearGemGuide_SizeOf_Id Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelGearGemGuide_SizeOf_InstId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelGearGemGuide_SizeOf_InstId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelGearGemGuide_SizeOf_InstId");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelGearGemGuide_SizeOf_InstId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelGearGemInst_SizeOf_ItemId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelGearGemInst_SizeOf_ItemId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelGearGemInst_SizeOf_ItemId");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelGearGemInst_SizeOf_ItemId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelGearHeirloomGuide_SizeOf_Id
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelGearHeirloomGuide_SizeOf_Id()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelGearHeirloomGuide_SizeOf_Id");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelGearHeirloomGuide_SizeOf_Id Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelGearHeirloomGuide_SizeOf_InstId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelGearHeirloomGuide_SizeOf_InstId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelGearHeirloomGuide_SizeOf_InstId");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelGearHeirloomGuide_SizeOf_InstId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelGearSoulBoundCost_SizeOf_Count
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelGearSoulBoundCost_SizeOf_Count()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelGearSoulBoundCost_SizeOf_Count");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelGearSoulBoundCost_SizeOf_Count Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelGearSoulBoundWearPartRandom_SizeOf_GroupId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelGearSoulBoundWearPartRandom_SizeOf_GroupId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelGearSoulBoundWearPartRandom_SizeOf_GroupId");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelGearSoulBoundWearPartRandom_SizeOf_GroupId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelGearTemplate_SizeOf_ItemId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelGearTemplate_SizeOf_ItemId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelGearTemplate_SizeOf_ItemId");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelGearTemplate_SizeOf_ItemId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelImmaculateTrialGrade_SizeOf_ActivityRuleId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelImmaculateTrialGrade_SizeOf_ActivityRuleId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelImmaculateTrialGrade_SizeOf_ActivityRuleId");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelImmaculateTrialGrade_SizeOf_ActivityRuleId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelImmaculateTrialGrade_SizeOf_GradeId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelImmaculateTrialGrade_SizeOf_GradeId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelImmaculateTrialGrade_SizeOf_GradeId");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelImmaculateTrialGrade_SizeOf_GradeId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelImmaculateTrialRandomRewards_SizeOf_RandomRewardIdCareerTypeId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelImmaculateTrialRandomRewards_SizeOf_RandomRewardIdCareerTypeId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelImmaculateTrialRandomRewards_SizeOf_RandomRewardIdCareerTypeId");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelImmaculateTrialRandomRewards_SizeOf_RandomRewardIdCareerTypeId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelImmaculateTrialRule_SizeOf_ActivityRuleId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelImmaculateTrialRule_SizeOf_ActivityRuleId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelImmaculateTrialRule_SizeOf_ActivityRuleId");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelImmaculateTrialRule_SizeOf_ActivityRuleId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelItemDropItem_SizeOf_RandomId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelItemDropItem_SizeOf_RandomId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelItemDropItem_SizeOf_RandomId");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelItemDropItem_SizeOf_RandomId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelItemLootRate_SizeOf_RandomId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelItemLootRate_SizeOf_RandomId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelItemLootRate_SizeOf_RandomId");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelItemLootRate_SizeOf_RandomId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelItemMagicFound_SizeOf_Level
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelItemMagicFound_SizeOf_Level()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelItemMagicFound_SizeOf_Level");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelItemMagicFound_SizeOf_Level Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelItemRouter_SizeOf_ItemComingEnumItemTypeEnum
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelItemRouter_SizeOf_ItemComingEnumItemTypeEnum()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelItemRouter_SizeOf_ItemComingEnumItemTypeEnum");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelItemRouter_SizeOf_ItemComingEnumItemTypeEnum Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelItemType_SizeOf_SkinThirdSort
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelItemType_SizeOf_SkinThirdSort()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelItemType_SizeOf_SkinThirdSort");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelItemType_SizeOf_SkinThirdSort Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelItemType_SizeOf_TypeId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelItemType_SizeOf_TypeId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelItemType_SizeOf_TypeId");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelItemType_SizeOf_TypeId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelLevelType_SizeOf_LevelType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelLevelType_SizeOf_LevelType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelLevelType_SizeOf_LevelType");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelLevelType_SizeOf_LevelType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelLootChooseGroupRate_SizeOf_LootId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelLootChooseGroupRate_SizeOf_LootId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelLootChooseGroupRate_SizeOf_LootId");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelLootChooseGroupRate_SizeOf_LootId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelLootDisableLootId_SizeOf_LootId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelLootDisableLootId_SizeOf_LootId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelLootDisableLootId_SizeOf_LootId");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelLootDisableLootId_SizeOf_LootId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelLootRarePoolCntLimit_SizeOf_ItemId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelLootRarePoolCntLimit_SizeOf_ItemId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelLootRarePoolCntLimit_SizeOf_ItemId");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelLootRarePoolCntLimit_SizeOf_ItemId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelLootRarePoolItemRate_SizeOf_RandomId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelLootRarePoolItemRate_SizeOf_RandomId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelLootRarePoolItemRate_SizeOf_RandomId");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelLootRarePoolItemRate_SizeOf_RandomId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelLootSourceMap_SizeOf_Name
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelLootSourceMap_SizeOf_Name()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelLootSourceMap_SizeOf_Name");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelLootSourceMap_SizeOf_Name Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelLootUeSourceChooseGroup_SizeOf_UeLootSourceIdMapIdLootType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelLootUeSourceChooseGroup_SizeOf_UeLootSourceIdMapIdLootType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelLootUeSourceChooseGroup_SizeOf_UeLootSourceIdMapIdLootType");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelLootUeSourceChooseGroup_SizeOf_UeLootSourceIdMapIdLootType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelLootUnluckyValue_SizeOf_RuleId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelLootUnluckyValue_SizeOf_RuleId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelLootUnluckyValue_SizeOf_RuleId");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelLootUnluckyValue_SizeOf_RuleId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelLotteryAccessKey_SizeOf_TypeId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelLotteryAccessKey_SizeOf_TypeId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelLotteryAccessKey_SizeOf_TypeId");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelLotteryAccessKey_SizeOf_TypeId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelLotteryPool_SizeOf_Id
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelLotteryPool_SizeOf_Id()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelLotteryPool_SizeOf_Id");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelLotteryPool_SizeOf_Id Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelMailTemplate_SizeOf_TypeId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelMailTemplate_SizeOf_TypeId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelMailTemplate_SizeOf_TypeId");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelMailTemplate_SizeOf_TypeId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelMapDetail_SizeOf_MapId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelMapDetail_SizeOf_MapId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelMapDetail_SizeOf_MapId");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelMapDetail_SizeOf_MapId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelMapExp_SizeOf_MapIdAliveTime
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelMapExp_SizeOf_MapIdAliveTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelMapExp_SizeOf_MapIdAliveTime");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelMapExp_SizeOf_MapIdAliveTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelMapSelect_SizeOf_LevelId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelMapSelect_SizeOf_LevelId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelMapSelect_SizeOf_LevelId");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelMapSelect_SizeOf_LevelId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelMapSelect_SizeOf_MapNameId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelMapSelect_SizeOf_MapNameId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelMapSelect_SizeOf_MapNameId");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelMapSelect_SizeOf_MapNameId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelMapSelectModelFeature_SizeOf_ModelFeatureId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelMapSelectModelFeature_SizeOf_ModelFeatureId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelMapSelectModelFeature_SizeOf_ModelFeatureId");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelMapSelectModelFeature_SizeOf_ModelFeatureId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelMarketInfo_SizeOf_Market
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelMarketInfo_SizeOf_Market()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelMarketInfo_SizeOf_Market");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelMarketInfo_SizeOf_Market Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelMarketPoorMan_SizeOf_RoleTypeId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelMarketPoorMan_SizeOf_RoleTypeId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelMarketPoorMan_SizeOf_RoleTypeId");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelMarketPoorMan_SizeOf_RoleTypeId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelMarketPopupVideo_SizeOf_PopupVideoId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelMarketPopupVideo_SizeOf_PopupVideoId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelMarketPopupVideo_SizeOf_PopupVideoId");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelMarketPopupVideo_SizeOf_PopupVideoId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelMarketProductItem_SizeOf_Market
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelMarketProductItem_SizeOf_Market()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelMarketProductItem_SizeOf_Market");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelMarketProductItem_SizeOf_Market Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelMarketProductItem_SizeOf_MarketTabId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelMarketProductItem_SizeOf_MarketTabId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelMarketProductItem_SizeOf_MarketTabId");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelMarketProductItem_SizeOf_MarketTabId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelMarketProductItem_SizeOf_ProductId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelMarketProductItem_SizeOf_ProductId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelMarketProductItem_SizeOf_ProductId");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelMarketProductItem_SizeOf_ProductId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelMarketRefreshPool_SizeOf_RefreshPoolId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelMarketRefreshPool_SizeOf_RefreshPoolId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelMarketRefreshPool_SizeOf_RefreshPoolId");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelMarketRefreshPool_SizeOf_RefreshPoolId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelMarketSpecialCost_SizeOf_ProductId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelMarketSpecialCost_SizeOf_ProductId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelMarketSpecialCost_SizeOf_ProductId");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelMarketSpecialCost_SizeOf_ProductId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelMarketTabInfo_SizeOf_Market
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelMarketTabInfo_SizeOf_Market()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelMarketTabInfo_SizeOf_Market");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelMarketTabInfo_SizeOf_Market Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelMatchingAddRobotRule_SizeOf_UserCount
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelMatchingAddRobotRule_SizeOf_UserCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelMatchingAddRobotRule_SizeOf_UserCount");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelMatchingAddRobotRule_SizeOf_UserCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelMatchingBattleRankStatistics_SizeOf_BattleRankTypeCount
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelMatchingBattleRankStatistics_SizeOf_BattleRankTypeCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelMatchingBattleRankStatistics_SizeOf_BattleRankTypeCount");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelMatchingBattleRankStatistics_SizeOf_BattleRankTypeCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelMatchingBattleRankStatistics_SizeOf_Type
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelMatchingBattleRankStatistics_SizeOf_Type()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelMatchingBattleRankStatistics_SizeOf_Type");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelMatchingBattleRankStatistics_SizeOf_Type Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelMatchingContinuousSuccessOrFailureAdding_SizeOf_Times
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelMatchingContinuousSuccessOrFailureAdding_SizeOf_Times()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelMatchingContinuousSuccessOrFailureAdding_SizeOf_Times");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelMatchingContinuousSuccessOrFailureAdding_SizeOf_Times Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelMatchingFactionTemplate_SizeOf_Id
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelMatchingFactionTemplate_SizeOf_Id()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelMatchingFactionTemplate_SizeOf_Id");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelMatchingFactionTemplate_SizeOf_Id Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelMatchingPool_SizeOf_Id
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelMatchingPool_SizeOf_Id()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelMatchingPool_SizeOf_Id");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelMatchingPool_SizeOf_Id Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelMatchingResultTemplate_SizeOf_Id
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelMatchingResultTemplate_SizeOf_Id()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelMatchingResultTemplate_SizeOf_Id");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelMatchingResultTemplate_SizeOf_Id Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelMatchingRule_SizeOf_Id
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelMatchingRule_SizeOf_Id()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelMatchingRule_SizeOf_Id");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelMatchingRule_SizeOf_Id Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelMatchingRuleGroup_SizeOf_GroupId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelMatchingRuleGroup_SizeOf_GroupId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelMatchingRuleGroup_SizeOf_GroupId");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelMatchingRuleGroup_SizeOf_GroupId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelMithrilForceItem_SizeOf_Id
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelMithrilForceItem_SizeOf_Id()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelMithrilForceItem_SizeOf_Id");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelMithrilForceItem_SizeOf_Id Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelMithrilForcePrestige_SizeOf_Level
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelMithrilForcePrestige_SizeOf_Level()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelMithrilForcePrestige_SizeOf_Level");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelMithrilForcePrestige_SizeOf_Level Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelMithrilForceSettlement_SizeOf_Damage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelMithrilForceSettlement_SizeOf_Damage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelMithrilForceSettlement_SizeOf_Damage");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelMithrilForceSettlement_SizeOf_Damage Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelMithrilForceSettlementFactor_SizeOf_Damage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelMithrilForceSettlementFactor_SizeOf_Damage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelMithrilForceSettlementFactor_SizeOf_Damage");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelMithrilForceSettlementFactor_SizeOf_Damage Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelModuleUnlockCircular_SizeOf_Id
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelModuleUnlockCircular_SizeOf_Id()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelModuleUnlockCircular_SizeOf_Id");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelModuleUnlockCircular_SizeOf_Id Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelModuleUnlockType_SizeOf_ModuleId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelModuleUnlockType_SizeOf_ModuleId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelModuleUnlockType_SizeOf_ModuleId");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelModuleUnlockType_SizeOf_ModuleId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelModuleUnlockType_SizeOf_ModuleName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelModuleUnlockType_SizeOf_ModuleName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelModuleUnlockType_SizeOf_ModuleName");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelModuleUnlockType_SizeOf_ModuleName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelOriginConstConfig_SizeOf_Key
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelOriginConstConfig_SizeOf_Key()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelOriginConstConfig_SizeOf_Key");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelOriginConstConfig_SizeOf_Key Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelQuestGroupList_SizeOf_Id
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelQuestGroupList_SizeOf_Id()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelQuestGroupList_SizeOf_Id");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelQuestGroupList_SizeOf_Id Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelQuestList_SizeOf_ActivityId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelQuestList_SizeOf_ActivityId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelQuestList_SizeOf_ActivityId");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelQuestList_SizeOf_ActivityId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelQuestList_SizeOf_ClientSubmitType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelQuestList_SizeOf_ClientSubmitType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelQuestList_SizeOf_ClientSubmitType");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelQuestList_SizeOf_ClientSubmitType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelQuestList_SizeOf_Id
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelQuestList_SizeOf_Id()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelQuestList_SizeOf_Id");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelQuestList_SizeOf_Id Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelQuestList_SizeOf_RandomPoolId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelQuestList_SizeOf_RandomPoolId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelQuestList_SizeOf_RandomPoolId");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelQuestList_SizeOf_RandomPoolId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelQuestProgressCondition_SizeOf_Id
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelQuestProgressCondition_SizeOf_Id()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelQuestProgressCondition_SizeOf_Id");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelQuestProgressCondition_SizeOf_Id Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelQuestProgressType_SizeOf_Id
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelQuestProgressType_SizeOf_Id()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelQuestProgressType_SizeOf_Id");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelQuestProgressType_SizeOf_Id Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelQuestTriggerEventType_SizeOf_Id
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelQuestTriggerEventType_SizeOf_Id()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelQuestTriggerEventType_SizeOf_Id");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelQuestTriggerEventType_SizeOf_Id Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelRankPeriodRewardPool_SizeOf_RankRewardPoolId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelRankPeriodRewardPool_SizeOf_RankRewardPoolId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelRankPeriodRewardPool_SizeOf_RankRewardPoolId");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelRankPeriodRewardPool_SizeOf_RankRewardPoolId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelRankReportSetting_SizeOf_RankTypeRankInstanceId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelRankReportSetting_SizeOf_RankTypeRankInstanceId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelRankReportSetting_SizeOf_RankTypeRankInstanceId");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelRankReportSetting_SizeOf_RankTypeRankInstanceId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelRankRule_SizeOf_BanId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelRankRule_SizeOf_BanId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelRankRule_SizeOf_BanId");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelRankRule_SizeOf_BanId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelRankRule_SizeOf_RankTypeRankInstanceId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelRankRule_SizeOf_RankTypeRankInstanceId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelRankRule_SizeOf_RankTypeRankInstanceId");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelRankRule_SizeOf_RankTypeRankInstanceId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelRobotFaction_SizeOf_RobotFactionTempleteId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelRobotFaction_SizeOf_RobotFactionTempleteId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelRobotFaction_SizeOf_RobotFactionTempleteId");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelRobotFaction_SizeOf_RobotFactionTempleteId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelRobotNameDatabase_SizeOf_RaceGenderRobotName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelRobotNameDatabase_SizeOf_RaceGenderRobotName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelRobotNameDatabase_SizeOf_RaceGenderRobotName");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelRobotNameDatabase_SizeOf_RaceGenderRobotName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelRobotNormalFaction_SizeOf_RobotFactionTempleteId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelRobotNormalFaction_SizeOf_RobotFactionTempleteId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelRobotNormalFaction_SizeOf_RobotFactionTempleteId");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelRobotNormalFaction_SizeOf_RobotFactionTempleteId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelRobotTemplate_SizeOf_RobotTempleteId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelRobotTemplate_SizeOf_RobotTempleteId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelRobotTemplate_SizeOf_RobotTempleteId");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelRobotTemplate_SizeOf_RobotTempleteId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelRoleDefaultEquipment_SizeOf_ConfigId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelRoleDefaultEquipment_SizeOf_ConfigId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelRoleDefaultEquipment_SizeOf_ConfigId");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelRoleDefaultEquipment_SizeOf_ConfigId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelRoleFacePinchingLimit_SizeOf_RaceGenderFacePinching
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelRoleFacePinchingLimit_SizeOf_RaceGenderFacePinching()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelRoleFacePinchingLimit_SizeOf_RaceGenderFacePinching");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelRoleFacePinchingLimit_SizeOf_RaceGenderFacePinching Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelRoleHeadIcon_SizeOf_TypeGenderFaceSkincolor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelRoleHeadIcon_SizeOf_TypeGenderFaceSkincolor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelRoleHeadIcon_SizeOf_TypeGenderFaceSkincolor");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelRoleHeadIcon_SizeOf_TypeGenderFaceSkincolor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelRoleLevelExp_SizeOf_Level
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelRoleLevelExp_SizeOf_Level()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelRoleLevelExp_SizeOf_Level");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelRoleLevelExp_SizeOf_Level Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelRoleLevelUpgrade_SizeOf_RoleTypeAndLevel
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelRoleLevelUpgrade_SizeOf_RoleTypeAndLevel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelRoleLevelUpgrade_SizeOf_RoleTypeAndLevel");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelRoleLevelUpgrade_SizeOf_RoleTypeAndLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelRoleLevelUpgrade_SizeOf_RoleTypeId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelRoleLevelUpgrade_SizeOf_RoleTypeId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelRoleLevelUpgrade_SizeOf_RoleTypeId");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelRoleLevelUpgrade_SizeOf_RoleTypeId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelRoleSkill_SizeOf_SkillId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelRoleSkill_SizeOf_SkillId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelRoleSkill_SizeOf_SkillId");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelRoleSkill_SizeOf_SkillId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelRoleSkinType_SizeOf_SkinId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelRoleSkinType_SizeOf_SkinId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelRoleSkinType_SizeOf_SkinId");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelRoleSkinType_SizeOf_SkinId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelRoleType_SizeOf_Force
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelRoleType_SizeOf_Force()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelRoleType_SizeOf_Force");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelRoleType_SizeOf_Force Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelRoleType_SizeOf_TypeId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelRoleType_SizeOf_TypeId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelRoleType_SizeOf_TypeId");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelRoleType_SizeOf_TypeId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelSeasonRule_SizeOf_SeasonId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelSeasonRule_SizeOf_SeasonId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelSeasonRule_SizeOf_SeasonId");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelSeasonRule_SizeOf_SeasonId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelSkillCalculate_SizeOf_Id
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelSkillCalculate_SizeOf_Id()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelSkillCalculate_SizeOf_Id");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelSkillCalculate_SizeOf_Id Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelSkillNumExchange_SizeOf_Id
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelSkillNumExchange_SizeOf_Id()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelSkillNumExchange_SizeOf_Id");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelSkillNumExchange_SizeOf_Id Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelTradeCommodity_SizeOf_IdMarketId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelTradeCommodity_SizeOf_IdMarketId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelTradeCommodity_SizeOf_IdMarketId");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelTradeCommodity_SizeOf_IdMarketId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelTradeCommodity_SizeOf_MarketId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelTradeCommodity_SizeOf_MarketId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelTradeCommodity_SizeOf_MarketId");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelTradeCommodity_SizeOf_MarketId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelTradeCommodity_SizeOf_MarketIdItemId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelTradeCommodity_SizeOf_MarketIdItemId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelTradeCommodity_SizeOf_MarketIdItemId");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelTradeCommodity_SizeOf_MarketIdItemId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelTradeItemRequire_SizeOf_Id
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelTradeItemRequire_SizeOf_Id()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelTradeItemRequire_SizeOf_Id");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelTradeItemRequire_SizeOf_Id Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelTradeMarket_SizeOf_CalculatePoolId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelTradeMarket_SizeOf_CalculatePoolId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelTradeMarket_SizeOf_CalculatePoolId");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelTradeMarket_SizeOf_CalculatePoolId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelTradeMarket_SizeOf_Id
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelTradeMarket_SizeOf_Id()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelTradeMarket_SizeOf_Id");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelTradeMarket_SizeOf_Id Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelTradeMarket_SizeOf_MarketType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelTradeMarket_SizeOf_MarketType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelTradeMarket_SizeOf_MarketType");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelTradeMarket_SizeOf_MarketType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelTradeStandardPrice_SizeOf_Id
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelTradeStandardPrice_SizeOf_Id()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelTradeStandardPrice_SizeOf_Id");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelTradeStandardPrice_SizeOf_Id Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelTradeValidPrice_SizeOf_Id
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelTradeValidPrice_SizeOf_Id()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelTradeValidPrice_SizeOf_Id");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelTradeValidPrice_SizeOf_Id Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetExcelTradeValidTime_SizeOf_Id
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetExcelTradeValidTime_SizeOf_Id()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetExcelTradeValidTime_SizeOf_Id");

	Params::ExcelLoaderConfigGroupWrapper_GetExcelTradeValidTime_SizeOf_Id Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelActivityCenter_Of_ExpItemType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   ExpItemType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelActivityCenter*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelActivityCenter* UExcelLoaderConfigGroupWrapper::GetRowExcelActivityCenter_Of_ExpItemType(int32 ExpItemType, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelActivityCenter_Of_ExpItemType");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelActivityCenter_Of_ExpItemType Parms{};

	Parms.ExpItemType = ExpItemType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelActivityCenter_Of_Id
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   ID                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelActivityCenter*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelActivityCenter* UExcelLoaderConfigGroupWrapper::GetRowExcelActivityCenter_Of_Id(int32 ID, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelActivityCenter_Of_Id");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelActivityCenter_Of_Id Parms{};

	Parms.ID = ID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelActivityCenterPassprotsReards_AllOf_ActivityId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   ActivityId                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UExcelLoaderTgfConfigExcelActivityCenterPassprotsReards*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelActivityCenterPassprotsReards*> UExcelLoaderConfigGroupWrapper::GetRowExcelActivityCenterPassprotsReards_AllOf_ActivityId(int32 ActivityId, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelActivityCenterPassprotsReards_AllOf_ActivityId");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelActivityCenterPassprotsReards_AllOf_ActivityId Parms{};

	Parms.ActivityId = ActivityId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelActivityCenterPassprotsReards_Of_ActivityId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   ActivityId                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelActivityCenterPassprotsReards*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelActivityCenterPassprotsReards* UExcelLoaderConfigGroupWrapper::GetRowExcelActivityCenterPassprotsReards_Of_ActivityId(int32 ActivityId, int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelActivityCenterPassprotsReards_Of_ActivityId");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelActivityCenterPassprotsReards_Of_ActivityId Parms{};

	Parms.ActivityId = ActivityId;
	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelActivityCenterPassprotsReards_Of_Id
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   ID                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelActivityCenterPassprotsReards*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelActivityCenterPassprotsReards* UExcelLoaderConfigGroupWrapper::GetRowExcelActivityCenterPassprotsReards_Of_Id(int32 ID, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelActivityCenterPassprotsReards_Of_Id");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelActivityCenterPassprotsReards_Of_Id Parms{};

	Parms.ID = ID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelActivityCenterPassprotsReards_Of_Level
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   Level                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelActivityCenterPassprotsReards*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelActivityCenterPassprotsReards* UExcelLoaderConfigGroupWrapper::GetRowExcelActivityCenterPassprotsReards_Of_Level(int32 Level, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelActivityCenterPassprotsReards_Of_Level");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelActivityCenterPassprotsReards_Of_Level Parms{};

	Parms.Level = Level;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelActivityCenterRandomRewards_Of_ActivityIdCareerTypeId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   ActivityId                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CareerTypeId                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelActivityCenterRandomRewards*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelActivityCenterRandomRewards* UExcelLoaderConfigGroupWrapper::GetRowExcelActivityCenterRandomRewards_Of_ActivityIdCareerTypeId(int32 ActivityId, int32 CareerTypeId, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelActivityCenterRandomRewards_Of_ActivityIdCareerTypeId");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelActivityCenterRandomRewards_Of_ActivityIdCareerTypeId Parms{};

	Parms.ActivityId = ActivityId;
	Parms.CareerTypeId = CareerTypeId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelActivityCenterRandomRewards_Of_Id
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   ID                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelActivityCenterRandomRewards*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelActivityCenterRandomRewards* UExcelLoaderConfigGroupWrapper::GetRowExcelActivityCenterRandomRewards_Of_Id(int32 ID, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelActivityCenterRandomRewards_Of_Id");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelActivityCenterRandomRewards_Of_Id Parms{};

	Parms.ID = ID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelActivityCenterRandomRewardsPool_Of_Id
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   ID                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelActivityCenterRandomRewardsPool*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelActivityCenterRandomRewardsPool* UExcelLoaderConfigGroupWrapper::GetRowExcelActivityCenterRandomRewardsPool_Of_Id(int32 ID, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelActivityCenterRandomRewardsPool_Of_Id");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelActivityCenterRandomRewardsPool_Of_Id Parms{};

	Parms.ID = ID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelAffixAbilitySetId_Of_AffixIndexId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   AffixIndexId                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelAffixAbilitySetId*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelAffixAbilitySetId* UExcelLoaderConfigGroupWrapper::GetRowExcelAffixAbilitySetId_Of_AffixIndexId(int32 AffixIndexId, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelAffixAbilitySetId_Of_AffixIndexId");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelAffixAbilitySetId_Of_AffixIndexId Parms{};

	Parms.AffixIndexId = AffixIndexId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelAffixCountRandomPool_AllOf_AffixCountPoolId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   AffixCountPoolId                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UExcelLoaderTgfConfigExcelAffixCountRandomPool*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelAffixCountRandomPool*> UExcelLoaderConfigGroupWrapper::GetRowExcelAffixCountRandomPool_AllOf_AffixCountPoolId(int32 AffixCountPoolId, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelAffixCountRandomPool_AllOf_AffixCountPoolId");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelAffixCountRandomPool_AllOf_AffixCountPoolId Parms{};

	Parms.AffixCountPoolId = AffixCountPoolId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelAffixCountRandomPool_Of_AffixCountPoolId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   AffixCountPoolId                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelAffixCountRandomPool*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelAffixCountRandomPool* UExcelLoaderConfigGroupWrapper::GetRowExcelAffixCountRandomPool_Of_AffixCountPoolId(int32 AffixCountPoolId, int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelAffixCountRandomPool_Of_AffixCountPoolId");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelAffixCountRandomPool_Of_AffixCountPoolId Parms{};

	Parms.AffixCountPoolId = AffixCountPoolId;
	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelAffixGearSetMapRule_Of_GearSetType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   GearSetType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelAffixGearSetMapRule*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelAffixGearSetMapRule* UExcelLoaderConfigGroupWrapper::GetRowExcelAffixGearSetMapRule_Of_GearSetType(int32 GearSetType, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelAffixGearSetMapRule_Of_GearSetType");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelAffixGearSetMapRule_Of_GearSetType Parms{};

	Parms.GearSetType = GearSetType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelAffixGearSetRule_AllOf_GearSetType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   GearSetType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UExcelLoaderTgfConfigExcelAffixGearSetRule*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelAffixGearSetRule*> UExcelLoaderConfigGroupWrapper::GetRowExcelAffixGearSetRule_AllOf_GearSetType(int32 GearSetType, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelAffixGearSetRule_AllOf_GearSetType");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelAffixGearSetRule_AllOf_GearSetType Parms{};

	Parms.GearSetType = GearSetType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelAffixGearSetRule_Of_GearSetType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   GearSetType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelAffixGearSetRule*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelAffixGearSetRule* UExcelLoaderConfigGroupWrapper::GetRowExcelAffixGearSetRule_Of_GearSetType(int32 GearSetType, int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelAffixGearSetRule_Of_GearSetType");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelAffixGearSetRule_Of_GearSetType Parms{};

	Parms.GearSetType = GearSetType;
	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelAffixGearSetRule_Of_GearSetTypeLevel
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   GearSetType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Level                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelAffixGearSetRule*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelAffixGearSetRule* UExcelLoaderConfigGroupWrapper::GetRowExcelAffixGearSetRule_Of_GearSetTypeLevel(int32 GearSetType, int32 Level, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelAffixGearSetRule_Of_GearSetTypeLevel");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelAffixGearSetRule_Of_GearSetTypeLevel Parms{};

	Parms.GearSetType = GearSetType;
	Parms.Level = Level;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelAffixLegendaryRule_Of_AffixAliasId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   AffixAliasId                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelAffixLegendaryRule*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelAffixLegendaryRule* UExcelLoaderConfigGroupWrapper::GetRowExcelAffixLegendaryRule_Of_AffixAliasId(int32 AffixAliasId, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelAffixLegendaryRule_Of_AffixAliasId");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelAffixLegendaryRule_Of_AffixAliasId Parms{};

	Parms.AffixAliasId = AffixAliasId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelAffixLevelPoolRule_AllOf_RuleId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   RuleId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UExcelLoaderTgfConfigExcelAffixLevelPoolRule*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelAffixLevelPoolRule*> UExcelLoaderConfigGroupWrapper::GetRowExcelAffixLevelPoolRule_AllOf_RuleId(int32 RuleId, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelAffixLevelPoolRule_AllOf_RuleId");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelAffixLevelPoolRule_AllOf_RuleId Parms{};

	Parms.RuleId = RuleId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelAffixLevelPoolRule_Of_RuleId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   RuleId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelAffixLevelPoolRule*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelAffixLevelPoolRule* UExcelLoaderConfigGroupWrapper::GetRowExcelAffixLevelPoolRule_Of_RuleId(int32 RuleId, int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelAffixLevelPoolRule_Of_RuleId");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelAffixLevelPoolRule_Of_RuleId Parms{};

	Parms.RuleId = RuleId;
	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelAffixLevelPoolRule_Of_RuleIdLevelId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   RuleId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   LevelId                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelAffixLevelPoolRule*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelAffixLevelPoolRule* UExcelLoaderConfigGroupWrapper::GetRowExcelAffixLevelPoolRule_Of_RuleIdLevelId(int32 RuleId, int32 LevelId, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelAffixLevelPoolRule_Of_RuleIdLevelId");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelAffixLevelPoolRule_Of_RuleIdLevelId Parms{};

	Parms.RuleId = RuleId;
	Parms.LevelId = LevelId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelAffixMonsterPoolRule_AllOf_RuleId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   RuleId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UExcelLoaderTgfConfigExcelAffixMonsterPoolRule*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelAffixMonsterPoolRule*> UExcelLoaderConfigGroupWrapper::GetRowExcelAffixMonsterPoolRule_AllOf_RuleId(int32 RuleId, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelAffixMonsterPoolRule_AllOf_RuleId");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelAffixMonsterPoolRule_AllOf_RuleId Parms{};

	Parms.RuleId = RuleId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelAffixMonsterPoolRule_Of_RuleId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   RuleId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelAffixMonsterPoolRule*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelAffixMonsterPoolRule* UExcelLoaderConfigGroupWrapper::GetRowExcelAffixMonsterPoolRule_Of_RuleId(int32 RuleId, int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelAffixMonsterPoolRule_Of_RuleId");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelAffixMonsterPoolRule_Of_RuleId Parms{};

	Parms.RuleId = RuleId;
	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelAffixMonsterPoolRule_Of_RuleIdMonsterIdLevelId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   RuleId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   MonsterId                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   LevelId                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelAffixMonsterPoolRule*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelAffixMonsterPoolRule* UExcelLoaderConfigGroupWrapper::GetRowExcelAffixMonsterPoolRule_Of_RuleIdMonsterIdLevelId(int32 RuleId, int32 MonsterId, int32 LevelId, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelAffixMonsterPoolRule_Of_RuleIdMonsterIdLevelId");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelAffixMonsterPoolRule_Of_RuleIdMonsterIdLevelId Parms{};

	Parms.RuleId = RuleId;
	Parms.MonsterId = MonsterId;
	Parms.LevelId = LevelId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelAffixPool_Of_AffixPoolId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   AffixPoolId                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelAffixPool*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelAffixPool* UExcelLoaderConfigGroupWrapper::GetRowExcelAffixPool_Of_AffixPoolId(int32 AffixPoolId, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelAffixPool_Of_AffixPoolId");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelAffixPool_Of_AffixPoolId Parms{};

	Parms.AffixPoolId = AffixPoolId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelAffixTemplate_Of_ItemId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   ItemId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelAffixTemplate*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelAffixTemplate* UExcelLoaderConfigGroupWrapper::GetRowExcelAffixTemplate_Of_ItemId(int32 ItemId, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelAffixTemplate_Of_ItemId");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelAffixTemplate_Of_ItemId Parms{};

	Parms.ItemId = ItemId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelAffixValueTemplate_AllOf_AffixValueId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   AffixValueId                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UExcelLoaderTgfConfigExcelAffixValueTemplate*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelAffixValueTemplate*> UExcelLoaderConfigGroupWrapper::GetRowExcelAffixValueTemplate_AllOf_AffixValueId(int32 AffixValueId, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelAffixValueTemplate_AllOf_AffixValueId");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelAffixValueTemplate_AllOf_AffixValueId Parms{};

	Parms.AffixValueId = AffixValueId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelAffixValueTemplate_Of_AffixValueId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   AffixValueId                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelAffixValueTemplate*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelAffixValueTemplate* UExcelLoaderConfigGroupWrapper::GetRowExcelAffixValueTemplate_Of_AffixValueId(int32 AffixValueId, int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelAffixValueTemplate_Of_AffixValueId");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelAffixValueTemplate_Of_AffixValueId Parms{};

	Parms.AffixValueId = AffixValueId;
	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelAffixValueTemplate_Of_AffixValueIdAttributeType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   AffixValueId                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   AttributeType                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelAffixValueTemplate*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelAffixValueTemplate* UExcelLoaderConfigGroupWrapper::GetRowExcelAffixValueTemplate_Of_AffixValueIdAttributeType(int32 AffixValueId, int32 AttributeType, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelAffixValueTemplate_Of_AffixValueIdAttributeType");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelAffixValueTemplate_Of_AffixValueIdAttributeType Parms{};

	Parms.AffixValueId = AffixValueId;
	Parms.AttributeType = AttributeType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelBattleAbilitySetDescription_Of_AbilitySetIdLevel
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   AbilitySetId                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Level                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelBattleAbilitySetDescription*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelBattleAbilitySetDescription* UExcelLoaderConfigGroupWrapper::GetRowExcelBattleAbilitySetDescription_Of_AbilitySetIdLevel(int32 AbilitySetId, int32 Level, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelBattleAbilitySetDescription_Of_AbilitySetIdLevel");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelBattleAbilitySetDescription_Of_AbilitySetIdLevel Parms{};

	Parms.AbilitySetId = AbilitySetId;
	Parms.Level = Level;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelBattleAffixEffectRule_AllOf_GroupIdRandomConditionIdAttributeType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   GroupID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   RandomConditionId                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   AttributeType                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UExcelLoaderTgfConfigExcelBattleAffixEffectRule*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelBattleAffixEffectRule*> UExcelLoaderConfigGroupWrapper::GetRowExcelBattleAffixEffectRule_AllOf_GroupIdRandomConditionIdAttributeType(int32 GroupID, int32 RandomConditionId, int32 AttributeType, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelBattleAffixEffectRule_AllOf_GroupIdRandomConditionIdAttributeType");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelBattleAffixEffectRule_AllOf_GroupIdRandomConditionIdAttributeType Parms{};

	Parms.GroupID = GroupID;
	Parms.RandomConditionId = RandomConditionId;
	Parms.AttributeType = AttributeType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelBattleAffixEffectRule_Of_GroupIdRandomConditionIdAttributeType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   GroupID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   RandomConditionId                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   AttributeType                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelBattleAffixEffectRule*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelBattleAffixEffectRule* UExcelLoaderConfigGroupWrapper::GetRowExcelBattleAffixEffectRule_Of_GroupIdRandomConditionIdAttributeType(int32 GroupID, int32 RandomConditionId, int32 AttributeType, int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelBattleAffixEffectRule_Of_GroupIdRandomConditionIdAttributeType");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelBattleAffixEffectRule_Of_GroupIdRandomConditionIdAttributeType Parms{};

	Parms.GroupID = GroupID;
	Parms.RandomConditionId = RandomConditionId;
	Parms.AttributeType = AttributeType;
	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelBattleAffixEffectRule_Of_IdAttributeType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   ID                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   AttributeType                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelBattleAffixEffectRule*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelBattleAffixEffectRule* UExcelLoaderConfigGroupWrapper::GetRowExcelBattleAffixEffectRule_Of_IdAttributeType(int32 ID, int32 AttributeType, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelBattleAffixEffectRule_Of_IdAttributeType");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelBattleAffixEffectRule_Of_IdAttributeType Parms{};

	Parms.ID = ID;
	Parms.AttributeType = AttributeType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelBattleAttributeDescription_Of_AttributeType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   AttributeType                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelBattleAttributeDescription*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelBattleAttributeDescription* UExcelLoaderConfigGroupWrapper::GetRowExcelBattleAttributeDescription_Of_AttributeType(int32 AttributeType, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelBattleAttributeDescription_Of_AttributeType");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelBattleAttributeDescription_Of_AttributeType Parms{};

	Parms.AttributeType = AttributeType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelChatChannelType_Of_ChatChannelType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   ChatChannelType                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelChatChannelType*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelChatChannelType* UExcelLoaderConfigGroupWrapper::GetRowExcelChatChannelType_Of_ChatChannelType(int64 ChatChannelType, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelChatChannelType_Of_ChatChannelType");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelChatChannelType_Of_ChatChannelType Parms{};

	Parms.ChatChannelType = ChatChannelType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelCompetitionLevel_AllOf_CompetitionLevelId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   CompetitionLevelId                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UExcelLoaderTgfConfigExcelCompetitionLevel*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelCompetitionLevel*> UExcelLoaderConfigGroupWrapper::GetRowExcelCompetitionLevel_AllOf_CompetitionLevelId(int32 CompetitionLevelId, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelCompetitionLevel_AllOf_CompetitionLevelId");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelCompetitionLevel_AllOf_CompetitionLevelId Parms{};

	Parms.CompetitionLevelId = CompetitionLevelId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelCompetitionLevel_Of_CompetitionLevelId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   CompetitionLevelId                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelCompetitionLevel*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelCompetitionLevel* UExcelLoaderConfigGroupWrapper::GetRowExcelCompetitionLevel_Of_CompetitionLevelId(int32 CompetitionLevelId, int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelCompetitionLevel_Of_CompetitionLevelId");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelCompetitionLevel_Of_CompetitionLevelId Parms{};

	Parms.CompetitionLevelId = CompetitionLevelId;
	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelCompetitionLevel_Of_CompetitionLevelIdSeasonId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   CompetitionLevelId                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SeasonId                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelCompetitionLevel*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelCompetitionLevel* UExcelLoaderConfigGroupWrapper::GetRowExcelCompetitionLevel_Of_CompetitionLevelIdSeasonId(int32 CompetitionLevelId, int32 SeasonId, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelCompetitionLevel_Of_CompetitionLevelIdSeasonId");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelCompetitionLevel_Of_CompetitionLevelIdSeasonId Parms{};

	Parms.CompetitionLevelId = CompetitionLevelId;
	Parms.SeasonId = SeasonId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelCraftingGroup_Of_GroupId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   GroupID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelCraftingGroup*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelCraftingGroup* UExcelLoaderConfigGroupWrapper::GetRowExcelCraftingGroup_Of_GroupId(int32 GroupID, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelCraftingGroup_Of_GroupId");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelCraftingGroup_Of_GroupId Parms{};

	Parms.GroupID = GroupID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelCraftingRecipe_Of_Id
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   ID                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelCraftingRecipe*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelCraftingRecipe* UExcelLoaderConfigGroupWrapper::GetRowExcelCraftingRecipe_Of_Id(int32 ID, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelCraftingRecipe_Of_Id");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelCraftingRecipe_Of_Id Parms{};

	Parms.ID = ID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelCraftingTag_Of_TagId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   TagId                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelCraftingTag*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelCraftingTag* UExcelLoaderConfigGroupWrapper::GetRowExcelCraftingTag_Of_TagId(int32 TagId, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelCraftingTag_Of_TagId");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelCraftingTag_Of_TagId Parms{};

	Parms.TagId = TagId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelCuverTableSource_Of_Id
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   ID                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelCuverTableSource*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelCuverTableSource* UExcelLoaderConfigGroupWrapper::GetRowExcelCuverTableSource_Of_Id(int32 ID, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelCuverTableSource_Of_Id");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelCuverTableSource_Of_Id Parms{};

	Parms.ID = ID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelDLCContent_Of_AppId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   AppId                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelDLCContent*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelDLCContent* UExcelLoaderConfigGroupWrapper::GetRowExcelDLCContent_Of_AppId(int32 AppId, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelDLCContent_Of_AppId");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelDLCContent_Of_AppId Parms{};

	Parms.AppId = AppId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelDLCPacket_AllOf_AppId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   AppId                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UExcelLoaderTgfConfigExcelDLCPacket*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelDLCPacket*> UExcelLoaderConfigGroupWrapper::GetRowExcelDLCPacket_AllOf_AppId(int32 AppId, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelDLCPacket_AllOf_AppId");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelDLCPacket_AllOf_AppId Parms{};

	Parms.AppId = AppId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelDLCPacket_Of_AppId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   AppId                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelDLCPacket*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelDLCPacket* UExcelLoaderConfigGroupWrapper::GetRowExcelDLCPacket_Of_AppId(int32 AppId, int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelDLCPacket_Of_AppId");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelDLCPacket_Of_AppId Parms{};

	Parms.AppId = AppId;
	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelDLCPacket_Of_AppIdItemId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   AppId                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ItemId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelDLCPacket*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelDLCPacket* UExcelLoaderConfigGroupWrapper::GetRowExcelDLCPacket_Of_AppIdItemId(int32 AppId, int32 ItemId, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelDLCPacket_Of_AppIdItemId");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelDLCPacket_Of_AppIdItemId Parms{};

	Parms.AppId = AppId;
	Parms.ItemId = ItemId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelErrorCode_Of_ErrorCode
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   ErrorCode                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelErrorCode*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelErrorCode* UExcelLoaderConfigGroupWrapper::GetRowExcelErrorCode_Of_ErrorCode(int32 ErrorCode, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelErrorCode_Of_ErrorCode");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelErrorCode_Of_ErrorCode Parms{};

	Parms.ErrorCode = ErrorCode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelFacade_AllOf_SuitId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   SuitId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UExcelLoaderTgfConfigExcelFacade*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelFacade*> UExcelLoaderConfigGroupWrapper::GetRowExcelFacade_AllOf_SuitId(int32 SuitId, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelFacade_AllOf_SuitId");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelFacade_AllOf_SuitId Parms{};

	Parms.SuitId = SuitId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelFacade_Of_Id
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   ID                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelFacade* ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelFacade* UExcelLoaderConfigGroupWrapper::GetRowExcelFacade_Of_Id(int32 ID, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelFacade_Of_Id");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelFacade_Of_Id Parms{};

	Parms.ID = ID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelFacade_Of_SuitId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   SuitId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelFacade* ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelFacade* UExcelLoaderConfigGroupWrapper::GetRowExcelFacade_Of_SuitId(int32 SuitId, int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelFacade_Of_SuitId");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelFacade_Of_SuitId Parms{};

	Parms.SuitId = SuitId;
	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelFacadeSort_Of_ThirdSort
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   ThirdSort                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelFacadeSort*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelFacadeSort* UExcelLoaderConfigGroupWrapper::GetRowExcelFacadeSort_Of_ThirdSort(int32 ThirdSort, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelFacadeSort_Of_ThirdSort");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelFacadeSort_Of_ThirdSort Parms{};

	Parms.ThirdSort = ThirdSort;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelGearDismantle_Of_ItemId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   ItemId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelGearDismantle*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelGearDismantle* UExcelLoaderConfigGroupWrapper::GetRowExcelGearDismantle_Of_ItemId(int32 ItemId, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelGearDismantle_Of_ItemId");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelGearDismantle_Of_ItemId Parms{};

	Parms.ItemId = ItemId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelGearDurability_Of_EquipTypeRarity
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   EquipType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Rarity                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelGearDurability*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelGearDurability* UExcelLoaderConfigGroupWrapper::GetRowExcelGearDurability_Of_EquipTypeRarity(int32 EquipType, int32 Rarity, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelGearDurability_Of_EquipTypeRarity");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelGearDurability_Of_EquipTypeRarity Parms{};

	Parms.EquipType = EquipType;
	Parms.Rarity = Rarity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelGearGemGuide_Of_Id
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   ID                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelGearGemGuide*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelGearGemGuide* UExcelLoaderConfigGroupWrapper::GetRowExcelGearGemGuide_Of_Id(int32 ID, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelGearGemGuide_Of_Id");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelGearGemGuide_Of_Id Parms{};

	Parms.ID = ID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelGearGemGuide_Of_InstId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   InstId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelGearGemGuide*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelGearGemGuide* UExcelLoaderConfigGroupWrapper::GetRowExcelGearGemGuide_Of_InstId(int32 InstId, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelGearGemGuide_Of_InstId");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelGearGemGuide_Of_InstId Parms{};

	Parms.InstId = InstId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelGearGemInst_Of_ItemId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   ItemId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelGearGemInst*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelGearGemInst* UExcelLoaderConfigGroupWrapper::GetRowExcelGearGemInst_Of_ItemId(int32 ItemId, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelGearGemInst_Of_ItemId");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelGearGemInst_Of_ItemId Parms{};

	Parms.ItemId = ItemId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelGearHeirloomGuide_Of_Id
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   ID                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelGearHeirloomGuide*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelGearHeirloomGuide* UExcelLoaderConfigGroupWrapper::GetRowExcelGearHeirloomGuide_Of_Id(int32 ID, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelGearHeirloomGuide_Of_Id");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelGearHeirloomGuide_Of_Id Parms{};

	Parms.ID = ID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelGearHeirloomGuide_Of_InstId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   InstId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelGearHeirloomGuide*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelGearHeirloomGuide* UExcelLoaderConfigGroupWrapper::GetRowExcelGearHeirloomGuide_Of_InstId(int32 InstId, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelGearHeirloomGuide_Of_InstId");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelGearHeirloomGuide_Of_InstId Parms{};

	Parms.InstId = InstId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelGearSoulBoundCost_Of_Count
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   Count                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelGearSoulBoundCost*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelGearSoulBoundCost* UExcelLoaderConfigGroupWrapper::GetRowExcelGearSoulBoundCost_Of_Count(int32 Count, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelGearSoulBoundCost_Of_Count");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelGearSoulBoundCost_Of_Count Parms{};

	Parms.Count = Count;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelGearSoulBoundWearPartRandom_AllOf_GroupId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   GroupID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UExcelLoaderTgfConfigExcelGearSoulBoundWearPartRandom*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelGearSoulBoundWearPartRandom*> UExcelLoaderConfigGroupWrapper::GetRowExcelGearSoulBoundWearPartRandom_AllOf_GroupId(int32 GroupID, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelGearSoulBoundWearPartRandom_AllOf_GroupId");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelGearSoulBoundWearPartRandom_AllOf_GroupId Parms{};

	Parms.GroupID = GroupID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelGearSoulBoundWearPartRandom_Of_GroupId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   GroupID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelGearSoulBoundWearPartRandom*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelGearSoulBoundWearPartRandom* UExcelLoaderConfigGroupWrapper::GetRowExcelGearSoulBoundWearPartRandom_Of_GroupId(int32 GroupID, int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelGearSoulBoundWearPartRandom_Of_GroupId");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelGearSoulBoundWearPartRandom_Of_GroupId Parms{};

	Parms.GroupID = GroupID;
	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelGearTemplate_Of_ItemId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   ItemId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelGearTemplate*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelGearTemplate* UExcelLoaderConfigGroupWrapper::GetRowExcelGearTemplate_Of_ItemId(int32 ItemId, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelGearTemplate_Of_ItemId");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelGearTemplate_Of_ItemId Parms{};

	Parms.ItemId = ItemId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelImmaculateTrialGrade_AllOf_ActivityRuleId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   ActivityRuleId                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UExcelLoaderTgfConfigExcelImmaculateTrialGrade*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelImmaculateTrialGrade*> UExcelLoaderConfigGroupWrapper::GetRowExcelImmaculateTrialGrade_AllOf_ActivityRuleId(int32 ActivityRuleId, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelImmaculateTrialGrade_AllOf_ActivityRuleId");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelImmaculateTrialGrade_AllOf_ActivityRuleId Parms{};

	Parms.ActivityRuleId = ActivityRuleId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelImmaculateTrialGrade_Of_ActivityRuleId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   ActivityRuleId                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelImmaculateTrialGrade*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelImmaculateTrialGrade* UExcelLoaderConfigGroupWrapper::GetRowExcelImmaculateTrialGrade_Of_ActivityRuleId(int32 ActivityRuleId, int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelImmaculateTrialGrade_Of_ActivityRuleId");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelImmaculateTrialGrade_Of_ActivityRuleId Parms{};

	Parms.ActivityRuleId = ActivityRuleId;
	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelImmaculateTrialGrade_Of_GradeId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   GradeId                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelImmaculateTrialGrade*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelImmaculateTrialGrade* UExcelLoaderConfigGroupWrapper::GetRowExcelImmaculateTrialGrade_Of_GradeId(int32 GradeId, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelImmaculateTrialGrade_Of_GradeId");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelImmaculateTrialGrade_Of_GradeId Parms{};

	Parms.GradeId = GradeId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelImmaculateTrialRandomRewards_Of_RandomRewardIdCareerTypeId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   RandomRewardId                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CareerTypeId                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelImmaculateTrialRandomRewards*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelImmaculateTrialRandomRewards* UExcelLoaderConfigGroupWrapper::GetRowExcelImmaculateTrialRandomRewards_Of_RandomRewardIdCareerTypeId(int32 RandomRewardId, int32 CareerTypeId, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelImmaculateTrialRandomRewards_Of_RandomRewardIdCareerTypeId");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelImmaculateTrialRandomRewards_Of_RandomRewardIdCareerTypeId Parms{};

	Parms.RandomRewardId = RandomRewardId;
	Parms.CareerTypeId = CareerTypeId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelImmaculateTrialRule_Of_ActivityRuleId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   ActivityRuleId                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelImmaculateTrialRule*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelImmaculateTrialRule* UExcelLoaderConfigGroupWrapper::GetRowExcelImmaculateTrialRule_Of_ActivityRuleId(int32 ActivityRuleId, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelImmaculateTrialRule_Of_ActivityRuleId");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelImmaculateTrialRule_Of_ActivityRuleId Parms{};

	Parms.ActivityRuleId = ActivityRuleId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelItemDropItem_AllOf_RandomId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   RandomId                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UExcelLoaderTgfConfigExcelItemDropItem*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelItemDropItem*> UExcelLoaderConfigGroupWrapper::GetRowExcelItemDropItem_AllOf_RandomId(int64 RandomId, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelItemDropItem_AllOf_RandomId");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelItemDropItem_AllOf_RandomId Parms{};

	Parms.RandomId = RandomId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelItemDropItem_Of_RandomId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   RandomId                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelItemDropItem*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelItemDropItem* UExcelLoaderConfigGroupWrapper::GetRowExcelItemDropItem_Of_RandomId(int64 RandomId, int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelItemDropItem_Of_RandomId");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelItemDropItem_Of_RandomId Parms{};

	Parms.RandomId = RandomId;
	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelItemLootRate_Of_RandomId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   RandomId                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelItemLootRate*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelItemLootRate* UExcelLoaderConfigGroupWrapper::GetRowExcelItemLootRate_Of_RandomId(int64 RandomId, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelItemLootRate_Of_RandomId");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelItemLootRate_Of_RandomId Parms{};

	Parms.RandomId = RandomId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelItemMagicFound_Of_Level
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   Level                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelItemMagicFound*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelItemMagicFound* UExcelLoaderConfigGroupWrapper::GetRowExcelItemMagicFound_Of_Level(int32 Level, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelItemMagicFound_Of_Level");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelItemMagicFound_Of_Level Parms{};

	Parms.Level = Level;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelItemRouter_Of_ItemComingEnumItemTypeEnum
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   ItemComingEnum                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ItemTypeEnum                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelItemRouter*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelItemRouter* UExcelLoaderConfigGroupWrapper::GetRowExcelItemRouter_Of_ItemComingEnumItemTypeEnum(int32 ItemComingEnum, int32 ItemTypeEnum, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelItemRouter_Of_ItemComingEnumItemTypeEnum");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelItemRouter_Of_ItemComingEnumItemTypeEnum Parms{};

	Parms.ItemComingEnum = ItemComingEnum;
	Parms.ItemTypeEnum = ItemTypeEnum;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelItemType_AllOf_SkinThirdSort
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   SkinThirdSort                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UExcelLoaderTgfConfigExcelItemType*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelItemType*> UExcelLoaderConfigGroupWrapper::GetRowExcelItemType_AllOf_SkinThirdSort(int32 SkinThirdSort, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelItemType_AllOf_SkinThirdSort");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelItemType_AllOf_SkinThirdSort Parms{};

	Parms.SkinThirdSort = SkinThirdSort;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelItemType_Of_SkinThirdSort
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   SkinThirdSort                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelItemType*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelItemType* UExcelLoaderConfigGroupWrapper::GetRowExcelItemType_Of_SkinThirdSort(int32 SkinThirdSort, int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelItemType_Of_SkinThirdSort");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelItemType_Of_SkinThirdSort Parms{};

	Parms.SkinThirdSort = SkinThirdSort;
	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelItemType_Of_TypeId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   TypeId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelItemType*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelItemType* UExcelLoaderConfigGroupWrapper::GetRowExcelItemType_Of_TypeId(int32 TypeId, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelItemType_Of_TypeId");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelItemType_Of_TypeId Parms{};

	Parms.TypeId = TypeId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelLevelType_Of_LevelType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   LevelType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelLevelType*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelLevelType* UExcelLoaderConfigGroupWrapper::GetRowExcelLevelType_Of_LevelType(int32 LevelType, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelLevelType_Of_LevelType");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelLevelType_Of_LevelType Parms{};

	Parms.LevelType = LevelType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelLootChooseGroupRate_Of_LootId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   LootId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelLootChooseGroupRate*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelLootChooseGroupRate* UExcelLoaderConfigGroupWrapper::GetRowExcelLootChooseGroupRate_Of_LootId(int64 LootId, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelLootChooseGroupRate_Of_LootId");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelLootChooseGroupRate_Of_LootId Parms{};

	Parms.LootId = LootId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelLootDisableLootId_Of_LootId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   LootId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelLootDisableLootId*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelLootDisableLootId* UExcelLoaderConfigGroupWrapper::GetRowExcelLootDisableLootId_Of_LootId(int64 LootId, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelLootDisableLootId_Of_LootId");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelLootDisableLootId_Of_LootId Parms{};

	Parms.LootId = LootId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelLootRarePoolCntLimit_Of_ItemId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   ItemId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelLootRarePoolCntLimit*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelLootRarePoolCntLimit* UExcelLoaderConfigGroupWrapper::GetRowExcelLootRarePoolCntLimit_Of_ItemId(int32 ItemId, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelLootRarePoolCntLimit_Of_ItemId");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelLootRarePoolCntLimit_Of_ItemId Parms{};

	Parms.ItemId = ItemId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelLootRarePoolItemRate_AllOf_RandomId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   RandomId                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UExcelLoaderTgfConfigExcelLootRarePoolItemRate*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelLootRarePoolItemRate*> UExcelLoaderConfigGroupWrapper::GetRowExcelLootRarePoolItemRate_AllOf_RandomId(int64 RandomId, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelLootRarePoolItemRate_AllOf_RandomId");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelLootRarePoolItemRate_AllOf_RandomId Parms{};

	Parms.RandomId = RandomId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelLootRarePoolItemRate_Of_RandomId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   RandomId                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelLootRarePoolItemRate*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelLootRarePoolItemRate* UExcelLoaderConfigGroupWrapper::GetRowExcelLootRarePoolItemRate_Of_RandomId(int64 RandomId, int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelLootRarePoolItemRate_Of_RandomId");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelLootRarePoolItemRate_Of_RandomId Parms{};

	Parms.RandomId = RandomId;
	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelLootSourceMap_Of_Name
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           Param_Name                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelLootSourceMap*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelLootSourceMap* UExcelLoaderConfigGroupWrapper::GetRowExcelLootSourceMap_Of_Name(const class FString& Param_Name, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelLootSourceMap_Of_Name");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelLootSourceMap_Of_Name Parms{};

	Parms.Param_Name = std::move(Param_Name);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelLootUeSourceChooseGroup_Of_UeLootSourceIdMapIdLootType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   UeLootSourceId                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   MapId                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   LootType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelLootUeSourceChooseGroup*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelLootUeSourceChooseGroup* UExcelLoaderConfigGroupWrapper::GetRowExcelLootUeSourceChooseGroup_Of_UeLootSourceIdMapIdLootType(int32 UeLootSourceId, int32 MapId, int32 LootType, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelLootUeSourceChooseGroup_Of_UeLootSourceIdMapIdLootType");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelLootUeSourceChooseGroup_Of_UeLootSourceIdMapIdLootType Parms{};

	Parms.UeLootSourceId = UeLootSourceId;
	Parms.MapId = MapId;
	Parms.LootType = LootType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelLootUnluckyValue_Of_RuleId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   RuleId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelLootUnluckyValue*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelLootUnluckyValue* UExcelLoaderConfigGroupWrapper::GetRowExcelLootUnluckyValue_Of_RuleId(int32 RuleId, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelLootUnluckyValue_Of_RuleId");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelLootUnluckyValue_Of_RuleId Parms{};

	Parms.RuleId = RuleId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelLotteryAccessKey_Of_TypeId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   TypeId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelLotteryAccessKey*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelLotteryAccessKey* UExcelLoaderConfigGroupWrapper::GetRowExcelLotteryAccessKey_Of_TypeId(int32 TypeId, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelLotteryAccessKey_Of_TypeId");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelLotteryAccessKey_Of_TypeId Parms{};

	Parms.TypeId = TypeId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelLotteryPool_Of_Id
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   ID                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelLotteryPool*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelLotteryPool* UExcelLoaderConfigGroupWrapper::GetRowExcelLotteryPool_Of_Id(int32 ID, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelLotteryPool_Of_Id");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelLotteryPool_Of_Id Parms{};

	Parms.ID = ID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelMailTemplate_Of_TypeId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   TypeId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelMailTemplate*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelMailTemplate* UExcelLoaderConfigGroupWrapper::GetRowExcelMailTemplate_Of_TypeId(int32 TypeId, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelMailTemplate_Of_TypeId");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelMailTemplate_Of_TypeId Parms{};

	Parms.TypeId = TypeId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelMapDetail_Of_MapId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   MapId                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelMapDetail*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelMapDetail* UExcelLoaderConfigGroupWrapper::GetRowExcelMapDetail_Of_MapId(int32 MapId, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelMapDetail_Of_MapId");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelMapDetail_Of_MapId Parms{};

	Parms.MapId = MapId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelMapExp_Of_MapIdAliveTime
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   MapId                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   AliveTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelMapExp* ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelMapExp* UExcelLoaderConfigGroupWrapper::GetRowExcelMapExp_Of_MapIdAliveTime(int32 MapId, int64 AliveTime, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelMapExp_Of_MapIdAliveTime");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelMapExp_Of_MapIdAliveTime Parms{};

	Parms.MapId = MapId;
	Parms.AliveTime = AliveTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelMapSelect_Of_LevelId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   LevelId                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelMapSelect*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelMapSelect* UExcelLoaderConfigGroupWrapper::GetRowExcelMapSelect_Of_LevelId(int32 LevelId, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelMapSelect_Of_LevelId");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelMapSelect_Of_LevelId Parms{};

	Parms.LevelId = LevelId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelMapSelect_Of_MapNameId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           MapNameId                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelMapSelect*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelMapSelect* UExcelLoaderConfigGroupWrapper::GetRowExcelMapSelect_Of_MapNameId(const class FString& MapNameId, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelMapSelect_Of_MapNameId");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelMapSelect_Of_MapNameId Parms{};

	Parms.MapNameId = std::move(MapNameId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelMapSelectModelFeature_Of_ModelFeatureId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   ModelFeatureId                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelMapSelectModelFeature*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelMapSelectModelFeature* UExcelLoaderConfigGroupWrapper::GetRowExcelMapSelectModelFeature_Of_ModelFeatureId(int32 ModelFeatureId, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelMapSelectModelFeature_Of_ModelFeatureId");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelMapSelectModelFeature_Of_ModelFeatureId Parms{};

	Parms.ModelFeatureId = ModelFeatureId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelMarketInfo_Of_Market
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   MarketId                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelMarketInfo*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelMarketInfo* UExcelLoaderConfigGroupWrapper::GetRowExcelMarketInfo_Of_Market(int32 MarketId, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelMarketInfo_Of_Market");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelMarketInfo_Of_Market Parms{};

	Parms.MarketId = MarketId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelMarketPoorMan_Of_RoleTypeId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   RoleTypeId                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelMarketPoorMan*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelMarketPoorMan* UExcelLoaderConfigGroupWrapper::GetRowExcelMarketPoorMan_Of_RoleTypeId(int32 RoleTypeId, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelMarketPoorMan_Of_RoleTypeId");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelMarketPoorMan_Of_RoleTypeId Parms{};

	Parms.RoleTypeId = RoleTypeId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelMarketPopupVideo_Of_PopupVideoId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   PopupVideoId                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelMarketPopupVideo*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelMarketPopupVideo* UExcelLoaderConfigGroupWrapper::GetRowExcelMarketPopupVideo_Of_PopupVideoId(int32 PopupVideoId, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelMarketPopupVideo_Of_PopupVideoId");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelMarketPopupVideo_Of_PopupVideoId Parms{};

	Parms.PopupVideoId = PopupVideoId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelMarketProductItem_AllOf_Market
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   MarketTabId                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   RefreshPoolId                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UExcelLoaderTgfConfigExcelMarketProductItem*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelMarketProductItem*> UExcelLoaderConfigGroupWrapper::GetRowExcelMarketProductItem_AllOf_Market(int32 MarketTabId, int32 RefreshPoolId, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelMarketProductItem_AllOf_Market");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelMarketProductItem_AllOf_Market Parms{};

	Parms.MarketTabId = MarketTabId;
	Parms.RefreshPoolId = RefreshPoolId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelMarketProductItem_AllOf_MarketTabId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   MarketTabId                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UExcelLoaderTgfConfigExcelMarketProductItem*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelMarketProductItem*> UExcelLoaderConfigGroupWrapper::GetRowExcelMarketProductItem_AllOf_MarketTabId(int32 MarketTabId, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelMarketProductItem_AllOf_MarketTabId");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelMarketProductItem_AllOf_MarketTabId Parms{};

	Parms.MarketTabId = MarketTabId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelMarketProductItem_Of_Market
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   MarketTabId                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   RefreshPoolId                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelMarketProductItem*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelMarketProductItem* UExcelLoaderConfigGroupWrapper::GetRowExcelMarketProductItem_Of_Market(int32 MarketTabId, int32 RefreshPoolId, int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelMarketProductItem_Of_Market");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelMarketProductItem_Of_Market Parms{};

	Parms.MarketTabId = MarketTabId;
	Parms.RefreshPoolId = RefreshPoolId;
	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelMarketProductItem_Of_MarketTabId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   MarketTabId                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelMarketProductItem*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelMarketProductItem* UExcelLoaderConfigGroupWrapper::GetRowExcelMarketProductItem_Of_MarketTabId(int32 MarketTabId, int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelMarketProductItem_Of_MarketTabId");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelMarketProductItem_Of_MarketTabId Parms{};

	Parms.MarketTabId = MarketTabId;
	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelMarketProductItem_Of_ProductId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   ProductId                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelMarketProductItem*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelMarketProductItem* UExcelLoaderConfigGroupWrapper::GetRowExcelMarketProductItem_Of_ProductId(int32 ProductId, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelMarketProductItem_Of_ProductId");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelMarketProductItem_Of_ProductId Parms{};

	Parms.ProductId = ProductId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelMarketRefreshPool_Of_RefreshPoolId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   MarketRefreshPoolId                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelMarketRefreshPool*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelMarketRefreshPool* UExcelLoaderConfigGroupWrapper::GetRowExcelMarketRefreshPool_Of_RefreshPoolId(int32 MarketRefreshPoolId, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelMarketRefreshPool_Of_RefreshPoolId");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelMarketRefreshPool_Of_RefreshPoolId Parms{};

	Parms.MarketRefreshPoolId = MarketRefreshPoolId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelMarketSpecialCost_AllOf_ProductId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   ProductId                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UExcelLoaderTgfConfigExcelMarketSpecialCost*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelMarketSpecialCost*> UExcelLoaderConfigGroupWrapper::GetRowExcelMarketSpecialCost_AllOf_ProductId(int32 ProductId, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelMarketSpecialCost_AllOf_ProductId");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelMarketSpecialCost_AllOf_ProductId Parms{};

	Parms.ProductId = ProductId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelMarketSpecialCost_Of_ProductId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   ProductId                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelMarketSpecialCost*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelMarketSpecialCost* UExcelLoaderConfigGroupWrapper::GetRowExcelMarketSpecialCost_Of_ProductId(int32 ProductId, int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelMarketSpecialCost_Of_ProductId");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelMarketSpecialCost_Of_ProductId Parms{};

	Parms.ProductId = ProductId;
	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelMarketTabInfo_Of_Market
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   MarketTabId                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelMarketTabInfo*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelMarketTabInfo* UExcelLoaderConfigGroupWrapper::GetRowExcelMarketTabInfo_Of_Market(int32 MarketTabId, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelMarketTabInfo_Of_Market");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelMarketTabInfo_Of_Market Parms{};

	Parms.MarketTabId = MarketTabId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelMatchingAddRobotRule_Of_UserCount
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   UserCount                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelMatchingAddRobotRule*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelMatchingAddRobotRule* UExcelLoaderConfigGroupWrapper::GetRowExcelMatchingAddRobotRule_Of_UserCount(int32 UserCount, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelMatchingAddRobotRule_Of_UserCount");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelMatchingAddRobotRule_Of_UserCount Parms{};

	Parms.UserCount = UserCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelMatchingBattleRankStatistics_AllOf_Type
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UExcelLoaderTgfConfigExcelMatchingBattleRankStatistics*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelMatchingBattleRankStatistics*> UExcelLoaderConfigGroupWrapper::GetRowExcelMatchingBattleRankStatistics_AllOf_Type(int32 Type, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelMatchingBattleRankStatistics_AllOf_Type");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelMatchingBattleRankStatistics_AllOf_Type Parms{};

	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelMatchingBattleRankStatistics_Of_BattleRankTypeCount
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Count                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelMatchingBattleRankStatistics*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelMatchingBattleRankStatistics* UExcelLoaderConfigGroupWrapper::GetRowExcelMatchingBattleRankStatistics_Of_BattleRankTypeCount(int32 Type, int32 Count, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelMatchingBattleRankStatistics_Of_BattleRankTypeCount");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelMatchingBattleRankStatistics_Of_BattleRankTypeCount Parms{};

	Parms.Type = Type;
	Parms.Count = Count;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelMatchingBattleRankStatistics_Of_Type
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelMatchingBattleRankStatistics*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelMatchingBattleRankStatistics* UExcelLoaderConfigGroupWrapper::GetRowExcelMatchingBattleRankStatistics_Of_Type(int32 Type, int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelMatchingBattleRankStatistics_Of_Type");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelMatchingBattleRankStatistics_Of_Type Parms{};

	Parms.Type = Type;
	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelMatchingContinuousSuccessOrFailureAdding_Of_Times
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   Times                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelMatchingContinuousSuccessOrFailureAdding*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelMatchingContinuousSuccessOrFailureAdding* UExcelLoaderConfigGroupWrapper::GetRowExcelMatchingContinuousSuccessOrFailureAdding_Of_Times(int32 Times, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelMatchingContinuousSuccessOrFailureAdding_Of_Times");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelMatchingContinuousSuccessOrFailureAdding_Of_Times Parms{};

	Parms.Times = Times;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelMatchingFactionTemplate_Of_Id
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   ID                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelMatchingFactionTemplate*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelMatchingFactionTemplate* UExcelLoaderConfigGroupWrapper::GetRowExcelMatchingFactionTemplate_Of_Id(int32 ID, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelMatchingFactionTemplate_Of_Id");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelMatchingFactionTemplate_Of_Id Parms{};

	Parms.ID = ID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelMatchingPool_Of_Id
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   ID                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelMatchingPool*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelMatchingPool* UExcelLoaderConfigGroupWrapper::GetRowExcelMatchingPool_Of_Id(int32 ID, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelMatchingPool_Of_Id");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelMatchingPool_Of_Id Parms{};

	Parms.ID = ID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelMatchingResultTemplate_Of_Id
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   ID                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelMatchingResultTemplate*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelMatchingResultTemplate* UExcelLoaderConfigGroupWrapper::GetRowExcelMatchingResultTemplate_Of_Id(int32 ID, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelMatchingResultTemplate_Of_Id");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelMatchingResultTemplate_Of_Id Parms{};

	Parms.ID = ID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelMatchingRule_Of_Id
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   ID                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelMatchingRule*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelMatchingRule* UExcelLoaderConfigGroupWrapper::GetRowExcelMatchingRule_Of_Id(int32 ID, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelMatchingRule_Of_Id");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelMatchingRule_Of_Id Parms{};

	Parms.ID = ID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelMatchingRuleGroup_Of_GroupId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   GroupID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelMatchingRuleGroup*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelMatchingRuleGroup* UExcelLoaderConfigGroupWrapper::GetRowExcelMatchingRuleGroup_Of_GroupId(int32 GroupID, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelMatchingRuleGroup_Of_GroupId");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelMatchingRuleGroup_Of_GroupId Parms{};

	Parms.GroupID = GroupID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelMithrilForceItem_Of_Id
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   ID                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelMithrilForceItem*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelMithrilForceItem* UExcelLoaderConfigGroupWrapper::GetRowExcelMithrilForceItem_Of_Id(int32 ID, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelMithrilForceItem_Of_Id");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelMithrilForceItem_Of_Id Parms{};

	Parms.ID = ID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelMithrilForcePrestige_Of_Level
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   Level                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelMithrilForcePrestige*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelMithrilForcePrestige* UExcelLoaderConfigGroupWrapper::GetRowExcelMithrilForcePrestige_Of_Level(int32 Level, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelMithrilForcePrestige_Of_Level");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelMithrilForcePrestige_Of_Level Parms{};

	Parms.Level = Level;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelMithrilForceSettlement_Of_Damage
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Damage                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelMithrilForceSettlement*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelMithrilForceSettlement* UExcelLoaderConfigGroupWrapper::GetRowExcelMithrilForceSettlement_Of_Damage(int64 Damage, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelMithrilForceSettlement_Of_Damage");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelMithrilForceSettlement_Of_Damage Parms{};

	Parms.Damage = Damage;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelMithrilForceSettlementFactor_Of_Damage
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Damage                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelMithrilForceSettlementFactor*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelMithrilForceSettlementFactor* UExcelLoaderConfigGroupWrapper::GetRowExcelMithrilForceSettlementFactor_Of_Damage(int64 Damage, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelMithrilForceSettlementFactor_Of_Damage");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelMithrilForceSettlementFactor_Of_Damage Parms{};

	Parms.Damage = Damage;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelModuleUnlockCircular_Of_Id
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   ID                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelModuleUnlockCircular*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelModuleUnlockCircular* UExcelLoaderConfigGroupWrapper::GetRowExcelModuleUnlockCircular_Of_Id(int32 ID, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelModuleUnlockCircular_Of_Id");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelModuleUnlockCircular_Of_Id Parms{};

	Parms.ID = ID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelModuleUnlockType_Of_ModuleId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   ModuleId                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelModuleUnlockType*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelModuleUnlockType* UExcelLoaderConfigGroupWrapper::GetRowExcelModuleUnlockType_Of_ModuleId(int32 ModuleId, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelModuleUnlockType_Of_ModuleId");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelModuleUnlockType_Of_ModuleId Parms{};

	Parms.ModuleId = ModuleId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelModuleUnlockType_Of_ModuleName
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   ModuleName                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelModuleUnlockType*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelModuleUnlockType* UExcelLoaderConfigGroupWrapper::GetRowExcelModuleUnlockType_Of_ModuleName(int32 ModuleName, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelModuleUnlockType_Of_ModuleName");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelModuleUnlockType_Of_ModuleName Parms{};

	Parms.ModuleName = ModuleName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelOriginConstConfig_Of_Key
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelOriginConstConfig*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelOriginConstConfig* UExcelLoaderConfigGroupWrapper::GetRowExcelOriginConstConfig_Of_Key(const class FString& Key, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelOriginConstConfig_Of_Key");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelOriginConstConfig_Of_Key Parms{};

	Parms.Key = std::move(Key);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelQuestGroupList_Of_Id
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   ID                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelQuestGroupList*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelQuestGroupList* UExcelLoaderConfigGroupWrapper::GetRowExcelQuestGroupList_Of_Id(int32 ID, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelQuestGroupList_Of_Id");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelQuestGroupList_Of_Id Parms{};

	Parms.ID = ID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelQuestList_AllOf_ActivityId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   ActivityId                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UExcelLoaderTgfConfigExcelQuestList*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelQuestList*> UExcelLoaderConfigGroupWrapper::GetRowExcelQuestList_AllOf_ActivityId(int32 ActivityId, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelQuestList_AllOf_ActivityId");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelQuestList_AllOf_ActivityId Parms{};

	Parms.ActivityId = ActivityId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelQuestList_AllOf_ClientSubmitType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   ClientSubmitType                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UExcelLoaderTgfConfigExcelQuestList*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelQuestList*> UExcelLoaderConfigGroupWrapper::GetRowExcelQuestList_AllOf_ClientSubmitType(int32 ClientSubmitType, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelQuestList_AllOf_ClientSubmitType");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelQuestList_AllOf_ClientSubmitType Parms{};

	Parms.ClientSubmitType = ClientSubmitType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelQuestList_AllOf_RandomPoolId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   RandomPoolId                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UExcelLoaderTgfConfigExcelQuestList*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelQuestList*> UExcelLoaderConfigGroupWrapper::GetRowExcelQuestList_AllOf_RandomPoolId(int32 RandomPoolId, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelQuestList_AllOf_RandomPoolId");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelQuestList_AllOf_RandomPoolId Parms{};

	Parms.RandomPoolId = RandomPoolId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelQuestList_Of_ActivityId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   ActivityId                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelQuestList*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelQuestList* UExcelLoaderConfigGroupWrapper::GetRowExcelQuestList_Of_ActivityId(int32 ActivityId, int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelQuestList_Of_ActivityId");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelQuestList_Of_ActivityId Parms{};

	Parms.ActivityId = ActivityId;
	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelQuestList_Of_ClientSubmitType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   ClientSubmitType                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelQuestList*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelQuestList* UExcelLoaderConfigGroupWrapper::GetRowExcelQuestList_Of_ClientSubmitType(int32 ClientSubmitType, int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelQuestList_Of_ClientSubmitType");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelQuestList_Of_ClientSubmitType Parms{};

	Parms.ClientSubmitType = ClientSubmitType;
	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelQuestList_Of_Id
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   ID                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelQuestList*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelQuestList* UExcelLoaderConfigGroupWrapper::GetRowExcelQuestList_Of_Id(int32 ID, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelQuestList_Of_Id");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelQuestList_Of_Id Parms{};

	Parms.ID = ID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelQuestList_Of_RandomPoolId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   RandomPoolId                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelQuestList*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelQuestList* UExcelLoaderConfigGroupWrapper::GetRowExcelQuestList_Of_RandomPoolId(int32 RandomPoolId, int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelQuestList_Of_RandomPoolId");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelQuestList_Of_RandomPoolId Parms{};

	Parms.RandomPoolId = RandomPoolId;
	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelQuestProgressCondition_Of_Id
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   ID                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelQuestProgressCondition*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelQuestProgressCondition* UExcelLoaderConfigGroupWrapper::GetRowExcelQuestProgressCondition_Of_Id(int32 ID, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelQuestProgressCondition_Of_Id");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelQuestProgressCondition_Of_Id Parms{};

	Parms.ID = ID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelQuestProgressType_Of_Id
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   ID                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelQuestProgressType*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelQuestProgressType* UExcelLoaderConfigGroupWrapper::GetRowExcelQuestProgressType_Of_Id(int32 ID, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelQuestProgressType_Of_Id");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelQuestProgressType_Of_Id Parms{};

	Parms.ID = ID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelQuestTriggerEventType_Of_Id
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   ID                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelQuestTriggerEventType*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelQuestTriggerEventType* UExcelLoaderConfigGroupWrapper::GetRowExcelQuestTriggerEventType_Of_Id(int32 ID, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelQuestTriggerEventType_Of_Id");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelQuestTriggerEventType_Of_Id Parms{};

	Parms.ID = ID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelRankPeriodRewardPool_AllOf_RankRewardPoolId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   RankRewardPoolId                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UExcelLoaderTgfConfigExcelRankPeriodRewardPool*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelRankPeriodRewardPool*> UExcelLoaderConfigGroupWrapper::GetRowExcelRankPeriodRewardPool_AllOf_RankRewardPoolId(int32 RankRewardPoolId, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelRankPeriodRewardPool_AllOf_RankRewardPoolId");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelRankPeriodRewardPool_AllOf_RankRewardPoolId Parms{};

	Parms.RankRewardPoolId = RankRewardPoolId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelRankPeriodRewardPool_Of_RankRewardPoolId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   RankRewardPoolId                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelRankPeriodRewardPool*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelRankPeriodRewardPool* UExcelLoaderConfigGroupWrapper::GetRowExcelRankPeriodRewardPool_Of_RankRewardPoolId(int32 RankRewardPoolId, int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelRankPeriodRewardPool_Of_RankRewardPoolId");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelRankPeriodRewardPool_Of_RankRewardPoolId Parms{};

	Parms.RankRewardPoolId = RankRewardPoolId;
	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelRankReportSetting_Of_RankTypeRankInstanceId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   RankType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   RankInstanceId                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelRankReportSetting*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelRankReportSetting* UExcelLoaderConfigGroupWrapper::GetRowExcelRankReportSetting_Of_RankTypeRankInstanceId(int64 RankType, int64 RankInstanceId, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelRankReportSetting_Of_RankTypeRankInstanceId");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelRankReportSetting_Of_RankTypeRankInstanceId Parms{};

	Parms.RankType = RankType;
	Parms.RankInstanceId = RankInstanceId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelRankRule_Of_BanId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   BanId                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelRankRule*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelRankRule* UExcelLoaderConfigGroupWrapper::GetRowExcelRankRule_Of_BanId(int32 BanId, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelRankRule_Of_BanId");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelRankRule_Of_BanId Parms{};

	Parms.BanId = BanId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelRankRule_Of_RankTypeRankInstanceId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   RankType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   RankInstanceId                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelRankRule*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelRankRule* UExcelLoaderConfigGroupWrapper::GetRowExcelRankRule_Of_RankTypeRankInstanceId(int64 RankType, int64 RankInstanceId, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelRankRule_Of_RankTypeRankInstanceId");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelRankRule_Of_RankTypeRankInstanceId Parms{};

	Parms.RankType = RankType;
	Parms.RankInstanceId = RankInstanceId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelRobotFaction_Of_RobotFactionTempleteId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   RobotFactionTempleteId                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelRobotFaction*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelRobotFaction* UExcelLoaderConfigGroupWrapper::GetRowExcelRobotFaction_Of_RobotFactionTempleteId(int32 RobotFactionTempleteId, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelRobotFaction_Of_RobotFactionTempleteId");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelRobotFaction_Of_RobotFactionTempleteId Parms{};

	Parms.RobotFactionTempleteId = RobotFactionTempleteId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelRobotNameDatabase_AllOf_RaceGenderRobotName
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   Race                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   GenderType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UExcelLoaderTgfConfigExcelRobotNameDatabase*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelRobotNameDatabase*> UExcelLoaderConfigGroupWrapper::GetRowExcelRobotNameDatabase_AllOf_RaceGenderRobotName(int32 Race, int32 GenderType, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelRobotNameDatabase_AllOf_RaceGenderRobotName");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelRobotNameDatabase_AllOf_RaceGenderRobotName Parms{};

	Parms.Race = Race;
	Parms.GenderType = GenderType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelRobotNameDatabase_Of_RaceGenderRobotName
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   Race                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   GenderType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelRobotNameDatabase*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelRobotNameDatabase* UExcelLoaderConfigGroupWrapper::GetRowExcelRobotNameDatabase_Of_RaceGenderRobotName(int32 Race, int32 GenderType, int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelRobotNameDatabase_Of_RaceGenderRobotName");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelRobotNameDatabase_Of_RaceGenderRobotName Parms{};

	Parms.Race = Race;
	Parms.GenderType = GenderType;
	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelRobotNormalFaction_Of_RobotFactionTempleteId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   RobotFactionTempleteId                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelRobotNormalFaction*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelRobotNormalFaction* UExcelLoaderConfigGroupWrapper::GetRowExcelRobotNormalFaction_Of_RobotFactionTempleteId(int32 RobotFactionTempleteId, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelRobotNormalFaction_Of_RobotFactionTempleteId");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelRobotNormalFaction_Of_RobotFactionTempleteId Parms{};

	Parms.RobotFactionTempleteId = RobotFactionTempleteId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelRobotTemplate_Of_RobotTempleteId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   RobotTempleteId                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelRobotTemplate*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelRobotTemplate* UExcelLoaderConfigGroupWrapper::GetRowExcelRobotTemplate_Of_RobotTempleteId(int32 RobotTempleteId, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelRobotTemplate_Of_RobotTempleteId");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelRobotTemplate_Of_RobotTempleteId Parms{};

	Parms.RobotTempleteId = RobotTempleteId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelRoleDefaultEquipment_Of_ConfigId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   ConfigId                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelRoleDefaultEquipment*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelRoleDefaultEquipment* UExcelLoaderConfigGroupWrapper::GetRowExcelRoleDefaultEquipment_Of_ConfigId(int32 ConfigId, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelRoleDefaultEquipment_Of_ConfigId");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelRoleDefaultEquipment_Of_ConfigId Parms{};

	Parms.ConfigId = ConfigId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelRoleFacePinchingLimit_Of_RaceGenderFacePinching
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   Race                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   GenderType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelRoleFacePinchingLimit*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelRoleFacePinchingLimit* UExcelLoaderConfigGroupWrapper::GetRowExcelRoleFacePinchingLimit_Of_RaceGenderFacePinching(int32 Race, int32 GenderType, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelRoleFacePinchingLimit_Of_RaceGenderFacePinching");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelRoleFacePinchingLimit_Of_RaceGenderFacePinching Parms{};

	Parms.Race = Race;
	Parms.GenderType = GenderType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelRoleHeadIcon_Of_TypeGenderFaceSkincolor
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   TypeId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   GenderType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   FaceId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SkincolorId                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelRoleHeadIcon*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelRoleHeadIcon* UExcelLoaderConfigGroupWrapper::GetRowExcelRoleHeadIcon_Of_TypeGenderFaceSkincolor(int32 TypeId, int32 GenderType, int32 FaceId, int32 SkincolorId, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelRoleHeadIcon_Of_TypeGenderFaceSkincolor");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelRoleHeadIcon_Of_TypeGenderFaceSkincolor Parms{};

	Parms.TypeId = TypeId;
	Parms.GenderType = GenderType;
	Parms.FaceId = FaceId;
	Parms.SkincolorId = SkincolorId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelRoleLevelExp_Of_Level
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   Level                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelRoleLevelExp*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelRoleLevelExp* UExcelLoaderConfigGroupWrapper::GetRowExcelRoleLevelExp_Of_Level(int32 Level, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelRoleLevelExp_Of_Level");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelRoleLevelExp_Of_Level Parms{};

	Parms.Level = Level;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelRoleLevelUpgrade_AllOf_RoleTypeId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   RoleTypeId                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UExcelLoaderTgfConfigExcelRoleLevelUpgrade*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelRoleLevelUpgrade*> UExcelLoaderConfigGroupWrapper::GetRowExcelRoleLevelUpgrade_AllOf_RoleTypeId(int32 RoleTypeId, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelRoleLevelUpgrade_AllOf_RoleTypeId");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelRoleLevelUpgrade_AllOf_RoleTypeId Parms{};

	Parms.RoleTypeId = RoleTypeId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelRoleLevelUpgrade_Of_RoleTypeAndLevel
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   RoleTypeId                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   RoleLevel                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelRoleLevelUpgrade*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelRoleLevelUpgrade* UExcelLoaderConfigGroupWrapper::GetRowExcelRoleLevelUpgrade_Of_RoleTypeAndLevel(int32 RoleTypeId, int32 RoleLevel, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelRoleLevelUpgrade_Of_RoleTypeAndLevel");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelRoleLevelUpgrade_Of_RoleTypeAndLevel Parms{};

	Parms.RoleTypeId = RoleTypeId;
	Parms.RoleLevel = RoleLevel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelRoleLevelUpgrade_Of_RoleTypeId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   RoleTypeId                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelRoleLevelUpgrade*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelRoleLevelUpgrade* UExcelLoaderConfigGroupWrapper::GetRowExcelRoleLevelUpgrade_Of_RoleTypeId(int32 RoleTypeId, int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelRoleLevelUpgrade_Of_RoleTypeId");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelRoleLevelUpgrade_Of_RoleTypeId Parms{};

	Parms.RoleTypeId = RoleTypeId;
	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelRoleSkill_Of_SkillId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   SkillId                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelRoleSkill*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelRoleSkill* UExcelLoaderConfigGroupWrapper::GetRowExcelRoleSkill_Of_SkillId(int32 SkillId, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelRoleSkill_Of_SkillId");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelRoleSkill_Of_SkillId Parms{};

	Parms.SkillId = SkillId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelRoleSkinType_Of_SkinId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   SkinId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelRoleSkinType*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelRoleSkinType* UExcelLoaderConfigGroupWrapper::GetRowExcelRoleSkinType_Of_SkinId(int32 SkinId, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelRoleSkinType_Of_SkinId");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelRoleSkinType_Of_SkinId Parms{};

	Parms.SkinId = SkinId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelRoleType_AllOf_Force
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   Force                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UExcelLoaderTgfConfigExcelRoleType*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelRoleType*> UExcelLoaderConfigGroupWrapper::GetRowExcelRoleType_AllOf_Force(int32 Force, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelRoleType_AllOf_Force");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelRoleType_AllOf_Force Parms{};

	Parms.Force = Force;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelRoleType_Of_Force
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   Force                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelRoleType*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelRoleType* UExcelLoaderConfigGroupWrapper::GetRowExcelRoleType_Of_Force(int32 Force, int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelRoleType_Of_Force");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelRoleType_Of_Force Parms{};

	Parms.Force = Force;
	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelRoleType_Of_TypeId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   TypeId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelRoleType*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelRoleType* UExcelLoaderConfigGroupWrapper::GetRowExcelRoleType_Of_TypeId(int32 TypeId, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelRoleType_Of_TypeId");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelRoleType_Of_TypeId Parms{};

	Parms.TypeId = TypeId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelSeasonRule_Of_SeasonId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   SeasonId                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelSeasonRule*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelSeasonRule* UExcelLoaderConfigGroupWrapper::GetRowExcelSeasonRule_Of_SeasonId(int32 SeasonId, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelSeasonRule_Of_SeasonId");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelSeasonRule_Of_SeasonId Parms{};

	Parms.SeasonId = SeasonId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelSkillCalculate_Of_Id
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           ID                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelSkillCalculate*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelSkillCalculate* UExcelLoaderConfigGroupWrapper::GetRowExcelSkillCalculate_Of_Id(const class FString& ID, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelSkillCalculate_Of_Id");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelSkillCalculate_Of_Id Parms{};

	Parms.ID = std::move(ID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelSkillNumExchange_Of_Id
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           ID                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelSkillNumExchange*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelSkillNumExchange* UExcelLoaderConfigGroupWrapper::GetRowExcelSkillNumExchange_Of_Id(const class FString& ID, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelSkillNumExchange_Of_Id");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelSkillNumExchange_Of_Id Parms{};

	Parms.ID = std::move(ID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelTradeCommodity_AllOf_MarketId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   MarketId                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UExcelLoaderTgfConfigExcelTradeCommodity*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelTradeCommodity*> UExcelLoaderConfigGroupWrapper::GetRowExcelTradeCommodity_AllOf_MarketId(int32 MarketId, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelTradeCommodity_AllOf_MarketId");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelTradeCommodity_AllOf_MarketId Parms{};

	Parms.MarketId = MarketId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelTradeCommodity_AllOf_MarketIdItemId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   MarketId                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ItemId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UExcelLoaderTgfConfigExcelTradeCommodity*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelTradeCommodity*> UExcelLoaderConfigGroupWrapper::GetRowExcelTradeCommodity_AllOf_MarketIdItemId(int32 MarketId, int32 ItemId, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelTradeCommodity_AllOf_MarketIdItemId");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelTradeCommodity_AllOf_MarketIdItemId Parms{};

	Parms.MarketId = MarketId;
	Parms.ItemId = ItemId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelTradeCommodity_Of_IdMarketId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   ID                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   MarketId                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelTradeCommodity*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelTradeCommodity* UExcelLoaderConfigGroupWrapper::GetRowExcelTradeCommodity_Of_IdMarketId(int32 ID, int32 MarketId, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelTradeCommodity_Of_IdMarketId");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelTradeCommodity_Of_IdMarketId Parms{};

	Parms.ID = ID;
	Parms.MarketId = MarketId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelTradeCommodity_Of_MarketId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   MarketId                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelTradeCommodity*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelTradeCommodity* UExcelLoaderConfigGroupWrapper::GetRowExcelTradeCommodity_Of_MarketId(int32 MarketId, int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelTradeCommodity_Of_MarketId");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelTradeCommodity_Of_MarketId Parms{};

	Parms.MarketId = MarketId;
	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelTradeCommodity_Of_MarketIdItemId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   MarketId                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ItemId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelTradeCommodity*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelTradeCommodity* UExcelLoaderConfigGroupWrapper::GetRowExcelTradeCommodity_Of_MarketIdItemId(int32 MarketId, int32 ItemId, int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelTradeCommodity_Of_MarketIdItemId");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelTradeCommodity_Of_MarketIdItemId Parms{};

	Parms.MarketId = MarketId;
	Parms.ItemId = ItemId;
	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelTradeItemRequire_Of_Id
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   ID                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelTradeItemRequire*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelTradeItemRequire* UExcelLoaderConfigGroupWrapper::GetRowExcelTradeItemRequire_Of_Id(int32 ID, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelTradeItemRequire_Of_Id");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelTradeItemRequire_Of_Id Parms{};

	Parms.ID = ID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelTradeMarket_AllOf_CalculatePoolId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   CalculatePoolId                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UExcelLoaderTgfConfigExcelTradeMarket*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelTradeMarket*> UExcelLoaderConfigGroupWrapper::GetRowExcelTradeMarket_AllOf_CalculatePoolId(int32 CalculatePoolId, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelTradeMarket_AllOf_CalculatePoolId");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelTradeMarket_AllOf_CalculatePoolId Parms{};

	Parms.CalculatePoolId = CalculatePoolId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelTradeMarket_AllOf_MarketType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   MarketType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UExcelLoaderTgfConfigExcelTradeMarket*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelTradeMarket*> UExcelLoaderConfigGroupWrapper::GetRowExcelTradeMarket_AllOf_MarketType(int32 MarketType, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelTradeMarket_AllOf_MarketType");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelTradeMarket_AllOf_MarketType Parms{};

	Parms.MarketType = MarketType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelTradeMarket_Of_CalculatePoolId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   CalculatePoolId                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelTradeMarket*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelTradeMarket* UExcelLoaderConfigGroupWrapper::GetRowExcelTradeMarket_Of_CalculatePoolId(int32 CalculatePoolId, int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelTradeMarket_Of_CalculatePoolId");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelTradeMarket_Of_CalculatePoolId Parms{};

	Parms.CalculatePoolId = CalculatePoolId;
	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelTradeMarket_Of_Id
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   ID                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelTradeMarket*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelTradeMarket* UExcelLoaderConfigGroupWrapper::GetRowExcelTradeMarket_Of_Id(int32 ID, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelTradeMarket_Of_Id");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelTradeMarket_Of_Id Parms{};

	Parms.ID = ID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelTradeMarket_Of_MarketType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   MarketType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelTradeMarket*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelTradeMarket* UExcelLoaderConfigGroupWrapper::GetRowExcelTradeMarket_Of_MarketType(int32 MarketType, int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelTradeMarket_Of_MarketType");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelTradeMarket_Of_MarketType Parms{};

	Parms.MarketType = MarketType;
	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelTradeStandardPrice_Of_Id
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   ID                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelTradeStandardPrice*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelTradeStandardPrice* UExcelLoaderConfigGroupWrapper::GetRowExcelTradeStandardPrice_Of_Id(int32 ID, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelTradeStandardPrice_Of_Id");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelTradeStandardPrice_Of_Id Parms{};

	Parms.ID = ID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelTradeValidPrice_AllOf_Id
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   ID                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UExcelLoaderTgfConfigExcelTradeValidPrice*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelTradeValidPrice*> UExcelLoaderConfigGroupWrapper::GetRowExcelTradeValidPrice_AllOf_Id(int32 ID, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelTradeValidPrice_AllOf_Id");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelTradeValidPrice_AllOf_Id Parms{};

	Parms.ID = ID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelTradeValidPrice_Of_Id
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   ID                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelTradeValidPrice*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelTradeValidPrice* UExcelLoaderConfigGroupWrapper::GetRowExcelTradeValidPrice_Of_Id(int32 ID, int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelTradeValidPrice_Of_Id");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelTradeValidPrice_Of_Id Parms{};

	Parms.ID = ID;
	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowExcelTradeValidTime_Of_Id
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   ID                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelTradeValidTime*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelTradeValidTime* UExcelLoaderConfigGroupWrapper::GetRowExcelTradeValidTime_Of_Id(int32 ID, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowExcelTradeValidTime_Of_Id");

	Params::ExcelLoaderConfigGroupWrapper_GetRowExcelTradeValidTime_Of_Id Parms{};

	Parms.ID = ID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowUESourceAbilitySet_Of_UeSourceId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   UeSourceId                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigUESourceAbilitySet*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigUESourceAbilitySet* UExcelLoaderConfigGroupWrapper::GetRowUESourceAbilitySet_Of_UeSourceId(int32 UeSourceId, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowUESourceAbilitySet_Of_UeSourceId");

	Params::ExcelLoaderConfigGroupWrapper_GetRowUESourceAbilitySet_Of_UeSourceId Parms{};

	Parms.UeSourceId = UeSourceId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowUeSourceActorSkin_Of_SkinId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   SkinId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigUeSourceActorSkin*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigUeSourceActorSkin* UExcelLoaderConfigGroupWrapper::GetRowUeSourceActorSkin_Of_SkinId(int32 SkinId, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowUeSourceActorSkin_Of_SkinId");

	Params::ExcelLoaderConfigGroupWrapper_GetRowUeSourceActorSkin_Of_SkinId Parms{};

	Parms.SkinId = SkinId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowUeSourceCharacter_Of_RoleId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   RoleID                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigUeSourceCharacter*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigUeSourceCharacter* UExcelLoaderConfigGroupWrapper::GetRowUeSourceCharacter_Of_RoleId(int32 RoleID, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowUeSourceCharacter_Of_RoleId");

	Params::ExcelLoaderConfigGroupWrapper_GetRowUeSourceCharacter_Of_RoleId Parms{};

	Parms.RoleID = RoleID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowUeSourceEquipment_Of_EquipId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   EquipId                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigUeSourceEquipment*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigUeSourceEquipment* UExcelLoaderConfigGroupWrapper::GetRowUeSourceEquipment_Of_EquipId(int32 EquipId, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowUeSourceEquipment_Of_EquipId");

	Params::ExcelLoaderConfigGroupWrapper_GetRowUeSourceEquipment_Of_EquipId Parms{};

	Parms.EquipId = EquipId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowUeSourceEquipmentSubType_Of_UePath
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           UePath                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigUeSourceEquipmentSubType*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigUeSourceEquipmentSubType* UExcelLoaderConfigGroupWrapper::GetRowUeSourceEquipmentSubType_Of_UePath(const class FString& UePath, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowUeSourceEquipmentSubType_Of_UePath");

	Params::ExcelLoaderConfigGroupWrapper_GetRowUeSourceEquipmentSubType_Of_UePath Parms{};

	Parms.UePath = std::move(UePath);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowUESourceFirstLevelAttrDataAsset_Of_Id
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   ID                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigUESourceFirstLevelAttrDataAsset*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigUESourceFirstLevelAttrDataAsset* UExcelLoaderConfigGroupWrapper::GetRowUESourceFirstLevelAttrDataAsset_Of_Id(int32 ID, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowUESourceFirstLevelAttrDataAsset_Of_Id");

	Params::ExcelLoaderConfigGroupWrapper_GetRowUESourceFirstLevelAttrDataAsset_Of_Id Parms{};

	Parms.ID = ID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowUESourceItemType_Of_TypeId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   TypeId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigUESourceItemType*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigUESourceItemType* UExcelLoaderConfigGroupWrapper::GetRowUESourceItemType_Of_TypeId(int32 TypeId, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowUESourceItemType_Of_TypeId");

	Params::ExcelLoaderConfigGroupWrapper_GetRowUESourceItemType_Of_TypeId Parms{};

	Parms.TypeId = TypeId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetRowUeSourceLootType_Of_Name
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           Param_Name                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigUeSourceLootType*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigUeSourceLootType* UExcelLoaderConfigGroupWrapper::GetRowUeSourceLootType_Of_Name(const class FString& Param_Name, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetRowUeSourceLootType_Of_Name");

	Params::ExcelLoaderConfigGroupWrapper_GetRowUeSourceLootType_Of_Name Parms{};

	Parms.Param_Name = std::move(Param_Name);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetUESourceAbilitySet_SizeOf_UeSourceId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetUESourceAbilitySet_SizeOf_UeSourceId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetUESourceAbilitySet_SizeOf_UeSourceId");

	Params::ExcelLoaderConfigGroupWrapper_GetUESourceAbilitySet_SizeOf_UeSourceId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetUeSourceActorSkin_SizeOf_SkinId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetUeSourceActorSkin_SizeOf_SkinId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetUeSourceActorSkin_SizeOf_SkinId");

	Params::ExcelLoaderConfigGroupWrapper_GetUeSourceActorSkin_SizeOf_SkinId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetUeSourceCharacter_SizeOf_RoleId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetUeSourceCharacter_SizeOf_RoleId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetUeSourceCharacter_SizeOf_RoleId");

	Params::ExcelLoaderConfigGroupWrapper_GetUeSourceCharacter_SizeOf_RoleId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetUeSourceEquipment_SizeOf_EquipId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetUeSourceEquipment_SizeOf_EquipId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetUeSourceEquipment_SizeOf_EquipId");

	Params::ExcelLoaderConfigGroupWrapper_GetUeSourceEquipment_SizeOf_EquipId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetUeSourceEquipmentSubType_SizeOf_UePath
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetUeSourceEquipmentSubType_SizeOf_UePath()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetUeSourceEquipmentSubType_SizeOf_UePath");

	Params::ExcelLoaderConfigGroupWrapper_GetUeSourceEquipmentSubType_SizeOf_UePath Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetUESourceFirstLevelAttrDataAsset_SizeOf_Id
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetUESourceFirstLevelAttrDataAsset_SizeOf_Id()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetUESourceFirstLevelAttrDataAsset_SizeOf_Id");

	Params::ExcelLoaderConfigGroupWrapper_GetUESourceFirstLevelAttrDataAsset_SizeOf_Id Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetUESourceItemType_SizeOf_TypeId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetUESourceItemType_SizeOf_TypeId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetUESourceItemType_SizeOf_TypeId");

	Params::ExcelLoaderConfigGroupWrapper_GetUESourceItemType_SizeOf_TypeId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderConfigGroupWrapper.GetUeSourceLootType_SizeOf_Name
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderConfigGroupWrapper::GetUeSourceLootType_SizeOf_Name()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderConfigGroupWrapper", "GetUeSourceLootType_SizeOf_Name");

	Params::ExcelLoaderConfigGroupWrapper_GetUeSourceLootType_SizeOf_Name Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderXrescodeXrescodeIndex.GetAllOfFields
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> UExcelLoaderXrescodeXrescodeIndex::GetAllOfFields()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderXrescodeXrescodeIndex", "GetAllOfFields");

	Params::ExcelLoaderXrescodeXrescodeIndex_GetAllOfFields Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderXrescodeXrescodeIndex.GetAllOfSortBy
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> UExcelLoaderXrescodeXrescodeIndex::GetAllOfSortBy()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderXrescodeXrescodeIndex", "GetAllOfSortBy");

	Params::ExcelLoaderXrescodeXrescodeIndex_GetAllOfSortBy Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderXrescodeXrescodeIndex.GetAllowNotFound
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UExcelLoaderXrescodeXrescodeIndex::GetAllowNotFound(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderXrescodeXrescodeIndex", "GetAllowNotFound");

	Params::ExcelLoaderXrescodeXrescodeIndex_GetAllowNotFound Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderXrescodeXrescodeIndex.GetFields
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderXrescodeXrescodeIndex::GetFields(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderXrescodeXrescodeIndex", "GetFields");

	Params::ExcelLoaderXrescodeXrescodeIndex_GetFields Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderXrescodeXrescodeIndex.GetFieldsSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderXrescodeXrescodeIndex::GetFieldsSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderXrescodeXrescodeIndex", "GetFieldsSize");

	Params::ExcelLoaderXrescodeXrescodeIndex_GetFieldsSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderXrescodeXrescodeIndex.GetFileMapping
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderXrescodeXrescodeIndex::GetFileMapping(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderXrescodeXrescodeIndex", "GetFileMapping");

	Params::ExcelLoaderXrescodeXrescodeIndex_GetFileMapping Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderXrescodeXrescodeIndex.GetIgnoreAllDefaultKey
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UExcelLoaderXrescodeXrescodeIndex::GetIgnoreAllDefaultKey(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderXrescodeXrescodeIndex", "GetIgnoreAllDefaultKey");

	Params::ExcelLoaderXrescodeXrescodeIndex_GetIgnoreAllDefaultKey Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderXrescodeXrescodeIndex.GetIgnoreAnyDefaultKey
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UExcelLoaderXrescodeXrescodeIndex::GetIgnoreAnyDefaultKey(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderXrescodeXrescodeIndex", "GetIgnoreAnyDefaultKey");

	Params::ExcelLoaderXrescodeXrescodeIndex_GetIgnoreAnyDefaultKey Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderXrescodeXrescodeIndex.GetIndexType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UExcelLoaderXrescodeXrescodeIndex::GetIndexType(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderXrescodeXrescodeIndex", "GetIndexType");

	Params::ExcelLoaderXrescodeXrescodeIndex_GetIndexType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderXrescodeXrescodeIndex.GetName
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderXrescodeXrescodeIndex::GetName(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderXrescodeXrescodeIndex", "GetName");

	Params::ExcelLoaderXrescodeXrescodeIndex_GetName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderXrescodeXrescodeIndex.GetSortBy
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UExcelLoaderXrescodeXrescodeIndex::GetSortBy(int64 Param_Index, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderXrescodeXrescodeIndex", "GetSortBy");

	Params::ExcelLoaderXrescodeXrescodeIndex_GetSortBy Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderXrescodeXrescodeIndex.GetSortBySize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UExcelLoaderXrescodeXrescodeIndex::GetSortBySize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderXrescodeXrescodeIndex", "GetSortBySize");

	Params::ExcelLoaderXrescodeXrescodeIndex_GetSortBySize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderXrescodeXrescodeUeField.GetUclassFieldIgnore
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UExcelLoaderXrescodeXrescodeUeField::GetUclassFieldIgnore(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderXrescodeXrescodeUeField", "GetUclassFieldIgnore");

	Params::ExcelLoaderXrescodeXrescodeUeField_GetUclassFieldIgnore Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderXrescodeXrescodeUeField.GetUstructFieldIgnore
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UExcelLoaderXrescodeXrescodeUeField::GetUstructFieldIgnore(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderXrescodeXrescodeUeField", "GetUstructFieldIgnore");

	Params::ExcelLoaderXrescodeXrescodeUeField_GetUstructFieldIgnore Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderXrescodeXrescodeUeType.GetBpProtocolWithoutUclass
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UExcelLoaderXrescodeXrescodeUeType::GetBpProtocolWithoutUclass(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderXrescodeXrescodeUeType", "GetBpProtocolWithoutUclass");

	Params::ExcelLoaderXrescodeXrescodeUeType_GetBpProtocolWithoutUclass Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function TGFBattleProtocol.ExcelLoaderXrescodeXrescodeUeType.GetBpProtocolWithUstruct
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UExcelLoaderXrescodeXrescodeUeType::GetBpProtocolWithUstruct(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExcelLoaderXrescodeXrescodeUeType", "GetBpProtocolWithUstruct");

	Params::ExcelLoaderXrescodeXrescodeUeType_GetBpProtocolWithUstruct Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}

}

