#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_TGF_Interrupt_Base

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "LyraGame_structs.hpp"
#include "LyraGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_TGF_Interrupt_Base.GA_TGF_Interrupt_Base_C
// 0x0078 (0x0700 - 0x0688)
class UGA_TGF_Interrupt_Base_C final : public ULyraGameplayAbility
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0688(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FGameplayTagContainer                  InterruptStateTagWillAdd;                          // 0x0690(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTag                           ImmueInterruptStateTag;                            // 0x06B0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  CancelAbilityWithTags;                             // 0x06B8(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTagContainer                  CancelAbilityWithoutTags;                          // 0x06D8(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	class AActor*                                 InterruptedActor;                                  // 0x06F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void CheckShouldInterrupt(bool* ShouldInterrupt);
	void ExecuteUbergraph_GA_TGF_Interrupt_Base(int32 EntryPoint);
	void K2_ActivateAbility();
	void K2_OnEndAbility(bool bWasCancelled);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_TGF_Interrupt_Base_C">();
	}
	static class UGA_TGF_Interrupt_Base_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_TGF_Interrupt_Base_C>();
	}
};
static_assert(alignof(UGA_TGF_Interrupt_Base_C) == 0x000008, "Wrong alignment on UGA_TGF_Interrupt_Base_C");
static_assert(sizeof(UGA_TGF_Interrupt_Base_C) == 0x000700, "Wrong size on UGA_TGF_Interrupt_Base_C");
static_assert(offsetof(UGA_TGF_Interrupt_Base_C, UberGraphFrame) == 0x000688, "Member 'UGA_TGF_Interrupt_Base_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGA_TGF_Interrupt_Base_C, InterruptStateTagWillAdd) == 0x000690, "Member 'UGA_TGF_Interrupt_Base_C::InterruptStateTagWillAdd' has a wrong offset!");
static_assert(offsetof(UGA_TGF_Interrupt_Base_C, ImmueInterruptStateTag) == 0x0006B0, "Member 'UGA_TGF_Interrupt_Base_C::ImmueInterruptStateTag' has a wrong offset!");
static_assert(offsetof(UGA_TGF_Interrupt_Base_C, CancelAbilityWithTags) == 0x0006B8, "Member 'UGA_TGF_Interrupt_Base_C::CancelAbilityWithTags' has a wrong offset!");
static_assert(offsetof(UGA_TGF_Interrupt_Base_C, CancelAbilityWithoutTags) == 0x0006D8, "Member 'UGA_TGF_Interrupt_Base_C::CancelAbilityWithoutTags' has a wrong offset!");
static_assert(offsetof(UGA_TGF_Interrupt_Base_C, InterruptedActor) == 0x0006F8, "Member 'UGA_TGF_Interrupt_Base_C::InterruptedActor' has a wrong offset!");

}

