#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Common_ItemTooltip_Detail

#include "Basic.hpp"

#include "LyraGame_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_Common_ItemTooltip_Detail.WBP_Common_ItemTooltip_Detail_C
// 0x0308 (0x0580 - 0x0278)
class UWBP_Common_ItemTooltip_Detail_C : public UUserWidget
{
public:
	class UImage*                                 BGRarity;                                          // 0x0278(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               BuffInfo;                                          // 0x0280(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_ItemTooltips_Buffline_C*           BuffLine;                                          // 0x0288(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         Button1;                                           // 0x0290(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         Button2;                                           // 0x0298(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         Button3;                                           // 0x02A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         Button4;                                           // 0x02A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         Button5;                                           // 0x02B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         Button6;                                           // 0x02B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       Button6Text;                                       // 0x02C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         Button7;                                           // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       Button7Text;                                       // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               ButtonInfo;                                        // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               Career;                                            // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonRichTextBlock*                   CareerText;                                        // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       CompareText;                                       // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Current;                                           // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonRichTextBlock*                   DefenceLevel;                                      // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 DismantleIcon;                                     // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonRichTextBlock*                   DismantleNum;                                      // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonRichTextBlock*                   DismantleTitle;                                    // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonRichTextBlock*                   DismantleTitle_1;                                  // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               DismantleValue;                                    // 0x0328(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               DPH;                                               // 0x0330(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_ItemTooltips_MainBasic_C*          DphValue;                                          // 0x0338(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               Durability;                                        // 0x0340(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonRichTextBlock*                   DurabilityNum;                                     // 0x0348(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonRichTextBlock*                   DurabilityTitle;                                   // 0x0350(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               GearSetInfo;                                       // 0x0358(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_ItemGearSetSlot_C*                 GearSetSlot;                                       // 0x0360(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Tooltip_GemItem_C*                 Gem1;                                              // 0x0368(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Tooltip_GemItem_C*                 Gem2;                                              // 0x0370(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               GemDescrib;                                        // 0x0378(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonRichTextBlock*                   GemDescribeText;                                   // 0x0380(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               GemInfo;                                           // 0x0388(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       Guid;                                              // 0x0390(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       HeapText;                                          // 0x0398(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image;                                             // 0x03A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Coin;                                        // 0x03A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 InnerBgRarity;                                     // 0x03B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ItemIcon;                                          // 0x03B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonRichTextBlock*                   ItemName;                                          // 0x03C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonRichTextBlock*                   ItemParts;                                         // 0x03C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               LvRequire;                                         // 0x03D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonRichTextBlock*                   LvRequireNum;                                      // 0x03D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonRichTextBlock*                   LvRequireTitle;                                    // 0x03E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonRichTextBlock*                   LvRequireTitle_1;                                  // 0x03E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               Need;                                              // 0x03F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               OtherInfo;                                         // 0x03F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonRichTextBlock*                   OwnerDescribeText;                                 // 0x0400(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               OwnerInfo;                                         // 0x0408(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonRichTextBlock*                   Profession;                                        // 0x0410(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 RarityBg;                                          // 0x0418(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 RarityCorruption;                                  // 0x0420(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 RarityCorruption_FX;                               // 0x0428(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonRichTextBlock*                   SellNum;                                           // 0x0430(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SellValue;                                         // 0x0438(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Separation2Rarity;                                 // 0x0440(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 SeparationRarity_1;                                // 0x0448(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 SeparationRarity1;                                 // 0x0450(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 SeparationRarity2;                                 // 0x0458(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 SeparationRarity3;                                 // 0x0460(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 SeparationRarity_GearSet;                          // 0x0468(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 SeparationRarity_GemInfo;                          // 0x0470(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 SeparationRarity_OwnerInfo;                        // 0x0478(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 SlotIcon;                                          // 0x0480(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               SlotInfo;                                          // 0x0488(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonRichTextBlock*                   SlotText;                                          // 0x0490(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Special;                                           // 0x0498(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonRichTextBlock*                   SpecialHint;                                       // 0x04A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonAnimatedSwitcher*                SwitcherDismantle;                                 // 0x04A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       TakeOffText;                                       // 0x04B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 TopLine2Rarity;                                    // 0x04B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 TopLineRarity;                                     // 0x04C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               TradePrice;                                        // 0x04C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Unknow;                                            // 0x04D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       UseText;                                           // 0x04D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       UseText_1;                                         // 0x04E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VerticalBox_Buff;                                  // 0x04E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VerticalBox_GearSet;                               // 0x04F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VerticalBox_MainBasic;                             // 0x04F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Item_PriceTrend_C*                 WBP_Item_PriceTrend;                               // 0x0500(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TArray<class UWBP_ItemTooltips_Buffline_C*>   BuffLines;                                         // 0x0508(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	int32                                         Type_id;                                           // 0x0518(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETgfEquipSubType                              SubEquipType;                                      // 0x051C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETgfWeaponEquipType                           EquipType;                                         // 0x051D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51E[0x2];                                      // 0x051E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UExcelLoaderConfigGroupWrapper*         ConfigGroup;                                       // 0x0520(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        AttackSpeedValue;                                  // 0x0528(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETgfEquipQuality                              ItemQuality;                                       // 0x0530(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_531[0x7];                                      // 0x0531(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UExcelLoaderTgfConfigExcelItemType*     ItemTypeConfig_Bp;                                 // 0x0538(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UExcelLoaderTgfConfigExcelGearTemplate* GearConfig_Bp;                                     // 0x0540(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UExcelLoaderTgfConfigExcelAffixTemplate* AffixConfig_Bp;                                    // 0x0548(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        ServerDphValue;                                    // 0x0550(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UWBP_ItemTooltips_MainBasic_C*>  TopAffixLines;                                     // 0x0558(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	bool                                          bDisplayAttributeAsRange;                          // 0x0568(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	ETgfActorCareer                               ActorCareer;                                       // 0x0569(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56A[0x6];                                      // 0x056A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UTgfInventoryItemWrapper*               ItemInstance;                                      // 0x0570(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	ETgfInventoryType                             Inventory_Type_Base;                               // 0x0578(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HideBaseinfo;                                      // 0x0579(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AttributeValueToText(struct FAffixDisplayConfig& RefAffix, bool bHideSign, bool EnableRange, const class FString& Color);
	void InitConfigs();
	void Is_Positive_Affix(struct FAffixDisplayConfig& Ref_Affix, bool* bIsPositive);
	void OverrideInputPrompt(const struct FInputChord& Default_Keyboard_Input, bool bEnable, const class FText& Text);
	void TradeShowLeft();
	void TradeShowRight();
	void UpdateAttackLevel(TArray<struct FAffixDisplayConfig>& Attrs);
	void UpdateAttrsBase(TArray<struct FAffixDisplayConfig>& Attrs);
	void UpdateDurability(bool* Ret);
	void UpdateOtherInfo();
	void UpdateTopAffixes(TArray<struct FAffixDisplayConfig>& Attrs);

	class FString GetModuleName() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_Common_ItemTooltip_Detail_C">();
	}
	static class UWBP_Common_ItemTooltip_Detail_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_Common_ItemTooltip_Detail_C>();
	}
};
static_assert(alignof(UWBP_Common_ItemTooltip_Detail_C) == 0x000008, "Wrong alignment on UWBP_Common_ItemTooltip_Detail_C");
static_assert(sizeof(UWBP_Common_ItemTooltip_Detail_C) == 0x000580, "Wrong size on UWBP_Common_ItemTooltip_Detail_C");
static_assert(offsetof(UWBP_Common_ItemTooltip_Detail_C, BGRarity) == 0x000278, "Member 'UWBP_Common_ItemTooltip_Detail_C::BGRarity' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemTooltip_Detail_C, BuffInfo) == 0x000280, "Member 'UWBP_Common_ItemTooltip_Detail_C::BuffInfo' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemTooltip_Detail_C, BuffLine) == 0x000288, "Member 'UWBP_Common_ItemTooltip_Detail_C::BuffLine' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemTooltip_Detail_C, Button1) == 0x000290, "Member 'UWBP_Common_ItemTooltip_Detail_C::Button1' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemTooltip_Detail_C, Button2) == 0x000298, "Member 'UWBP_Common_ItemTooltip_Detail_C::Button2' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemTooltip_Detail_C, Button3) == 0x0002A0, "Member 'UWBP_Common_ItemTooltip_Detail_C::Button3' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemTooltip_Detail_C, Button4) == 0x0002A8, "Member 'UWBP_Common_ItemTooltip_Detail_C::Button4' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemTooltip_Detail_C, Button5) == 0x0002B0, "Member 'UWBP_Common_ItemTooltip_Detail_C::Button5' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemTooltip_Detail_C, Button6) == 0x0002B8, "Member 'UWBP_Common_ItemTooltip_Detail_C::Button6' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemTooltip_Detail_C, Button6Text) == 0x0002C0, "Member 'UWBP_Common_ItemTooltip_Detail_C::Button6Text' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemTooltip_Detail_C, Button7) == 0x0002C8, "Member 'UWBP_Common_ItemTooltip_Detail_C::Button7' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemTooltip_Detail_C, Button7Text) == 0x0002D0, "Member 'UWBP_Common_ItemTooltip_Detail_C::Button7Text' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemTooltip_Detail_C, ButtonInfo) == 0x0002D8, "Member 'UWBP_Common_ItemTooltip_Detail_C::ButtonInfo' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemTooltip_Detail_C, Career) == 0x0002E0, "Member 'UWBP_Common_ItemTooltip_Detail_C::Career' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemTooltip_Detail_C, CareerText) == 0x0002E8, "Member 'UWBP_Common_ItemTooltip_Detail_C::CareerText' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemTooltip_Detail_C, CompareText) == 0x0002F0, "Member 'UWBP_Common_ItemTooltip_Detail_C::CompareText' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemTooltip_Detail_C, Current) == 0x0002F8, "Member 'UWBP_Common_ItemTooltip_Detail_C::Current' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemTooltip_Detail_C, DefenceLevel) == 0x000300, "Member 'UWBP_Common_ItemTooltip_Detail_C::DefenceLevel' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemTooltip_Detail_C, DismantleIcon) == 0x000308, "Member 'UWBP_Common_ItemTooltip_Detail_C::DismantleIcon' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemTooltip_Detail_C, DismantleNum) == 0x000310, "Member 'UWBP_Common_ItemTooltip_Detail_C::DismantleNum' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemTooltip_Detail_C, DismantleTitle) == 0x000318, "Member 'UWBP_Common_ItemTooltip_Detail_C::DismantleTitle' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemTooltip_Detail_C, DismantleTitle_1) == 0x000320, "Member 'UWBP_Common_ItemTooltip_Detail_C::DismantleTitle_1' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemTooltip_Detail_C, DismantleValue) == 0x000328, "Member 'UWBP_Common_ItemTooltip_Detail_C::DismantleValue' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemTooltip_Detail_C, DPH) == 0x000330, "Member 'UWBP_Common_ItemTooltip_Detail_C::DPH' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemTooltip_Detail_C, DphValue) == 0x000338, "Member 'UWBP_Common_ItemTooltip_Detail_C::DphValue' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemTooltip_Detail_C, Durability) == 0x000340, "Member 'UWBP_Common_ItemTooltip_Detail_C::Durability' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemTooltip_Detail_C, DurabilityNum) == 0x000348, "Member 'UWBP_Common_ItemTooltip_Detail_C::DurabilityNum' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemTooltip_Detail_C, DurabilityTitle) == 0x000350, "Member 'UWBP_Common_ItemTooltip_Detail_C::DurabilityTitle' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemTooltip_Detail_C, GearSetInfo) == 0x000358, "Member 'UWBP_Common_ItemTooltip_Detail_C::GearSetInfo' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemTooltip_Detail_C, GearSetSlot) == 0x000360, "Member 'UWBP_Common_ItemTooltip_Detail_C::GearSetSlot' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemTooltip_Detail_C, Gem1) == 0x000368, "Member 'UWBP_Common_ItemTooltip_Detail_C::Gem1' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemTooltip_Detail_C, Gem2) == 0x000370, "Member 'UWBP_Common_ItemTooltip_Detail_C::Gem2' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemTooltip_Detail_C, GemDescrib) == 0x000378, "Member 'UWBP_Common_ItemTooltip_Detail_C::GemDescrib' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemTooltip_Detail_C, GemDescribeText) == 0x000380, "Member 'UWBP_Common_ItemTooltip_Detail_C::GemDescribeText' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemTooltip_Detail_C, GemInfo) == 0x000388, "Member 'UWBP_Common_ItemTooltip_Detail_C::GemInfo' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemTooltip_Detail_C, Guid) == 0x000390, "Member 'UWBP_Common_ItemTooltip_Detail_C::Guid' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemTooltip_Detail_C, HeapText) == 0x000398, "Member 'UWBP_Common_ItemTooltip_Detail_C::HeapText' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemTooltip_Detail_C, Image) == 0x0003A0, "Member 'UWBP_Common_ItemTooltip_Detail_C::Image' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemTooltip_Detail_C, Image_Coin) == 0x0003A8, "Member 'UWBP_Common_ItemTooltip_Detail_C::Image_Coin' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemTooltip_Detail_C, InnerBgRarity) == 0x0003B0, "Member 'UWBP_Common_ItemTooltip_Detail_C::InnerBgRarity' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemTooltip_Detail_C, ItemIcon) == 0x0003B8, "Member 'UWBP_Common_ItemTooltip_Detail_C::ItemIcon' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemTooltip_Detail_C, ItemName) == 0x0003C0, "Member 'UWBP_Common_ItemTooltip_Detail_C::ItemName' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemTooltip_Detail_C, ItemParts) == 0x0003C8, "Member 'UWBP_Common_ItemTooltip_Detail_C::ItemParts' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemTooltip_Detail_C, LvRequire) == 0x0003D0, "Member 'UWBP_Common_ItemTooltip_Detail_C::LvRequire' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemTooltip_Detail_C, LvRequireNum) == 0x0003D8, "Member 'UWBP_Common_ItemTooltip_Detail_C::LvRequireNum' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemTooltip_Detail_C, LvRequireTitle) == 0x0003E0, "Member 'UWBP_Common_ItemTooltip_Detail_C::LvRequireTitle' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemTooltip_Detail_C, LvRequireTitle_1) == 0x0003E8, "Member 'UWBP_Common_ItemTooltip_Detail_C::LvRequireTitle_1' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemTooltip_Detail_C, Need) == 0x0003F0, "Member 'UWBP_Common_ItemTooltip_Detail_C::Need' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemTooltip_Detail_C, OtherInfo) == 0x0003F8, "Member 'UWBP_Common_ItemTooltip_Detail_C::OtherInfo' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemTooltip_Detail_C, OwnerDescribeText) == 0x000400, "Member 'UWBP_Common_ItemTooltip_Detail_C::OwnerDescribeText' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemTooltip_Detail_C, OwnerInfo) == 0x000408, "Member 'UWBP_Common_ItemTooltip_Detail_C::OwnerInfo' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemTooltip_Detail_C, Profession) == 0x000410, "Member 'UWBP_Common_ItemTooltip_Detail_C::Profession' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemTooltip_Detail_C, RarityBg) == 0x000418, "Member 'UWBP_Common_ItemTooltip_Detail_C::RarityBg' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemTooltip_Detail_C, RarityCorruption) == 0x000420, "Member 'UWBP_Common_ItemTooltip_Detail_C::RarityCorruption' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemTooltip_Detail_C, RarityCorruption_FX) == 0x000428, "Member 'UWBP_Common_ItemTooltip_Detail_C::RarityCorruption_FX' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemTooltip_Detail_C, SellNum) == 0x000430, "Member 'UWBP_Common_ItemTooltip_Detail_C::SellNum' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemTooltip_Detail_C, SellValue) == 0x000438, "Member 'UWBP_Common_ItemTooltip_Detail_C::SellValue' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemTooltip_Detail_C, Separation2Rarity) == 0x000440, "Member 'UWBP_Common_ItemTooltip_Detail_C::Separation2Rarity' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemTooltip_Detail_C, SeparationRarity_1) == 0x000448, "Member 'UWBP_Common_ItemTooltip_Detail_C::SeparationRarity_1' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemTooltip_Detail_C, SeparationRarity1) == 0x000450, "Member 'UWBP_Common_ItemTooltip_Detail_C::SeparationRarity1' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemTooltip_Detail_C, SeparationRarity2) == 0x000458, "Member 'UWBP_Common_ItemTooltip_Detail_C::SeparationRarity2' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemTooltip_Detail_C, SeparationRarity3) == 0x000460, "Member 'UWBP_Common_ItemTooltip_Detail_C::SeparationRarity3' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemTooltip_Detail_C, SeparationRarity_GearSet) == 0x000468, "Member 'UWBP_Common_ItemTooltip_Detail_C::SeparationRarity_GearSet' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemTooltip_Detail_C, SeparationRarity_GemInfo) == 0x000470, "Member 'UWBP_Common_ItemTooltip_Detail_C::SeparationRarity_GemInfo' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemTooltip_Detail_C, SeparationRarity_OwnerInfo) == 0x000478, "Member 'UWBP_Common_ItemTooltip_Detail_C::SeparationRarity_OwnerInfo' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemTooltip_Detail_C, SlotIcon) == 0x000480, "Member 'UWBP_Common_ItemTooltip_Detail_C::SlotIcon' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemTooltip_Detail_C, SlotInfo) == 0x000488, "Member 'UWBP_Common_ItemTooltip_Detail_C::SlotInfo' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemTooltip_Detail_C, SlotText) == 0x000490, "Member 'UWBP_Common_ItemTooltip_Detail_C::SlotText' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemTooltip_Detail_C, Special) == 0x000498, "Member 'UWBP_Common_ItemTooltip_Detail_C::Special' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemTooltip_Detail_C, SpecialHint) == 0x0004A0, "Member 'UWBP_Common_ItemTooltip_Detail_C::SpecialHint' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemTooltip_Detail_C, SwitcherDismantle) == 0x0004A8, "Member 'UWBP_Common_ItemTooltip_Detail_C::SwitcherDismantle' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemTooltip_Detail_C, TakeOffText) == 0x0004B0, "Member 'UWBP_Common_ItemTooltip_Detail_C::TakeOffText' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemTooltip_Detail_C, TopLine2Rarity) == 0x0004B8, "Member 'UWBP_Common_ItemTooltip_Detail_C::TopLine2Rarity' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemTooltip_Detail_C, TopLineRarity) == 0x0004C0, "Member 'UWBP_Common_ItemTooltip_Detail_C::TopLineRarity' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemTooltip_Detail_C, TradePrice) == 0x0004C8, "Member 'UWBP_Common_ItemTooltip_Detail_C::TradePrice' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemTooltip_Detail_C, Unknow) == 0x0004D0, "Member 'UWBP_Common_ItemTooltip_Detail_C::Unknow' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemTooltip_Detail_C, UseText) == 0x0004D8, "Member 'UWBP_Common_ItemTooltip_Detail_C::UseText' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemTooltip_Detail_C, UseText_1) == 0x0004E0, "Member 'UWBP_Common_ItemTooltip_Detail_C::UseText_1' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemTooltip_Detail_C, VerticalBox_Buff) == 0x0004E8, "Member 'UWBP_Common_ItemTooltip_Detail_C::VerticalBox_Buff' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemTooltip_Detail_C, VerticalBox_GearSet) == 0x0004F0, "Member 'UWBP_Common_ItemTooltip_Detail_C::VerticalBox_GearSet' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemTooltip_Detail_C, VerticalBox_MainBasic) == 0x0004F8, "Member 'UWBP_Common_ItemTooltip_Detail_C::VerticalBox_MainBasic' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemTooltip_Detail_C, WBP_Item_PriceTrend) == 0x000500, "Member 'UWBP_Common_ItemTooltip_Detail_C::WBP_Item_PriceTrend' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemTooltip_Detail_C, BuffLines) == 0x000508, "Member 'UWBP_Common_ItemTooltip_Detail_C::BuffLines' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemTooltip_Detail_C, Type_id) == 0x000518, "Member 'UWBP_Common_ItemTooltip_Detail_C::Type_id' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemTooltip_Detail_C, SubEquipType) == 0x00051C, "Member 'UWBP_Common_ItemTooltip_Detail_C::SubEquipType' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemTooltip_Detail_C, EquipType) == 0x00051D, "Member 'UWBP_Common_ItemTooltip_Detail_C::EquipType' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemTooltip_Detail_C, ConfigGroup) == 0x000520, "Member 'UWBP_Common_ItemTooltip_Detail_C::ConfigGroup' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemTooltip_Detail_C, AttackSpeedValue) == 0x000528, "Member 'UWBP_Common_ItemTooltip_Detail_C::AttackSpeedValue' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemTooltip_Detail_C, ItemQuality) == 0x000530, "Member 'UWBP_Common_ItemTooltip_Detail_C::ItemQuality' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemTooltip_Detail_C, ItemTypeConfig_Bp) == 0x000538, "Member 'UWBP_Common_ItemTooltip_Detail_C::ItemTypeConfig_Bp' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemTooltip_Detail_C, GearConfig_Bp) == 0x000540, "Member 'UWBP_Common_ItemTooltip_Detail_C::GearConfig_Bp' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemTooltip_Detail_C, AffixConfig_Bp) == 0x000548, "Member 'UWBP_Common_ItemTooltip_Detail_C::AffixConfig_Bp' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemTooltip_Detail_C, ServerDphValue) == 0x000550, "Member 'UWBP_Common_ItemTooltip_Detail_C::ServerDphValue' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemTooltip_Detail_C, TopAffixLines) == 0x000558, "Member 'UWBP_Common_ItemTooltip_Detail_C::TopAffixLines' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemTooltip_Detail_C, bDisplayAttributeAsRange) == 0x000568, "Member 'UWBP_Common_ItemTooltip_Detail_C::bDisplayAttributeAsRange' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemTooltip_Detail_C, ActorCareer) == 0x000569, "Member 'UWBP_Common_ItemTooltip_Detail_C::ActorCareer' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemTooltip_Detail_C, ItemInstance) == 0x000570, "Member 'UWBP_Common_ItemTooltip_Detail_C::ItemInstance' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemTooltip_Detail_C, Inventory_Type_Base) == 0x000578, "Member 'UWBP_Common_ItemTooltip_Detail_C::Inventory_Type_Base' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemTooltip_Detail_C, HideBaseinfo) == 0x000579, "Member 'UWBP_Common_ItemTooltip_Detail_C::HideBaseinfo' has a wrong offset!");

}

