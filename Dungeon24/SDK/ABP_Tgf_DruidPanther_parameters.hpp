#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_Tgf_DruidPanther

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "LyraGame_structs.hpp"


namespace SDK::Params
{

// Function ABP_Tgf_DruidPanther.ABP_Tgf_DruidPanther_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct ABP_Tgf_DruidPanther_C_AnimGraph final
{
public:
	struct FPoseLink                              Param_AnimGraph;                                   // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABP_Tgf_DruidPanther_C_AnimGraph) == 0x000008, "Wrong alignment on ABP_Tgf_DruidPanther_C_AnimGraph");
static_assert(sizeof(ABP_Tgf_DruidPanther_C_AnimGraph) == 0x000010, "Wrong size on ABP_Tgf_DruidPanther_C_AnimGraph");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_AnimGraph, Param_AnimGraph) == 0x000000, "Member 'ABP_Tgf_DruidPanther_C_AnimGraph::Param_AnimGraph' has a wrong offset!");

// Function ABP_Tgf_DruidPanther.ABP_Tgf_DruidPanther_C.BlueprintThreadSafeUpdateAnimation
// 0x0038 (0x0038 - 0x0000)
struct ABP_Tgf_DruidPanther_C_BlueprintThreadSafeUpdateAnimation final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_UpdateMoveSpeed_DeltaTime_ImplicitCast;   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_UpdateIdleBreakTime_DeltaTime_ImplicitCast; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_UpdateMoveDirection_DeltaTime_ImplicitCast; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_UpdateRotation_DeltaTime_ImplicitCast;    // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_UpdateYawOffset_DeltaTime_ImplicitCast;   // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_UpdateAimingData_DeltaTime_ImplicitCast;  // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Tgf_DruidPanther_C_BlueprintThreadSafeUpdateAnimation) == 0x000008, "Wrong alignment on ABP_Tgf_DruidPanther_C_BlueprintThreadSafeUpdateAnimation");
static_assert(sizeof(ABP_Tgf_DruidPanther_C_BlueprintThreadSafeUpdateAnimation) == 0x000038, "Wrong size on ABP_Tgf_DruidPanther_C_BlueprintThreadSafeUpdateAnimation");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_BlueprintThreadSafeUpdateAnimation, DeltaTime) == 0x000000, "Member 'ABP_Tgf_DruidPanther_C_BlueprintThreadSafeUpdateAnimation::DeltaTime' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_BlueprintThreadSafeUpdateAnimation, CallFunc_UpdateMoveSpeed_DeltaTime_ImplicitCast) == 0x000008, "Member 'ABP_Tgf_DruidPanther_C_BlueprintThreadSafeUpdateAnimation::CallFunc_UpdateMoveSpeed_DeltaTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_BlueprintThreadSafeUpdateAnimation, CallFunc_UpdateIdleBreakTime_DeltaTime_ImplicitCast) == 0x000010, "Member 'ABP_Tgf_DruidPanther_C_BlueprintThreadSafeUpdateAnimation::CallFunc_UpdateIdleBreakTime_DeltaTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_BlueprintThreadSafeUpdateAnimation, CallFunc_UpdateMoveDirection_DeltaTime_ImplicitCast) == 0x000018, "Member 'ABP_Tgf_DruidPanther_C_BlueprintThreadSafeUpdateAnimation::CallFunc_UpdateMoveDirection_DeltaTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_BlueprintThreadSafeUpdateAnimation, CallFunc_UpdateRotation_DeltaTime_ImplicitCast) == 0x000020, "Member 'ABP_Tgf_DruidPanther_C_BlueprintThreadSafeUpdateAnimation::CallFunc_UpdateRotation_DeltaTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_BlueprintThreadSafeUpdateAnimation, CallFunc_UpdateYawOffset_DeltaTime_ImplicitCast) == 0x000028, "Member 'ABP_Tgf_DruidPanther_C_BlueprintThreadSafeUpdateAnimation::CallFunc_UpdateYawOffset_DeltaTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_BlueprintThreadSafeUpdateAnimation, CallFunc_UpdateAimingData_DeltaTime_ImplicitCast) == 0x000030, "Member 'ABP_Tgf_DruidPanther_C_BlueprintThreadSafeUpdateAnimation::CallFunc_UpdateAimingData_DeltaTime_ImplicitCast' has a wrong offset!");

// Function ABP_Tgf_DruidPanther.ABP_Tgf_DruidPanther_C.ExecuteUbergraph_ABP_Tgf_DruidPanther
// 0x00F8 (0x00F8 - 0x0000)
struct ABP_Tgf_DruidPanther_C_ExecuteUbergraph_ABP_Tgf_DruidPanther final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetAttachedParentCharacter_ReturnValue;   // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Tgf_Character_Default_C*            CallFunc_GetLyraCharacterThreadSafe_ReturnValue;   // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetSlopingAlpha_ReturnValue;              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_1;          // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_2;                // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_2;          // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9A[0x6];                                       // 0x009A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Abs_ReturnValue;                          // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_3;                // 0x00A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOnDedicatedServer_ReturnValue;          // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C2[0x6];                                       // 0x00C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetAttachedParentCharacter_ReturnValue_1; // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Less_DoubleDouble_A_ImplicitCast;         // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_StructMemberSet_Alpha_ImplicitCast;         // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_StructMemberSet_Alpha_ImplicitCast_1;       // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Less_DoubleDouble_A_ImplicitCast_1;       // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast_1;           // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast_2;           // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Roll_ImplicitCast;            // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Tgf_DruidPanther_C_ExecuteUbergraph_ABP_Tgf_DruidPanther) == 0x000008, "Wrong alignment on ABP_Tgf_DruidPanther_C_ExecuteUbergraph_ABP_Tgf_DruidPanther");
static_assert(sizeof(ABP_Tgf_DruidPanther_C_ExecuteUbergraph_ABP_Tgf_DruidPanther) == 0x0000F8, "Wrong size on ABP_Tgf_DruidPanther_C_ExecuteUbergraph_ABP_Tgf_DruidPanther");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_ExecuteUbergraph_ABP_Tgf_DruidPanther, EntryPoint) == 0x000000, "Member 'ABP_Tgf_DruidPanther_C_ExecuteUbergraph_ABP_Tgf_DruidPanther::EntryPoint' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_ExecuteUbergraph_ABP_Tgf_DruidPanther, CallFunc_GetAttachedParentCharacter_ReturnValue) == 0x000008, "Member 'ABP_Tgf_DruidPanther_C_ExecuteUbergraph_ABP_Tgf_DruidPanther::CallFunc_GetAttachedParentCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_ExecuteUbergraph_ABP_Tgf_DruidPanther, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000010, "Member 'ABP_Tgf_DruidPanther_C_ExecuteUbergraph_ABP_Tgf_DruidPanther::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_ExecuteUbergraph_ABP_Tgf_DruidPanther, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000028, "Member 'ABP_Tgf_DruidPanther_C_ExecuteUbergraph_ABP_Tgf_DruidPanther::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_ExecuteUbergraph_ABP_Tgf_DruidPanther, CallFunc_GetLyraCharacterThreadSafe_ReturnValue) == 0x000030, "Member 'ABP_Tgf_DruidPanther_C_ExecuteUbergraph_ABP_Tgf_DruidPanther::CallFunc_GetLyraCharacterThreadSafe_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_ExecuteUbergraph_ABP_Tgf_DruidPanther, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000038, "Member 'ABP_Tgf_DruidPanther_C_ExecuteUbergraph_ABP_Tgf_DruidPanther::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_ExecuteUbergraph_ABP_Tgf_DruidPanther, CallFunc_GetSlopingAlpha_ReturnValue) == 0x000040, "Member 'ABP_Tgf_DruidPanther_C_ExecuteUbergraph_ABP_Tgf_DruidPanther::CallFunc_GetSlopingAlpha_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_ExecuteUbergraph_ABP_Tgf_DruidPanther, CallFunc_Less_DoubleDouble_ReturnValue_1) == 0x000048, "Member 'ABP_Tgf_DruidPanther_C_ExecuteUbergraph_ABP_Tgf_DruidPanther::CallFunc_Less_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_ExecuteUbergraph_ABP_Tgf_DruidPanther, CallFunc_MakeRotator_ReturnValue) == 0x000050, "Member 'ABP_Tgf_DruidPanther_C_ExecuteUbergraph_ABP_Tgf_DruidPanther::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_ExecuteUbergraph_ABP_Tgf_DruidPanther, CallFunc_MakeRotator_ReturnValue_1) == 0x000068, "Member 'ABP_Tgf_DruidPanther_C_ExecuteUbergraph_ABP_Tgf_DruidPanther::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_ExecuteUbergraph_ABP_Tgf_DruidPanther, CallFunc_MakeRotator_ReturnValue_2) == 0x000080, "Member 'ABP_Tgf_DruidPanther_C_ExecuteUbergraph_ABP_Tgf_DruidPanther::CallFunc_MakeRotator_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_ExecuteUbergraph_ABP_Tgf_DruidPanther, CallFunc_Less_DoubleDouble_ReturnValue_2) == 0x000098, "Member 'ABP_Tgf_DruidPanther_C_ExecuteUbergraph_ABP_Tgf_DruidPanther::CallFunc_Less_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_ExecuteUbergraph_ABP_Tgf_DruidPanther, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000099, "Member 'ABP_Tgf_DruidPanther_C_ExecuteUbergraph_ABP_Tgf_DruidPanther::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_ExecuteUbergraph_ABP_Tgf_DruidPanther, CallFunc_Abs_ReturnValue) == 0x0000A0, "Member 'ABP_Tgf_DruidPanther_C_ExecuteUbergraph_ABP_Tgf_DruidPanther::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_ExecuteUbergraph_ABP_Tgf_DruidPanther, CallFunc_MakeRotator_ReturnValue_3) == 0x0000A8, "Member 'ABP_Tgf_DruidPanther_C_ExecuteUbergraph_ABP_Tgf_DruidPanther::CallFunc_MakeRotator_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_ExecuteUbergraph_ABP_Tgf_DruidPanther, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x0000C0, "Member 'ABP_Tgf_DruidPanther_C_ExecuteUbergraph_ABP_Tgf_DruidPanther::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_ExecuteUbergraph_ABP_Tgf_DruidPanther, CallFunc_IsOnDedicatedServer_ReturnValue) == 0x0000C1, "Member 'ABP_Tgf_DruidPanther_C_ExecuteUbergraph_ABP_Tgf_DruidPanther::CallFunc_IsOnDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_ExecuteUbergraph_ABP_Tgf_DruidPanther, CallFunc_GetAttachedParentCharacter_ReturnValue_1) == 0x0000C8, "Member 'ABP_Tgf_DruidPanther_C_ExecuteUbergraph_ABP_Tgf_DruidPanther::CallFunc_GetAttachedParentCharacter_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_ExecuteUbergraph_ABP_Tgf_DruidPanther, CallFunc_Less_DoubleDouble_A_ImplicitCast) == 0x0000D0, "Member 'ABP_Tgf_DruidPanther_C_ExecuteUbergraph_ABP_Tgf_DruidPanther::CallFunc_Less_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_ExecuteUbergraph_ABP_Tgf_DruidPanther, K2Node_StructMemberSet_Alpha_ImplicitCast) == 0x0000D8, "Member 'ABP_Tgf_DruidPanther_C_ExecuteUbergraph_ABP_Tgf_DruidPanther::K2Node_StructMemberSet_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_ExecuteUbergraph_ABP_Tgf_DruidPanther, K2Node_StructMemberSet_Alpha_ImplicitCast_1) == 0x0000DC, "Member 'ABP_Tgf_DruidPanther_C_ExecuteUbergraph_ABP_Tgf_DruidPanther::K2Node_StructMemberSet_Alpha_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_ExecuteUbergraph_ABP_Tgf_DruidPanther, CallFunc_Less_DoubleDouble_A_ImplicitCast_1) == 0x0000E0, "Member 'ABP_Tgf_DruidPanther_C_ExecuteUbergraph_ABP_Tgf_DruidPanther::CallFunc_Less_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_ExecuteUbergraph_ABP_Tgf_DruidPanther, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x0000E8, "Member 'ABP_Tgf_DruidPanther_C_ExecuteUbergraph_ABP_Tgf_DruidPanther::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_ExecuteUbergraph_ABP_Tgf_DruidPanther, CallFunc_MakeRotator_Yaw_ImplicitCast_1) == 0x0000EC, "Member 'ABP_Tgf_DruidPanther_C_ExecuteUbergraph_ABP_Tgf_DruidPanther::CallFunc_MakeRotator_Yaw_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_ExecuteUbergraph_ABP_Tgf_DruidPanther, CallFunc_MakeRotator_Yaw_ImplicitCast_2) == 0x0000F0, "Member 'ABP_Tgf_DruidPanther_C_ExecuteUbergraph_ABP_Tgf_DruidPanther::CallFunc_MakeRotator_Yaw_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_ExecuteUbergraph_ABP_Tgf_DruidPanther, CallFunc_MakeRotator_Roll_ImplicitCast) == 0x0000F4, "Member 'ABP_Tgf_DruidPanther_C_ExecuteUbergraph_ABP_Tgf_DruidPanther::CallFunc_MakeRotator_Roll_ImplicitCast' has a wrong offset!");

// Function ABP_Tgf_DruidPanther.ABP_Tgf_DruidPanther_C.GetAttachedLyraCharacterMovement
// 0x0020 (0x0020 - 0x0000)
struct ABP_Tgf_DruidPanther_C_GetAttachedLyraCharacterMovement final
{
public:
	class ULyraCharacterMovementComponent*        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetAttachedParentCharacter_ReturnValue;   // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ULyraCharacterMovementComponent*        K2Node_DynamicCast_AsLyra_Character_Movement_Component; // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Tgf_DruidPanther_C_GetAttachedLyraCharacterMovement) == 0x000008, "Wrong alignment on ABP_Tgf_DruidPanther_C_GetAttachedLyraCharacterMovement");
static_assert(sizeof(ABP_Tgf_DruidPanther_C_GetAttachedLyraCharacterMovement) == 0x000020, "Wrong size on ABP_Tgf_DruidPanther_C_GetAttachedLyraCharacterMovement");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_GetAttachedLyraCharacterMovement, ReturnValue) == 0x000000, "Member 'ABP_Tgf_DruidPanther_C_GetAttachedLyraCharacterMovement::ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_GetAttachedLyraCharacterMovement, CallFunc_GetAttachedParentCharacter_ReturnValue) == 0x000008, "Member 'ABP_Tgf_DruidPanther_C_GetAttachedLyraCharacterMovement::CallFunc_GetAttachedParentCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_GetAttachedLyraCharacterMovement, K2Node_DynamicCast_AsLyra_Character_Movement_Component) == 0x000010, "Member 'ABP_Tgf_DruidPanther_C_GetAttachedLyraCharacterMovement::K2Node_DynamicCast_AsLyra_Character_Movement_Component' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_GetAttachedLyraCharacterMovement, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'ABP_Tgf_DruidPanther_C_GetAttachedLyraCharacterMovement::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function ABP_Tgf_DruidPanther.ABP_Tgf_DruidPanther_C.GetEnableSloping
// 0x0003 (0x0003 - 0x0000)
struct ABP_Tgf_DruidPanther_C_GetEnableSloping final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Tgf_DruidPanther_C_GetEnableSloping) == 0x000001, "Wrong alignment on ABP_Tgf_DruidPanther_C_GetEnableSloping");
static_assert(sizeof(ABP_Tgf_DruidPanther_C_GetEnableSloping) == 0x000003, "Wrong size on ABP_Tgf_DruidPanther_C_GetEnableSloping");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_GetEnableSloping, ReturnValue) == 0x000000, "Member 'ABP_Tgf_DruidPanther_C_GetEnableSloping::ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_GetEnableSloping, CallFunc_BooleanOR_ReturnValue) == 0x000001, "Member 'ABP_Tgf_DruidPanther_C_GetEnableSloping::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_GetEnableSloping, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'ABP_Tgf_DruidPanther_C_GetEnableSloping::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function ABP_Tgf_DruidPanther.ABP_Tgf_DruidPanther_C.GetLyraCharacterThreadSafe
// 0x0020 (0x0020 - 0x0000)
struct ABP_Tgf_DruidPanther_C_GetLyraCharacterThreadSafe final
{
public:
	class ABP_Tgf_Character_Default_C*            ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetAttachedParentCharacter_ReturnValue;   // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_Tgf_Character_Default_C*            K2Node_DynamicCast_AsBP_Tgf_Character_Default;     // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Tgf_DruidPanther_C_GetLyraCharacterThreadSafe) == 0x000008, "Wrong alignment on ABP_Tgf_DruidPanther_C_GetLyraCharacterThreadSafe");
static_assert(sizeof(ABP_Tgf_DruidPanther_C_GetLyraCharacterThreadSafe) == 0x000020, "Wrong size on ABP_Tgf_DruidPanther_C_GetLyraCharacterThreadSafe");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_GetLyraCharacterThreadSafe, ReturnValue) == 0x000000, "Member 'ABP_Tgf_DruidPanther_C_GetLyraCharacterThreadSafe::ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_GetLyraCharacterThreadSafe, CallFunc_GetAttachedParentCharacter_ReturnValue) == 0x000008, "Member 'ABP_Tgf_DruidPanther_C_GetLyraCharacterThreadSafe::CallFunc_GetAttachedParentCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_GetLyraCharacterThreadSafe, K2Node_DynamicCast_AsBP_Tgf_Character_Default) == 0x000010, "Member 'ABP_Tgf_DruidPanther_C_GetLyraCharacterThreadSafe::K2Node_DynamicCast_AsBP_Tgf_Character_Default' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_GetLyraCharacterThreadSafe, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'ABP_Tgf_DruidPanther_C_GetLyraCharacterThreadSafe::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function ABP_Tgf_DruidPanther.ABP_Tgf_DruidPanther_C.GetNeedFreeze
// 0x0018 (0x0018 - 0x0000)
struct ABP_Tgf_DruidPanther_C_GetNeedFreeze final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Tgf_Character_Default_C*            CallFunc_GetLyraCharacterThreadSafe_ReturnValue;   // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Tgf_DruidPanther_C_GetNeedFreeze) == 0x000008, "Wrong alignment on ABP_Tgf_DruidPanther_C_GetNeedFreeze");
static_assert(sizeof(ABP_Tgf_DruidPanther_C_GetNeedFreeze) == 0x000018, "Wrong size on ABP_Tgf_DruidPanther_C_GetNeedFreeze");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_GetNeedFreeze, ReturnValue) == 0x000000, "Member 'ABP_Tgf_DruidPanther_C_GetNeedFreeze::ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_GetNeedFreeze, CallFunc_GetLyraCharacterThreadSafe_ReturnValue) == 0x000008, "Member 'ABP_Tgf_DruidPanther_C_GetNeedFreeze::CallFunc_GetLyraCharacterThreadSafe_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_GetNeedFreeze, CallFunc_Not_PreBool_ReturnValue) == 0x000010, "Member 'ABP_Tgf_DruidPanther_C_GetNeedFreeze::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_GetNeedFreeze, CallFunc_BooleanAND_ReturnValue) == 0x000011, "Member 'ABP_Tgf_DruidPanther_C_GetNeedFreeze::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function ABP_Tgf_DruidPanther.ABP_Tgf_DruidPanther_C.GetNeedIdleBreak
// 0x0004 (0x0004 - 0x0000)
struct ABP_Tgf_DruidPanther_C_GetNeedIdleBreak final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Tgf_DruidPanther_C_GetNeedIdleBreak) == 0x000001, "Wrong alignment on ABP_Tgf_DruidPanther_C_GetNeedIdleBreak");
static_assert(sizeof(ABP_Tgf_DruidPanther_C_GetNeedIdleBreak) == 0x000004, "Wrong size on ABP_Tgf_DruidPanther_C_GetNeedIdleBreak");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_GetNeedIdleBreak, ReturnValue) == 0x000000, "Member 'ABP_Tgf_DruidPanther_C_GetNeedIdleBreak::ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_GetNeedIdleBreak, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'ABP_Tgf_DruidPanther_C_GetNeedIdleBreak::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_GetNeedIdleBreak, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000002, "Member 'ABP_Tgf_DruidPanther_C_GetNeedIdleBreak::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_GetNeedIdleBreak, CallFunc_BooleanAND_ReturnValue) == 0x000003, "Member 'ABP_Tgf_DruidPanther_C_GetNeedIdleBreak::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function ABP_Tgf_DruidPanther.ABP_Tgf_DruidPanther_C.GetRotateHeadEnable
// 0x0018 (0x0018 - 0x0000)
struct ABP_Tgf_DruidPanther_C_GetRotateHeadEnable final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurveValueWithDefault_OutValue;        // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCurveValueWithDefault_ReturnValue;     // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Tgf_DruidPanther_C_GetRotateHeadEnable) == 0x000008, "Wrong alignment on ABP_Tgf_DruidPanther_C_GetRotateHeadEnable");
static_assert(sizeof(ABP_Tgf_DruidPanther_C_GetRotateHeadEnable) == 0x000018, "Wrong size on ABP_Tgf_DruidPanther_C_GetRotateHeadEnable");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_GetRotateHeadEnable, ReturnValue) == 0x000000, "Member 'ABP_Tgf_DruidPanther_C_GetRotateHeadEnable::ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_GetRotateHeadEnable, CallFunc_GetCurveValueWithDefault_OutValue) == 0x000004, "Member 'ABP_Tgf_DruidPanther_C_GetRotateHeadEnable::CallFunc_GetCurveValueWithDefault_OutValue' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_GetRotateHeadEnable, CallFunc_GetCurveValueWithDefault_ReturnValue) == 0x000008, "Member 'ABP_Tgf_DruidPanther_C_GetRotateHeadEnable::CallFunc_GetCurveValueWithDefault_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_GetRotateHeadEnable, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000009, "Member 'ABP_Tgf_DruidPanther_C_GetRotateHeadEnable::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_GetRotateHeadEnable, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x000010, "Member 'ABP_Tgf_DruidPanther_C_GetRotateHeadEnable::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function ABP_Tgf_DruidPanther.ABP_Tgf_DruidPanther_C.GetRotateYawOffset
// 0x0018 (0x0018 - 0x0000)
struct ABP_Tgf_DruidPanther_C_GetRotateYawOffset final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULyraCharacterMovementComponent*        CallFunc_GetAttachedLyraCharacterMovement_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_FunctionResult_ReturnValue_ImplicitCast;    // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Tgf_DruidPanther_C_GetRotateYawOffset) == 0x000008, "Wrong alignment on ABP_Tgf_DruidPanther_C_GetRotateYawOffset");
static_assert(sizeof(ABP_Tgf_DruidPanther_C_GetRotateYawOffset) == 0x000018, "Wrong size on ABP_Tgf_DruidPanther_C_GetRotateYawOffset");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_GetRotateYawOffset, ReturnValue) == 0x000000, "Member 'ABP_Tgf_DruidPanther_C_GetRotateYawOffset::ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_GetRotateYawOffset, CallFunc_GetAttachedLyraCharacterMovement_ReturnValue) == 0x000008, "Member 'ABP_Tgf_DruidPanther_C_GetRotateYawOffset::CallFunc_GetAttachedLyraCharacterMovement_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_GetRotateYawOffset, K2Node_FunctionResult_ReturnValue_ImplicitCast) == 0x000010, "Member 'ABP_Tgf_DruidPanther_C_GetRotateYawOffset::K2Node_FunctionResult_ReturnValue_ImplicitCast' has a wrong offset!");

// Function ABP_Tgf_DruidPanther.ABP_Tgf_DruidPanther_C.GetSlopingAlpha
// 0x0018 (0x0018 - 0x0000)
struct ABP_Tgf_DruidPanther_C_GetSlopingAlpha final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValueWithDefault_OutValue;        // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCurveValueWithDefault_ReturnValue;     // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_FunctionResult_ReturnValue_ImplicitCast;    // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Tgf_DruidPanther_C_GetSlopingAlpha) == 0x000008, "Wrong alignment on ABP_Tgf_DruidPanther_C_GetSlopingAlpha");
static_assert(sizeof(ABP_Tgf_DruidPanther_C_GetSlopingAlpha) == 0x000018, "Wrong size on ABP_Tgf_DruidPanther_C_GetSlopingAlpha");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_GetSlopingAlpha, ReturnValue) == 0x000000, "Member 'ABP_Tgf_DruidPanther_C_GetSlopingAlpha::ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_GetSlopingAlpha, CallFunc_GetCurveValueWithDefault_OutValue) == 0x000008, "Member 'ABP_Tgf_DruidPanther_C_GetSlopingAlpha::CallFunc_GetCurveValueWithDefault_OutValue' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_GetSlopingAlpha, CallFunc_GetCurveValueWithDefault_ReturnValue) == 0x00000C, "Member 'ABP_Tgf_DruidPanther_C_GetSlopingAlpha::CallFunc_GetCurveValueWithDefault_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_GetSlopingAlpha, K2Node_FunctionResult_ReturnValue_ImplicitCast) == 0x000010, "Member 'ABP_Tgf_DruidPanther_C_GetSlopingAlpha::K2Node_FunctionResult_ReturnValue_ImplicitCast' has a wrong offset!");

// Function ABP_Tgf_DruidPanther.ABP_Tgf_DruidPanther_C.IsMovingFront
// 0x000B (0x000B - 0x0000)
struct ABP_Tgf_DruidPanther_C_IsMovingFront final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAnimConfigDirection8                         Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_6;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_7;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Tgf_DruidPanther_C_IsMovingFront) == 0x000001, "Wrong alignment on ABP_Tgf_DruidPanther_C_IsMovingFront");
static_assert(sizeof(ABP_Tgf_DruidPanther_C_IsMovingFront) == 0x00000B, "Wrong size on ABP_Tgf_DruidPanther_C_IsMovingFront");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_IsMovingFront, ReturnValue) == 0x000000, "Member 'ABP_Tgf_DruidPanther_C_IsMovingFront::ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_IsMovingFront, Temp_byte_Variable) == 0x000001, "Member 'ABP_Tgf_DruidPanther_C_IsMovingFront::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_IsMovingFront, Temp_bool_Variable) == 0x000002, "Member 'ABP_Tgf_DruidPanther_C_IsMovingFront::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_IsMovingFront, Temp_bool_Variable_1) == 0x000003, "Member 'ABP_Tgf_DruidPanther_C_IsMovingFront::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_IsMovingFront, Temp_bool_Variable_2) == 0x000004, "Member 'ABP_Tgf_DruidPanther_C_IsMovingFront::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_IsMovingFront, Temp_bool_Variable_3) == 0x000005, "Member 'ABP_Tgf_DruidPanther_C_IsMovingFront::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_IsMovingFront, Temp_bool_Variable_4) == 0x000006, "Member 'ABP_Tgf_DruidPanther_C_IsMovingFront::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_IsMovingFront, Temp_bool_Variable_5) == 0x000007, "Member 'ABP_Tgf_DruidPanther_C_IsMovingFront::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_IsMovingFront, Temp_bool_Variable_6) == 0x000008, "Member 'ABP_Tgf_DruidPanther_C_IsMovingFront::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_IsMovingFront, Temp_bool_Variable_7) == 0x000009, "Member 'ABP_Tgf_DruidPanther_C_IsMovingFront::Temp_bool_Variable_7' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_IsMovingFront, K2Node_Select_Default) == 0x00000A, "Member 'ABP_Tgf_DruidPanther_C_IsMovingFront::K2Node_Select_Default' has a wrong offset!");

// Function ABP_Tgf_DruidPanther.ABP_Tgf_DruidPanther_C.OnIdleStateStart
// 0x0020 (0x0020 - 0x0000)
struct ABP_Tgf_DruidPanther_C_OnIdleStateStart final
{
public:
	struct FAnimUpdateContext                     Context;                                           // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FAnimNodeReference                     Node;                                              // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(ABP_Tgf_DruidPanther_C_OnIdleStateStart) == 0x000008, "Wrong alignment on ABP_Tgf_DruidPanther_C_OnIdleStateStart");
static_assert(sizeof(ABP_Tgf_DruidPanther_C_OnIdleStateStart) == 0x000020, "Wrong size on ABP_Tgf_DruidPanther_C_OnIdleStateStart");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_OnIdleStateStart, Context) == 0x000000, "Member 'ABP_Tgf_DruidPanther_C_OnIdleStateStart::Context' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_OnIdleStateStart, Node) == 0x000010, "Member 'ABP_Tgf_DruidPanther_C_OnIdleStateStart::Node' has a wrong offset!");

// Function ABP_Tgf_DruidPanther.ABP_Tgf_DruidPanther_C.OnIdleStateUpdate
// 0x0040 (0x0040 - 0x0000)
struct ABP_Tgf_DruidPanther_C_OnIdleStateUpdate final
{
public:
	struct FAnimUpdateContext                     Context;                                           // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FAnimNodeReference                     Node;                                              // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	class ULyraCharacterMovementComponent*        CallFunc_GetAttachedLyraCharacterMovement_ReturnValue; // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FAnimationStateResultReference         CallFunc_ConvertToAnimationStateResultPure_AnimationState; // 0x0028(0x0010)(NoDestructor)
	bool                                          CallFunc_ConvertToAnimationStateResultPure_Result; // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsStateBlendingOut_ReturnValue;           // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Tgf_DruidPanther_C_OnIdleStateUpdate) == 0x000008, "Wrong alignment on ABP_Tgf_DruidPanther_C_OnIdleStateUpdate");
static_assert(sizeof(ABP_Tgf_DruidPanther_C_OnIdleStateUpdate) == 0x000040, "Wrong size on ABP_Tgf_DruidPanther_C_OnIdleStateUpdate");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_OnIdleStateUpdate, Context) == 0x000000, "Member 'ABP_Tgf_DruidPanther_C_OnIdleStateUpdate::Context' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_OnIdleStateUpdate, Node) == 0x000010, "Member 'ABP_Tgf_DruidPanther_C_OnIdleStateUpdate::Node' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_OnIdleStateUpdate, CallFunc_GetAttachedLyraCharacterMovement_ReturnValue) == 0x000020, "Member 'ABP_Tgf_DruidPanther_C_OnIdleStateUpdate::CallFunc_GetAttachedLyraCharacterMovement_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_OnIdleStateUpdate, CallFunc_ConvertToAnimationStateResultPure_AnimationState) == 0x000028, "Member 'ABP_Tgf_DruidPanther_C_OnIdleStateUpdate::CallFunc_ConvertToAnimationStateResultPure_AnimationState' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_OnIdleStateUpdate, CallFunc_ConvertToAnimationStateResultPure_Result) == 0x000038, "Member 'ABP_Tgf_DruidPanther_C_OnIdleStateUpdate::CallFunc_ConvertToAnimationStateResultPure_Result' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_OnIdleStateUpdate, CallFunc_IsStateBlendingOut_ReturnValue) == 0x000039, "Member 'ABP_Tgf_DruidPanther_C_OnIdleStateUpdate::CallFunc_IsStateBlendingOut_ReturnValue' has a wrong offset!");

// Function ABP_Tgf_DruidPanther.ABP_Tgf_DruidPanther_C.SelectTurnInPlaceAnim
// 0x0070 (0x0070 - 0x0000)
struct ABP_Tgf_DruidPanther_C_SelectTurnInPlaceAnim final
{
public:
	struct FAnimUpdateContext                     Context;                                           // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FAnimNodeReference                     Node;                                              // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSequencePlayerReference               CallFunc_ConvertToSequencePlayerPure_SequencePlayer; // 0x0028(0x0010)(NoDestructor)
	bool                                          CallFunc_ConvertToSequencePlayerPure_Result;       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      Temp_object_Variable;                              // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Temp_object_Variable_1;                            // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      K2Node_Select_Default;                             // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FSequencePlayerReference               CallFunc_SetSequenceWithInertialBlending_ReturnValue; // 0x0060(0x0010)(NoDestructor)
};
static_assert(alignof(ABP_Tgf_DruidPanther_C_SelectTurnInPlaceAnim) == 0x000008, "Wrong alignment on ABP_Tgf_DruidPanther_C_SelectTurnInPlaceAnim");
static_assert(sizeof(ABP_Tgf_DruidPanther_C_SelectTurnInPlaceAnim) == 0x000070, "Wrong size on ABP_Tgf_DruidPanther_C_SelectTurnInPlaceAnim");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_SelectTurnInPlaceAnim, Context) == 0x000000, "Member 'ABP_Tgf_DruidPanther_C_SelectTurnInPlaceAnim::Context' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_SelectTurnInPlaceAnim, Node) == 0x000010, "Member 'ABP_Tgf_DruidPanther_C_SelectTurnInPlaceAnim::Node' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_SelectTurnInPlaceAnim, Temp_bool_Variable) == 0x000020, "Member 'ABP_Tgf_DruidPanther_C_SelectTurnInPlaceAnim::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_SelectTurnInPlaceAnim, CallFunc_ConvertToSequencePlayerPure_SequencePlayer) == 0x000028, "Member 'ABP_Tgf_DruidPanther_C_SelectTurnInPlaceAnim::CallFunc_ConvertToSequencePlayerPure_SequencePlayer' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_SelectTurnInPlaceAnim, CallFunc_ConvertToSequencePlayerPure_Result) == 0x000038, "Member 'ABP_Tgf_DruidPanther_C_SelectTurnInPlaceAnim::CallFunc_ConvertToSequencePlayerPure_Result' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_SelectTurnInPlaceAnim, Temp_object_Variable) == 0x000040, "Member 'ABP_Tgf_DruidPanther_C_SelectTurnInPlaceAnim::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_SelectTurnInPlaceAnim, Temp_object_Variable_1) == 0x000048, "Member 'ABP_Tgf_DruidPanther_C_SelectTurnInPlaceAnim::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_SelectTurnInPlaceAnim, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000050, "Member 'ABP_Tgf_DruidPanther_C_SelectTurnInPlaceAnim::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_SelectTurnInPlaceAnim, K2Node_Select_Default) == 0x000058, "Member 'ABP_Tgf_DruidPanther_C_SelectTurnInPlaceAnim::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_SelectTurnInPlaceAnim, CallFunc_SetSequenceWithInertialBlending_ReturnValue) == 0x000060, "Member 'ABP_Tgf_DruidPanther_C_SelectTurnInPlaceAnim::CallFunc_SetSequenceWithInertialBlending_ReturnValue' has a wrong offset!");

// Function ABP_Tgf_DruidPanther.ABP_Tgf_DruidPanther_C.UpdateAimingData
// 0x0090 (0x0090 - 0x0000)
struct ABP_Tgf_DruidPanther_C_UpdateAimingData final
{
public:
	double                                        DeltaTime;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               AimRotation;                                       // 0x0008(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_NormalizedDeltaRotator_ReturnValue;       // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_RInterpTo_ReturnValue;                    // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_ClampAngle_ReturnValue;                   // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RInterpTo_DeltaTime_ImplicitCast;         // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Pitch_ImplicitCast;           // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_ClampAngle_AngleDegrees_ImplicitCast;     // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Tgf_DruidPanther_C_UpdateAimingData) == 0x000008, "Wrong alignment on ABP_Tgf_DruidPanther_C_UpdateAimingData");
static_assert(sizeof(ABP_Tgf_DruidPanther_C_UpdateAimingData) == 0x000090, "Wrong size on ABP_Tgf_DruidPanther_C_UpdateAimingData");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_UpdateAimingData, DeltaTime) == 0x000000, "Member 'ABP_Tgf_DruidPanther_C_UpdateAimingData::DeltaTime' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_UpdateAimingData, AimRotation) == 0x000008, "Member 'ABP_Tgf_DruidPanther_C_UpdateAimingData::AimRotation' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_UpdateAimingData, CallFunc_MakeRotator_ReturnValue) == 0x000020, "Member 'ABP_Tgf_DruidPanther_C_UpdateAimingData::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_UpdateAimingData, CallFunc_NormalizedDeltaRotator_ReturnValue) == 0x000038, "Member 'ABP_Tgf_DruidPanther_C_UpdateAimingData::CallFunc_NormalizedDeltaRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_UpdateAimingData, CallFunc_RInterpTo_ReturnValue) == 0x000050, "Member 'ABP_Tgf_DruidPanther_C_UpdateAimingData::CallFunc_RInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_UpdateAimingData, CallFunc_BreakRotator_Roll) == 0x000068, "Member 'ABP_Tgf_DruidPanther_C_UpdateAimingData::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_UpdateAimingData, CallFunc_BreakRotator_Pitch) == 0x00006C, "Member 'ABP_Tgf_DruidPanther_C_UpdateAimingData::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_UpdateAimingData, CallFunc_BreakRotator_Yaw) == 0x000070, "Member 'ABP_Tgf_DruidPanther_C_UpdateAimingData::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_UpdateAimingData, CallFunc_ClampAngle_ReturnValue) == 0x000078, "Member 'ABP_Tgf_DruidPanther_C_UpdateAimingData::CallFunc_ClampAngle_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_UpdateAimingData, CallFunc_RInterpTo_DeltaTime_ImplicitCast) == 0x000080, "Member 'ABP_Tgf_DruidPanther_C_UpdateAimingData::CallFunc_RInterpTo_DeltaTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_UpdateAimingData, CallFunc_MakeRotator_Pitch_ImplicitCast) == 0x000084, "Member 'ABP_Tgf_DruidPanther_C_UpdateAimingData::CallFunc_MakeRotator_Pitch_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_UpdateAimingData, CallFunc_ClampAngle_AngleDegrees_ImplicitCast) == 0x000088, "Member 'ABP_Tgf_DruidPanther_C_UpdateAimingData::CallFunc_ClampAngle_AngleDegrees_ImplicitCast' has a wrong offset!");

// Function ABP_Tgf_DruidPanther.ABP_Tgf_DruidPanther_C.UpdateIdleBreakTime
// 0x0010 (0x0010 - 0x0000)
struct ABP_Tgf_DruidPanther_C_UpdateIdleBreakTime final
{
public:
	double                                        DeltaTime;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Tgf_DruidPanther_C_UpdateIdleBreakTime) == 0x000008, "Wrong alignment on ABP_Tgf_DruidPanther_C_UpdateIdleBreakTime");
static_assert(sizeof(ABP_Tgf_DruidPanther_C_UpdateIdleBreakTime) == 0x000010, "Wrong size on ABP_Tgf_DruidPanther_C_UpdateIdleBreakTime");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_UpdateIdleBreakTime, DeltaTime) == 0x000000, "Member 'ABP_Tgf_DruidPanther_C_UpdateIdleBreakTime::DeltaTime' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_UpdateIdleBreakTime, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000008, "Member 'ABP_Tgf_DruidPanther_C_UpdateIdleBreakTime::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");

// Function ABP_Tgf_DruidPanther.ABP_Tgf_DruidPanther_C.UpdateMoveDirection
// 0x0108 (0x0108 - 0x0000)
struct ABP_Tgf_DruidPanther_C_UpdateMoveDirection final
{
public:
	double                                        DeltaTime;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AccIsZero;                                         // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        TargetMovingYawOffset;                             // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCurrentAcceleration_ReturnValue;       // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BlendFloat_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Vector_IsNearlyZero_ReturnValue;          // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_72[0x2];                                       // 0x0072(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FloatSpringInterp_ReturnValue;            // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SpringFloatBlendAssist_ReturnValue;       // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_CalculateDirection_ReturnValue;           // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAnimConfigDirection8                         CallFunc_GetAngleDirection8_ReturnValue;           // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A5[0x3];                                       // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Abs_ReturnValue;                          // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetRotateHeadEnable_ReturnValue;          // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B2[0x6];                                       // 0x00B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FloatSpringInterp_ReturnValue_1;          // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SpringFloatBlendAssist_ReturnValue_1;     // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FloatSpringInterp_DeltaTime_ImplicitCast; // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FloatSpringInterp_DeltaTime_ImplicitCast_1; // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BlendFloat_DeltaTime_ImplicitCast;        // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FloatSpringInterp_Current_ImplicitCast;   // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet_MovingAngleOffset_ImplicitCast; // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FloatSpringInterp_Current_ImplicitCast_1; // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FloatSpringInterp_Target_ImplicitCast;    // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SpringFloatBlendAssist_Target_ImplicitCast; // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FC[0x4];                                       // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet_MovingAngleOffset_ImplicitCast_1; // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Tgf_DruidPanther_C_UpdateMoveDirection) == 0x000008, "Wrong alignment on ABP_Tgf_DruidPanther_C_UpdateMoveDirection");
static_assert(sizeof(ABP_Tgf_DruidPanther_C_UpdateMoveDirection) == 0x000108, "Wrong size on ABP_Tgf_DruidPanther_C_UpdateMoveDirection");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_UpdateMoveDirection, DeltaTime) == 0x000000, "Member 'ABP_Tgf_DruidPanther_C_UpdateMoveDirection::DeltaTime' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_UpdateMoveDirection, AccIsZero) == 0x000008, "Member 'ABP_Tgf_DruidPanther_C_UpdateMoveDirection::AccIsZero' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_UpdateMoveDirection, TargetMovingYawOffset) == 0x000010, "Member 'ABP_Tgf_DruidPanther_C_UpdateMoveDirection::TargetMovingYawOffset' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_UpdateMoveDirection, CallFunc_GetCurrentAcceleration_ReturnValue) == 0x000018, "Member 'ABP_Tgf_DruidPanther_C_UpdateMoveDirection::CallFunc_GetCurrentAcceleration_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_UpdateMoveDirection, CallFunc_BlendFloat_ReturnValue) == 0x000030, "Member 'ABP_Tgf_DruidPanther_C_UpdateMoveDirection::CallFunc_BlendFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_UpdateMoveDirection, CallFunc_BreakVector_X) == 0x000038, "Member 'ABP_Tgf_DruidPanther_C_UpdateMoveDirection::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_UpdateMoveDirection, CallFunc_BreakVector_Y) == 0x000040, "Member 'ABP_Tgf_DruidPanther_C_UpdateMoveDirection::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_UpdateMoveDirection, CallFunc_BreakVector_Z) == 0x000048, "Member 'ABP_Tgf_DruidPanther_C_UpdateMoveDirection::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_UpdateMoveDirection, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000050, "Member 'ABP_Tgf_DruidPanther_C_UpdateMoveDirection::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_UpdateMoveDirection, CallFunc_MakeVector_ReturnValue) == 0x000058, "Member 'ABP_Tgf_DruidPanther_C_UpdateMoveDirection::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_UpdateMoveDirection, CallFunc_Vector_IsNearlyZero_ReturnValue) == 0x000070, "Member 'ABP_Tgf_DruidPanther_C_UpdateMoveDirection::CallFunc_Vector_IsNearlyZero_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_UpdateMoveDirection, K2Node_SwitchEnum_CmpSuccess) == 0x000071, "Member 'ABP_Tgf_DruidPanther_C_UpdateMoveDirection::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_UpdateMoveDirection, CallFunc_FloatSpringInterp_ReturnValue) == 0x000074, "Member 'ABP_Tgf_DruidPanther_C_UpdateMoveDirection::CallFunc_FloatSpringInterp_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_UpdateMoveDirection, CallFunc_BreakRotator_Roll) == 0x000078, "Member 'ABP_Tgf_DruidPanther_C_UpdateMoveDirection::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_UpdateMoveDirection, CallFunc_BreakRotator_Pitch) == 0x00007C, "Member 'ABP_Tgf_DruidPanther_C_UpdateMoveDirection::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_UpdateMoveDirection, CallFunc_BreakRotator_Yaw) == 0x000080, "Member 'ABP_Tgf_DruidPanther_C_UpdateMoveDirection::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_UpdateMoveDirection, CallFunc_SpringFloatBlendAssist_ReturnValue) == 0x000084, "Member 'ABP_Tgf_DruidPanther_C_UpdateMoveDirection::CallFunc_SpringFloatBlendAssist_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_UpdateMoveDirection, CallFunc_MakeRotator_ReturnValue) == 0x000088, "Member 'ABP_Tgf_DruidPanther_C_UpdateMoveDirection::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_UpdateMoveDirection, CallFunc_CalculateDirection_ReturnValue) == 0x0000A0, "Member 'ABP_Tgf_DruidPanther_C_UpdateMoveDirection::CallFunc_CalculateDirection_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_UpdateMoveDirection, CallFunc_GetAngleDirection8_ReturnValue) == 0x0000A4, "Member 'ABP_Tgf_DruidPanther_C_UpdateMoveDirection::CallFunc_GetAngleDirection8_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_UpdateMoveDirection, CallFunc_Abs_ReturnValue) == 0x0000A8, "Member 'ABP_Tgf_DruidPanther_C_UpdateMoveDirection::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_UpdateMoveDirection, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x0000B0, "Member 'ABP_Tgf_DruidPanther_C_UpdateMoveDirection::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_UpdateMoveDirection, CallFunc_GetRotateHeadEnable_ReturnValue) == 0x0000B1, "Member 'ABP_Tgf_DruidPanther_C_UpdateMoveDirection::CallFunc_GetRotateHeadEnable_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_UpdateMoveDirection, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0000B8, "Member 'ABP_Tgf_DruidPanther_C_UpdateMoveDirection::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_UpdateMoveDirection, CallFunc_FloatSpringInterp_ReturnValue_1) == 0x0000C0, "Member 'ABP_Tgf_DruidPanther_C_UpdateMoveDirection::CallFunc_FloatSpringInterp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_UpdateMoveDirection, CallFunc_SpringFloatBlendAssist_ReturnValue_1) == 0x0000C4, "Member 'ABP_Tgf_DruidPanther_C_UpdateMoveDirection::CallFunc_SpringFloatBlendAssist_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_UpdateMoveDirection, CallFunc_FloatSpringInterp_DeltaTime_ImplicitCast) == 0x0000C8, "Member 'ABP_Tgf_DruidPanther_C_UpdateMoveDirection::CallFunc_FloatSpringInterp_DeltaTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_UpdateMoveDirection, CallFunc_FloatSpringInterp_DeltaTime_ImplicitCast_1) == 0x0000CC, "Member 'ABP_Tgf_DruidPanther_C_UpdateMoveDirection::CallFunc_FloatSpringInterp_DeltaTime_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_UpdateMoveDirection, CallFunc_BlendFloat_DeltaTime_ImplicitCast) == 0x0000D0, "Member 'ABP_Tgf_DruidPanther_C_UpdateMoveDirection::CallFunc_BlendFloat_DeltaTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_UpdateMoveDirection, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x0000D8, "Member 'ABP_Tgf_DruidPanther_C_UpdateMoveDirection::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_UpdateMoveDirection, CallFunc_FloatSpringInterp_Current_ImplicitCast) == 0x0000E0, "Member 'ABP_Tgf_DruidPanther_C_UpdateMoveDirection::CallFunc_FloatSpringInterp_Current_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_UpdateMoveDirection, K2Node_VariableSet_MovingAngleOffset_ImplicitCast) == 0x0000E8, "Member 'ABP_Tgf_DruidPanther_C_UpdateMoveDirection::K2Node_VariableSet_MovingAngleOffset_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_UpdateMoveDirection, CallFunc_FloatSpringInterp_Current_ImplicitCast_1) == 0x0000F0, "Member 'ABP_Tgf_DruidPanther_C_UpdateMoveDirection::CallFunc_FloatSpringInterp_Current_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_UpdateMoveDirection, CallFunc_FloatSpringInterp_Target_ImplicitCast) == 0x0000F4, "Member 'ABP_Tgf_DruidPanther_C_UpdateMoveDirection::CallFunc_FloatSpringInterp_Target_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_UpdateMoveDirection, CallFunc_SpringFloatBlendAssist_Target_ImplicitCast) == 0x0000F8, "Member 'ABP_Tgf_DruidPanther_C_UpdateMoveDirection::CallFunc_SpringFloatBlendAssist_Target_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_UpdateMoveDirection, K2Node_VariableSet_MovingAngleOffset_ImplicitCast_1) == 0x000100, "Member 'ABP_Tgf_DruidPanther_C_UpdateMoveDirection::K2Node_VariableSet_MovingAngleOffset_ImplicitCast_1' has a wrong offset!");

// Function ABP_Tgf_DruidPanther.ABP_Tgf_DruidPanther_C.UpdateMoveSpeed
// 0x0020 (0x0020 - 0x0000)
struct ABP_Tgf_DruidPanther_C_UpdateMoveSpeed final
{
public:
	double                                        DeltaTime;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        TargetSpeed;                                       // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_VSizeXY_ReturnValue;                      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Tgf_DruidPanther_C_UpdateMoveSpeed) == 0x000008, "Wrong alignment on ABP_Tgf_DruidPanther_C_UpdateMoveSpeed");
static_assert(sizeof(ABP_Tgf_DruidPanther_C_UpdateMoveSpeed) == 0x000020, "Wrong size on ABP_Tgf_DruidPanther_C_UpdateMoveSpeed");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_UpdateMoveSpeed, DeltaTime) == 0x000000, "Member 'ABP_Tgf_DruidPanther_C_UpdateMoveSpeed::DeltaTime' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_UpdateMoveSpeed, TargetSpeed) == 0x000008, "Member 'ABP_Tgf_DruidPanther_C_UpdateMoveSpeed::TargetSpeed' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_UpdateMoveSpeed, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000010, "Member 'ABP_Tgf_DruidPanther_C_UpdateMoveSpeed::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_UpdateMoveSpeed, CallFunc_Not_PreBool_ReturnValue) == 0x000011, "Member 'ABP_Tgf_DruidPanther_C_UpdateMoveSpeed::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_UpdateMoveSpeed, CallFunc_VSizeXY_ReturnValue) == 0x000018, "Member 'ABP_Tgf_DruidPanther_C_UpdateMoveSpeed::CallFunc_VSizeXY_ReturnValue' has a wrong offset!");

// Function ABP_Tgf_DruidPanther.ABP_Tgf_DruidPanther_C.UpdateRotation
// 0x0048 (0x0048 - 0x0000)
struct ABP_Tgf_DruidPanther_C_UpdateRotation final
{
public:
	double                                        DeltaTime;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_NormalizedDeltaRotator_ReturnValue;       // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SafeDivide_ReturnValue;                   // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SafeDivide_A_ImplicitCast;                // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_RotateYawOffsetSinceLastFrame_ImplicitCast; // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Tgf_DruidPanther_C_UpdateRotation) == 0x000008, "Wrong alignment on ABP_Tgf_DruidPanther_C_UpdateRotation");
static_assert(sizeof(ABP_Tgf_DruidPanther_C_UpdateRotation) == 0x000048, "Wrong size on ABP_Tgf_DruidPanther_C_UpdateRotation");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_UpdateRotation, DeltaTime) == 0x000000, "Member 'ABP_Tgf_DruidPanther_C_UpdateRotation::DeltaTime' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_UpdateRotation, CallFunc_NormalizedDeltaRotator_ReturnValue) == 0x000008, "Member 'ABP_Tgf_DruidPanther_C_UpdateRotation::CallFunc_NormalizedDeltaRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_UpdateRotation, CallFunc_BreakRotator_Roll) == 0x000020, "Member 'ABP_Tgf_DruidPanther_C_UpdateRotation::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_UpdateRotation, CallFunc_BreakRotator_Pitch) == 0x000024, "Member 'ABP_Tgf_DruidPanther_C_UpdateRotation::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_UpdateRotation, CallFunc_BreakRotator_Yaw) == 0x000028, "Member 'ABP_Tgf_DruidPanther_C_UpdateRotation::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_UpdateRotation, CallFunc_SafeDivide_ReturnValue) == 0x000030, "Member 'ABP_Tgf_DruidPanther_C_UpdateRotation::CallFunc_SafeDivide_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_UpdateRotation, CallFunc_SafeDivide_A_ImplicitCast) == 0x000038, "Member 'ABP_Tgf_DruidPanther_C_UpdateRotation::CallFunc_SafeDivide_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_UpdateRotation, K2Node_VariableSet_RotateYawOffsetSinceLastFrame_ImplicitCast) == 0x000040, "Member 'ABP_Tgf_DruidPanther_C_UpdateRotation::K2Node_VariableSet_RotateYawOffsetSinceLastFrame_ImplicitCast' has a wrong offset!");

// Function ABP_Tgf_DruidPanther.ABP_Tgf_DruidPanther_C.UpdateYawOffset
// 0x0030 (0x0030 - 0x0000)
struct ABP_Tgf_DruidPanther_C_UpdateYawOffset final
{
public:
	double                                        DeltaTime;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULyraCharacterMovementComponent*        CallFunc_GetAttachedLyraCharacterMovement_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BlendFloat_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetRotateHeadEnable_ReturnValue;          // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BlendFloat_DeltaTime_ImplicitCast;        // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BlendFloat_CurValue_ImplicitCast;         // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_RotateYawOffset_ImplicitCast;   // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Tgf_DruidPanther_C_UpdateYawOffset) == 0x000008, "Wrong alignment on ABP_Tgf_DruidPanther_C_UpdateYawOffset");
static_assert(sizeof(ABP_Tgf_DruidPanther_C_UpdateYawOffset) == 0x000030, "Wrong size on ABP_Tgf_DruidPanther_C_UpdateYawOffset");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_UpdateYawOffset, DeltaTime) == 0x000000, "Member 'ABP_Tgf_DruidPanther_C_UpdateYawOffset::DeltaTime' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_UpdateYawOffset, CallFunc_GetAttachedLyraCharacterMovement_ReturnValue) == 0x000008, "Member 'ABP_Tgf_DruidPanther_C_UpdateYawOffset::CallFunc_GetAttachedLyraCharacterMovement_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_UpdateYawOffset, CallFunc_BlendFloat_ReturnValue) == 0x000010, "Member 'ABP_Tgf_DruidPanther_C_UpdateYawOffset::CallFunc_BlendFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_UpdateYawOffset, CallFunc_GetRotateHeadEnable_ReturnValue) == 0x000014, "Member 'ABP_Tgf_DruidPanther_C_UpdateYawOffset::CallFunc_GetRotateHeadEnable_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_UpdateYawOffset, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000018, "Member 'ABP_Tgf_DruidPanther_C_UpdateYawOffset::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_UpdateYawOffset, CallFunc_BlendFloat_DeltaTime_ImplicitCast) == 0x000020, "Member 'ABP_Tgf_DruidPanther_C_UpdateYawOffset::CallFunc_BlendFloat_DeltaTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_UpdateYawOffset, CallFunc_BlendFloat_CurValue_ImplicitCast) == 0x000024, "Member 'ABP_Tgf_DruidPanther_C_UpdateYawOffset::CallFunc_BlendFloat_CurValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_DruidPanther_C_UpdateYawOffset, K2Node_VariableSet_RotateYawOffset_ImplicitCast) == 0x000028, "Member 'ABP_Tgf_DruidPanther_C_UpdateYawOffset::K2Node_VariableSet_RotateYawOffset_ImplicitCast' has a wrong offset!");

}

