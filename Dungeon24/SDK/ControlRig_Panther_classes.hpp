#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ControlRig_Panther

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "ControlRig_structs.hpp"
#include "ControlRig_classes.hpp"
#include "RigVM_classes.hpp"


namespace SDK
{

// ControlRigBlueprintGeneratedClass ControlRig_Panther.ControlRig_Panther_C
// 0x0010 (0x0570 - 0x0560)
class UControlRig_Panther_C final : public UControlRig
{
public:
	double                                        BackRotateScale;                                   // 0x0560(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bLocalControlled;                                  // 0x0568(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ControlRig_Panther_C">();
	}
	static class UControlRig_Panther_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UControlRig_Panther_C>();
	}
};
static_assert(alignof(UControlRig_Panther_C) == 0x000008, "Wrong alignment on UControlRig_Panther_C");
static_assert(sizeof(UControlRig_Panther_C) == 0x000570, "Wrong size on UControlRig_Panther_C");
static_assert(offsetof(UControlRig_Panther_C, BackRotateScale) == 0x000560, "Member 'UControlRig_Panther_C::BackRotateScale' has a wrong offset!");
static_assert(offsetof(UControlRig_Panther_C, bLocalControlled) == 0x000568, "Member 'UControlRig_Panther_C::bLocalControlled' has a wrong offset!");

// RigVMMemoryStorageGeneratorClass ControlRig_Panther.RigVMMemory_Literal
// 0x00D8 (0x0100 - 0x0028)
class ControlRig_Panther::URigVMMemory_Literal final : public URigVMMemoryStorage
{
public:
	struct FRigElementKey                         RigVMModel___RotateBody_1_GetTransform_Item__Const; // 0x0028(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	EBoneGetterSetterMode                         RigVMModel___RotateBody_1_RotateBone_1_1_Set_Transform_Space__Const; // 0x0034(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         RigVMModel___RotateBody_1_RotateBone_1_1_Set_Transform_bInitial__Const : 1; // 0x0035(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash))
	uint8                                         BitPad_35_1 : 7;                                   // 0x0035(0x0001)(Fixing Bit-Field Size For New Byte [ Dumper-7 ])
	uint8                                         RigVMModel___RotateBody_1_Branch_1_Condition__Const : 1; // 0x0036(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash))
	uint8                                         Pad_37[0x1];                                       // 0x0037(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRigElementKey                         RigVMModel___RotateBody_1_RotateBone_1_1_Set_Transform_Item__Const; // 0x0038(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               RigVMModel___RotateBody_1_RotateBone_1_1_Cast_1_Value__Const; // 0x0048(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	double                                        RigVMModel___RotateBody_1_RotateBone_1_1_Multiply_B__Const; // 0x0060(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___RotateBody_1_RotateBone_1_1_Set_Transform_Weight__Const; // 0x0068(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___RotateBody_1_RotateBone_1_Set_Transform_Item__Const; // 0x006C(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___RotateHead_2_RotateBone_0_Set_Transform_Item__Const; // 0x0078(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        RigVMModel___RotateHead_2_Multiply_B__Const;       // 0x0088(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___RotateHead_2_RotateBone_0_Multiply_B__Const; // 0x0090(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___RotateHead_2_RotateBone_0_1_Set_Transform_Item__Const; // 0x0098(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        RigVMModel___RotateHead_2_RotateBone_0_1_Multiply_B__Const; // 0x00A8(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___RotateHead_2_RotateBone_0_1_1_Set_Transform_Item__Const; // 0x00B0(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        RigVMModel___RotateHead_2_RotateBone_0_1_1_Multiply_B__Const; // 0x00C0(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___RotateHead_2_RotateBone_0_1_1_1_Set_Transform_Item__Const; // 0x00C8(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___RotateHead_2_RotateBone_0_2_Set_Transform_Item__Const; // 0x00D4(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___RotateHead_2_RotateBone_0_2_Multiply_B__Const; // 0x00E0(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___PitchRotateHead_GetTransform_1_Item__Const; // 0x00E8(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___RotateBody_GetTransform_Item__Const;  // 0x00F4(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RigVMMemoryStorageGeneratorClass ControlRig_Panther.RigVMMemory_Literal", true>();
	}
	static class ControlRig_Panther::URigVMMemory_Literal* GetDefaultObj()
	{
		return GetDefaultObjImpl<ControlRig_Panther::URigVMMemory_Literal>();
	}
};
static_assert(alignof(ControlRig_Panther::URigVMMemory_Literal) == 0x000008, "Wrong alignment on ControlRig_Panther::URigVMMemory_Literal");
static_assert(sizeof(ControlRig_Panther::URigVMMemory_Literal) == 0x000100, "Wrong size on ControlRig_Panther::URigVMMemory_Literal");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Literal, RigVMModel___RotateBody_1_GetTransform_Item__Const) == 0x000028, "Member 'ControlRig_Panther::URigVMMemory_Literal::RigVMModel___RotateBody_1_GetTransform_Item__Const' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Literal, RigVMModel___RotateBody_1_RotateBone_1_1_Set_Transform_Space__Const) == 0x000034, "Member 'ControlRig_Panther::URigVMMemory_Literal::RigVMModel___RotateBody_1_RotateBone_1_1_Set_Transform_Space__Const' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Literal, RigVMModel___RotateBody_1_RotateBone_1_1_Set_Transform_Item__Const) == 0x000038, "Member 'ControlRig_Panther::URigVMMemory_Literal::RigVMModel___RotateBody_1_RotateBone_1_1_Set_Transform_Item__Const' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Literal, RigVMModel___RotateBody_1_RotateBone_1_1_Cast_1_Value__Const) == 0x000048, "Member 'ControlRig_Panther::URigVMMemory_Literal::RigVMModel___RotateBody_1_RotateBone_1_1_Cast_1_Value__Const' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Literal, RigVMModel___RotateBody_1_RotateBone_1_1_Multiply_B__Const) == 0x000060, "Member 'ControlRig_Panther::URigVMMemory_Literal::RigVMModel___RotateBody_1_RotateBone_1_1_Multiply_B__Const' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Literal, RigVMModel___RotateBody_1_RotateBone_1_1_Set_Transform_Weight__Const) == 0x000068, "Member 'ControlRig_Panther::URigVMMemory_Literal::RigVMModel___RotateBody_1_RotateBone_1_1_Set_Transform_Weight__Const' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Literal, RigVMModel___RotateBody_1_RotateBone_1_Set_Transform_Item__Const) == 0x00006C, "Member 'ControlRig_Panther::URigVMMemory_Literal::RigVMModel___RotateBody_1_RotateBone_1_Set_Transform_Item__Const' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Literal, RigVMModel___RotateHead_2_RotateBone_0_Set_Transform_Item__Const) == 0x000078, "Member 'ControlRig_Panther::URigVMMemory_Literal::RigVMModel___RotateHead_2_RotateBone_0_Set_Transform_Item__Const' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Literal, RigVMModel___RotateHead_2_Multiply_B__Const) == 0x000088, "Member 'ControlRig_Panther::URigVMMemory_Literal::RigVMModel___RotateHead_2_Multiply_B__Const' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Literal, RigVMModel___RotateHead_2_RotateBone_0_Multiply_B__Const) == 0x000090, "Member 'ControlRig_Panther::URigVMMemory_Literal::RigVMModel___RotateHead_2_RotateBone_0_Multiply_B__Const' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Literal, RigVMModel___RotateHead_2_RotateBone_0_1_Set_Transform_Item__Const) == 0x000098, "Member 'ControlRig_Panther::URigVMMemory_Literal::RigVMModel___RotateHead_2_RotateBone_0_1_Set_Transform_Item__Const' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Literal, RigVMModel___RotateHead_2_RotateBone_0_1_Multiply_B__Const) == 0x0000A8, "Member 'ControlRig_Panther::URigVMMemory_Literal::RigVMModel___RotateHead_2_RotateBone_0_1_Multiply_B__Const' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Literal, RigVMModel___RotateHead_2_RotateBone_0_1_1_Set_Transform_Item__Const) == 0x0000B0, "Member 'ControlRig_Panther::URigVMMemory_Literal::RigVMModel___RotateHead_2_RotateBone_0_1_1_Set_Transform_Item__Const' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Literal, RigVMModel___RotateHead_2_RotateBone_0_1_1_Multiply_B__Const) == 0x0000C0, "Member 'ControlRig_Panther::URigVMMemory_Literal::RigVMModel___RotateHead_2_RotateBone_0_1_1_Multiply_B__Const' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Literal, RigVMModel___RotateHead_2_RotateBone_0_1_1_1_Set_Transform_Item__Const) == 0x0000C8, "Member 'ControlRig_Panther::URigVMMemory_Literal::RigVMModel___RotateHead_2_RotateBone_0_1_1_1_Set_Transform_Item__Const' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Literal, RigVMModel___RotateHead_2_RotateBone_0_2_Set_Transform_Item__Const) == 0x0000D4, "Member 'ControlRig_Panther::URigVMMemory_Literal::RigVMModel___RotateHead_2_RotateBone_0_2_Set_Transform_Item__Const' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Literal, RigVMModel___RotateHead_2_RotateBone_0_2_Multiply_B__Const) == 0x0000E0, "Member 'ControlRig_Panther::URigVMMemory_Literal::RigVMModel___RotateHead_2_RotateBone_0_2_Multiply_B__Const' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Literal, RigVMModel___PitchRotateHead_GetTransform_1_Item__Const) == 0x0000E8, "Member 'ControlRig_Panther::URigVMMemory_Literal::RigVMModel___PitchRotateHead_GetTransform_1_Item__Const' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Literal, RigVMModel___RotateBody_GetTransform_Item__Const) == 0x0000F4, "Member 'ControlRig_Panther::URigVMMemory_Literal::RigVMModel___RotateBody_GetTransform_Item__Const' has a wrong offset!");

// RigVMMemoryStorageGeneratorClass ControlRig_Panther.RigVMMemory_Work
// 0x1B08 (0x1B30 - 0x0028)
class ControlRig_Panther::URigVMMemory_Work final : public URigVMMemoryStorage
{
public:
	struct FControlRigExecuteContext              ExecuteContext_;                                   // 0x0028(0x0038)(Edit, EditConst, NonTransactional)
	struct FRotator                               RigVMModel___RotateBody_1_Cast_Result;             // 0x0060(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	uint8                                         Pad_78[0x8];                                       // 0x0078(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___RotateBody_1_GetTransform_Transform;  // 0x0080(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RotateBody_1_GetTransform_CachedIndex; // 0x00E0(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___RotateBody_1_Cast_Value;              // 0x00F0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FQuat                                  RigVMModel___RotateBody_1_RotateBone_1_1_Cast_1_Result; // 0x0110(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___RotateBody_1_RotateBone_1_1_Cast_Result; // 0x0130(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	uint8                                         Pad_148[0x8];                                      // 0x0148(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___RotateBody_1_RotateBone_1_1_GetTransform_Transform; // 0x0150(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RotateBody_1_RotateBone_1_1_GetTransform_CachedIndex; // 0x01B0(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___RotateBody_1_RotateBone_1_1_Cast_Value; // 0x01C0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___RotateBody_1_RotateBone_1_1_Add_Result; // 0x01E0(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___RotateBody_1_RotateBone_1_1_Add_A;    // 0x01E8(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___RotateBody_1_RotateBone_1_1_Multiply_Result; // 0x01F0(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___RotateBody_1_RotateBone_1_1_Multiply_A; // 0x01F8(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___RotateBody_1_RotateBone_1_1_Cast_1_Value__IO; // 0x0200(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              RigVMModel___RotateBody_1_RotateBone_1_1_Set_Transform_CachedIndex; // 0x0218(0x0010)(Edit, EditConst, NonTransactional)
	uint8                                         Pad_228[0x8];                                      // 0x0228(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  RigVMModel___RotateBody_1_RotateBone_1_Cast_1_Result; // 0x0230(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___RotateBody_1_RotateBone_1_Cast_Result; // 0x0250(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	uint8                                         Pad_268[0x8];                                      // 0x0268(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___RotateBody_1_RotateBone_1_GetTransform_Transform; // 0x0270(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RotateBody_1_RotateBone_1_GetTransform_CachedIndex; // 0x02D0(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___RotateBody_1_RotateBone_1_Cast_Value; // 0x02E0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___RotateBody_1_RotateBone_1_Add_Result; // 0x0300(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___RotateBody_1_RotateBone_1_Add_A;      // 0x0308(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___RotateBody_1_RotateBone_1_Multiply_Result; // 0x0310(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___RotateBody_1_RotateBone_1_Cast_1_Value__IO; // 0x0318(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              RigVMModel___RotateBody_1_RotateBone_1_Set_Transform_CachedIndex; // 0x0330(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___RotateHead_2_RotateBone_0_Cast_1_Result; // 0x0340(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___RotateHead_2_RotateBone_0_Cast_Result; // 0x0360(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	uint8                                         Pad_378[0x8];                                      // 0x0378(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___RotateHead_2_RotateBone_0_GetTransform_Transform; // 0x0380(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RotateHead_2_RotateBone_0_GetTransform_CachedIndex; // 0x03E0(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___RotateHead_2_RotateBone_0_Cast_Value; // 0x03F0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___RotateHead_2_RotateBone_0_Add_Result; // 0x0410(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___RotateHead_2_RotateBone_0_Add_A;      // 0x0418(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___RotateHead_2_RotateBone_0_Multiply_Result; // 0x0420(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___RotateHead_2_Cast_2_Result;           // 0x0428(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FQuat                                  RigVMModel___RotateHead_2_Cast_1_Result;           // 0x0440(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___RotateHead_2_Cast_Result;             // 0x0460(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	uint8                                         Pad_478[0x8];                                      // 0x0478(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___RotateHead_2_GetTransform_Transform;  // 0x0480(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RotateHead_2_GetTransform_CachedIndex; // 0x04E0(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___RotateHead_2_Cast_Value;              // 0x04F0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___RotateHead_2_Multiply_Result;         // 0x0510(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___RotateHead_2_Multiply_A;              // 0x0518(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___RotateHead_2_Cast_1_Value__IO;        // 0x0520(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	double                                        RigVMModel___RotateHead_2_RotateBone_0_Multiply_A; // 0x0538(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___RotateHead_2_RotateBone_0_Cast_1_Value__IO; // 0x0540(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              RigVMModel___RotateHead_2_RotateBone_0_Set_Transform_CachedIndex; // 0x0558(0x0010)(Edit, EditConst, NonTransactional)
	uint8                                         Pad_568[0x8];                                      // 0x0568(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  RigVMModel___RotateHead_2_RotateBone_0_1_Cast_1_Result; // 0x0570(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___RotateHead_2_RotateBone_0_1_Cast_Result; // 0x0590(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	uint8                                         Pad_5A8[0x8];                                      // 0x05A8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___RotateHead_2_RotateBone_0_1_GetTransform_Transform; // 0x05B0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RotateHead_2_RotateBone_0_1_GetTransform_CachedIndex; // 0x0610(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___RotateHead_2_RotateBone_0_1_Cast_Value; // 0x0620(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___RotateHead_2_RotateBone_0_1_Add_Result; // 0x0640(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___RotateHead_2_RotateBone_0_1_Add_A;    // 0x0648(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___RotateHead_2_RotateBone_0_1_Multiply_Result; // 0x0650(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___RotateHead_2_RotateBone_0_1_Cast_1_Value__IO; // 0x0658(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              RigVMModel___RotateHead_2_RotateBone_0_1_Set_Transform_CachedIndex; // 0x0670(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___RotateHead_2_RotateBone_0_1_1_Cast_1_Result; // 0x0680(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___RotateHead_2_RotateBone_0_1_1_Cast_Result; // 0x06A0(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	uint8                                         Pad_6B8[0x8];                                      // 0x06B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___RotateHead_2_RotateBone_0_1_1_GetTransform_Transform; // 0x06C0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RotateHead_2_RotateBone_0_1_1_GetTransform_CachedIndex; // 0x0720(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___RotateHead_2_RotateBone_0_1_1_Cast_Value; // 0x0730(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___RotateHead_2_RotateBone_0_1_1_Add_Result; // 0x0750(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___RotateHead_2_RotateBone_0_1_1_Add_A;  // 0x0758(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___RotateHead_2_RotateBone_0_1_1_Multiply_Result; // 0x0760(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___RotateHead_2_RotateBone_0_1_1_Cast_1_Value__IO; // 0x0768(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              RigVMModel___RotateHead_2_RotateBone_0_1_1_Set_Transform_CachedIndex; // 0x0780(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___RotateHead_2_RotateBone_0_1_1_1_Cast_1_Result; // 0x0790(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___RotateHead_2_RotateBone_0_1_1_1_Cast_Result; // 0x07B0(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	uint8                                         Pad_7C8[0x8];                                      // 0x07C8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___RotateHead_2_RotateBone_0_1_1_1_GetTransform_Transform; // 0x07D0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RotateHead_2_RotateBone_0_1_1_1_GetTransform_CachedIndex; // 0x0830(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___RotateHead_2_RotateBone_0_1_1_1_Cast_Value; // 0x0840(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___RotateHead_2_RotateBone_0_1_1_1_Add_Result; // 0x0860(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___RotateHead_2_RotateBone_0_1_1_1_Add_A; // 0x0868(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___RotateHead_2_RotateBone_0_1_1_1_Multiply_Result; // 0x0870(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___RotateHead_2_RotateBone_0_1_1_1_Cast_1_Value__IO; // 0x0878(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              RigVMModel___RotateHead_2_RotateBone_0_1_1_1_Set_Transform_CachedIndex; // 0x0890(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___RotateHead_2_RotateBone_0_2_Cast_1_Result; // 0x08A0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___RotateHead_2_RotateBone_0_2_Cast_Result; // 0x08C0(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	uint8                                         Pad_8D8[0x8];                                      // 0x08D8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___RotateHead_2_RotateBone_0_2_GetTransform_Transform; // 0x08E0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RotateHead_2_RotateBone_0_2_GetTransform_CachedIndex; // 0x0940(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___RotateHead_2_RotateBone_0_2_Cast_Value; // 0x0950(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___RotateHead_2_RotateBone_0_2_Add_Result; // 0x0970(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___RotateHead_2_RotateBone_0_2_Add_A;    // 0x0978(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___RotateHead_2_RotateBone_0_2_Multiply_Result; // 0x0980(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___RotateHead_2_RotateBone_0_2_Cast_1_Value__IO; // 0x0988(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              RigVMModel___RotateHead_2_RotateBone_0_2_Set_Transform_CachedIndex; // 0x09A0(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___PitchRotateHead_RotateBonePitch_1_2_Cast_1_Result; // 0x09B0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___PitchRotateHead_RotateBonePitch_1_2_Add_Result; // 0x09D0(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___PitchRotateHead_RotateBonePitch_1_2_Cast_Result; // 0x09D8(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FTransform                             RigVMModel___PitchRotateHead_RotateBonePitch_1_2_GetTransform_Transform; // 0x09F0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___PitchRotateHead_RotateBonePitch_1_2_GetTransform_CachedIndex; // 0x0A50(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___PitchRotateHead_RotateBonePitch_1_2_Cast_Value; // 0x0A60(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___PitchRotateHead_RotateBonePitch_1_2_Add_A; // 0x0A80(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___PitchRotateHead_RotateBonePitch_1_2_Multiply_Result; // 0x0A88(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___PitchRotateHead_Cast_1_Result;        // 0x0A90(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	uint8                                         Pad_AA8[0x8];                                      // 0x0AA8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___PitchRotateHead_GetTransform_1_Transform; // 0x0AB0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___PitchRotateHead_GetTransform_1_CachedIndex; // 0x0B10(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___PitchRotateHead_Cast_1_Value;         // 0x0B20(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___PitchRotateHead_RotateBonePitch_1_2_Multiply_A; // 0x0B40(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___PitchRotateHead_RotateBonePitch_1_2_Cast_1_Value__IO; // 0x0B48(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              RigVMModel___PitchRotateHead_RotateBonePitch_1_2_Set_Transform_CachedIndex; // 0x0B60(0x0010)(Edit, EditConst, NonTransactional)
	struct FRotator                               RigVMModel___RotateBody_Cast_Result;               // 0x0B70(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	uint8                                         Pad_B88[0x8];                                      // 0x0B88(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___RotateBody_GetTransform_Transform;    // 0x0B90(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RotateBody_GetTransform_CachedIndex;  // 0x0BF0(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___RotateBody_Cast_Value;                // 0x0C00(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FQuat                                  RigVMModel___RotateBody_RotateBone_1_1_Cast_1_Result; // 0x0C20(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___RotateBody_RotateBone_1_1_Cast_Result; // 0x0C40(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	uint8                                         Pad_C58[0x8];                                      // 0x0C58(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___RotateBody_RotateBone_1_1_GetTransform_Transform; // 0x0C60(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RotateBody_RotateBone_1_1_GetTransform_CachedIndex; // 0x0CC0(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___RotateBody_RotateBone_1_1_Cast_Value; // 0x0CD0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___RotateBody_RotateBone_1_1_Add_Result; // 0x0CF0(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___RotateBody_RotateBone_1_1_Add_A;      // 0x0CF8(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___RotateBody_RotateBone_1_1_Multiply_Result; // 0x0D00(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___RotateBody_RotateBone_1_1_Multiply_A; // 0x0D08(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___RotateBody_RotateBone_1_1_Cast_1_Value__IO; // 0x0D10(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              RigVMModel___RotateBody_RotateBone_1_1_Set_Transform_CachedIndex; // 0x0D28(0x0010)(Edit, EditConst, NonTransactional)
	uint8                                         Pad_D38[0x8];                                      // 0x0D38(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  RigVMModel___RotateBody_RotateBone_1_Cast_1_Result; // 0x0D40(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___RotateBody_RotateBone_1_Cast_Result;  // 0x0D60(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	uint8                                         Pad_D78[0x8];                                      // 0x0D78(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___RotateBody_RotateBone_1_GetTransform_Transform; // 0x0D80(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RotateBody_RotateBone_1_GetTransform_CachedIndex; // 0x0DE0(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___RotateBody_RotateBone_1_Cast_Value;   // 0x0DF0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___RotateBody_RotateBone_1_Add_Result;   // 0x0E10(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___RotateBody_RotateBone_1_Add_A;        // 0x0E18(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___RotateBody_RotateBone_1_Multiply_Result; // 0x0E20(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___RotateBody_RotateBone_1_Cast_1_Value__IO; // 0x0E28(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              RigVMModel___RotateBody_RotateBone_1_Set_Transform_CachedIndex; // 0x0E40(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___RotateHead_1_RotateBone_0_Cast_1_Result; // 0x0E50(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___RotateHead_1_RotateBone_0_Cast_Result; // 0x0E70(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	uint8                                         Pad_E88[0x8];                                      // 0x0E88(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___RotateHead_1_RotateBone_0_GetTransform_Transform; // 0x0E90(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RotateHead_1_RotateBone_0_GetTransform_CachedIndex; // 0x0EF0(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___RotateHead_1_RotateBone_0_Cast_Value; // 0x0F00(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___RotateHead_1_RotateBone_0_Add_Result; // 0x0F20(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___RotateHead_1_RotateBone_0_Add_A;      // 0x0F28(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___RotateHead_1_RotateBone_0_Multiply_Result; // 0x0F30(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___RotateHead_1_Cast_2_Result;           // 0x0F38(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FQuat                                  RigVMModel___RotateHead_1_Cast_1_Result;           // 0x0F50(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___RotateHead_1_Cast_Result;             // 0x0F70(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	uint8                                         Pad_F88[0x8];                                      // 0x0F88(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___RotateHead_1_GetTransform_Transform;  // 0x0F90(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RotateHead_1_GetTransform_CachedIndex; // 0x0FF0(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___RotateHead_1_Cast_Value;              // 0x1000(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___RotateHead_1_Multiply_Result;         // 0x1020(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___RotateHead_1_Multiply_A;              // 0x1028(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___RotateHead_1_Cast_1_Value__IO;        // 0x1030(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	double                                        RigVMModel___RotateHead_1_RotateBone_0_Multiply_A; // 0x1048(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___RotateHead_1_RotateBone_0_Cast_1_Value__IO; // 0x1050(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              RigVMModel___RotateHead_1_RotateBone_0_Set_Transform_CachedIndex; // 0x1068(0x0010)(Edit, EditConst, NonTransactional)
	uint8                                         Pad_1078[0x8];                                     // 0x1078(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  RigVMModel___RotateHead_1_RotateBone_0_1_Cast_1_Result; // 0x1080(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___RotateHead_1_RotateBone_0_1_Cast_Result; // 0x10A0(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	uint8                                         Pad_10B8[0x8];                                     // 0x10B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___RotateHead_1_RotateBone_0_1_GetTransform_Transform; // 0x10C0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RotateHead_1_RotateBone_0_1_GetTransform_CachedIndex; // 0x1120(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___RotateHead_1_RotateBone_0_1_Cast_Value; // 0x1130(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___RotateHead_1_RotateBone_0_1_Add_Result; // 0x1150(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___RotateHead_1_RotateBone_0_1_Add_A;    // 0x1158(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___RotateHead_1_RotateBone_0_1_Multiply_Result; // 0x1160(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___RotateHead_1_RotateBone_0_1_Cast_1_Value__IO; // 0x1168(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              RigVMModel___RotateHead_1_RotateBone_0_1_Set_Transform_CachedIndex; // 0x1180(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___RotateHead_1_RotateBone_0_1_1_Cast_1_Result; // 0x1190(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___RotateHead_1_RotateBone_0_1_1_Cast_Result; // 0x11B0(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	uint8                                         Pad_11C8[0x8];                                     // 0x11C8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___RotateHead_1_RotateBone_0_1_1_GetTransform_Transform; // 0x11D0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RotateHead_1_RotateBone_0_1_1_GetTransform_CachedIndex; // 0x1230(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___RotateHead_1_RotateBone_0_1_1_Cast_Value; // 0x1240(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___RotateHead_1_RotateBone_0_1_1_Add_Result; // 0x1260(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___RotateHead_1_RotateBone_0_1_1_Add_A;  // 0x1268(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___RotateHead_1_RotateBone_0_1_1_Multiply_Result; // 0x1270(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___RotateHead_1_RotateBone_0_1_1_Cast_1_Value__IO; // 0x1278(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              RigVMModel___RotateHead_1_RotateBone_0_1_1_Set_Transform_CachedIndex; // 0x1290(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___RotateHead_1_RotateBone_0_1_1_1_Cast_1_Result; // 0x12A0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___RotateHead_1_RotateBone_0_1_1_1_Cast_Result; // 0x12C0(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	uint8                                         Pad_12D8[0x8];                                     // 0x12D8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___RotateHead_1_RotateBone_0_1_1_1_GetTransform_Transform; // 0x12E0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RotateHead_1_RotateBone_0_1_1_1_GetTransform_CachedIndex; // 0x1340(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___RotateHead_1_RotateBone_0_1_1_1_Cast_Value; // 0x1350(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___RotateHead_1_RotateBone_0_1_1_1_Add_Result; // 0x1370(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___RotateHead_1_RotateBone_0_1_1_1_Add_A; // 0x1378(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___RotateHead_1_RotateBone_0_1_1_1_Multiply_Result; // 0x1380(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___RotateHead_1_RotateBone_0_1_1_1_Cast_1_Value__IO; // 0x1388(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              RigVMModel___RotateHead_1_RotateBone_0_1_1_1_Set_Transform_CachedIndex; // 0x13A0(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___RotateHead_1_RotateBone_0_2_Cast_1_Result; // 0x13B0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___RotateHead_1_RotateBone_0_2_Cast_Result; // 0x13D0(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	uint8                                         Pad_13E8[0x8];                                     // 0x13E8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___RotateHead_1_RotateBone_0_2_GetTransform_Transform; // 0x13F0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RotateHead_1_RotateBone_0_2_GetTransform_CachedIndex; // 0x1450(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___RotateHead_1_RotateBone_0_2_Cast_Value; // 0x1460(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___RotateHead_1_RotateBone_0_2_Add_Result; // 0x1480(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___RotateHead_1_RotateBone_0_2_Add_A;    // 0x1488(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___RotateHead_1_RotateBone_0_2_Multiply_Result; // 0x1490(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___RotateHead_1_RotateBone_0_2_Cast_1_Value__IO; // 0x1498(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              RigVMModel___RotateHead_1_RotateBone_0_2_Set_Transform_CachedIndex; // 0x14B0(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___RotateHead_RotateBone_0_Cast_1_Result; // 0x14C0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___RotateHead_RotateBone_0_Cast_Result;  // 0x14E0(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	uint8                                         Pad_14F8[0x8];                                     // 0x14F8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___RotateHead_RotateBone_0_GetTransform_Transform; // 0x1500(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RotateHead_RotateBone_0_GetTransform_CachedIndex; // 0x1560(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___RotateHead_RotateBone_0_Cast_Value;   // 0x1570(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___RotateHead_RotateBone_0_Add_Result;   // 0x1590(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___RotateHead_RotateBone_0_Add_A;        // 0x1598(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___RotateHead_RotateBone_0_Multiply_Result; // 0x15A0(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___RotateHead_Cast_2_Result;             // 0x15A8(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FQuat                                  RigVMModel___RotateHead_Cast_1_Result;             // 0x15C0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___RotateHead_Cast_Result;               // 0x15E0(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	uint8                                         Pad_15F8[0x8];                                     // 0x15F8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___RotateHead_GetTransform_Transform;    // 0x1600(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RotateHead_GetTransform_CachedIndex;  // 0x1660(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___RotateHead_Cast_Value;                // 0x1670(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___RotateHead_Multiply_Result;           // 0x1690(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___RotateHead_Multiply_A;                // 0x1698(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___RotateHead_Cast_1_Value__IO;          // 0x16A0(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	double                                        RigVMModel___RotateHead_RotateBone_0_Multiply_A;   // 0x16B8(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___RotateHead_RotateBone_0_Cast_1_Value__IO; // 0x16C0(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              RigVMModel___RotateHead_RotateBone_0_Set_Transform_CachedIndex; // 0x16D8(0x0010)(Edit, EditConst, NonTransactional)
	uint8                                         Pad_16E8[0x8];                                     // 0x16E8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  RigVMModel___RotateHead_RotateBone_0_1_Cast_1_Result; // 0x16F0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___RotateHead_RotateBone_0_1_Cast_Result; // 0x1710(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	uint8                                         Pad_1728[0x8];                                     // 0x1728(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___RotateHead_RotateBone_0_1_GetTransform_Transform; // 0x1730(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RotateHead_RotateBone_0_1_GetTransform_CachedIndex; // 0x1790(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___RotateHead_RotateBone_0_1_Cast_Value; // 0x17A0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___RotateHead_RotateBone_0_1_Add_Result; // 0x17C0(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___RotateHead_RotateBone_0_1_Add_A;      // 0x17C8(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___RotateHead_RotateBone_0_1_Multiply_Result; // 0x17D0(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___RotateHead_RotateBone_0_1_Cast_1_Value__IO; // 0x17D8(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              RigVMModel___RotateHead_RotateBone_0_1_Set_Transform_CachedIndex; // 0x17F0(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___RotateHead_RotateBone_0_1_1_Cast_1_Result; // 0x1800(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___RotateHead_RotateBone_0_1_1_Cast_Result; // 0x1820(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	uint8                                         Pad_1838[0x8];                                     // 0x1838(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___RotateHead_RotateBone_0_1_1_GetTransform_Transform; // 0x1840(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RotateHead_RotateBone_0_1_1_GetTransform_CachedIndex; // 0x18A0(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___RotateHead_RotateBone_0_1_1_Cast_Value; // 0x18B0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___RotateHead_RotateBone_0_1_1_Add_Result; // 0x18D0(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___RotateHead_RotateBone_0_1_1_Add_A;    // 0x18D8(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___RotateHead_RotateBone_0_1_1_Multiply_Result; // 0x18E0(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___RotateHead_RotateBone_0_1_1_Cast_1_Value__IO; // 0x18E8(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              RigVMModel___RotateHead_RotateBone_0_1_1_Set_Transform_CachedIndex; // 0x1900(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___RotateHead_RotateBone_0_1_1_1_Cast_1_Result; // 0x1910(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___RotateHead_RotateBone_0_1_1_1_Cast_Result; // 0x1930(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	uint8                                         Pad_1948[0x8];                                     // 0x1948(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___RotateHead_RotateBone_0_1_1_1_GetTransform_Transform; // 0x1950(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RotateHead_RotateBone_0_1_1_1_GetTransform_CachedIndex; // 0x19B0(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___RotateHead_RotateBone_0_1_1_1_Cast_Value; // 0x19C0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___RotateHead_RotateBone_0_1_1_1_Add_Result; // 0x19E0(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___RotateHead_RotateBone_0_1_1_1_Add_A;  // 0x19E8(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___RotateHead_RotateBone_0_1_1_1_Multiply_Result; // 0x19F0(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___RotateHead_RotateBone_0_1_1_1_Cast_1_Value__IO; // 0x19F8(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              RigVMModel___RotateHead_RotateBone_0_1_1_1_Set_Transform_CachedIndex; // 0x1A10(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___RotateHead_RotateBone_0_2_Cast_1_Result; // 0x1A20(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___RotateHead_RotateBone_0_2_Cast_Result; // 0x1A40(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	uint8                                         Pad_1A58[0x8];                                     // 0x1A58(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___RotateHead_RotateBone_0_2_GetTransform_Transform; // 0x1A60(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RotateHead_RotateBone_0_2_GetTransform_CachedIndex; // 0x1AC0(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___RotateHead_RotateBone_0_2_Cast_Value; // 0x1AD0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___RotateHead_RotateBone_0_2_Add_Result; // 0x1AF0(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___RotateHead_RotateBone_0_2_Add_A;      // 0x1AF8(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___RotateHead_RotateBone_0_2_Multiply_Result; // 0x1B00(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___RotateHead_RotateBone_0_2_Cast_1_Value__IO; // 0x1B08(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              RigVMModel___RotateHead_RotateBone_0_2_Set_Transform_CachedIndex; // 0x1B20(0x0010)(Edit, EditConst, NonTransactional)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RigVMMemoryStorageGeneratorClass ControlRig_Panther.RigVMMemory_Work", true>();
	}
	static class ControlRig_Panther::URigVMMemory_Work* GetDefaultObj()
	{
		return GetDefaultObjImpl<ControlRig_Panther::URigVMMemory_Work>();
	}
};
static_assert(alignof(ControlRig_Panther::URigVMMemory_Work) == 0x000010, "Wrong alignment on ControlRig_Panther::URigVMMemory_Work");
static_assert(sizeof(ControlRig_Panther::URigVMMemory_Work) == 0x001B30, "Wrong size on ControlRig_Panther::URigVMMemory_Work");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, ExecuteContext_) == 0x000028, "Member 'ControlRig_Panther::URigVMMemory_Work::ExecuteContext_' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateBody_1_Cast_Result) == 0x000060, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateBody_1_Cast_Result' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateBody_1_GetTransform_Transform) == 0x000080, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateBody_1_GetTransform_Transform' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateBody_1_GetTransform_CachedIndex) == 0x0000E0, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateBody_1_GetTransform_CachedIndex' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateBody_1_Cast_Value) == 0x0000F0, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateBody_1_Cast_Value' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateBody_1_RotateBone_1_1_Cast_1_Result) == 0x000110, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateBody_1_RotateBone_1_1_Cast_1_Result' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateBody_1_RotateBone_1_1_Cast_Result) == 0x000130, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateBody_1_RotateBone_1_1_Cast_Result' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateBody_1_RotateBone_1_1_GetTransform_Transform) == 0x000150, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateBody_1_RotateBone_1_1_GetTransform_Transform' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateBody_1_RotateBone_1_1_GetTransform_CachedIndex) == 0x0001B0, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateBody_1_RotateBone_1_1_GetTransform_CachedIndex' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateBody_1_RotateBone_1_1_Cast_Value) == 0x0001C0, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateBody_1_RotateBone_1_1_Cast_Value' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateBody_1_RotateBone_1_1_Add_Result) == 0x0001E0, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateBody_1_RotateBone_1_1_Add_Result' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateBody_1_RotateBone_1_1_Add_A) == 0x0001E8, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateBody_1_RotateBone_1_1_Add_A' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateBody_1_RotateBone_1_1_Multiply_Result) == 0x0001F0, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateBody_1_RotateBone_1_1_Multiply_Result' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateBody_1_RotateBone_1_1_Multiply_A) == 0x0001F8, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateBody_1_RotateBone_1_1_Multiply_A' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateBody_1_RotateBone_1_1_Cast_1_Value__IO) == 0x000200, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateBody_1_RotateBone_1_1_Cast_1_Value__IO' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateBody_1_RotateBone_1_1_Set_Transform_CachedIndex) == 0x000218, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateBody_1_RotateBone_1_1_Set_Transform_CachedIndex' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateBody_1_RotateBone_1_Cast_1_Result) == 0x000230, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateBody_1_RotateBone_1_Cast_1_Result' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateBody_1_RotateBone_1_Cast_Result) == 0x000250, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateBody_1_RotateBone_1_Cast_Result' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateBody_1_RotateBone_1_GetTransform_Transform) == 0x000270, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateBody_1_RotateBone_1_GetTransform_Transform' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateBody_1_RotateBone_1_GetTransform_CachedIndex) == 0x0002D0, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateBody_1_RotateBone_1_GetTransform_CachedIndex' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateBody_1_RotateBone_1_Cast_Value) == 0x0002E0, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateBody_1_RotateBone_1_Cast_Value' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateBody_1_RotateBone_1_Add_Result) == 0x000300, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateBody_1_RotateBone_1_Add_Result' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateBody_1_RotateBone_1_Add_A) == 0x000308, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateBody_1_RotateBone_1_Add_A' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateBody_1_RotateBone_1_Multiply_Result) == 0x000310, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateBody_1_RotateBone_1_Multiply_Result' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateBody_1_RotateBone_1_Cast_1_Value__IO) == 0x000318, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateBody_1_RotateBone_1_Cast_1_Value__IO' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateBody_1_RotateBone_1_Set_Transform_CachedIndex) == 0x000330, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateBody_1_RotateBone_1_Set_Transform_CachedIndex' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_2_RotateBone_0_Cast_1_Result) == 0x000340, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_2_RotateBone_0_Cast_1_Result' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_2_RotateBone_0_Cast_Result) == 0x000360, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_2_RotateBone_0_Cast_Result' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_2_RotateBone_0_GetTransform_Transform) == 0x000380, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_2_RotateBone_0_GetTransform_Transform' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_2_RotateBone_0_GetTransform_CachedIndex) == 0x0003E0, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_2_RotateBone_0_GetTransform_CachedIndex' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_2_RotateBone_0_Cast_Value) == 0x0003F0, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_2_RotateBone_0_Cast_Value' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_2_RotateBone_0_Add_Result) == 0x000410, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_2_RotateBone_0_Add_Result' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_2_RotateBone_0_Add_A) == 0x000418, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_2_RotateBone_0_Add_A' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_2_RotateBone_0_Multiply_Result) == 0x000420, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_2_RotateBone_0_Multiply_Result' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_2_Cast_2_Result) == 0x000428, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_2_Cast_2_Result' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_2_Cast_1_Result) == 0x000440, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_2_Cast_1_Result' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_2_Cast_Result) == 0x000460, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_2_Cast_Result' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_2_GetTransform_Transform) == 0x000480, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_2_GetTransform_Transform' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_2_GetTransform_CachedIndex) == 0x0004E0, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_2_GetTransform_CachedIndex' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_2_Cast_Value) == 0x0004F0, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_2_Cast_Value' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_2_Multiply_Result) == 0x000510, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_2_Multiply_Result' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_2_Multiply_A) == 0x000518, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_2_Multiply_A' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_2_Cast_1_Value__IO) == 0x000520, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_2_Cast_1_Value__IO' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_2_RotateBone_0_Multiply_A) == 0x000538, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_2_RotateBone_0_Multiply_A' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_2_RotateBone_0_Cast_1_Value__IO) == 0x000540, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_2_RotateBone_0_Cast_1_Value__IO' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_2_RotateBone_0_Set_Transform_CachedIndex) == 0x000558, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_2_RotateBone_0_Set_Transform_CachedIndex' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_2_RotateBone_0_1_Cast_1_Result) == 0x000570, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_2_RotateBone_0_1_Cast_1_Result' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_2_RotateBone_0_1_Cast_Result) == 0x000590, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_2_RotateBone_0_1_Cast_Result' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_2_RotateBone_0_1_GetTransform_Transform) == 0x0005B0, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_2_RotateBone_0_1_GetTransform_Transform' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_2_RotateBone_0_1_GetTransform_CachedIndex) == 0x000610, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_2_RotateBone_0_1_GetTransform_CachedIndex' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_2_RotateBone_0_1_Cast_Value) == 0x000620, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_2_RotateBone_0_1_Cast_Value' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_2_RotateBone_0_1_Add_Result) == 0x000640, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_2_RotateBone_0_1_Add_Result' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_2_RotateBone_0_1_Add_A) == 0x000648, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_2_RotateBone_0_1_Add_A' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_2_RotateBone_0_1_Multiply_Result) == 0x000650, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_2_RotateBone_0_1_Multiply_Result' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_2_RotateBone_0_1_Cast_1_Value__IO) == 0x000658, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_2_RotateBone_0_1_Cast_1_Value__IO' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_2_RotateBone_0_1_Set_Transform_CachedIndex) == 0x000670, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_2_RotateBone_0_1_Set_Transform_CachedIndex' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_2_RotateBone_0_1_1_Cast_1_Result) == 0x000680, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_2_RotateBone_0_1_1_Cast_1_Result' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_2_RotateBone_0_1_1_Cast_Result) == 0x0006A0, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_2_RotateBone_0_1_1_Cast_Result' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_2_RotateBone_0_1_1_GetTransform_Transform) == 0x0006C0, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_2_RotateBone_0_1_1_GetTransform_Transform' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_2_RotateBone_0_1_1_GetTransform_CachedIndex) == 0x000720, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_2_RotateBone_0_1_1_GetTransform_CachedIndex' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_2_RotateBone_0_1_1_Cast_Value) == 0x000730, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_2_RotateBone_0_1_1_Cast_Value' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_2_RotateBone_0_1_1_Add_Result) == 0x000750, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_2_RotateBone_0_1_1_Add_Result' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_2_RotateBone_0_1_1_Add_A) == 0x000758, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_2_RotateBone_0_1_1_Add_A' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_2_RotateBone_0_1_1_Multiply_Result) == 0x000760, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_2_RotateBone_0_1_1_Multiply_Result' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_2_RotateBone_0_1_1_Cast_1_Value__IO) == 0x000768, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_2_RotateBone_0_1_1_Cast_1_Value__IO' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_2_RotateBone_0_1_1_Set_Transform_CachedIndex) == 0x000780, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_2_RotateBone_0_1_1_Set_Transform_CachedIndex' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_2_RotateBone_0_1_1_1_Cast_1_Result) == 0x000790, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_2_RotateBone_0_1_1_1_Cast_1_Result' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_2_RotateBone_0_1_1_1_Cast_Result) == 0x0007B0, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_2_RotateBone_0_1_1_1_Cast_Result' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_2_RotateBone_0_1_1_1_GetTransform_Transform) == 0x0007D0, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_2_RotateBone_0_1_1_1_GetTransform_Transform' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_2_RotateBone_0_1_1_1_GetTransform_CachedIndex) == 0x000830, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_2_RotateBone_0_1_1_1_GetTransform_CachedIndex' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_2_RotateBone_0_1_1_1_Cast_Value) == 0x000840, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_2_RotateBone_0_1_1_1_Cast_Value' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_2_RotateBone_0_1_1_1_Add_Result) == 0x000860, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_2_RotateBone_0_1_1_1_Add_Result' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_2_RotateBone_0_1_1_1_Add_A) == 0x000868, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_2_RotateBone_0_1_1_1_Add_A' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_2_RotateBone_0_1_1_1_Multiply_Result) == 0x000870, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_2_RotateBone_0_1_1_1_Multiply_Result' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_2_RotateBone_0_1_1_1_Cast_1_Value__IO) == 0x000878, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_2_RotateBone_0_1_1_1_Cast_1_Value__IO' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_2_RotateBone_0_1_1_1_Set_Transform_CachedIndex) == 0x000890, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_2_RotateBone_0_1_1_1_Set_Transform_CachedIndex' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_2_RotateBone_0_2_Cast_1_Result) == 0x0008A0, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_2_RotateBone_0_2_Cast_1_Result' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_2_RotateBone_0_2_Cast_Result) == 0x0008C0, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_2_RotateBone_0_2_Cast_Result' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_2_RotateBone_0_2_GetTransform_Transform) == 0x0008E0, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_2_RotateBone_0_2_GetTransform_Transform' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_2_RotateBone_0_2_GetTransform_CachedIndex) == 0x000940, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_2_RotateBone_0_2_GetTransform_CachedIndex' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_2_RotateBone_0_2_Cast_Value) == 0x000950, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_2_RotateBone_0_2_Cast_Value' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_2_RotateBone_0_2_Add_Result) == 0x000970, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_2_RotateBone_0_2_Add_Result' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_2_RotateBone_0_2_Add_A) == 0x000978, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_2_RotateBone_0_2_Add_A' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_2_RotateBone_0_2_Multiply_Result) == 0x000980, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_2_RotateBone_0_2_Multiply_Result' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_2_RotateBone_0_2_Cast_1_Value__IO) == 0x000988, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_2_RotateBone_0_2_Cast_1_Value__IO' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_2_RotateBone_0_2_Set_Transform_CachedIndex) == 0x0009A0, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_2_RotateBone_0_2_Set_Transform_CachedIndex' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___PitchRotateHead_RotateBonePitch_1_2_Cast_1_Result) == 0x0009B0, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___PitchRotateHead_RotateBonePitch_1_2_Cast_1_Result' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___PitchRotateHead_RotateBonePitch_1_2_Add_Result) == 0x0009D0, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___PitchRotateHead_RotateBonePitch_1_2_Add_Result' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___PitchRotateHead_RotateBonePitch_1_2_Cast_Result) == 0x0009D8, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___PitchRotateHead_RotateBonePitch_1_2_Cast_Result' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___PitchRotateHead_RotateBonePitch_1_2_GetTransform_Transform) == 0x0009F0, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___PitchRotateHead_RotateBonePitch_1_2_GetTransform_Transform' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___PitchRotateHead_RotateBonePitch_1_2_GetTransform_CachedIndex) == 0x000A50, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___PitchRotateHead_RotateBonePitch_1_2_GetTransform_CachedIndex' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___PitchRotateHead_RotateBonePitch_1_2_Cast_Value) == 0x000A60, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___PitchRotateHead_RotateBonePitch_1_2_Cast_Value' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___PitchRotateHead_RotateBonePitch_1_2_Add_A) == 0x000A80, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___PitchRotateHead_RotateBonePitch_1_2_Add_A' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___PitchRotateHead_RotateBonePitch_1_2_Multiply_Result) == 0x000A88, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___PitchRotateHead_RotateBonePitch_1_2_Multiply_Result' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___PitchRotateHead_Cast_1_Result) == 0x000A90, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___PitchRotateHead_Cast_1_Result' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___PitchRotateHead_GetTransform_1_Transform) == 0x000AB0, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___PitchRotateHead_GetTransform_1_Transform' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___PitchRotateHead_GetTransform_1_CachedIndex) == 0x000B10, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___PitchRotateHead_GetTransform_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___PitchRotateHead_Cast_1_Value) == 0x000B20, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___PitchRotateHead_Cast_1_Value' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___PitchRotateHead_RotateBonePitch_1_2_Multiply_A) == 0x000B40, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___PitchRotateHead_RotateBonePitch_1_2_Multiply_A' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___PitchRotateHead_RotateBonePitch_1_2_Cast_1_Value__IO) == 0x000B48, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___PitchRotateHead_RotateBonePitch_1_2_Cast_1_Value__IO' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___PitchRotateHead_RotateBonePitch_1_2_Set_Transform_CachedIndex) == 0x000B60, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___PitchRotateHead_RotateBonePitch_1_2_Set_Transform_CachedIndex' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateBody_Cast_Result) == 0x000B70, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateBody_Cast_Result' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateBody_GetTransform_Transform) == 0x000B90, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateBody_GetTransform_Transform' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateBody_GetTransform_CachedIndex) == 0x000BF0, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateBody_GetTransform_CachedIndex' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateBody_Cast_Value) == 0x000C00, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateBody_Cast_Value' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateBody_RotateBone_1_1_Cast_1_Result) == 0x000C20, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateBody_RotateBone_1_1_Cast_1_Result' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateBody_RotateBone_1_1_Cast_Result) == 0x000C40, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateBody_RotateBone_1_1_Cast_Result' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateBody_RotateBone_1_1_GetTransform_Transform) == 0x000C60, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateBody_RotateBone_1_1_GetTransform_Transform' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateBody_RotateBone_1_1_GetTransform_CachedIndex) == 0x000CC0, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateBody_RotateBone_1_1_GetTransform_CachedIndex' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateBody_RotateBone_1_1_Cast_Value) == 0x000CD0, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateBody_RotateBone_1_1_Cast_Value' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateBody_RotateBone_1_1_Add_Result) == 0x000CF0, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateBody_RotateBone_1_1_Add_Result' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateBody_RotateBone_1_1_Add_A) == 0x000CF8, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateBody_RotateBone_1_1_Add_A' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateBody_RotateBone_1_1_Multiply_Result) == 0x000D00, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateBody_RotateBone_1_1_Multiply_Result' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateBody_RotateBone_1_1_Multiply_A) == 0x000D08, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateBody_RotateBone_1_1_Multiply_A' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateBody_RotateBone_1_1_Cast_1_Value__IO) == 0x000D10, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateBody_RotateBone_1_1_Cast_1_Value__IO' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateBody_RotateBone_1_1_Set_Transform_CachedIndex) == 0x000D28, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateBody_RotateBone_1_1_Set_Transform_CachedIndex' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateBody_RotateBone_1_Cast_1_Result) == 0x000D40, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateBody_RotateBone_1_Cast_1_Result' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateBody_RotateBone_1_Cast_Result) == 0x000D60, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateBody_RotateBone_1_Cast_Result' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateBody_RotateBone_1_GetTransform_Transform) == 0x000D80, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateBody_RotateBone_1_GetTransform_Transform' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateBody_RotateBone_1_GetTransform_CachedIndex) == 0x000DE0, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateBody_RotateBone_1_GetTransform_CachedIndex' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateBody_RotateBone_1_Cast_Value) == 0x000DF0, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateBody_RotateBone_1_Cast_Value' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateBody_RotateBone_1_Add_Result) == 0x000E10, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateBody_RotateBone_1_Add_Result' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateBody_RotateBone_1_Add_A) == 0x000E18, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateBody_RotateBone_1_Add_A' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateBody_RotateBone_1_Multiply_Result) == 0x000E20, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateBody_RotateBone_1_Multiply_Result' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateBody_RotateBone_1_Cast_1_Value__IO) == 0x000E28, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateBody_RotateBone_1_Cast_1_Value__IO' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateBody_RotateBone_1_Set_Transform_CachedIndex) == 0x000E40, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateBody_RotateBone_1_Set_Transform_CachedIndex' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_1_RotateBone_0_Cast_1_Result) == 0x000E50, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_1_RotateBone_0_Cast_1_Result' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_1_RotateBone_0_Cast_Result) == 0x000E70, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_1_RotateBone_0_Cast_Result' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_1_RotateBone_0_GetTransform_Transform) == 0x000E90, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_1_RotateBone_0_GetTransform_Transform' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_1_RotateBone_0_GetTransform_CachedIndex) == 0x000EF0, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_1_RotateBone_0_GetTransform_CachedIndex' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_1_RotateBone_0_Cast_Value) == 0x000F00, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_1_RotateBone_0_Cast_Value' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_1_RotateBone_0_Add_Result) == 0x000F20, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_1_RotateBone_0_Add_Result' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_1_RotateBone_0_Add_A) == 0x000F28, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_1_RotateBone_0_Add_A' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_1_RotateBone_0_Multiply_Result) == 0x000F30, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_1_RotateBone_0_Multiply_Result' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_1_Cast_2_Result) == 0x000F38, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_1_Cast_2_Result' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_1_Cast_1_Result) == 0x000F50, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_1_Cast_1_Result' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_1_Cast_Result) == 0x000F70, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_1_Cast_Result' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_1_GetTransform_Transform) == 0x000F90, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_1_GetTransform_Transform' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_1_GetTransform_CachedIndex) == 0x000FF0, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_1_GetTransform_CachedIndex' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_1_Cast_Value) == 0x001000, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_1_Cast_Value' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_1_Multiply_Result) == 0x001020, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_1_Multiply_Result' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_1_Multiply_A) == 0x001028, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_1_Multiply_A' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_1_Cast_1_Value__IO) == 0x001030, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_1_Cast_1_Value__IO' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_1_RotateBone_0_Multiply_A) == 0x001048, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_1_RotateBone_0_Multiply_A' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_1_RotateBone_0_Cast_1_Value__IO) == 0x001050, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_1_RotateBone_0_Cast_1_Value__IO' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_1_RotateBone_0_Set_Transform_CachedIndex) == 0x001068, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_1_RotateBone_0_Set_Transform_CachedIndex' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_1_RotateBone_0_1_Cast_1_Result) == 0x001080, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_1_RotateBone_0_1_Cast_1_Result' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_1_RotateBone_0_1_Cast_Result) == 0x0010A0, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_1_RotateBone_0_1_Cast_Result' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_1_RotateBone_0_1_GetTransform_Transform) == 0x0010C0, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_1_RotateBone_0_1_GetTransform_Transform' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_1_RotateBone_0_1_GetTransform_CachedIndex) == 0x001120, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_1_RotateBone_0_1_GetTransform_CachedIndex' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_1_RotateBone_0_1_Cast_Value) == 0x001130, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_1_RotateBone_0_1_Cast_Value' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_1_RotateBone_0_1_Add_Result) == 0x001150, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_1_RotateBone_0_1_Add_Result' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_1_RotateBone_0_1_Add_A) == 0x001158, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_1_RotateBone_0_1_Add_A' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_1_RotateBone_0_1_Multiply_Result) == 0x001160, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_1_RotateBone_0_1_Multiply_Result' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_1_RotateBone_0_1_Cast_1_Value__IO) == 0x001168, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_1_RotateBone_0_1_Cast_1_Value__IO' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_1_RotateBone_0_1_Set_Transform_CachedIndex) == 0x001180, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_1_RotateBone_0_1_Set_Transform_CachedIndex' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_1_RotateBone_0_1_1_Cast_1_Result) == 0x001190, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_1_RotateBone_0_1_1_Cast_1_Result' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_1_RotateBone_0_1_1_Cast_Result) == 0x0011B0, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_1_RotateBone_0_1_1_Cast_Result' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_1_RotateBone_0_1_1_GetTransform_Transform) == 0x0011D0, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_1_RotateBone_0_1_1_GetTransform_Transform' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_1_RotateBone_0_1_1_GetTransform_CachedIndex) == 0x001230, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_1_RotateBone_0_1_1_GetTransform_CachedIndex' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_1_RotateBone_0_1_1_Cast_Value) == 0x001240, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_1_RotateBone_0_1_1_Cast_Value' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_1_RotateBone_0_1_1_Add_Result) == 0x001260, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_1_RotateBone_0_1_1_Add_Result' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_1_RotateBone_0_1_1_Add_A) == 0x001268, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_1_RotateBone_0_1_1_Add_A' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_1_RotateBone_0_1_1_Multiply_Result) == 0x001270, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_1_RotateBone_0_1_1_Multiply_Result' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_1_RotateBone_0_1_1_Cast_1_Value__IO) == 0x001278, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_1_RotateBone_0_1_1_Cast_1_Value__IO' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_1_RotateBone_0_1_1_Set_Transform_CachedIndex) == 0x001290, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_1_RotateBone_0_1_1_Set_Transform_CachedIndex' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_1_RotateBone_0_1_1_1_Cast_1_Result) == 0x0012A0, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_1_RotateBone_0_1_1_1_Cast_1_Result' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_1_RotateBone_0_1_1_1_Cast_Result) == 0x0012C0, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_1_RotateBone_0_1_1_1_Cast_Result' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_1_RotateBone_0_1_1_1_GetTransform_Transform) == 0x0012E0, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_1_RotateBone_0_1_1_1_GetTransform_Transform' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_1_RotateBone_0_1_1_1_GetTransform_CachedIndex) == 0x001340, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_1_RotateBone_0_1_1_1_GetTransform_CachedIndex' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_1_RotateBone_0_1_1_1_Cast_Value) == 0x001350, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_1_RotateBone_0_1_1_1_Cast_Value' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_1_RotateBone_0_1_1_1_Add_Result) == 0x001370, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_1_RotateBone_0_1_1_1_Add_Result' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_1_RotateBone_0_1_1_1_Add_A) == 0x001378, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_1_RotateBone_0_1_1_1_Add_A' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_1_RotateBone_0_1_1_1_Multiply_Result) == 0x001380, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_1_RotateBone_0_1_1_1_Multiply_Result' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_1_RotateBone_0_1_1_1_Cast_1_Value__IO) == 0x001388, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_1_RotateBone_0_1_1_1_Cast_1_Value__IO' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_1_RotateBone_0_1_1_1_Set_Transform_CachedIndex) == 0x0013A0, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_1_RotateBone_0_1_1_1_Set_Transform_CachedIndex' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_1_RotateBone_0_2_Cast_1_Result) == 0x0013B0, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_1_RotateBone_0_2_Cast_1_Result' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_1_RotateBone_0_2_Cast_Result) == 0x0013D0, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_1_RotateBone_0_2_Cast_Result' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_1_RotateBone_0_2_GetTransform_Transform) == 0x0013F0, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_1_RotateBone_0_2_GetTransform_Transform' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_1_RotateBone_0_2_GetTransform_CachedIndex) == 0x001450, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_1_RotateBone_0_2_GetTransform_CachedIndex' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_1_RotateBone_0_2_Cast_Value) == 0x001460, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_1_RotateBone_0_2_Cast_Value' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_1_RotateBone_0_2_Add_Result) == 0x001480, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_1_RotateBone_0_2_Add_Result' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_1_RotateBone_0_2_Add_A) == 0x001488, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_1_RotateBone_0_2_Add_A' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_1_RotateBone_0_2_Multiply_Result) == 0x001490, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_1_RotateBone_0_2_Multiply_Result' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_1_RotateBone_0_2_Cast_1_Value__IO) == 0x001498, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_1_RotateBone_0_2_Cast_1_Value__IO' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_1_RotateBone_0_2_Set_Transform_CachedIndex) == 0x0014B0, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_1_RotateBone_0_2_Set_Transform_CachedIndex' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_RotateBone_0_Cast_1_Result) == 0x0014C0, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_RotateBone_0_Cast_1_Result' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_RotateBone_0_Cast_Result) == 0x0014E0, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_RotateBone_0_Cast_Result' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_RotateBone_0_GetTransform_Transform) == 0x001500, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_RotateBone_0_GetTransform_Transform' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_RotateBone_0_GetTransform_CachedIndex) == 0x001560, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_RotateBone_0_GetTransform_CachedIndex' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_RotateBone_0_Cast_Value) == 0x001570, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_RotateBone_0_Cast_Value' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_RotateBone_0_Add_Result) == 0x001590, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_RotateBone_0_Add_Result' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_RotateBone_0_Add_A) == 0x001598, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_RotateBone_0_Add_A' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_RotateBone_0_Multiply_Result) == 0x0015A0, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_RotateBone_0_Multiply_Result' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_Cast_2_Result) == 0x0015A8, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_Cast_2_Result' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_Cast_1_Result) == 0x0015C0, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_Cast_1_Result' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_Cast_Result) == 0x0015E0, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_Cast_Result' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_GetTransform_Transform) == 0x001600, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_GetTransform_Transform' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_GetTransform_CachedIndex) == 0x001660, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_GetTransform_CachedIndex' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_Cast_Value) == 0x001670, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_Cast_Value' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_Multiply_Result) == 0x001690, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_Multiply_Result' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_Multiply_A) == 0x001698, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_Multiply_A' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_Cast_1_Value__IO) == 0x0016A0, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_Cast_1_Value__IO' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_RotateBone_0_Multiply_A) == 0x0016B8, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_RotateBone_0_Multiply_A' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_RotateBone_0_Cast_1_Value__IO) == 0x0016C0, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_RotateBone_0_Cast_1_Value__IO' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_RotateBone_0_Set_Transform_CachedIndex) == 0x0016D8, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_RotateBone_0_Set_Transform_CachedIndex' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_RotateBone_0_1_Cast_1_Result) == 0x0016F0, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_RotateBone_0_1_Cast_1_Result' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_RotateBone_0_1_Cast_Result) == 0x001710, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_RotateBone_0_1_Cast_Result' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_RotateBone_0_1_GetTransform_Transform) == 0x001730, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_RotateBone_0_1_GetTransform_Transform' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_RotateBone_0_1_GetTransform_CachedIndex) == 0x001790, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_RotateBone_0_1_GetTransform_CachedIndex' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_RotateBone_0_1_Cast_Value) == 0x0017A0, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_RotateBone_0_1_Cast_Value' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_RotateBone_0_1_Add_Result) == 0x0017C0, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_RotateBone_0_1_Add_Result' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_RotateBone_0_1_Add_A) == 0x0017C8, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_RotateBone_0_1_Add_A' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_RotateBone_0_1_Multiply_Result) == 0x0017D0, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_RotateBone_0_1_Multiply_Result' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_RotateBone_0_1_Cast_1_Value__IO) == 0x0017D8, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_RotateBone_0_1_Cast_1_Value__IO' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_RotateBone_0_1_Set_Transform_CachedIndex) == 0x0017F0, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_RotateBone_0_1_Set_Transform_CachedIndex' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_RotateBone_0_1_1_Cast_1_Result) == 0x001800, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_RotateBone_0_1_1_Cast_1_Result' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_RotateBone_0_1_1_Cast_Result) == 0x001820, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_RotateBone_0_1_1_Cast_Result' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_RotateBone_0_1_1_GetTransform_Transform) == 0x001840, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_RotateBone_0_1_1_GetTransform_Transform' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_RotateBone_0_1_1_GetTransform_CachedIndex) == 0x0018A0, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_RotateBone_0_1_1_GetTransform_CachedIndex' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_RotateBone_0_1_1_Cast_Value) == 0x0018B0, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_RotateBone_0_1_1_Cast_Value' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_RotateBone_0_1_1_Add_Result) == 0x0018D0, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_RotateBone_0_1_1_Add_Result' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_RotateBone_0_1_1_Add_A) == 0x0018D8, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_RotateBone_0_1_1_Add_A' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_RotateBone_0_1_1_Multiply_Result) == 0x0018E0, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_RotateBone_0_1_1_Multiply_Result' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_RotateBone_0_1_1_Cast_1_Value__IO) == 0x0018E8, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_RotateBone_0_1_1_Cast_1_Value__IO' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_RotateBone_0_1_1_Set_Transform_CachedIndex) == 0x001900, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_RotateBone_0_1_1_Set_Transform_CachedIndex' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_RotateBone_0_1_1_1_Cast_1_Result) == 0x001910, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_RotateBone_0_1_1_1_Cast_1_Result' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_RotateBone_0_1_1_1_Cast_Result) == 0x001930, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_RotateBone_0_1_1_1_Cast_Result' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_RotateBone_0_1_1_1_GetTransform_Transform) == 0x001950, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_RotateBone_0_1_1_1_GetTransform_Transform' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_RotateBone_0_1_1_1_GetTransform_CachedIndex) == 0x0019B0, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_RotateBone_0_1_1_1_GetTransform_CachedIndex' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_RotateBone_0_1_1_1_Cast_Value) == 0x0019C0, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_RotateBone_0_1_1_1_Cast_Value' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_RotateBone_0_1_1_1_Add_Result) == 0x0019E0, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_RotateBone_0_1_1_1_Add_Result' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_RotateBone_0_1_1_1_Add_A) == 0x0019E8, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_RotateBone_0_1_1_1_Add_A' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_RotateBone_0_1_1_1_Multiply_Result) == 0x0019F0, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_RotateBone_0_1_1_1_Multiply_Result' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_RotateBone_0_1_1_1_Cast_1_Value__IO) == 0x0019F8, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_RotateBone_0_1_1_1_Cast_1_Value__IO' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_RotateBone_0_1_1_1_Set_Transform_CachedIndex) == 0x001A10, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_RotateBone_0_1_1_1_Set_Transform_CachedIndex' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_RotateBone_0_2_Cast_1_Result) == 0x001A20, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_RotateBone_0_2_Cast_1_Result' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_RotateBone_0_2_Cast_Result) == 0x001A40, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_RotateBone_0_2_Cast_Result' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_RotateBone_0_2_GetTransform_Transform) == 0x001A60, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_RotateBone_0_2_GetTransform_Transform' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_RotateBone_0_2_GetTransform_CachedIndex) == 0x001AC0, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_RotateBone_0_2_GetTransform_CachedIndex' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_RotateBone_0_2_Cast_Value) == 0x001AD0, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_RotateBone_0_2_Cast_Value' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_RotateBone_0_2_Add_Result) == 0x001AF0, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_RotateBone_0_2_Add_Result' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_RotateBone_0_2_Add_A) == 0x001AF8, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_RotateBone_0_2_Add_A' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_RotateBone_0_2_Multiply_Result) == 0x001B00, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_RotateBone_0_2_Multiply_Result' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_RotateBone_0_2_Cast_1_Value__IO) == 0x001B08, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_RotateBone_0_2_Cast_1_Value__IO' has a wrong offset!");
static_assert(offsetof(ControlRig_Panther::URigVMMemory_Work, RigVMModel___RotateHead_RotateBone_0_2_Set_Transform_CachedIndex) == 0x001B20, "Member 'ControlRig_Panther::URigVMMemory_Work::RigVMModel___RotateHead_RotateBone_0_2_Set_Transform_CachedIndex' has a wrong offset!");

}

