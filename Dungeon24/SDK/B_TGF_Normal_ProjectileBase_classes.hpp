#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_TGF_Normal_ProjectileBase

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "AkAudio_structs.hpp"
#include "LyraGame_classes.hpp"
#include "PhysicsCore_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass B_TGF_Normal_ProjectileBase.B_TGF_Normal_ProjectileBase_C
// 0x0178 (0x0820 - 0x06A8)
class AB_TGF_Normal_ProjectileBase_C final : public ATgfProjectileBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x06A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAkComponent*                           Ak;                                                // 0x06B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 SkeletalMesh;                                      // 0x06B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          BoxCollision;                                      // 0x06C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UProjectileMovementComponent*           ProjectileMovement;                                // 0x06C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        MaxExistTime;                                      // 0x06D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SavedGravity;                                      // 0x06D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6DC[0x4];                                      // 0x06DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                SavedVelocity;                                     // 0x06E0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Explosive;                                         // 0x06F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6F9[0x7];                                      // 0x06F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkAudioEvent*                          FlybySound;                                        // 0x0700(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldAcc;                                         // 0x0708(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_709[0x7];                                      // 0x0709(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        AccMag;                                            // 0x0710(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NewVelocity;                                       // 0x0718(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Ignore_Self;                                       // 0x0730(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bRemovedProtection;                                // 0x0731(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bNeedHitProtection;                                // 0x0732(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_733[0x5];                                      // 0x0733(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UAkAudioEvent*>                  WooshSounds;                                       // 0x0738(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	double                                        DelayLaunchTime;                                   // 0x0748(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsInDelayLaunching;                               // 0x0750(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_751[0x7];                                      // 0x0751(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkAudioEvent*                          LaunchSound;                                       // 0x0758(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           ExceedHandler;                                     // 0x0760(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          IsPreload;                                         // 0x0768(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AudioPlayed;                                       // 0x0769(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_76A[0x6];                                      // 0x076A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        DelayExplodeTime;                                  // 0x0770(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                StaticCollisionRecoverStartPos;                    // 0x0778(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        StaticCollisionRecoverDistance;                    // 0x0790(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          EnableIgnoreStaticCollision;                       // 0x0798(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_799[0x7];                                      // 0x0799(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        BaseIgnoreStaticCollisionDistance;                 // 0x07A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        NonLyraCharacterMinDistance;                       // 0x07A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bHasResetState;                                    // 0x07B0(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_7B1[0xF];                                      // 0x07B1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             NewTransform;                                      // 0x07C0(0x0060)(Edit, BlueprintVisible, Net, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BeginFlyby();
	void ChangeMesh(class USkeletalMesh* Mesh);
	bool CheckHitInteractEnvironment(const struct FHitResult& Result);
	void CheckIgnoreStaticCollision();
	void DealResetState();
	void Detonate(class AActor* ExcludedActor, const struct FVector& ExplodeCenter);
	void DoChangeMesh(class USkeletalMesh* Mesh);
	void DoDelayLaunch();
	void EndFlyby();
	void ExecuteUbergraph_B_TGF_Normal_ProjectileBase(int32 EntryPoint);
	void IgnoreStaticCollision(const struct FVector& Param_StartPos, class AActor* TraceActor, double DistanceFromCameraToTarget);
	void InitDelayLaunch();
	void OnExceedMaxExistTime();
	void OnRep_bHasResetState();
	void PlayLaunchSound();
	void ReceiveBeginPlay();
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void ReceiveHit(class UPrimitiveComponent* MyComp, class AActor* Other, class UPrimitiveComponent* OtherComp, bool bSelfMoved, const struct FVector& HitLocation, const struct FVector& HitNormal, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void ReceiveTick(float DeltaSeconds);
	void ResetMovementState(const struct FTransform& Param_NewTransform);
	void SetMovementEnable(bool NewEnable);
	void SetVelocity(const struct FVector& Velocity);
	void SetVelocityMag(double VelocityMag);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_TGF_Normal_ProjectileBase_C">();
	}
	static class AB_TGF_Normal_ProjectileBase_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AB_TGF_Normal_ProjectileBase_C>();
	}
};
static_assert(alignof(AB_TGF_Normal_ProjectileBase_C) == 0x000010, "Wrong alignment on AB_TGF_Normal_ProjectileBase_C");
static_assert(sizeof(AB_TGF_Normal_ProjectileBase_C) == 0x000820, "Wrong size on AB_TGF_Normal_ProjectileBase_C");
static_assert(offsetof(AB_TGF_Normal_ProjectileBase_C, UberGraphFrame) == 0x0006A8, "Member 'AB_TGF_Normal_ProjectileBase_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AB_TGF_Normal_ProjectileBase_C, Ak) == 0x0006B0, "Member 'AB_TGF_Normal_ProjectileBase_C::Ak' has a wrong offset!");
static_assert(offsetof(AB_TGF_Normal_ProjectileBase_C, SkeletalMesh) == 0x0006B8, "Member 'AB_TGF_Normal_ProjectileBase_C::SkeletalMesh' has a wrong offset!");
static_assert(offsetof(AB_TGF_Normal_ProjectileBase_C, BoxCollision) == 0x0006C0, "Member 'AB_TGF_Normal_ProjectileBase_C::BoxCollision' has a wrong offset!");
static_assert(offsetof(AB_TGF_Normal_ProjectileBase_C, ProjectileMovement) == 0x0006C8, "Member 'AB_TGF_Normal_ProjectileBase_C::ProjectileMovement' has a wrong offset!");
static_assert(offsetof(AB_TGF_Normal_ProjectileBase_C, MaxExistTime) == 0x0006D0, "Member 'AB_TGF_Normal_ProjectileBase_C::MaxExistTime' has a wrong offset!");
static_assert(offsetof(AB_TGF_Normal_ProjectileBase_C, SavedGravity) == 0x0006D8, "Member 'AB_TGF_Normal_ProjectileBase_C::SavedGravity' has a wrong offset!");
static_assert(offsetof(AB_TGF_Normal_ProjectileBase_C, SavedVelocity) == 0x0006E0, "Member 'AB_TGF_Normal_ProjectileBase_C::SavedVelocity' has a wrong offset!");
static_assert(offsetof(AB_TGF_Normal_ProjectileBase_C, Explosive) == 0x0006F8, "Member 'AB_TGF_Normal_ProjectileBase_C::Explosive' has a wrong offset!");
static_assert(offsetof(AB_TGF_Normal_ProjectileBase_C, FlybySound) == 0x000700, "Member 'AB_TGF_Normal_ProjectileBase_C::FlybySound' has a wrong offset!");
static_assert(offsetof(AB_TGF_Normal_ProjectileBase_C, ShouldAcc) == 0x000708, "Member 'AB_TGF_Normal_ProjectileBase_C::ShouldAcc' has a wrong offset!");
static_assert(offsetof(AB_TGF_Normal_ProjectileBase_C, AccMag) == 0x000710, "Member 'AB_TGF_Normal_ProjectileBase_C::AccMag' has a wrong offset!");
static_assert(offsetof(AB_TGF_Normal_ProjectileBase_C, NewVelocity) == 0x000718, "Member 'AB_TGF_Normal_ProjectileBase_C::NewVelocity' has a wrong offset!");
static_assert(offsetof(AB_TGF_Normal_ProjectileBase_C, Ignore_Self) == 0x000730, "Member 'AB_TGF_Normal_ProjectileBase_C::Ignore_Self' has a wrong offset!");
static_assert(offsetof(AB_TGF_Normal_ProjectileBase_C, bRemovedProtection) == 0x000731, "Member 'AB_TGF_Normal_ProjectileBase_C::bRemovedProtection' has a wrong offset!");
static_assert(offsetof(AB_TGF_Normal_ProjectileBase_C, bNeedHitProtection) == 0x000732, "Member 'AB_TGF_Normal_ProjectileBase_C::bNeedHitProtection' has a wrong offset!");
static_assert(offsetof(AB_TGF_Normal_ProjectileBase_C, WooshSounds) == 0x000738, "Member 'AB_TGF_Normal_ProjectileBase_C::WooshSounds' has a wrong offset!");
static_assert(offsetof(AB_TGF_Normal_ProjectileBase_C, DelayLaunchTime) == 0x000748, "Member 'AB_TGF_Normal_ProjectileBase_C::DelayLaunchTime' has a wrong offset!");
static_assert(offsetof(AB_TGF_Normal_ProjectileBase_C, bIsInDelayLaunching) == 0x000750, "Member 'AB_TGF_Normal_ProjectileBase_C::bIsInDelayLaunching' has a wrong offset!");
static_assert(offsetof(AB_TGF_Normal_ProjectileBase_C, LaunchSound) == 0x000758, "Member 'AB_TGF_Normal_ProjectileBase_C::LaunchSound' has a wrong offset!");
static_assert(offsetof(AB_TGF_Normal_ProjectileBase_C, ExceedHandler) == 0x000760, "Member 'AB_TGF_Normal_ProjectileBase_C::ExceedHandler' has a wrong offset!");
static_assert(offsetof(AB_TGF_Normal_ProjectileBase_C, IsPreload) == 0x000768, "Member 'AB_TGF_Normal_ProjectileBase_C::IsPreload' has a wrong offset!");
static_assert(offsetof(AB_TGF_Normal_ProjectileBase_C, AudioPlayed) == 0x000769, "Member 'AB_TGF_Normal_ProjectileBase_C::AudioPlayed' has a wrong offset!");
static_assert(offsetof(AB_TGF_Normal_ProjectileBase_C, DelayExplodeTime) == 0x000770, "Member 'AB_TGF_Normal_ProjectileBase_C::DelayExplodeTime' has a wrong offset!");
static_assert(offsetof(AB_TGF_Normal_ProjectileBase_C, StaticCollisionRecoverStartPos) == 0x000778, "Member 'AB_TGF_Normal_ProjectileBase_C::StaticCollisionRecoverStartPos' has a wrong offset!");
static_assert(offsetof(AB_TGF_Normal_ProjectileBase_C, StaticCollisionRecoverDistance) == 0x000790, "Member 'AB_TGF_Normal_ProjectileBase_C::StaticCollisionRecoverDistance' has a wrong offset!");
static_assert(offsetof(AB_TGF_Normal_ProjectileBase_C, EnableIgnoreStaticCollision) == 0x000798, "Member 'AB_TGF_Normal_ProjectileBase_C::EnableIgnoreStaticCollision' has a wrong offset!");
static_assert(offsetof(AB_TGF_Normal_ProjectileBase_C, BaseIgnoreStaticCollisionDistance) == 0x0007A0, "Member 'AB_TGF_Normal_ProjectileBase_C::BaseIgnoreStaticCollisionDistance' has a wrong offset!");
static_assert(offsetof(AB_TGF_Normal_ProjectileBase_C, NonLyraCharacterMinDistance) == 0x0007A8, "Member 'AB_TGF_Normal_ProjectileBase_C::NonLyraCharacterMinDistance' has a wrong offset!");
static_assert(offsetof(AB_TGF_Normal_ProjectileBase_C, bHasResetState) == 0x0007B0, "Member 'AB_TGF_Normal_ProjectileBase_C::bHasResetState' has a wrong offset!");
static_assert(offsetof(AB_TGF_Normal_ProjectileBase_C, NewTransform) == 0x0007C0, "Member 'AB_TGF_Normal_ProjectileBase_C::NewTransform' has a wrong offset!");

}

