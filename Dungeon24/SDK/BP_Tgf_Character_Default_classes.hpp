#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Tgf_Character_Default

#include "Basic.hpp"

#include "GasCache_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "AkAudio_structs.hpp"
#include "LyraGame_structs.hpp"
#include "LyraGame_classes.hpp"
#include "SpawnSoulData_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Tgf_Character_Default.BP_Tgf_Character_Default_C
// 0x0180 (0x09B0 - 0x0830)
#pragma pack(push, 0x1)
class alignas(0x10) ABP_Tgf_Character_Default_C : public ALyraCharacterWithAbilities
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0830(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UNiagaraComponent*                      Beam;                                              // 0x0838(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UTgfActorCustomDepthStencilManagerComponent* TgfActorCustomDepthStencilManager;                 // 0x0840(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UTgfCharacterMovementExtensionComponent* TgfCharacterMovementExtension;                     // 0x0848(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UTgfRagdollComponent*                   TgfRagdollComponent;                               // 0x0850(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UTgfCharacterSummonComponent*           TgfSummonComponent;                                // 0x0858(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWidgetComponent*                       SelectWidget;                                      // 0x0860(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAkComponent*                           Mesh_Audio_Component;                              // 0x0868(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class ULyraHeroComponent*                     LyraHero;                                          // 0x0870(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TMap<class UAkAudioEvent*, int32>             TimedAkEventMap;                                   // 0x0878(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          IsLootSet;                                         // 0x08C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C9[0x3];                                      // 0x08C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           LootTag;                                           // 0x08CC(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          bInteractionOutline;                               // 0x08D4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bCharacterSelectionOutline;                        // 0x08D5(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D6[0x2];                                      // 0x08D6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         SoulHarvestMaxCount;                               // 0x08D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SoulHarvestCurCount;                               // 0x08DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FSpawnSoulData>                 SoulSpawnList;                                     // 0x08E0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FPoseSnapshot                          AnimationSnapshot;                                 // 0x08F0(0x0038)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FVector                                LootBoxScale;                                      // 0x0928(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<ETgfItemType>                          ItemTypesToDiscardBeam;                            // 0x0940(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	ETgfEquipQuality                              MaxQuality;                                        // 0x0950(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_951[0x7];                                      // 0x0951(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_TGF_CharacterLoot_C*                CharacterLoot;                                     // 0x0958(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class FName                                   BeamAttachSocket;                                  // 0x0960(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                BeamAttachOffset;                                  // 0x0968(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LootServerCheckDistanceXY;                         // 0x0980(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LootServerCheckDistanceZ;                          // 0x0988(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGasCache                              GasCacheData;                                      // 0x0990(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Icon;                                              // 0x0998(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	ETgfEquipQuality                              TempMaxQuality;                                    // 0x09A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AddAkEventPlayingID(class UAkAudioEvent* AudioEvent, int32 PlayingID);
	void AddBeam(double Delay);
	void AttachCorpseToMechanism();
	void BndEvt__BP_Tgf_Character_Default_AttributeComponent_K2Node_ComponentBoundEvent_0_TgfAttribute_DeathEvent__DelegateSignature(class AActor* OwningActor);
	void BndEvt__BP_Tgf_Character_Default_AttributeComponent_K2Node_ComponentBoundEvent_1_TgfAttribute_DeathEvent__DelegateSignature(class AActor* OwningActor);
	void BndEvt__BP_Tgf_Character_Default_AttributeComponent_K2Node_ComponentBoundEvent_2_TgfAttribute_DeathEvent__DelegateSignature(class AActor* OwningActor);
	void BndEvt__BP_Tgf_Character_Default_AttributeComponent_K2Node_ComponentBoundEvent_3_TgfAttribute_DeathEvent__DelegateSignature(class AActor* OwningActor);
	void BndEvt__BP_Tgf_Character_Default_AttributeComponent_K2Node_ComponentBoundEvent_4_TgfAttribute_DeathEvent__DelegateSignature(class AActor* OwningActor);
	void BndEvt__BP_Tgf_Character_Default_AttributeComponent_K2Node_ComponentBoundEvent_5_TgfAttribute_ItemDropOnDeath__DelegateSignature(class UTgfAttributeComponent* Param_AttributeComponent, class ULyraInventoryItemInstance* ItemInstance);
	void BndEvt__BP_Tgf_Character_Default_TgfRagdollComponent_K2Node_ComponentBoundEvent_0_TgfRagdollEvent__DelegateSignature(class AActor* OwningActor);
	void BndEvt__BP_Tgf_Character_Default_TgfRagdollComponent_K2Node_ComponentBoundEvent_6_TgfRagdollEvent__DelegateSignature(class AActor* OwningActor, bool Forced);
	void BndEvt__BP_Tgf_Character_Default_TgfRagdollComponent_K2Node_ComponentBoundEvent_7_TgfRagdollEvent__DelegateSignature(class AActor* OwningActor, bool Forced);
	void BndEvt__BP_Tgf_Character_Default_TgfRagdollComponent_K2Node_ComponentBoundEvent_8_TgfRagdollEvent__DelegateSignature(class AActor* OwningActor);
	void BndEvt__BP_Tgf_Character_Default_TgfRagdollComponent_K2Node_ComponentBoundEvent_9_TgfRagdollEvent__DelegateSignature(class AActor* OwningActor);
	void CallFreezeAction(bool bIsFreeze);
	void CanSetLootable(bool* Result);
	void CheckSoulHarvest(bool* Result);
	void DetachFromMechanism();
	void DisableClientTickOnDeath();
	void ExecuteUbergraph_BP_Tgf_Character_Default(int32 EntryPoint);
	void OnRep_MaxQuality();
	void OnSetLootableEvent();
	void ReceiveBeginPlay();
	void RemoveAkEventPlayingID(class UAkAudioEvent* AudioEvent, int32* PlayingID);
	void ResetGASCacheData();
	void ResetSoulHarvest();
	void SetAttachNiagaraAlpha(double Alpha);
	void SetCharacterLootLocation();
	void SetComponentTick_BP(bool Enabled);
	void SetGASCacheData(const struct FGasCache& InputData);
	void SetLootable();
	void SetMeshCollisionLootOnly();
	void SetUnLootable();
	void SpawnKillingEffect(const struct FTgfItemEffectDefinition& KillingEffect);
	void SpawnSoul();
	void Switch_Actor_Outline(bool bShowOutline, class AActor* Actor);
	void Update_Outline();
	void UpdateMaxQuality();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Tgf_Character_Default_C">();
	}
	static class ABP_Tgf_Character_Default_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Tgf_Character_Default_C>();
	}
};
#pragma pack(pop)
static_assert(alignof(ABP_Tgf_Character_Default_C) == 0x000010, "Wrong alignment on ABP_Tgf_Character_Default_C");
static_assert(sizeof(ABP_Tgf_Character_Default_C) == 0x0009B0, "Wrong size on ABP_Tgf_Character_Default_C");
static_assert(offsetof(ABP_Tgf_Character_Default_C, UberGraphFrame) == 0x000830, "Member 'ABP_Tgf_Character_Default_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_Character_Default_C, Beam) == 0x000838, "Member 'ABP_Tgf_Character_Default_C::Beam' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_Character_Default_C, TgfActorCustomDepthStencilManager) == 0x000840, "Member 'ABP_Tgf_Character_Default_C::TgfActorCustomDepthStencilManager' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_Character_Default_C, TgfCharacterMovementExtension) == 0x000848, "Member 'ABP_Tgf_Character_Default_C::TgfCharacterMovementExtension' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_Character_Default_C, TgfRagdollComponent) == 0x000850, "Member 'ABP_Tgf_Character_Default_C::TgfRagdollComponent' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_Character_Default_C, TgfSummonComponent) == 0x000858, "Member 'ABP_Tgf_Character_Default_C::TgfSummonComponent' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_Character_Default_C, SelectWidget) == 0x000860, "Member 'ABP_Tgf_Character_Default_C::SelectWidget' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_Character_Default_C, Mesh_Audio_Component) == 0x000868, "Member 'ABP_Tgf_Character_Default_C::Mesh_Audio_Component' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_Character_Default_C, LyraHero) == 0x000870, "Member 'ABP_Tgf_Character_Default_C::LyraHero' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_Character_Default_C, TimedAkEventMap) == 0x000878, "Member 'ABP_Tgf_Character_Default_C::TimedAkEventMap' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_Character_Default_C, IsLootSet) == 0x0008C8, "Member 'ABP_Tgf_Character_Default_C::IsLootSet' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_Character_Default_C, LootTag) == 0x0008CC, "Member 'ABP_Tgf_Character_Default_C::LootTag' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_Character_Default_C, bInteractionOutline) == 0x0008D4, "Member 'ABP_Tgf_Character_Default_C::bInteractionOutline' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_Character_Default_C, bCharacterSelectionOutline) == 0x0008D5, "Member 'ABP_Tgf_Character_Default_C::bCharacterSelectionOutline' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_Character_Default_C, SoulHarvestMaxCount) == 0x0008D8, "Member 'ABP_Tgf_Character_Default_C::SoulHarvestMaxCount' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_Character_Default_C, SoulHarvestCurCount) == 0x0008DC, "Member 'ABP_Tgf_Character_Default_C::SoulHarvestCurCount' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_Character_Default_C, SoulSpawnList) == 0x0008E0, "Member 'ABP_Tgf_Character_Default_C::SoulSpawnList' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_Character_Default_C, AnimationSnapshot) == 0x0008F0, "Member 'ABP_Tgf_Character_Default_C::AnimationSnapshot' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_Character_Default_C, LootBoxScale) == 0x000928, "Member 'ABP_Tgf_Character_Default_C::LootBoxScale' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_Character_Default_C, ItemTypesToDiscardBeam) == 0x000940, "Member 'ABP_Tgf_Character_Default_C::ItemTypesToDiscardBeam' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_Character_Default_C, MaxQuality) == 0x000950, "Member 'ABP_Tgf_Character_Default_C::MaxQuality' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_Character_Default_C, CharacterLoot) == 0x000958, "Member 'ABP_Tgf_Character_Default_C::CharacterLoot' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_Character_Default_C, BeamAttachSocket) == 0x000960, "Member 'ABP_Tgf_Character_Default_C::BeamAttachSocket' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_Character_Default_C, BeamAttachOffset) == 0x000968, "Member 'ABP_Tgf_Character_Default_C::BeamAttachOffset' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_Character_Default_C, LootServerCheckDistanceXY) == 0x000980, "Member 'ABP_Tgf_Character_Default_C::LootServerCheckDistanceXY' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_Character_Default_C, LootServerCheckDistanceZ) == 0x000988, "Member 'ABP_Tgf_Character_Default_C::LootServerCheckDistanceZ' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_Character_Default_C, GasCacheData) == 0x000990, "Member 'ABP_Tgf_Character_Default_C::GasCacheData' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_Character_Default_C, Icon) == 0x000998, "Member 'ABP_Tgf_Character_Default_C::Icon' has a wrong offset!");
static_assert(offsetof(ABP_Tgf_Character_Default_C, TempMaxQuality) == 0x0009A0, "Member 'ABP_Tgf_Character_Default_C::TempMaxQuality' has a wrong offset!");

}

