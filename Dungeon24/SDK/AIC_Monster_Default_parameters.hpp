#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AIC_Monster_Default

#include "Basic.hpp"

#include "TGF_FAbilitySelectorAlternativeEntry_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "TGF_FAbilityTargetAlternateEntry_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"
#include "LyraGame_structs.hpp"
#include "TGF_FAbilitySelectorEntry_structs.hpp"
#include "AIModule_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function AIC_Monster_Default.AIC_Monster_Default_C.AbilityFilterBoss
// 0x0020 (0x0020 - 0x0000)
struct AIC_Monster_Default_C_AbilityFilterBoss final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_Tgf_Monster_C*                      K2Node_DynamicCast_AsBP_Tgf_Monster;               // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIC_Monster_Default_C_AbilityFilterBoss) == 0x000008, "Wrong alignment on AIC_Monster_Default_C_AbilityFilterBoss");
static_assert(sizeof(AIC_Monster_Default_C_AbilityFilterBoss) == 0x000020, "Wrong size on AIC_Monster_Default_C_AbilityFilterBoss");
static_assert(offsetof(AIC_Monster_Default_C_AbilityFilterBoss, Result) == 0x000000, "Member 'AIC_Monster_Default_C_AbilityFilterBoss::Result' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityFilterBoss, CallFunc_K2_GetPawn_ReturnValue) == 0x000008, "Member 'AIC_Monster_Default_C_AbilityFilterBoss::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityFilterBoss, K2Node_DynamicCast_AsBP_Tgf_Monster) == 0x000010, "Member 'AIC_Monster_Default_C_AbilityFilterBoss::K2Node_DynamicCast_AsBP_Tgf_Monster' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityFilterBoss, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'AIC_Monster_Default_C_AbilityFilterBoss::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityFilterBoss, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000019, "Member 'AIC_Monster_Default_C_AbilityFilterBoss::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function AIC_Monster_Default.AIC_Monster_Default_C.AbilityFilterEnemyBehind
// 0x00D8 (0x00D8 - 0x0000)
struct AIC_Monster_Default_C_AbilityFilterEnemyBehind final
{
public:
	TArray<int32>                                 Args;                                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          Result;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SafeGetArg_Arg;                           // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_RangeQueryActors_Actors;                  // 0x0020(0x0010)(ReferenceParm)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsHostile_Result;                         // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x00A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAngleBetweenTwoVectors_ReturnValue;    // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C5[0x3];                                       // 0x00C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_RangeQueryActors_Range_ImplicitCast;      // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIC_Monster_Default_C_AbilityFilterEnemyBehind) == 0x000008, "Wrong alignment on AIC_Monster_Default_C_AbilityFilterEnemyBehind");
static_assert(sizeof(AIC_Monster_Default_C_AbilityFilterEnemyBehind) == 0x0000D8, "Wrong size on AIC_Monster_Default_C_AbilityFilterEnemyBehind");
static_assert(offsetof(AIC_Monster_Default_C_AbilityFilterEnemyBehind, Args) == 0x000000, "Member 'AIC_Monster_Default_C_AbilityFilterEnemyBehind::Args' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityFilterEnemyBehind, Result) == 0x000010, "Member 'AIC_Monster_Default_C_AbilityFilterEnemyBehind::Result' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityFilterEnemyBehind, Temp_int_Array_Index_Variable) == 0x000014, "Member 'AIC_Monster_Default_C_AbilityFilterEnemyBehind::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityFilterEnemyBehind, CallFunc_SafeGetArg_Arg) == 0x000018, "Member 'AIC_Monster_Default_C_AbilityFilterEnemyBehind::CallFunc_SafeGetArg_Arg' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityFilterEnemyBehind, CallFunc_Conv_IntToFloat_ReturnValue) == 0x00001C, "Member 'AIC_Monster_Default_C_AbilityFilterEnemyBehind::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityFilterEnemyBehind, CallFunc_RangeQueryActors_Actors) == 0x000020, "Member 'AIC_Monster_Default_C_AbilityFilterEnemyBehind::CallFunc_RangeQueryActors_Actors' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityFilterEnemyBehind, CallFunc_Array_Get_Item) == 0x000030, "Member 'AIC_Monster_Default_C_AbilityFilterEnemyBehind::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityFilterEnemyBehind, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'AIC_Monster_Default_C_AbilityFilterEnemyBehind::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityFilterEnemyBehind, CallFunc_IsHostile_Result) == 0x00003C, "Member 'AIC_Monster_Default_C_AbilityFilterEnemyBehind::CallFunc_IsHostile_Result' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityFilterEnemyBehind, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000040, "Member 'AIC_Monster_Default_C_AbilityFilterEnemyBehind::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityFilterEnemyBehind, Temp_int_Loop_Counter_Variable) == 0x000058, "Member 'AIC_Monster_Default_C_AbilityFilterEnemyBehind::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityFilterEnemyBehind, CallFunc_Less_IntInt_ReturnValue) == 0x00005C, "Member 'AIC_Monster_Default_C_AbilityFilterEnemyBehind::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityFilterEnemyBehind, CallFunc_Add_IntInt_ReturnValue) == 0x000060, "Member 'AIC_Monster_Default_C_AbilityFilterEnemyBehind::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityFilterEnemyBehind, CallFunc_K2_GetPawn_ReturnValue) == 0x000068, "Member 'AIC_Monster_Default_C_AbilityFilterEnemyBehind::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityFilterEnemyBehind, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000070, "Member 'AIC_Monster_Default_C_AbilityFilterEnemyBehind::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityFilterEnemyBehind, CallFunc_IsValid_ReturnValue) == 0x000088, "Member 'AIC_Monster_Default_C_AbilityFilterEnemyBehind::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityFilterEnemyBehind, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000090, "Member 'AIC_Monster_Default_C_AbilityFilterEnemyBehind::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityFilterEnemyBehind, CallFunc_GetActorForwardVector_ReturnValue) == 0x0000A8, "Member 'AIC_Monster_Default_C_AbilityFilterEnemyBehind::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityFilterEnemyBehind, CallFunc_GetAngleBetweenTwoVectors_ReturnValue) == 0x0000C0, "Member 'AIC_Monster_Default_C_AbilityFilterEnemyBehind::CallFunc_GetAngleBetweenTwoVectors_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityFilterEnemyBehind, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0000C4, "Member 'AIC_Monster_Default_C_AbilityFilterEnemyBehind::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityFilterEnemyBehind, CallFunc_RangeQueryActors_Range_ImplicitCast) == 0x0000C8, "Member 'AIC_Monster_Default_C_AbilityFilterEnemyBehind::CallFunc_RangeQueryActors_Range_ImplicitCast' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityFilterEnemyBehind, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x0000D0, "Member 'AIC_Monster_Default_C_AbilityFilterEnemyBehind::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function AIC_Monster_Default.AIC_Monster_Default_C.AbilityFilterFriendlyCount
// 0x0078 (0x0078 - 0x0000)
struct AIC_Monster_Default_C_AbilityFilterFriendlyCount final
{
public:
	TArray<int32>                                 Args;                                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          Result;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Count;                                             // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SafeGetArg_Arg;                           // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_RangeQueryActors_Actors;                  // 0x0028(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsHostile_Result;                         // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SafeGetArg_Arg_1;                         // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SafeGetArg_Arg_2;                         // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A[0x6];                                       // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_RangeQueryActors_Range_ImplicitCast;      // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIC_Monster_Default_C_AbilityFilterFriendlyCount) == 0x000008, "Wrong alignment on AIC_Monster_Default_C_AbilityFilterFriendlyCount");
static_assert(sizeof(AIC_Monster_Default_C_AbilityFilterFriendlyCount) == 0x000078, "Wrong size on AIC_Monster_Default_C_AbilityFilterFriendlyCount");
static_assert(offsetof(AIC_Monster_Default_C_AbilityFilterFriendlyCount, Args) == 0x000000, "Member 'AIC_Monster_Default_C_AbilityFilterFriendlyCount::Args' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityFilterFriendlyCount, Result) == 0x000010, "Member 'AIC_Monster_Default_C_AbilityFilterFriendlyCount::Result' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityFilterFriendlyCount, Count) == 0x000014, "Member 'AIC_Monster_Default_C_AbilityFilterFriendlyCount::Count' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityFilterFriendlyCount, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'AIC_Monster_Default_C_AbilityFilterFriendlyCount::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityFilterFriendlyCount, CallFunc_SafeGetArg_Arg) == 0x00001C, "Member 'AIC_Monster_Default_C_AbilityFilterFriendlyCount::CallFunc_SafeGetArg_Arg' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityFilterFriendlyCount, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'AIC_Monster_Default_C_AbilityFilterFriendlyCount::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityFilterFriendlyCount, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000024, "Member 'AIC_Monster_Default_C_AbilityFilterFriendlyCount::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityFilterFriendlyCount, CallFunc_RangeQueryActors_Actors) == 0x000028, "Member 'AIC_Monster_Default_C_AbilityFilterFriendlyCount::CallFunc_RangeQueryActors_Actors' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityFilterFriendlyCount, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'AIC_Monster_Default_C_AbilityFilterFriendlyCount::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityFilterFriendlyCount, CallFunc_Less_IntInt_ReturnValue) == 0x00003C, "Member 'AIC_Monster_Default_C_AbilityFilterFriendlyCount::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityFilterFriendlyCount, Temp_int_Array_Index_Variable) == 0x000040, "Member 'AIC_Monster_Default_C_AbilityFilterFriendlyCount::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityFilterFriendlyCount, CallFunc_Array_Get_Item) == 0x000048, "Member 'AIC_Monster_Default_C_AbilityFilterFriendlyCount::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityFilterFriendlyCount, CallFunc_IsHostile_Result) == 0x000050, "Member 'AIC_Monster_Default_C_AbilityFilterFriendlyCount::CallFunc_IsHostile_Result' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityFilterFriendlyCount, CallFunc_SafeGetArg_Arg_1) == 0x000054, "Member 'AIC_Monster_Default_C_AbilityFilterFriendlyCount::CallFunc_SafeGetArg_Arg_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityFilterFriendlyCount, CallFunc_SafeGetArg_Arg_2) == 0x000058, "Member 'AIC_Monster_Default_C_AbilityFilterFriendlyCount::CallFunc_SafeGetArg_Arg_2' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityFilterFriendlyCount, Temp_int_Variable) == 0x00005C, "Member 'AIC_Monster_Default_C_AbilityFilterFriendlyCount::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityFilterFriendlyCount, CallFunc_Greater_IntInt_ReturnValue) == 0x000060, "Member 'AIC_Monster_Default_C_AbilityFilterFriendlyCount::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityFilterFriendlyCount, CallFunc_Add_IntInt_ReturnValue_1) == 0x000064, "Member 'AIC_Monster_Default_C_AbilityFilterFriendlyCount::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityFilterFriendlyCount, CallFunc_Less_IntInt_ReturnValue_1) == 0x000068, "Member 'AIC_Monster_Default_C_AbilityFilterFriendlyCount::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityFilterFriendlyCount, CallFunc_BooleanAND_ReturnValue) == 0x000069, "Member 'AIC_Monster_Default_C_AbilityFilterFriendlyCount::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityFilterFriendlyCount, CallFunc_RangeQueryActors_Range_ImplicitCast) == 0x000070, "Member 'AIC_Monster_Default_C_AbilityFilterFriendlyCount::CallFunc_RangeQueryActors_Range_ImplicitCast' has a wrong offset!");

// Function AIC_Monster_Default.AIC_Monster_Default_C.AbilityFilterHealthHigh
// 0x0050 (0x0050 - 0x0000)
struct AIC_Monster_Default_C_AbilityFilterHealthHigh final
{
public:
	TArray<int32>                                 Args;                                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          Result;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SafeGetArg_Arg;                           // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetHealthPercent_Result;                  // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_A_ImplicitCast;       // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIC_Monster_Default_C_AbilityFilterHealthHigh) == 0x000008, "Wrong alignment on AIC_Monster_Default_C_AbilityFilterHealthHigh");
static_assert(sizeof(AIC_Monster_Default_C_AbilityFilterHealthHigh) == 0x000050, "Wrong size on AIC_Monster_Default_C_AbilityFilterHealthHigh");
static_assert(offsetof(AIC_Monster_Default_C_AbilityFilterHealthHigh, Args) == 0x000000, "Member 'AIC_Monster_Default_C_AbilityFilterHealthHigh::Args' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityFilterHealthHigh, Result) == 0x000010, "Member 'AIC_Monster_Default_C_AbilityFilterHealthHigh::Result' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityFilterHealthHigh, CallFunc_K2_GetPawn_ReturnValue) == 0x000018, "Member 'AIC_Monster_Default_C_AbilityFilterHealthHigh::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityFilterHealthHigh, CallFunc_SafeGetArg_Arg) == 0x000020, "Member 'AIC_Monster_Default_C_AbilityFilterHealthHigh::CallFunc_SafeGetArg_Arg' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityFilterHealthHigh, CallFunc_GetHealthPercent_Result) == 0x000028, "Member 'AIC_Monster_Default_C_AbilityFilterHealthHigh::CallFunc_GetHealthPercent_Result' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityFilterHealthHigh, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000030, "Member 'AIC_Monster_Default_C_AbilityFilterHealthHigh::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityFilterHealthHigh, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000038, "Member 'AIC_Monster_Default_C_AbilityFilterHealthHigh::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityFilterHealthHigh, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000040, "Member 'AIC_Monster_Default_C_AbilityFilterHealthHigh::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityFilterHealthHigh, CallFunc_Divide_DoubleDouble_A_ImplicitCast) == 0x000048, "Member 'AIC_Monster_Default_C_AbilityFilterHealthHigh::CallFunc_Divide_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function AIC_Monster_Default.AIC_Monster_Default_C.AbilityFilterHealthLow
// 0x0050 (0x0050 - 0x0000)
struct AIC_Monster_Default_C_AbilityFilterHealthLow final
{
public:
	TArray<int32>                                 Args;                                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          Result;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SafeGetArg_Arg;                           // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetHealthPercent_Result;                  // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_A_ImplicitCast;       // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIC_Monster_Default_C_AbilityFilterHealthLow) == 0x000008, "Wrong alignment on AIC_Monster_Default_C_AbilityFilterHealthLow");
static_assert(sizeof(AIC_Monster_Default_C_AbilityFilterHealthLow) == 0x000050, "Wrong size on AIC_Monster_Default_C_AbilityFilterHealthLow");
static_assert(offsetof(AIC_Monster_Default_C_AbilityFilterHealthLow, Args) == 0x000000, "Member 'AIC_Monster_Default_C_AbilityFilterHealthLow::Args' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityFilterHealthLow, Result) == 0x000010, "Member 'AIC_Monster_Default_C_AbilityFilterHealthLow::Result' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityFilterHealthLow, CallFunc_K2_GetPawn_ReturnValue) == 0x000018, "Member 'AIC_Monster_Default_C_AbilityFilterHealthLow::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityFilterHealthLow, CallFunc_SafeGetArg_Arg) == 0x000020, "Member 'AIC_Monster_Default_C_AbilityFilterHealthLow::CallFunc_SafeGetArg_Arg' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityFilterHealthLow, CallFunc_GetHealthPercent_Result) == 0x000028, "Member 'AIC_Monster_Default_C_AbilityFilterHealthLow::CallFunc_GetHealthPercent_Result' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityFilterHealthLow, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000030, "Member 'AIC_Monster_Default_C_AbilityFilterHealthLow::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityFilterHealthLow, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000038, "Member 'AIC_Monster_Default_C_AbilityFilterHealthLow::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityFilterHealthLow, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000040, "Member 'AIC_Monster_Default_C_AbilityFilterHealthLow::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityFilterHealthLow, CallFunc_Divide_DoubleDouble_A_ImplicitCast) == 0x000048, "Member 'AIC_Monster_Default_C_AbilityFilterHealthLow::CallFunc_Divide_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function AIC_Monster_Default.AIC_Monster_Default_C.AbilityFilterHostileCount
// 0x0078 (0x0078 - 0x0000)
struct AIC_Monster_Default_C_AbilityFilterHostileCount final
{
public:
	TArray<int32>                                 Args;                                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          Result;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Count;                                             // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SafeGetArg_Arg;                           // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_RangeQueryActors_Actors;                  // 0x0028(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsHostile_Result;                         // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SafeGetArg_Arg_1;                         // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SafeGetArg_Arg_2;                         // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A[0x6];                                       // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_RangeQueryActors_Range_ImplicitCast;      // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIC_Monster_Default_C_AbilityFilterHostileCount) == 0x000008, "Wrong alignment on AIC_Monster_Default_C_AbilityFilterHostileCount");
static_assert(sizeof(AIC_Monster_Default_C_AbilityFilterHostileCount) == 0x000078, "Wrong size on AIC_Monster_Default_C_AbilityFilterHostileCount");
static_assert(offsetof(AIC_Monster_Default_C_AbilityFilterHostileCount, Args) == 0x000000, "Member 'AIC_Monster_Default_C_AbilityFilterHostileCount::Args' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityFilterHostileCount, Result) == 0x000010, "Member 'AIC_Monster_Default_C_AbilityFilterHostileCount::Result' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityFilterHostileCount, Count) == 0x000014, "Member 'AIC_Monster_Default_C_AbilityFilterHostileCount::Count' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityFilterHostileCount, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'AIC_Monster_Default_C_AbilityFilterHostileCount::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityFilterHostileCount, CallFunc_SafeGetArg_Arg) == 0x00001C, "Member 'AIC_Monster_Default_C_AbilityFilterHostileCount::CallFunc_SafeGetArg_Arg' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityFilterHostileCount, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'AIC_Monster_Default_C_AbilityFilterHostileCount::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityFilterHostileCount, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000024, "Member 'AIC_Monster_Default_C_AbilityFilterHostileCount::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityFilterHostileCount, CallFunc_RangeQueryActors_Actors) == 0x000028, "Member 'AIC_Monster_Default_C_AbilityFilterHostileCount::CallFunc_RangeQueryActors_Actors' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityFilterHostileCount, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'AIC_Monster_Default_C_AbilityFilterHostileCount::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityFilterHostileCount, CallFunc_Less_IntInt_ReturnValue) == 0x00003C, "Member 'AIC_Monster_Default_C_AbilityFilterHostileCount::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityFilterHostileCount, Temp_int_Array_Index_Variable) == 0x000040, "Member 'AIC_Monster_Default_C_AbilityFilterHostileCount::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityFilterHostileCount, CallFunc_Array_Get_Item) == 0x000048, "Member 'AIC_Monster_Default_C_AbilityFilterHostileCount::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityFilterHostileCount, CallFunc_IsHostile_Result) == 0x000050, "Member 'AIC_Monster_Default_C_AbilityFilterHostileCount::CallFunc_IsHostile_Result' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityFilterHostileCount, CallFunc_SafeGetArg_Arg_1) == 0x000054, "Member 'AIC_Monster_Default_C_AbilityFilterHostileCount::CallFunc_SafeGetArg_Arg_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityFilterHostileCount, CallFunc_SafeGetArg_Arg_2) == 0x000058, "Member 'AIC_Monster_Default_C_AbilityFilterHostileCount::CallFunc_SafeGetArg_Arg_2' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityFilterHostileCount, Temp_int_Variable) == 0x00005C, "Member 'AIC_Monster_Default_C_AbilityFilterHostileCount::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityFilterHostileCount, CallFunc_Greater_IntInt_ReturnValue) == 0x000060, "Member 'AIC_Monster_Default_C_AbilityFilterHostileCount::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityFilterHostileCount, CallFunc_Add_IntInt_ReturnValue_1) == 0x000064, "Member 'AIC_Monster_Default_C_AbilityFilterHostileCount::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityFilterHostileCount, CallFunc_Less_IntInt_ReturnValue_1) == 0x000068, "Member 'AIC_Monster_Default_C_AbilityFilterHostileCount::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityFilterHostileCount, CallFunc_BooleanAND_ReturnValue) == 0x000069, "Member 'AIC_Monster_Default_C_AbilityFilterHostileCount::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityFilterHostileCount, CallFunc_RangeQueryActors_Range_ImplicitCast) == 0x000070, "Member 'AIC_Monster_Default_C_AbilityFilterHostileCount::CallFunc_RangeQueryActors_Range_ImplicitCast' has a wrong offset!");

// Function AIC_Monster_Default.AIC_Monster_Default_C.AbilityFilterNone
// 0x0001 (0x0001 - 0x0000)
struct AIC_Monster_Default_C_AbilityFilterNone final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIC_Monster_Default_C_AbilityFilterNone) == 0x000001, "Wrong alignment on AIC_Monster_Default_C_AbilityFilterNone");
static_assert(sizeof(AIC_Monster_Default_C_AbilityFilterNone) == 0x000001, "Wrong size on AIC_Monster_Default_C_AbilityFilterNone");
static_assert(offsetof(AIC_Monster_Default_C_AbilityFilterNone, Result) == 0x000000, "Member 'AIC_Monster_Default_C_AbilityFilterNone::Result' has a wrong offset!");

// Function AIC_Monster_Default.AIC_Monster_Default_C.AbilityFilterSummonsCount
// 0x0048 (0x0048 - 0x0000)
struct AIC_Monster_Default_C_AbilityFilterSummonsCount final
{
public:
	TArray<int32>                                 Args;                                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          Result;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SafeGetArg_Arg;                           // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SafeGetArg_Arg_1;                         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ALyraCharacter*                         K2Node_DynamicCast_AsLyra_Character;               // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTgfCharacterSummonComponent*           CallFunc_GetComponentByClass_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSummonActorsCount_ReturnValue;         // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0046(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0047(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIC_Monster_Default_C_AbilityFilterSummonsCount) == 0x000008, "Wrong alignment on AIC_Monster_Default_C_AbilityFilterSummonsCount");
static_assert(sizeof(AIC_Monster_Default_C_AbilityFilterSummonsCount) == 0x000048, "Wrong size on AIC_Monster_Default_C_AbilityFilterSummonsCount");
static_assert(offsetof(AIC_Monster_Default_C_AbilityFilterSummonsCount, Args) == 0x000000, "Member 'AIC_Monster_Default_C_AbilityFilterSummonsCount::Args' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityFilterSummonsCount, Result) == 0x000010, "Member 'AIC_Monster_Default_C_AbilityFilterSummonsCount::Result' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityFilterSummonsCount, CallFunc_SafeGetArg_Arg) == 0x000014, "Member 'AIC_Monster_Default_C_AbilityFilterSummonsCount::CallFunc_SafeGetArg_Arg' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityFilterSummonsCount, CallFunc_SafeGetArg_Arg_1) == 0x000018, "Member 'AIC_Monster_Default_C_AbilityFilterSummonsCount::CallFunc_SafeGetArg_Arg_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityFilterSummonsCount, CallFunc_K2_GetPawn_ReturnValue) == 0x000020, "Member 'AIC_Monster_Default_C_AbilityFilterSummonsCount::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityFilterSummonsCount, K2Node_DynamicCast_AsLyra_Character) == 0x000028, "Member 'AIC_Monster_Default_C_AbilityFilterSummonsCount::K2Node_DynamicCast_AsLyra_Character' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityFilterSummonsCount, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'AIC_Monster_Default_C_AbilityFilterSummonsCount::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityFilterSummonsCount, CallFunc_GetComponentByClass_ReturnValue) == 0x000038, "Member 'AIC_Monster_Default_C_AbilityFilterSummonsCount::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityFilterSummonsCount, CallFunc_GetSummonActorsCount_ReturnValue) == 0x000040, "Member 'AIC_Monster_Default_C_AbilityFilterSummonsCount::CallFunc_GetSummonActorsCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityFilterSummonsCount, CallFunc_IsValid_ReturnValue) == 0x000044, "Member 'AIC_Monster_Default_C_AbilityFilterSummonsCount::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityFilterSummonsCount, CallFunc_Greater_IntInt_ReturnValue) == 0x000045, "Member 'AIC_Monster_Default_C_AbilityFilterSummonsCount::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityFilterSummonsCount, CallFunc_Less_IntInt_ReturnValue) == 0x000046, "Member 'AIC_Monster_Default_C_AbilityFilterSummonsCount::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityFilterSummonsCount, CallFunc_BooleanAND_ReturnValue) == 0x000047, "Member 'AIC_Monster_Default_C_AbilityFilterSummonsCount::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function AIC_Monster_Default.AIC_Monster_Default_C.AbilityFilterTags
// 0x0048 (0x0048 - 0x0000)
struct AIC_Monster_Default_C_AbilityFilterTags final
{
public:
	TArray<int32>                                 Args;                                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FGameplayTagContainer                  Param_Tags;                                        // 0x0010(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          Result;                                            // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SafeGetArg_Arg;                           // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue;   // 0x0046(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_BoolBool_ReturnValue;          // 0x0047(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIC_Monster_Default_C_AbilityFilterTags) == 0x000008, "Wrong alignment on AIC_Monster_Default_C_AbilityFilterTags");
static_assert(sizeof(AIC_Monster_Default_C_AbilityFilterTags) == 0x000048, "Wrong size on AIC_Monster_Default_C_AbilityFilterTags");
static_assert(offsetof(AIC_Monster_Default_C_AbilityFilterTags, Args) == 0x000000, "Member 'AIC_Monster_Default_C_AbilityFilterTags::Args' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityFilterTags, Param_Tags) == 0x000010, "Member 'AIC_Monster_Default_C_AbilityFilterTags::Param_Tags' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityFilterTags, Result) == 0x000030, "Member 'AIC_Monster_Default_C_AbilityFilterTags::Result' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityFilterTags, CallFunc_K2_GetPawn_ReturnValue) == 0x000038, "Member 'AIC_Monster_Default_C_AbilityFilterTags::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityFilterTags, CallFunc_SafeGetArg_Arg) == 0x000040, "Member 'AIC_Monster_Default_C_AbilityFilterTags::CallFunc_SafeGetArg_Arg' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityFilterTags, CallFunc_IsValid_ReturnValue) == 0x000044, "Member 'AIC_Monster_Default_C_AbilityFilterTags::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityFilterTags, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000045, "Member 'AIC_Monster_Default_C_AbilityFilterTags::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityFilterTags, CallFunc_HasAnyMatchingGameplayTags_ReturnValue) == 0x000046, "Member 'AIC_Monster_Default_C_AbilityFilterTags::CallFunc_HasAnyMatchingGameplayTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityFilterTags, CallFunc_EqualEqual_BoolBool_ReturnValue) == 0x000047, "Member 'AIC_Monster_Default_C_AbilityFilterTags::CallFunc_EqualEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function AIC_Monster_Default.AIC_Monster_Default_C.AbilityTargetFilterAlternately
// 0x0170 (0x0170 - 0x0000)
struct AIC_Monster_Default_C_AbilityTargetFilterAlternately final
{
public:
	class UClass*                                 Param_Ability;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Targets;                                           // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class AActor*                                 LastCandidate;                                     // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Candidate;                                         // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Candidates;                                        // 0x0028(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	TArray<class AActor*>                         ActorsUnavailable;                                 // 0x0038(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	TArray<class AActor*>                         ActorsBackup;                                      // 0x0048(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	TArray<class AActor*>                         Actors;                                            // 0x0058(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x009D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9E[0x2];                                       // 0x009E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A5[0x3];                                       // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item_1;                         // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BD[0x3];                                       // 0x00BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item_2;                         // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DD[0x3];                                       // 0x00DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item_3;                         // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue_1;             // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EA[0x2];                                       // 0x00EA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F2[0x2];                                       // 0x00F2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_6;               // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue_2;             // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FA[0x6];                                       // 0x00FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTGF_FAbilityTargetAlternateEntry      K2Node_MakeStruct_TGF_FAbilityTargetAlternateEntry; // 0x0100(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_121[0x3];                                      // 0x0121(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_7;               // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomInteger_ReturnValue;                // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue_1;           // 0x0134(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_135[0x3];                                      // 0x0135(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item_4;                         // 0x0138(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_144[0x4];                                      // 0x0144(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTGF_FAbilityTargetAlternateEntry      CallFunc_Map_Find_Value;                           // 0x0148(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIC_Monster_Default_C_AbilityTargetFilterAlternately) == 0x000008, "Wrong alignment on AIC_Monster_Default_C_AbilityTargetFilterAlternately");
static_assert(sizeof(AIC_Monster_Default_C_AbilityTargetFilterAlternately) == 0x000170, "Wrong size on AIC_Monster_Default_C_AbilityTargetFilterAlternately");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterAlternately, Param_Ability) == 0x000000, "Member 'AIC_Monster_Default_C_AbilityTargetFilterAlternately::Param_Ability' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterAlternately, Targets) == 0x000008, "Member 'AIC_Monster_Default_C_AbilityTargetFilterAlternately::Targets' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterAlternately, LastCandidate) == 0x000018, "Member 'AIC_Monster_Default_C_AbilityTargetFilterAlternately::LastCandidate' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterAlternately, Candidate) == 0x000020, "Member 'AIC_Monster_Default_C_AbilityTargetFilterAlternately::Candidate' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterAlternately, Candidates) == 0x000028, "Member 'AIC_Monster_Default_C_AbilityTargetFilterAlternately::Candidates' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterAlternately, ActorsUnavailable) == 0x000038, "Member 'AIC_Monster_Default_C_AbilityTargetFilterAlternately::ActorsUnavailable' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterAlternately, ActorsBackup) == 0x000048, "Member 'AIC_Monster_Default_C_AbilityTargetFilterAlternately::ActorsBackup' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterAlternately, Actors) == 0x000058, "Member 'AIC_Monster_Default_C_AbilityTargetFilterAlternately::Actors' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterAlternately, Temp_int_Loop_Counter_Variable) == 0x000068, "Member 'AIC_Monster_Default_C_AbilityTargetFilterAlternately::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterAlternately, CallFunc_Add_IntInt_ReturnValue) == 0x00006C, "Member 'AIC_Monster_Default_C_AbilityTargetFilterAlternately::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterAlternately, Temp_int_Array_Index_Variable) == 0x000070, "Member 'AIC_Monster_Default_C_AbilityTargetFilterAlternately::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterAlternately, Temp_int_Array_Index_Variable_1) == 0x000074, "Member 'AIC_Monster_Default_C_AbilityTargetFilterAlternately::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterAlternately, Temp_int_Loop_Counter_Variable_1) == 0x000078, "Member 'AIC_Monster_Default_C_AbilityTargetFilterAlternately::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterAlternately, CallFunc_Add_IntInt_ReturnValue_1) == 0x00007C, "Member 'AIC_Monster_Default_C_AbilityTargetFilterAlternately::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterAlternately, Temp_int_Array_Index_Variable_2) == 0x000080, "Member 'AIC_Monster_Default_C_AbilityTargetFilterAlternately::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterAlternately, Temp_int_Loop_Counter_Variable_2) == 0x000084, "Member 'AIC_Monster_Default_C_AbilityTargetFilterAlternately::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterAlternately, CallFunc_Add_IntInt_ReturnValue_2) == 0x000088, "Member 'AIC_Monster_Default_C_AbilityTargetFilterAlternately::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterAlternately, CallFunc_Array_Get_Item) == 0x000090, "Member 'AIC_Monster_Default_C_AbilityTargetFilterAlternately::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterAlternately, CallFunc_Array_Length_ReturnValue) == 0x000098, "Member 'AIC_Monster_Default_C_AbilityTargetFilterAlternately::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterAlternately, CallFunc_Less_IntInt_ReturnValue) == 0x00009C, "Member 'AIC_Monster_Default_C_AbilityTargetFilterAlternately::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterAlternately, CallFunc_IsValid_ReturnValue) == 0x00009D, "Member 'AIC_Monster_Default_C_AbilityTargetFilterAlternately::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterAlternately, CallFunc_Array_Length_ReturnValue_1) == 0x0000A0, "Member 'AIC_Monster_Default_C_AbilityTargetFilterAlternately::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterAlternately, CallFunc_Greater_IntInt_ReturnValue) == 0x0000A4, "Member 'AIC_Monster_Default_C_AbilityTargetFilterAlternately::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterAlternately, CallFunc_Array_Add_ReturnValue) == 0x0000A8, "Member 'AIC_Monster_Default_C_AbilityTargetFilterAlternately::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterAlternately, CallFunc_Array_Get_Item_1) == 0x0000B0, "Member 'AIC_Monster_Default_C_AbilityTargetFilterAlternately::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterAlternately, CallFunc_Array_Length_ReturnValue_2) == 0x0000B8, "Member 'AIC_Monster_Default_C_AbilityTargetFilterAlternately::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterAlternately, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000BC, "Member 'AIC_Monster_Default_C_AbilityTargetFilterAlternately::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterAlternately, CallFunc_Array_Length_ReturnValue_3) == 0x0000C0, "Member 'AIC_Monster_Default_C_AbilityTargetFilterAlternately::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterAlternately, CallFunc_Array_Get_Item_2) == 0x0000C8, "Member 'AIC_Monster_Default_C_AbilityTargetFilterAlternately::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterAlternately, CallFunc_Array_Length_ReturnValue_4) == 0x0000D0, "Member 'AIC_Monster_Default_C_AbilityTargetFilterAlternately::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterAlternately, CallFunc_Array_Add_ReturnValue_1) == 0x0000D4, "Member 'AIC_Monster_Default_C_AbilityTargetFilterAlternately::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterAlternately, CallFunc_Subtract_IntInt_ReturnValue) == 0x0000D8, "Member 'AIC_Monster_Default_C_AbilityTargetFilterAlternately::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterAlternately, CallFunc_Array_Contains_ReturnValue) == 0x0000DC, "Member 'AIC_Monster_Default_C_AbilityTargetFilterAlternately::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterAlternately, CallFunc_Array_Get_Item_3) == 0x0000E0, "Member 'AIC_Monster_Default_C_AbilityTargetFilterAlternately::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterAlternately, CallFunc_Array_Contains_ReturnValue_1) == 0x0000E8, "Member 'AIC_Monster_Default_C_AbilityTargetFilterAlternately::CallFunc_Array_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterAlternately, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x0000E9, "Member 'AIC_Monster_Default_C_AbilityTargetFilterAlternately::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterAlternately, CallFunc_Array_Length_ReturnValue_5) == 0x0000EC, "Member 'AIC_Monster_Default_C_AbilityTargetFilterAlternately::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterAlternately, CallFunc_Less_IntInt_ReturnValue_2) == 0x0000F0, "Member 'AIC_Monster_Default_C_AbilityTargetFilterAlternately::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterAlternately, CallFunc_Array_RemoveItem_ReturnValue) == 0x0000F1, "Member 'AIC_Monster_Default_C_AbilityTargetFilterAlternately::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterAlternately, CallFunc_Array_Length_ReturnValue_6) == 0x0000F4, "Member 'AIC_Monster_Default_C_AbilityTargetFilterAlternately::CallFunc_Array_Length_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterAlternately, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000F8, "Member 'AIC_Monster_Default_C_AbilityTargetFilterAlternately::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterAlternately, CallFunc_Array_Contains_ReturnValue_2) == 0x0000F9, "Member 'AIC_Monster_Default_C_AbilityTargetFilterAlternately::CallFunc_Array_Contains_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterAlternately, K2Node_MakeStruct_TGF_FAbilityTargetAlternateEntry) == 0x000100, "Member 'AIC_Monster_Default_C_AbilityTargetFilterAlternately::K2Node_MakeStruct_TGF_FAbilityTargetAlternateEntry' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterAlternately, CallFunc_IsValid_ReturnValue_1) == 0x000120, "Member 'AIC_Monster_Default_C_AbilityTargetFilterAlternately::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterAlternately, CallFunc_Array_AddUnique_ReturnValue) == 0x000124, "Member 'AIC_Monster_Default_C_AbilityTargetFilterAlternately::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterAlternately, CallFunc_Array_Add_ReturnValue_2) == 0x000128, "Member 'AIC_Monster_Default_C_AbilityTargetFilterAlternately::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterAlternately, CallFunc_Array_Length_ReturnValue_7) == 0x00012C, "Member 'AIC_Monster_Default_C_AbilityTargetFilterAlternately::CallFunc_Array_Length_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterAlternately, CallFunc_RandomInteger_ReturnValue) == 0x000130, "Member 'AIC_Monster_Default_C_AbilityTargetFilterAlternately::CallFunc_RandomInteger_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterAlternately, CallFunc_Array_IsNotEmpty_ReturnValue_1) == 0x000134, "Member 'AIC_Monster_Default_C_AbilityTargetFilterAlternately::CallFunc_Array_IsNotEmpty_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterAlternately, CallFunc_Array_Get_Item_4) == 0x000138, "Member 'AIC_Monster_Default_C_AbilityTargetFilterAlternately::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterAlternately, CallFunc_Array_Add_ReturnValue_3) == 0x000140, "Member 'AIC_Monster_Default_C_AbilityTargetFilterAlternately::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterAlternately, CallFunc_Map_Find_Value) == 0x000148, "Member 'AIC_Monster_Default_C_AbilityTargetFilterAlternately::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterAlternately, CallFunc_Map_Find_ReturnValue) == 0x000168, "Member 'AIC_Monster_Default_C_AbilityTargetFilterAlternately::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function AIC_Monster_Default.AIC_Monster_Default_C.AbilityTargetFilterCareer
// 0x0098 (0x0098 - 0x0000)
struct AIC_Monster_Default_C_AbilityTargetFilterCareer final
{
public:
	TArray<class AActor*>                         Targets;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<int32>                                 Args;                                              // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<class AActor*>                         Actors;                                            // 0x0020(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SafeGetArg_Arg;                           // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item_1;                         // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ALyraCharacter*                         K2Node_DynamicCast_AsLyra_Character;               // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETgfActorCareer                               CallFunc_GetActorCareer_ReturnValue;               // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D[0x3];                                       // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIC_Monster_Default_C_AbilityTargetFilterCareer) == 0x000008, "Wrong alignment on AIC_Monster_Default_C_AbilityTargetFilterCareer");
static_assert(sizeof(AIC_Monster_Default_C_AbilityTargetFilterCareer) == 0x000098, "Wrong size on AIC_Monster_Default_C_AbilityTargetFilterCareer");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterCareer, Targets) == 0x000000, "Member 'AIC_Monster_Default_C_AbilityTargetFilterCareer::Targets' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterCareer, Args) == 0x000010, "Member 'AIC_Monster_Default_C_AbilityTargetFilterCareer::Args' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterCareer, Actors) == 0x000020, "Member 'AIC_Monster_Default_C_AbilityTargetFilterCareer::Actors' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterCareer, Temp_int_Array_Index_Variable) == 0x000030, "Member 'AIC_Monster_Default_C_AbilityTargetFilterCareer::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterCareer, CallFunc_SafeGetArg_Arg) == 0x000034, "Member 'AIC_Monster_Default_C_AbilityTargetFilterCareer::CallFunc_SafeGetArg_Arg' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterCareer, CallFunc_Conv_IntToByte_ReturnValue) == 0x000038, "Member 'AIC_Monster_Default_C_AbilityTargetFilterCareer::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterCareer, CallFunc_Array_Length_ReturnValue) == 0x00003C, "Member 'AIC_Monster_Default_C_AbilityTargetFilterCareer::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterCareer, CallFunc_GetValidValue_ReturnValue) == 0x000040, "Member 'AIC_Monster_Default_C_AbilityTargetFilterCareer::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterCareer, Temp_int_Loop_Counter_Variable) == 0x000044, "Member 'AIC_Monster_Default_C_AbilityTargetFilterCareer::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterCareer, CallFunc_Less_IntInt_ReturnValue) == 0x000048, "Member 'AIC_Monster_Default_C_AbilityTargetFilterCareer::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterCareer, CallFunc_Add_IntInt_ReturnValue) == 0x00004C, "Member 'AIC_Monster_Default_C_AbilityTargetFilterCareer::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterCareer, Temp_int_Array_Index_Variable_1) == 0x000050, "Member 'AIC_Monster_Default_C_AbilityTargetFilterCareer::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterCareer, CallFunc_Array_Get_Item) == 0x000058, "Member 'AIC_Monster_Default_C_AbilityTargetFilterCareer::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterCareer, CallFunc_Array_Get_Item_1) == 0x000060, "Member 'AIC_Monster_Default_C_AbilityTargetFilterCareer::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterCareer, K2Node_DynamicCast_AsLyra_Character) == 0x000068, "Member 'AIC_Monster_Default_C_AbilityTargetFilterCareer::K2Node_DynamicCast_AsLyra_Character' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterCareer, K2Node_DynamicCast_bSuccess) == 0x000070, "Member 'AIC_Monster_Default_C_AbilityTargetFilterCareer::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterCareer, CallFunc_Array_Add_ReturnValue) == 0x000074, "Member 'AIC_Monster_Default_C_AbilityTargetFilterCareer::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterCareer, CallFunc_GetActorCareer_ReturnValue) == 0x000078, "Member 'AIC_Monster_Default_C_AbilityTargetFilterCareer::CallFunc_GetActorCareer_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterCareer, CallFunc_Array_Length_ReturnValue_1) == 0x00007C, "Member 'AIC_Monster_Default_C_AbilityTargetFilterCareer::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterCareer, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000080, "Member 'AIC_Monster_Default_C_AbilityTargetFilterCareer::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterCareer, Temp_int_Loop_Counter_Variable_1) == 0x000084, "Member 'AIC_Monster_Default_C_AbilityTargetFilterCareer::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterCareer, CallFunc_Array_Add_ReturnValue_1) == 0x000088, "Member 'AIC_Monster_Default_C_AbilityTargetFilterCareer::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterCareer, CallFunc_Less_IntInt_ReturnValue_1) == 0x00008C, "Member 'AIC_Monster_Default_C_AbilityTargetFilterCareer::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterCareer, CallFunc_Add_IntInt_ReturnValue_1) == 0x000090, "Member 'AIC_Monster_Default_C_AbilityTargetFilterCareer::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function AIC_Monster_Default.AIC_Monster_Default_C.AbilityTargetFilterCareerPriority
// 0x00B0 (0x00B0 - 0x0000)
struct AIC_Monster_Default_C_AbilityTargetFilterCareerPriority final
{
public:
	TArray<class AActor*>                         Targets;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<int32>                                 Args;                                              // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<class AActor*>                         Actors;                                            // 0x0020(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Get_Item;                           // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item_1;                         // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_72[0x2];                                       // 0x0072(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue_1;           // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7A[0x2];                                       // 0x007A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item_2;                         // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ALyraCharacter*                         K2Node_DynamicCast_AsLyra_Character;               // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_92[0x2];                                       // 0x0092(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETgfActorCareer                               CallFunc_GetActorCareer_ReturnValue;               // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIC_Monster_Default_C_AbilityTargetFilterCareerPriority) == 0x000008, "Wrong alignment on AIC_Monster_Default_C_AbilityTargetFilterCareerPriority");
static_assert(sizeof(AIC_Monster_Default_C_AbilityTargetFilterCareerPriority) == 0x0000B0, "Wrong size on AIC_Monster_Default_C_AbilityTargetFilterCareerPriority");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterCareerPriority, Targets) == 0x000000, "Member 'AIC_Monster_Default_C_AbilityTargetFilterCareerPriority::Targets' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterCareerPriority, Args) == 0x000010, "Member 'AIC_Monster_Default_C_AbilityTargetFilterCareerPriority::Args' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterCareerPriority, Actors) == 0x000020, "Member 'AIC_Monster_Default_C_AbilityTargetFilterCareerPriority::Actors' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterCareerPriority, Temp_int_Array_Index_Variable) == 0x000030, "Member 'AIC_Monster_Default_C_AbilityTargetFilterCareerPriority::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterCareerPriority, Temp_int_Loop_Counter_Variable) == 0x000034, "Member 'AIC_Monster_Default_C_AbilityTargetFilterCareerPriority::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterCareerPriority, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'AIC_Monster_Default_C_AbilityTargetFilterCareerPriority::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterCareerPriority, Temp_int_Array_Index_Variable_1) == 0x00003C, "Member 'AIC_Monster_Default_C_AbilityTargetFilterCareerPriority::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterCareerPriority, Temp_int_Loop_Counter_Variable_1) == 0x000040, "Member 'AIC_Monster_Default_C_AbilityTargetFilterCareerPriority::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterCareerPriority, CallFunc_Add_IntInt_ReturnValue_1) == 0x000044, "Member 'AIC_Monster_Default_C_AbilityTargetFilterCareerPriority::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterCareerPriority, Temp_bool_True_if_break_was_hit_Variable) == 0x000048, "Member 'AIC_Monster_Default_C_AbilityTargetFilterCareerPriority::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterCareerPriority, Temp_int_Array_Index_Variable_2) == 0x00004C, "Member 'AIC_Monster_Default_C_AbilityTargetFilterCareerPriority::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterCareerPriority, CallFunc_Not_PreBool_ReturnValue) == 0x000050, "Member 'AIC_Monster_Default_C_AbilityTargetFilterCareerPriority::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterCareerPriority, CallFunc_Array_Get_Item) == 0x000054, "Member 'AIC_Monster_Default_C_AbilityTargetFilterCareerPriority::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterCareerPriority, CallFunc_Array_Get_Item_1) == 0x000058, "Member 'AIC_Monster_Default_C_AbilityTargetFilterCareerPriority::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterCareerPriority, CallFunc_Conv_IntToByte_ReturnValue) == 0x000060, "Member 'AIC_Monster_Default_C_AbilityTargetFilterCareerPriority::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterCareerPriority, CallFunc_Array_Length_ReturnValue) == 0x000064, "Member 'AIC_Monster_Default_C_AbilityTargetFilterCareerPriority::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterCareerPriority, CallFunc_GetValidValue_ReturnValue) == 0x000068, "Member 'AIC_Monster_Default_C_AbilityTargetFilterCareerPriority::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterCareerPriority, CallFunc_Array_Length_ReturnValue_1) == 0x00006C, "Member 'AIC_Monster_Default_C_AbilityTargetFilterCareerPriority::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterCareerPriority, CallFunc_Less_IntInt_ReturnValue) == 0x000070, "Member 'AIC_Monster_Default_C_AbilityTargetFilterCareerPriority::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterCareerPriority, CallFunc_BooleanAND_ReturnValue) == 0x000071, "Member 'AIC_Monster_Default_C_AbilityTargetFilterCareerPriority::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterCareerPriority, CallFunc_Array_Add_ReturnValue) == 0x000074, "Member 'AIC_Monster_Default_C_AbilityTargetFilterCareerPriority::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterCareerPriority, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x000078, "Member 'AIC_Monster_Default_C_AbilityTargetFilterCareerPriority::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterCareerPriority, CallFunc_Array_IsNotEmpty_ReturnValue_1) == 0x000079, "Member 'AIC_Monster_Default_C_AbilityTargetFilterCareerPriority::CallFunc_Array_IsNotEmpty_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterCareerPriority, Temp_int_Loop_Counter_Variable_2) == 0x00007C, "Member 'AIC_Monster_Default_C_AbilityTargetFilterCareerPriority::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterCareerPriority, CallFunc_Array_Get_Item_2) == 0x000080, "Member 'AIC_Monster_Default_C_AbilityTargetFilterCareerPriority::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterCareerPriority, K2Node_DynamicCast_AsLyra_Character) == 0x000088, "Member 'AIC_Monster_Default_C_AbilityTargetFilterCareerPriority::K2Node_DynamicCast_AsLyra_Character' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterCareerPriority, K2Node_DynamicCast_bSuccess) == 0x000090, "Member 'AIC_Monster_Default_C_AbilityTargetFilterCareerPriority::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterCareerPriority, CallFunc_Less_IntInt_ReturnValue_1) == 0x000091, "Member 'AIC_Monster_Default_C_AbilityTargetFilterCareerPriority::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterCareerPriority, CallFunc_Array_Add_ReturnValue_1) == 0x000094, "Member 'AIC_Monster_Default_C_AbilityTargetFilterCareerPriority::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterCareerPriority, CallFunc_GetActorCareer_ReturnValue) == 0x000098, "Member 'AIC_Monster_Default_C_AbilityTargetFilterCareerPriority::CallFunc_GetActorCareer_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterCareerPriority, CallFunc_Add_IntInt_ReturnValue_2) == 0x00009C, "Member 'AIC_Monster_Default_C_AbilityTargetFilterCareerPriority::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterCareerPriority, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000A0, "Member 'AIC_Monster_Default_C_AbilityTargetFilterCareerPriority::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterCareerPriority, CallFunc_Array_Length_ReturnValue_2) == 0x0000A4, "Member 'AIC_Monster_Default_C_AbilityTargetFilterCareerPriority::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterCareerPriority, CallFunc_Less_IntInt_ReturnValue_2) == 0x0000A8, "Member 'AIC_Monster_Default_C_AbilityTargetFilterCareerPriority::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");

// Function AIC_Monster_Default.AIC_Monster_Default_C.AbilityTargetFilterFriendly
// 0x0068 (0x0068 - 0x0000)
struct AIC_Monster_Default_C_AbilityTargetFilterFriendly final
{
public:
	TArray<class AActor*>                         Targets;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<class AActor*>                         Actors;                                            // 0x0010(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsHostile_Result;                         // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item_1;                         // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIC_Monster_Default_C_AbilityTargetFilterFriendly) == 0x000008, "Wrong alignment on AIC_Monster_Default_C_AbilityTargetFilterFriendly");
static_assert(sizeof(AIC_Monster_Default_C_AbilityTargetFilterFriendly) == 0x000068, "Wrong size on AIC_Monster_Default_C_AbilityTargetFilterFriendly");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterFriendly, Targets) == 0x000000, "Member 'AIC_Monster_Default_C_AbilityTargetFilterFriendly::Targets' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterFriendly, Actors) == 0x000010, "Member 'AIC_Monster_Default_C_AbilityTargetFilterFriendly::Actors' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterFriendly, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'AIC_Monster_Default_C_AbilityTargetFilterFriendly::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterFriendly, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'AIC_Monster_Default_C_AbilityTargetFilterFriendly::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterFriendly, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'AIC_Monster_Default_C_AbilityTargetFilterFriendly::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterFriendly, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'AIC_Monster_Default_C_AbilityTargetFilterFriendly::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterFriendly, Temp_int_Array_Index_Variable) == 0x000030, "Member 'AIC_Monster_Default_C_AbilityTargetFilterFriendly::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterFriendly, Temp_int_Array_Index_Variable_1) == 0x000034, "Member 'AIC_Monster_Default_C_AbilityTargetFilterFriendly::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterFriendly, CallFunc_Array_Get_Item) == 0x000038, "Member 'AIC_Monster_Default_C_AbilityTargetFilterFriendly::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterFriendly, CallFunc_IsHostile_Result) == 0x000040, "Member 'AIC_Monster_Default_C_AbilityTargetFilterFriendly::CallFunc_IsHostile_Result' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterFriendly, Temp_int_Loop_Counter_Variable_1) == 0x000044, "Member 'AIC_Monster_Default_C_AbilityTargetFilterFriendly::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterFriendly, CallFunc_Array_Get_Item_1) == 0x000048, "Member 'AIC_Monster_Default_C_AbilityTargetFilterFriendly::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterFriendly, CallFunc_Array_Add_ReturnValue) == 0x000050, "Member 'AIC_Monster_Default_C_AbilityTargetFilterFriendly::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterFriendly, CallFunc_Add_IntInt_ReturnValue_1) == 0x000054, "Member 'AIC_Monster_Default_C_AbilityTargetFilterFriendly::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterFriendly, CallFunc_Array_Length_ReturnValue_1) == 0x000058, "Member 'AIC_Monster_Default_C_AbilityTargetFilterFriendly::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterFriendly, CallFunc_Less_IntInt_ReturnValue_1) == 0x00005C, "Member 'AIC_Monster_Default_C_AbilityTargetFilterFriendly::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterFriendly, CallFunc_Array_Add_ReturnValue_1) == 0x000060, "Member 'AIC_Monster_Default_C_AbilityTargetFilterFriendly::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");

// Function AIC_Monster_Default.AIC_Monster_Default_C.AbilityTargetFilterFurthest
// 0x00A0 (0x00A0 - 0x0000)
struct AIC_Monster_Default_C_AbilityTargetFilterFurthest final
{
public:
	TArray<class AActor*>                         Targets;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	double                                        Distance;                                          // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Target;                                            // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Vector_Distance_ReturnValue;              // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x009B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIC_Monster_Default_C_AbilityTargetFilterFurthest) == 0x000008, "Wrong alignment on AIC_Monster_Default_C_AbilityTargetFilterFurthest");
static_assert(sizeof(AIC_Monster_Default_C_AbilityTargetFilterFurthest) == 0x0000A0, "Wrong size on AIC_Monster_Default_C_AbilityTargetFilterFurthest");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterFurthest, Targets) == 0x000000, "Member 'AIC_Monster_Default_C_AbilityTargetFilterFurthest::Targets' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterFurthest, Distance) == 0x000010, "Member 'AIC_Monster_Default_C_AbilityTargetFilterFurthest::Distance' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterFurthest, Target) == 0x000018, "Member 'AIC_Monster_Default_C_AbilityTargetFilterFurthest::Target' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterFurthest, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'AIC_Monster_Default_C_AbilityTargetFilterFurthest::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterFurthest, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'AIC_Monster_Default_C_AbilityTargetFilterFurthest::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterFurthest, Temp_int_Array_Index_Variable) == 0x000028, "Member 'AIC_Monster_Default_C_AbilityTargetFilterFurthest::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterFurthest, CallFunc_Array_Get_Item) == 0x000030, "Member 'AIC_Monster_Default_C_AbilityTargetFilterFurthest::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterFurthest, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'AIC_Monster_Default_C_AbilityTargetFilterFurthest::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterFurthest, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000040, "Member 'AIC_Monster_Default_C_AbilityTargetFilterFurthest::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterFurthest, CallFunc_Less_IntInt_ReturnValue) == 0x000058, "Member 'AIC_Monster_Default_C_AbilityTargetFilterFurthest::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterFurthest, CallFunc_K2_GetPawn_ReturnValue) == 0x000060, "Member 'AIC_Monster_Default_C_AbilityTargetFilterFurthest::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterFurthest, CallFunc_IsValid_ReturnValue) == 0x000068, "Member 'AIC_Monster_Default_C_AbilityTargetFilterFurthest::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterFurthest, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000070, "Member 'AIC_Monster_Default_C_AbilityTargetFilterFurthest::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterFurthest, CallFunc_Vector_Distance_ReturnValue) == 0x000088, "Member 'AIC_Monster_Default_C_AbilityTargetFilterFurthest::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterFurthest, CallFunc_IsValid_ReturnValue_1) == 0x000090, "Member 'AIC_Monster_Default_C_AbilityTargetFilterFurthest::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterFurthest, CallFunc_Array_Add_ReturnValue) == 0x000094, "Member 'AIC_Monster_Default_C_AbilityTargetFilterFurthest::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterFurthest, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000098, "Member 'AIC_Monster_Default_C_AbilityTargetFilterFurthest::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterFurthest, CallFunc_IsValid_ReturnValue_2) == 0x000099, "Member 'AIC_Monster_Default_C_AbilityTargetFilterFurthest::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterFurthest, CallFunc_Not_PreBool_ReturnValue) == 0x00009A, "Member 'AIC_Monster_Default_C_AbilityTargetFilterFurthest::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterFurthest, CallFunc_BooleanOR_ReturnValue) == 0x00009B, "Member 'AIC_Monster_Default_C_AbilityTargetFilterFurthest::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function AIC_Monster_Default.AIC_Monster_Default_C.AbilityTargetFilterHealthHighest
// 0x0058 (0x0058 - 0x0000)
struct AIC_Monster_Default_C_AbilityTargetFilterHealthHighest final
{
public:
	TArray<class AActor*>                         Targets;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	double                                        Health;                                            // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Target;                                            // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetHealth_Result;                         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0053(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIC_Monster_Default_C_AbilityTargetFilterHealthHighest) == 0x000008, "Wrong alignment on AIC_Monster_Default_C_AbilityTargetFilterHealthHighest");
static_assert(sizeof(AIC_Monster_Default_C_AbilityTargetFilterHealthHighest) == 0x000058, "Wrong size on AIC_Monster_Default_C_AbilityTargetFilterHealthHighest");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterHealthHighest, Targets) == 0x000000, "Member 'AIC_Monster_Default_C_AbilityTargetFilterHealthHighest::Targets' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterHealthHighest, Health) == 0x000010, "Member 'AIC_Monster_Default_C_AbilityTargetFilterHealthHighest::Health' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterHealthHighest, Target) == 0x000018, "Member 'AIC_Monster_Default_C_AbilityTargetFilterHealthHighest::Target' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterHealthHighest, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'AIC_Monster_Default_C_AbilityTargetFilterHealthHighest::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterHealthHighest, Temp_int_Array_Index_Variable) == 0x000024, "Member 'AIC_Monster_Default_C_AbilityTargetFilterHealthHighest::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterHealthHighest, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'AIC_Monster_Default_C_AbilityTargetFilterHealthHighest::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterHealthHighest, CallFunc_Array_Get_Item) == 0x000030, "Member 'AIC_Monster_Default_C_AbilityTargetFilterHealthHighest::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterHealthHighest, CallFunc_GetHealth_Result) == 0x000038, "Member 'AIC_Monster_Default_C_AbilityTargetFilterHealthHighest::CallFunc_GetHealth_Result' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterHealthHighest, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'AIC_Monster_Default_C_AbilityTargetFilterHealthHighest::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterHealthHighest, CallFunc_Add_IntInt_ReturnValue) == 0x000044, "Member 'AIC_Monster_Default_C_AbilityTargetFilterHealthHighest::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterHealthHighest, CallFunc_IsValid_ReturnValue) == 0x000048, "Member 'AIC_Monster_Default_C_AbilityTargetFilterHealthHighest::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterHealthHighest, CallFunc_Array_Add_ReturnValue) == 0x00004C, "Member 'AIC_Monster_Default_C_AbilityTargetFilterHealthHighest::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterHealthHighest, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000050, "Member 'AIC_Monster_Default_C_AbilityTargetFilterHealthHighest::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterHealthHighest, CallFunc_IsValid_ReturnValue_1) == 0x000051, "Member 'AIC_Monster_Default_C_AbilityTargetFilterHealthHighest::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterHealthHighest, CallFunc_Not_PreBool_ReturnValue) == 0x000052, "Member 'AIC_Monster_Default_C_AbilityTargetFilterHealthHighest::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterHealthHighest, CallFunc_BooleanOR_ReturnValue) == 0x000053, "Member 'AIC_Monster_Default_C_AbilityTargetFilterHealthHighest::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function AIC_Monster_Default.AIC_Monster_Default_C.AbilityTargetFilterHealthLowest
// 0x0058 (0x0058 - 0x0000)
struct AIC_Monster_Default_C_AbilityTargetFilterHealthLowest final
{
public:
	TArray<class AActor*>                         Targets;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	double                                        Health;                                            // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Target;                                            // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetHealth_Result;                         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0053(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIC_Monster_Default_C_AbilityTargetFilterHealthLowest) == 0x000008, "Wrong alignment on AIC_Monster_Default_C_AbilityTargetFilterHealthLowest");
static_assert(sizeof(AIC_Monster_Default_C_AbilityTargetFilterHealthLowest) == 0x000058, "Wrong size on AIC_Monster_Default_C_AbilityTargetFilterHealthLowest");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterHealthLowest, Targets) == 0x000000, "Member 'AIC_Monster_Default_C_AbilityTargetFilterHealthLowest::Targets' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterHealthLowest, Health) == 0x000010, "Member 'AIC_Monster_Default_C_AbilityTargetFilterHealthLowest::Health' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterHealthLowest, Target) == 0x000018, "Member 'AIC_Monster_Default_C_AbilityTargetFilterHealthLowest::Target' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterHealthLowest, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'AIC_Monster_Default_C_AbilityTargetFilterHealthLowest::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterHealthLowest, Temp_int_Array_Index_Variable) == 0x000024, "Member 'AIC_Monster_Default_C_AbilityTargetFilterHealthLowest::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterHealthLowest, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'AIC_Monster_Default_C_AbilityTargetFilterHealthLowest::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterHealthLowest, CallFunc_Array_Get_Item) == 0x000030, "Member 'AIC_Monster_Default_C_AbilityTargetFilterHealthLowest::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterHealthLowest, CallFunc_GetHealth_Result) == 0x000038, "Member 'AIC_Monster_Default_C_AbilityTargetFilterHealthLowest::CallFunc_GetHealth_Result' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterHealthLowest, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'AIC_Monster_Default_C_AbilityTargetFilterHealthLowest::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterHealthLowest, CallFunc_Add_IntInt_ReturnValue) == 0x000044, "Member 'AIC_Monster_Default_C_AbilityTargetFilterHealthLowest::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterHealthLowest, CallFunc_IsValid_ReturnValue) == 0x000048, "Member 'AIC_Monster_Default_C_AbilityTargetFilterHealthLowest::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterHealthLowest, CallFunc_Array_Add_ReturnValue) == 0x00004C, "Member 'AIC_Monster_Default_C_AbilityTargetFilterHealthLowest::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterHealthLowest, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000050, "Member 'AIC_Monster_Default_C_AbilityTargetFilterHealthLowest::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterHealthLowest, CallFunc_IsValid_ReturnValue_1) == 0x000051, "Member 'AIC_Monster_Default_C_AbilityTargetFilterHealthLowest::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterHealthLowest, CallFunc_Not_PreBool_ReturnValue) == 0x000052, "Member 'AIC_Monster_Default_C_AbilityTargetFilterHealthLowest::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterHealthLowest, CallFunc_BooleanOR_ReturnValue) == 0x000053, "Member 'AIC_Monster_Default_C_AbilityTargetFilterHealthLowest::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function AIC_Monster_Default.AIC_Monster_Default_C.AbilityTargetFilterHostile
// 0x0068 (0x0068 - 0x0000)
struct AIC_Monster_Default_C_AbilityTargetFilterHostile final
{
public:
	TArray<class AActor*>                         Targets;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<class AActor*>                         Actors;                                            // 0x0010(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsHostile_Result;                         // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item_1;                         // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIC_Monster_Default_C_AbilityTargetFilterHostile) == 0x000008, "Wrong alignment on AIC_Monster_Default_C_AbilityTargetFilterHostile");
static_assert(sizeof(AIC_Monster_Default_C_AbilityTargetFilterHostile) == 0x000068, "Wrong size on AIC_Monster_Default_C_AbilityTargetFilterHostile");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterHostile, Targets) == 0x000000, "Member 'AIC_Monster_Default_C_AbilityTargetFilterHostile::Targets' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterHostile, Actors) == 0x000010, "Member 'AIC_Monster_Default_C_AbilityTargetFilterHostile::Actors' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterHostile, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'AIC_Monster_Default_C_AbilityTargetFilterHostile::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterHostile, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'AIC_Monster_Default_C_AbilityTargetFilterHostile::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterHostile, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'AIC_Monster_Default_C_AbilityTargetFilterHostile::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterHostile, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'AIC_Monster_Default_C_AbilityTargetFilterHostile::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterHostile, Temp_int_Array_Index_Variable) == 0x000030, "Member 'AIC_Monster_Default_C_AbilityTargetFilterHostile::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterHostile, Temp_int_Array_Index_Variable_1) == 0x000034, "Member 'AIC_Monster_Default_C_AbilityTargetFilterHostile::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterHostile, CallFunc_Array_Get_Item) == 0x000038, "Member 'AIC_Monster_Default_C_AbilityTargetFilterHostile::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterHostile, CallFunc_IsHostile_Result) == 0x000040, "Member 'AIC_Monster_Default_C_AbilityTargetFilterHostile::CallFunc_IsHostile_Result' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterHostile, Temp_int_Loop_Counter_Variable_1) == 0x000044, "Member 'AIC_Monster_Default_C_AbilityTargetFilterHostile::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterHostile, CallFunc_Array_Get_Item_1) == 0x000048, "Member 'AIC_Monster_Default_C_AbilityTargetFilterHostile::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterHostile, CallFunc_Array_Add_ReturnValue) == 0x000050, "Member 'AIC_Monster_Default_C_AbilityTargetFilterHostile::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterHostile, CallFunc_Add_IntInt_ReturnValue_1) == 0x000054, "Member 'AIC_Monster_Default_C_AbilityTargetFilterHostile::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterHostile, CallFunc_Array_Length_ReturnValue_1) == 0x000058, "Member 'AIC_Monster_Default_C_AbilityTargetFilterHostile::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterHostile, CallFunc_Less_IntInt_ReturnValue_1) == 0x00005C, "Member 'AIC_Monster_Default_C_AbilityTargetFilterHostile::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterHostile, CallFunc_Array_Add_ReturnValue_1) == 0x000060, "Member 'AIC_Monster_Default_C_AbilityTargetFilterHostile::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");

// Function AIC_Monster_Default.AIC_Monster_Default_C.AbilityTargetFilterItemEquip
// 0x0020 (0x0020 - 0x0000)
struct AIC_Monster_Default_C_AbilityTargetFilterItemEquip final
{
public:
	TArray<class AActor*>                         Targets;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<int32>                                 Args;                                              // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(AIC_Monster_Default_C_AbilityTargetFilterItemEquip) == 0x000008, "Wrong alignment on AIC_Monster_Default_C_AbilityTargetFilterItemEquip");
static_assert(sizeof(AIC_Monster_Default_C_AbilityTargetFilterItemEquip) == 0x000020, "Wrong size on AIC_Monster_Default_C_AbilityTargetFilterItemEquip");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterItemEquip, Targets) == 0x000000, "Member 'AIC_Monster_Default_C_AbilityTargetFilterItemEquip::Targets' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterItemEquip, Args) == 0x000010, "Member 'AIC_Monster_Default_C_AbilityTargetFilterItemEquip::Args' has a wrong offset!");

// Function AIC_Monster_Default.AIC_Monster_Default_C.AbilityTargetFilterNearest
// 0x00A0 (0x00A0 - 0x0000)
struct AIC_Monster_Default_C_AbilityTargetFilterNearest final
{
public:
	TArray<class AActor*>                         Targets;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	double                                        Distance;                                          // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Target;                                            // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Vector_Distance_ReturnValue;              // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x009B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIC_Monster_Default_C_AbilityTargetFilterNearest) == 0x000008, "Wrong alignment on AIC_Monster_Default_C_AbilityTargetFilterNearest");
static_assert(sizeof(AIC_Monster_Default_C_AbilityTargetFilterNearest) == 0x0000A0, "Wrong size on AIC_Monster_Default_C_AbilityTargetFilterNearest");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterNearest, Targets) == 0x000000, "Member 'AIC_Monster_Default_C_AbilityTargetFilterNearest::Targets' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterNearest, Distance) == 0x000010, "Member 'AIC_Monster_Default_C_AbilityTargetFilterNearest::Distance' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterNearest, Target) == 0x000018, "Member 'AIC_Monster_Default_C_AbilityTargetFilterNearest::Target' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterNearest, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'AIC_Monster_Default_C_AbilityTargetFilterNearest::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterNearest, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'AIC_Monster_Default_C_AbilityTargetFilterNearest::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterNearest, Temp_int_Array_Index_Variable) == 0x000028, "Member 'AIC_Monster_Default_C_AbilityTargetFilterNearest::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterNearest, CallFunc_Array_Get_Item) == 0x000030, "Member 'AIC_Monster_Default_C_AbilityTargetFilterNearest::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterNearest, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'AIC_Monster_Default_C_AbilityTargetFilterNearest::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterNearest, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000040, "Member 'AIC_Monster_Default_C_AbilityTargetFilterNearest::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterNearest, CallFunc_Less_IntInt_ReturnValue) == 0x000058, "Member 'AIC_Monster_Default_C_AbilityTargetFilterNearest::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterNearest, CallFunc_K2_GetPawn_ReturnValue) == 0x000060, "Member 'AIC_Monster_Default_C_AbilityTargetFilterNearest::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterNearest, CallFunc_IsValid_ReturnValue) == 0x000068, "Member 'AIC_Monster_Default_C_AbilityTargetFilterNearest::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterNearest, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000070, "Member 'AIC_Monster_Default_C_AbilityTargetFilterNearest::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterNearest, CallFunc_Vector_Distance_ReturnValue) == 0x000088, "Member 'AIC_Monster_Default_C_AbilityTargetFilterNearest::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterNearest, CallFunc_IsValid_ReturnValue_1) == 0x000090, "Member 'AIC_Monster_Default_C_AbilityTargetFilterNearest::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterNearest, CallFunc_Array_Add_ReturnValue) == 0x000094, "Member 'AIC_Monster_Default_C_AbilityTargetFilterNearest::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterNearest, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000098, "Member 'AIC_Monster_Default_C_AbilityTargetFilterNearest::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterNearest, CallFunc_IsValid_ReturnValue_2) == 0x000099, "Member 'AIC_Monster_Default_C_AbilityTargetFilterNearest::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterNearest, CallFunc_Not_PreBool_ReturnValue) == 0x00009A, "Member 'AIC_Monster_Default_C_AbilityTargetFilterNearest::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterNearest, CallFunc_BooleanOR_ReturnValue) == 0x00009B, "Member 'AIC_Monster_Default_C_AbilityTargetFilterNearest::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function AIC_Monster_Default.AIC_Monster_Default_C.AbilityTargetFilterNone
// 0x0010 (0x0010 - 0x0000)
struct AIC_Monster_Default_C_AbilityTargetFilterNone final
{
public:
	TArray<class AActor*>                         Targets;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(AIC_Monster_Default_C_AbilityTargetFilterNone) == 0x000008, "Wrong alignment on AIC_Monster_Default_C_AbilityTargetFilterNone");
static_assert(sizeof(AIC_Monster_Default_C_AbilityTargetFilterNone) == 0x000010, "Wrong size on AIC_Monster_Default_C_AbilityTargetFilterNone");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterNone, Targets) == 0x000000, "Member 'AIC_Monster_Default_C_AbilityTargetFilterNone::Targets' has a wrong offset!");

// Function AIC_Monster_Default.AIC_Monster_Default_C.AbilityTargetFilterRace
// 0x0098 (0x0098 - 0x0000)
struct AIC_Monster_Default_C_AbilityTargetFilterRace final
{
public:
	TArray<class AActor*>                         Targets;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<int32>                                 Args;                                              // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<class AActor*>                         Actors;                                            // 0x0020(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SafeGetArg_Arg;                           // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item_1;                         // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ALyraCharacter*                         K2Node_DynamicCast_AsLyra_Character;               // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETgfActorRace                                 CallFunc_GetActorRace_ReturnValue;                 // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D[0x3];                                       // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIC_Monster_Default_C_AbilityTargetFilterRace) == 0x000008, "Wrong alignment on AIC_Monster_Default_C_AbilityTargetFilterRace");
static_assert(sizeof(AIC_Monster_Default_C_AbilityTargetFilterRace) == 0x000098, "Wrong size on AIC_Monster_Default_C_AbilityTargetFilterRace");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterRace, Targets) == 0x000000, "Member 'AIC_Monster_Default_C_AbilityTargetFilterRace::Targets' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterRace, Args) == 0x000010, "Member 'AIC_Monster_Default_C_AbilityTargetFilterRace::Args' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterRace, Actors) == 0x000020, "Member 'AIC_Monster_Default_C_AbilityTargetFilterRace::Actors' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterRace, Temp_int_Array_Index_Variable) == 0x000030, "Member 'AIC_Monster_Default_C_AbilityTargetFilterRace::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterRace, CallFunc_SafeGetArg_Arg) == 0x000034, "Member 'AIC_Monster_Default_C_AbilityTargetFilterRace::CallFunc_SafeGetArg_Arg' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterRace, CallFunc_Conv_IntToByte_ReturnValue) == 0x000038, "Member 'AIC_Monster_Default_C_AbilityTargetFilterRace::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterRace, CallFunc_Array_Length_ReturnValue) == 0x00003C, "Member 'AIC_Monster_Default_C_AbilityTargetFilterRace::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterRace, CallFunc_GetValidValue_ReturnValue) == 0x000040, "Member 'AIC_Monster_Default_C_AbilityTargetFilterRace::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterRace, Temp_int_Loop_Counter_Variable) == 0x000044, "Member 'AIC_Monster_Default_C_AbilityTargetFilterRace::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterRace, CallFunc_Less_IntInt_ReturnValue) == 0x000048, "Member 'AIC_Monster_Default_C_AbilityTargetFilterRace::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterRace, CallFunc_Add_IntInt_ReturnValue) == 0x00004C, "Member 'AIC_Monster_Default_C_AbilityTargetFilterRace::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterRace, Temp_int_Array_Index_Variable_1) == 0x000050, "Member 'AIC_Monster_Default_C_AbilityTargetFilterRace::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterRace, CallFunc_Array_Get_Item) == 0x000058, "Member 'AIC_Monster_Default_C_AbilityTargetFilterRace::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterRace, CallFunc_Array_Get_Item_1) == 0x000060, "Member 'AIC_Monster_Default_C_AbilityTargetFilterRace::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterRace, K2Node_DynamicCast_AsLyra_Character) == 0x000068, "Member 'AIC_Monster_Default_C_AbilityTargetFilterRace::K2Node_DynamicCast_AsLyra_Character' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterRace, K2Node_DynamicCast_bSuccess) == 0x000070, "Member 'AIC_Monster_Default_C_AbilityTargetFilterRace::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterRace, CallFunc_Array_Add_ReturnValue) == 0x000074, "Member 'AIC_Monster_Default_C_AbilityTargetFilterRace::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterRace, CallFunc_GetActorRace_ReturnValue) == 0x000078, "Member 'AIC_Monster_Default_C_AbilityTargetFilterRace::CallFunc_GetActorRace_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterRace, CallFunc_Array_Length_ReturnValue_1) == 0x00007C, "Member 'AIC_Monster_Default_C_AbilityTargetFilterRace::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterRace, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000080, "Member 'AIC_Monster_Default_C_AbilityTargetFilterRace::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterRace, Temp_int_Loop_Counter_Variable_1) == 0x000084, "Member 'AIC_Monster_Default_C_AbilityTargetFilterRace::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterRace, CallFunc_Array_Add_ReturnValue_1) == 0x000088, "Member 'AIC_Monster_Default_C_AbilityTargetFilterRace::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterRace, CallFunc_Less_IntInt_ReturnValue_1) == 0x00008C, "Member 'AIC_Monster_Default_C_AbilityTargetFilterRace::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterRace, CallFunc_Add_IntInt_ReturnValue_1) == 0x000090, "Member 'AIC_Monster_Default_C_AbilityTargetFilterRace::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function AIC_Monster_Default.AIC_Monster_Default_C.AbilityTargetFilterRange
// 0x0118 (0x0118 - 0x0000)
struct AIC_Monster_Default_C_AbilityTargetFilterRange final
{
public:
	TArray<class AActor*>                         Targets;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<int32>                                 Args;                                              // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<class AActor*>                         Actors;                                            // 0x0020(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         RangeMin;                                          // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SafeGetArg_Arg;                           // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SafeGetArg_Arg_1;                         // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_RangeQueryActors_Actors;                  // 0x0048(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue;                // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SafeGetArg_Arg_2;                         // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item_1;                         // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_2;            // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x00D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Vector_Distance_ReturnValue;              // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x00FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FB[0x1];                                       // 0x00FB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RangeQueryActors_Range_ImplicitCast;      // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Less_DoubleDouble_B_ImplicitCast;         // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_B_ImplicitCast;      // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIC_Monster_Default_C_AbilityTargetFilterRange) == 0x000008, "Wrong alignment on AIC_Monster_Default_C_AbilityTargetFilterRange");
static_assert(sizeof(AIC_Monster_Default_C_AbilityTargetFilterRange) == 0x000118, "Wrong size on AIC_Monster_Default_C_AbilityTargetFilterRange");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterRange, Targets) == 0x000000, "Member 'AIC_Monster_Default_C_AbilityTargetFilterRange::Targets' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterRange, Args) == 0x000010, "Member 'AIC_Monster_Default_C_AbilityTargetFilterRange::Args' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterRange, Actors) == 0x000020, "Member 'AIC_Monster_Default_C_AbilityTargetFilterRange::Actors' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterRange, RangeMin) == 0x000030, "Member 'AIC_Monster_Default_C_AbilityTargetFilterRange::RangeMin' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterRange, CallFunc_SafeGetArg_Arg) == 0x000034, "Member 'AIC_Monster_Default_C_AbilityTargetFilterRange::CallFunc_SafeGetArg_Arg' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterRange, CallFunc_SafeGetArg_Arg_1) == 0x000038, "Member 'AIC_Monster_Default_C_AbilityTargetFilterRange::CallFunc_SafeGetArg_Arg_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterRange, CallFunc_Greater_IntInt_ReturnValue) == 0x00003C, "Member 'AIC_Monster_Default_C_AbilityTargetFilterRange::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterRange, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000040, "Member 'AIC_Monster_Default_C_AbilityTargetFilterRange::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterRange, CallFunc_SelectInt_ReturnValue) == 0x000044, "Member 'AIC_Monster_Default_C_AbilityTargetFilterRange::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterRange, CallFunc_RangeQueryActors_Actors) == 0x000048, "Member 'AIC_Monster_Default_C_AbilityTargetFilterRange::CallFunc_RangeQueryActors_Actors' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterRange, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'AIC_Monster_Default_C_AbilityTargetFilterRange::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterRange, CallFunc_Array_IsEmpty_ReturnValue) == 0x00005C, "Member 'AIC_Monster_Default_C_AbilityTargetFilterRange::CallFunc_Array_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterRange, Temp_int_Loop_Counter_Variable) == 0x000060, "Member 'AIC_Monster_Default_C_AbilityTargetFilterRange::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterRange, CallFunc_Add_IntInt_ReturnValue) == 0x000064, "Member 'AIC_Monster_Default_C_AbilityTargetFilterRange::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterRange, Temp_int_Array_Index_Variable) == 0x000068, "Member 'AIC_Monster_Default_C_AbilityTargetFilterRange::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterRange, Temp_int_Array_Index_Variable_1) == 0x00006C, "Member 'AIC_Monster_Default_C_AbilityTargetFilterRange::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterRange, CallFunc_Array_Get_Item) == 0x000070, "Member 'AIC_Monster_Default_C_AbilityTargetFilterRange::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterRange, CallFunc_SafeGetArg_Arg_2) == 0x000078, "Member 'AIC_Monster_Default_C_AbilityTargetFilterRange::CallFunc_SafeGetArg_Arg_2' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterRange, CallFunc_Array_Add_ReturnValue) == 0x00007C, "Member 'AIC_Monster_Default_C_AbilityTargetFilterRange::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterRange, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000080, "Member 'AIC_Monster_Default_C_AbilityTargetFilterRange::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterRange, CallFunc_Array_Get_Item_1) == 0x000088, "Member 'AIC_Monster_Default_C_AbilityTargetFilterRange::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterRange, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000090, "Member 'AIC_Monster_Default_C_AbilityTargetFilterRange::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterRange, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000098, "Member 'AIC_Monster_Default_C_AbilityTargetFilterRange::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterRange, CallFunc_Conv_IntToFloat_ReturnValue_2) == 0x0000B0, "Member 'AIC_Monster_Default_C_AbilityTargetFilterRange::CallFunc_Conv_IntToFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterRange, CallFunc_Array_Length_ReturnValue_1) == 0x0000B4, "Member 'AIC_Monster_Default_C_AbilityTargetFilterRange::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterRange, CallFunc_Less_IntInt_ReturnValue) == 0x0000B8, "Member 'AIC_Monster_Default_C_AbilityTargetFilterRange::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterRange, CallFunc_Array_Add_ReturnValue_1) == 0x0000BC, "Member 'AIC_Monster_Default_C_AbilityTargetFilterRange::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterRange, Temp_int_Loop_Counter_Variable_1) == 0x0000C0, "Member 'AIC_Monster_Default_C_AbilityTargetFilterRange::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterRange, CallFunc_K2_GetPawn_ReturnValue) == 0x0000C8, "Member 'AIC_Monster_Default_C_AbilityTargetFilterRange::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterRange, CallFunc_IsValid_ReturnValue) == 0x0000D0, "Member 'AIC_Monster_Default_C_AbilityTargetFilterRange::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterRange, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x0000D8, "Member 'AIC_Monster_Default_C_AbilityTargetFilterRange::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterRange, CallFunc_Vector_Distance_ReturnValue) == 0x0000F0, "Member 'AIC_Monster_Default_C_AbilityTargetFilterRange::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterRange, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000F8, "Member 'AIC_Monster_Default_C_AbilityTargetFilterRange::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterRange, CallFunc_Less_DoubleDouble_ReturnValue) == 0x0000F9, "Member 'AIC_Monster_Default_C_AbilityTargetFilterRange::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterRange, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0000FA, "Member 'AIC_Monster_Default_C_AbilityTargetFilterRange::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterRange, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000FC, "Member 'AIC_Monster_Default_C_AbilityTargetFilterRange::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterRange, CallFunc_RangeQueryActors_Range_ImplicitCast) == 0x000100, "Member 'AIC_Monster_Default_C_AbilityTargetFilterRange::CallFunc_RangeQueryActors_Range_ImplicitCast' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterRange, CallFunc_Less_DoubleDouble_B_ImplicitCast) == 0x000108, "Member 'AIC_Monster_Default_C_AbilityTargetFilterRange::CallFunc_Less_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterRange, CallFunc_Greater_DoubleDouble_B_ImplicitCast) == 0x000110, "Member 'AIC_Monster_Default_C_AbilityTargetFilterRange::CallFunc_Greater_DoubleDouble_B_ImplicitCast' has a wrong offset!");

// Function AIC_Monster_Default.AIC_Monster_Default_C.AbilityTargetFilterTags
// 0x00A0 (0x00A0 - 0x0000)
struct AIC_Monster_Default_C_AbilityTargetFilterTags final
{
public:
	TArray<class AActor*>                         Targets;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<int32>                                 Args;                                              // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FGameplayTagContainer                  Param_Tags;                                        // 0x0020(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm)
	TArray<class AActor*>                         Actors;                                            // 0x0040(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         CallFunc_SafeGetArg_Arg;                           // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue;   // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_BoolBool_ReturnValue;          // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7A[0x2];                                       // 0x007A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item_1;                         // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_95[0x3];                                       // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIC_Monster_Default_C_AbilityTargetFilterTags) == 0x000008, "Wrong alignment on AIC_Monster_Default_C_AbilityTargetFilterTags");
static_assert(sizeof(AIC_Monster_Default_C_AbilityTargetFilterTags) == 0x0000A0, "Wrong size on AIC_Monster_Default_C_AbilityTargetFilterTags");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterTags, Targets) == 0x000000, "Member 'AIC_Monster_Default_C_AbilityTargetFilterTags::Targets' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterTags, Args) == 0x000010, "Member 'AIC_Monster_Default_C_AbilityTargetFilterTags::Args' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterTags, Param_Tags) == 0x000020, "Member 'AIC_Monster_Default_C_AbilityTargetFilterTags::Param_Tags' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterTags, Actors) == 0x000040, "Member 'AIC_Monster_Default_C_AbilityTargetFilterTags::Actors' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterTags, CallFunc_SafeGetArg_Arg) == 0x000050, "Member 'AIC_Monster_Default_C_AbilityTargetFilterTags::CallFunc_SafeGetArg_Arg' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterTags, CallFunc_Array_Length_ReturnValue) == 0x000054, "Member 'AIC_Monster_Default_C_AbilityTargetFilterTags::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterTags, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000058, "Member 'AIC_Monster_Default_C_AbilityTargetFilterTags::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterTags, Temp_int_Loop_Counter_Variable) == 0x00005C, "Member 'AIC_Monster_Default_C_AbilityTargetFilterTags::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterTags, CallFunc_Less_IntInt_ReturnValue) == 0x000060, "Member 'AIC_Monster_Default_C_AbilityTargetFilterTags::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterTags, CallFunc_Add_IntInt_ReturnValue) == 0x000064, "Member 'AIC_Monster_Default_C_AbilityTargetFilterTags::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterTags, Temp_int_Array_Index_Variable) == 0x000068, "Member 'AIC_Monster_Default_C_AbilityTargetFilterTags::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterTags, Temp_int_Array_Index_Variable_1) == 0x00006C, "Member 'AIC_Monster_Default_C_AbilityTargetFilterTags::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterTags, CallFunc_Array_Get_Item) == 0x000070, "Member 'AIC_Monster_Default_C_AbilityTargetFilterTags::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterTags, CallFunc_HasAnyMatchingGameplayTags_ReturnValue) == 0x000078, "Member 'AIC_Monster_Default_C_AbilityTargetFilterTags::CallFunc_HasAnyMatchingGameplayTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterTags, CallFunc_EqualEqual_BoolBool_ReturnValue) == 0x000079, "Member 'AIC_Monster_Default_C_AbilityTargetFilterTags::CallFunc_EqualEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterTags, Temp_int_Loop_Counter_Variable_1) == 0x00007C, "Member 'AIC_Monster_Default_C_AbilityTargetFilterTags::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterTags, CallFunc_Array_Get_Item_1) == 0x000080, "Member 'AIC_Monster_Default_C_AbilityTargetFilterTags::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterTags, CallFunc_Array_Add_ReturnValue) == 0x000088, "Member 'AIC_Monster_Default_C_AbilityTargetFilterTags::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterTags, CallFunc_Add_IntInt_ReturnValue_1) == 0x00008C, "Member 'AIC_Monster_Default_C_AbilityTargetFilterTags::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterTags, CallFunc_Array_Length_ReturnValue_1) == 0x000090, "Member 'AIC_Monster_Default_C_AbilityTargetFilterTags::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterTags, CallFunc_Less_IntInt_ReturnValue_1) == 0x000094, "Member 'AIC_Monster_Default_C_AbilityTargetFilterTags::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterTags, CallFunc_Array_Add_ReturnValue_1) == 0x000098, "Member 'AIC_Monster_Default_C_AbilityTargetFilterTags::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");

// Function AIC_Monster_Default.AIC_Monster_Default_C.AbilityTargetFilterThreatHighest
// 0x00E8 (0x00E8 - 0x0000)
struct AIC_Monster_Default_C_AbilityTargetFilterThreatHighest final
{
public:
	TArray<class AActor*>                         Targets;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	double                                        Threat;                                            // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Target;                                            // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Actors;                                            // 0x0020(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue;                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_Tgf_Monster_C*                      K2Node_DynamicCast_AsBP_Tgf_Monster;               // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TMap<class AActor*, float>                    CallFunc_GetThreatList_ReturnValue;                // 0x0060(0x0050)()
	TArray<class AActor*>                         CallFunc_Map_Keys_Keys;                            // 0x00B0(0x0010)(ReferenceParm)
	float                                         CallFunc_GetThreat_ReturnValue;                    // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CA[0x2];                                       // 0x00CA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00D3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet_Threat_ImplicitCast;            // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Less_DoubleDouble_B_ImplicitCast;         // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIC_Monster_Default_C_AbilityTargetFilterThreatHighest) == 0x000008, "Wrong alignment on AIC_Monster_Default_C_AbilityTargetFilterThreatHighest");
static_assert(sizeof(AIC_Monster_Default_C_AbilityTargetFilterThreatHighest) == 0x0000E8, "Wrong size on AIC_Monster_Default_C_AbilityTargetFilterThreatHighest");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterThreatHighest, Targets) == 0x000000, "Member 'AIC_Monster_Default_C_AbilityTargetFilterThreatHighest::Targets' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterThreatHighest, Threat) == 0x000010, "Member 'AIC_Monster_Default_C_AbilityTargetFilterThreatHighest::Threat' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterThreatHighest, Target) == 0x000018, "Member 'AIC_Monster_Default_C_AbilityTargetFilterThreatHighest::Target' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterThreatHighest, Actors) == 0x000020, "Member 'AIC_Monster_Default_C_AbilityTargetFilterThreatHighest::Actors' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterThreatHighest, CallFunc_Array_IsEmpty_ReturnValue) == 0x000030, "Member 'AIC_Monster_Default_C_AbilityTargetFilterThreatHighest::CallFunc_Array_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterThreatHighest, Temp_int_Array_Index_Variable) == 0x000034, "Member 'AIC_Monster_Default_C_AbilityTargetFilterThreatHighest::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterThreatHighest, Temp_int_Loop_Counter_Variable) == 0x000038, "Member 'AIC_Monster_Default_C_AbilityTargetFilterThreatHighest::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterThreatHighest, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'AIC_Monster_Default_C_AbilityTargetFilterThreatHighest::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterThreatHighest, CallFunc_K2_GetPawn_ReturnValue) == 0x000040, "Member 'AIC_Monster_Default_C_AbilityTargetFilterThreatHighest::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterThreatHighest, K2Node_DynamicCast_AsBP_Tgf_Monster) == 0x000048, "Member 'AIC_Monster_Default_C_AbilityTargetFilterThreatHighest::K2Node_DynamicCast_AsBP_Tgf_Monster' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterThreatHighest, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'AIC_Monster_Default_C_AbilityTargetFilterThreatHighest::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterThreatHighest, CallFunc_Array_Get_Item) == 0x000058, "Member 'AIC_Monster_Default_C_AbilityTargetFilterThreatHighest::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterThreatHighest, CallFunc_GetThreatList_ReturnValue) == 0x000060, "Member 'AIC_Monster_Default_C_AbilityTargetFilterThreatHighest::CallFunc_GetThreatList_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterThreatHighest, CallFunc_Map_Keys_Keys) == 0x0000B0, "Member 'AIC_Monster_Default_C_AbilityTargetFilterThreatHighest::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterThreatHighest, CallFunc_GetThreat_ReturnValue) == 0x0000C0, "Member 'AIC_Monster_Default_C_AbilityTargetFilterThreatHighest::CallFunc_GetThreat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterThreatHighest, CallFunc_Array_Length_ReturnValue) == 0x0000C4, "Member 'AIC_Monster_Default_C_AbilityTargetFilterThreatHighest::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterThreatHighest, CallFunc_Less_IntInt_ReturnValue) == 0x0000C8, "Member 'AIC_Monster_Default_C_AbilityTargetFilterThreatHighest::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterThreatHighest, CallFunc_IsValid_ReturnValue) == 0x0000C9, "Member 'AIC_Monster_Default_C_AbilityTargetFilterThreatHighest::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterThreatHighest, CallFunc_Array_Add_ReturnValue) == 0x0000CC, "Member 'AIC_Monster_Default_C_AbilityTargetFilterThreatHighest::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterThreatHighest, CallFunc_Less_DoubleDouble_ReturnValue) == 0x0000D0, "Member 'AIC_Monster_Default_C_AbilityTargetFilterThreatHighest::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterThreatHighest, CallFunc_IsValid_ReturnValue_1) == 0x0000D1, "Member 'AIC_Monster_Default_C_AbilityTargetFilterThreatHighest::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterThreatHighest, CallFunc_Not_PreBool_ReturnValue) == 0x0000D2, "Member 'AIC_Monster_Default_C_AbilityTargetFilterThreatHighest::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterThreatHighest, CallFunc_BooleanOR_ReturnValue) == 0x0000D3, "Member 'AIC_Monster_Default_C_AbilityTargetFilterThreatHighest::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterThreatHighest, K2Node_VariableSet_Threat_ImplicitCast) == 0x0000D8, "Member 'AIC_Monster_Default_C_AbilityTargetFilterThreatHighest::K2Node_VariableSet_Threat_ImplicitCast' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterThreatHighest, CallFunc_Less_DoubleDouble_B_ImplicitCast) == 0x0000E0, "Member 'AIC_Monster_Default_C_AbilityTargetFilterThreatHighest::CallFunc_Less_DoubleDouble_B_ImplicitCast' has a wrong offset!");

// Function AIC_Monster_Default.AIC_Monster_Default_C.AbilityTargetFilterThreatLowest
// 0x0100 (0x0100 - 0x0000)
struct AIC_Monster_Default_C_AbilityTargetFilterThreatLowest final
{
public:
	TArray<class AActor*>                         Targets;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	double                                        Threat;                                            // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Target;                                            // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Actors;                                            // 0x0020(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue;                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Tgf_Monster_C*                      K2Node_DynamicCast_AsBP_Tgf_Monster;               // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7A[0x6];                                       // 0x007A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class AActor*, float>                    CallFunc_GetThreatList_ReturnValue;                // 0x0080(0x0050)()
	float                                         CallFunc_GetThreat_ReturnValue;                    // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_Map_Keys_Keys;                            // 0x00D8(0x0010)(ReferenceParm)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EA[0x6];                                       // 0x00EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet_Threat_ImplicitCast;            // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_B_ImplicitCast;      // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIC_Monster_Default_C_AbilityTargetFilterThreatLowest) == 0x000008, "Wrong alignment on AIC_Monster_Default_C_AbilityTargetFilterThreatLowest");
static_assert(sizeof(AIC_Monster_Default_C_AbilityTargetFilterThreatLowest) == 0x000100, "Wrong size on AIC_Monster_Default_C_AbilityTargetFilterThreatLowest");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterThreatLowest, Targets) == 0x000000, "Member 'AIC_Monster_Default_C_AbilityTargetFilterThreatLowest::Targets' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterThreatLowest, Threat) == 0x000010, "Member 'AIC_Monster_Default_C_AbilityTargetFilterThreatLowest::Threat' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterThreatLowest, Target) == 0x000018, "Member 'AIC_Monster_Default_C_AbilityTargetFilterThreatLowest::Target' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterThreatLowest, Actors) == 0x000020, "Member 'AIC_Monster_Default_C_AbilityTargetFilterThreatLowest::Actors' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterThreatLowest, CallFunc_Array_IsEmpty_ReturnValue) == 0x000030, "Member 'AIC_Monster_Default_C_AbilityTargetFilterThreatLowest::CallFunc_Array_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterThreatLowest, Temp_int_Array_Index_Variable) == 0x000034, "Member 'AIC_Monster_Default_C_AbilityTargetFilterThreatLowest::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterThreatLowest, Temp_int_Loop_Counter_Variable) == 0x000038, "Member 'AIC_Monster_Default_C_AbilityTargetFilterThreatLowest::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterThreatLowest, CallFunc_Array_Get_Item) == 0x000040, "Member 'AIC_Monster_Default_C_AbilityTargetFilterThreatLowest::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterThreatLowest, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'AIC_Monster_Default_C_AbilityTargetFilterThreatLowest::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterThreatLowest, CallFunc_Less_IntInt_ReturnValue) == 0x00004C, "Member 'AIC_Monster_Default_C_AbilityTargetFilterThreatLowest::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterThreatLowest, CallFunc_Add_IntInt_ReturnValue) == 0x000050, "Member 'AIC_Monster_Default_C_AbilityTargetFilterThreatLowest::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterThreatLowest, CallFunc_IsValid_ReturnValue) == 0x000054, "Member 'AIC_Monster_Default_C_AbilityTargetFilterThreatLowest::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterThreatLowest, CallFunc_Array_Add_ReturnValue) == 0x000058, "Member 'AIC_Monster_Default_C_AbilityTargetFilterThreatLowest::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterThreatLowest, CallFunc_K2_GetPawn_ReturnValue) == 0x000060, "Member 'AIC_Monster_Default_C_AbilityTargetFilterThreatLowest::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterThreatLowest, CallFunc_IsValid_ReturnValue_1) == 0x000068, "Member 'AIC_Monster_Default_C_AbilityTargetFilterThreatLowest::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterThreatLowest, K2Node_DynamicCast_AsBP_Tgf_Monster) == 0x000070, "Member 'AIC_Monster_Default_C_AbilityTargetFilterThreatLowest::K2Node_DynamicCast_AsBP_Tgf_Monster' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterThreatLowest, K2Node_DynamicCast_bSuccess) == 0x000078, "Member 'AIC_Monster_Default_C_AbilityTargetFilterThreatLowest::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterThreatLowest, CallFunc_Not_PreBool_ReturnValue) == 0x000079, "Member 'AIC_Monster_Default_C_AbilityTargetFilterThreatLowest::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterThreatLowest, CallFunc_GetThreatList_ReturnValue) == 0x000080, "Member 'AIC_Monster_Default_C_AbilityTargetFilterThreatLowest::CallFunc_GetThreatList_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterThreatLowest, CallFunc_GetThreat_ReturnValue) == 0x0000D0, "Member 'AIC_Monster_Default_C_AbilityTargetFilterThreatLowest::CallFunc_GetThreat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterThreatLowest, CallFunc_Map_Keys_Keys) == 0x0000D8, "Member 'AIC_Monster_Default_C_AbilityTargetFilterThreatLowest::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterThreatLowest, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0000E8, "Member 'AIC_Monster_Default_C_AbilityTargetFilterThreatLowest::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterThreatLowest, CallFunc_BooleanOR_ReturnValue) == 0x0000E9, "Member 'AIC_Monster_Default_C_AbilityTargetFilterThreatLowest::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterThreatLowest, K2Node_VariableSet_Threat_ImplicitCast) == 0x0000F0, "Member 'AIC_Monster_Default_C_AbilityTargetFilterThreatLowest::K2Node_VariableSet_Threat_ImplicitCast' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterThreatLowest, CallFunc_Greater_DoubleDouble_B_ImplicitCast) == 0x0000F8, "Member 'AIC_Monster_Default_C_AbilityTargetFilterThreatLowest::CallFunc_Greater_DoubleDouble_B_ImplicitCast' has a wrong offset!");

// Function AIC_Monster_Default.AIC_Monster_Default_C.AbilityTargetFilterThreats
// 0x0100 (0x0100 - 0x0000)
struct AIC_Monster_Default_C_AbilityTargetFilterThreats final
{
public:
	TArray<class AActor*>                         Targets;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<class AActor*>                         Actors;                                            // 0x0010(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue;                // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E[0x2];                                       // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item_1;                         // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_Tgf_Monster_C*                      K2Node_DynamicCast_AsBP_Tgf_Monster;               // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasThreat_ReturnValue;                    // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_82[0x6];                                       // 0x0082(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class AActor*, float>                    CallFunc_GetThreatList_ReturnValue;                // 0x0088(0x0050)()
	TArray<class AActor*>                         CallFunc_Map_Keys_Keys;                            // 0x00D8(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item_2;                         // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x3];                                       // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIC_Monster_Default_C_AbilityTargetFilterThreats) == 0x000008, "Wrong alignment on AIC_Monster_Default_C_AbilityTargetFilterThreats");
static_assert(sizeof(AIC_Monster_Default_C_AbilityTargetFilterThreats) == 0x000100, "Wrong size on AIC_Monster_Default_C_AbilityTargetFilterThreats");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterThreats, Targets) == 0x000000, "Member 'AIC_Monster_Default_C_AbilityTargetFilterThreats::Targets' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterThreats, Actors) == 0x000010, "Member 'AIC_Monster_Default_C_AbilityTargetFilterThreats::Actors' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterThreats, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'AIC_Monster_Default_C_AbilityTargetFilterThreats::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterThreats, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'AIC_Monster_Default_C_AbilityTargetFilterThreats::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterThreats, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'AIC_Monster_Default_C_AbilityTargetFilterThreats::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterThreats, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'AIC_Monster_Default_C_AbilityTargetFilterThreats::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterThreats, CallFunc_Array_IsEmpty_ReturnValue) == 0x00002D, "Member 'AIC_Monster_Default_C_AbilityTargetFilterThreats::CallFunc_Array_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterThreats, Temp_int_Array_Index_Variable) == 0x000030, "Member 'AIC_Monster_Default_C_AbilityTargetFilterThreats::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterThreats, Temp_int_Array_Index_Variable_1) == 0x000034, "Member 'AIC_Monster_Default_C_AbilityTargetFilterThreats::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterThreats, CallFunc_Array_Get_Item) == 0x000038, "Member 'AIC_Monster_Default_C_AbilityTargetFilterThreats::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterThreats, Temp_int_Loop_Counter_Variable_1) == 0x000040, "Member 'AIC_Monster_Default_C_AbilityTargetFilterThreats::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterThreats, CallFunc_Add_IntInt_ReturnValue_1) == 0x000044, "Member 'AIC_Monster_Default_C_AbilityTargetFilterThreats::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterThreats, Temp_int_Array_Index_Variable_2) == 0x000048, "Member 'AIC_Monster_Default_C_AbilityTargetFilterThreats::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterThreats, CallFunc_Array_Get_Item_1) == 0x000050, "Member 'AIC_Monster_Default_C_AbilityTargetFilterThreats::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterThreats, CallFunc_Array_Length_ReturnValue_1) == 0x000058, "Member 'AIC_Monster_Default_C_AbilityTargetFilterThreats::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterThreats, CallFunc_Array_Add_ReturnValue) == 0x00005C, "Member 'AIC_Monster_Default_C_AbilityTargetFilterThreats::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterThreats, Temp_int_Loop_Counter_Variable_2) == 0x000060, "Member 'AIC_Monster_Default_C_AbilityTargetFilterThreats::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterThreats, CallFunc_Array_Add_ReturnValue_1) == 0x000064, "Member 'AIC_Monster_Default_C_AbilityTargetFilterThreats::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterThreats, CallFunc_Less_IntInt_ReturnValue_1) == 0x000068, "Member 'AIC_Monster_Default_C_AbilityTargetFilterThreats::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterThreats, CallFunc_Add_IntInt_ReturnValue_2) == 0x00006C, "Member 'AIC_Monster_Default_C_AbilityTargetFilterThreats::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterThreats, CallFunc_K2_GetPawn_ReturnValue) == 0x000070, "Member 'AIC_Monster_Default_C_AbilityTargetFilterThreats::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterThreats, K2Node_DynamicCast_AsBP_Tgf_Monster) == 0x000078, "Member 'AIC_Monster_Default_C_AbilityTargetFilterThreats::K2Node_DynamicCast_AsBP_Tgf_Monster' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterThreats, K2Node_DynamicCast_bSuccess) == 0x000080, "Member 'AIC_Monster_Default_C_AbilityTargetFilterThreats::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterThreats, CallFunc_HasThreat_ReturnValue) == 0x000081, "Member 'AIC_Monster_Default_C_AbilityTargetFilterThreats::CallFunc_HasThreat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterThreats, CallFunc_GetThreatList_ReturnValue) == 0x000088, "Member 'AIC_Monster_Default_C_AbilityTargetFilterThreats::CallFunc_GetThreatList_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterThreats, CallFunc_Map_Keys_Keys) == 0x0000D8, "Member 'AIC_Monster_Default_C_AbilityTargetFilterThreats::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterThreats, CallFunc_Array_Length_ReturnValue_2) == 0x0000E8, "Member 'AIC_Monster_Default_C_AbilityTargetFilterThreats::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterThreats, CallFunc_Array_Get_Item_2) == 0x0000F0, "Member 'AIC_Monster_Default_C_AbilityTargetFilterThreats::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterThreats, CallFunc_Less_IntInt_ReturnValue_2) == 0x0000F8, "Member 'AIC_Monster_Default_C_AbilityTargetFilterThreats::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AbilityTargetFilterThreats, CallFunc_Array_Add_ReturnValue_2) == 0x0000FC, "Member 'AIC_Monster_Default_C_AbilityTargetFilterThreats::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");

// Function AIC_Monster_Default.AIC_Monster_Default_C.AddPriorAbility
// 0x0028 (0x0028 - 0x0000)
struct AIC_Monster_Default_C_AddPriorAbility final
{
public:
	class UClass*                                 Param_Ability;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Chance;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTGF_FAbilitySelectorEntry             K2Node_MakeStruct_TGF_FAbilitySelectorEntry;       // 0x0010(0x0010)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIC_Monster_Default_C_AddPriorAbility) == 0x000008, "Wrong alignment on AIC_Monster_Default_C_AddPriorAbility");
static_assert(sizeof(AIC_Monster_Default_C_AddPriorAbility) == 0x000028, "Wrong size on AIC_Monster_Default_C_AddPriorAbility");
static_assert(offsetof(AIC_Monster_Default_C_AddPriorAbility, Param_Ability) == 0x000000, "Member 'AIC_Monster_Default_C_AddPriorAbility::Param_Ability' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AddPriorAbility, Chance) == 0x000008, "Member 'AIC_Monster_Default_C_AddPriorAbility::Chance' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AddPriorAbility, K2Node_MakeStruct_TGF_FAbilitySelectorEntry) == 0x000010, "Member 'AIC_Monster_Default_C_AddPriorAbility::K2Node_MakeStruct_TGF_FAbilitySelectorEntry' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AddPriorAbility, CallFunc_IsValidClass_ReturnValue) == 0x000020, "Member 'AIC_Monster_Default_C_AddPriorAbility::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_AddPriorAbility, CallFunc_Array_Add_ReturnValue) == 0x000024, "Member 'AIC_Monster_Default_C_AddPriorAbility::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function AIC_Monster_Default.AIC_Monster_Default_C.BndEvt__AC_Monster_Test_0_AIPerception_K2Node_ComponentBoundEvent_0_ActorPerceptionUpdatedDelegate__DelegateSignature
// 0x0060 (0x0060 - 0x0000)
struct AIC_Monster_Default_C_BndEvt__AC_Monster_Test_0_AIPerception_K2Node_ComponentBoundEvent_0_ActorPerceptionUpdatedDelegate__DelegateSignature final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FAIStimulus                            Stimulus;                                          // 0x0008(0x0058)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(AIC_Monster_Default_C_BndEvt__AC_Monster_Test_0_AIPerception_K2Node_ComponentBoundEvent_0_ActorPerceptionUpdatedDelegate__DelegateSignature) == 0x000008, "Wrong alignment on AIC_Monster_Default_C_BndEvt__AC_Monster_Test_0_AIPerception_K2Node_ComponentBoundEvent_0_ActorPerceptionUpdatedDelegate__DelegateSignature");
static_assert(sizeof(AIC_Monster_Default_C_BndEvt__AC_Monster_Test_0_AIPerception_K2Node_ComponentBoundEvent_0_ActorPerceptionUpdatedDelegate__DelegateSignature) == 0x000060, "Wrong size on AIC_Monster_Default_C_BndEvt__AC_Monster_Test_0_AIPerception_K2Node_ComponentBoundEvent_0_ActorPerceptionUpdatedDelegate__DelegateSignature");
static_assert(offsetof(AIC_Monster_Default_C_BndEvt__AC_Monster_Test_0_AIPerception_K2Node_ComponentBoundEvent_0_ActorPerceptionUpdatedDelegate__DelegateSignature, Actor) == 0x000000, "Member 'AIC_Monster_Default_C_BndEvt__AC_Monster_Test_0_AIPerception_K2Node_ComponentBoundEvent_0_ActorPerceptionUpdatedDelegate__DelegateSignature::Actor' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_BndEvt__AC_Monster_Test_0_AIPerception_K2Node_ComponentBoundEvent_0_ActorPerceptionUpdatedDelegate__DelegateSignature, Stimulus) == 0x000008, "Member 'AIC_Monster_Default_C_BndEvt__AC_Monster_Test_0_AIPerception_K2Node_ComponentBoundEvent_0_ActorPerceptionUpdatedDelegate__DelegateSignature::Stimulus' has a wrong offset!");

// Function AIC_Monster_Default.AIC_Monster_Default_C.CalcDistance
// 0x0060 (0x0060 - 0x0000)
struct AIC_Monster_Default_C_CalcDistance final
{
public:
	class AActor*                                 Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Distance;                                          // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Vector_Distance_ReturnValue;              // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIC_Monster_Default_C_CalcDistance) == 0x000008, "Wrong alignment on AIC_Monster_Default_C_CalcDistance");
static_assert(sizeof(AIC_Monster_Default_C_CalcDistance) == 0x000060, "Wrong size on AIC_Monster_Default_C_CalcDistance");
static_assert(offsetof(AIC_Monster_Default_C_CalcDistance, Target) == 0x000000, "Member 'AIC_Monster_Default_C_CalcDistance::Target' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_CalcDistance, Distance) == 0x000008, "Member 'AIC_Monster_Default_C_CalcDistance::Distance' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_CalcDistance, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'AIC_Monster_Default_C_CalcDistance::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_CalcDistance, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000018, "Member 'AIC_Monster_Default_C_CalcDistance::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_CalcDistance, CallFunc_K2_GetPawn_ReturnValue) == 0x000030, "Member 'AIC_Monster_Default_C_CalcDistance::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_CalcDistance, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000038, "Member 'AIC_Monster_Default_C_CalcDistance::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_CalcDistance, CallFunc_IsValid_ReturnValue_1) == 0x000050, "Member 'AIC_Monster_Default_C_CalcDistance::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_CalcDistance, CallFunc_Vector_Distance_ReturnValue) == 0x000058, "Member 'AIC_Monster_Default_C_CalcDistance::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");

// Function AIC_Monster_Default.AIC_Monster_Default_C.ClearAbility
// 0x0001 (0x0001 - 0x0000)
struct AIC_Monster_Default_C_ClearAbility final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIC_Monster_Default_C_ClearAbility) == 0x000001, "Wrong alignment on AIC_Monster_Default_C_ClearAbility");
static_assert(sizeof(AIC_Monster_Default_C_ClearAbility) == 0x000001, "Wrong size on AIC_Monster_Default_C_ClearAbility");
static_assert(offsetof(AIC_Monster_Default_C_ClearAbility, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'AIC_Monster_Default_C_ClearAbility::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function AIC_Monster_Default.AIC_Monster_Default_C.ClearAbilityInterval
// 0x0030 (0x0030 - 0x0000)
struct AIC_Monster_Default_C_ClearAbilityInterval final
{
public:
	struct FGameplayTagContainer                  CallFunc_MakeGameplayTagContainerFromTag_ReturnValue; // 0x0000(0x0020)()
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddLooseGameplayTags_ReturnValue;         // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIC_Monster_Default_C_ClearAbilityInterval) == 0x000008, "Wrong alignment on AIC_Monster_Default_C_ClearAbilityInterval");
static_assert(sizeof(AIC_Monster_Default_C_ClearAbilityInterval) == 0x000030, "Wrong size on AIC_Monster_Default_C_ClearAbilityInterval");
static_assert(offsetof(AIC_Monster_Default_C_ClearAbilityInterval, CallFunc_MakeGameplayTagContainerFromTag_ReturnValue) == 0x000000, "Member 'AIC_Monster_Default_C_ClearAbilityInterval::CallFunc_MakeGameplayTagContainerFromTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ClearAbilityInterval, CallFunc_K2_GetPawn_ReturnValue) == 0x000020, "Member 'AIC_Monster_Default_C_ClearAbilityInterval::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ClearAbilityInterval, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'AIC_Monster_Default_C_ClearAbilityInterval::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ClearAbilityInterval, CallFunc_AddLooseGameplayTags_ReturnValue) == 0x000029, "Member 'AIC_Monster_Default_C_ClearAbilityInterval::CallFunc_AddLooseGameplayTags_ReturnValue' has a wrong offset!");

// Function AIC_Monster_Default.AIC_Monster_Default_C.ExecuteUbergraph_AIC_Monster_Default
// 0x08E8 (0x08E8 - 0x0000)
struct AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAsyncAction_LevelReady*                CallFunc_WaitForLevelReady_ReturnValue;            // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0020(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0034(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AActor* Target)>         K2Node_CreateDelegate_OutputDelegate_3;            // 0x0044(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AActor* Actor, const struct FGameplayTagContainer& InstigatorTags, const struct FGameplayTagContainer& TargetTags, float Damage, struct FGameplayEffectSpec& Spec)> K2Node_CreateDelegate_OutputDelegate_4;            // 0x0054(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_5;            // 0x0064(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_6;            // 0x0074(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_ComponentBoundEvent_Actor;                  // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FAIStimulus                            K2Node_ComponentBoundEvent_Stimulus;               // 0x0090(0x0058)(NoDestructor)
	bool                                          CallFunc_IsInCombatZone_Result;                    // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UAISense>                   CallFunc_GetSenseClassForStimulus_ReturnValue;     // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue_1;      // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FA[0x2];                                       // 0x00FA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsTimerActiveHandle_ReturnValue;       // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_102[0x6];                                      // 0x0102(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_OwningActor;                    // 0x0108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsHostile_Result;                         // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_112[0x6];                                      // 0x0112(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_Event_PossessedPawn;                        // 0x0118(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_UnpossessedPawn;                      // 0x0120(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_Tgf_Monster_C*                      K2Node_DynamicCast_AsBP_Tgf_Monster;               // 0x0128(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDormantSensesEnabled_ReturnValue;       // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDormant_ReturnValue;                    // 0x0132(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_133[0x5];                                      // 0x0133(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Tgf_Monster_C*                      K2Node_DynamicCast_AsBP_Tgf_Monster_1;             // 0x0138(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0142(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_143[0x5];                                      // 0x0143(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Tgf_Monster_C*                      K2Node_DynamicCast_AsBP_Tgf_Monster_2;             // 0x0148(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTgfAttributeComponent*                 CallFunc_GetComponentByClass_ReturnValue;          // 0x0158(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsStareEnabled_Result;                    // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_162[0x6];                                      // 0x0162(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0168(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTgfAttributeComponent*                 CallFunc_GetComponentByClass_ReturnValue_1;        // 0x0180(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0188(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x01A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_1;            // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A9[0x7];                                      // 0x01A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Tgf_Monster_C*                      K2Node_DynamicCast_AsBP_Tgf_Monster_3;             // 0x01B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldPauseCombatTimer_Result;            // 0x01B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BA[0x6];                                      // 0x01BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x01C0(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x01C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldPauseCombatTimer_Result_1;          // 0x01CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x01CB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CC[0x4];                                      // 0x01CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x01D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetThreatTarget_ReturnValue;              // 0x01E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x01F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_209[0x7];                                      // 0x0209(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_VectorToString_ReturnValue;          // 0x0210(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0220(0x0018)()
	float                                         CallFunc_RemoveThreat_ReturnValue;                 // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23C[0x4];                                      // 0x023C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0240(0x0050)(HasGetValueTypeHash)
	double                                        CallFunc_CalcDistance_Distance;                    // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue_1;                 // 0x0298(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A1[0x7];                                      // 0x02A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Tgf_Monster_C*                      K2Node_DynamicCast_AsBP_Tgf_Monster_4;             // 0x02A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B1[0x7];                                      // 0x02B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue;            // 0x02B8(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x02D0(0x0050)(HasGetValueTypeHash)
	float                                         CallFunc_AddThreat_ReturnValue;                    // 0x0320(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_324[0x4];                                      // 0x0324(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_3;        // 0x0328(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_VectorToString_ReturnValue_1;        // 0x0340(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0350(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0358(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0370(0x0050)(HasGetValueTypeHash)
	double                                        CallFunc_Vector_Distance_ReturnValue;              // 0x03C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x03C8(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0418(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0428(0x0018)()
	bool                                          CallFunc_RunBehaviorTree_ReturnValue;              // 0x0440(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsTargetable_Result;                      // 0x0441(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValueAsEnum_ReturnValue;               // 0x0442(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0443(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0444(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_445[0x3];                                      // 0x0445(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetTimeSeconds_ReturnValue;               // 0x0448(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetTimeSeconds_ReturnValue_1;             // 0x0450(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueAsFloat_ReturnValue;              // 0x0458(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_2;       // 0x045C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45D[0x3];                                      // 0x045D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0460(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetTimeSeconds_ReturnValue_2;             // 0x0468(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue_2;                 // 0x0470(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_Tgf_Monster_C*                      K2Node_DynamicCast_AsBP_Tgf_Monster_5;             // 0x0478(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0480(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_3;       // 0x0481(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDormant_ReturnValue_1;                  // 0x0482(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_483[0x1];                                      // 0x0483(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_7;            // 0x0484(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInCombat_Result;                        // 0x0494(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_495[0x3];                                      // 0x0495(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x0498(0x0008)(NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetAbilityTarget_Target;                  // 0x04A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x04A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsTargetable_Result_1;                    // 0x04A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x04AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4AB[0x5];                                      // 0x04AB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_Target;                         // 0x04B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsTimerPausedHandle_ReturnValue;       // 0x04B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B9[0x7];                                      // 0x04B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_Actor;                          // 0x04C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  K2Node_CustomEvent_InstigatorTags;                 // 0x04C8(0x0020)()
	struct FGameplayTagContainer                  K2Node_CustomEvent_TargetTags;                     // 0x04E8(0x0020)()
	float                                         K2Node_CustomEvent_Damage;                         // 0x0508(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_50C[0x4];                                      // 0x050C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEffectSpec                    K2Node_CustomEvent_Spec;                           // 0x0510(0x0298)(ConstParm)
	bool                                          CallFunc_K2_IsValidTimerHandle_ReturnValue;        // 0x07A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInCombat_Result_1;                      // 0x07A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7AA[0x6];                                      // 0x07AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_FloatToVector_ReturnValue;           // 0x07B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetValueAsVector_ReturnValue;             // 0x07C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x07E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Vector_Distance_ReturnValue_1;            // 0x07F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0800(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_4;       // 0x0818(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_819[0x3];                                      // 0x0819(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AActor* OwningActor)>    K2Node_CreateDelegate_OutputDelegate_8;            // 0x081C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsValidTimerHandle_ReturnValue_1;      // 0x082C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsTimerPausedHandle_ReturnValue_1;     // 0x082D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_82E[0x2];                                      // 0x082E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UAsyncAction_ExperienceReady*           CallFunc_WaitForExperienceReady_ReturnValue;       // 0x0830(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0838(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x0839(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_83A[0x6];                                      // 0x083A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_MakeGameplayTagContainerFromTag_ReturnValue; // 0x0840(0x0020)()
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue;   // 0x0860(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_861[0x3];                                      // 0x0861(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetValueAsInt_ReturnValue;                // 0x0864(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  CallFunc_MakeGameplayTagContainerFromTag_ReturnValue_1; // 0x0868(0x0020)()
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue_1; // 0x0888(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_889[0x7];                                      // 0x0889(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetAbility_Result;                        // 0x0890(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActivatingAbility_Result;               // 0x0898(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_899[0x7];                                      // 0x0899(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_ClassDynamicCast_AsTgf_Gameplay_Ability;    // 0x08A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x08A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8A9[0x7];                                      // 0x08A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTgfGameplayAbility*                    CallFunc_GetClassDefaultObject_ReturnValue;        // 0x08B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActivatingAbility_Result_1;             // 0x08B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x08B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8BA[0x6];                                      // 0x08BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x08C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimerDelegate_Time_ImplicitCast;    // 0x08C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimerDelegate_Time_ImplicitCast_1;  // 0x08CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetValueAsFloat_FloatValue_ImplicitCast;  // 0x08D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D4[0x4];                                      // 0x08D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_B_ImplicitCast;     // 0x08D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetValueAsFloat_FloatValue_ImplicitCast_1; // 0x08E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default) == 0x000008, "Wrong alignment on AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default");
static_assert(sizeof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default) == 0x0008E8, "Wrong size on AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, EntryPoint) == 0x000000, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::EntryPoint' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, CallFunc_WaitForLevelReady_ReturnValue) == 0x000018, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::CallFunc_WaitForLevelReady_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, K2Node_CreateDelegate_OutputDelegate_1) == 0x000020, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, K2Node_CreateDelegate_OutputDelegate_2) == 0x000034, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, K2Node_CreateDelegate_OutputDelegate_3) == 0x000044, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, K2Node_CreateDelegate_OutputDelegate_4) == 0x000054, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, K2Node_CreateDelegate_OutputDelegate_5) == 0x000064, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, K2Node_CreateDelegate_OutputDelegate_6) == 0x000074, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, K2Node_ComponentBoundEvent_Actor) == 0x000088, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::K2Node_ComponentBoundEvent_Actor' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, K2Node_ComponentBoundEvent_Stimulus) == 0x000090, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::K2Node_ComponentBoundEvent_Stimulus' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, CallFunc_IsInCombatZone_Result) == 0x0000E8, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::CallFunc_IsInCombatZone_Result' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, CallFunc_GetSenseClassForStimulus_ReturnValue) == 0x0000F0, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::CallFunc_GetSenseClassForStimulus_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x0000F8, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, CallFunc_EqualEqual_ClassClass_ReturnValue_1) == 0x0000F9, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::CallFunc_EqualEqual_ClassClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, K2Node_Event_DeltaSeconds) == 0x0000FC, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, CallFunc_MakeLiteralByte_ReturnValue) == 0x000100, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, CallFunc_K2_IsTimerActiveHandle_ReturnValue) == 0x000101, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::CallFunc_K2_IsTimerActiveHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, K2Node_CustomEvent_OwningActor) == 0x000108, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::K2Node_CustomEvent_OwningActor' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, CallFunc_IsHostile_Result) == 0x000110, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::CallFunc_IsHostile_Result' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, CallFunc_IsValid_ReturnValue_1) == 0x000111, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, K2Node_Event_PossessedPawn) == 0x000118, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::K2Node_Event_PossessedPawn' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, K2Node_Event_UnpossessedPawn) == 0x000120, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::K2Node_Event_UnpossessedPawn' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, K2Node_DynamicCast_AsBP_Tgf_Monster) == 0x000128, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::K2Node_DynamicCast_AsBP_Tgf_Monster' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, K2Node_DynamicCast_bSuccess) == 0x000130, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, CallFunc_IsDormantSensesEnabled_ReturnValue) == 0x000131, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::CallFunc_IsDormantSensesEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, CallFunc_IsDormant_ReturnValue) == 0x000132, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::CallFunc_IsDormant_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, K2Node_DynamicCast_AsBP_Tgf_Monster_1) == 0x000138, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::K2Node_DynamicCast_AsBP_Tgf_Monster_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, K2Node_DynamicCast_bSuccess_1) == 0x000140, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, CallFunc_Not_PreBool_ReturnValue) == 0x000141, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, CallFunc_BooleanOR_ReturnValue) == 0x000142, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, K2Node_DynamicCast_AsBP_Tgf_Monster_2) == 0x000148, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::K2Node_DynamicCast_AsBP_Tgf_Monster_2' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, K2Node_DynamicCast_bSuccess_2) == 0x000150, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, CallFunc_GetComponentByClass_ReturnValue) == 0x000158, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, CallFunc_IsValid_ReturnValue_2) == 0x000160, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, CallFunc_IsStareEnabled_Result) == 0x000161, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::CallFunc_IsStareEnabled_Result' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, CallFunc_GetActorForwardVector_ReturnValue) == 0x000168, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, CallFunc_GetComponentByClass_ReturnValue_1) == 0x000180, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::CallFunc_GetComponentByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000188, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, CallFunc_K2_GetPawn_ReturnValue) == 0x0001A0, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, CallFunc_MakeLiteralByte_ReturnValue_1) == 0x0001A8, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::CallFunc_MakeLiteralByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, K2Node_DynamicCast_AsBP_Tgf_Monster_3) == 0x0001B0, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::K2Node_DynamicCast_AsBP_Tgf_Monster_3' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, K2Node_DynamicCast_bSuccess_3) == 0x0001B8, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, CallFunc_ShouldPauseCombatTimer_Result) == 0x0001B9, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::CallFunc_ShouldPauseCombatTimer_Result' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x0001C0, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0001C8, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x0001C9, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, CallFunc_ShouldPauseCombatTimer_Result_1) == 0x0001CA, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::CallFunc_ShouldPauseCombatTimer_Result_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, CallFunc_BooleanAND_ReturnValue) == 0x0001CB, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x0001D0, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, CallFunc_GetThreatTarget_ReturnValue) == 0x0001E8, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::CallFunc_GetThreatTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x0001F0, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, CallFunc_IsValid_ReturnValue_3) == 0x000208, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, CallFunc_Conv_VectorToString_ReturnValue) == 0x000210, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::CallFunc_Conv_VectorToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, CallFunc_Conv_StringToText_ReturnValue) == 0x000220, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, CallFunc_RemoveThreat_ReturnValue) == 0x000238, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::CallFunc_RemoveThreat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, K2Node_MakeStruct_FormatArgumentData) == 0x000240, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, CallFunc_CalcDistance_Distance) == 0x000290, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::CallFunc_CalcDistance_Distance' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, CallFunc_K2_GetPawn_ReturnValue_1) == 0x000298, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::CallFunc_K2_GetPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x0002A0, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, K2Node_DynamicCast_AsBP_Tgf_Monster_4) == 0x0002A8, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::K2Node_DynamicCast_AsBP_Tgf_Monster_4' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, K2Node_DynamicCast_bSuccess_4) == 0x0002B0, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, CallFunc_Conv_ObjectToText_ReturnValue) == 0x0002B8, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::CallFunc_Conv_ObjectToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, K2Node_MakeStruct_FormatArgumentData_1) == 0x0002D0, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, CallFunc_AddThreat_ReturnValue) == 0x000320, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::CallFunc_AddThreat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, CallFunc_K2_GetActorLocation_ReturnValue_3) == 0x000328, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::CallFunc_K2_GetActorLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, CallFunc_Conv_VectorToString_ReturnValue_1) == 0x000340, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::CallFunc_Conv_VectorToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000350, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000358, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, K2Node_MakeStruct_FormatArgumentData_2) == 0x000370, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, CallFunc_Vector_Distance_ReturnValue) == 0x0003C0, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, K2Node_MakeStruct_FormatArgumentData_3) == 0x0003C8, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, K2Node_MakeArray_Array) == 0x000418, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, CallFunc_Format_ReturnValue) == 0x000428, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, CallFunc_RunBehaviorTree_ReturnValue) == 0x000440, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::CallFunc_RunBehaviorTree_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, CallFunc_IsTargetable_Result) == 0x000441, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::CallFunc_IsTargetable_Result' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, CallFunc_GetValueAsEnum_ReturnValue) == 0x000442, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::CallFunc_GetValueAsEnum_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, CallFunc_GetValidValue_ReturnValue) == 0x000443, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, K2Node_SwitchEnum_CmpSuccess) == 0x000444, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, CallFunc_GetTimeSeconds_ReturnValue) == 0x000448, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::CallFunc_GetTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, CallFunc_GetTimeSeconds_ReturnValue_1) == 0x000450, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::CallFunc_GetTimeSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, CallFunc_GetValueAsFloat_ReturnValue) == 0x000458, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::CallFunc_GetValueAsFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, CallFunc_Greater_DoubleDouble_ReturnValue_2) == 0x00045C, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::CallFunc_Greater_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000460, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, CallFunc_GetTimeSeconds_ReturnValue_2) == 0x000468, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::CallFunc_GetTimeSeconds_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, CallFunc_K2_GetPawn_ReturnValue_2) == 0x000470, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::CallFunc_K2_GetPawn_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, K2Node_DynamicCast_AsBP_Tgf_Monster_5) == 0x000478, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::K2Node_DynamicCast_AsBP_Tgf_Monster_5' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, K2Node_DynamicCast_bSuccess_5) == 0x000480, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, CallFunc_Greater_DoubleDouble_ReturnValue_3) == 0x000481, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::CallFunc_Greater_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, CallFunc_IsDormant_ReturnValue_1) == 0x000482, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::CallFunc_IsDormant_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, K2Node_CreateDelegate_OutputDelegate_7) == 0x000484, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, CallFunc_IsInCombat_Result) == 0x000494, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::CallFunc_IsInCombat_Result' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x000498, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, CallFunc_GetAbilityTarget_Target) == 0x0004A0, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::CallFunc_GetAbilityTarget_Target' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, CallFunc_IsValid_ReturnValue_4) == 0x0004A8, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, CallFunc_IsTargetable_Result_1) == 0x0004A9, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::CallFunc_IsTargetable_Result_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, CallFunc_Not_PreBool_ReturnValue_1) == 0x0004AA, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, K2Node_CustomEvent_Target) == 0x0004B0, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::K2Node_CustomEvent_Target' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, CallFunc_K2_IsTimerPausedHandle_ReturnValue) == 0x0004B8, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::CallFunc_K2_IsTimerPausedHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, K2Node_CustomEvent_Actor) == 0x0004C0, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::K2Node_CustomEvent_Actor' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, K2Node_CustomEvent_InstigatorTags) == 0x0004C8, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::K2Node_CustomEvent_InstigatorTags' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, K2Node_CustomEvent_TargetTags) == 0x0004E8, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::K2Node_CustomEvent_TargetTags' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, K2Node_CustomEvent_Damage) == 0x000508, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::K2Node_CustomEvent_Damage' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, K2Node_CustomEvent_Spec) == 0x000510, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::K2Node_CustomEvent_Spec' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, CallFunc_K2_IsValidTimerHandle_ReturnValue) == 0x0007A8, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::CallFunc_K2_IsValidTimerHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, CallFunc_IsInCombat_Result_1) == 0x0007A9, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::CallFunc_IsInCombat_Result_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, CallFunc_Conv_FloatToVector_ReturnValue) == 0x0007B0, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::CallFunc_Conv_FloatToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, CallFunc_GetValueAsVector_ReturnValue) == 0x0007C8, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::CallFunc_GetValueAsVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, CallFunc_Multiply_VectorVector_ReturnValue) == 0x0007E0, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, CallFunc_Vector_Distance_ReturnValue_1) == 0x0007F8, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::CallFunc_Vector_Distance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, CallFunc_Add_VectorVector_ReturnValue) == 0x000800, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, CallFunc_Greater_DoubleDouble_ReturnValue_4) == 0x000818, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::CallFunc_Greater_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, K2Node_CreateDelegate_OutputDelegate_8) == 0x00081C, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, CallFunc_K2_IsValidTimerHandle_ReturnValue_1) == 0x00082C, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::CallFunc_K2_IsValidTimerHandle_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, CallFunc_K2_IsTimerPausedHandle_ReturnValue_1) == 0x00082D, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::CallFunc_K2_IsTimerPausedHandle_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, CallFunc_WaitForExperienceReady_ReturnValue) == 0x000830, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::CallFunc_WaitForExperienceReady_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, CallFunc_IsValid_ReturnValue_5) == 0x000838, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, CallFunc_IsValid_ReturnValue_6) == 0x000839, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, CallFunc_MakeGameplayTagContainerFromTag_ReturnValue) == 0x000840, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::CallFunc_MakeGameplayTagContainerFromTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, CallFunc_HasAnyMatchingGameplayTags_ReturnValue) == 0x000860, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::CallFunc_HasAnyMatchingGameplayTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, CallFunc_GetValueAsInt_ReturnValue) == 0x000864, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::CallFunc_GetValueAsInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, CallFunc_MakeGameplayTagContainerFromTag_ReturnValue_1) == 0x000868, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::CallFunc_MakeGameplayTagContainerFromTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, CallFunc_HasAnyMatchingGameplayTags_ReturnValue_1) == 0x000888, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::CallFunc_HasAnyMatchingGameplayTags_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, CallFunc_GetAbility_Result) == 0x000890, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::CallFunc_GetAbility_Result' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, CallFunc_IsActivatingAbility_Result) == 0x000898, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::CallFunc_IsActivatingAbility_Result' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, K2Node_ClassDynamicCast_AsTgf_Gameplay_Ability) == 0x0008A0, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::K2Node_ClassDynamicCast_AsTgf_Gameplay_Ability' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, K2Node_ClassDynamicCast_bSuccess) == 0x0008A8, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, CallFunc_GetClassDefaultObject_ReturnValue) == 0x0008B0, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::CallFunc_GetClassDefaultObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, CallFunc_IsActivatingAbility_Result_1) == 0x0008B8, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::CallFunc_IsActivatingAbility_Result_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, CallFunc_IsValid_ReturnValue_7) == 0x0008B9, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x0008C0, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, CallFunc_K2_SetTimerDelegate_Time_ImplicitCast) == 0x0008C8, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::CallFunc_K2_SetTimerDelegate_Time_ImplicitCast' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, CallFunc_K2_SetTimerDelegate_Time_ImplicitCast_1) == 0x0008CC, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::CallFunc_K2_SetTimerDelegate_Time_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, CallFunc_SetValueAsFloat_FloatValue_ImplicitCast) == 0x0008D0, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::CallFunc_SetValueAsFloat_FloatValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, CallFunc_Subtract_DoubleDouble_B_ImplicitCast) == 0x0008D8, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::CallFunc_Subtract_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default, CallFunc_SetValueAsFloat_FloatValue_ImplicitCast_1) == 0x0008E0, "Member 'AIC_Monster_Default_C_ExecuteUbergraph_AIC_Monster_Default::CallFunc_SetValueAsFloat_FloatValue_ImplicitCast_1' has a wrong offset!");

// Function AIC_Monster_Default.AIC_Monster_Default_C.FilterAbilities
// 0x00D8 (0x00D8 - 0x0000)
struct AIC_Monster_Default_C_FilterAbilities final
{
public:
	class UClass*                                 Param_Ability;                                     // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTgfAIAbilityTarget                    Param_AbilityTarget;                               // 0x0008(0x0030)(Parm, OutParm, NoDestructor)
	class UClass*                                 CallFunc_FilterAbilityFromSelector_Ability;        // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTgfAIAbilityTarget                    CallFunc_FilterAbilityFromSelector_AbilityTarget;  // 0x0040(0x0030)(NoDestructor)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_72[0x6];                                       // 0x0072(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_Tgf_Monster_C*                      K2Node_DynamicCast_AsBP_Tgf_Monster;               // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FTGF_FAbilitySelectorEntry>     CallFunc_FilterAbilitySelector_Result;             // 0x0090(0x0010)(ReferenceParm)
	class UClass*                                 CallFunc_FilterAbilityFromSelector_Ability_1;      // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTgfAIAbilityTarget                    CallFunc_FilterAbilityFromSelector_AbilityTarget_1; // 0x00A8(0x0030)(NoDestructor)
};
static_assert(alignof(AIC_Monster_Default_C_FilterAbilities) == 0x000008, "Wrong alignment on AIC_Monster_Default_C_FilterAbilities");
static_assert(sizeof(AIC_Monster_Default_C_FilterAbilities) == 0x0000D8, "Wrong size on AIC_Monster_Default_C_FilterAbilities");
static_assert(offsetof(AIC_Monster_Default_C_FilterAbilities, Param_Ability) == 0x000000, "Member 'AIC_Monster_Default_C_FilterAbilities::Param_Ability' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_FilterAbilities, Param_AbilityTarget) == 0x000008, "Member 'AIC_Monster_Default_C_FilterAbilities::Param_AbilityTarget' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_FilterAbilities, CallFunc_FilterAbilityFromSelector_Ability) == 0x000038, "Member 'AIC_Monster_Default_C_FilterAbilities::CallFunc_FilterAbilityFromSelector_Ability' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_FilterAbilities, CallFunc_FilterAbilityFromSelector_AbilityTarget) == 0x000040, "Member 'AIC_Monster_Default_C_FilterAbilities::CallFunc_FilterAbilityFromSelector_AbilityTarget' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_FilterAbilities, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x000070, "Member 'AIC_Monster_Default_C_FilterAbilities::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_FilterAbilities, CallFunc_IsValidClass_ReturnValue) == 0x000071, "Member 'AIC_Monster_Default_C_FilterAbilities::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_FilterAbilities, CallFunc_K2_GetPawn_ReturnValue) == 0x000078, "Member 'AIC_Monster_Default_C_FilterAbilities::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_FilterAbilities, K2Node_DynamicCast_AsBP_Tgf_Monster) == 0x000080, "Member 'AIC_Monster_Default_C_FilterAbilities::K2Node_DynamicCast_AsBP_Tgf_Monster' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_FilterAbilities, K2Node_DynamicCast_bSuccess) == 0x000088, "Member 'AIC_Monster_Default_C_FilterAbilities::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_FilterAbilities, CallFunc_FilterAbilitySelector_Result) == 0x000090, "Member 'AIC_Monster_Default_C_FilterAbilities::CallFunc_FilterAbilitySelector_Result' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_FilterAbilities, CallFunc_FilterAbilityFromSelector_Ability_1) == 0x0000A0, "Member 'AIC_Monster_Default_C_FilterAbilities::CallFunc_FilterAbilityFromSelector_Ability_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_FilterAbilities, CallFunc_FilterAbilityFromSelector_AbilityTarget_1) == 0x0000A8, "Member 'AIC_Monster_Default_C_FilterAbilities::CallFunc_FilterAbilityFromSelector_AbilityTarget_1' has a wrong offset!");

// Function AIC_Monster_Default.AIC_Monster_Default_C.FilterAbility
// 0x0200 (0x0200 - 0x0000)
struct AIC_Monster_Default_C_FilterAbility final
{
public:
	class UClass*                                 Param_Ability;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTgfAIAbilityTarget                    Target;                                            // 0x0010(0x0030)(Parm, OutParm, NoDestructor)
	bool                                          ThreatTarget;                                      // 0x0040(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Targets;                                           // 0x0048(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	bool                                          FilterResult;                                      // 0x0058(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FilterOpResult;                                    // 0x0059(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A[0x6];                                       // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UTgfAIAbilityRule*                      Rule;                                              // 0x0060(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAbilityReady_Ready;                     // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A[0x6];                                       // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_ClassDynamicCast_AsTgf_Gameplay_Ability;    // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7A[0x6];                                       // 0x007A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UTgfGameplayAbility*                    CallFunc_GetClassDefaultObject_ReturnValue;        // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8A[0x2];                                       // 0x008A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_Tgf_Monster_C*                      K2Node_DynamicCast_AsBP_Tgf_Monster;               // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetThreatTarget_ReturnValue;              // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AbilityFilterBoss_Result;                 // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C2[0x6];                                       // 0x00C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTgfAIAbilityTarget                    K2Node_MakeStruct_TgfAIAbilityTarget;              // 0x00C8(0x0030)(NoDestructor)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue;                // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable_1;        // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FB[0x1];                                       // 0x00FB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0100(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTgfAIAbilityTarget                    K2Node_MakeStruct_TgfAIAbilityTarget_1;            // 0x0108(0x0030)(NoDestructor)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue_1;              // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTgfAIAbilityTargetFilter              CallFunc_Array_Get_Item_1;                         // 0x0140(0x0038)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x017C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x017D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x017E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x017F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTgfAIAbilityTarget                    K2Node_MakeStruct_TgfAIAbilityTarget_2;            // 0x0180(0x0030)(NoDestructor)
	bool                                          CallFunc_AbilityFilterNone_Result;                 // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x01B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x01B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B3[0x5];                                      // 0x01B3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTgfAIAbilityFilter                    CallFunc_Array_Get_Item_2;                         // 0x01B8(0x0038)()
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x01F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AbilityFilterTags_Result;                 // 0x01F5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x01F6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AbilityFilterSummonsCount_Result;         // 0x01F7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AbilityFilterEnemyBehind_Result;          // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AbilityFilterHostileCount_Result;         // 0x01F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AbilityFilterFriendlyCount_Result;        // 0x01FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AbilityFilterHealthHigh_Result;           // 0x01FB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AbilityFilterHealthLow_Result;            // 0x01FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_3;                    // 0x01FD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIC_Monster_Default_C_FilterAbility) == 0x000008, "Wrong alignment on AIC_Monster_Default_C_FilterAbility");
static_assert(sizeof(AIC_Monster_Default_C_FilterAbility) == 0x000200, "Wrong size on AIC_Monster_Default_C_FilterAbility");
static_assert(offsetof(AIC_Monster_Default_C_FilterAbility, Param_Ability) == 0x000000, "Member 'AIC_Monster_Default_C_FilterAbility::Param_Ability' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_FilterAbility, Result) == 0x000008, "Member 'AIC_Monster_Default_C_FilterAbility::Result' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_FilterAbility, Target) == 0x000010, "Member 'AIC_Monster_Default_C_FilterAbility::Target' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_FilterAbility, ThreatTarget) == 0x000040, "Member 'AIC_Monster_Default_C_FilterAbility::ThreatTarget' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_FilterAbility, Targets) == 0x000048, "Member 'AIC_Monster_Default_C_FilterAbility::Targets' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_FilterAbility, FilterResult) == 0x000058, "Member 'AIC_Monster_Default_C_FilterAbility::FilterResult' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_FilterAbility, FilterOpResult) == 0x000059, "Member 'AIC_Monster_Default_C_FilterAbility::FilterOpResult' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_FilterAbility, Rule) == 0x000060, "Member 'AIC_Monster_Default_C_FilterAbility::Rule' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_FilterAbility, CallFunc_IsValidClass_ReturnValue) == 0x000068, "Member 'AIC_Monster_Default_C_FilterAbility::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_FilterAbility, CallFunc_IsAbilityReady_Ready) == 0x000069, "Member 'AIC_Monster_Default_C_FilterAbility::CallFunc_IsAbilityReady_Ready' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_FilterAbility, K2Node_ClassDynamicCast_AsTgf_Gameplay_Ability) == 0x000070, "Member 'AIC_Monster_Default_C_FilterAbility::K2Node_ClassDynamicCast_AsTgf_Gameplay_Ability' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_FilterAbility, K2Node_ClassDynamicCast_bSuccess) == 0x000078, "Member 'AIC_Monster_Default_C_FilterAbility::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_FilterAbility, Temp_bool_True_if_break_was_hit_Variable) == 0x000079, "Member 'AIC_Monster_Default_C_FilterAbility::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_FilterAbility, CallFunc_GetClassDefaultObject_ReturnValue) == 0x000080, "Member 'AIC_Monster_Default_C_FilterAbility::CallFunc_GetClassDefaultObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_FilterAbility, CallFunc_Not_PreBool_ReturnValue) == 0x000088, "Member 'AIC_Monster_Default_C_FilterAbility::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_FilterAbility, CallFunc_IsValid_ReturnValue) == 0x000089, "Member 'AIC_Monster_Default_C_FilterAbility::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_FilterAbility, Temp_int_Array_Index_Variable) == 0x00008C, "Member 'AIC_Monster_Default_C_FilterAbility::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_FilterAbility, Temp_int_Loop_Counter_Variable) == 0x000090, "Member 'AIC_Monster_Default_C_FilterAbility::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_FilterAbility, CallFunc_Add_IntInt_ReturnValue) == 0x000094, "Member 'AIC_Monster_Default_C_FilterAbility::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_FilterAbility, Temp_int_Loop_Counter_Variable_1) == 0x000098, "Member 'AIC_Monster_Default_C_FilterAbility::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_FilterAbility, CallFunc_Add_IntInt_ReturnValue_1) == 0x00009C, "Member 'AIC_Monster_Default_C_FilterAbility::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_FilterAbility, CallFunc_K2_GetPawn_ReturnValue) == 0x0000A0, "Member 'AIC_Monster_Default_C_FilterAbility::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_FilterAbility, K2Node_DynamicCast_AsBP_Tgf_Monster) == 0x0000A8, "Member 'AIC_Monster_Default_C_FilterAbility::K2Node_DynamicCast_AsBP_Tgf_Monster' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_FilterAbility, K2Node_DynamicCast_bSuccess) == 0x0000B0, "Member 'AIC_Monster_Default_C_FilterAbility::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_FilterAbility, CallFunc_GetThreatTarget_ReturnValue) == 0x0000B8, "Member 'AIC_Monster_Default_C_FilterAbility::CallFunc_GetThreatTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_FilterAbility, CallFunc_AbilityFilterBoss_Result) == 0x0000C0, "Member 'AIC_Monster_Default_C_FilterAbility::CallFunc_AbilityFilterBoss_Result' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_FilterAbility, CallFunc_IsValid_ReturnValue_1) == 0x0000C1, "Member 'AIC_Monster_Default_C_FilterAbility::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_FilterAbility, K2Node_MakeStruct_TgfAIAbilityTarget) == 0x0000C8, "Member 'AIC_Monster_Default_C_FilterAbility::K2Node_MakeStruct_TgfAIAbilityTarget' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_FilterAbility, CallFunc_Array_IsEmpty_ReturnValue) == 0x0000F8, "Member 'AIC_Monster_Default_C_FilterAbility::CallFunc_Array_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_FilterAbility, Temp_bool_True_if_break_was_hit_Variable_1) == 0x0000F9, "Member 'AIC_Monster_Default_C_FilterAbility::Temp_bool_True_if_break_was_hit_Variable_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_FilterAbility, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000FA, "Member 'AIC_Monster_Default_C_FilterAbility::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_FilterAbility, Temp_int_Array_Index_Variable_1) == 0x0000FC, "Member 'AIC_Monster_Default_C_FilterAbility::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_FilterAbility, CallFunc_Array_Get_Item) == 0x000100, "Member 'AIC_Monster_Default_C_FilterAbility::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_FilterAbility, K2Node_MakeStruct_TgfAIAbilityTarget_1) == 0x000108, "Member 'AIC_Monster_Default_C_FilterAbility::K2Node_MakeStruct_TgfAIAbilityTarget_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_FilterAbility, CallFunc_Array_IsEmpty_ReturnValue_1) == 0x000138, "Member 'AIC_Monster_Default_C_FilterAbility::CallFunc_Array_IsEmpty_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_FilterAbility, CallFunc_Array_Get_Item_1) == 0x000140, "Member 'AIC_Monster_Default_C_FilterAbility::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_FilterAbility, CallFunc_Array_Length_ReturnValue) == 0x000178, "Member 'AIC_Monster_Default_C_FilterAbility::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_FilterAbility, CallFunc_Less_IntInt_ReturnValue) == 0x00017C, "Member 'AIC_Monster_Default_C_FilterAbility::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_FilterAbility, CallFunc_BooleanAND_ReturnValue) == 0x00017D, "Member 'AIC_Monster_Default_C_FilterAbility::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_FilterAbility, K2Node_SwitchEnum_CmpSuccess) == 0x00017E, "Member 'AIC_Monster_Default_C_FilterAbility::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_FilterAbility, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00017F, "Member 'AIC_Monster_Default_C_FilterAbility::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_FilterAbility, K2Node_MakeStruct_TgfAIAbilityTarget_2) == 0x000180, "Member 'AIC_Monster_Default_C_FilterAbility::K2Node_MakeStruct_TgfAIAbilityTarget_2' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_FilterAbility, CallFunc_AbilityFilterNone_Result) == 0x0001B0, "Member 'AIC_Monster_Default_C_FilterAbility::CallFunc_AbilityFilterNone_Result' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_FilterAbility, K2Node_SwitchEnum_CmpSuccess_1) == 0x0001B1, "Member 'AIC_Monster_Default_C_FilterAbility::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_FilterAbility, K2Node_SwitchEnum_CmpSuccess_2) == 0x0001B2, "Member 'AIC_Monster_Default_C_FilterAbility::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_FilterAbility, CallFunc_Array_Get_Item_2) == 0x0001B8, "Member 'AIC_Monster_Default_C_FilterAbility::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_FilterAbility, CallFunc_Array_Length_ReturnValue_1) == 0x0001F0, "Member 'AIC_Monster_Default_C_FilterAbility::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_FilterAbility, CallFunc_Less_IntInt_ReturnValue_1) == 0x0001F4, "Member 'AIC_Monster_Default_C_FilterAbility::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_FilterAbility, CallFunc_AbilityFilterTags_Result) == 0x0001F5, "Member 'AIC_Monster_Default_C_FilterAbility::CallFunc_AbilityFilterTags_Result' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_FilterAbility, CallFunc_BooleanAND_ReturnValue_1) == 0x0001F6, "Member 'AIC_Monster_Default_C_FilterAbility::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_FilterAbility, CallFunc_AbilityFilterSummonsCount_Result) == 0x0001F7, "Member 'AIC_Monster_Default_C_FilterAbility::CallFunc_AbilityFilterSummonsCount_Result' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_FilterAbility, CallFunc_AbilityFilterEnemyBehind_Result) == 0x0001F8, "Member 'AIC_Monster_Default_C_FilterAbility::CallFunc_AbilityFilterEnemyBehind_Result' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_FilterAbility, CallFunc_AbilityFilterHostileCount_Result) == 0x0001F9, "Member 'AIC_Monster_Default_C_FilterAbility::CallFunc_AbilityFilterHostileCount_Result' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_FilterAbility, CallFunc_AbilityFilterFriendlyCount_Result) == 0x0001FA, "Member 'AIC_Monster_Default_C_FilterAbility::CallFunc_AbilityFilterFriendlyCount_Result' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_FilterAbility, CallFunc_AbilityFilterHealthHigh_Result) == 0x0001FB, "Member 'AIC_Monster_Default_C_FilterAbility::CallFunc_AbilityFilterHealthHigh_Result' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_FilterAbility, CallFunc_AbilityFilterHealthLow_Result) == 0x0001FC, "Member 'AIC_Monster_Default_C_FilterAbility::CallFunc_AbilityFilterHealthLow_Result' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_FilterAbility, K2Node_SwitchEnum_CmpSuccess_3) == 0x0001FD, "Member 'AIC_Monster_Default_C_FilterAbility::K2Node_SwitchEnum_CmpSuccess_3' has a wrong offset!");

// Function AIC_Monster_Default.AIC_Monster_Default_C.FilterAbilityFromSelector
// 0x01C8 (0x01C8 - 0x0000)
struct AIC_Monster_Default_C_FilterAbilityFromSelector final
{
public:
	TArray<struct FTGF_FAbilitySelectorEntry>     AbilitySelector;                                   // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UClass*                                 Param_Ability;                                     // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTgfAIAbilityTarget                    Param_AbilityTarget;                               // 0x0018(0x0030)(Parm, OutParm, NoDestructor)
	double                                        TotalChance;                                       // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Roll;                                              // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class UClass*, struct FTgfAIAbilityTarget> Targets;                                           // 0x0058(0x0050)(Edit, BlueprintVisible, DisableEditOnTemplate)
	TArray<struct FTGF_FAbilitySelectorEntry>     Selector;                                          // 0x00A8(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTGF_FAbilitySelectorEntry             CallFunc_Array_Get_Item;                           // 0x00D0(0x0010)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FilterAbility_Result;                     // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTgfAIAbilityTarget                    CallFunc_FilterAbility_Target;                     // 0x00E8(0x0030)(NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_124[0x4];                                      // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTGF_FAbilitySelectorEntry             CallFunc_Array_Get_Item_1;                         // 0x0128(0x0010)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x013C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13D[0x3];                                      // 0x013D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTgfAIAbilityTarget                    CallFunc_Map_Find_Value;                           // 0x0140(0x0030)(NoDestructor)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_171[0x7];                                      // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTGF_FAbilitySelectorEntry             CallFunc_Array_Get_Item_2;                         // 0x0178(0x0010)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x018C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x018D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18E[0x2];                                      // 0x018E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A1[0x3];                                      // 0x01A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A9[0x7];                                      // 0x01A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloat_ReturnValue;                  // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIC_Monster_Default_C_FilterAbilityFromSelector) == 0x000008, "Wrong alignment on AIC_Monster_Default_C_FilterAbilityFromSelector");
static_assert(sizeof(AIC_Monster_Default_C_FilterAbilityFromSelector) == 0x0001C8, "Wrong size on AIC_Monster_Default_C_FilterAbilityFromSelector");
static_assert(offsetof(AIC_Monster_Default_C_FilterAbilityFromSelector, AbilitySelector) == 0x000000, "Member 'AIC_Monster_Default_C_FilterAbilityFromSelector::AbilitySelector' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_FilterAbilityFromSelector, Param_Ability) == 0x000010, "Member 'AIC_Monster_Default_C_FilterAbilityFromSelector::Param_Ability' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_FilterAbilityFromSelector, Param_AbilityTarget) == 0x000018, "Member 'AIC_Monster_Default_C_FilterAbilityFromSelector::Param_AbilityTarget' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_FilterAbilityFromSelector, TotalChance) == 0x000048, "Member 'AIC_Monster_Default_C_FilterAbilityFromSelector::TotalChance' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_FilterAbilityFromSelector, Roll) == 0x000050, "Member 'AIC_Monster_Default_C_FilterAbilityFromSelector::Roll' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_FilterAbilityFromSelector, Targets) == 0x000058, "Member 'AIC_Monster_Default_C_FilterAbilityFromSelector::Targets' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_FilterAbilityFromSelector, Selector) == 0x0000A8, "Member 'AIC_Monster_Default_C_FilterAbilityFromSelector::Selector' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_FilterAbilityFromSelector, Temp_int_Loop_Counter_Variable) == 0x0000B8, "Member 'AIC_Monster_Default_C_FilterAbilityFromSelector::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_FilterAbilityFromSelector, CallFunc_Array_Length_ReturnValue) == 0x0000BC, "Member 'AIC_Monster_Default_C_FilterAbilityFromSelector::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_FilterAbilityFromSelector, CallFunc_Add_IntInt_ReturnValue) == 0x0000C0, "Member 'AIC_Monster_Default_C_FilterAbilityFromSelector::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_FilterAbilityFromSelector, Temp_int_Array_Index_Variable) == 0x0000C4, "Member 'AIC_Monster_Default_C_FilterAbilityFromSelector::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_FilterAbilityFromSelector, Temp_int_Array_Index_Variable_1) == 0x0000C8, "Member 'AIC_Monster_Default_C_FilterAbilityFromSelector::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_FilterAbilityFromSelector, CallFunc_Array_Get_Item) == 0x0000D0, "Member 'AIC_Monster_Default_C_FilterAbilityFromSelector::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_FilterAbilityFromSelector, CallFunc_FilterAbility_Result) == 0x0000E0, "Member 'AIC_Monster_Default_C_FilterAbilityFromSelector::CallFunc_FilterAbility_Result' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_FilterAbilityFromSelector, CallFunc_FilterAbility_Target) == 0x0000E8, "Member 'AIC_Monster_Default_C_FilterAbilityFromSelector::CallFunc_FilterAbility_Target' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_FilterAbilityFromSelector, Temp_int_Loop_Counter_Variable_1) == 0x000118, "Member 'AIC_Monster_Default_C_FilterAbilityFromSelector::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_FilterAbilityFromSelector, CallFunc_Add_IntInt_ReturnValue_1) == 0x00011C, "Member 'AIC_Monster_Default_C_FilterAbilityFromSelector::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_FilterAbilityFromSelector, Temp_int_Array_Index_Variable_2) == 0x000120, "Member 'AIC_Monster_Default_C_FilterAbilityFromSelector::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_FilterAbilityFromSelector, CallFunc_Array_Get_Item_1) == 0x000128, "Member 'AIC_Monster_Default_C_FilterAbilityFromSelector::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_FilterAbilityFromSelector, CallFunc_Array_Length_ReturnValue_1) == 0x000138, "Member 'AIC_Monster_Default_C_FilterAbilityFromSelector::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_FilterAbilityFromSelector, CallFunc_Less_IntInt_ReturnValue) == 0x00013C, "Member 'AIC_Monster_Default_C_FilterAbilityFromSelector::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_FilterAbilityFromSelector, CallFunc_Map_Find_Value) == 0x000140, "Member 'AIC_Monster_Default_C_FilterAbilityFromSelector::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_FilterAbilityFromSelector, CallFunc_Map_Find_ReturnValue) == 0x000170, "Member 'AIC_Monster_Default_C_FilterAbilityFromSelector::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_FilterAbilityFromSelector, CallFunc_Array_Get_Item_2) == 0x000178, "Member 'AIC_Monster_Default_C_FilterAbilityFromSelector::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_FilterAbilityFromSelector, CallFunc_Array_Length_ReturnValue_2) == 0x000188, "Member 'AIC_Monster_Default_C_FilterAbilityFromSelector::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_FilterAbilityFromSelector, CallFunc_Less_IntInt_ReturnValue_1) == 0x00018C, "Member 'AIC_Monster_Default_C_FilterAbilityFromSelector::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_FilterAbilityFromSelector, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x00018D, "Member 'AIC_Monster_Default_C_FilterAbilityFromSelector::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_FilterAbilityFromSelector, CallFunc_Array_Add_ReturnValue) == 0x000190, "Member 'AIC_Monster_Default_C_FilterAbilityFromSelector::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_FilterAbilityFromSelector, Temp_int_Loop_Counter_Variable_2) == 0x000194, "Member 'AIC_Monster_Default_C_FilterAbilityFromSelector::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_FilterAbilityFromSelector, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000198, "Member 'AIC_Monster_Default_C_FilterAbilityFromSelector::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_FilterAbilityFromSelector, CallFunc_Less_IntInt_ReturnValue_2) == 0x0001A0, "Member 'AIC_Monster_Default_C_FilterAbilityFromSelector::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_FilterAbilityFromSelector, CallFunc_Add_IntInt_ReturnValue_2) == 0x0001A4, "Member 'AIC_Monster_Default_C_FilterAbilityFromSelector::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_FilterAbilityFromSelector, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x0001A8, "Member 'AIC_Monster_Default_C_FilterAbilityFromSelector::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_FilterAbilityFromSelector, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x0001B0, "Member 'AIC_Monster_Default_C_FilterAbilityFromSelector::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_FilterAbilityFromSelector, CallFunc_RandomFloat_ReturnValue) == 0x0001B8, "Member 'AIC_Monster_Default_C_FilterAbilityFromSelector::CallFunc_RandomFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_FilterAbilityFromSelector, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0001C0, "Member 'AIC_Monster_Default_C_FilterAbilityFromSelector::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");

// Function AIC_Monster_Default.AIC_Monster_Default_C.FilterAbilitySelector
// 0x0080 (0x0080 - 0x0000)
struct AIC_Monster_Default_C_FilterAbilitySelector final
{
public:
	class ABP_Tgf_Monster_C*                      Monster;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FTGF_FAbilitySelectorEntry>     Result;                                            // 0x0008(0x0010)(Parm, OutParm)
	TArray<struct FTGF_FAbilitySelectorEntry>     Selector;                                          // 0x0018(0x0010)(Edit, BlueprintVisible)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTGF_FAbilitySelectorAlternativeEntry  CallFunc_Array_Get_Item;                           // 0x0038(0x0030)(HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAllMatchingGameplayTags_ReturnValue;   // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A[0x2];                                       // 0x006A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIC_Monster_Default_C_FilterAbilitySelector) == 0x000008, "Wrong alignment on AIC_Monster_Default_C_FilterAbilitySelector");
static_assert(sizeof(AIC_Monster_Default_C_FilterAbilitySelector) == 0x000080, "Wrong size on AIC_Monster_Default_C_FilterAbilitySelector");
static_assert(offsetof(AIC_Monster_Default_C_FilterAbilitySelector, Monster) == 0x000000, "Member 'AIC_Monster_Default_C_FilterAbilitySelector::Monster' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_FilterAbilitySelector, Result) == 0x000008, "Member 'AIC_Monster_Default_C_FilterAbilitySelector::Result' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_FilterAbilitySelector, Selector) == 0x000018, "Member 'AIC_Monster_Default_C_FilterAbilitySelector::Selector' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_FilterAbilitySelector, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'AIC_Monster_Default_C_FilterAbilitySelector::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_FilterAbilitySelector, Temp_bool_True_if_break_was_hit_Variable) == 0x00002C, "Member 'AIC_Monster_Default_C_FilterAbilitySelector::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_FilterAbilitySelector, Temp_int_Array_Index_Variable) == 0x000030, "Member 'AIC_Monster_Default_C_FilterAbilitySelector::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_FilterAbilitySelector, CallFunc_Array_Get_Item) == 0x000038, "Member 'AIC_Monster_Default_C_FilterAbilitySelector::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_FilterAbilitySelector, CallFunc_Not_PreBool_ReturnValue) == 0x000068, "Member 'AIC_Monster_Default_C_FilterAbilitySelector::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_FilterAbilitySelector, CallFunc_HasAllMatchingGameplayTags_ReturnValue) == 0x000069, "Member 'AIC_Monster_Default_C_FilterAbilitySelector::CallFunc_HasAllMatchingGameplayTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_FilterAbilitySelector, Temp_int_Loop_Counter_Variable) == 0x00006C, "Member 'AIC_Monster_Default_C_FilterAbilitySelector::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_FilterAbilitySelector, CallFunc_Less_IntInt_ReturnValue) == 0x000070, "Member 'AIC_Monster_Default_C_FilterAbilitySelector::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_FilterAbilitySelector, CallFunc_Add_IntInt_ReturnValue) == 0x000074, "Member 'AIC_Monster_Default_C_FilterAbilitySelector::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_FilterAbilitySelector, CallFunc_BooleanAND_ReturnValue) == 0x000078, "Member 'AIC_Monster_Default_C_FilterAbilitySelector::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function AIC_Monster_Default.AIC_Monster_Default_C.FilterThreats
// 0x00D8 (0x00D8 - 0x0000)
struct AIC_Monster_Default_C_FilterThreats final
{
public:
	TArray<class AActor*>                         InvalidThreats;                                    // 0x0000(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_Tgf_Monster_C*                      K2Node_DynamicCast_AsBP_Tgf_Monster;               // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_RemoveThreat_ReturnValue;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class AActor*, float>                    CallFunc_GetThreatList_ReturnValue;                // 0x0058(0x0050)()
	TArray<class AActor*>                         CallFunc_Map_Keys_Keys;                            // 0x00A8(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item_1;                         // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x3];                                       // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsTargetable_Result;                      // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIC_Monster_Default_C_FilterThreats) == 0x000008, "Wrong alignment on AIC_Monster_Default_C_FilterThreats");
static_assert(sizeof(AIC_Monster_Default_C_FilterThreats) == 0x0000D8, "Wrong size on AIC_Monster_Default_C_FilterThreats");
static_assert(offsetof(AIC_Monster_Default_C_FilterThreats, InvalidThreats) == 0x000000, "Member 'AIC_Monster_Default_C_FilterThreats::InvalidThreats' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_FilterThreats, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'AIC_Monster_Default_C_FilterThreats::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_FilterThreats, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'AIC_Monster_Default_C_FilterThreats::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_FilterThreats, Temp_int_Array_Index_Variable) == 0x000018, "Member 'AIC_Monster_Default_C_FilterThreats::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_FilterThreats, Temp_int_Array_Index_Variable_1) == 0x00001C, "Member 'AIC_Monster_Default_C_FilterThreats::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_FilterThreats, Temp_int_Loop_Counter_Variable_1) == 0x000020, "Member 'AIC_Monster_Default_C_FilterThreats::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_FilterThreats, CallFunc_Array_Get_Item) == 0x000028, "Member 'AIC_Monster_Default_C_FilterThreats::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_FilterThreats, CallFunc_Add_IntInt_ReturnValue_1) == 0x000030, "Member 'AIC_Monster_Default_C_FilterThreats::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_FilterThreats, CallFunc_Array_Length_ReturnValue) == 0x000034, "Member 'AIC_Monster_Default_C_FilterThreats::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_FilterThreats, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'AIC_Monster_Default_C_FilterThreats::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_FilterThreats, CallFunc_K2_GetPawn_ReturnValue) == 0x000040, "Member 'AIC_Monster_Default_C_FilterThreats::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_FilterThreats, K2Node_DynamicCast_AsBP_Tgf_Monster) == 0x000048, "Member 'AIC_Monster_Default_C_FilterThreats::K2Node_DynamicCast_AsBP_Tgf_Monster' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_FilterThreats, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'AIC_Monster_Default_C_FilterThreats::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_FilterThreats, CallFunc_RemoveThreat_ReturnValue) == 0x000054, "Member 'AIC_Monster_Default_C_FilterThreats::CallFunc_RemoveThreat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_FilterThreats, CallFunc_GetThreatList_ReturnValue) == 0x000058, "Member 'AIC_Monster_Default_C_FilterThreats::CallFunc_GetThreatList_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_FilterThreats, CallFunc_Map_Keys_Keys) == 0x0000A8, "Member 'AIC_Monster_Default_C_FilterThreats::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_FilterThreats, CallFunc_Array_Length_ReturnValue_1) == 0x0000B8, "Member 'AIC_Monster_Default_C_FilterThreats::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_FilterThreats, CallFunc_Array_Get_Item_1) == 0x0000C0, "Member 'AIC_Monster_Default_C_FilterThreats::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_FilterThreats, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000C8, "Member 'AIC_Monster_Default_C_FilterThreats::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_FilterThreats, CallFunc_Array_Add_ReturnValue) == 0x0000CC, "Member 'AIC_Monster_Default_C_FilterThreats::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_FilterThreats, CallFunc_IsTargetable_Result) == 0x0000D0, "Member 'AIC_Monster_Default_C_FilterThreats::CallFunc_IsTargetable_Result' has a wrong offset!");

// Function AIC_Monster_Default.AIC_Monster_Default_C.GetAbility
// 0x0028 (0x0028 - 0x0000)
struct AIC_Monster_Default_C_GetAbility final
{
public:
	class UClass*                                 Result;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetValueAsClass_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_ClassDynamicCast_AsGameplay_Ability;        // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIC_Monster_Default_C_GetAbility) == 0x000008, "Wrong alignment on AIC_Monster_Default_C_GetAbility");
static_assert(sizeof(AIC_Monster_Default_C_GetAbility) == 0x000028, "Wrong size on AIC_Monster_Default_C_GetAbility");
static_assert(offsetof(AIC_Monster_Default_C_GetAbility, Result) == 0x000000, "Member 'AIC_Monster_Default_C_GetAbility::Result' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_GetAbility, CallFunc_GetValueAsClass_ReturnValue) == 0x000008, "Member 'AIC_Monster_Default_C_GetAbility::CallFunc_GetValueAsClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_GetAbility, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'AIC_Monster_Default_C_GetAbility::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_GetAbility, K2Node_ClassDynamicCast_AsGameplay_Ability) == 0x000018, "Member 'AIC_Monster_Default_C_GetAbility::K2Node_ClassDynamicCast_AsGameplay_Ability' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_GetAbility, K2Node_ClassDynamicCast_bSuccess) == 0x000020, "Member 'AIC_Monster_Default_C_GetAbility::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");

// Function AIC_Monster_Default.AIC_Monster_Default_C.GetAbilityTarget
// 0x0028 (0x0028 - 0x0000)
struct AIC_Monster_Default_C_GetAbilityTarget final
{
public:
	class AActor*                                 Target;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_GetValueAsObject_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_DynamicCast_AsActor;                        // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIC_Monster_Default_C_GetAbilityTarget) == 0x000008, "Wrong alignment on AIC_Monster_Default_C_GetAbilityTarget");
static_assert(sizeof(AIC_Monster_Default_C_GetAbilityTarget) == 0x000028, "Wrong size on AIC_Monster_Default_C_GetAbilityTarget");
static_assert(offsetof(AIC_Monster_Default_C_GetAbilityTarget, Target) == 0x000000, "Member 'AIC_Monster_Default_C_GetAbilityTarget::Target' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_GetAbilityTarget, CallFunc_GetValueAsObject_ReturnValue) == 0x000008, "Member 'AIC_Monster_Default_C_GetAbilityTarget::CallFunc_GetValueAsObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_GetAbilityTarget, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'AIC_Monster_Default_C_GetAbilityTarget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_GetAbilityTarget, K2Node_DynamicCast_AsActor) == 0x000018, "Member 'AIC_Monster_Default_C_GetAbilityTarget::K2Node_DynamicCast_AsActor' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_GetAbilityTarget, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'AIC_Monster_Default_C_GetAbilityTarget::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function AIC_Monster_Default.AIC_Monster_Default_C.GetHealth
// 0x0048 (0x0048 - 0x0000)
struct AIC_Monster_Default_C_GetHealth final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Result;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Tgf_Monster_C*                      K2Node_DynamicCast_AsBP_Tgf_Monster;               // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	const class UAttributeSet*                    CallFunc_GetAttributeSet_ReturnValue;              // 0x0020(0x0008)(ConstParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTgfDefendAttributeSet*                 K2Node_DynamicCast_AsTgf_Defend_Attribute_Set;     // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_FunctionResult_Result_ImplicitCast;         // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIC_Monster_Default_C_GetHealth) == 0x000008, "Wrong alignment on AIC_Monster_Default_C_GetHealth");
static_assert(sizeof(AIC_Monster_Default_C_GetHealth) == 0x000048, "Wrong size on AIC_Monster_Default_C_GetHealth");
static_assert(offsetof(AIC_Monster_Default_C_GetHealth, Actor) == 0x000000, "Member 'AIC_Monster_Default_C_GetHealth::Actor' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_GetHealth, Result) == 0x000008, "Member 'AIC_Monster_Default_C_GetHealth::Result' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_GetHealth, K2Node_DynamicCast_AsBP_Tgf_Monster) == 0x000010, "Member 'AIC_Monster_Default_C_GetHealth::K2Node_DynamicCast_AsBP_Tgf_Monster' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_GetHealth, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'AIC_Monster_Default_C_GetHealth::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_GetHealth, CallFunc_GetAttributeSet_ReturnValue) == 0x000020, "Member 'AIC_Monster_Default_C_GetHealth::CallFunc_GetAttributeSet_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_GetHealth, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'AIC_Monster_Default_C_GetHealth::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_GetHealth, K2Node_DynamicCast_AsTgf_Defend_Attribute_Set) == 0x000030, "Member 'AIC_Monster_Default_C_GetHealth::K2Node_DynamicCast_AsTgf_Defend_Attribute_Set' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_GetHealth, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'AIC_Monster_Default_C_GetHealth::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_GetHealth, K2Node_FunctionResult_Result_ImplicitCast) == 0x000040, "Member 'AIC_Monster_Default_C_GetHealth::K2Node_FunctionResult_Result_ImplicitCast' has a wrong offset!");

// Function AIC_Monster_Default.AIC_Monster_Default_C.GetHealthPercent
// 0x0058 (0x0058 - 0x0000)
struct AIC_Monster_Default_C_GetHealthPercent final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Result;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Tgf_Monster_C*                      K2Node_DynamicCast_AsBP_Tgf_Monster;               // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	const class UAttributeSet*                    CallFunc_GetAttributeSet_ReturnValue;              // 0x0020(0x0008)(ConstParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTgfDefendAttributeSet*                 K2Node_DynamicCast_AsTgf_Defend_Attribute_Set;     // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetMaxHealthFinal_ReturnValue;            // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SafeDivide_ReturnValue;                   // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SafeDivide_B_ImplicitCast;                // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SafeDivide_A_ImplicitCast;                // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIC_Monster_Default_C_GetHealthPercent) == 0x000008, "Wrong alignment on AIC_Monster_Default_C_GetHealthPercent");
static_assert(sizeof(AIC_Monster_Default_C_GetHealthPercent) == 0x000058, "Wrong size on AIC_Monster_Default_C_GetHealthPercent");
static_assert(offsetof(AIC_Monster_Default_C_GetHealthPercent, Actor) == 0x000000, "Member 'AIC_Monster_Default_C_GetHealthPercent::Actor' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_GetHealthPercent, Result) == 0x000008, "Member 'AIC_Monster_Default_C_GetHealthPercent::Result' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_GetHealthPercent, K2Node_DynamicCast_AsBP_Tgf_Monster) == 0x000010, "Member 'AIC_Monster_Default_C_GetHealthPercent::K2Node_DynamicCast_AsBP_Tgf_Monster' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_GetHealthPercent, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'AIC_Monster_Default_C_GetHealthPercent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_GetHealthPercent, CallFunc_GetAttributeSet_ReturnValue) == 0x000020, "Member 'AIC_Monster_Default_C_GetHealthPercent::CallFunc_GetAttributeSet_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_GetHealthPercent, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'AIC_Monster_Default_C_GetHealthPercent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_GetHealthPercent, K2Node_DynamicCast_AsTgf_Defend_Attribute_Set) == 0x000030, "Member 'AIC_Monster_Default_C_GetHealthPercent::K2Node_DynamicCast_AsTgf_Defend_Attribute_Set' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_GetHealthPercent, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'AIC_Monster_Default_C_GetHealthPercent::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_GetHealthPercent, CallFunc_GetMaxHealthFinal_ReturnValue) == 0x00003C, "Member 'AIC_Monster_Default_C_GetHealthPercent::CallFunc_GetMaxHealthFinal_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_GetHealthPercent, CallFunc_SafeDivide_ReturnValue) == 0x000040, "Member 'AIC_Monster_Default_C_GetHealthPercent::CallFunc_SafeDivide_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_GetHealthPercent, CallFunc_SafeDivide_B_ImplicitCast) == 0x000048, "Member 'AIC_Monster_Default_C_GetHealthPercent::CallFunc_SafeDivide_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_GetHealthPercent, CallFunc_SafeDivide_A_ImplicitCast) == 0x000050, "Member 'AIC_Monster_Default_C_GetHealthPercent::CallFunc_SafeDivide_A_ImplicitCast' has a wrong offset!");

// Function AIC_Monster_Default.AIC_Monster_Default_C.HasAction
// 0x0020 (0x0020 - 0x0000)
struct AIC_Monster_Default_C_HasAction final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_Tgf_Monster_C*                      K2Node_DynamicCast_AsBP_Tgf_Monster;               // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetValueAsBool_ReturnValue;               // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFleeing_Result;                         // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetValueAsBool_ReturnValue_1;             // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIC_Monster_Default_C_HasAction) == 0x000008, "Wrong alignment on AIC_Monster_Default_C_HasAction");
static_assert(sizeof(AIC_Monster_Default_C_HasAction) == 0x000020, "Wrong size on AIC_Monster_Default_C_HasAction");
static_assert(offsetof(AIC_Monster_Default_C_HasAction, Result) == 0x000000, "Member 'AIC_Monster_Default_C_HasAction::Result' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_HasAction, CallFunc_K2_GetPawn_ReturnValue) == 0x000008, "Member 'AIC_Monster_Default_C_HasAction::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_HasAction, K2Node_DynamicCast_AsBP_Tgf_Monster) == 0x000010, "Member 'AIC_Monster_Default_C_HasAction::K2Node_DynamicCast_AsBP_Tgf_Monster' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_HasAction, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'AIC_Monster_Default_C_HasAction::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_HasAction, CallFunc_GetValueAsBool_ReturnValue) == 0x000019, "Member 'AIC_Monster_Default_C_HasAction::CallFunc_GetValueAsBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_HasAction, CallFunc_IsFleeing_Result) == 0x00001A, "Member 'AIC_Monster_Default_C_HasAction::CallFunc_IsFleeing_Result' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_HasAction, CallFunc_GetValueAsBool_ReturnValue_1) == 0x00001B, "Member 'AIC_Monster_Default_C_HasAction::CallFunc_GetValueAsBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_HasAction, CallFunc_BooleanOR_ReturnValue) == 0x00001C, "Member 'AIC_Monster_Default_C_HasAction::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_HasAction, CallFunc_BooleanOR_ReturnValue_1) == 0x00001D, "Member 'AIC_Monster_Default_C_HasAction::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");

// Function AIC_Monster_Default.AIC_Monster_Default_C.IsAbilityReady
// 0x0028 (0x0028 - 0x0000)
struct AIC_Monster_Default_C_IsAbilityReady final
{
public:
	class UClass*                                 Param_Ability;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Ready;                                             // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ALyraCharacterWithAbilities*            K2Node_DynamicCast_AsLyra_Character_with_Abilities; // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAbilityCoolingDown_ReturnValue;         // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIC_Monster_Default_C_IsAbilityReady) == 0x000008, "Wrong alignment on AIC_Monster_Default_C_IsAbilityReady");
static_assert(sizeof(AIC_Monster_Default_C_IsAbilityReady) == 0x000028, "Wrong size on AIC_Monster_Default_C_IsAbilityReady");
static_assert(offsetof(AIC_Monster_Default_C_IsAbilityReady, Param_Ability) == 0x000000, "Member 'AIC_Monster_Default_C_IsAbilityReady::Param_Ability' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_IsAbilityReady, Ready) == 0x000008, "Member 'AIC_Monster_Default_C_IsAbilityReady::Ready' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_IsAbilityReady, CallFunc_K2_GetPawn_ReturnValue) == 0x000010, "Member 'AIC_Monster_Default_C_IsAbilityReady::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_IsAbilityReady, K2Node_DynamicCast_AsLyra_Character_with_Abilities) == 0x000018, "Member 'AIC_Monster_Default_C_IsAbilityReady::K2Node_DynamicCast_AsLyra_Character_with_Abilities' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_IsAbilityReady, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'AIC_Monster_Default_C_IsAbilityReady::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_IsAbilityReady, CallFunc_IsAbilityCoolingDown_ReturnValue) == 0x000021, "Member 'AIC_Monster_Default_C_IsAbilityReady::CallFunc_IsAbilityCoolingDown_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_IsAbilityReady, CallFunc_IsValid_ReturnValue) == 0x000022, "Member 'AIC_Monster_Default_C_IsAbilityReady::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_IsAbilityReady, CallFunc_Not_PreBool_ReturnValue) == 0x000023, "Member 'AIC_Monster_Default_C_IsAbilityReady::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function AIC_Monster_Default.AIC_Monster_Default_C.IsActivatingAbility
// 0x0028 (0x0028 - 0x0000)
struct AIC_Monster_Default_C_IsActivatingAbility final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIC_Monster_Default_C_IsActivatingAbility) == 0x000008, "Wrong alignment on AIC_Monster_Default_C_IsActivatingAbility");
static_assert(sizeof(AIC_Monster_Default_C_IsActivatingAbility) == 0x000028, "Wrong size on AIC_Monster_Default_C_IsActivatingAbility");
static_assert(offsetof(AIC_Monster_Default_C_IsActivatingAbility, Result) == 0x000000, "Member 'AIC_Monster_Default_C_IsActivatingAbility::Result' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_IsActivatingAbility, CallFunc_K2_GetPawn_ReturnValue) == 0x000008, "Member 'AIC_Monster_Default_C_IsActivatingAbility::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_IsActivatingAbility, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x000010, "Member 'AIC_Monster_Default_C_IsActivatingAbility::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_IsActivatingAbility, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'AIC_Monster_Default_C_IsActivatingAbility::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_IsActivatingAbility, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x000018, "Member 'AIC_Monster_Default_C_IsActivatingAbility::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_IsActivatingAbility, CallFunc_IsValid_ReturnValue_1) == 0x000020, "Member 'AIC_Monster_Default_C_IsActivatingAbility::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function AIC_Monster_Default.AIC_Monster_Default_C.IsHostile
// 0x0038 (0x0038 - 0x0000)
struct AIC_Monster_Default_C_IsHostile final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULyraTeamSubsystem*                     CallFunc_GetWorldSubsystem_ReturnValue;            // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_Tgf_Monster_C*                      K2Node_DynamicCast_AsBP_Tgf_Monster;               // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_CompareTeams_TeamIdA;                     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_CompareTeams_TeamIdB;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELyraTeamComparison                           CallFunc_CompareTeams_ReturnValue;                 // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasThreat_ReturnValue;                    // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIC_Monster_Default_C_IsHostile) == 0x000008, "Wrong alignment on AIC_Monster_Default_C_IsHostile");
static_assert(sizeof(AIC_Monster_Default_C_IsHostile) == 0x000038, "Wrong size on AIC_Monster_Default_C_IsHostile");
static_assert(offsetof(AIC_Monster_Default_C_IsHostile, Actor) == 0x000000, "Member 'AIC_Monster_Default_C_IsHostile::Actor' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_IsHostile, Result) == 0x000008, "Member 'AIC_Monster_Default_C_IsHostile::Result' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_IsHostile, CallFunc_GetWorldSubsystem_ReturnValue) == 0x000010, "Member 'AIC_Monster_Default_C_IsHostile::CallFunc_GetWorldSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_IsHostile, CallFunc_K2_GetPawn_ReturnValue) == 0x000018, "Member 'AIC_Monster_Default_C_IsHostile::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_IsHostile, K2Node_DynamicCast_AsBP_Tgf_Monster) == 0x000020, "Member 'AIC_Monster_Default_C_IsHostile::K2Node_DynamicCast_AsBP_Tgf_Monster' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_IsHostile, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'AIC_Monster_Default_C_IsHostile::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_IsHostile, CallFunc_CompareTeams_TeamIdA) == 0x00002C, "Member 'AIC_Monster_Default_C_IsHostile::CallFunc_CompareTeams_TeamIdA' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_IsHostile, CallFunc_CompareTeams_TeamIdB) == 0x000030, "Member 'AIC_Monster_Default_C_IsHostile::CallFunc_CompareTeams_TeamIdB' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_IsHostile, CallFunc_CompareTeams_ReturnValue) == 0x000034, "Member 'AIC_Monster_Default_C_IsHostile::CallFunc_CompareTeams_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_IsHostile, K2Node_SwitchEnum_CmpSuccess) == 0x000035, "Member 'AIC_Monster_Default_C_IsHostile::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_IsHostile, CallFunc_HasThreat_ReturnValue) == 0x000036, "Member 'AIC_Monster_Default_C_IsHostile::CallFunc_HasThreat_ReturnValue' has a wrong offset!");

// Function AIC_Monster_Default.AIC_Monster_Default_C.IsInCombat
// 0x0020 (0x0020 - 0x0000)
struct AIC_Monster_Default_C_IsInCombat final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_Tgf_Monster_C*                      K2Node_DynamicCast_AsBP_Tgf_Monster;               // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInCombat_Result;                        // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIC_Monster_Default_C_IsInCombat) == 0x000008, "Wrong alignment on AIC_Monster_Default_C_IsInCombat");
static_assert(sizeof(AIC_Monster_Default_C_IsInCombat) == 0x000020, "Wrong size on AIC_Monster_Default_C_IsInCombat");
static_assert(offsetof(AIC_Monster_Default_C_IsInCombat, Result) == 0x000000, "Member 'AIC_Monster_Default_C_IsInCombat::Result' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_IsInCombat, CallFunc_K2_GetPawn_ReturnValue) == 0x000008, "Member 'AIC_Monster_Default_C_IsInCombat::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_IsInCombat, K2Node_DynamicCast_AsBP_Tgf_Monster) == 0x000010, "Member 'AIC_Monster_Default_C_IsInCombat::K2Node_DynamicCast_AsBP_Tgf_Monster' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_IsInCombat, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'AIC_Monster_Default_C_IsInCombat::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_IsInCombat, CallFunc_IsInCombat_Result) == 0x000019, "Member 'AIC_Monster_Default_C_IsInCombat::CallFunc_IsInCombat_Result' has a wrong offset!");

// Function AIC_Monster_Default.AIC_Monster_Default_C.IsInCombatZone
// 0x0048 (0x0048 - 0x0000)
struct AIC_Monster_Default_C_IsInCombatZone final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_Tgf_Monster_C*                      K2Node_DynamicCast_AsBP_Tgf_Monster;               // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTGFCombatZoneComponent*                CallFunc_GetComponentByClass_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInside_ReturnValue;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIC_Monster_Default_C_IsInCombatZone) == 0x000008, "Wrong alignment on AIC_Monster_Default_C_IsInCombatZone");
static_assert(sizeof(AIC_Monster_Default_C_IsInCombatZone) == 0x000048, "Wrong size on AIC_Monster_Default_C_IsInCombatZone");
static_assert(offsetof(AIC_Monster_Default_C_IsInCombatZone, Location) == 0x000000, "Member 'AIC_Monster_Default_C_IsInCombatZone::Location' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_IsInCombatZone, Result) == 0x000018, "Member 'AIC_Monster_Default_C_IsInCombatZone::Result' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_IsInCombatZone, CallFunc_K2_GetPawn_ReturnValue) == 0x000020, "Member 'AIC_Monster_Default_C_IsInCombatZone::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_IsInCombatZone, K2Node_DynamicCast_AsBP_Tgf_Monster) == 0x000028, "Member 'AIC_Monster_Default_C_IsInCombatZone::K2Node_DynamicCast_AsBP_Tgf_Monster' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_IsInCombatZone, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'AIC_Monster_Default_C_IsInCombatZone::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_IsInCombatZone, CallFunc_GetComponentByClass_ReturnValue) == 0x000038, "Member 'AIC_Monster_Default_C_IsInCombatZone::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_IsInCombatZone, CallFunc_IsInside_ReturnValue) == 0x000040, "Member 'AIC_Monster_Default_C_IsInCombatZone::CallFunc_IsInside_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_IsInCombatZone, CallFunc_IsValid_ReturnValue) == 0x000041, "Member 'AIC_Monster_Default_C_IsInCombatZone::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function AIC_Monster_Default.AIC_Monster_Default_C.IsTargetable
// 0x0050 (0x0050 - 0x0000)
struct AIC_Monster_Default_C_IsTargetable final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPendingKillPending_ReturnValue;         // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue_1;     // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue_2;     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInCombatZone_Result;                    // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue_3;     // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue_4;     // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Tgf_Character_Default_C*            K2Node_DynamicCast_AsBP_Tgf_Character_Default;     // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDeadOrDying_ReturnValue;                // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIC_Monster_Default_C_IsTargetable) == 0x000008, "Wrong alignment on AIC_Monster_Default_C_IsTargetable");
static_assert(sizeof(AIC_Monster_Default_C_IsTargetable) == 0x000050, "Wrong size on AIC_Monster_Default_C_IsTargetable");
static_assert(offsetof(AIC_Monster_Default_C_IsTargetable, Actor) == 0x000000, "Member 'AIC_Monster_Default_C_IsTargetable::Actor' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_IsTargetable, Result) == 0x000008, "Member 'AIC_Monster_Default_C_IsTargetable::Result' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_IsTargetable, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'AIC_Monster_Default_C_IsTargetable::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_IsTargetable, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x00000A, "Member 'AIC_Monster_Default_C_IsTargetable::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_IsTargetable, CallFunc_IsPendingKillPending_ReturnValue) == 0x00000B, "Member 'AIC_Monster_Default_C_IsTargetable::CallFunc_IsPendingKillPending_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_IsTargetable, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x000010, "Member 'AIC_Monster_Default_C_IsTargetable::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_IsTargetable, CallFunc_IsValid_ReturnValue_1) == 0x000018, "Member 'AIC_Monster_Default_C_IsTargetable::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_IsTargetable, CallFunc_HasMatchingGameplayTag_ReturnValue_1) == 0x000019, "Member 'AIC_Monster_Default_C_IsTargetable::CallFunc_HasMatchingGameplayTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_IsTargetable, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000020, "Member 'AIC_Monster_Default_C_IsTargetable::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_IsTargetable, CallFunc_HasMatchingGameplayTag_ReturnValue_2) == 0x000038, "Member 'AIC_Monster_Default_C_IsTargetable::CallFunc_HasMatchingGameplayTag_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_IsTargetable, CallFunc_IsInCombatZone_Result) == 0x000039, "Member 'AIC_Monster_Default_C_IsTargetable::CallFunc_IsInCombatZone_Result' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_IsTargetable, CallFunc_HasMatchingGameplayTag_ReturnValue_3) == 0x00003A, "Member 'AIC_Monster_Default_C_IsTargetable::CallFunc_HasMatchingGameplayTag_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_IsTargetable, CallFunc_HasMatchingGameplayTag_ReturnValue_4) == 0x00003B, "Member 'AIC_Monster_Default_C_IsTargetable::CallFunc_HasMatchingGameplayTag_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_IsTargetable, K2Node_DynamicCast_AsBP_Tgf_Character_Default) == 0x000040, "Member 'AIC_Monster_Default_C_IsTargetable::K2Node_DynamicCast_AsBP_Tgf_Character_Default' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_IsTargetable, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'AIC_Monster_Default_C_IsTargetable::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_IsTargetable, CallFunc_IsDeadOrDying_ReturnValue) == 0x000049, "Member 'AIC_Monster_Default_C_IsTargetable::CallFunc_IsDeadOrDying_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_IsTargetable, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x00004A, "Member 'AIC_Monster_Default_C_IsTargetable::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function AIC_Monster_Default.AIC_Monster_Default_C.OnDamageTaken
// 0x02E8 (0x02E8 - 0x0000)
struct AIC_Monster_Default_C_OnDamageTaken final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  InstigatorTags;                                    // 0x0008(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FGameplayTagContainer                  TargetTags;                                        // 0x0028(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm)
	float                                         Damage;                                            // 0x0048(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEffectSpec                    Spec;                                              // 0x0050(0x0298)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(AIC_Monster_Default_C_OnDamageTaken) == 0x000008, "Wrong alignment on AIC_Monster_Default_C_OnDamageTaken");
static_assert(sizeof(AIC_Monster_Default_C_OnDamageTaken) == 0x0002E8, "Wrong size on AIC_Monster_Default_C_OnDamageTaken");
static_assert(offsetof(AIC_Monster_Default_C_OnDamageTaken, Actor) == 0x000000, "Member 'AIC_Monster_Default_C_OnDamageTaken::Actor' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_OnDamageTaken, InstigatorTags) == 0x000008, "Member 'AIC_Monster_Default_C_OnDamageTaken::InstigatorTags' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_OnDamageTaken, TargetTags) == 0x000028, "Member 'AIC_Monster_Default_C_OnDamageTaken::TargetTags' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_OnDamageTaken, Damage) == 0x000048, "Member 'AIC_Monster_Default_C_OnDamageTaken::Damage' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_OnDamageTaken, Spec) == 0x000050, "Member 'AIC_Monster_Default_C_OnDamageTaken::Spec' has a wrong offset!");

// Function AIC_Monster_Default.AIC_Monster_Default_C.OnDeathStarted
// 0x0008 (0x0008 - 0x0000)
struct AIC_Monster_Default_C_OnDeathStarted final
{
public:
	class AActor*                                 OwningActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIC_Monster_Default_C_OnDeathStarted) == 0x000008, "Wrong alignment on AIC_Monster_Default_C_OnDeathStarted");
static_assert(sizeof(AIC_Monster_Default_C_OnDeathStarted) == 0x000008, "Wrong size on AIC_Monster_Default_C_OnDeathStarted");
static_assert(offsetof(AIC_Monster_Default_C_OnDeathStarted, OwningActor) == 0x000000, "Member 'AIC_Monster_Default_C_OnDeathStarted::OwningActor' has a wrong offset!");

// Function AIC_Monster_Default.AIC_Monster_Default_C.OnThreatTargetChanged
// 0x0008 (0x0008 - 0x0000)
struct AIC_Monster_Default_C_OnThreatTargetChanged final
{
public:
	class AActor*                                 Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIC_Monster_Default_C_OnThreatTargetChanged) == 0x000008, "Wrong alignment on AIC_Monster_Default_C_OnThreatTargetChanged");
static_assert(sizeof(AIC_Monster_Default_C_OnThreatTargetChanged) == 0x000008, "Wrong size on AIC_Monster_Default_C_OnThreatTargetChanged");
static_assert(offsetof(AIC_Monster_Default_C_OnThreatTargetChanged, Target) == 0x000000, "Member 'AIC_Monster_Default_C_OnThreatTargetChanged::Target' has a wrong offset!");

// Function AIC_Monster_Default.AIC_Monster_Default_C.PickAbility
// 0x0190 (0x0190 - 0x0000)
struct AIC_Monster_Default_C_PickAbility final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDebugName_ReturnValue;                 // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0028(0x0018)()
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0048(0x0050)(HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_FilterAbilities_Ability;                  // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTgfAIAbilityTarget                    CallFunc_FilterAbilities_AbilityTarget;            // 0x00A8(0x0030)(NoDestructor)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetClassDisplayName_ReturnValue;          // 0x00E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x00F0(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0108(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0158(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0168(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0180(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(AIC_Monster_Default_C_PickAbility) == 0x000008, "Wrong alignment on AIC_Monster_Default_C_PickAbility");
static_assert(sizeof(AIC_Monster_Default_C_PickAbility) == 0x000190, "Wrong size on AIC_Monster_Default_C_PickAbility");
static_assert(offsetof(AIC_Monster_Default_C_PickAbility, Result) == 0x000000, "Member 'AIC_Monster_Default_C_PickAbility::Result' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_PickAbility, CallFunc_K2_GetPawn_ReturnValue) == 0x000008, "Member 'AIC_Monster_Default_C_PickAbility::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_PickAbility, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'AIC_Monster_Default_C_PickAbility::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_PickAbility, CallFunc_GetDebugName_ReturnValue) == 0x000018, "Member 'AIC_Monster_Default_C_PickAbility::CallFunc_GetDebugName_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_PickAbility, CallFunc_Conv_StringToText_ReturnValue) == 0x000028, "Member 'AIC_Monster_Default_C_PickAbility::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_PickAbility, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x000040, "Member 'AIC_Monster_Default_C_PickAbility::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_PickAbility, K2Node_MakeStruct_FormatArgumentData) == 0x000048, "Member 'AIC_Monster_Default_C_PickAbility::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_PickAbility, CallFunc_Not_PreBool_ReturnValue) == 0x000098, "Member 'AIC_Monster_Default_C_PickAbility::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_PickAbility, CallFunc_FilterAbilities_Ability) == 0x0000A0, "Member 'AIC_Monster_Default_C_PickAbility::CallFunc_FilterAbilities_Ability' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_PickAbility, CallFunc_FilterAbilities_AbilityTarget) == 0x0000A8, "Member 'AIC_Monster_Default_C_PickAbility::CallFunc_FilterAbilities_AbilityTarget' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_PickAbility, CallFunc_IsValidClass_ReturnValue) == 0x0000D8, "Member 'AIC_Monster_Default_C_PickAbility::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_PickAbility, CallFunc_GetClassDisplayName_ReturnValue) == 0x0000E0, "Member 'AIC_Monster_Default_C_PickAbility::CallFunc_GetClassDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_PickAbility, CallFunc_Conv_StringToText_ReturnValue_1) == 0x0000F0, "Member 'AIC_Monster_Default_C_PickAbility::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_PickAbility, K2Node_MakeStruct_FormatArgumentData_1) == 0x000108, "Member 'AIC_Monster_Default_C_PickAbility::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_PickAbility, K2Node_MakeArray_Array) == 0x000158, "Member 'AIC_Monster_Default_C_PickAbility::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_PickAbility, CallFunc_Format_ReturnValue) == 0x000168, "Member 'AIC_Monster_Default_C_PickAbility::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_PickAbility, CallFunc_Conv_TextToString_ReturnValue) == 0x000180, "Member 'AIC_Monster_Default_C_PickAbility::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");

// Function AIC_Monster_Default.AIC_Monster_Default_C.PickAbilityDirectly
// 0x0188 (0x0188 - 0x0000)
struct AIC_Monster_Default_C_PickAbilityDirectly final
{
public:
	class UClass*                                 InAbility;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetClassDisplayName_ReturnValue;          // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0020(0x0018)()
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0040(0x0050)(HasGetValueTypeHash)
	bool                                          CallFunc_FilterAbility_Result;                     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTgfAIAbilityTarget                    CallFunc_FilterAbility_Target;                     // 0x0098(0x0030)(NoDestructor)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDebugName_ReturnValue;                 // 0x00D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x00E8(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0100(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0150(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0160(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0178(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(AIC_Monster_Default_C_PickAbilityDirectly) == 0x000008, "Wrong alignment on AIC_Monster_Default_C_PickAbilityDirectly");
static_assert(sizeof(AIC_Monster_Default_C_PickAbilityDirectly) == 0x000188, "Wrong size on AIC_Monster_Default_C_PickAbilityDirectly");
static_assert(offsetof(AIC_Monster_Default_C_PickAbilityDirectly, InAbility) == 0x000000, "Member 'AIC_Monster_Default_C_PickAbilityDirectly::InAbility' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_PickAbilityDirectly, Result) == 0x000008, "Member 'AIC_Monster_Default_C_PickAbilityDirectly::Result' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_PickAbilityDirectly, CallFunc_GetClassDisplayName_ReturnValue) == 0x000010, "Member 'AIC_Monster_Default_C_PickAbilityDirectly::CallFunc_GetClassDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_PickAbilityDirectly, CallFunc_Conv_StringToText_ReturnValue) == 0x000020, "Member 'AIC_Monster_Default_C_PickAbilityDirectly::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_PickAbilityDirectly, CallFunc_IsValidClass_ReturnValue) == 0x000038, "Member 'AIC_Monster_Default_C_PickAbilityDirectly::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_PickAbilityDirectly, K2Node_MakeStruct_FormatArgumentData) == 0x000040, "Member 'AIC_Monster_Default_C_PickAbilityDirectly::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_PickAbilityDirectly, CallFunc_FilterAbility_Result) == 0x000090, "Member 'AIC_Monster_Default_C_PickAbilityDirectly::CallFunc_FilterAbility_Result' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_PickAbilityDirectly, CallFunc_FilterAbility_Target) == 0x000098, "Member 'AIC_Monster_Default_C_PickAbilityDirectly::CallFunc_FilterAbility_Target' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_PickAbilityDirectly, CallFunc_K2_GetPawn_ReturnValue) == 0x0000C8, "Member 'AIC_Monster_Default_C_PickAbilityDirectly::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_PickAbilityDirectly, CallFunc_IsValid_ReturnValue) == 0x0000D0, "Member 'AIC_Monster_Default_C_PickAbilityDirectly::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_PickAbilityDirectly, CallFunc_GetDebugName_ReturnValue) == 0x0000D8, "Member 'AIC_Monster_Default_C_PickAbilityDirectly::CallFunc_GetDebugName_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_PickAbilityDirectly, CallFunc_Conv_StringToText_ReturnValue_1) == 0x0000E8, "Member 'AIC_Monster_Default_C_PickAbilityDirectly::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_PickAbilityDirectly, K2Node_MakeStruct_FormatArgumentData_1) == 0x000100, "Member 'AIC_Monster_Default_C_PickAbilityDirectly::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_PickAbilityDirectly, K2Node_MakeArray_Array) == 0x000150, "Member 'AIC_Monster_Default_C_PickAbilityDirectly::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_PickAbilityDirectly, CallFunc_Format_ReturnValue) == 0x000160, "Member 'AIC_Monster_Default_C_PickAbilityDirectly::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_PickAbilityDirectly, CallFunc_Conv_TextToString_ReturnValue) == 0x000178, "Member 'AIC_Monster_Default_C_PickAbilityDirectly::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");

// Function AIC_Monster_Default.AIC_Monster_Default_C.PickAction
// 0x0038 (0x0038 - 0x0000)
struct AIC_Monster_Default_C_PickAction final
{
public:
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloat_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Tgf_Monster_C*                      K2Node_DynamicCast_AsBP_Tgf_Monster;               // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_RandomFloat_ReturnValue_1;                // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_PickRetreat_Result;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_PickRetreat_Index;                        // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue;   // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAction_Result;                         // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIC_Monster_Default_C_PickAction) == 0x000008, "Wrong alignment on AIC_Monster_Default_C_PickAction");
static_assert(sizeof(AIC_Monster_Default_C_PickAction) == 0x000038, "Wrong size on AIC_Monster_Default_C_PickAction");
static_assert(offsetof(AIC_Monster_Default_C_PickAction, CallFunc_K2_GetPawn_ReturnValue) == 0x000000, "Member 'AIC_Monster_Default_C_PickAction::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_PickAction, CallFunc_RandomFloat_ReturnValue) == 0x000008, "Member 'AIC_Monster_Default_C_PickAction::CallFunc_RandomFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_PickAction, K2Node_DynamicCast_AsBP_Tgf_Monster) == 0x000010, "Member 'AIC_Monster_Default_C_PickAction::K2Node_DynamicCast_AsBP_Tgf_Monster' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_PickAction, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'AIC_Monster_Default_C_PickAction::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_PickAction, CallFunc_RandomFloat_ReturnValue_1) == 0x000020, "Member 'AIC_Monster_Default_C_PickAction::CallFunc_RandomFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_PickAction, CallFunc_PickRetreat_Result) == 0x000028, "Member 'AIC_Monster_Default_C_PickAction::CallFunc_PickRetreat_Result' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_PickAction, CallFunc_PickRetreat_Index) == 0x00002C, "Member 'AIC_Monster_Default_C_PickAction::CallFunc_PickRetreat_Index' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_PickAction, CallFunc_HasAnyMatchingGameplayTags_ReturnValue) == 0x000030, "Member 'AIC_Monster_Default_C_PickAction::CallFunc_HasAnyMatchingGameplayTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_PickAction, CallFunc_Not_PreBool_ReturnValue) == 0x000031, "Member 'AIC_Monster_Default_C_PickAction::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_PickAction, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000032, "Member 'AIC_Monster_Default_C_PickAction::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_PickAction, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000033, "Member 'AIC_Monster_Default_C_PickAction::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_PickAction, CallFunc_HasAction_Result) == 0x000034, "Member 'AIC_Monster_Default_C_PickAction::CallFunc_HasAction_Result' has a wrong offset!");

// Function AIC_Monster_Default.AIC_Monster_Default_C.PostFilterAbility
// 0x0050 (0x0050 - 0x0000)
struct AIC_Monster_Default_C_PostFilterAbility final
{
public:
	class UClass*                                 InAbility;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTGF_FAbilityTargetAlternateEntry      CallFunc_Map_Find_Value;                           // 0x0008(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTGF_FAbilityTargetAlternateEntry      K2Node_MakeStruct_TGF_FAbilityTargetAlternateEntry; // 0x0030(0x0020)(HasGetValueTypeHash)
};
static_assert(alignof(AIC_Monster_Default_C_PostFilterAbility) == 0x000008, "Wrong alignment on AIC_Monster_Default_C_PostFilterAbility");
static_assert(sizeof(AIC_Monster_Default_C_PostFilterAbility) == 0x000050, "Wrong size on AIC_Monster_Default_C_PostFilterAbility");
static_assert(offsetof(AIC_Monster_Default_C_PostFilterAbility, InAbility) == 0x000000, "Member 'AIC_Monster_Default_C_PostFilterAbility::InAbility' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_PostFilterAbility, CallFunc_Map_Find_Value) == 0x000008, "Member 'AIC_Monster_Default_C_PostFilterAbility::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_PostFilterAbility, CallFunc_Map_Find_ReturnValue) == 0x000028, "Member 'AIC_Monster_Default_C_PostFilterAbility::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_PostFilterAbility, K2Node_MakeStruct_TGF_FAbilityTargetAlternateEntry) == 0x000030, "Member 'AIC_Monster_Default_C_PostFilterAbility::K2Node_MakeStruct_TGF_FAbilityTargetAlternateEntry' has a wrong offset!");

// Function AIC_Monster_Default.AIC_Monster_Default_C.RangeQueryActors
// 0x00C8 (0x00C8 - 0x0000)
struct AIC_Monster_Default_C_RangeQueryActors final
{
public:
	double                                        Range;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Actors;                                            // 0x0008(0x0010)(Parm, OutParm)
	TArray<class AActor*>                         FilteredActors;                                    // 0x0018(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	TArray<EObjectTypeQuery>                      ObjectTypes;                                       // 0x0028(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0040(0x0010)(ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_MakeArray_Array_1;                          // 0x0080(0x0010)(ConstParm, ReferenceParm)
	TArray<class AActor*>                         CallFunc_SphereOverlapActors_OutActors;            // 0x0090(0x0010)(ReferenceParm)
	bool                                          CallFunc_SphereOverlapActors_ReturnValue;          // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsTargetable_Result;                      // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BD[0x3];                                       // 0x00BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SphereOverlapActors_SphereRadius_ImplicitCast; // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIC_Monster_Default_C_RangeQueryActors) == 0x000008, "Wrong alignment on AIC_Monster_Default_C_RangeQueryActors");
static_assert(sizeof(AIC_Monster_Default_C_RangeQueryActors) == 0x0000C8, "Wrong size on AIC_Monster_Default_C_RangeQueryActors");
static_assert(offsetof(AIC_Monster_Default_C_RangeQueryActors, Range) == 0x000000, "Member 'AIC_Monster_Default_C_RangeQueryActors::Range' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_RangeQueryActors, Actors) == 0x000008, "Member 'AIC_Monster_Default_C_RangeQueryActors::Actors' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_RangeQueryActors, FilteredActors) == 0x000018, "Member 'AIC_Monster_Default_C_RangeQueryActors::FilteredActors' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_RangeQueryActors, ObjectTypes) == 0x000028, "Member 'AIC_Monster_Default_C_RangeQueryActors::ObjectTypes' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_RangeQueryActors, Temp_int_Array_Index_Variable) == 0x000038, "Member 'AIC_Monster_Default_C_RangeQueryActors::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_RangeQueryActors, K2Node_MakeArray_Array) == 0x000040, "Member 'AIC_Monster_Default_C_RangeQueryActors::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_RangeQueryActors, Temp_int_Loop_Counter_Variable) == 0x000050, "Member 'AIC_Monster_Default_C_RangeQueryActors::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_RangeQueryActors, CallFunc_Add_IntInt_ReturnValue) == 0x000054, "Member 'AIC_Monster_Default_C_RangeQueryActors::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_RangeQueryActors, CallFunc_K2_GetPawn_ReturnValue) == 0x000058, "Member 'AIC_Monster_Default_C_RangeQueryActors::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_RangeQueryActors, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000060, "Member 'AIC_Monster_Default_C_RangeQueryActors::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_RangeQueryActors, CallFunc_IsValid_ReturnValue) == 0x000078, "Member 'AIC_Monster_Default_C_RangeQueryActors::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_RangeQueryActors, K2Node_MakeArray_Array_1) == 0x000080, "Member 'AIC_Monster_Default_C_RangeQueryActors::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_RangeQueryActors, CallFunc_SphereOverlapActors_OutActors) == 0x000090, "Member 'AIC_Monster_Default_C_RangeQueryActors::CallFunc_SphereOverlapActors_OutActors' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_RangeQueryActors, CallFunc_SphereOverlapActors_ReturnValue) == 0x0000A0, "Member 'AIC_Monster_Default_C_RangeQueryActors::CallFunc_SphereOverlapActors_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_RangeQueryActors, CallFunc_Array_Length_ReturnValue) == 0x0000A4, "Member 'AIC_Monster_Default_C_RangeQueryActors::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_RangeQueryActors, CallFunc_Less_IntInt_ReturnValue) == 0x0000A8, "Member 'AIC_Monster_Default_C_RangeQueryActors::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_RangeQueryActors, CallFunc_Array_Get_Item) == 0x0000B0, "Member 'AIC_Monster_Default_C_RangeQueryActors::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_RangeQueryActors, CallFunc_Array_Add_ReturnValue) == 0x0000B8, "Member 'AIC_Monster_Default_C_RangeQueryActors::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_RangeQueryActors, CallFunc_IsTargetable_Result) == 0x0000BC, "Member 'AIC_Monster_Default_C_RangeQueryActors::CallFunc_IsTargetable_Result' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_RangeQueryActors, CallFunc_SphereOverlapActors_SphereRadius_ImplicitCast) == 0x0000C0, "Member 'AIC_Monster_Default_C_RangeQueryActors::CallFunc_SphereOverlapActors_SphereRadius_ImplicitCast' has a wrong offset!");

// Function AIC_Monster_Default.AIC_Monster_Default_C.ReceivePossess
// 0x0008 (0x0008 - 0x0000)
struct AIC_Monster_Default_C_ReceivePossess final
{
public:
	class APawn*                                  PossessedPawn;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIC_Monster_Default_C_ReceivePossess) == 0x000008, "Wrong alignment on AIC_Monster_Default_C_ReceivePossess");
static_assert(sizeof(AIC_Monster_Default_C_ReceivePossess) == 0x000008, "Wrong size on AIC_Monster_Default_C_ReceivePossess");
static_assert(offsetof(AIC_Monster_Default_C_ReceivePossess, PossessedPawn) == 0x000000, "Member 'AIC_Monster_Default_C_ReceivePossess::PossessedPawn' has a wrong offset!");

// Function AIC_Monster_Default.AIC_Monster_Default_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct AIC_Monster_Default_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIC_Monster_Default_C_ReceiveTick) == 0x000004, "Wrong alignment on AIC_Monster_Default_C_ReceiveTick");
static_assert(sizeof(AIC_Monster_Default_C_ReceiveTick) == 0x000004, "Wrong size on AIC_Monster_Default_C_ReceiveTick");
static_assert(offsetof(AIC_Monster_Default_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'AIC_Monster_Default_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function AIC_Monster_Default.AIC_Monster_Default_C.ReceiveUnPossess
// 0x0008 (0x0008 - 0x0000)
struct AIC_Monster_Default_C_ReceiveUnPossess final
{
public:
	class APawn*                                  UnpossessedPawn;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIC_Monster_Default_C_ReceiveUnPossess) == 0x000008, "Wrong alignment on AIC_Monster_Default_C_ReceiveUnPossess");
static_assert(sizeof(AIC_Monster_Default_C_ReceiveUnPossess) == 0x000008, "Wrong size on AIC_Monster_Default_C_ReceiveUnPossess");
static_assert(offsetof(AIC_Monster_Default_C_ReceiveUnPossess, UnpossessedPawn) == 0x000000, "Member 'AIC_Monster_Default_C_ReceiveUnPossess::UnpossessedPawn' has a wrong offset!");

// Function AIC_Monster_Default.AIC_Monster_Default_C.ReplicateAbilityTarget
// 0x0020 (0x0020 - 0x0000)
struct AIC_Monster_Default_C_ReplicateAbilityTarget final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_Tgf_Monster_C*                      K2Node_DynamicCast_AsBP_Tgf_Monster;               // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIC_Monster_Default_C_ReplicateAbilityTarget) == 0x000008, "Wrong alignment on AIC_Monster_Default_C_ReplicateAbilityTarget");
static_assert(sizeof(AIC_Monster_Default_C_ReplicateAbilityTarget) == 0x000020, "Wrong size on AIC_Monster_Default_C_ReplicateAbilityTarget");
static_assert(offsetof(AIC_Monster_Default_C_ReplicateAbilityTarget, Actor) == 0x000000, "Member 'AIC_Monster_Default_C_ReplicateAbilityTarget::Actor' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ReplicateAbilityTarget, CallFunc_K2_GetPawn_ReturnValue) == 0x000008, "Member 'AIC_Monster_Default_C_ReplicateAbilityTarget::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ReplicateAbilityTarget, K2Node_DynamicCast_AsBP_Tgf_Monster) == 0x000010, "Member 'AIC_Monster_Default_C_ReplicateAbilityTarget::K2Node_DynamicCast_AsBP_Tgf_Monster' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ReplicateAbilityTarget, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'AIC_Monster_Default_C_ReplicateAbilityTarget::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function AIC_Monster_Default.AIC_Monster_Default_C.SafeGetArg
// 0x0118 (0x0118 - 0x0000)
struct AIC_Monster_Default_C_SafeGetArg final
{
public:
	TArray<int32>                                 Args;                                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         Param_Index;                                       // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          PrintError;                                        // 0x0014(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Arg;                                               // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0028(0x0050)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_1;            // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0090(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00E0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00F0(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0108(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(AIC_Monster_Default_C_SafeGetArg) == 0x000008, "Wrong alignment on AIC_Monster_Default_C_SafeGetArg");
static_assert(sizeof(AIC_Monster_Default_C_SafeGetArg) == 0x000118, "Wrong size on AIC_Monster_Default_C_SafeGetArg");
static_assert(offsetof(AIC_Monster_Default_C_SafeGetArg, Args) == 0x000000, "Member 'AIC_Monster_Default_C_SafeGetArg::Args' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_SafeGetArg, Param_Index) == 0x000010, "Member 'AIC_Monster_Default_C_SafeGetArg::Param_Index' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_SafeGetArg, PrintError) == 0x000014, "Member 'AIC_Monster_Default_C_SafeGetArg::PrintError' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_SafeGetArg, Arg) == 0x000018, "Member 'AIC_Monster_Default_C_SafeGetArg::Arg' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_SafeGetArg, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000020, "Member 'AIC_Monster_Default_C_SafeGetArg::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_SafeGetArg, K2Node_MakeStruct_FormatArgumentData) == 0x000028, "Member 'AIC_Monster_Default_C_SafeGetArg::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_SafeGetArg, CallFunc_Array_Get_Item) == 0x000078, "Member 'AIC_Monster_Default_C_SafeGetArg::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_SafeGetArg, CallFunc_Array_Length_ReturnValue) == 0x00007C, "Member 'AIC_Monster_Default_C_SafeGetArg::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_SafeGetArg, CallFunc_Conv_IntToInt64_ReturnValue_1) == 0x000080, "Member 'AIC_Monster_Default_C_SafeGetArg::CallFunc_Conv_IntToInt64_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_SafeGetArg, CallFunc_Greater_IntInt_ReturnValue) == 0x000088, "Member 'AIC_Monster_Default_C_SafeGetArg::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_SafeGetArg, K2Node_MakeStruct_FormatArgumentData_1) == 0x000090, "Member 'AIC_Monster_Default_C_SafeGetArg::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_SafeGetArg, K2Node_MakeArray_Array) == 0x0000E0, "Member 'AIC_Monster_Default_C_SafeGetArg::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_SafeGetArg, CallFunc_Format_ReturnValue) == 0x0000F0, "Member 'AIC_Monster_Default_C_SafeGetArg::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_SafeGetArg, CallFunc_Conv_TextToString_ReturnValue) == 0x000108, "Member 'AIC_Monster_Default_C_SafeGetArg::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");

// Function AIC_Monster_Default.AIC_Monster_Default_C.SetBlackboardBoolValue
// 0x000C (0x000C - 0x0000)
struct AIC_Monster_Default_C_SetBlackboardBoolValue final
{
public:
	class FName                                   KeyName;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Value;                                             // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetValueAsBool_ReturnValue;               // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIC_Monster_Default_C_SetBlackboardBoolValue) == 0x000004, "Wrong alignment on AIC_Monster_Default_C_SetBlackboardBoolValue");
static_assert(sizeof(AIC_Monster_Default_C_SetBlackboardBoolValue) == 0x00000C, "Wrong size on AIC_Monster_Default_C_SetBlackboardBoolValue");
static_assert(offsetof(AIC_Monster_Default_C_SetBlackboardBoolValue, KeyName) == 0x000000, "Member 'AIC_Monster_Default_C_SetBlackboardBoolValue::KeyName' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_SetBlackboardBoolValue, Value) == 0x000008, "Member 'AIC_Monster_Default_C_SetBlackboardBoolValue::Value' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_SetBlackboardBoolValue, CallFunc_GetValueAsBool_ReturnValue) == 0x000009, "Member 'AIC_Monster_Default_C_SetBlackboardBoolValue::CallFunc_GetValueAsBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_SetBlackboardBoolValue, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x00000A, "Member 'AIC_Monster_Default_C_SetBlackboardBoolValue::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function AIC_Monster_Default.AIC_Monster_Default_C.SetFlank
// 0x0001 (0x0001 - 0x0000)
struct AIC_Monster_Default_C_SetFlank final
{
public:
	bool                                          Param_Flank;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIC_Monster_Default_C_SetFlank) == 0x000001, "Wrong alignment on AIC_Monster_Default_C_SetFlank");
static_assert(sizeof(AIC_Monster_Default_C_SetFlank) == 0x000001, "Wrong size on AIC_Monster_Default_C_SetFlank");
static_assert(offsetof(AIC_Monster_Default_C_SetFlank, Param_Flank) == 0x000000, "Member 'AIC_Monster_Default_C_SetFlank::Param_Flank' has a wrong offset!");

// Function AIC_Monster_Default.AIC_Monster_Default_C.SetFlee
// 0x0020 (0x0020 - 0x0000)
struct AIC_Monster_Default_C_SetFlee final
{
public:
	bool                                          Flee;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_Tgf_Monster_C*                      K2Node_DynamicCast_AsBP_Tgf_Monster;               // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIC_Monster_Default_C_SetFlee) == 0x000008, "Wrong alignment on AIC_Monster_Default_C_SetFlee");
static_assert(sizeof(AIC_Monster_Default_C_SetFlee) == 0x000020, "Wrong size on AIC_Monster_Default_C_SetFlee");
static_assert(offsetof(AIC_Monster_Default_C_SetFlee, Flee) == 0x000000, "Member 'AIC_Monster_Default_C_SetFlee::Flee' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_SetFlee, CallFunc_K2_GetPawn_ReturnValue) == 0x000008, "Member 'AIC_Monster_Default_C_SetFlee::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_SetFlee, K2Node_DynamicCast_AsBP_Tgf_Monster) == 0x000010, "Member 'AIC_Monster_Default_C_SetFlee::K2Node_DynamicCast_AsBP_Tgf_Monster' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_SetFlee, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'AIC_Monster_Default_C_SetFlee::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function AIC_Monster_Default.AIC_Monster_Default_C.SetForceTargetable
// 0x0008 (0x0008 - 0x0000)
struct AIC_Monster_Default_C_SetForceTargetable final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIC_Monster_Default_C_SetForceTargetable) == 0x000008, "Wrong alignment on AIC_Monster_Default_C_SetForceTargetable");
static_assert(sizeof(AIC_Monster_Default_C_SetForceTargetable) == 0x000008, "Wrong size on AIC_Monster_Default_C_SetForceTargetable");
static_assert(offsetof(AIC_Monster_Default_C_SetForceTargetable, Actor) == 0x000000, "Member 'AIC_Monster_Default_C_SetForceTargetable::Actor' has a wrong offset!");

// Function AIC_Monster_Default.AIC_Monster_Default_C.SetInterruptAbility
// 0x0001 (0x0001 - 0x0000)
struct AIC_Monster_Default_C_SetInterruptAbility final
{
public:
	bool                                          Interrupt;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIC_Monster_Default_C_SetInterruptAbility) == 0x000001, "Wrong alignment on AIC_Monster_Default_C_SetInterruptAbility");
static_assert(sizeof(AIC_Monster_Default_C_SetInterruptAbility) == 0x000001, "Wrong size on AIC_Monster_Default_C_SetInterruptAbility");
static_assert(offsetof(AIC_Monster_Default_C_SetInterruptAbility, Interrupt) == 0x000000, "Member 'AIC_Monster_Default_C_SetInterruptAbility::Interrupt' has a wrong offset!");

// Function AIC_Monster_Default.AIC_Monster_Default_C.SetInterruptAction
// 0x0001 (0x0001 - 0x0000)
struct AIC_Monster_Default_C_SetInterruptAction final
{
public:
	bool                                          Interrupt;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIC_Monster_Default_C_SetInterruptAction) == 0x000001, "Wrong alignment on AIC_Monster_Default_C_SetInterruptAction");
static_assert(sizeof(AIC_Monster_Default_C_SetInterruptAction) == 0x000001, "Wrong size on AIC_Monster_Default_C_SetInterruptAction");
static_assert(offsetof(AIC_Monster_Default_C_SetInterruptAction, Interrupt) == 0x000000, "Member 'AIC_Monster_Default_C_SetInterruptAction::Interrupt' has a wrong offset!");

// Function AIC_Monster_Default.AIC_Monster_Default_C.SetRetreat
// 0x0008 (0x0008 - 0x0000)
struct AIC_Monster_Default_C_SetRetreat final
{
public:
	bool                                          Param_Retreat;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Param_RetreatIndex;                                // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIC_Monster_Default_C_SetRetreat) == 0x000004, "Wrong alignment on AIC_Monster_Default_C_SetRetreat");
static_assert(sizeof(AIC_Monster_Default_C_SetRetreat) == 0x000008, "Wrong size on AIC_Monster_Default_C_SetRetreat");
static_assert(offsetof(AIC_Monster_Default_C_SetRetreat, Param_Retreat) == 0x000000, "Member 'AIC_Monster_Default_C_SetRetreat::Param_Retreat' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_SetRetreat, Param_RetreatIndex) == 0x000004, "Member 'AIC_Monster_Default_C_SetRetreat::Param_RetreatIndex' has a wrong offset!");

// Function AIC_Monster_Default.AIC_Monster_Default_C.SetSensesEnabled
// 0x0020 (0x0020 - 0x0000)
struct AIC_Monster_Default_C_SetSensesEnabled final
{
public:
	bool                                          Enabled;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_Tgf_Monster_C*                      K2Node_DynamicCast_AsBP_Tgf_Monster;               // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIC_Monster_Default_C_SetSensesEnabled) == 0x000008, "Wrong alignment on AIC_Monster_Default_C_SetSensesEnabled");
static_assert(sizeof(AIC_Monster_Default_C_SetSensesEnabled) == 0x000020, "Wrong size on AIC_Monster_Default_C_SetSensesEnabled");
static_assert(offsetof(AIC_Monster_Default_C_SetSensesEnabled, Enabled) == 0x000000, "Member 'AIC_Monster_Default_C_SetSensesEnabled::Enabled' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_SetSensesEnabled, CallFunc_K2_GetPawn_ReturnValue) == 0x000008, "Member 'AIC_Monster_Default_C_SetSensesEnabled::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_SetSensesEnabled, K2Node_DynamicCast_AsBP_Tgf_Monster) == 0x000010, "Member 'AIC_Monster_Default_C_SetSensesEnabled::K2Node_DynamicCast_AsBP_Tgf_Monster' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_SetSensesEnabled, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'AIC_Monster_Default_C_SetSensesEnabled::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_SetSensesEnabled, CallFunc_BooleanAND_ReturnValue) == 0x000019, "Member 'AIC_Monster_Default_C_SetSensesEnabled::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function AIC_Monster_Default.AIC_Monster_Default_C.ShouldPauseCombatTimer
// 0x0010 (0x0010 - 0x0000)
struct AIC_Monster_Default_C_ShouldPauseCombatTimer final
{
public:
	class ABP_Tgf_Monster_C*                      Monster;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActivatingAbility_Result;               // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEvade_Result;                           // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFleeing_Result;                         // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIC_Monster_Default_C_ShouldPauseCombatTimer) == 0x000008, "Wrong alignment on AIC_Monster_Default_C_ShouldPauseCombatTimer");
static_assert(sizeof(AIC_Monster_Default_C_ShouldPauseCombatTimer) == 0x000010, "Wrong size on AIC_Monster_Default_C_ShouldPauseCombatTimer");
static_assert(offsetof(AIC_Monster_Default_C_ShouldPauseCombatTimer, Monster) == 0x000000, "Member 'AIC_Monster_Default_C_ShouldPauseCombatTimer::Monster' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ShouldPauseCombatTimer, Result) == 0x000008, "Member 'AIC_Monster_Default_C_ShouldPauseCombatTimer::Result' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ShouldPauseCombatTimer, CallFunc_IsActivatingAbility_Result) == 0x000009, "Member 'AIC_Monster_Default_C_ShouldPauseCombatTimer::CallFunc_IsActivatingAbility_Result' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ShouldPauseCombatTimer, CallFunc_IsEvade_Result) == 0x00000A, "Member 'AIC_Monster_Default_C_ShouldPauseCombatTimer::CallFunc_IsEvade_Result' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ShouldPauseCombatTimer, CallFunc_IsFleeing_Result) == 0x00000B, "Member 'AIC_Monster_Default_C_ShouldPauseCombatTimer::CallFunc_IsFleeing_Result' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ShouldPauseCombatTimer, CallFunc_Not_PreBool_ReturnValue) == 0x00000C, "Member 'AIC_Monster_Default_C_ShouldPauseCombatTimer::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ShouldPauseCombatTimer, CallFunc_BooleanOR_ReturnValue) == 0x00000D, "Member 'AIC_Monster_Default_C_ShouldPauseCombatTimer::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Monster_Default_C_ShouldPauseCombatTimer, CallFunc_BooleanAND_ReturnValue) == 0x00000E, "Member 'AIC_Monster_Default_C_ShouldPauseCombatTimer::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

}

