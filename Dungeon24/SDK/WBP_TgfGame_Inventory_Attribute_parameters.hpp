#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_TgfGame_Inventory_Attribute

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WBP_TgfGame_Inventory_Attribute.WBP_TgfGame_Inventory_Attribute_C.ExecuteUbergraph_WBP_TgfGame_Inventory_Attribute
// 0x0008 (0x0008 - 0x0000)
struct WBP_TgfGame_Inventory_Attribute_C_ExecuteUbergraph_WBP_TgfGame_Inventory_Attribute final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TgfGame_Inventory_Attribute_C_ExecuteUbergraph_WBP_TgfGame_Inventory_Attribute) == 0x000004, "Wrong alignment on WBP_TgfGame_Inventory_Attribute_C_ExecuteUbergraph_WBP_TgfGame_Inventory_Attribute");
static_assert(sizeof(WBP_TgfGame_Inventory_Attribute_C_ExecuteUbergraph_WBP_TgfGame_Inventory_Attribute) == 0x000008, "Wrong size on WBP_TgfGame_Inventory_Attribute_C_ExecuteUbergraph_WBP_TgfGame_Inventory_Attribute");
static_assert(offsetof(WBP_TgfGame_Inventory_Attribute_C_ExecuteUbergraph_WBP_TgfGame_Inventory_Attribute, EntryPoint) == 0x000000, "Member 'WBP_TgfGame_Inventory_Attribute_C_ExecuteUbergraph_WBP_TgfGame_Inventory_Attribute::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_Inventory_Attribute_C_ExecuteUbergraph_WBP_TgfGame_Inventory_Attribute, K2Node_Event_IsDesignTime) == 0x000004, "Member 'WBP_TgfGame_Inventory_Attribute_C_ExecuteUbergraph_WBP_TgfGame_Inventory_Attribute::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function WBP_TgfGame_Inventory_Attribute.WBP_TgfGame_Inventory_Attribute_C.InitDetialAttributes
// 0x0014 (0x0014 - 0x0000)
struct WBP_TgfGame_Inventory_Attribute_C_InitDetialAttributes final
{
public:
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue;                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TgfGame_Inventory_Attribute_C_InitDetialAttributes) == 0x000004, "Wrong alignment on WBP_TgfGame_Inventory_Attribute_C_InitDetialAttributes");
static_assert(sizeof(WBP_TgfGame_Inventory_Attribute_C_InitDetialAttributes) == 0x000014, "Wrong size on WBP_TgfGame_Inventory_Attribute_C_InitDetialAttributes");
static_assert(offsetof(WBP_TgfGame_Inventory_Attribute_C_InitDetialAttributes, CallFunc_Array_Add_ReturnValue) == 0x000000, "Member 'WBP_TgfGame_Inventory_Attribute_C_InitDetialAttributes::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_Inventory_Attribute_C_InitDetialAttributes, CallFunc_Array_Add_ReturnValue_1) == 0x000004, "Member 'WBP_TgfGame_Inventory_Attribute_C_InitDetialAttributes::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_Inventory_Attribute_C_InitDetialAttributes, CallFunc_Array_Add_ReturnValue_2) == 0x000008, "Member 'WBP_TgfGame_Inventory_Attribute_C_InitDetialAttributes::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_Inventory_Attribute_C_InitDetialAttributes, CallFunc_Array_Add_ReturnValue_3) == 0x00000C, "Member 'WBP_TgfGame_Inventory_Attribute_C_InitDetialAttributes::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_Inventory_Attribute_C_InitDetialAttributes, CallFunc_Array_IsEmpty_ReturnValue) == 0x000010, "Member 'WBP_TgfGame_Inventory_Attribute_C_InitDetialAttributes::CallFunc_Array_IsEmpty_ReturnValue' has a wrong offset!");

// Function WBP_TgfGame_Inventory_Attribute.WBP_TgfGame_Inventory_Attribute_C.OnArrowEClicked
// 0x0248 (0x0248 - 0x0000)
struct WBP_TgfGame_Inventory_Attribute_C_OnArrowEClicked final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0040(0x0098)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00D8(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0190(0x00B8)()
};
static_assert(alignof(WBP_TgfGame_Inventory_Attribute_C_OnArrowEClicked) == 0x000008, "Wrong alignment on WBP_TgfGame_Inventory_Attribute_C_OnArrowEClicked");
static_assert(sizeof(WBP_TgfGame_Inventory_Attribute_C_OnArrowEClicked) == 0x000248, "Wrong size on WBP_TgfGame_Inventory_Attribute_C_OnArrowEClicked");
static_assert(offsetof(WBP_TgfGame_Inventory_Attribute_C_OnArrowEClicked, MyGeometry) == 0x000000, "Member 'WBP_TgfGame_Inventory_Attribute_C_OnArrowEClicked::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_Inventory_Attribute_C_OnArrowEClicked, MouseEvent) == 0x000040, "Member 'WBP_TgfGame_Inventory_Attribute_C_OnArrowEClicked::MouseEvent' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_Inventory_Attribute_C_OnArrowEClicked, ReturnValue) == 0x0000D8, "Member 'WBP_TgfGame_Inventory_Attribute_C_OnArrowEClicked::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_Inventory_Attribute_C_OnArrowEClicked, CallFunc_Handled_ReturnValue) == 0x000190, "Member 'WBP_TgfGame_Inventory_Attribute_C_OnArrowEClicked::CallFunc_Handled_ReturnValue' has a wrong offset!");

// Function WBP_TgfGame_Inventory_Attribute.WBP_TgfGame_Inventory_Attribute_C.OnArrowQClicked
// 0x0248 (0x0248 - 0x0000)
struct WBP_TgfGame_Inventory_Attribute_C_OnArrowQClicked final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0040(0x0098)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00D8(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0190(0x00B8)()
};
static_assert(alignof(WBP_TgfGame_Inventory_Attribute_C_OnArrowQClicked) == 0x000008, "Wrong alignment on WBP_TgfGame_Inventory_Attribute_C_OnArrowQClicked");
static_assert(sizeof(WBP_TgfGame_Inventory_Attribute_C_OnArrowQClicked) == 0x000248, "Wrong size on WBP_TgfGame_Inventory_Attribute_C_OnArrowQClicked");
static_assert(offsetof(WBP_TgfGame_Inventory_Attribute_C_OnArrowQClicked, MyGeometry) == 0x000000, "Member 'WBP_TgfGame_Inventory_Attribute_C_OnArrowQClicked::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_Inventory_Attribute_C_OnArrowQClicked, MouseEvent) == 0x000040, "Member 'WBP_TgfGame_Inventory_Attribute_C_OnArrowQClicked::MouseEvent' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_Inventory_Attribute_C_OnArrowQClicked, ReturnValue) == 0x0000D8, "Member 'WBP_TgfGame_Inventory_Attribute_C_OnArrowQClicked::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_Inventory_Attribute_C_OnArrowQClicked, CallFunc_Handled_ReturnValue) == 0x000190, "Member 'WBP_TgfGame_Inventory_Attribute_C_OnArrowQClicked::CallFunc_Handled_ReturnValue' has a wrong offset!");

// Function WBP_TgfGame_Inventory_Attribute.WBP_TgfGame_Inventory_Attribute_C.OnDrop
// 0x00E8 (0x00E8 - 0x0000)
struct WBP_TgfGame_Inventory_Attribute_C_OnDrop final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          PointerEvent;                                      // 0x0040(0x0098)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UDragDropOperation*                     Operation;                                         // 0x00D8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x00E0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TgfGame_Inventory_Attribute_C_OnDrop) == 0x000008, "Wrong alignment on WBP_TgfGame_Inventory_Attribute_C_OnDrop");
static_assert(sizeof(WBP_TgfGame_Inventory_Attribute_C_OnDrop) == 0x0000E8, "Wrong size on WBP_TgfGame_Inventory_Attribute_C_OnDrop");
static_assert(offsetof(WBP_TgfGame_Inventory_Attribute_C_OnDrop, MyGeometry) == 0x000000, "Member 'WBP_TgfGame_Inventory_Attribute_C_OnDrop::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_Inventory_Attribute_C_OnDrop, PointerEvent) == 0x000040, "Member 'WBP_TgfGame_Inventory_Attribute_C_OnDrop::PointerEvent' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_Inventory_Attribute_C_OnDrop, Operation) == 0x0000D8, "Member 'WBP_TgfGame_Inventory_Attribute_C_OnDrop::Operation' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_Inventory_Attribute_C_OnDrop, ReturnValue) == 0x0000E0, "Member 'WBP_TgfGame_Inventory_Attribute_C_OnDrop::ReturnValue' has a wrong offset!");

// Function WBP_TgfGame_Inventory_Attribute.WBP_TgfGame_Inventory_Attribute_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_TgfGame_Inventory_Attribute_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TgfGame_Inventory_Attribute_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_TgfGame_Inventory_Attribute_C_PreConstruct");
static_assert(sizeof(WBP_TgfGame_Inventory_Attribute_C_PreConstruct) == 0x000001, "Wrong size on WBP_TgfGame_Inventory_Attribute_C_PreConstruct");
static_assert(offsetof(WBP_TgfGame_Inventory_Attribute_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_TgfGame_Inventory_Attribute_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_TgfGame_Inventory_Attribute.WBP_TgfGame_Inventory_Attribute_C.SetSkillByPos
// 0x0048 (0x0048 - 0x0000)
struct WBP_TgfGame_Inventory_Attribute_C_SetSkillByPos final
{
public:
	int32                                         Skill_pos;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGA_TGF_Skill_Base_C*                   Ga_skill;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_TgfGame_SkillIcon_C*               Temp_object_Variable;                              // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UOverlay*                               Temp_object_Variable_1;                            // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_TgfGame_SkillIcon_C*               K2Node_Select_Default;                             // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UOverlay*                               K2Node_Select_Default_1;                           // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TgfGame_Inventory_Attribute_C_SetSkillByPos) == 0x000008, "Wrong alignment on WBP_TgfGame_Inventory_Attribute_C_SetSkillByPos");
static_assert(sizeof(WBP_TgfGame_Inventory_Attribute_C_SetSkillByPos) == 0x000048, "Wrong size on WBP_TgfGame_Inventory_Attribute_C_SetSkillByPos");
static_assert(offsetof(WBP_TgfGame_Inventory_Attribute_C_SetSkillByPos, Skill_pos) == 0x000000, "Member 'WBP_TgfGame_Inventory_Attribute_C_SetSkillByPos::Skill_pos' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_Inventory_Attribute_C_SetSkillByPos, Ga_skill) == 0x000008, "Member 'WBP_TgfGame_Inventory_Attribute_C_SetSkillByPos::Ga_skill' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_Inventory_Attribute_C_SetSkillByPos, Temp_int_Variable) == 0x000010, "Member 'WBP_TgfGame_Inventory_Attribute_C_SetSkillByPos::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_Inventory_Attribute_C_SetSkillByPos, Temp_object_Variable) == 0x000018, "Member 'WBP_TgfGame_Inventory_Attribute_C_SetSkillByPos::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_Inventory_Attribute_C_SetSkillByPos, Temp_int_Variable_1) == 0x000020, "Member 'WBP_TgfGame_Inventory_Attribute_C_SetSkillByPos::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_Inventory_Attribute_C_SetSkillByPos, Temp_object_Variable_1) == 0x000028, "Member 'WBP_TgfGame_Inventory_Attribute_C_SetSkillByPos::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_Inventory_Attribute_C_SetSkillByPos, K2Node_Select_Default) == 0x000030, "Member 'WBP_TgfGame_Inventory_Attribute_C_SetSkillByPos::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_Inventory_Attribute_C_SetSkillByPos, K2Node_Select_Default_1) == 0x000038, "Member 'WBP_TgfGame_Inventory_Attribute_C_SetSkillByPos::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_Inventory_Attribute_C_SetSkillByPos, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'WBP_TgfGame_Inventory_Attribute_C_SetSkillByPos::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WBP_TgfGame_Inventory_Attribute.WBP_TgfGame_Inventory_Attribute_C.SetSkillIcon
// 0x0080 (0x0080 - 0x0000)
struct WBP_TgfGame_Inventory_Attribute_C_SetSkillIcon final
{
public:
	class UTGFProtoTgfDRoleSkillKeyPosition*      Skill;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Count;                                             // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Skillpos;                                          // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_TgfGame_SkillIcon_C*               Temp_object_Variable;                              // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UDataUtility*                           CallFunc_GetEngineSubsystem_ReturnValue;           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	const class ULyraAbilitySet*                  CallFunc_GetAbilitySetClass_ReturnValue;           // 0x0028(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UOverlay*                               Temp_object_Variable_1;                            // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue;                // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_ClassDynamicCast_AsGA_TGF_Skill_Base;       // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_ClassDynamicCast_AsWBP_Tgf_Skill_Base;      // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess_1;                // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_62[0x6];                                       // 0x0062(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UOverlay*                               K2Node_Select_Default;                             // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_TgfGame_SkillIcon_C*               K2Node_Select_Default_1;                           // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TgfGame_Inventory_Attribute_C_SetSkillIcon) == 0x000008, "Wrong alignment on WBP_TgfGame_Inventory_Attribute_C_SetSkillIcon");
static_assert(sizeof(WBP_TgfGame_Inventory_Attribute_C_SetSkillIcon) == 0x000080, "Wrong size on WBP_TgfGame_Inventory_Attribute_C_SetSkillIcon");
static_assert(offsetof(WBP_TgfGame_Inventory_Attribute_C_SetSkillIcon, Skill) == 0x000000, "Member 'WBP_TgfGame_Inventory_Attribute_C_SetSkillIcon::Skill' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_Inventory_Attribute_C_SetSkillIcon, Count) == 0x000008, "Member 'WBP_TgfGame_Inventory_Attribute_C_SetSkillIcon::Count' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_Inventory_Attribute_C_SetSkillIcon, Skillpos) == 0x00000C, "Member 'WBP_TgfGame_Inventory_Attribute_C_SetSkillIcon::Skillpos' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_Inventory_Attribute_C_SetSkillIcon, Temp_byte_Variable) == 0x000010, "Member 'WBP_TgfGame_Inventory_Attribute_C_SetSkillIcon::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_Inventory_Attribute_C_SetSkillIcon, Temp_byte_Variable_1) == 0x000011, "Member 'WBP_TgfGame_Inventory_Attribute_C_SetSkillIcon::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_Inventory_Attribute_C_SetSkillIcon, Temp_int_Variable) == 0x000014, "Member 'WBP_TgfGame_Inventory_Attribute_C_SetSkillIcon::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_Inventory_Attribute_C_SetSkillIcon, Temp_object_Variable) == 0x000018, "Member 'WBP_TgfGame_Inventory_Attribute_C_SetSkillIcon::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_Inventory_Attribute_C_SetSkillIcon, CallFunc_GetEngineSubsystem_ReturnValue) == 0x000020, "Member 'WBP_TgfGame_Inventory_Attribute_C_SetSkillIcon::CallFunc_GetEngineSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_Inventory_Attribute_C_SetSkillIcon, CallFunc_GetAbilitySetClass_ReturnValue) == 0x000028, "Member 'WBP_TgfGame_Inventory_Attribute_C_SetSkillIcon::CallFunc_GetAbilitySetClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_Inventory_Attribute_C_SetSkillIcon, Temp_int_Variable_1) == 0x000030, "Member 'WBP_TgfGame_Inventory_Attribute_C_SetSkillIcon::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_Inventory_Attribute_C_SetSkillIcon, Temp_object_Variable_1) == 0x000038, "Member 'WBP_TgfGame_Inventory_Attribute_C_SetSkillIcon::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_Inventory_Attribute_C_SetSkillIcon, CallFunc_Array_IsEmpty_ReturnValue) == 0x000040, "Member 'WBP_TgfGame_Inventory_Attribute_C_SetSkillIcon::CallFunc_Array_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_Inventory_Attribute_C_SetSkillIcon, K2Node_ClassDynamicCast_AsGA_TGF_Skill_Base) == 0x000048, "Member 'WBP_TgfGame_Inventory_Attribute_C_SetSkillIcon::K2Node_ClassDynamicCast_AsGA_TGF_Skill_Base' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_Inventory_Attribute_C_SetSkillIcon, K2Node_ClassDynamicCast_bSuccess) == 0x000050, "Member 'WBP_TgfGame_Inventory_Attribute_C_SetSkillIcon::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_Inventory_Attribute_C_SetSkillIcon, K2Node_ClassDynamicCast_AsWBP_Tgf_Skill_Base) == 0x000058, "Member 'WBP_TgfGame_Inventory_Attribute_C_SetSkillIcon::K2Node_ClassDynamicCast_AsWBP_Tgf_Skill_Base' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_Inventory_Attribute_C_SetSkillIcon, K2Node_ClassDynamicCast_bSuccess_1) == 0x000060, "Member 'WBP_TgfGame_Inventory_Attribute_C_SetSkillIcon::K2Node_ClassDynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_Inventory_Attribute_C_SetSkillIcon, CallFunc_Greater_IntInt_ReturnValue) == 0x000061, "Member 'WBP_TgfGame_Inventory_Attribute_C_SetSkillIcon::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_Inventory_Attribute_C_SetSkillIcon, K2Node_Select_Default) == 0x000068, "Member 'WBP_TgfGame_Inventory_Attribute_C_SetSkillIcon::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_Inventory_Attribute_C_SetSkillIcon, K2Node_Select_Default_1) == 0x000070, "Member 'WBP_TgfGame_Inventory_Attribute_C_SetSkillIcon::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_Inventory_Attribute_C_SetSkillIcon, CallFunc_IsValid_ReturnValue) == 0x000078, "Member 'WBP_TgfGame_Inventory_Attribute_C_SetSkillIcon::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_Inventory_Attribute_C_SetSkillIcon, Temp_bool_Variable) == 0x000079, "Member 'WBP_TgfGame_Inventory_Attribute_C_SetSkillIcon::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_Inventory_Attribute_C_SetSkillIcon, K2Node_Select_Default_2) == 0x00007A, "Member 'WBP_TgfGame_Inventory_Attribute_C_SetSkillIcon::K2Node_Select_Default_2' has a wrong offset!");

// Function WBP_TgfGame_Inventory_Attribute.WBP_TgfGame_Inventory_Attribute_C.StatusInfoShowEvent__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct WBP_TgfGame_Inventory_Attribute_C_StatusInfoShowEvent__DelegateSignature final
{
public:
	bool                                          bIsShow;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TgfGame_Inventory_Attribute_C_StatusInfoShowEvent__DelegateSignature) == 0x000001, "Wrong alignment on WBP_TgfGame_Inventory_Attribute_C_StatusInfoShowEvent__DelegateSignature");
static_assert(sizeof(WBP_TgfGame_Inventory_Attribute_C_StatusInfoShowEvent__DelegateSignature) == 0x000001, "Wrong size on WBP_TgfGame_Inventory_Attribute_C_StatusInfoShowEvent__DelegateSignature");
static_assert(offsetof(WBP_TgfGame_Inventory_Attribute_C_StatusInfoShowEvent__DelegateSignature, bIsShow) == 0x000000, "Member 'WBP_TgfGame_Inventory_Attribute_C_StatusInfoShowEvent__DelegateSignature::bIsShow' has a wrong offset!");

// Function WBP_TgfGame_Inventory_Attribute.WBP_TgfGame_Inventory_Attribute_C.GetModuleName
// 0x0010 (0x0010 - 0x0000)
struct WBP_TgfGame_Inventory_Attribute_C_GetModuleName final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TgfGame_Inventory_Attribute_C_GetModuleName) == 0x000008, "Wrong alignment on WBP_TgfGame_Inventory_Attribute_C_GetModuleName");
static_assert(sizeof(WBP_TgfGame_Inventory_Attribute_C_GetModuleName) == 0x000010, "Wrong size on WBP_TgfGame_Inventory_Attribute_C_GetModuleName");
static_assert(offsetof(WBP_TgfGame_Inventory_Attribute_C_GetModuleName, ReturnValue) == 0x000000, "Member 'WBP_TgfGame_Inventory_Attribute_C_GetModuleName::ReturnValue' has a wrong offset!");

}

