#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_ItemTooltip_Battle

#include "Basic.hpp"

#include "LyraGame_structs.hpp"
#include "WBP_Common_ItemTooltip_Detail_classes.hpp"
#include "TGFBattleProtocol_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_ItemTooltip_Battle.WBP_ItemTooltip_Battle_C
// 0x0020 (0x05A0 - 0x0580)
class UWBP_ItemTooltip_Battle_C final : public UWBP_Common_ItemTooltip_Detail_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0580(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UTgfInventoryItemWrapper*               CachedItem;                                        // 0x0588(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	ETGFProtoTgfEnItemStorageType                 StorageType;                                       // 0x0590(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETgfInventoryType                             InventoryType;                                     // 0x0591(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_592[0x6];                                      // 0x0592(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UTgfInventoryWrapper*                   RootInventoryContext;                              // 0x0598(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WBP_ItemTooltip_Battle(int32 EntryPoint);
	void GetRightClickText(class FText* Operation);
	void SetUp(class UTgfInventoryItemWrapper* Item, class UTgfInventoryWrapper* InventoryContext, const class UTgfInventoryWrapper*& Param_RootInventoryContext, ETGFProtoTgfEnItemStorageType Pos_type, bool bAttributeAsRange, bool ShowUnkonw);
	void UpdateAttributesIn();
	void UpdateButtonInfo();
	void UpdateButtons();
	void UpdateQuality(ETgfEquipQuality Quality);
	void UpdateTooltips();
	void UpdateVirtualItem();

	class FString GetModuleName() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_ItemTooltip_Battle_C">();
	}
	static class UWBP_ItemTooltip_Battle_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_ItemTooltip_Battle_C>();
	}
};
static_assert(alignof(UWBP_ItemTooltip_Battle_C) == 0x000008, "Wrong alignment on UWBP_ItemTooltip_Battle_C");
static_assert(sizeof(UWBP_ItemTooltip_Battle_C) == 0x0005A0, "Wrong size on UWBP_ItemTooltip_Battle_C");
static_assert(offsetof(UWBP_ItemTooltip_Battle_C, UberGraphFrame) == 0x000580, "Member 'UWBP_ItemTooltip_Battle_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_ItemTooltip_Battle_C, CachedItem) == 0x000588, "Member 'UWBP_ItemTooltip_Battle_C::CachedItem' has a wrong offset!");
static_assert(offsetof(UWBP_ItemTooltip_Battle_C, StorageType) == 0x000590, "Member 'UWBP_ItemTooltip_Battle_C::StorageType' has a wrong offset!");
static_assert(offsetof(UWBP_ItemTooltip_Battle_C, InventoryType) == 0x000591, "Member 'UWBP_ItemTooltip_Battle_C::InventoryType' has a wrong offset!");
static_assert(offsetof(UWBP_ItemTooltip_Battle_C, RootInventoryContext) == 0x000598, "Member 'UWBP_ItemTooltip_Battle_C::RootInventoryContext' has a wrong offset!");

}

