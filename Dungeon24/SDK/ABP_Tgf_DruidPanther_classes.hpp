#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_Tgf_DruidPanther

#include "Basic.hpp"

#include "ABP_Tgf_DruidPanther_structs.hpp"
#include "LyraGame_structs.hpp"
#include "LyraGame_classes.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "ControlRig_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "IKRig_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_Tgf_DruidPanther.ABP_Tgf_DruidPanther_C
// 0x2450 (0x27E0 - 0x0390)
class UABP_Tgf_DruidPanther_C final : public UTgfAttachedAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0390(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct ABP_Tgf_DruidPanther::FAnimBlueprintGeneratedMutableData __AnimBlueprintMutables;                           // 0x0398(0x0014)(HasGetValueTypeHash)
	uint8                                         Pad_3AC[0x4];                                      // 0x03AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x03B0(0x0008)()
	struct FAnimSubsystemInstance_NodeRelevancy   AnimBlueprintExtension_NodeRelevancy;              // 0x03B8(0x00A8)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0460(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0468(0x0020)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_20;                 // 0x0488(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_19;                 // 0x04B0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_18;                 // 0x04D8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_17;                 // 0x0500(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_16;                 // 0x0528(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_15;                 // 0x0550(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_14;                 // 0x0578(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_13;                 // 0x05A0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_12;                 // 0x05C8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_11;                 // 0x05F0(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_9;                    // 0x0618(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_12;                      // 0x0660(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_8;                    // 0x0680(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_11;                      // 0x06C8(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_7;                    // 0x06E8(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_10;                      // 0x0730(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_6;                    // 0x0750(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_9;                       // 0x0798(0x0020)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_5;                   // 0x07B8(0x0048)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_10;                 // 0x0800(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_9;                  // 0x0828(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_8;                  // 0x0850(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_5;                    // 0x0878(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_8;                       // 0x08C0(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x08E0(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_7;                       // 0x0928(0x0020)()
	struct FAnimNode_RefPose                      AnimGraphNode_IdentityPose_1;                      // 0x0948(0x0010)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_6;                       // 0x0958(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_3;                      // 0x0978(0x00C8)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_1;                     // 0x0A40(0x00C8)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_1;                  // 0x0B08(0x0070)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer;                    // 0x0B78(0x0070)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_7;                  // 0x0BE8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_6;                  // 0x0C10(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x0C38(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x0C60(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x0C88(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_5;                       // 0x0CD0(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x0CF0(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_4;                       // 0x0D38(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x0D58(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x0DA0(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_2;                      // 0x0DC0(0x00C8)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_4;                   // 0x0E88(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x0ED0(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_1;                      // 0x0EF0(0x00C8)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_2;                              // 0x0FB8(0x0048)()
	struct FAnimNode_ControlRig                   AnimGraphNode_ControlRig_1;                        // 0x1000(0x0470)()
	struct FAnimNode_ModifyCurve                  AnimGraphNode_ModifyCurve;                         // 0x1470(0x0100)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive;                       // 0x1570(0x00C8)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_1;                              // 0x1638(0x0048)()
	struct FAnimNode_RefPose                      AnimGraphNode_IdentityPose;                        // 0x1680(0x0010)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend;                    // 0x1690(0x00E0)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_2;                    // 0x1770(0x0108)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_5;                     // 0x1878(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_4;                     // 0x18A0(0x0028)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x18C8(0x0048)()
	struct FAnimNode_ControlRig                   AnimGraphNode_ControlRig;                          // 0x1910(0x0470)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_3;                   // 0x1D80(0x0048)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_1;                    // 0x1DC8(0x0108)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_3;                     // 0x1ED0(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_2;                     // 0x1EF8(0x0028)()
	struct FAnimNode_IKRig                        AnimGraphNode_IKRig;                               // 0x1F20(0x01E0)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_2;                   // 0x2100(0x0048)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x2148(0x0108)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x2250(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x2278(0x0028)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_1;                   // 0x22A0(0x0048)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x22E8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x2310(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x2338(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x2360(0x0028)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator;                   // 0x2388(0x0040)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x23C8(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x23E8(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x2430(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x2450(0x00C8)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x2518(0x0048)()
	struct FAnimNode_PoseSnapshot                 AnimGraphNode_PoseSnapshot;                        // 0x2560(0x0090)()
	struct FRotator                               K2Node_PropertyAccess_18;                          // 0x25F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               K2Node_PropertyAccess_17;                          // 0x2608(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               K2Node_PropertyAccess_16;                          // 0x2620(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_PropertyAccess_14;                          // 0x2638(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_PropertyAccess_13;                          // 0x2639(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_263A[0x6];                                     // 0x263A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               K2Node_PropertyAccess_7;                           // 0x2640(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UCharacterMovementComponent*            K2Node_PropertyAccess_5;                           // 0x2658(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	double                                        K2Node_PropertyAccess_3;                           // 0x2660(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        __CustomProperty_PositionAlpha_Bip001MinusLMinusHand_Goal_153B147C46DD0F857C952E82F01BAA5E; // 0x2668(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        __CustomProperty_PositionAlpha_Bip001MinusRMinusHand_Goal_153B147C46DD0F857C952E82F01BAA5E; // 0x2670(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        __CustomProperty_PositionAlpha_Bip001MinusRMinusFoot_Goal_153B147C46DD0F857C952E82F01BAA5E; // 0x2678(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        __CustomProperty_PositionAlpha_Bip001MinusLMinusFoot_Goal_153B147C46DD0F857C952E82F01BAA5E; // 0x2680(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          __CustomProperty_bLocalSpace_2AB6BCDB45B6C097F92AE69275EB3776; // 0x2688(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          __CustomProperty_bEnable_2AB6BCDB45B6C097F92AE69275EB3776; // 0x2689(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          __CustomProperty_bDrawDebug_2AB6BCDB45B6C097F92AE69275EB3776; // 0x268A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_268B[0x5];                                     // 0x268B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        __CustomProperty_Radius_2AB6BCDB45B6C097F92AE69275EB3776; // 0x2690(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        __CustomProperty_EndOffset_2AB6BCDB45B6C097F92AE69275EB3776; // 0x2698(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        __CustomProperty_StartOffset_2AB6BCDB45B6C097F92AE69275EB3776; // 0x26A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_PropertyAccess;                             // 0x26A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               __CustomProperty_Bip001MinusNeck_ctrl_Pitch_B5DC69234092B6230B4EFEA611894A88; // 0x26B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               __CustomProperty_Bip001_Turn_ctrl_2_B5DC69234092B6230B4EFEA611894A88; // 0x26C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               __CustomProperty_Root_ctrl_B5DC69234092B6230B4EFEA611894A88; // 0x26E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               __CustomProperty_Bip001_Turn_ctrl_B5DC69234092B6230B4EFEA611894A88; // 0x26F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          __CustomProperty_bLocalControlled_B5DC69234092B6230B4EFEA611894A88; // 0x2710(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2711[0x7];                                     // 0x2711(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        __CustomProperty_BackRotateScale_B5DC69234092B6230B4EFEA611894A88; // 0x2718(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MoveSpeed;                                         // 0x2720(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFloatSpringState                      MoveSpringState;                                   // 0x2728(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	uint8                                         Pad_2734[0x4];                                     // 0x2734(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        IdleBreakElapsedTime;                              // 0x2738(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        IdleBreakInterval;                                 // 0x2740(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bHasVelocity;                                      // 0x2748(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2749[0x7];                                     // 0x2749(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        MovingAngleOffset;                                 // 0x2750(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFloatSpringState                      MovingYawOffsetSpringState;                        // 0x2758(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	uint8                                         Pad_2764[0x4];                                     // 0x2764(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               WorldRotation;                                     // 0x2768(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	double                                        RotateYawSpeed;                                    // 0x2780(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MovingAngleOffsetDelta;                            // 0x2788(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAnimConfigDirection8                         AccelerationDirection;                             // 0x2790(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2791[0x7];                                     // 0x2791(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        RotateYawOffsetSinceLastFrame;                     // 0x2798(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        RotateYawOffset;                                   // 0x27A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bYawOffsetBlending;                                // 0x27A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bRotateHead;                                       // 0x27A9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_27AA[0x2];                                     // 0x27AA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBlendingUtilParamsCache               BlendFloatCachedParams;                            // 0x27AC(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	EAnimConfigDirection8                         VelocityDirection;                                 // 0x27B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsOnServer;                                        // 0x27B9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_27BA[0x2];                                     // 0x27BA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBlendingUtilParamsCache               StopEndBlending;                                   // 0x27BC(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	double                                        AimPitch;                                          // 0x27C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bGameplayTagDelayFreeze;                           // 0x27D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(struct FPoseLink* Param_AnimGraph);
	void AnimNotify_EnterPantherDeathLoop();
	void BlueprintInitializeAnimation();
	void BlueprintThreadSafeUpdateAnimation(float DeltaTime);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Tgf_DruidPanther_AnimGraphNode_ControlRig_2AB6BCDB45B6C097F92AE69275EB3776();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Tgf_DruidPanther_AnimGraphNode_ControlRig_B5DC69234092B6230B4EFEA611894A88();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Tgf_DruidPanther_AnimGraphNode_IKRig_153B147C46DD0F857C952E82F01BAA5E();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Tgf_DruidPanther_AnimGraphNode_PoseSnapshot_E137021541930608716C1FA95F4D2172();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Tgf_DruidPanther_AnimGraphNode_TransitionResult_3F405D31468041149E011FB55F52FBDE();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Tgf_DruidPanther_AnimGraphNode_TransitionResult_59761028490632D42F0ED89F65D8113D();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Tgf_DruidPanther_AnimGraphNode_TransitionResult_67A4804A4F1E2A683C0937BB2D7F85FF();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Tgf_DruidPanther_AnimGraphNode_TransitionResult_880C0B3D479988B5650976976D5FD643();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Tgf_DruidPanther_AnimGraphNode_TransitionResult_A90A7E1A486C7BC4D5608FB95EF0365D();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Tgf_DruidPanther_AnimGraphNode_TransitionResult_B5ED9AE0408503D62099078B3E2CA94D();
	void ExecuteUbergraph_ABP_Tgf_DruidPanther(int32 EntryPoint);
	class ULyraCharacterMovementComponent* GetAttachedLyraCharacterMovement();
	bool GetEnableSloping();
	class ABP_Tgf_Character_Default_C* GetLyraCharacterThreadSafe();
	bool GetNeedFreeze();
	bool GetNeedIdleBreak();
	bool GetRotateHeadEnable();
	double GetRotateYawOffset();
	double GetSlopingAlpha();
	bool IsMovingFront();
	void OnIdleStateStart(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node);
	void OnIdleStateUpdate(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node);
	void SelectTurnInPlaceAnim(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node);
	void UpdateAimingData(double DeltaTime);
	void UpdateIdleBreakTime(double DeltaTime);
	void UpdateMoveDirection(double DeltaTime);
	void UpdateMoveSpeed(double DeltaTime);
	void UpdateRotation(double DeltaTime);
	void UpdateYawOffset(double DeltaTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_Tgf_DruidPanther_C">();
	}
	static class UABP_Tgf_DruidPanther_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_Tgf_DruidPanther_C>();
	}
};
static_assert(alignof(UABP_Tgf_DruidPanther_C) == 0x000010, "Wrong alignment on UABP_Tgf_DruidPanther_C");
static_assert(sizeof(UABP_Tgf_DruidPanther_C) == 0x0027E0, "Wrong size on UABP_Tgf_DruidPanther_C");
static_assert(offsetof(UABP_Tgf_DruidPanther_C, UberGraphFrame) == 0x000390, "Member 'UABP_Tgf_DruidPanther_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_Tgf_DruidPanther_C, __AnimBlueprintMutables) == 0x000398, "Member 'UABP_Tgf_DruidPanther_C::__AnimBlueprintMutables' has a wrong offset!");
static_assert(offsetof(UABP_Tgf_DruidPanther_C, AnimBlueprintExtension_PropertyAccess) == 0x0003B0, "Member 'UABP_Tgf_DruidPanther_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UABP_Tgf_DruidPanther_C, AnimBlueprintExtension_NodeRelevancy) == 0x0003B8, "Member 'UABP_Tgf_DruidPanther_C::AnimBlueprintExtension_NodeRelevancy' has a wrong offset!");
static_assert(offsetof(UABP_Tgf_DruidPanther_C, AnimBlueprintExtension_Base) == 0x000460, "Member 'UABP_Tgf_DruidPanther_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UABP_Tgf_DruidPanther_C, AnimGraphNode_Root) == 0x000468, "Member 'UABP_Tgf_DruidPanther_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_Tgf_DruidPanther_C, AnimGraphNode_TransitionResult_20) == 0x000488, "Member 'UABP_Tgf_DruidPanther_C::AnimGraphNode_TransitionResult_20' has a wrong offset!");
static_assert(offsetof(UABP_Tgf_DruidPanther_C, AnimGraphNode_TransitionResult_19) == 0x0004B0, "Member 'UABP_Tgf_DruidPanther_C::AnimGraphNode_TransitionResult_19' has a wrong offset!");
static_assert(offsetof(UABP_Tgf_DruidPanther_C, AnimGraphNode_TransitionResult_18) == 0x0004D8, "Member 'UABP_Tgf_DruidPanther_C::AnimGraphNode_TransitionResult_18' has a wrong offset!");
static_assert(offsetof(UABP_Tgf_DruidPanther_C, AnimGraphNode_TransitionResult_17) == 0x000500, "Member 'UABP_Tgf_DruidPanther_C::AnimGraphNode_TransitionResult_17' has a wrong offset!");
static_assert(offsetof(UABP_Tgf_DruidPanther_C, AnimGraphNode_TransitionResult_16) == 0x000528, "Member 'UABP_Tgf_DruidPanther_C::AnimGraphNode_TransitionResult_16' has a wrong offset!");
static_assert(offsetof(UABP_Tgf_DruidPanther_C, AnimGraphNode_TransitionResult_15) == 0x000550, "Member 'UABP_Tgf_DruidPanther_C::AnimGraphNode_TransitionResult_15' has a wrong offset!");
static_assert(offsetof(UABP_Tgf_DruidPanther_C, AnimGraphNode_TransitionResult_14) == 0x000578, "Member 'UABP_Tgf_DruidPanther_C::AnimGraphNode_TransitionResult_14' has a wrong offset!");
static_assert(offsetof(UABP_Tgf_DruidPanther_C, AnimGraphNode_TransitionResult_13) == 0x0005A0, "Member 'UABP_Tgf_DruidPanther_C::AnimGraphNode_TransitionResult_13' has a wrong offset!");
static_assert(offsetof(UABP_Tgf_DruidPanther_C, AnimGraphNode_TransitionResult_12) == 0x0005C8, "Member 'UABP_Tgf_DruidPanther_C::AnimGraphNode_TransitionResult_12' has a wrong offset!");
static_assert(offsetof(UABP_Tgf_DruidPanther_C, AnimGraphNode_TransitionResult_11) == 0x0005F0, "Member 'UABP_Tgf_DruidPanther_C::AnimGraphNode_TransitionResult_11' has a wrong offset!");
static_assert(offsetof(UABP_Tgf_DruidPanther_C, AnimGraphNode_SequencePlayer_9) == 0x000618, "Member 'UABP_Tgf_DruidPanther_C::AnimGraphNode_SequencePlayer_9' has a wrong offset!");
static_assert(offsetof(UABP_Tgf_DruidPanther_C, AnimGraphNode_StateResult_12) == 0x000660, "Member 'UABP_Tgf_DruidPanther_C::AnimGraphNode_StateResult_12' has a wrong offset!");
static_assert(offsetof(UABP_Tgf_DruidPanther_C, AnimGraphNode_SequencePlayer_8) == 0x000680, "Member 'UABP_Tgf_DruidPanther_C::AnimGraphNode_SequencePlayer_8' has a wrong offset!");
static_assert(offsetof(UABP_Tgf_DruidPanther_C, AnimGraphNode_StateResult_11) == 0x0006C8, "Member 'UABP_Tgf_DruidPanther_C::AnimGraphNode_StateResult_11' has a wrong offset!");
static_assert(offsetof(UABP_Tgf_DruidPanther_C, AnimGraphNode_SequencePlayer_7) == 0x0006E8, "Member 'UABP_Tgf_DruidPanther_C::AnimGraphNode_SequencePlayer_7' has a wrong offset!");
static_assert(offsetof(UABP_Tgf_DruidPanther_C, AnimGraphNode_StateResult_10) == 0x000730, "Member 'UABP_Tgf_DruidPanther_C::AnimGraphNode_StateResult_10' has a wrong offset!");
static_assert(offsetof(UABP_Tgf_DruidPanther_C, AnimGraphNode_SequencePlayer_6) == 0x000750, "Member 'UABP_Tgf_DruidPanther_C::AnimGraphNode_SequencePlayer_6' has a wrong offset!");
static_assert(offsetof(UABP_Tgf_DruidPanther_C, AnimGraphNode_StateResult_9) == 0x000798, "Member 'UABP_Tgf_DruidPanther_C::AnimGraphNode_StateResult_9' has a wrong offset!");
static_assert(offsetof(UABP_Tgf_DruidPanther_C, AnimGraphNode_BlendListByBool_5) == 0x0007B8, "Member 'UABP_Tgf_DruidPanther_C::AnimGraphNode_BlendListByBool_5' has a wrong offset!");
static_assert(offsetof(UABP_Tgf_DruidPanther_C, AnimGraphNode_TransitionResult_10) == 0x000800, "Member 'UABP_Tgf_DruidPanther_C::AnimGraphNode_TransitionResult_10' has a wrong offset!");
static_assert(offsetof(UABP_Tgf_DruidPanther_C, AnimGraphNode_TransitionResult_9) == 0x000828, "Member 'UABP_Tgf_DruidPanther_C::AnimGraphNode_TransitionResult_9' has a wrong offset!");
static_assert(offsetof(UABP_Tgf_DruidPanther_C, AnimGraphNode_TransitionResult_8) == 0x000850, "Member 'UABP_Tgf_DruidPanther_C::AnimGraphNode_TransitionResult_8' has a wrong offset!");
static_assert(offsetof(UABP_Tgf_DruidPanther_C, AnimGraphNode_SequencePlayer_5) == 0x000878, "Member 'UABP_Tgf_DruidPanther_C::AnimGraphNode_SequencePlayer_5' has a wrong offset!");
static_assert(offsetof(UABP_Tgf_DruidPanther_C, AnimGraphNode_StateResult_8) == 0x0008C0, "Member 'UABP_Tgf_DruidPanther_C::AnimGraphNode_StateResult_8' has a wrong offset!");
static_assert(offsetof(UABP_Tgf_DruidPanther_C, AnimGraphNode_SequencePlayer_4) == 0x0008E0, "Member 'UABP_Tgf_DruidPanther_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UABP_Tgf_DruidPanther_C, AnimGraphNode_StateResult_7) == 0x000928, "Member 'UABP_Tgf_DruidPanther_C::AnimGraphNode_StateResult_7' has a wrong offset!");
static_assert(offsetof(UABP_Tgf_DruidPanther_C, AnimGraphNode_IdentityPose_1) == 0x000948, "Member 'UABP_Tgf_DruidPanther_C::AnimGraphNode_IdentityPose_1' has a wrong offset!");
static_assert(offsetof(UABP_Tgf_DruidPanther_C, AnimGraphNode_StateResult_6) == 0x000958, "Member 'UABP_Tgf_DruidPanther_C::AnimGraphNode_StateResult_6' has a wrong offset!");
static_assert(offsetof(UABP_Tgf_DruidPanther_C, AnimGraphNode_StateMachine_3) == 0x000978, "Member 'UABP_Tgf_DruidPanther_C::AnimGraphNode_StateMachine_3' has a wrong offset!");
static_assert(offsetof(UABP_Tgf_DruidPanther_C, AnimGraphNode_ApplyAdditive_1) == 0x000A40, "Member 'UABP_Tgf_DruidPanther_C::AnimGraphNode_ApplyAdditive_1' has a wrong offset!");
static_assert(offsetof(UABP_Tgf_DruidPanther_C, AnimGraphNode_BlendSpacePlayer_1) == 0x000B08, "Member 'UABP_Tgf_DruidPanther_C::AnimGraphNode_BlendSpacePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_Tgf_DruidPanther_C, AnimGraphNode_BlendSpacePlayer) == 0x000B78, "Member 'UABP_Tgf_DruidPanther_C::AnimGraphNode_BlendSpacePlayer' has a wrong offset!");
static_assert(offsetof(UABP_Tgf_DruidPanther_C, AnimGraphNode_TransitionResult_7) == 0x000BE8, "Member 'UABP_Tgf_DruidPanther_C::AnimGraphNode_TransitionResult_7' has a wrong offset!");
static_assert(offsetof(UABP_Tgf_DruidPanther_C, AnimGraphNode_TransitionResult_6) == 0x000C10, "Member 'UABP_Tgf_DruidPanther_C::AnimGraphNode_TransitionResult_6' has a wrong offset!");
static_assert(offsetof(UABP_Tgf_DruidPanther_C, AnimGraphNode_TransitionResult_5) == 0x000C38, "Member 'UABP_Tgf_DruidPanther_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(UABP_Tgf_DruidPanther_C, AnimGraphNode_TransitionResult_4) == 0x000C60, "Member 'UABP_Tgf_DruidPanther_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UABP_Tgf_DruidPanther_C, AnimGraphNode_SequencePlayer_3) == 0x000C88, "Member 'UABP_Tgf_DruidPanther_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UABP_Tgf_DruidPanther_C, AnimGraphNode_StateResult_5) == 0x000CD0, "Member 'UABP_Tgf_DruidPanther_C::AnimGraphNode_StateResult_5' has a wrong offset!");
static_assert(offsetof(UABP_Tgf_DruidPanther_C, AnimGraphNode_SequencePlayer_2) == 0x000CF0, "Member 'UABP_Tgf_DruidPanther_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UABP_Tgf_DruidPanther_C, AnimGraphNode_StateResult_4) == 0x000D38, "Member 'UABP_Tgf_DruidPanther_C::AnimGraphNode_StateResult_4' has a wrong offset!");
static_assert(offsetof(UABP_Tgf_DruidPanther_C, AnimGraphNode_SequencePlayer_1) == 0x000D58, "Member 'UABP_Tgf_DruidPanther_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_Tgf_DruidPanther_C, AnimGraphNode_StateResult_3) == 0x000DA0, "Member 'UABP_Tgf_DruidPanther_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UABP_Tgf_DruidPanther_C, AnimGraphNode_StateMachine_2) == 0x000DC0, "Member 'UABP_Tgf_DruidPanther_C::AnimGraphNode_StateMachine_2' has a wrong offset!");
static_assert(offsetof(UABP_Tgf_DruidPanther_C, AnimGraphNode_BlendListByBool_4) == 0x000E88, "Member 'UABP_Tgf_DruidPanther_C::AnimGraphNode_BlendListByBool_4' has a wrong offset!");
static_assert(offsetof(UABP_Tgf_DruidPanther_C, AnimGraphNode_StateResult_2) == 0x000ED0, "Member 'UABP_Tgf_DruidPanther_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UABP_Tgf_DruidPanther_C, AnimGraphNode_StateMachine_1) == 0x000EF0, "Member 'UABP_Tgf_DruidPanther_C::AnimGraphNode_StateMachine_1' has a wrong offset!");
static_assert(offsetof(UABP_Tgf_DruidPanther_C, AnimGraphNode_Slot_2) == 0x000FB8, "Member 'UABP_Tgf_DruidPanther_C::AnimGraphNode_Slot_2' has a wrong offset!");
static_assert(offsetof(UABP_Tgf_DruidPanther_C, AnimGraphNode_ControlRig_1) == 0x001000, "Member 'UABP_Tgf_DruidPanther_C::AnimGraphNode_ControlRig_1' has a wrong offset!");
static_assert(offsetof(UABP_Tgf_DruidPanther_C, AnimGraphNode_ModifyCurve) == 0x001470, "Member 'UABP_Tgf_DruidPanther_C::AnimGraphNode_ModifyCurve' has a wrong offset!");
static_assert(offsetof(UABP_Tgf_DruidPanther_C, AnimGraphNode_ApplyAdditive) == 0x001570, "Member 'UABP_Tgf_DruidPanther_C::AnimGraphNode_ApplyAdditive' has a wrong offset!");
static_assert(offsetof(UABP_Tgf_DruidPanther_C, AnimGraphNode_Slot_1) == 0x001638, "Member 'UABP_Tgf_DruidPanther_C::AnimGraphNode_Slot_1' has a wrong offset!");
static_assert(offsetof(UABP_Tgf_DruidPanther_C, AnimGraphNode_IdentityPose) == 0x001680, "Member 'UABP_Tgf_DruidPanther_C::AnimGraphNode_IdentityPose' has a wrong offset!");
static_assert(offsetof(UABP_Tgf_DruidPanther_C, AnimGraphNode_LayeredBoneBlend) == 0x001690, "Member 'UABP_Tgf_DruidPanther_C::AnimGraphNode_LayeredBoneBlend' has a wrong offset!");
static_assert(offsetof(UABP_Tgf_DruidPanther_C, AnimGraphNode_SaveCachedPose_2) == 0x001770, "Member 'UABP_Tgf_DruidPanther_C::AnimGraphNode_SaveCachedPose_2' has a wrong offset!");
static_assert(offsetof(UABP_Tgf_DruidPanther_C, AnimGraphNode_UseCachedPose_5) == 0x001878, "Member 'UABP_Tgf_DruidPanther_C::AnimGraphNode_UseCachedPose_5' has a wrong offset!");
static_assert(offsetof(UABP_Tgf_DruidPanther_C, AnimGraphNode_UseCachedPose_4) == 0x0018A0, "Member 'UABP_Tgf_DruidPanther_C::AnimGraphNode_UseCachedPose_4' has a wrong offset!");
static_assert(offsetof(UABP_Tgf_DruidPanther_C, AnimGraphNode_Slot) == 0x0018C8, "Member 'UABP_Tgf_DruidPanther_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UABP_Tgf_DruidPanther_C, AnimGraphNode_ControlRig) == 0x001910, "Member 'UABP_Tgf_DruidPanther_C::AnimGraphNode_ControlRig' has a wrong offset!");
static_assert(offsetof(UABP_Tgf_DruidPanther_C, AnimGraphNode_BlendListByBool_3) == 0x001D80, "Member 'UABP_Tgf_DruidPanther_C::AnimGraphNode_BlendListByBool_3' has a wrong offset!");
static_assert(offsetof(UABP_Tgf_DruidPanther_C, AnimGraphNode_SaveCachedPose_1) == 0x001DC8, "Member 'UABP_Tgf_DruidPanther_C::AnimGraphNode_SaveCachedPose_1' has a wrong offset!");
static_assert(offsetof(UABP_Tgf_DruidPanther_C, AnimGraphNode_UseCachedPose_3) == 0x001ED0, "Member 'UABP_Tgf_DruidPanther_C::AnimGraphNode_UseCachedPose_3' has a wrong offset!");
static_assert(offsetof(UABP_Tgf_DruidPanther_C, AnimGraphNode_UseCachedPose_2) == 0x001EF8, "Member 'UABP_Tgf_DruidPanther_C::AnimGraphNode_UseCachedPose_2' has a wrong offset!");
static_assert(offsetof(UABP_Tgf_DruidPanther_C, AnimGraphNode_IKRig) == 0x001F20, "Member 'UABP_Tgf_DruidPanther_C::AnimGraphNode_IKRig' has a wrong offset!");
static_assert(offsetof(UABP_Tgf_DruidPanther_C, AnimGraphNode_BlendListByBool_2) == 0x002100, "Member 'UABP_Tgf_DruidPanther_C::AnimGraphNode_BlendListByBool_2' has a wrong offset!");
static_assert(offsetof(UABP_Tgf_DruidPanther_C, AnimGraphNode_SaveCachedPose) == 0x002148, "Member 'UABP_Tgf_DruidPanther_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_Tgf_DruidPanther_C, AnimGraphNode_UseCachedPose_1) == 0x002250, "Member 'UABP_Tgf_DruidPanther_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(UABP_Tgf_DruidPanther_C, AnimGraphNode_UseCachedPose) == 0x002278, "Member 'UABP_Tgf_DruidPanther_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_Tgf_DruidPanther_C, AnimGraphNode_BlendListByBool_1) == 0x0022A0, "Member 'UABP_Tgf_DruidPanther_C::AnimGraphNode_BlendListByBool_1' has a wrong offset!");
static_assert(offsetof(UABP_Tgf_DruidPanther_C, AnimGraphNode_TransitionResult_3) == 0x0022E8, "Member 'UABP_Tgf_DruidPanther_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UABP_Tgf_DruidPanther_C, AnimGraphNode_TransitionResult_2) == 0x002310, "Member 'UABP_Tgf_DruidPanther_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UABP_Tgf_DruidPanther_C, AnimGraphNode_TransitionResult_1) == 0x002338, "Member 'UABP_Tgf_DruidPanther_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UABP_Tgf_DruidPanther_C, AnimGraphNode_TransitionResult) == 0x002360, "Member 'UABP_Tgf_DruidPanther_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UABP_Tgf_DruidPanther_C, AnimGraphNode_SequenceEvaluator) == 0x002388, "Member 'UABP_Tgf_DruidPanther_C::AnimGraphNode_SequenceEvaluator' has a wrong offset!");
static_assert(offsetof(UABP_Tgf_DruidPanther_C, AnimGraphNode_StateResult_1) == 0x0023C8, "Member 'UABP_Tgf_DruidPanther_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UABP_Tgf_DruidPanther_C, AnimGraphNode_SequencePlayer) == 0x0023E8, "Member 'UABP_Tgf_DruidPanther_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UABP_Tgf_DruidPanther_C, AnimGraphNode_StateResult) == 0x002430, "Member 'UABP_Tgf_DruidPanther_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UABP_Tgf_DruidPanther_C, AnimGraphNode_StateMachine) == 0x002450, "Member 'UABP_Tgf_DruidPanther_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UABP_Tgf_DruidPanther_C, AnimGraphNode_BlendListByBool) == 0x002518, "Member 'UABP_Tgf_DruidPanther_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UABP_Tgf_DruidPanther_C, AnimGraphNode_PoseSnapshot) == 0x002560, "Member 'UABP_Tgf_DruidPanther_C::AnimGraphNode_PoseSnapshot' has a wrong offset!");
static_assert(offsetof(UABP_Tgf_DruidPanther_C, K2Node_PropertyAccess_18) == 0x0025F0, "Member 'UABP_Tgf_DruidPanther_C::K2Node_PropertyAccess_18' has a wrong offset!");
static_assert(offsetof(UABP_Tgf_DruidPanther_C, K2Node_PropertyAccess_17) == 0x002608, "Member 'UABP_Tgf_DruidPanther_C::K2Node_PropertyAccess_17' has a wrong offset!");
static_assert(offsetof(UABP_Tgf_DruidPanther_C, K2Node_PropertyAccess_16) == 0x002620, "Member 'UABP_Tgf_DruidPanther_C::K2Node_PropertyAccess_16' has a wrong offset!");
static_assert(offsetof(UABP_Tgf_DruidPanther_C, K2Node_PropertyAccess_14) == 0x002638, "Member 'UABP_Tgf_DruidPanther_C::K2Node_PropertyAccess_14' has a wrong offset!");
static_assert(offsetof(UABP_Tgf_DruidPanther_C, K2Node_PropertyAccess_13) == 0x002639, "Member 'UABP_Tgf_DruidPanther_C::K2Node_PropertyAccess_13' has a wrong offset!");
static_assert(offsetof(UABP_Tgf_DruidPanther_C, K2Node_PropertyAccess_7) == 0x002640, "Member 'UABP_Tgf_DruidPanther_C::K2Node_PropertyAccess_7' has a wrong offset!");
static_assert(offsetof(UABP_Tgf_DruidPanther_C, K2Node_PropertyAccess_5) == 0x002658, "Member 'UABP_Tgf_DruidPanther_C::K2Node_PropertyAccess_5' has a wrong offset!");
static_assert(offsetof(UABP_Tgf_DruidPanther_C, K2Node_PropertyAccess_3) == 0x002660, "Member 'UABP_Tgf_DruidPanther_C::K2Node_PropertyAccess_3' has a wrong offset!");
static_assert(offsetof(UABP_Tgf_DruidPanther_C, __CustomProperty_PositionAlpha_Bip001MinusLMinusHand_Goal_153B147C46DD0F857C952E82F01BAA5E) == 0x002668, "Member 'UABP_Tgf_DruidPanther_C::__CustomProperty_PositionAlpha_Bip001MinusLMinusHand_Goal_153B147C46DD0F857C952E82F01BAA5E' has a wrong offset!");
static_assert(offsetof(UABP_Tgf_DruidPanther_C, __CustomProperty_PositionAlpha_Bip001MinusRMinusHand_Goal_153B147C46DD0F857C952E82F01BAA5E) == 0x002670, "Member 'UABP_Tgf_DruidPanther_C::__CustomProperty_PositionAlpha_Bip001MinusRMinusHand_Goal_153B147C46DD0F857C952E82F01BAA5E' has a wrong offset!");
static_assert(offsetof(UABP_Tgf_DruidPanther_C, __CustomProperty_PositionAlpha_Bip001MinusRMinusFoot_Goal_153B147C46DD0F857C952E82F01BAA5E) == 0x002678, "Member 'UABP_Tgf_DruidPanther_C::__CustomProperty_PositionAlpha_Bip001MinusRMinusFoot_Goal_153B147C46DD0F857C952E82F01BAA5E' has a wrong offset!");
static_assert(offsetof(UABP_Tgf_DruidPanther_C, __CustomProperty_PositionAlpha_Bip001MinusLMinusFoot_Goal_153B147C46DD0F857C952E82F01BAA5E) == 0x002680, "Member 'UABP_Tgf_DruidPanther_C::__CustomProperty_PositionAlpha_Bip001MinusLMinusFoot_Goal_153B147C46DD0F857C952E82F01BAA5E' has a wrong offset!");
static_assert(offsetof(UABP_Tgf_DruidPanther_C, __CustomProperty_bLocalSpace_2AB6BCDB45B6C097F92AE69275EB3776) == 0x002688, "Member 'UABP_Tgf_DruidPanther_C::__CustomProperty_bLocalSpace_2AB6BCDB45B6C097F92AE69275EB3776' has a wrong offset!");
static_assert(offsetof(UABP_Tgf_DruidPanther_C, __CustomProperty_bEnable_2AB6BCDB45B6C097F92AE69275EB3776) == 0x002689, "Member 'UABP_Tgf_DruidPanther_C::__CustomProperty_bEnable_2AB6BCDB45B6C097F92AE69275EB3776' has a wrong offset!");
static_assert(offsetof(UABP_Tgf_DruidPanther_C, __CustomProperty_bDrawDebug_2AB6BCDB45B6C097F92AE69275EB3776) == 0x00268A, "Member 'UABP_Tgf_DruidPanther_C::__CustomProperty_bDrawDebug_2AB6BCDB45B6C097F92AE69275EB3776' has a wrong offset!");
static_assert(offsetof(UABP_Tgf_DruidPanther_C, __CustomProperty_Radius_2AB6BCDB45B6C097F92AE69275EB3776) == 0x002690, "Member 'UABP_Tgf_DruidPanther_C::__CustomProperty_Radius_2AB6BCDB45B6C097F92AE69275EB3776' has a wrong offset!");
static_assert(offsetof(UABP_Tgf_DruidPanther_C, __CustomProperty_EndOffset_2AB6BCDB45B6C097F92AE69275EB3776) == 0x002698, "Member 'UABP_Tgf_DruidPanther_C::__CustomProperty_EndOffset_2AB6BCDB45B6C097F92AE69275EB3776' has a wrong offset!");
static_assert(offsetof(UABP_Tgf_DruidPanther_C, __CustomProperty_StartOffset_2AB6BCDB45B6C097F92AE69275EB3776) == 0x0026A0, "Member 'UABP_Tgf_DruidPanther_C::__CustomProperty_StartOffset_2AB6BCDB45B6C097F92AE69275EB3776' has a wrong offset!");
static_assert(offsetof(UABP_Tgf_DruidPanther_C, K2Node_PropertyAccess) == 0x0026A8, "Member 'UABP_Tgf_DruidPanther_C::K2Node_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UABP_Tgf_DruidPanther_C, __CustomProperty_Bip001MinusNeck_ctrl_Pitch_B5DC69234092B6230B4EFEA611894A88) == 0x0026B0, "Member 'UABP_Tgf_DruidPanther_C::__CustomProperty_Bip001MinusNeck_ctrl_Pitch_B5DC69234092B6230B4EFEA611894A88' has a wrong offset!");
static_assert(offsetof(UABP_Tgf_DruidPanther_C, __CustomProperty_Bip001_Turn_ctrl_2_B5DC69234092B6230B4EFEA611894A88) == 0x0026C8, "Member 'UABP_Tgf_DruidPanther_C::__CustomProperty_Bip001_Turn_ctrl_2_B5DC69234092B6230B4EFEA611894A88' has a wrong offset!");
static_assert(offsetof(UABP_Tgf_DruidPanther_C, __CustomProperty_Root_ctrl_B5DC69234092B6230B4EFEA611894A88) == 0x0026E0, "Member 'UABP_Tgf_DruidPanther_C::__CustomProperty_Root_ctrl_B5DC69234092B6230B4EFEA611894A88' has a wrong offset!");
static_assert(offsetof(UABP_Tgf_DruidPanther_C, __CustomProperty_Bip001_Turn_ctrl_B5DC69234092B6230B4EFEA611894A88) == 0x0026F8, "Member 'UABP_Tgf_DruidPanther_C::__CustomProperty_Bip001_Turn_ctrl_B5DC69234092B6230B4EFEA611894A88' has a wrong offset!");
static_assert(offsetof(UABP_Tgf_DruidPanther_C, __CustomProperty_bLocalControlled_B5DC69234092B6230B4EFEA611894A88) == 0x002710, "Member 'UABP_Tgf_DruidPanther_C::__CustomProperty_bLocalControlled_B5DC69234092B6230B4EFEA611894A88' has a wrong offset!");
static_assert(offsetof(UABP_Tgf_DruidPanther_C, __CustomProperty_BackRotateScale_B5DC69234092B6230B4EFEA611894A88) == 0x002718, "Member 'UABP_Tgf_DruidPanther_C::__CustomProperty_BackRotateScale_B5DC69234092B6230B4EFEA611894A88' has a wrong offset!");
static_assert(offsetof(UABP_Tgf_DruidPanther_C, MoveSpeed) == 0x002720, "Member 'UABP_Tgf_DruidPanther_C::MoveSpeed' has a wrong offset!");
static_assert(offsetof(UABP_Tgf_DruidPanther_C, MoveSpringState) == 0x002728, "Member 'UABP_Tgf_DruidPanther_C::MoveSpringState' has a wrong offset!");
static_assert(offsetof(UABP_Tgf_DruidPanther_C, IdleBreakElapsedTime) == 0x002738, "Member 'UABP_Tgf_DruidPanther_C::IdleBreakElapsedTime' has a wrong offset!");
static_assert(offsetof(UABP_Tgf_DruidPanther_C, IdleBreakInterval) == 0x002740, "Member 'UABP_Tgf_DruidPanther_C::IdleBreakInterval' has a wrong offset!");
static_assert(offsetof(UABP_Tgf_DruidPanther_C, bHasVelocity) == 0x002748, "Member 'UABP_Tgf_DruidPanther_C::bHasVelocity' has a wrong offset!");
static_assert(offsetof(UABP_Tgf_DruidPanther_C, MovingAngleOffset) == 0x002750, "Member 'UABP_Tgf_DruidPanther_C::MovingAngleOffset' has a wrong offset!");
static_assert(offsetof(UABP_Tgf_DruidPanther_C, MovingYawOffsetSpringState) == 0x002758, "Member 'UABP_Tgf_DruidPanther_C::MovingYawOffsetSpringState' has a wrong offset!");
static_assert(offsetof(UABP_Tgf_DruidPanther_C, WorldRotation) == 0x002768, "Member 'UABP_Tgf_DruidPanther_C::WorldRotation' has a wrong offset!");
static_assert(offsetof(UABP_Tgf_DruidPanther_C, RotateYawSpeed) == 0x002780, "Member 'UABP_Tgf_DruidPanther_C::RotateYawSpeed' has a wrong offset!");
static_assert(offsetof(UABP_Tgf_DruidPanther_C, MovingAngleOffsetDelta) == 0x002788, "Member 'UABP_Tgf_DruidPanther_C::MovingAngleOffsetDelta' has a wrong offset!");
static_assert(offsetof(UABP_Tgf_DruidPanther_C, AccelerationDirection) == 0x002790, "Member 'UABP_Tgf_DruidPanther_C::AccelerationDirection' has a wrong offset!");
static_assert(offsetof(UABP_Tgf_DruidPanther_C, RotateYawOffsetSinceLastFrame) == 0x002798, "Member 'UABP_Tgf_DruidPanther_C::RotateYawOffsetSinceLastFrame' has a wrong offset!");
static_assert(offsetof(UABP_Tgf_DruidPanther_C, RotateYawOffset) == 0x0027A0, "Member 'UABP_Tgf_DruidPanther_C::RotateYawOffset' has a wrong offset!");
static_assert(offsetof(UABP_Tgf_DruidPanther_C, bYawOffsetBlending) == 0x0027A8, "Member 'UABP_Tgf_DruidPanther_C::bYawOffsetBlending' has a wrong offset!");
static_assert(offsetof(UABP_Tgf_DruidPanther_C, bRotateHead) == 0x0027A9, "Member 'UABP_Tgf_DruidPanther_C::bRotateHead' has a wrong offset!");
static_assert(offsetof(UABP_Tgf_DruidPanther_C, BlendFloatCachedParams) == 0x0027AC, "Member 'UABP_Tgf_DruidPanther_C::BlendFloatCachedParams' has a wrong offset!");
static_assert(offsetof(UABP_Tgf_DruidPanther_C, VelocityDirection) == 0x0027B8, "Member 'UABP_Tgf_DruidPanther_C::VelocityDirection' has a wrong offset!");
static_assert(offsetof(UABP_Tgf_DruidPanther_C, IsOnServer) == 0x0027B9, "Member 'UABP_Tgf_DruidPanther_C::IsOnServer' has a wrong offset!");
static_assert(offsetof(UABP_Tgf_DruidPanther_C, StopEndBlending) == 0x0027BC, "Member 'UABP_Tgf_DruidPanther_C::StopEndBlending' has a wrong offset!");
static_assert(offsetof(UABP_Tgf_DruidPanther_C, AimPitch) == 0x0027C8, "Member 'UABP_Tgf_DruidPanther_C::AimPitch' has a wrong offset!");
static_assert(offsetof(UABP_Tgf_DruidPanther_C, bGameplayTagDelayFreeze) == 0x0027D0, "Member 'UABP_Tgf_DruidPanther_C::bGameplayTagDelayFreeze' has a wrong offset!");

}

