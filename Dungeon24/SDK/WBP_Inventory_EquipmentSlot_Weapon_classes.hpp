#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Inventory_EquipmentSlot_Weapon

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "Engine_structs.hpp"
#include "WBP_Inventory_EquipmentSlot_Base_classes.hpp"
#include "AkAudio_structs.hpp"
#include "LyraGame_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_Inventory_EquipmentSlot_Weapon.WBP_Inventory_EquipmentSlot_Weapon_C
// 0x0130 (0x0528 - 0x03F8)
class UWBP_Inventory_EquipmentSlot_Weapon_C final : public UWBP_Inventory_EquipmentSlot_Base_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_WBP_Inventory_EquipmentSlot_Weapon_C; // 0x03F8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 ActiveWeapon;                                      // 0x0400(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Combined;                                          // 0x0408(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 CombinedHover;                                     // 0x0410(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               CombinedHoverHighlight;                            // 0x0418(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Inventory_Equipment_DropArea_C*    DropArea_Combined;                                 // 0x0420(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Inventory_Equipment_DropArea_C*    DropArea_LeftHand;                                 // 0x0428(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Inventory_Equipment_DropArea_C*    DropArea_RightHand;                                // 0x0430(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         DropArea_Split;                                    // 0x0438(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               LeftHand;                                          // 0x0440(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               LeftHand_1;                                        // 0x0448(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 LeftHover;                                         // 0x0450(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Mask_LeftHand;                                     // 0x0458(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Mask_RightHand;                                    // 0x0460(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 MaskArea_Combined;                                 // 0x0468(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         MaskArea_Split;                                    // 0x0470(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               RightHand;                                         // 0x0478(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               RightHand_1;                                       // 0x0480(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 RightHover;                                        // 0x0488(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Soul;                                              // 0x0490(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               SoulCombined;                                      // 0x0498(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_InventorySoulBoundInspector_C*     SoulFull;                                          // 0x04A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_InventorySoulBoundInspector_C*     SoulFullLeft;                                      // 0x04A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_InventorySoulBoundInspector_C*     SoulFullRight;                                     // 0x04B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SoulFxCombined;                                    // 0x04B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SoulFxLeft;                                        // 0x04C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SoulFxRight;                                       // 0x04C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 SoulLeft;                                          // 0x04D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 SoulRight;                                         // 0x04D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         SoulSplit;                                         // 0x04E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         Split;                                             // 0x04E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         SplitHoverHighlight;                               // 0x04F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       WeaponSetLebel;                                    // 0x04F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Common_ItemEntry_C*                Right_Entry;                                       // 0x0500(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_Common_ItemEntry_C*                Left_Entry;                                        // 0x0508(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Version;                                           // 0x0510(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bTooltipShown;                                     // 0x0514(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bHoverOnLeft;                                      // 0x0515(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Two_Handing;                                       // 0x0516(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_517[0x1];                                      // 0x0517(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 NormalStyle;                                       // 0x0518(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 ActiveStyle;                                       // 0x0520(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void BP_OnActivated();
	void ExecuteUbergraph_WBP_Inventory_EquipmentSlot_Weapon(int32 EntryPoint);
	void Finish_Setup_Weapon_Item_Entry(class UWBP_Common_ItemEntry_C* ItemEntry, class UOverlay* ParentWidget);
	void Get_Weapon_Occupying_Slot(class UTgfEquipmentWrapper* Weapon_Right, class UTgfEquipmentWrapper* Weapon_Left, class UOverlay** Weapon_Right_Host, class UWBP_Inventory_Equipment_DropArea_C** Weapon_Right_DropArea, class UOverlay** Weapon_Left_Host, class UWBP_Inventory_Equipment_DropArea_C** Weapon_Left_DropArea, bool* bTwoHanding);
	void Hide_All_Drop_Areas();
	void On_Quick_Discard(class UWBP_Common_ItemEntry_C* Item_Entry);
	void On_Quick_Unequip(class UWBP_Common_ItemEntry_C* ItemEntry);
	bool OnDrop(const struct FGeometry& MyGeometry, const struct FPointerEvent& PointerEvent, class UDragDropOperation* Operation);
	void OnInventoryDragInitiated(class UTgfInventoryDragDropOperation* DragOperation);
	void OnItemDragEnded(class UDragDropOperation* Operation);
	void OnMouseEnter(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void OnMouseLeave(const struct FPointerEvent& MouseEvent);
	struct FEventReply OnMouseMove(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void OnReady_69940C524E48E4B2657650812CD0E685();
	void OnReady_CA495EE2478D702A2EAFB59DFFAB1F54();
	void PreConstruct(bool IsDesignTime);
	void Refresh_Equipment(class UTgfEquipmentWrapper* Weapon_Right, class UTgfEquipmentWrapper* Weapon_Left, ETgfEquipSlot Slot_Right, ETgfEquipSlot Slot_Left);
	void ShouldNotShowTooltip(bool* bNoShow);
	void Update_Hover(const struct FPointerEvent& MouseEvent);
	void Update_Slot_Visibilities(bool bShowTwoHand);
	void UpdateDropAreaBasedOnDraggedWeapon(class UDragDropOperation* DragDropOperation);

	class FString GetModuleName() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_Inventory_EquipmentSlot_Weapon_C">();
	}
	static class UWBP_Inventory_EquipmentSlot_Weapon_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_Inventory_EquipmentSlot_Weapon_C>();
	}
};
static_assert(alignof(UWBP_Inventory_EquipmentSlot_Weapon_C) == 0x000008, "Wrong alignment on UWBP_Inventory_EquipmentSlot_Weapon_C");
static_assert(sizeof(UWBP_Inventory_EquipmentSlot_Weapon_C) == 0x000528, "Wrong size on UWBP_Inventory_EquipmentSlot_Weapon_C");
static_assert(offsetof(UWBP_Inventory_EquipmentSlot_Weapon_C, UberGraphFrame_WBP_Inventory_EquipmentSlot_Weapon_C) == 0x0003F8, "Member 'UWBP_Inventory_EquipmentSlot_Weapon_C::UberGraphFrame_WBP_Inventory_EquipmentSlot_Weapon_C' has a wrong offset!");
static_assert(offsetof(UWBP_Inventory_EquipmentSlot_Weapon_C, ActiveWeapon) == 0x000400, "Member 'UWBP_Inventory_EquipmentSlot_Weapon_C::ActiveWeapon' has a wrong offset!");
static_assert(offsetof(UWBP_Inventory_EquipmentSlot_Weapon_C, Combined) == 0x000408, "Member 'UWBP_Inventory_EquipmentSlot_Weapon_C::Combined' has a wrong offset!");
static_assert(offsetof(UWBP_Inventory_EquipmentSlot_Weapon_C, CombinedHover) == 0x000410, "Member 'UWBP_Inventory_EquipmentSlot_Weapon_C::CombinedHover' has a wrong offset!");
static_assert(offsetof(UWBP_Inventory_EquipmentSlot_Weapon_C, CombinedHoverHighlight) == 0x000418, "Member 'UWBP_Inventory_EquipmentSlot_Weapon_C::CombinedHoverHighlight' has a wrong offset!");
static_assert(offsetof(UWBP_Inventory_EquipmentSlot_Weapon_C, DropArea_Combined) == 0x000420, "Member 'UWBP_Inventory_EquipmentSlot_Weapon_C::DropArea_Combined' has a wrong offset!");
static_assert(offsetof(UWBP_Inventory_EquipmentSlot_Weapon_C, DropArea_LeftHand) == 0x000428, "Member 'UWBP_Inventory_EquipmentSlot_Weapon_C::DropArea_LeftHand' has a wrong offset!");
static_assert(offsetof(UWBP_Inventory_EquipmentSlot_Weapon_C, DropArea_RightHand) == 0x000430, "Member 'UWBP_Inventory_EquipmentSlot_Weapon_C::DropArea_RightHand' has a wrong offset!");
static_assert(offsetof(UWBP_Inventory_EquipmentSlot_Weapon_C, DropArea_Split) == 0x000438, "Member 'UWBP_Inventory_EquipmentSlot_Weapon_C::DropArea_Split' has a wrong offset!");
static_assert(offsetof(UWBP_Inventory_EquipmentSlot_Weapon_C, LeftHand) == 0x000440, "Member 'UWBP_Inventory_EquipmentSlot_Weapon_C::LeftHand' has a wrong offset!");
static_assert(offsetof(UWBP_Inventory_EquipmentSlot_Weapon_C, LeftHand_1) == 0x000448, "Member 'UWBP_Inventory_EquipmentSlot_Weapon_C::LeftHand_1' has a wrong offset!");
static_assert(offsetof(UWBP_Inventory_EquipmentSlot_Weapon_C, LeftHover) == 0x000450, "Member 'UWBP_Inventory_EquipmentSlot_Weapon_C::LeftHover' has a wrong offset!");
static_assert(offsetof(UWBP_Inventory_EquipmentSlot_Weapon_C, Mask_LeftHand) == 0x000458, "Member 'UWBP_Inventory_EquipmentSlot_Weapon_C::Mask_LeftHand' has a wrong offset!");
static_assert(offsetof(UWBP_Inventory_EquipmentSlot_Weapon_C, Mask_RightHand) == 0x000460, "Member 'UWBP_Inventory_EquipmentSlot_Weapon_C::Mask_RightHand' has a wrong offset!");
static_assert(offsetof(UWBP_Inventory_EquipmentSlot_Weapon_C, MaskArea_Combined) == 0x000468, "Member 'UWBP_Inventory_EquipmentSlot_Weapon_C::MaskArea_Combined' has a wrong offset!");
static_assert(offsetof(UWBP_Inventory_EquipmentSlot_Weapon_C, MaskArea_Split) == 0x000470, "Member 'UWBP_Inventory_EquipmentSlot_Weapon_C::MaskArea_Split' has a wrong offset!");
static_assert(offsetof(UWBP_Inventory_EquipmentSlot_Weapon_C, RightHand) == 0x000478, "Member 'UWBP_Inventory_EquipmentSlot_Weapon_C::RightHand' has a wrong offset!");
static_assert(offsetof(UWBP_Inventory_EquipmentSlot_Weapon_C, RightHand_1) == 0x000480, "Member 'UWBP_Inventory_EquipmentSlot_Weapon_C::RightHand_1' has a wrong offset!");
static_assert(offsetof(UWBP_Inventory_EquipmentSlot_Weapon_C, RightHover) == 0x000488, "Member 'UWBP_Inventory_EquipmentSlot_Weapon_C::RightHover' has a wrong offset!");
static_assert(offsetof(UWBP_Inventory_EquipmentSlot_Weapon_C, Soul) == 0x000490, "Member 'UWBP_Inventory_EquipmentSlot_Weapon_C::Soul' has a wrong offset!");
static_assert(offsetof(UWBP_Inventory_EquipmentSlot_Weapon_C, SoulCombined) == 0x000498, "Member 'UWBP_Inventory_EquipmentSlot_Weapon_C::SoulCombined' has a wrong offset!");
static_assert(offsetof(UWBP_Inventory_EquipmentSlot_Weapon_C, SoulFull) == 0x0004A0, "Member 'UWBP_Inventory_EquipmentSlot_Weapon_C::SoulFull' has a wrong offset!");
static_assert(offsetof(UWBP_Inventory_EquipmentSlot_Weapon_C, SoulFullLeft) == 0x0004A8, "Member 'UWBP_Inventory_EquipmentSlot_Weapon_C::SoulFullLeft' has a wrong offset!");
static_assert(offsetof(UWBP_Inventory_EquipmentSlot_Weapon_C, SoulFullRight) == 0x0004B0, "Member 'UWBP_Inventory_EquipmentSlot_Weapon_C::SoulFullRight' has a wrong offset!");
static_assert(offsetof(UWBP_Inventory_EquipmentSlot_Weapon_C, SoulFxCombined) == 0x0004B8, "Member 'UWBP_Inventory_EquipmentSlot_Weapon_C::SoulFxCombined' has a wrong offset!");
static_assert(offsetof(UWBP_Inventory_EquipmentSlot_Weapon_C, SoulFxLeft) == 0x0004C0, "Member 'UWBP_Inventory_EquipmentSlot_Weapon_C::SoulFxLeft' has a wrong offset!");
static_assert(offsetof(UWBP_Inventory_EquipmentSlot_Weapon_C, SoulFxRight) == 0x0004C8, "Member 'UWBP_Inventory_EquipmentSlot_Weapon_C::SoulFxRight' has a wrong offset!");
static_assert(offsetof(UWBP_Inventory_EquipmentSlot_Weapon_C, SoulLeft) == 0x0004D0, "Member 'UWBP_Inventory_EquipmentSlot_Weapon_C::SoulLeft' has a wrong offset!");
static_assert(offsetof(UWBP_Inventory_EquipmentSlot_Weapon_C, SoulRight) == 0x0004D8, "Member 'UWBP_Inventory_EquipmentSlot_Weapon_C::SoulRight' has a wrong offset!");
static_assert(offsetof(UWBP_Inventory_EquipmentSlot_Weapon_C, SoulSplit) == 0x0004E0, "Member 'UWBP_Inventory_EquipmentSlot_Weapon_C::SoulSplit' has a wrong offset!");
static_assert(offsetof(UWBP_Inventory_EquipmentSlot_Weapon_C, Split) == 0x0004E8, "Member 'UWBP_Inventory_EquipmentSlot_Weapon_C::Split' has a wrong offset!");
static_assert(offsetof(UWBP_Inventory_EquipmentSlot_Weapon_C, SplitHoverHighlight) == 0x0004F0, "Member 'UWBP_Inventory_EquipmentSlot_Weapon_C::SplitHoverHighlight' has a wrong offset!");
static_assert(offsetof(UWBP_Inventory_EquipmentSlot_Weapon_C, WeaponSetLebel) == 0x0004F8, "Member 'UWBP_Inventory_EquipmentSlot_Weapon_C::WeaponSetLebel' has a wrong offset!");
static_assert(offsetof(UWBP_Inventory_EquipmentSlot_Weapon_C, Right_Entry) == 0x000500, "Member 'UWBP_Inventory_EquipmentSlot_Weapon_C::Right_Entry' has a wrong offset!");
static_assert(offsetof(UWBP_Inventory_EquipmentSlot_Weapon_C, Left_Entry) == 0x000508, "Member 'UWBP_Inventory_EquipmentSlot_Weapon_C::Left_Entry' has a wrong offset!");
static_assert(offsetof(UWBP_Inventory_EquipmentSlot_Weapon_C, Version) == 0x000510, "Member 'UWBP_Inventory_EquipmentSlot_Weapon_C::Version' has a wrong offset!");
static_assert(offsetof(UWBP_Inventory_EquipmentSlot_Weapon_C, bTooltipShown) == 0x000514, "Member 'UWBP_Inventory_EquipmentSlot_Weapon_C::bTooltipShown' has a wrong offset!");
static_assert(offsetof(UWBP_Inventory_EquipmentSlot_Weapon_C, bHoverOnLeft) == 0x000515, "Member 'UWBP_Inventory_EquipmentSlot_Weapon_C::bHoverOnLeft' has a wrong offset!");
static_assert(offsetof(UWBP_Inventory_EquipmentSlot_Weapon_C, Two_Handing) == 0x000516, "Member 'UWBP_Inventory_EquipmentSlot_Weapon_C::Two_Handing' has a wrong offset!");
static_assert(offsetof(UWBP_Inventory_EquipmentSlot_Weapon_C, NormalStyle) == 0x000518, "Member 'UWBP_Inventory_EquipmentSlot_Weapon_C::NormalStyle' has a wrong offset!");
static_assert(offsetof(UWBP_Inventory_EquipmentSlot_Weapon_C, ActiveStyle) == 0x000520, "Member 'UWBP_Inventory_EquipmentSlot_Weapon_C::ActiveStyle' has a wrong offset!");

}

