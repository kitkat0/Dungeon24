#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: EasyFileDialog

#include "Basic.hpp"

#include "EasyFileDialog_classes.hpp"
#include "EasyFileDialog_parameters.hpp"


namespace SDK
{

// Function EasyFileDialog.EasyFileDialogBPLibrary.EasyFileDialogSampleFunction
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                                   Param                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UEasyFileDialogBPLibrary::EasyFileDialogSampleFunction(float Param)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EasyFileDialogBPLibrary", "EasyFileDialogSampleFunction");

	Params::EasyFileDialogBPLibrary_EasyFileDialogSampleFunction Parms{};

	Parms.Param = Param;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFileDialog.EFDFunctionLibrary.OpenFileDialog
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           DialogTitle                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           DefaultPath                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           DefaultFile                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           FileTypes                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEasyFileDialogFlags                    Param_Flags                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>                   OutFilenames                                           (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEFDFunctionLibrary::OpenFileDialog(const class FString& DialogTitle, const class FString& DefaultPath, const class FString& DefaultFile, const class FString& FileTypes, EEasyFileDialogFlags Param_Flags, TArray<class FString>* OutFilenames)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EFDFunctionLibrary", "OpenFileDialog");

	Params::EFDFunctionLibrary_OpenFileDialog Parms{};

	Parms.DialogTitle = std::move(DialogTitle);
	Parms.DefaultPath = std::move(DefaultPath);
	Parms.DefaultFile = std::move(DefaultFile);
	Parms.FileTypes = std::move(FileTypes);
	Parms.Param_Flags = Param_Flags;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutFilenames != nullptr)
		*OutFilenames = std::move(Parms.OutFilenames);

	return Parms.ReturnValue;
}


// Function EasyFileDialog.EFDFunctionLibrary.OpenFolderDialog
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           DialogTitle                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           DefaultPath                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           OutFolderName                                          (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEFDFunctionLibrary::OpenFolderDialog(const class FString& DialogTitle, const class FString& DefaultPath, class FString* OutFolderName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EFDFunctionLibrary", "OpenFolderDialog");

	Params::EFDFunctionLibrary_OpenFolderDialog Parms{};

	Parms.DialogTitle = std::move(DialogTitle);
	Parms.DefaultPath = std::move(DefaultPath);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutFolderName != nullptr)
		*OutFolderName = std::move(Parms.OutFolderName);

	return Parms.ReturnValue;
}


// Function EasyFileDialog.EFDFunctionLibrary.SaveFileDialog
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           DialogTitle                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           DefaultPath                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           DefaultFile                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           FileTypeDescription                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           FileType                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEasyFileDialogFlags                    Param_Flags                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>                   OutFilenames                                           (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEFDFunctionLibrary::SaveFileDialog(const class FString& DialogTitle, const class FString& DefaultPath, const class FString& DefaultFile, const class FString& FileTypeDescription, const class FString& FileType, EEasyFileDialogFlags Param_Flags, TArray<class FString>* OutFilenames)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EFDFunctionLibrary", "SaveFileDialog");

	Params::EFDFunctionLibrary_SaveFileDialog Parms{};

	Parms.DialogTitle = std::move(DialogTitle);
	Parms.DefaultPath = std::move(DefaultPath);
	Parms.DefaultFile = std::move(DefaultFile);
	Parms.FileTypeDescription = std::move(FileTypeDescription);
	Parms.FileType = std::move(FileType);
	Parms.Param_Flags = Param_Flags;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutFilenames != nullptr)
		*OutFilenames = std::move(Parms.OutFilenames);

	return Parms.ReturnValue;
}

}

