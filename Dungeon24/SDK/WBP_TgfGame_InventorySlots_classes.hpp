#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_TgfGame_InventorySlots

#include "Basic.hpp"

#include "TGFBattleProtocol_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"
#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "AkAudio_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_TgfGame_InventorySlots.WBP_TgfGame_InventorySlots_C
// 0x0178 (0x03F0 - 0x0278)
class UWBP_TgfGame_InventorySlots_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0278(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 BackgroundGrid;                                    // 0x0280(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Black20;                                           // 0x0288(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 DropIndicator;                                     // 0x0290(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGridPanel*                             Grid;                                              // 0x0298(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUniformGridPanel*                      GridGamePadSelectPanel;                            // 0x02A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               GridOverlay;                                       // 0x02A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Hover;                                             // 0x02B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	int32                                         CachedRowCount;                                    // 0x02B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CachedColumnCount;                                 // 0x02BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UWBP_TgfGame_InventoryEntry_C*>  ItemEntries;                                       // 0x02C0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	bool                                          bIsLoot;                                           // 0x02D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D1[0x7];                                      // 0x02D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UImage*                                 DropIndicator_0;                                   // 0x02D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UTgfInventoryWrapper*                   CachedInventoryContext;                            // 0x02E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         Page_Id;                                           // 0x02E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETGFProtoTgfEnItemStorageType                 StorageType;                                       // 0x02EC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2ED[0x3];                                      // 0x02ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         OriginalCellSize;                                  // 0x02F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F4[0xC];                                      // 0x02F4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            BackgroundGridBrush;                               // 0x0300(0x00D0)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UTgfWidgetGamepadWrapper*               GamepadWrapper;                                    // 0x03D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<class UUserWidget*>                    CellPool;                                          // 0x03D8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)

public:
	void Construct();
	void ExecuteUbergraph_WBP_TgfGame_InventorySlots(int32 EntryPoint);
	void GetCellSize(double* Width, double* Height);
	void GetMouseCell(const struct FPointerEvent& PointerEvent, struct FIntPoint* Ret);
	void GetPotentialDropPosition(const struct FVector2D& AbsoluteCoordinate, TSubclassOf<class ULyraInventoryItemDefinition> Item_Definition, int32* TopRow, int32* LeftColumn, int32* RowSize, int32* ColumnSize);
	void OnDragEnter(const struct FGeometry& MyGeometry, const struct FPointerEvent& PointerEvent, class UDragDropOperation* Operation);
	void OnDragLeave(const struct FPointerEvent& PointerEvent, class UDragDropOperation* Operation);
	bool OnDragOver(const struct FGeometry& MyGeometry, const struct FPointerEvent& PointerEvent, class UDragDropOperation* Operation);
	bool OnDrop(const struct FGeometry& MyGeometry, const struct FPointerEvent& PointerEvent, class UDragDropOperation* Operation);
	void OnInventoryUpdated();
	void OnMouseEnter(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void OnMouseLeave(const struct FPointerEvent& MouseEvent);
	struct FEventReply OnMouseMove(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void OnStorageUpdate();
	void PreConstruct(bool IsDesignTime);
	void PreviewGrid(int32 Rows, int32 Columns);
	void RefreshEntries();
	void SetDropIndicatorStats(bool Stats);
	void SetDropIndicatorVisibility(bool bVisible);
	void SetHover(bool Show, int32 Row, int32 Col);
	void SetUp(int32 PageId);
	void SetupGrid(int32 Rows, int32 Columns);
	void UpdateHover(const struct FPointerEvent& MouseEvent, struct FEventReply* Ret);

	class FString GetModuleName() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_TgfGame_InventorySlots_C">();
	}
	static class UWBP_TgfGame_InventorySlots_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_TgfGame_InventorySlots_C>();
	}
};
static_assert(alignof(UWBP_TgfGame_InventorySlots_C) == 0x000010, "Wrong alignment on UWBP_TgfGame_InventorySlots_C");
static_assert(sizeof(UWBP_TgfGame_InventorySlots_C) == 0x0003F0, "Wrong size on UWBP_TgfGame_InventorySlots_C");
static_assert(offsetof(UWBP_TgfGame_InventorySlots_C, UberGraphFrame) == 0x000278, "Member 'UWBP_TgfGame_InventorySlots_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_TgfGame_InventorySlots_C, BackgroundGrid) == 0x000280, "Member 'UWBP_TgfGame_InventorySlots_C::BackgroundGrid' has a wrong offset!");
static_assert(offsetof(UWBP_TgfGame_InventorySlots_C, Black20) == 0x000288, "Member 'UWBP_TgfGame_InventorySlots_C::Black20' has a wrong offset!");
static_assert(offsetof(UWBP_TgfGame_InventorySlots_C, DropIndicator) == 0x000290, "Member 'UWBP_TgfGame_InventorySlots_C::DropIndicator' has a wrong offset!");
static_assert(offsetof(UWBP_TgfGame_InventorySlots_C, Grid) == 0x000298, "Member 'UWBP_TgfGame_InventorySlots_C::Grid' has a wrong offset!");
static_assert(offsetof(UWBP_TgfGame_InventorySlots_C, GridGamePadSelectPanel) == 0x0002A0, "Member 'UWBP_TgfGame_InventorySlots_C::GridGamePadSelectPanel' has a wrong offset!");
static_assert(offsetof(UWBP_TgfGame_InventorySlots_C, GridOverlay) == 0x0002A8, "Member 'UWBP_TgfGame_InventorySlots_C::GridOverlay' has a wrong offset!");
static_assert(offsetof(UWBP_TgfGame_InventorySlots_C, Hover) == 0x0002B0, "Member 'UWBP_TgfGame_InventorySlots_C::Hover' has a wrong offset!");
static_assert(offsetof(UWBP_TgfGame_InventorySlots_C, CachedRowCount) == 0x0002B8, "Member 'UWBP_TgfGame_InventorySlots_C::CachedRowCount' has a wrong offset!");
static_assert(offsetof(UWBP_TgfGame_InventorySlots_C, CachedColumnCount) == 0x0002BC, "Member 'UWBP_TgfGame_InventorySlots_C::CachedColumnCount' has a wrong offset!");
static_assert(offsetof(UWBP_TgfGame_InventorySlots_C, ItemEntries) == 0x0002C0, "Member 'UWBP_TgfGame_InventorySlots_C::ItemEntries' has a wrong offset!");
static_assert(offsetof(UWBP_TgfGame_InventorySlots_C, bIsLoot) == 0x0002D0, "Member 'UWBP_TgfGame_InventorySlots_C::bIsLoot' has a wrong offset!");
static_assert(offsetof(UWBP_TgfGame_InventorySlots_C, DropIndicator_0) == 0x0002D8, "Member 'UWBP_TgfGame_InventorySlots_C::DropIndicator_0' has a wrong offset!");
static_assert(offsetof(UWBP_TgfGame_InventorySlots_C, CachedInventoryContext) == 0x0002E0, "Member 'UWBP_TgfGame_InventorySlots_C::CachedInventoryContext' has a wrong offset!");
static_assert(offsetof(UWBP_TgfGame_InventorySlots_C, Page_Id) == 0x0002E8, "Member 'UWBP_TgfGame_InventorySlots_C::Page_Id' has a wrong offset!");
static_assert(offsetof(UWBP_TgfGame_InventorySlots_C, StorageType) == 0x0002EC, "Member 'UWBP_TgfGame_InventorySlots_C::StorageType' has a wrong offset!");
static_assert(offsetof(UWBP_TgfGame_InventorySlots_C, OriginalCellSize) == 0x0002F0, "Member 'UWBP_TgfGame_InventorySlots_C::OriginalCellSize' has a wrong offset!");
static_assert(offsetof(UWBP_TgfGame_InventorySlots_C, BackgroundGridBrush) == 0x000300, "Member 'UWBP_TgfGame_InventorySlots_C::BackgroundGridBrush' has a wrong offset!");
static_assert(offsetof(UWBP_TgfGame_InventorySlots_C, GamepadWrapper) == 0x0003D0, "Member 'UWBP_TgfGame_InventorySlots_C::GamepadWrapper' has a wrong offset!");
static_assert(offsetof(UWBP_TgfGame_InventorySlots_C, CellPool) == 0x0003D8, "Member 'UWBP_TgfGame_InventorySlots_C::CellPool' has a wrong offset!");

}

