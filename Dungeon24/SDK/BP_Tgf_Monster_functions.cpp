#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Tgf_Monster

#include "Basic.hpp"

#include "BP_Tgf_Monster_classes.hpp"
#include "BP_Tgf_Monster_parameters.hpp"


namespace SDK
{

// Function BP_Tgf_Monster.BP_Tgf_Monster_C.AddThreatWithForceTargetable
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// double                                  Threat                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Tgf_Monster_C::AddThreatWithForceTargetable(class AActor* Actor, double Threat)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Tgf_Monster_C", "AddThreatWithForceTargetable");

	Params::BP_Tgf_Monster_C_AddThreatWithForceTargetable Parms{};

	Parms.Actor = Actor;
	Parms.Threat = Threat;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Tgf_Monster.BP_Tgf_Monster_C.AddTraceMesh
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             StartSocketTraceName                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             EndSocketTraceName                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EAGR_CombatColliderType                 CollisionHandling                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   TraceMeshInsId                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Tgf_Monster_C::AddTraceMesh(class FName StartSocketTraceName, class FName EndSocketTraceName, EAGR_CombatColliderType CollisionHandling, int32* TraceMeshInsId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Tgf_Monster_C", "AddTraceMesh");

	Params::BP_Tgf_Monster_C_AddTraceMesh Parms{};

	Parms.StartSocketTraceName = StartSocketTraceName;
	Parms.EndSocketTraceName = EndSocketTraceName;
	Parms.CollisionHandling = CollisionHandling;

	UObject::ProcessEvent(Func, &Parms);

	if (TraceMeshInsId != nullptr)
		*TraceMeshInsId = Parms.TraceMeshInsId;
}


// Function BP_Tgf_Monster.BP_Tgf_Monster_C.ApplyDormantGravity
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Apply                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Tgf_Monster_C::ApplyDormantGravity(bool Apply)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Tgf_Monster_C", "ApplyDormantGravity");

	Params::BP_Tgf_Monster_C_ApplyDormantGravity Parms{};

	Parms.Apply = Apply;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Tgf_Monster.BP_Tgf_Monster_C.ApplySpeedMod
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     Tag                                                    (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// bool                                    Apply                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Tgf_Monster_C::ApplySpeedMod(const struct FGameplayTag& Tag, bool Apply)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Tgf_Monster_C", "ApplySpeedMod");

	Params::BP_Tgf_Monster_C_ApplySpeedMod Parms{};

	Parms.Tag = std::move(Tag);
	Parms.Apply = Apply;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Tgf_Monster.BP_Tgf_Monster_C.ApplyTurnSpeedMod
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     Tag                                                    (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// bool                                    Apply                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Tgf_Monster_C::ApplyTurnSpeedMod(const struct FGameplayTag& Tag, bool Apply)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Tgf_Monster_C", "ApplyTurnSpeedMod");

	Params::BP_Tgf_Monster_C_ApplyTurnSpeedMod Parms{};

	Parms.Tag = std::move(Tag);
	Parms.Apply = Apply;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Tgf_Monster.BP_Tgf_Monster_C.AttackHitEventHandle
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FHitResult                       Hit                                                    (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// class UPrimitiveComponent*              Param_Mesh                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_Tgf_Monster_C::AttackHitEventHandle(const struct FHitResult& Hit, class UPrimitiveComponent* Param_Mesh)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Tgf_Monster_C", "AttackHitEventHandle");

	Params::BP_Tgf_Monster_C_AttackHitEventHandle Parms{};

	Parms.Hit = std::move(Hit);
	Parms.Param_Mesh = Param_Mesh;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Tgf_Monster.BP_Tgf_Monster_C.BeginDormant
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_Dormant                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    PlayMontage                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Tgf_Monster_C::BeginDormant(bool Param_Dormant, bool PlayMontage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Tgf_Monster_C", "BeginDormant");

	Params::BP_Tgf_Monster_C_BeginDormant Parms{};

	Parms.Param_Dormant = Param_Dormant;
	Parms.PlayMontage = PlayMontage;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Tgf_Monster.BP_Tgf_Monster_C.BlockUpdateSpeedOnDistance
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Block                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Tgf_Monster_C::BlockUpdateSpeedOnDistance(bool Block)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Tgf_Monster_C", "BlockUpdateSpeedOnDistance");

	Params::BP_Tgf_Monster_C_BlockUpdateSpeedOnDistance Parms{};

	Parms.Block = Block;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Tgf_Monster.BP_Tgf_Monster_C.BndEvt__BP_Tgf_Monster_AttributeComponent_K2Node_ComponentBoundEvent_0_TgfAttribute_DeathEvent__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class AActor*                           OwningActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_Tgf_Monster_C::BndEvt__BP_Tgf_Monster_AttributeComponent_K2Node_ComponentBoundEvent_0_TgfAttribute_DeathEvent__DelegateSignature(class AActor* OwningActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Tgf_Monster_C", "BndEvt__BP_Tgf_Monster_AttributeComponent_K2Node_ComponentBoundEvent_0_TgfAttribute_DeathEvent__DelegateSignature");

	Params::BP_Tgf_Monster_C_BndEvt__BP_Tgf_Monster_AttributeComponent_K2Node_ComponentBoundEvent_0_TgfAttribute_DeathEvent__DelegateSignature Parms{};

	Parms.OwningActor = OwningActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Tgf_Monster.BP_Tgf_Monster_C.BndEvt__BP_Tgf_Monster_AttributeComponent_K2Node_ComponentBoundEvent_0_TgfAttributeInitialized__DelegateSignature
// (BlueprintEvent)

void ABP_Tgf_Monster_C::BndEvt__BP_Tgf_Monster_AttributeComponent_K2Node_ComponentBoundEvent_0_TgfAttributeInitialized__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Tgf_Monster_C", "BndEvt__BP_Tgf_Monster_AttributeComponent_K2Node_ComponentBoundEvent_0_TgfAttributeInitialized__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Tgf_Monster.BP_Tgf_Monster_C.BndEvt__BP_Tgf_Monster_AttributeComponent_K2Node_ComponentBoundEvent_1_TgfAttribute_DamageEvent__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTagContainer            InstigatorTags                                         (BlueprintVisible, BlueprintReadOnly, Parm)
// struct FGameplayTagContainer            TargetTags                                             (BlueprintVisible, BlueprintReadOnly, Parm)
// float                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayEffectSpec              Spec                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ABP_Tgf_Monster_C::BndEvt__BP_Tgf_Monster_AttributeComponent_K2Node_ComponentBoundEvent_1_TgfAttribute_DamageEvent__DelegateSignature(class AActor* Actor, const struct FGameplayTagContainer& InstigatorTags, const struct FGameplayTagContainer& TargetTags, float Damage, const struct FGameplayEffectSpec& Spec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Tgf_Monster_C", "BndEvt__BP_Tgf_Monster_AttributeComponent_K2Node_ComponentBoundEvent_1_TgfAttribute_DamageEvent__DelegateSignature");

	Params::BP_Tgf_Monster_C_BndEvt__BP_Tgf_Monster_AttributeComponent_K2Node_ComponentBoundEvent_1_TgfAttribute_DamageEvent__DelegateSignature Parms{};

	Parms.Actor = Actor;
	Parms.InstigatorTags = std::move(InstigatorTags);
	Parms.TargetTags = std::move(TargetTags);
	Parms.Damage = Damage;
	Parms.Spec = std::move(Spec);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Tgf_Monster.BP_Tgf_Monster_C.BndEvt__BP_Tgf_Monster_AttributeComponent_K2Node_ComponentBoundEvent_2_TgfAttribute_DeathEvent__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class AActor*                           OwningActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_Tgf_Monster_C::BndEvt__BP_Tgf_Monster_AttributeComponent_K2Node_ComponentBoundEvent_2_TgfAttribute_DeathEvent__DelegateSignature(class AActor* OwningActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Tgf_Monster_C", "BndEvt__BP_Tgf_Monster_AttributeComponent_K2Node_ComponentBoundEvent_2_TgfAttribute_DeathEvent__DelegateSignature");

	Params::BP_Tgf_Monster_C_BndEvt__BP_Tgf_Monster_AttributeComponent_K2Node_ComponentBoundEvent_2_TgfAttribute_DeathEvent__DelegateSignature Parms{};

	Parms.OwningActor = OwningActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Tgf_Monster.BP_Tgf_Monster_C.BndEvt__BP_Tgf_Monster_AttributeComponent_K2Node_ComponentBoundEvent_3_TgfAttribute_DamageEvent__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTagContainer            InstigatorTags                                         (BlueprintVisible, BlueprintReadOnly, Parm)
// struct FGameplayTagContainer            TargetTags                                             (BlueprintVisible, BlueprintReadOnly, Parm)
// float                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayEffectSpec              Spec                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ABP_Tgf_Monster_C::BndEvt__BP_Tgf_Monster_AttributeComponent_K2Node_ComponentBoundEvent_3_TgfAttribute_DamageEvent__DelegateSignature(class AActor* Actor, const struct FGameplayTagContainer& InstigatorTags, const struct FGameplayTagContainer& TargetTags, float Damage, const struct FGameplayEffectSpec& Spec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Tgf_Monster_C", "BndEvt__BP_Tgf_Monster_AttributeComponent_K2Node_ComponentBoundEvent_3_TgfAttribute_DamageEvent__DelegateSignature");

	Params::BP_Tgf_Monster_C_BndEvt__BP_Tgf_Monster_AttributeComponent_K2Node_ComponentBoundEvent_3_TgfAttribute_DamageEvent__DelegateSignature Parms{};

	Parms.Actor = Actor;
	Parms.InstigatorTags = std::move(InstigatorTags);
	Parms.TargetTags = std::move(TargetTags);
	Parms.Damage = Damage;
	Parms.Spec = std::move(Spec);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Tgf_Monster.BP_Tgf_Monster_C.BndEvt__BP_Tgf_Monster_TgfMonsterMaterialManagerComponent_K2Node_ComponentBoundEvent_1_TgfCharaMatStateTypeEvent__DelegateSignature
// (BlueprintEvent)
// Parameters:
// ETgfCharaMatStateType                   MatStateType                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Tgf_Monster_C::BndEvt__BP_Tgf_Monster_TgfMonsterMaterialManagerComponent_K2Node_ComponentBoundEvent_1_TgfCharaMatStateTypeEvent__DelegateSignature(ETgfCharaMatStateType MatStateType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Tgf_Monster_C", "BndEvt__BP_Tgf_Monster_TgfMonsterMaterialManagerComponent_K2Node_ComponentBoundEvent_1_TgfCharaMatStateTypeEvent__DelegateSignature");

	Params::BP_Tgf_Monster_C_BndEvt__BP_Tgf_Monster_TgfMonsterMaterialManagerComponent_K2Node_ComponentBoundEvent_1_TgfCharaMatStateTypeEvent__DelegateSignature Parms{};

	Parms.MatStateType = MatStateType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Tgf_Monster.BP_Tgf_Monster_C.BndEvt__BP_Tgf_Monster_TgfMonsterReaction_K2Node_ComponentBoundEvent_1_TgfMonsterReactionEvent__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class AActor*                           FirstChara                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_Tgf_Monster_C::BndEvt__BP_Tgf_Monster_TgfMonsterReaction_K2Node_ComponentBoundEvent_1_TgfMonsterReactionEvent__DelegateSignature(class AActor* FirstChara)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Tgf_Monster_C", "BndEvt__BP_Tgf_Monster_TgfMonsterReaction_K2Node_ComponentBoundEvent_1_TgfMonsterReactionEvent__DelegateSignature");

	Params::BP_Tgf_Monster_C_BndEvt__BP_Tgf_Monster_TgfMonsterReaction_K2Node_ComponentBoundEvent_1_TgfMonsterReactionEvent__DelegateSignature Parms{};

	Parms.FirstChara = FirstChara;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Tgf_Monster.BP_Tgf_Monster_C.CalcSpeedMod
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     Mod                                                    (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// double                                  Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Tgf_Monster_C::CalcSpeedMod(const struct FGameplayTag& Mod, double Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Tgf_Monster_C", "CalcSpeedMod");

	Params::BP_Tgf_Monster_C_CalcSpeedMod Parms{};

	Parms.Mod = std::move(Mod);
	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Tgf_Monster.BP_Tgf_Monster_C.CalcSpeedMods
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_Tgf_Monster_C::CalcSpeedMods()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Tgf_Monster_C", "CalcSpeedMods");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Tgf_Monster.BP_Tgf_Monster_C.CalcTurnSpeedMod
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     Mod                                                    (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// double                                  Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Tgf_Monster_C::CalcTurnSpeedMod(const struct FGameplayTag& Mod, double Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Tgf_Monster_C", "CalcTurnSpeedMod");

	Params::BP_Tgf_Monster_C_CalcTurnSpeedMod Parms{};

	Parms.Mod = std::move(Mod);
	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Tgf_Monster.BP_Tgf_Monster_C.CalcTurnSpeedMods
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Tgf_Monster_C::CalcTurnSpeedMods()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Tgf_Monster_C", "CalcTurnSpeedMods");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Tgf_Monster.BP_Tgf_Monster_C.CommonFade__FinishedFunc
// (BlueprintEvent)

void ABP_Tgf_Monster_C::CommonFade__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Tgf_Monster_C", "CommonFade__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Tgf_Monster.BP_Tgf_Monster_C.CommonFade__UpdateFunc
// (BlueprintEvent)

void ABP_Tgf_Monster_C::CommonFade__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Tgf_Monster_C", "CommonFade__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Tgf_Monster.BP_Tgf_Monster_C.DeInitCurGA
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InputIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Tgf_Monster_C::DeInitCurGA(int32 InputIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Tgf_Monster_C", "DeInitCurGA");

	Params::BP_Tgf_Monster_C_DeInitCurGA Parms{};

	Parms.InputIndex = InputIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Tgf_Monster.BP_Tgf_Monster_C.DissipationDeath__FinishedFunc
// (BlueprintEvent)

void ABP_Tgf_Monster_C::DissipationDeath__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Tgf_Monster_C", "DissipationDeath__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Tgf_Monster.BP_Tgf_Monster_C.DissipationDeath__UpdateFunc
// (BlueprintEvent)

void ABP_Tgf_Monster_C::DissipationDeath__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Tgf_Monster_C", "DissipationDeath__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Tgf_Monster.BP_Tgf_Monster_C.EnableProjectileBlocker
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bEnable                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Tgf_Monster_C::EnableProjectileBlocker(bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Tgf_Monster_C", "EnableProjectileBlocker");

	Params::BP_Tgf_Monster_C_EnableProjectileBlocker Parms{};

	Parms.bEnable = bEnable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Tgf_Monster.BP_Tgf_Monster_C.EndDormant
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_Dormant                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Tgf_Monster_C::EndDormant(bool Param_Dormant)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Tgf_Monster_C", "EndDormant");

	Params::BP_Tgf_Monster_C_EndDormant Parms{};

	Parms.Param_Dormant = Param_Dormant;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Tgf_Monster.BP_Tgf_Monster_C.EnterCombat
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Tgf_Monster_C::EnterCombat()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Tgf_Monster_C", "EnterCombat");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Tgf_Monster.BP_Tgf_Monster_C.EventOnEnterCombat
// (BlueprintCallable, BlueprintEvent)

void ABP_Tgf_Monster_C::EventOnEnterCombat()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Tgf_Monster_C", "EventOnEnterCombat");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Tgf_Monster.BP_Tgf_Monster_C.ExecuteUbergraph_BP_Tgf_Monster
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Tgf_Monster_C::ExecuteUbergraph_BP_Tgf_Monster(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Tgf_Monster_C", "ExecuteUbergraph_BP_Tgf_Monster");

	Params::BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Tgf_Monster.BP_Tgf_Monster_C.GenerateLoot
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Param_Instigator                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_Tgf_Monster_C::GenerateLoot(class AActor* Param_Instigator)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Tgf_Monster_C", "GenerateLoot");

	Params::BP_Tgf_Monster_C_GenerateLoot Parms{};

	Parms.Param_Instigator = Param_Instigator;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Tgf_Monster.BP_Tgf_Monster_C.Get Location by Spawn Offset
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Tgf_Monster_C::Get_Location_by_Spawn_Offset(const struct FVector& Location, struct FVector* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Tgf_Monster_C", "Get Location by Spawn Offset");

	Params::BP_Tgf_Monster_C_Get_Location_by_Spawn_Offset Parms{};

	Parms.Location = std::move(Location);

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = std::move(Parms.Result);
}


// Function BP_Tgf_Monster.BP_Tgf_Monster_C.GetAbilityActivateRange
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UClass*                           Ability                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// double                                  Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Tgf_Monster_C::GetAbilityActivateRange(class UClass* Ability, double* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Tgf_Monster_C", "GetAbilityActivateRange");

	Params::BP_Tgf_Monster_C_GetAbilityActivateRange Parms{};

	Parms.Ability = Ability;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BP_Tgf_Monster.BP_Tgf_Monster_C.GetCombatTime
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Tgf_Monster_C::GetCombatTime(double* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Tgf_Monster_C", "GetCombatTime");

	Params::BP_Tgf_Monster_C_GetCombatTime Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BP_Tgf_Monster.BP_Tgf_Monster_C.GetDebugInfoString
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)

class FString ABP_Tgf_Monster_C::GetDebugInfoString()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Tgf_Monster_C", "GetDebugInfoString");

	Params::BP_Tgf_Monster_C_GetDebugInfoString Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_Tgf_Monster.BP_Tgf_Monster_C.GetDormantAbility
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UClass*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)

class UClass* ABP_Tgf_Monster_C::GetDormantAbility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Tgf_Monster_C", "GetDormantAbility");

	Params::BP_Tgf_Monster_C_GetDormantAbility Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_Tgf_Monster.BP_Tgf_Monster_C.GetDormantIndex
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

int32 ABP_Tgf_Monster_C::GetDormantIndex()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Tgf_Monster_C", "GetDormantIndex");

	Params::BP_Tgf_Monster_C_GetDormantIndex Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_Tgf_Monster.BP_Tgf_Monster_C.GetDormantSightPeripheralVisionAngleDegrees
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double                                  Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Tgf_Monster_C::GetDormantSightPeripheralVisionAngleDegrees(double* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Tgf_Monster_C", "GetDormantSightPeripheralVisionAngleDegrees");

	Params::BP_Tgf_Monster_C_GetDormantSightPeripheralVisionAngleDegrees Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BP_Tgf_Monster.BP_Tgf_Monster_C.GetDormantSightRadius
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double                                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

double ABP_Tgf_Monster_C::GetDormantSightRadius()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Tgf_Monster_C", "GetDormantSightRadius");

	Params::BP_Tgf_Monster_C_GetDormantSightRadius Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_Tgf_Monster.BP_Tgf_Monster_C.GetDormantWakeUpAbility
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UClass*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)

class UClass* ABP_Tgf_Monster_C::GetDormantWakeUpAbility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Tgf_Monster_C", "GetDormantWakeUpAbility");

	Params::BP_Tgf_Monster_C_GetDormantWakeUpAbility Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_Tgf_Monster.BP_Tgf_Monster_C.GetTargetActor
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_Tgf_Monster_C::GetTargetActor(class AActor** Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Tgf_Monster_C", "GetTargetActor");

	Params::BP_Tgf_Monster_C_GetTargetActor Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Actor != nullptr)
		*Actor = Parms.Actor;
}


// Function BP_Tgf_Monster.BP_Tgf_Monster_C.GetTargetLocation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Tgf_Monster_C::GetTargetLocation(struct FVector* Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Tgf_Monster_C", "GetTargetLocation");

	Params::BP_Tgf_Monster_C_GetTargetLocation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Location != nullptr)
		*Location = std::move(Parms.Location);
}


// Function BP_Tgf_Monster.BP_Tgf_Monster_C.GetTargetLocationClient
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          Location                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bHasTarget                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Tgf_Monster_C::GetTargetLocationClient(struct FVector* Location, bool* bHasTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Tgf_Monster_C", "GetTargetLocationClient");

	Params::BP_Tgf_Monster_C_GetTargetLocationClient Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Location != nullptr)
		*Location = std::move(Parms.Location);

	if (bHasTarget != nullptr)
		*bHasTarget = Parms.bHasTarget;
}


// Function BP_Tgf_Monster.BP_Tgf_Monster_C.GetWanderRadius
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double                                  Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Tgf_Monster_C::GetWanderRadius(double* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Tgf_Monster_C", "GetWanderRadius");

	Params::BP_Tgf_Monster_C_GetWanderRadius Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BP_Tgf_Monster.BP_Tgf_Monster_C.HasAnySpeedMod
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Tgf_Monster_C::HasAnySpeedMod(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Tgf_Monster_C", "HasAnySpeedMod");

	Params::BP_Tgf_Monster_C_HasAnySpeedMod Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BP_Tgf_Monster.BP_Tgf_Monster_C.HasAnyTurnSpeedMod
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Tgf_Monster_C::HasAnyTurnSpeedMod(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Tgf_Monster_C", "HasAnyTurnSpeedMod");

	Params::BP_Tgf_Monster_C_HasAnyTurnSpeedMod Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BP_Tgf_Monster.BP_Tgf_Monster_C.HasSpeedMod
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FGameplayTag                     Tag                                                    (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Tgf_Monster_C::HasSpeedMod(const struct FGameplayTag& Tag, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Tgf_Monster_C", "HasSpeedMod");

	Params::BP_Tgf_Monster_C_HasSpeedMod Parms{};

	Parms.Tag = std::move(Tag);

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BP_Tgf_Monster.BP_Tgf_Monster_C.HasTurnSpeedMod
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FGameplayTag                     Tag                                                    (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Tgf_Monster_C::HasTurnSpeedMod(const struct FGameplayTag& Tag, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Tgf_Monster_C", "HasTurnSpeedMod");

	Params::BP_Tgf_Monster_C_HasTurnSpeedMod Parms{};

	Parms.Tag = std::move(Tag);

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BP_Tgf_Monster.BP_Tgf_Monster_C.HitReactTimeline__FinishedFunc
// (BlueprintEvent)

void ABP_Tgf_Monster_C::HitReactTimeline__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Tgf_Monster_C", "HitReactTimeline__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Tgf_Monster.BP_Tgf_Monster_C.HitReactTimeline__UpdateFunc
// (BlueprintEvent)

void ABP_Tgf_Monster_C::HitReactTimeline__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Tgf_Monster_C", "HitReactTimeline__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Tgf_Monster.BP_Tgf_Monster_C.InitCurGA
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UTgfGameplayAbility*              InputGA                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// int32                                   ResultIndex                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Tgf_Monster_C::InitCurGA(class UTgfGameplayAbility* InputGA, int32* ResultIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Tgf_Monster_C", "InitCurGA");

	Params::BP_Tgf_Monster_C_InitCurGA Parms{};

	Parms.InputGA = InputGA;

	UObject::ProcessEvent(Func, &Parms);

	if (ResultIndex != nullptr)
		*ResultIndex = Parms.ResultIndex;
}


// Function BP_Tgf_Monster.BP_Tgf_Monster_C.IsActivatingAbility
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_Tgf_Monster_C::IsActivatingAbility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Tgf_Monster_C", "IsActivatingAbility");

	Params::BP_Tgf_Monster_C_IsActivatingAbility Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_Tgf_Monster.BP_Tgf_Monster_C.IsDamaged
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Tgf_Monster_C::IsDamaged(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Tgf_Monster_C", "IsDamaged");

	Params::BP_Tgf_Monster_C_IsDamaged Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BP_Tgf_Monster.BP_Tgf_Monster_C.IsDormant
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_Tgf_Monster_C::IsDormant()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Tgf_Monster_C", "IsDormant");

	Params::BP_Tgf_Monster_C_IsDormant Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_Tgf_Monster.BP_Tgf_Monster_C.IsDormantable
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Tgf_Monster_C::IsDormantable(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Tgf_Monster_C", "IsDormantable");

	Params::BP_Tgf_Monster_C_IsDormantable Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BP_Tgf_Monster.BP_Tgf_Monster_C.IsDormantAnimationUsePose
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_Tgf_Monster_C::IsDormantAnimationUsePose()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Tgf_Monster_C", "IsDormantAnimationUsePose");

	Params::BP_Tgf_Monster_C_IsDormantAnimationUsePose Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_Tgf_Monster.BP_Tgf_Monster_C.IsDormantAttackable
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_Tgf_Monster_C::IsDormantAttackable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Tgf_Monster_C", "IsDormantAttackable");

	Params::BP_Tgf_Monster_C_IsDormantAttackable Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_Tgf_Monster.BP_Tgf_Monster_C.IsDormantCollisionEnabled
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_Tgf_Monster_C::IsDormantCollisionEnabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Tgf_Monster_C", "IsDormantCollisionEnabled");

	Params::BP_Tgf_Monster_C_IsDormantCollisionEnabled Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_Tgf_Monster.BP_Tgf_Monster_C.IsDormantIndexValid
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_Tgf_Monster_C::IsDormantIndexValid()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Tgf_Monster_C", "IsDormantIndexValid");

	Params::BP_Tgf_Monster_C_IsDormantIndexValid Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_Tgf_Monster.BP_Tgf_Monster_C.IsDormantInvisible
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_Tgf_Monster_C::IsDormantInvisible()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Tgf_Monster_C", "IsDormantInvisible");

	Params::BP_Tgf_Monster_C_IsDormantInvisible Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_Tgf_Monster.BP_Tgf_Monster_C.IsDormantSensesEnabled
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_Tgf_Monster_C::IsDormantSensesEnabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Tgf_Monster_C", "IsDormantSensesEnabled");

	Params::BP_Tgf_Monster_C_IsDormantSensesEnabled Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_Tgf_Monster.BP_Tgf_Monster_C.IsDormantSpecialAttackable
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_Tgf_Monster_C::IsDormantSpecialAttackable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Tgf_Monster_C", "IsDormantSpecialAttackable");

	Params::BP_Tgf_Monster_C_IsDormantSpecialAttackable Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_Tgf_Monster.BP_Tgf_Monster_C.IsDormantWithGravity
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_Tgf_Monster_C::IsDormantWithGravity()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Tgf_Monster_C", "IsDormantWithGravity");

	Params::BP_Tgf_Monster_C_IsDormantWithGravity Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_Tgf_Monster.BP_Tgf_Monster_C.IsEvadable
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Tgf_Monster_C::IsEvadable(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Tgf_Monster_C", "IsEvadable");

	Params::BP_Tgf_Monster_C_IsEvadable Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BP_Tgf_Monster.BP_Tgf_Monster_C.IsEvade
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Tgf_Monster_C::IsEvade(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Tgf_Monster_C", "IsEvade");

	Params::BP_Tgf_Monster_C_IsEvade Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BP_Tgf_Monster.BP_Tgf_Monster_C.IsFleed
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Tgf_Monster_C::IsFleed(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Tgf_Monster_C", "IsFleed");

	Params::BP_Tgf_Monster_C_IsFleed Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BP_Tgf_Monster.BP_Tgf_Monster_C.IsFleeing
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Tgf_Monster_C::IsFleeing(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Tgf_Monster_C", "IsFleeing");

	Params::BP_Tgf_Monster_C_IsFleeing Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BP_Tgf_Monster.BP_Tgf_Monster_C.IsInCombat
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Tgf_Monster_C::IsInCombat(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Tgf_Monster_C", "IsInCombat");

	Params::BP_Tgf_Monster_C_IsInCombat Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BP_Tgf_Monster.BP_Tgf_Monster_C.IsPatrolable
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_Tgf_Monster_C::IsPatrolable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Tgf_Monster_C", "IsPatrolable");

	Params::BP_Tgf_Monster_C_IsPatrolable Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_Tgf_Monster.BP_Tgf_Monster_C.IsStareEnabled
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Tgf_Monster_C::IsStareEnabled(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Tgf_Monster_C", "IsStareEnabled");

	Params::BP_Tgf_Monster_C_IsStareEnabled Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BP_Tgf_Monster.BP_Tgf_Monster_C.IsWanderable
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Tgf_Monster_C::IsWanderable(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Tgf_Monster_C", "IsWanderable");

	Params::BP_Tgf_Monster_C_IsWanderable Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BP_Tgf_Monster.BP_Tgf_Monster_C.IsWeak
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_Tgf_Monster_C::IsWeak()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Tgf_Monster_C", "IsWeak");

	Params::BP_Tgf_Monster_C_IsWeak Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_Tgf_Monster.BP_Tgf_Monster_C.IsWeakening
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_Tgf_Monster_C::IsWeakening()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Tgf_Monster_C", "IsWeakening");

	Params::BP_Tgf_Monster_C_IsWeakening Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_Tgf_Monster.BP_Tgf_Monster_C.LeaveCombat
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_Tgf_Monster_C::LeaveCombat()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Tgf_Monster_C", "LeaveCombat");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Tgf_Monster.BP_Tgf_Monster_C.OnChaseFailed
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Tgf_Monster_C::OnChaseFailed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Tgf_Monster_C", "OnChaseFailed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Tgf_Monster.BP_Tgf_Monster_C.OnChaseSuccessed
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Tgf_Monster_C::OnChaseSuccessed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Tgf_Monster_C", "OnChaseSuccessed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Tgf_Monster.BP_Tgf_Monster_C.OnDormantEnterBegin__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABP_Tgf_Monster_C::OnDormantEnterBegin__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Tgf_Monster_C", "OnDormantEnterBegin__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Tgf_Monster.BP_Tgf_Monster_C.OnDormantEnterEnd__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABP_Tgf_Monster_C::OnDormantEnterEnd__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Tgf_Monster_C", "OnDormantEnterEnd__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Tgf_Monster.BP_Tgf_Monster_C.OnDormantLeaveBegin__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABP_Tgf_Monster_C::OnDormantLeaveBegin__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Tgf_Monster_C", "OnDormantLeaveBegin__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Tgf_Monster.BP_Tgf_Monster_C.OnDormantLeaveEnd__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABP_Tgf_Monster_C::OnDormantLeaveEnd__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Tgf_Monster_C", "OnDormantLeaveEnd__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Tgf_Monster.BP_Tgf_Monster_C.OnEnterCombat__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABP_Tgf_Monster_C::OnEnterCombat__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Tgf_Monster_C", "OnEnterCombat__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Tgf_Monster.BP_Tgf_Monster_C.OnLeaveCombat__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABP_Tgf_Monster_C::OnLeaveCombat__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Tgf_Monster_C", "OnLeaveCombat__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Tgf_Monster.BP_Tgf_Monster_C.OnRep_Dormant
// (BlueprintCallable, BlueprintEvent)

void ABP_Tgf_Monster_C::OnRep_Dormant()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Tgf_Monster_C", "OnRep_Dormant");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Tgf_Monster.BP_Tgf_Monster_C.OnSpawned
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_ActorSpawnPoint_C*            Param_ActorSpawnPoint                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_Tgf_Monster_C::OnSpawned(class ABP_ActorSpawnPoint_C* Param_ActorSpawnPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Tgf_Monster_C", "OnSpawned");

	Params::BP_Tgf_Monster_C_OnSpawned Parms{};

	Parms.Param_ActorSpawnPoint = Param_ActorSpawnPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Tgf_Monster.BP_Tgf_Monster_C.OnThreatListClose
// (BlueprintCallable, BlueprintEvent)

void ABP_Tgf_Monster_C::OnThreatListClose()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Tgf_Monster_C", "OnThreatListClose");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Tgf_Monster.BP_Tgf_Monster_C.OnThreatListOpen
// (BlueprintCallable, BlueprintEvent)

void ABP_Tgf_Monster_C::OnThreatListOpen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Tgf_Monster_C", "OnThreatListOpen");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Tgf_Monster.BP_Tgf_Monster_C.OnThreatTarget
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           NewThreatTarget                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_Tgf_Monster_C::OnThreatTarget(class AActor* NewThreatTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Tgf_Monster_C", "OnThreatTarget");

	Params::BP_Tgf_Monster_C_OnThreatTarget Parms{};

	Parms.NewThreatTarget = NewThreatTarget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Tgf_Monster.BP_Tgf_Monster_C.OnThreatTargetChanged__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_Tgf_Monster_C::OnThreatTargetChanged__DelegateSignature(class AActor* Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Tgf_Monster_C", "OnThreatTargetChanged__DelegateSignature");

	Params::BP_Tgf_Monster_C_OnThreatTargetChanged__DelegateSignature Parms{};

	Parms.Target = Target;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Tgf_Monster.BP_Tgf_Monster_C.PickRetreat
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Param_Index                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Tgf_Monster_C::PickRetreat(bool* Result, int32* Param_Index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Tgf_Monster_C", "PickRetreat");

	Params::BP_Tgf_Monster_C_PickRetreat Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;

	if (Param_Index != nullptr)
		*Param_Index = Parms.Param_Index;
}


// Function BP_Tgf_Monster.BP_Tgf_Monster_C.PlayEnterCombatAudio
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_Tgf_Monster_C::PlayEnterCombatAudio()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Tgf_Monster_C", "PlayEnterCombatAudio");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Tgf_Monster.BP_Tgf_Monster_C.PlayGameplayCue
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     GameplayCue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Position                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Tgf_Monster_C::PlayGameplayCue(const struct FGameplayTag& GameplayCue, const struct FVector& Position)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Tgf_Monster_C", "PlayGameplayCue");

	Params::BP_Tgf_Monster_C_PlayGameplayCue Parms{};

	Parms.GameplayCue = std::move(GameplayCue);
	Parms.Position = std::move(Position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Tgf_Monster.BP_Tgf_Monster_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_Tgf_Monster_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Tgf_Monster_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Tgf_Monster.BP_Tgf_Monster_C.ReceiveEndPlay
// (Event, Protected, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Tgf_Monster_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Tgf_Monster_C", "ReceiveEndPlay");

	Params::BP_Tgf_Monster_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Tgf_Monster.BP_Tgf_Monster_C.RemoveTraceMesh
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   TraceMeshInsId                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Tgf_Monster_C::RemoveTraceMesh(int32 TraceMeshInsId, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Tgf_Monster_C", "RemoveTraceMesh");

	Params::BP_Tgf_Monster_C_RemoveTraceMesh Parms{};

	Parms.TraceMeshInsId = TraceMeshInsId;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BP_Tgf_Monster.BP_Tgf_Monster_C.ResetCurGA
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Tgf_Monster_C::ResetCurGA()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Tgf_Monster_C", "ResetCurGA");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Tgf_Monster.BP_Tgf_Monster_C.SetComponentTick_BP
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    Enabled                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Tgf_Monster_C::SetComponentTick_BP(bool Enabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Tgf_Monster_C", "SetComponentTick_BP");

	Params::BP_Tgf_Monster_C_SetComponentTick_BP Parms{};

	Parms.Enabled = Enabled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Tgf_Monster.BP_Tgf_Monster_C.SetDormantAttackable
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enable                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Tgf_Monster_C::SetDormantAttackable(bool Enable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Tgf_Monster_C", "SetDormantAttackable");

	Params::BP_Tgf_Monster_C_SetDormantAttackable Parms{};

	Parms.Enable = Enable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Tgf_Monster.BP_Tgf_Monster_C.SetDormantCollisionEnabled
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enabled                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Tgf_Monster_C::SetDormantCollisionEnabled(bool Enabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Tgf_Monster_C", "SetDormantCollisionEnabled");

	Params::BP_Tgf_Monster_C_SetDormantCollisionEnabled Parms{};

	Parms.Enabled = Enabled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Tgf_Monster.BP_Tgf_Monster_C.SetEvade
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Tgf_Monster_C::SetEvade(bool Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Tgf_Monster_C", "SetEvade");

	Params::BP_Tgf_Monster_C_SetEvade Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Tgf_Monster.BP_Tgf_Monster_C.SetFleed
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Tgf_Monster_C::SetFleed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Tgf_Monster_C", "SetFleed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Tgf_Monster.BP_Tgf_Monster_C.SetFleeing
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Tgf_Monster_C::SetFleeing()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Tgf_Monster_C", "SetFleeing");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Tgf_Monster.BP_Tgf_Monster_C.SetFlyable
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_Tgf_Monster_C::SetFlyable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Tgf_Monster_C", "SetFlyable");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Tgf_Monster.BP_Tgf_Monster_C.SetHold
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Hold                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Tgf_Monster_C::SetHold(bool Hold)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Tgf_Monster_C", "SetHold");

	Params::BP_Tgf_Monster_C_SetHold Parms{};

	Parms.Hold = Hold;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Tgf_Monster.BP_Tgf_Monster_C.ShouldCheckAbilitySightRange
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Tgf_Monster_C::ShouldCheckAbilitySightRange(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Tgf_Monster_C", "ShouldCheckAbilitySightRange");

	Params::BP_Tgf_Monster_C_ShouldCheckAbilitySightRange Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BP_Tgf_Monster.BP_Tgf_Monster_C.Timeline__FinishedFunc
// (BlueprintEvent)

void ABP_Tgf_Monster_C::Timeline__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Tgf_Monster_C", "Timeline__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Tgf_Monster.BP_Tgf_Monster_C.Timeline__UpdateFunc
// (BlueprintEvent)

void ABP_Tgf_Monster_C::Timeline__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Tgf_Monster_C", "Timeline__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Tgf_Monster.BP_Tgf_Monster_C.TriggerMechanismOrTrap
// (BlueprintCallable, BlueprintEvent)

void ABP_Tgf_Monster_C::TriggerMechanismOrTrap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Tgf_Monster_C", "TriggerMechanismOrTrap");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Tgf_Monster.BP_Tgf_Monster_C.UpdateSpeedOnDistance
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Distance                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Tgf_Monster_C::UpdateSpeedOnDistance(double Distance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Tgf_Monster_C", "UpdateSpeedOnDistance");

	Params::BP_Tgf_Monster_C_UpdateSpeedOnDistance Parms{};

	Parms.Distance = Distance;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Tgf_Monster.BP_Tgf_Monster_C.ValidateFlyable
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_Tgf_Monster_C::ValidateFlyable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Tgf_Monster_C", "ValidateFlyable");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Tgf_Monster.BP_Tgf_Monster_C.WeakBegin
// (BlueprintCallable, BlueprintEvent)

void ABP_Tgf_Monster_C::WeakBegin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Tgf_Monster_C", "WeakBegin");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Tgf_Monster.BP_Tgf_Monster_C.WeakBegun
// (BlueprintCallable, BlueprintEvent)

void ABP_Tgf_Monster_C::WeakBegun()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Tgf_Monster_C", "WeakBegun");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Tgf_Monster.BP_Tgf_Monster_C.WeakEnd
// (BlueprintCallable, BlueprintEvent)

void ABP_Tgf_Monster_C::WeakEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Tgf_Monster_C", "WeakEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Tgf_Monster.BP_Tgf_Monster_C.WeakEnded
// (BlueprintCallable, BlueprintEvent)

void ABP_Tgf_Monster_C::WeakEnded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Tgf_Monster_C", "WeakEnded");

	UObject::ProcessEvent(Func, nullptr);
}

}

