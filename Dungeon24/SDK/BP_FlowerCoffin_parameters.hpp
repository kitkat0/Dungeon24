#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FlowerCoffin

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "AkAudio_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_FlowerCoffin.BP_FlowerCoffin_C.CanPlayerInteract
// 0x0010 (0x0010 - 0x0000)
struct BP_FlowerCoffin_C_CanPlayerInteract final
{
public:
	class ALyraCharacter*                         Param_Player;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          bCanInteract;                                      // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckItemRequiements_MeetAllRequiements;  // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FlowerCoffin_C_CanPlayerInteract) == 0x000008, "Wrong alignment on BP_FlowerCoffin_C_CanPlayerInteract");
static_assert(sizeof(BP_FlowerCoffin_C_CanPlayerInteract) == 0x000010, "Wrong size on BP_FlowerCoffin_C_CanPlayerInteract");
static_assert(offsetof(BP_FlowerCoffin_C_CanPlayerInteract, Param_Player) == 0x000000, "Member 'BP_FlowerCoffin_C_CanPlayerInteract::Param_Player' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_CanPlayerInteract, bCanInteract) == 0x000008, "Member 'BP_FlowerCoffin_C_CanPlayerInteract::bCanInteract' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_CanPlayerInteract, CallFunc_IsLocallyControlled_ReturnValue) == 0x000009, "Member 'BP_FlowerCoffin_C_CanPlayerInteract::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_CanPlayerInteract, CallFunc_CheckItemRequiements_MeetAllRequiements) == 0x00000A, "Member 'BP_FlowerCoffin_C_CanPlayerInteract::CallFunc_CheckItemRequiements_MeetAllRequiements' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_CanPlayerInteract, CallFunc_Not_PreBool_ReturnValue) == 0x00000B, "Member 'BP_FlowerCoffin_C_CanPlayerInteract::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_CanPlayerInteract, CallFunc_BooleanAND_ReturnValue) == 0x00000C, "Member 'BP_FlowerCoffin_C_CanPlayerInteract::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_FlowerCoffin.BP_FlowerCoffin_C.CheckItemRequiements
// 0x00A0 (0x00A0 - 0x0000)
struct BP_FlowerCoffin_C_CheckItemRequiements final
{
public:
	class ALyraCharacter*                         Param_Player;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          MeetAllRequiements;                                // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bItemFound;                                        // 0x0009(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTgfEquipmentManagerComponent*          CallFunc_GetComponentByClass_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UTgfInventoryManagerComponent*          CallFunc_GetComponentByClass_ReturnValue_1;        // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ULyraEquipmentInstance*>         CallFunc_GetAllEquips_ReturnValue;                 // 0x0030(0x0010)(ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ULyraEquipmentInstance*                 CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ULyraInventoryItemInstance*             CallFunc_GetInventory_ReturnValue;                 // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class ULyraInventoryItemDefinition> CallFunc_GetItemDef_ReturnValue;                   // 0x0068(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_Array_Get_Item_1;                         // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_92[0x2];                                       // 0x0092(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetTotalItemCountByDefinition_ReturnValue; // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FlowerCoffin_C_CheckItemRequiements) == 0x000008, "Wrong alignment on BP_FlowerCoffin_C_CheckItemRequiements");
static_assert(sizeof(BP_FlowerCoffin_C_CheckItemRequiements) == 0x0000A0, "Wrong size on BP_FlowerCoffin_C_CheckItemRequiements");
static_assert(offsetof(BP_FlowerCoffin_C_CheckItemRequiements, Param_Player) == 0x000000, "Member 'BP_FlowerCoffin_C_CheckItemRequiements::Param_Player' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_CheckItemRequiements, MeetAllRequiements) == 0x000008, "Member 'BP_FlowerCoffin_C_CheckItemRequiements::MeetAllRequiements' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_CheckItemRequiements, bItemFound) == 0x000009, "Member 'BP_FlowerCoffin_C_CheckItemRequiements::bItemFound' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_CheckItemRequiements, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'BP_FlowerCoffin_C_CheckItemRequiements::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_CheckItemRequiements, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_FlowerCoffin_C_CheckItemRequiements::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_CheckItemRequiements, CallFunc_GetComponentByClass_ReturnValue) == 0x000018, "Member 'BP_FlowerCoffin_C_CheckItemRequiements::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_CheckItemRequiements, CallFunc_GetComponentByClass_ReturnValue_1) == 0x000020, "Member 'BP_FlowerCoffin_C_CheckItemRequiements::CallFunc_GetComponentByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_CheckItemRequiements, CallFunc_IsValid_ReturnValue_1) == 0x000028, "Member 'BP_FlowerCoffin_C_CheckItemRequiements::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_CheckItemRequiements, CallFunc_IsValid_ReturnValue_2) == 0x000029, "Member 'BP_FlowerCoffin_C_CheckItemRequiements::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_CheckItemRequiements, CallFunc_GetAllEquips_ReturnValue) == 0x000030, "Member 'BP_FlowerCoffin_C_CheckItemRequiements::CallFunc_GetAllEquips_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_CheckItemRequiements, Temp_int_Loop_Counter_Variable) == 0x000040, "Member 'BP_FlowerCoffin_C_CheckItemRequiements::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_CheckItemRequiements, CallFunc_Array_Get_Item) == 0x000048, "Member 'BP_FlowerCoffin_C_CheckItemRequiements::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_CheckItemRequiements, CallFunc_Add_IntInt_ReturnValue) == 0x000050, "Member 'BP_FlowerCoffin_C_CheckItemRequiements::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_CheckItemRequiements, CallFunc_GetInventory_ReturnValue) == 0x000058, "Member 'BP_FlowerCoffin_C_CheckItemRequiements::CallFunc_GetInventory_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_CheckItemRequiements, CallFunc_IsValid_ReturnValue_3) == 0x000060, "Member 'BP_FlowerCoffin_C_CheckItemRequiements::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_CheckItemRequiements, CallFunc_GetItemDef_ReturnValue) == 0x000068, "Member 'BP_FlowerCoffin_C_CheckItemRequiements::CallFunc_GetItemDef_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_CheckItemRequiements, CallFunc_Array_Length_ReturnValue) == 0x000070, "Member 'BP_FlowerCoffin_C_CheckItemRequiements::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_CheckItemRequiements, Temp_int_Array_Index_Variable_1) == 0x000074, "Member 'BP_FlowerCoffin_C_CheckItemRequiements::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_CheckItemRequiements, Temp_int_Loop_Counter_Variable_1) == 0x000078, "Member 'BP_FlowerCoffin_C_CheckItemRequiements::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_CheckItemRequiements, CallFunc_Less_IntInt_ReturnValue) == 0x00007C, "Member 'BP_FlowerCoffin_C_CheckItemRequiements::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_CheckItemRequiements, CallFunc_Add_IntInt_ReturnValue_1) == 0x000080, "Member 'BP_FlowerCoffin_C_CheckItemRequiements::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_CheckItemRequiements, CallFunc_Array_Length_ReturnValue_1) == 0x000084, "Member 'BP_FlowerCoffin_C_CheckItemRequiements::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_CheckItemRequiements, CallFunc_Array_Get_Item_1) == 0x000088, "Member 'BP_FlowerCoffin_C_CheckItemRequiements::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_CheckItemRequiements, CallFunc_Less_IntInt_ReturnValue_1) == 0x000090, "Member 'BP_FlowerCoffin_C_CheckItemRequiements::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_CheckItemRequiements, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x000091, "Member 'BP_FlowerCoffin_C_CheckItemRequiements::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_CheckItemRequiements, CallFunc_GetTotalItemCountByDefinition_ReturnValue) == 0x000094, "Member 'BP_FlowerCoffin_C_CheckItemRequiements::CallFunc_GetTotalItemCountByDefinition_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_CheckItemRequiements, CallFunc_Greater_IntInt_ReturnValue) == 0x000098, "Member 'BP_FlowerCoffin_C_CheckItemRequiements::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BP_FlowerCoffin.BP_FlowerCoffin_C.ConsumeItems
// 0x00A0 (0x00A0 - 0x0000)
struct BP_FlowerCoffin_C_ConsumeItems final
{
public:
	class APawn*                                  Param_Player;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ALyraCharacter*                         K2Node_DynamicCast_AsLyra_Character;               // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTgfEquipmentManagerComponent*          CallFunc_GetComponentByClass_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UTgfInventoryManagerComponent*          CallFunc_GetComponentByClass_ReturnValue_1;        // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ULyraEquipmentInstance*>         CallFunc_GetAllEquips_ReturnValue;                 // 0x0038(0x0010)(ReferenceParm)
	class ULyraEquipmentInstance*                 CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ULyraInventoryItemInstance*             CallFunc_GetInventory_ReturnValue;                 // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class ULyraInventoryItemDefinition> CallFunc_GetItemDef_ReturnValue;                   // 0x0070(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_Array_Get_Item_1;                         // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasInventoryItem_ReturnValue;             // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FlowerCoffin_C_ConsumeItems) == 0x000008, "Wrong alignment on BP_FlowerCoffin_C_ConsumeItems");
static_assert(sizeof(BP_FlowerCoffin_C_ConsumeItems) == 0x0000A0, "Wrong size on BP_FlowerCoffin_C_ConsumeItems");
static_assert(offsetof(BP_FlowerCoffin_C_ConsumeItems, Param_Player) == 0x000000, "Member 'BP_FlowerCoffin_C_ConsumeItems::Param_Player' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ConsumeItems, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_FlowerCoffin_C_ConsumeItems::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ConsumeItems, K2Node_DynamicCast_AsLyra_Character) == 0x000010, "Member 'BP_FlowerCoffin_C_ConsumeItems::K2Node_DynamicCast_AsLyra_Character' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ConsumeItems, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_FlowerCoffin_C_ConsumeItems::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ConsumeItems, CallFunc_GetComponentByClass_ReturnValue) == 0x000020, "Member 'BP_FlowerCoffin_C_ConsumeItems::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ConsumeItems, CallFunc_GetComponentByClass_ReturnValue_1) == 0x000028, "Member 'BP_FlowerCoffin_C_ConsumeItems::CallFunc_GetComponentByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ConsumeItems, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BP_FlowerCoffin_C_ConsumeItems::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ConsumeItems, CallFunc_IsValid_ReturnValue_1) == 0x000031, "Member 'BP_FlowerCoffin_C_ConsumeItems::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ConsumeItems, CallFunc_GetAllEquips_ReturnValue) == 0x000038, "Member 'BP_FlowerCoffin_C_ConsumeItems::CallFunc_GetAllEquips_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ConsumeItems, CallFunc_Array_Get_Item) == 0x000048, "Member 'BP_FlowerCoffin_C_ConsumeItems::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ConsumeItems, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'BP_FlowerCoffin_C_ConsumeItems::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ConsumeItems, CallFunc_GetInventory_ReturnValue) == 0x000058, "Member 'BP_FlowerCoffin_C_ConsumeItems::CallFunc_GetInventory_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ConsumeItems, Temp_int_Loop_Counter_Variable) == 0x000060, "Member 'BP_FlowerCoffin_C_ConsumeItems::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ConsumeItems, CallFunc_IsValid_ReturnValue_2) == 0x000064, "Member 'BP_FlowerCoffin_C_ConsumeItems::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ConsumeItems, CallFunc_Add_IntInt_ReturnValue) == 0x000068, "Member 'BP_FlowerCoffin_C_ConsumeItems::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ConsumeItems, CallFunc_GetItemDef_ReturnValue) == 0x000070, "Member 'BP_FlowerCoffin_C_ConsumeItems::CallFunc_GetItemDef_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ConsumeItems, Temp_int_Array_Index_Variable_1) == 0x000078, "Member 'BP_FlowerCoffin_C_ConsumeItems::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ConsumeItems, Temp_int_Loop_Counter_Variable_1) == 0x00007C, "Member 'BP_FlowerCoffin_C_ConsumeItems::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ConsumeItems, CallFunc_Less_IntInt_ReturnValue) == 0x000080, "Member 'BP_FlowerCoffin_C_ConsumeItems::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ConsumeItems, CallFunc_Add_IntInt_ReturnValue_1) == 0x000084, "Member 'BP_FlowerCoffin_C_ConsumeItems::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ConsumeItems, CallFunc_Array_Length_ReturnValue_1) == 0x000088, "Member 'BP_FlowerCoffin_C_ConsumeItems::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ConsumeItems, CallFunc_Array_Get_Item_1) == 0x000090, "Member 'BP_FlowerCoffin_C_ConsumeItems::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ConsumeItems, CallFunc_Less_IntInt_ReturnValue_1) == 0x000098, "Member 'BP_FlowerCoffin_C_ConsumeItems::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ConsumeItems, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x000099, "Member 'BP_FlowerCoffin_C_ConsumeItems::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ConsumeItems, CallFunc_HasInventoryItem_ReturnValue) == 0x00009A, "Member 'BP_FlowerCoffin_C_ConsumeItems::CallFunc_HasInventoryItem_ReturnValue' has a wrong offset!");

// Function BP_FlowerCoffin.BP_FlowerCoffin_C.ExecuteUbergraph_BP_FlowerCoffin
// 0x0C98 (0x0C98 - 0x0000)
struct BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAsyncAction_ExperienceReady*           CallFunc_WaitForExperienceReady_ReturnValue;       // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0010(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ALyraCharacter*                         K2Node_DynamicCast_AsLyra_Character;               // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanPlayerInteract_bCanInteract;           // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_1;                       // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_2;                       // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_3;                       // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_4;                       // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable;                            // 0x0060(0x0010)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_5;                       // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_6;                       // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_7;                       // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMin_ReturnValue;                         // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_1;                          // 0x00B0(0x0010)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_2;                          // 0x00D0(0x0010)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_3;                          // 0x00E0(0x0010)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_4;                          // 0x00F0(0x0010)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_5;                          // 0x0100(0x0010)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_6;                          // 0x0110(0x0010)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_7;                          // 0x0120(0x0010)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_8;                          // 0x0130(0x0010)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_9;                          // 0x0140(0x0010)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_TargetTime_Variable;                     // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_164[0x4];                                      // 0x0164(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Proportion_Variable;                     // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_181[0x7];                                      // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_199[0x7];                                      // 0x0199(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x01A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_1;        // 0x01B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_OriginTime_Variable;                     // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x01D8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetGameTimeInSeconds_ReturnValue_1;       // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_2;      // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsForward_Variable;                      // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_201[0x7];                                      // 0x0201(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0211(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_212[0x6];                                      // 0x0212(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_OriginTime_Variable_1;                   // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Proportion_Variable_1;                   // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_TargetTime_Variable_1;                   // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_5;      // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_6;      // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_1;     // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_241[0x7];                                      // 0x0241(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_3;      // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_7;      // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1;  // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_259[0x7];                                      // 0x0259(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_2;        // 0x0260(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_3;        // 0x0278(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetGameTimeInSeconds_ReturnValue_2;       // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_299[0x7];                                      // 0x0299(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetGameTimeInSeconds_ReturnValue_3;       // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsForward_Variable_1;                    // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A9[0x7];                                      // 0x02A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_4;      // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_5;      // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x02C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C4[0x4];                                      // 0x02C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x02D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_1;                     // 0x02D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_1;               // 0x02D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_2;                     // 0x02D6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_2;               // 0x02D7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x02D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D9[0x7];                                      // 0x02D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x02E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x02E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E9[0x7];                                      // 0x02E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_NpcDetectComponent_C*               CallFunc_GetComponentByClass_ReturnValue;          // 0x02F0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x02F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F9[0x7];                                      // 0x02F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ALyraCharacter*                         K2Node_CustomEvent_Player_1;                       // 0x0300(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ALyraCharacter*                         K2Node_CustomEvent_Player;                         // 0x0308(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0310(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0328(0x0010)(ConstParm, ReferenceParm)
	TArray<struct FHitResult>                     CallFunc_SphereTraceMultiForObjects_OutHits;       // 0x0338(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceMultiForObjects_ReturnValue;   // 0x0348(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_349[0x7];                                      // 0x0349(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_Array_Get_Item;                           // 0x0350(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0438(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x043C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x043D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43E[0x2];                                      // 0x043E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0440(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0444(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0448(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0460(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0478(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0490(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x04A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x04B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x04B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x04C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x04C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x04D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x04D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x04D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DC[0x4];                                      // 0x04DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x04E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x04F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0510(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_511[0x7];                                      // 0x0511(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ALyraCharacter*                         K2Node_DynamicCast_AsLyra_Character_1;             // 0x0518(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0520(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_521[0x7];                                      // 0x0521(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_CollectableBase_C*                  K2Node_DynamicCast_AsBP_Collectable_Base;          // 0x0528(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0530(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_531[0x3];                                      // 0x0531(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetDistanceTo_ReturnValue;                // 0x0534(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0538(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_539[0x7];                                      // 0x0539(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_Event_InteractingPawn;                      // 0x0540(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_8;      // 0x0548(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_6;      // 0x0550(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x0558(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x0560(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0568(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_1;      // 0x0580(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0598(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x05A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x05A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_9;      // 0x05B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x05B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_7;      // 0x05D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_3;        // 0x05D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_3;           // 0x05E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x05E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5E9[0x7];                                      // 0x05E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x05F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue_1;      // 0x0608(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Dot_VectorVector_ReturnValue;             // 0x0620(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue_2;  // 0x0628(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0629(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x062A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_62B[0x5];                                      // 0x062B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_2;                // 0x0630(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0638(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0650(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_2;      // 0x0668(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_3;      // 0x0680(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_4;      // 0x0698(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_5;      // 0x06B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x06C8(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	double                                        CallFunc_BreakVector_X_1;                          // 0x07B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x07B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x07C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x07C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x07E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x07F8(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_1;          // 0x08E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8E1[0x7];                                      // 0x08E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult_1;  // 0x08E8(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_6;      // 0x09D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult_1;  // 0x09E8(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult_2;  // 0x0AD0(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_2;          // 0x0BB8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BB9[0x3];                                      // 0x0BB9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_PostAkEvent_ReturnValue;                  // 0x0BBC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostAkEvent_ReturnValue_1;                // 0x0BC0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostAkEvent_ReturnValue_2;                // 0x0BC4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostAkEvent_ReturnValue_3;                // 0x0BC8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostAkEvent_ReturnValue_4;                // 0x0BCC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostAkEvent_ReturnValue_5;                // 0x0BD0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostAkEvent_ReturnValue_6;                // 0x0BD4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostAkEvent_ReturnValue_7;                // 0x0BD8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostAkEvent_ReturnValue_8;                // 0x0BDC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostAkEvent_ReturnValue_9;                // 0x0BE0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BE4[0x4];                                      // 0x0BE4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_Alpha_ImplicitCast;                  // 0x0BE8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValueOnMaterials_ParameterValue_ImplicitCast; // 0x0BF0(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BF4[0x4];                                      // 0x0BF4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_Alpha_ImplicitCast_1;                // 0x0BF8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMin_A_ImplicitCast;                      // 0x0C00(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_Alpha_ImplicitCast_2;                // 0x0C08(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x0C10(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast_1;        // 0x0C18(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValueOnMaterials_ParameterValue_ImplicitCast_1; // 0x0C20(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetIntensity_NewIntensity_ImplicitCast;   // 0x0C24(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_Alpha_ImplicitCast_3;                // 0x0C28(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_Alpha_ImplicitCast_4;                // 0x0C30(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValueOnMaterials_ParameterValue_ImplicitCast_2; // 0x0C38(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValueOnMaterials_ParameterValue_ImplicitCast_3; // 0x0C3C(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMin_B_ImplicitCast;                      // 0x0C40(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_Alpha_ImplicitCast_5;                // 0x0C48(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast;          // 0x0C50(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast_1;        // 0x0C58(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetIntensity_NewIntensity_ImplicitCast_1; // 0x0C60(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValueOnMaterials_ParameterValue_ImplicitCast_4; // 0x0C64(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetIntensity_NewIntensity_ImplicitCast_2; // 0x0C68(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValueOnMaterials_ParameterValue_ImplicitCast_5; // 0x0C6C(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValueOnMaterials_ParameterValue_ImplicitCast_6; // 0x0C70(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SphereTraceMultiForObjects_Radius_ImplicitCast; // 0x0C74(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Less_DoubleDouble_A_ImplicitCast;         // 0x0C78(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Roll_ImplicitCast;            // 0x0C80(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Pitch_ImplicitCast;           // 0x0C84(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x0C88(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Roll_ImplicitCast_1;          // 0x0C8C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Pitch_ImplicitCast_1;         // 0x0C90(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast_1;           // 0x0C94(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin) == 0x000008, "Wrong alignment on BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin");
static_assert(sizeof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin) == 0x000C98, "Wrong size on BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, EntryPoint) == 0x000000, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_WaitForExperienceReady_ReturnValue) == 0x000008, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_WaitForExperienceReady_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, Temp_object_Variable) == 0x000010, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, K2Node_DynamicCast_AsLyra_Character) == 0x000028, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::K2Node_DynamicCast_AsLyra_Character' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_CanPlayerInteract_bCanInteract) == 0x000031, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_CanPlayerInteract_bCanInteract' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_Lerp_ReturnValue) == 0x000038, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_Lerp_ReturnValue_1) == 0x000040, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_Lerp_ReturnValue_2) == 0x000048, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_Lerp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_Lerp_ReturnValue_3) == 0x000050, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_Lerp_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_Lerp_ReturnValue_4) == 0x000058, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_Lerp_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, Temp_delegate_Variable) == 0x000060, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000070, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000078, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000080, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000088, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_Lerp_ReturnValue_5) == 0x000090, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_Lerp_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_Lerp_ReturnValue_6) == 0x000098, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_Lerp_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_Lerp_ReturnValue_7) == 0x0000A0, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_Lerp_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_FMin_ReturnValue) == 0x0000A8, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, Temp_delegate_Variable_1) == 0x0000B0, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::Temp_delegate_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0000C0, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x0000C8, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, Temp_delegate_Variable_2) == 0x0000D0, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::Temp_delegate_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, Temp_delegate_Variable_3) == 0x0000E0, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::Temp_delegate_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, Temp_delegate_Variable_4) == 0x0000F0, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::Temp_delegate_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, Temp_delegate_Variable_5) == 0x000100, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::Temp_delegate_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, Temp_delegate_Variable_6) == 0x000110, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::Temp_delegate_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, Temp_delegate_Variable_7) == 0x000120, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::Temp_delegate_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, Temp_delegate_Variable_8) == 0x000130, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::Temp_delegate_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, Temp_delegate_Variable_9) == 0x000140, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::Temp_delegate_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, Temp_real_TargetTime_Variable) == 0x000150, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::Temp_real_TargetTime_Variable' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000158, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, Temp_int_Array_Index_Variable) == 0x000160, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, Temp_real_Proportion_Variable) == 0x000168, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::Temp_real_Proportion_Variable' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000170, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000178, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000180, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000188, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x000190, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000198, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x0001A0, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_Conv_DoubleToVector_ReturnValue_1) == 0x0001B8, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_Conv_DoubleToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, Temp_real_OriginTime_Variable) == 0x0001D0, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::Temp_real_OriginTime_Variable' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, K2Node_CreateDelegate_OutputDelegate) == 0x0001D8, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_GetGameTimeInSeconds_ReturnValue_1) == 0x0001E8, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_GetGameTimeInSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x0001F0, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_Subtract_DoubleDouble_ReturnValue_2) == 0x0001F8, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_Subtract_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, Temp_bool_IsForward_Variable) == 0x000200, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::Temp_bool_IsForward_Variable' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_SelectFloat_ReturnValue) == 0x000208, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, Temp_bool_IsClosed_Variable) == 0x000210, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, Temp_bool_Has_Been_Initd_Variable) == 0x000211, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, Temp_real_OriginTime_Variable_1) == 0x000218, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::Temp_real_OriginTime_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, Temp_real_Proportion_Variable_1) == 0x000220, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::Temp_real_Proportion_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, Temp_real_TargetTime_Variable_1) == 0x000228, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::Temp_real_TargetTime_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_Multiply_DoubleDouble_ReturnValue_5) == 0x000230, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_Multiply_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_Multiply_DoubleDouble_ReturnValue_6) == 0x000238, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_Multiply_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_LessEqual_DoubleDouble_ReturnValue_1) == 0x000240, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_LessEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_Subtract_DoubleDouble_ReturnValue_3) == 0x000248, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_Subtract_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_Multiply_DoubleDouble_ReturnValue_7) == 0x000250, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_Multiply_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1) == 0x000258, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_Conv_DoubleToVector_ReturnValue_2) == 0x000260, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_Conv_DoubleToVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_Conv_DoubleToVector_ReturnValue_3) == 0x000278, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_Conv_DoubleToVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_GetGameTimeInSeconds_ReturnValue_2) == 0x000290, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_GetGameTimeInSeconds_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_HasAuthority_ReturnValue) == 0x000298, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_GetGameTimeInSeconds_ReturnValue_3) == 0x0002A0, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_GetGameTimeInSeconds_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, Temp_bool_IsForward_Variable_1) == 0x0002A8, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::Temp_bool_IsForward_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_Subtract_DoubleDouble_ReturnValue_4) == 0x0002B0, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_Subtract_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_Subtract_DoubleDouble_ReturnValue_5) == 0x0002B8, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_Subtract_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, Temp_int_Loop_Counter_Variable) == 0x0002C0, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_SelectFloat_ReturnValue_1) == 0x0002C8, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_Add_IntInt_ReturnValue) == 0x0002D0, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, Temp_bool_IsClosed_Variable_1) == 0x0002D4, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::Temp_bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, Temp_bool_Has_Been_Initd_Variable_1) == 0x0002D5, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::Temp_bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, Temp_bool_IsClosed_Variable_2) == 0x0002D6, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::Temp_bool_IsClosed_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, Temp_bool_Has_Been_Initd_Variable_2) == 0x0002D7, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::Temp_bool_Has_Been_Initd_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_HasAuthority_ReturnValue_1) == 0x0002D8, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_GetPlayerController_ReturnValue) == 0x0002E0, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_IsValid_ReturnValue_1) == 0x0002E8, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_GetComponentByClass_ReturnValue) == 0x0002F0, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_IsValid_ReturnValue_2) == 0x0002F8, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, K2Node_CustomEvent_Player_1) == 0x000300, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::K2Node_CustomEvent_Player_1' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, K2Node_CustomEvent_Player) == 0x000308, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::K2Node_CustomEvent_Player' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000310, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, K2Node_MakeArray_Array) == 0x000328, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_SphereTraceMultiForObjects_OutHits) == 0x000338, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_SphereTraceMultiForObjects_OutHits' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_SphereTraceMultiForObjects_ReturnValue) == 0x000348, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_SphereTraceMultiForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_Array_Get_Item) == 0x000350, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_Array_Length_ReturnValue) == 0x000438, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_BreakHitResult_bBlockingHit) == 0x00043C, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_BreakHitResult_bInitialOverlap) == 0x00043D, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_BreakHitResult_Time) == 0x000440, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_BreakHitResult_Distance) == 0x000444, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_BreakHitResult_Location) == 0x000448, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_BreakHitResult_ImpactPoint) == 0x000460, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_BreakHitResult_Normal) == 0x000478, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_BreakHitResult_ImpactNormal) == 0x000490, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_BreakHitResult_PhysMat) == 0x0004A8, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_BreakHitResult_HitActor) == 0x0004B0, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_BreakHitResult_HitComponent) == 0x0004B8, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_BreakHitResult_HitBoneName) == 0x0004C0, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_BreakHitResult_BoneName) == 0x0004C8, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_BreakHitResult_HitItem) == 0x0004D0, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_BreakHitResult_ElementIndex) == 0x0004D4, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_BreakHitResult_FaceIndex) == 0x0004D8, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_BreakHitResult_TraceStart) == 0x0004E0, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_BreakHitResult_TraceEnd) == 0x0004F8, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_Less_IntInt_ReturnValue) == 0x000510, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, K2Node_DynamicCast_AsLyra_Character_1) == 0x000518, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::K2Node_DynamicCast_AsLyra_Character_1' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, K2Node_DynamicCast_bSuccess_1) == 0x000520, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, K2Node_DynamicCast_AsBP_Collectable_Base) == 0x000528, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::K2Node_DynamicCast_AsBP_Collectable_Base' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, K2Node_DynamicCast_bSuccess_2) == 0x000530, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_GetDistanceTo_ReturnValue) == 0x000534, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_GetDistanceTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000538, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, K2Node_Event_InteractingPawn) == 0x000540, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::K2Node_Event_InteractingPawn' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_Multiply_DoubleDouble_ReturnValue_8) == 0x000548, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_Multiply_DoubleDouble_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_Subtract_DoubleDouble_ReturnValue_6) == 0x000550, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_Subtract_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x000558, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x000560, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000568, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_Multiply_VectorVector_ReturnValue_1) == 0x000580, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_Multiply_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_BreakVector_X) == 0x000598, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_BreakVector_Y) == 0x0005A0, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_BreakVector_Z) == 0x0005A8, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_Multiply_DoubleDouble_ReturnValue_9) == 0x0005B0, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_Multiply_DoubleDouble_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_MakeRotator_ReturnValue) == 0x0005B8, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_Subtract_DoubleDouble_ReturnValue_7) == 0x0005D0, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_Subtract_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_Divide_DoubleDouble_ReturnValue_3) == 0x0005D8, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_Divide_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_Add_DoubleDouble_ReturnValue_3) == 0x0005E0, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_Add_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_IsValid_ReturnValue_3) == 0x0005E8, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_GetActorForwardVector_ReturnValue) == 0x0005F0, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_GetActorForwardVector_ReturnValue_1) == 0x000608, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_GetActorForwardVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_Dot_VectorVector_ReturnValue) == 0x000620, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_GreaterEqual_DoubleDouble_ReturnValue_2) == 0x000628, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_GreaterEqual_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_BooleanAND_ReturnValue) == 0x000629, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_IsDedicatedServer_ReturnValue) == 0x00062A, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_SelectFloat_ReturnValue_2) == 0x000630, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_MakeVector_ReturnValue) == 0x000638, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_MakeVector_ReturnValue_1) == 0x000650, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_Multiply_VectorVector_ReturnValue_2) == 0x000668, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_Multiply_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_Multiply_VectorVector_ReturnValue_3) == 0x000680, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_Multiply_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_Multiply_VectorVector_ReturnValue_4) == 0x000698, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_Multiply_VectorVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_Multiply_VectorVector_ReturnValue_5) == 0x0006B0, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_Multiply_VectorVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x0006C8, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_BreakVector_X_1) == 0x0007B0, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_BreakVector_Y_1) == 0x0007B8, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_BreakVector_Z_1) == 0x0007C0, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_MakeVector_ReturnValue_2) == 0x0007C8, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_MakeRotator_ReturnValue_1) == 0x0007E0, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x0007F8, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_IsDedicatedServer_ReturnValue_1) == 0x0008E0, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_IsDedicatedServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_K2_SetRelativeLocation_SweepHitResult_1) == 0x0008E8, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_K2_SetRelativeLocation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_Multiply_VectorVector_ReturnValue_6) == 0x0009D0, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_Multiply_VectorVector_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_K2_SetRelativeRotation_SweepHitResult_1) == 0x0009E8, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_K2_SetRelativeRotation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_K2_SetRelativeLocation_SweepHitResult_2) == 0x000AD0, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_K2_SetRelativeLocation_SweepHitResult_2' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_IsDedicatedServer_ReturnValue_2) == 0x000BB8, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_IsDedicatedServer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_PostAkEvent_ReturnValue) == 0x000BBC, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_PostAkEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_PostAkEvent_ReturnValue_1) == 0x000BC0, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_PostAkEvent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_PostAkEvent_ReturnValue_2) == 0x000BC4, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_PostAkEvent_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_PostAkEvent_ReturnValue_3) == 0x000BC8, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_PostAkEvent_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_PostAkEvent_ReturnValue_4) == 0x000BCC, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_PostAkEvent_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_PostAkEvent_ReturnValue_5) == 0x000BD0, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_PostAkEvent_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_PostAkEvent_ReturnValue_6) == 0x000BD4, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_PostAkEvent_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_PostAkEvent_ReturnValue_7) == 0x000BD8, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_PostAkEvent_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_PostAkEvent_ReturnValue_8) == 0x000BDC, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_PostAkEvent_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_PostAkEvent_ReturnValue_9) == 0x000BE0, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_PostAkEvent_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_Lerp_Alpha_ImplicitCast) == 0x000BE8, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_Lerp_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_SetScalarParameterValueOnMaterials_ParameterValue_ImplicitCast) == 0x000BF0, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_SetScalarParameterValueOnMaterials_ParameterValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_Lerp_Alpha_ImplicitCast_1) == 0x000BF8, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_Lerp_Alpha_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_FMin_A_ImplicitCast) == 0x000C00, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_FMin_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_Lerp_Alpha_ImplicitCast_2) == 0x000C08, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_Lerp_Alpha_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x000C10, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_Add_DoubleDouble_A_ImplicitCast_1) == 0x000C18, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_Add_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_SetScalarParameterValueOnMaterials_ParameterValue_ImplicitCast_1) == 0x000C20, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_SetScalarParameterValueOnMaterials_ParameterValue_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_SetIntensity_NewIntensity_ImplicitCast) == 0x000C24, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_SetIntensity_NewIntensity_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_Lerp_Alpha_ImplicitCast_3) == 0x000C28, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_Lerp_Alpha_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_Lerp_Alpha_ImplicitCast_4) == 0x000C30, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_Lerp_Alpha_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_SetScalarParameterValueOnMaterials_ParameterValue_ImplicitCast_2) == 0x000C38, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_SetScalarParameterValueOnMaterials_ParameterValue_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_SetScalarParameterValueOnMaterials_ParameterValue_ImplicitCast_3) == 0x000C3C, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_SetScalarParameterValueOnMaterials_ParameterValue_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_FMin_B_ImplicitCast) == 0x000C40, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_FMin_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_Lerp_Alpha_ImplicitCast_5) == 0x000C48, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_Lerp_Alpha_ImplicitCast_5' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_Add_DoubleDouble_B_ImplicitCast) == 0x000C50, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_Add_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_Add_DoubleDouble_B_ImplicitCast_1) == 0x000C58, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_Add_DoubleDouble_B_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_SetIntensity_NewIntensity_ImplicitCast_1) == 0x000C60, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_SetIntensity_NewIntensity_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_SetScalarParameterValueOnMaterials_ParameterValue_ImplicitCast_4) == 0x000C64, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_SetScalarParameterValueOnMaterials_ParameterValue_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_SetIntensity_NewIntensity_ImplicitCast_2) == 0x000C68, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_SetIntensity_NewIntensity_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_SetScalarParameterValueOnMaterials_ParameterValue_ImplicitCast_5) == 0x000C6C, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_SetScalarParameterValueOnMaterials_ParameterValue_ImplicitCast_5' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_SetScalarParameterValueOnMaterials_ParameterValue_ImplicitCast_6) == 0x000C70, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_SetScalarParameterValueOnMaterials_ParameterValue_ImplicitCast_6' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_SphereTraceMultiForObjects_Radius_ImplicitCast) == 0x000C74, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_SphereTraceMultiForObjects_Radius_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_Less_DoubleDouble_A_ImplicitCast) == 0x000C78, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_Less_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_MakeRotator_Roll_ImplicitCast) == 0x000C80, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_MakeRotator_Roll_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_MakeRotator_Pitch_ImplicitCast) == 0x000C84, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_MakeRotator_Pitch_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x000C88, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_MakeRotator_Roll_ImplicitCast_1) == 0x000C8C, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_MakeRotator_Roll_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_MakeRotator_Pitch_ImplicitCast_1) == 0x000C90, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_MakeRotator_Pitch_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin, CallFunc_MakeRotator_Yaw_ImplicitCast_1) == 0x000C94, "Member 'BP_FlowerCoffin_C_ExecuteUbergraph_BP_FlowerCoffin::CallFunc_MakeRotator_Yaw_ImplicitCast_1' has a wrong offset!");

// Function BP_FlowerCoffin.BP_FlowerCoffin_C.OnPlayerApproaching
// 0x0008 (0x0008 - 0x0000)
struct BP_FlowerCoffin_C_OnPlayerApproaching final
{
public:
	class ALyraCharacter*                         Param_Player;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FlowerCoffin_C_OnPlayerApproaching) == 0x000008, "Wrong alignment on BP_FlowerCoffin_C_OnPlayerApproaching");
static_assert(sizeof(BP_FlowerCoffin_C_OnPlayerApproaching) == 0x000008, "Wrong size on BP_FlowerCoffin_C_OnPlayerApproaching");
static_assert(offsetof(BP_FlowerCoffin_C_OnPlayerApproaching, Param_Player) == 0x000000, "Member 'BP_FlowerCoffin_C_OnPlayerApproaching::Param_Player' has a wrong offset!");

// Function BP_FlowerCoffin.BP_FlowerCoffin_C.OnPlayerLeaving
// 0x0008 (0x0008 - 0x0000)
struct BP_FlowerCoffin_C_OnPlayerLeaving final
{
public:
	class ALyraCharacter*                         Param_Player;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FlowerCoffin_C_OnPlayerLeaving) == 0x000008, "Wrong alignment on BP_FlowerCoffin_C_OnPlayerLeaving");
static_assert(sizeof(BP_FlowerCoffin_C_OnPlayerLeaving) == 0x000008, "Wrong size on BP_FlowerCoffin_C_OnPlayerLeaving");
static_assert(offsetof(BP_FlowerCoffin_C_OnPlayerLeaving, Param_Player) == 0x000000, "Member 'BP_FlowerCoffin_C_OnPlayerLeaving::Param_Player' has a wrong offset!");

// Function BP_FlowerCoffin.BP_FlowerCoffin_C.PerformInteraction on Server
// 0x0008 (0x0008 - 0x0000)
struct BP_FlowerCoffin_C_PerformInteraction_on_Server final
{
public:
	class APawn*                                  InteractingPawn;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FlowerCoffin_C_PerformInteraction_on_Server) == 0x000008, "Wrong alignment on BP_FlowerCoffin_C_PerformInteraction_on_Server");
static_assert(sizeof(BP_FlowerCoffin_C_PerformInteraction_on_Server) == 0x000008, "Wrong size on BP_FlowerCoffin_C_PerformInteraction_on_Server");
static_assert(offsetof(BP_FlowerCoffin_C_PerformInteraction_on_Server, InteractingPawn) == 0x000000, "Member 'BP_FlowerCoffin_C_PerformInteraction_on_Server::InteractingPawn' has a wrong offset!");

// Function BP_FlowerCoffin.BP_FlowerCoffin_C.ResetItemNumbers
// 0x0018 (0x0018 - 0x0000)
struct BP_FlowerCoffin_C_ResetItemNumbers final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x000C(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FlowerCoffin_C_ResetItemNumbers) == 0x000004, "Wrong alignment on BP_FlowerCoffin_C_ResetItemNumbers");
static_assert(sizeof(BP_FlowerCoffin_C_ResetItemNumbers) == 0x000018, "Wrong size on BP_FlowerCoffin_C_ResetItemNumbers");
static_assert(offsetof(BP_FlowerCoffin_C_ResetItemNumbers, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_FlowerCoffin_C_ResetItemNumbers::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ResetItemNumbers, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_FlowerCoffin_C_ResetItemNumbers::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ResetItemNumbers, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_FlowerCoffin_C_ResetItemNumbers::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ResetItemNumbers, Temp_int_Variable) == 0x00000C, "Member 'BP_FlowerCoffin_C_ResetItemNumbers::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ResetItemNumbers, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'BP_FlowerCoffin_C_ResetItemNumbers::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_ResetItemNumbers, CallFunc_Less_IntInt_ReturnValue) == 0x000014, "Member 'BP_FlowerCoffin_C_ResetItemNumbers::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_FlowerCoffin.BP_FlowerCoffin_C.SpawnCollectable
// 0x0080 (0x0080 - 0x0000)
struct BP_FlowerCoffin_C_SpawnCollectable final
{
public:
	struct FTransform                             SpawnTransform;                                    // 0x0000(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Param_Owner;                                       // 0x0060(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         ItemId;                                            // 0x0068(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_CollectableBase_C*                  SpawnedItem;                                       // 0x0070(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_CollectableBase_C*                  CallFunc_SpawnCollectable_SpawnedItem;             // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FlowerCoffin_C_SpawnCollectable) == 0x000010, "Wrong alignment on BP_FlowerCoffin_C_SpawnCollectable");
static_assert(sizeof(BP_FlowerCoffin_C_SpawnCollectable) == 0x000080, "Wrong size on BP_FlowerCoffin_C_SpawnCollectable");
static_assert(offsetof(BP_FlowerCoffin_C_SpawnCollectable, SpawnTransform) == 0x000000, "Member 'BP_FlowerCoffin_C_SpawnCollectable::SpawnTransform' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_SpawnCollectable, Param_Owner) == 0x000060, "Member 'BP_FlowerCoffin_C_SpawnCollectable::Param_Owner' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_SpawnCollectable, ItemId) == 0x000068, "Member 'BP_FlowerCoffin_C_SpawnCollectable::ItemId' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_SpawnCollectable, SpawnedItem) == 0x000070, "Member 'BP_FlowerCoffin_C_SpawnCollectable::SpawnedItem' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_SpawnCollectable, CallFunc_SpawnCollectable_SpawnedItem) == 0x000078, "Member 'BP_FlowerCoffin_C_SpawnCollectable::CallFunc_SpawnCollectable_SpawnedItem' has a wrong offset!");

// Function BP_FlowerCoffin.BP_FlowerCoffin_C.UpdateFlowerStates
// 0x000C (0x000C - 0x0000)
struct BP_FlowerCoffin_C_UpdateFlowerStates final
{
public:
	int32                                         CallFunc_Array_Get_Item;                           // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_1;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FlowerCoffin_C_UpdateFlowerStates) == 0x000004, "Wrong alignment on BP_FlowerCoffin_C_UpdateFlowerStates");
static_assert(sizeof(BP_FlowerCoffin_C_UpdateFlowerStates) == 0x00000C, "Wrong size on BP_FlowerCoffin_C_UpdateFlowerStates");
static_assert(offsetof(BP_FlowerCoffin_C_UpdateFlowerStates, CallFunc_Array_Get_Item) == 0x000000, "Member 'BP_FlowerCoffin_C_UpdateFlowerStates::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_UpdateFlowerStates, CallFunc_Array_Get_Item_1) == 0x000004, "Member 'BP_FlowerCoffin_C_UpdateFlowerStates::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_UpdateFlowerStates, CallFunc_Greater_IntInt_ReturnValue) == 0x000008, "Member 'BP_FlowerCoffin_C_UpdateFlowerStates::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_UpdateFlowerStates, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000009, "Member 'BP_FlowerCoffin_C_UpdateFlowerStates::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_FlowerCoffin.BP_FlowerCoffin_C.UpdateItemNumberByCollectable
// 0x0020 (0x0020 - 0x0000)
struct BP_FlowerCoffin_C_UpdateItemNumberByCollectable final
{
public:
	class ABP_CollectableBase_C*                  Collectable;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetStackCount_ReturnValue;                // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Get_Item;                           // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FlowerCoffin_C_UpdateItemNumberByCollectable) == 0x000008, "Wrong alignment on BP_FlowerCoffin_C_UpdateItemNumberByCollectable");
static_assert(sizeof(BP_FlowerCoffin_C_UpdateItemNumberByCollectable) == 0x000020, "Wrong size on BP_FlowerCoffin_C_UpdateItemNumberByCollectable");
static_assert(offsetof(BP_FlowerCoffin_C_UpdateItemNumberByCollectable, Collectable) == 0x000000, "Member 'BP_FlowerCoffin_C_UpdateItemNumberByCollectable::Collectable' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_UpdateItemNumberByCollectable, CallFunc_GetStackCount_ReturnValue) == 0x000008, "Member 'BP_FlowerCoffin_C_UpdateItemNumberByCollectable::CallFunc_GetStackCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_UpdateItemNumberByCollectable, CallFunc_Array_Find_ReturnValue) == 0x00000C, "Member 'BP_FlowerCoffin_C_UpdateItemNumberByCollectable::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_UpdateItemNumberByCollectable, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000010, "Member 'BP_FlowerCoffin_C_UpdateItemNumberByCollectable::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_UpdateItemNumberByCollectable, CallFunc_Array_Get_Item) == 0x000014, "Member 'BP_FlowerCoffin_C_UpdateItemNumberByCollectable::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_UpdateItemNumberByCollectable, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_FlowerCoffin_C_UpdateItemNumberByCollectable::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_FlowerCoffin.BP_FlowerCoffin_C.UpdateItemNumbersByPlayer
// 0x00E8 (0x00E8 - 0x0000)
struct BP_FlowerCoffin_C_UpdateItemNumbersByPlayer final
{
public:
	class ALyraCharacter*                         Param_Player;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Increase;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UTgfEquipmentManagerComponent*          CallFunc_GetComponentByClass_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ULyraEquipmentInstance*>         CallFunc_GetAllEquips_ReturnValue;                 // 0x0020(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTgfInventoryManagerComponent*          CallFunc_GetComponentByClass_ReturnValue_1;        // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ULyraEquipmentInstance*                 CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULyraInventoryItemInstance*             CallFunc_GetInventory_ReturnValue;                 // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetStackCount_ReturnValue;                // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSubclassOf<class ULyraInventoryItemDefinition> CallFunc_GetItemDef_ReturnValue;                   // 0x0068(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_85[0x3];                                       // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_1;                         // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_Array_Get_Item_2;                         // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B5[0x3];                                       // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_Array_Get_Item_3;                         // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetTotalItemCountByDefinition_ReturnValue; // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D1[0x3];                                       // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DD[0x3];                                       // 0x00DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue_1;                  // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FlowerCoffin_C_UpdateItemNumbersByPlayer) == 0x000008, "Wrong alignment on BP_FlowerCoffin_C_UpdateItemNumbersByPlayer");
static_assert(sizeof(BP_FlowerCoffin_C_UpdateItemNumbersByPlayer) == 0x0000E8, "Wrong size on BP_FlowerCoffin_C_UpdateItemNumbersByPlayer");
static_assert(offsetof(BP_FlowerCoffin_C_UpdateItemNumbersByPlayer, Param_Player) == 0x000000, "Member 'BP_FlowerCoffin_C_UpdateItemNumbersByPlayer::Param_Player' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_UpdateItemNumbersByPlayer, Increase) == 0x000008, "Member 'BP_FlowerCoffin_C_UpdateItemNumbersByPlayer::Increase' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_UpdateItemNumbersByPlayer, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'BP_FlowerCoffin_C_UpdateItemNumbersByPlayer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_UpdateItemNumbersByPlayer, CallFunc_GetComponentByClass_ReturnValue) == 0x000010, "Member 'BP_FlowerCoffin_C_UpdateItemNumbersByPlayer::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_UpdateItemNumbersByPlayer, CallFunc_IsValid_ReturnValue_1) == 0x000018, "Member 'BP_FlowerCoffin_C_UpdateItemNumbersByPlayer::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_UpdateItemNumbersByPlayer, CallFunc_GetAllEquips_ReturnValue) == 0x000020, "Member 'BP_FlowerCoffin_C_UpdateItemNumbersByPlayer::CallFunc_GetAllEquips_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_UpdateItemNumbersByPlayer, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BP_FlowerCoffin_C_UpdateItemNumbersByPlayer::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_UpdateItemNumbersByPlayer, CallFunc_GetComponentByClass_ReturnValue_1) == 0x000038, "Member 'BP_FlowerCoffin_C_UpdateItemNumbersByPlayer::CallFunc_GetComponentByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_UpdateItemNumbersByPlayer, Temp_int_Array_Index_Variable) == 0x000040, "Member 'BP_FlowerCoffin_C_UpdateItemNumbersByPlayer::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_UpdateItemNumbersByPlayer, CallFunc_IsValid_ReturnValue_2) == 0x000044, "Member 'BP_FlowerCoffin_C_UpdateItemNumbersByPlayer::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_UpdateItemNumbersByPlayer, CallFunc_Array_Get_Item) == 0x000048, "Member 'BP_FlowerCoffin_C_UpdateItemNumbersByPlayer::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_UpdateItemNumbersByPlayer, CallFunc_IsValid_ReturnValue_3) == 0x000050, "Member 'BP_FlowerCoffin_C_UpdateItemNumbersByPlayer::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_UpdateItemNumbersByPlayer, CallFunc_GetInventory_ReturnValue) == 0x000058, "Member 'BP_FlowerCoffin_C_UpdateItemNumbersByPlayer::CallFunc_GetInventory_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_UpdateItemNumbersByPlayer, CallFunc_IsValid_ReturnValue_4) == 0x000060, "Member 'BP_FlowerCoffin_C_UpdateItemNumbersByPlayer::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_UpdateItemNumbersByPlayer, CallFunc_GetStackCount_ReturnValue) == 0x000064, "Member 'BP_FlowerCoffin_C_UpdateItemNumbersByPlayer::CallFunc_GetStackCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_UpdateItemNumbersByPlayer, CallFunc_GetItemDef_ReturnValue) == 0x000068, "Member 'BP_FlowerCoffin_C_UpdateItemNumbersByPlayer::CallFunc_GetItemDef_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_UpdateItemNumbersByPlayer, CallFunc_IsValidClass_ReturnValue) == 0x000070, "Member 'BP_FlowerCoffin_C_UpdateItemNumbersByPlayer::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_UpdateItemNumbersByPlayer, Temp_int_Loop_Counter_Variable) == 0x000074, "Member 'BP_FlowerCoffin_C_UpdateItemNumbersByPlayer::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_UpdateItemNumbersByPlayer, CallFunc_Add_IntInt_ReturnValue) == 0x000078, "Member 'BP_FlowerCoffin_C_UpdateItemNumbersByPlayer::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_UpdateItemNumbersByPlayer, Temp_int_Array_Index_Variable_1) == 0x00007C, "Member 'BP_FlowerCoffin_C_UpdateItemNumbersByPlayer::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_UpdateItemNumbersByPlayer, Temp_int_Loop_Counter_Variable_1) == 0x000080, "Member 'BP_FlowerCoffin_C_UpdateItemNumbersByPlayer::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_UpdateItemNumbersByPlayer, CallFunc_Less_IntInt_ReturnValue) == 0x000084, "Member 'BP_FlowerCoffin_C_UpdateItemNumbersByPlayer::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_UpdateItemNumbersByPlayer, CallFunc_Add_IntInt_ReturnValue_1) == 0x000088, "Member 'BP_FlowerCoffin_C_UpdateItemNumbersByPlayer::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_UpdateItemNumbersByPlayer, Temp_int_Loop_Counter_Variable_2) == 0x00008C, "Member 'BP_FlowerCoffin_C_UpdateItemNumbersByPlayer::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_UpdateItemNumbersByPlayer, CallFunc_Array_Length_ReturnValue_1) == 0x000090, "Member 'BP_FlowerCoffin_C_UpdateItemNumbersByPlayer::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_UpdateItemNumbersByPlayer, CallFunc_Add_IntInt_ReturnValue_2) == 0x000094, "Member 'BP_FlowerCoffin_C_UpdateItemNumbersByPlayer::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_UpdateItemNumbersByPlayer, CallFunc_Less_IntInt_ReturnValue_1) == 0x000098, "Member 'BP_FlowerCoffin_C_UpdateItemNumbersByPlayer::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_UpdateItemNumbersByPlayer, Temp_int_Array_Index_Variable_2) == 0x00009C, "Member 'BP_FlowerCoffin_C_UpdateItemNumbersByPlayer::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_UpdateItemNumbersByPlayer, CallFunc_Array_Get_Item_1) == 0x0000A0, "Member 'BP_FlowerCoffin_C_UpdateItemNumbersByPlayer::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_UpdateItemNumbersByPlayer, CallFunc_Array_Get_Item_2) == 0x0000A8, "Member 'BP_FlowerCoffin_C_UpdateItemNumbersByPlayer::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_UpdateItemNumbersByPlayer, CallFunc_Subtract_IntInt_ReturnValue) == 0x0000B0, "Member 'BP_FlowerCoffin_C_UpdateItemNumbersByPlayer::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_UpdateItemNumbersByPlayer, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x0000B4, "Member 'BP_FlowerCoffin_C_UpdateItemNumbersByPlayer::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_UpdateItemNumbersByPlayer, CallFunc_Add_IntInt_ReturnValue_3) == 0x0000B8, "Member 'BP_FlowerCoffin_C_UpdateItemNumbersByPlayer::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_UpdateItemNumbersByPlayer, CallFunc_SelectInt_ReturnValue) == 0x0000BC, "Member 'BP_FlowerCoffin_C_UpdateItemNumbersByPlayer::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_UpdateItemNumbersByPlayer, CallFunc_Array_Get_Item_3) == 0x0000C0, "Member 'BP_FlowerCoffin_C_UpdateItemNumbersByPlayer::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_UpdateItemNumbersByPlayer, CallFunc_Array_Length_ReturnValue_2) == 0x0000C8, "Member 'BP_FlowerCoffin_C_UpdateItemNumbersByPlayer::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_UpdateItemNumbersByPlayer, CallFunc_GetTotalItemCountByDefinition_ReturnValue) == 0x0000CC, "Member 'BP_FlowerCoffin_C_UpdateItemNumbersByPlayer::CallFunc_GetTotalItemCountByDefinition_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_UpdateItemNumbersByPlayer, CallFunc_Less_IntInt_ReturnValue_2) == 0x0000D0, "Member 'BP_FlowerCoffin_C_UpdateItemNumbersByPlayer::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_UpdateItemNumbersByPlayer, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x0000D4, "Member 'BP_FlowerCoffin_C_UpdateItemNumbersByPlayer::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_UpdateItemNumbersByPlayer, CallFunc_Add_IntInt_ReturnValue_4) == 0x0000D8, "Member 'BP_FlowerCoffin_C_UpdateItemNumbersByPlayer::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_UpdateItemNumbersByPlayer, CallFunc_Greater_IntInt_ReturnValue) == 0x0000DC, "Member 'BP_FlowerCoffin_C_UpdateItemNumbersByPlayer::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_UpdateItemNumbersByPlayer, CallFunc_SelectInt_ReturnValue_1) == 0x0000E0, "Member 'BP_FlowerCoffin_C_UpdateItemNumbersByPlayer::CallFunc_SelectInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FlowerCoffin_C_UpdateItemNumbersByPlayer, CallFunc_Clamp_ReturnValue) == 0x0000E4, "Member 'BP_FlowerCoffin_C_UpdateItemNumbersByPlayer::CallFunc_Clamp_ReturnValue' has a wrong offset!");

// Function BP_FlowerCoffin.BP_FlowerCoffin_C.UserConstructionScript
// 0x0004 (0x0004 - 0x0000)
struct BP_FlowerCoffin_C_UserConstructionScript final
{
public:
	float                                         CallFunc_SetSphereRadius_InSphereRadius_ImplicitCast; // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FlowerCoffin_C_UserConstructionScript) == 0x000004, "Wrong alignment on BP_FlowerCoffin_C_UserConstructionScript");
static_assert(sizeof(BP_FlowerCoffin_C_UserConstructionScript) == 0x000004, "Wrong size on BP_FlowerCoffin_C_UserConstructionScript");
static_assert(offsetof(BP_FlowerCoffin_C_UserConstructionScript, CallFunc_SetSphereRadius_InSphereRadius_ImplicitCast) == 0x000000, "Member 'BP_FlowerCoffin_C_UserConstructionScript::CallFunc_SetSphereRadius_InSphereRadius_ImplicitCast' has a wrong offset!");

}

