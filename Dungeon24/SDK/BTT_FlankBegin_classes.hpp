#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTT_FlankBegin

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AIModule_structs.hpp"
#include "AIModule_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BTT_FlankBegin.BTT_FlankBegin_C
// 0x0090 (0x0138 - 0x00A8)
class UBTT_FlankBegin_C final : public UBTTask_BlueprintBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FBlackboardKeySelector                 TargetAgainst;                                     // 0x00B0(0x0028)(Edit, BlueprintVisible)
	struct FBlackboardKeySelector                 FlankTime;                                         // 0x00D8(0x0028)(Edit, BlueprintVisible)
	struct FBlackboardKeySelector                 FlankPath;                                         // 0x0100(0x0028)(Edit, BlueprintVisible)
	int32                                         Count;                                             // 0x0128(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12C[0x4];                                      // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Direction;                                         // 0x0130(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void CalcFlankPoint(class ABP_Tgf_Monster_C* Monster, const struct FVector& StartPoint, const struct FVector& Target, struct FVector* Point);
	void ExecuteUbergraph_BTT_FlankBegin(int32 EntryPoint);
	void ReceiveExecuteAI(class AAIController* OwnerController, class APawn* ControlledPawn);
	void Setup_Flank_Path(class ABP_Tgf_Monster_C* Monster, bool* Result);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BTT_FlankBegin_C">();
	}
	static class UBTT_FlankBegin_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBTT_FlankBegin_C>();
	}
};
static_assert(alignof(UBTT_FlankBegin_C) == 0x000008, "Wrong alignment on UBTT_FlankBegin_C");
static_assert(sizeof(UBTT_FlankBegin_C) == 0x000138, "Wrong size on UBTT_FlankBegin_C");
static_assert(offsetof(UBTT_FlankBegin_C, UberGraphFrame) == 0x0000A8, "Member 'UBTT_FlankBegin_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBTT_FlankBegin_C, TargetAgainst) == 0x0000B0, "Member 'UBTT_FlankBegin_C::TargetAgainst' has a wrong offset!");
static_assert(offsetof(UBTT_FlankBegin_C, FlankTime) == 0x0000D8, "Member 'UBTT_FlankBegin_C::FlankTime' has a wrong offset!");
static_assert(offsetof(UBTT_FlankBegin_C, FlankPath) == 0x000100, "Member 'UBTT_FlankBegin_C::FlankPath' has a wrong offset!");
static_assert(offsetof(UBTT_FlankBegin_C, Count) == 0x000128, "Member 'UBTT_FlankBegin_C::Count' has a wrong offset!");
static_assert(offsetof(UBTT_FlankBegin_C, Direction) == 0x000130, "Member 'UBTT_FlankBegin_C::Direction' has a wrong offset!");

}

