#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Trade_PriceEntry

#include "Basic.hpp"

#include "WBP_Trade_PriceEntry_classes.hpp"
#include "WBP_Trade_PriceEntry_parameters.hpp"


namespace SDK
{

// Function WBP_Trade_PriceEntry.WBP_Trade_PriceEntry_C.SetPrice
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int64                                   Param_Price                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Trade_PriceEntry_C::SetPrice(int64 Param_Price)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Trade_PriceEntry_C", "SetPrice");

	Params::WBP_Trade_PriceEntry_C_SetPrice Parms{};

	Parms.Param_Price = Param_Price;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Trade_PriceEntry.WBP_Trade_PriceEntry_C.SetPriceStr
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Param_Price                                            (BlueprintVisible, BlueprintReadOnly, Parm)

void UWBP_Trade_PriceEntry_C::SetPriceStr(const class FText& Param_Price)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Trade_PriceEntry_C", "SetPriceStr");

	Params::WBP_Trade_PriceEntry_C_SetPriceStr Parms{};

	Parms.Param_Price = std::move(Param_Price);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Trade_PriceEntry.WBP_Trade_PriceEntry_C.SetTips
// (Native, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   TypeId                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Trade_PriceEntry_C::SetTips(int32 TypeId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Trade_PriceEntry_C", "SetTips");

	Params::WBP_Trade_PriceEntry_C_SetTips Parms{};

	Parms.TypeId = TypeId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function WBP_Trade_PriceEntry.WBP_Trade_PriceEntry_C.SetTypeIcon
// (Native, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Type                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Trade_PriceEntry_C::SetTypeIcon(int32 Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Trade_PriceEntry_C", "SetTypeIcon");

	Params::WBP_Trade_PriceEntry_C_SetTypeIcon Parms{};

	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function WBP_Trade_PriceEntry.WBP_Trade_PriceEntry_C.GetModuleName
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)

class FString UWBP_Trade_PriceEntry_C::GetModuleName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Trade_PriceEntry_C", "GetModuleName");

	Params::WBP_Trade_PriceEntry_C_GetModuleName Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

