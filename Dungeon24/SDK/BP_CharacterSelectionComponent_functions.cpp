#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CharacterSelectionComponent

#include "Basic.hpp"

#include "BP_CharacterSelectionComponent_classes.hpp"
#include "BP_CharacterSelectionComponent_parameters.hpp"


namespace SDK
{

// Function BP_CharacterSelectionComponent.BP_CharacterSelectionComponent_C.ClearClientSelection
// (Net, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bTriggerInvalid                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_CharacterSelectionComponent_C::ClearClientSelection(bool bTriggerInvalid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterSelectionComponent_C", "ClearClientSelection");

	Params::BP_CharacterSelectionComponent_C_ClearClientSelection Parms{};

	Parms.bTriggerInvalid = bTriggerInvalid;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharacterSelectionComponent.BP_CharacterSelectionComponent_C.ClearSelectEffect
// (BlueprintCallable, BlueprintEvent)

void UBP_CharacterSelectionComponent_C::ClearSelectEffect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterSelectionComponent_C", "ClearSelectEffect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CharacterSelectionComponent.BP_CharacterSelectionComponent_C.ClearSelectLocation
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)

void UBP_CharacterSelectionComponent_C::ClearSelectLocation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterSelectionComponent_C", "ClearSelectLocation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CharacterSelectionComponent.BP_CharacterSelectionComponent_C.ClearServerSelection
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bTriggerInvalid                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_CharacterSelectionComponent_C::ClearServerSelection(bool bTriggerInvalid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterSelectionComponent_C", "ClearServerSelection");

	Params::BP_CharacterSelectionComponent_C_ClearServerSelection Parms{};

	Parms.bTriggerInvalid = bTriggerInvalid;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharacterSelectionComponent.BP_CharacterSelectionComponent_C.CreateIndicator
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_CharacterSelectionComponent_C::CreateIndicator()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterSelectionComponent_C", "CreateIndicator");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CharacterSelectionComponent.BP_CharacterSelectionComponent_C.EndSelection
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_CharacterSelectionComponent_C::EndSelection()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterSelectionComponent_C", "EndSelection");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CharacterSelectionComponent.BP_CharacterSelectionComponent_C.ExecuteUbergraph_BP_CharacterSelectionComponent
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_CharacterSelectionComponent_C::ExecuteUbergraph_BP_CharacterSelectionComponent(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterSelectionComponent_C", "ExecuteUbergraph_BP_CharacterSelectionComponent");

	Params::BP_CharacterSelectionComponent_C_ExecuteUbergraph_BP_CharacterSelectionComponent Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharacterSelectionComponent.BP_CharacterSelectionComponent_C.Get Trace Hit Pos
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Param_TraceHitPos                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_CharacterSelectionComponent_C::Get_Trace_Hit_Pos(struct FVector* Param_TraceHitPos)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterSelectionComponent_C", "Get Trace Hit Pos");

	Params::BP_CharacterSelectionComponent_C_Get_Trace_Hit_Pos Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_TraceHitPos != nullptr)
		*Param_TraceHitPos = std::move(Parms.Param_TraceHitPos);
}


// Function BP_CharacterSelectionComponent.BP_CharacterSelectionComponent_C.GetSelection
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_Tgf_Character_Default_C*      SelectedCharacter                                      (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_CharacterSelectionComponent_C::GetSelection(class ABP_Tgf_Character_Default_C** SelectedCharacter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterSelectionComponent_C", "GetSelection");

	Params::BP_CharacterSelectionComponent_C_GetSelection Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (SelectedCharacter != nullptr)
		*SelectedCharacter = Parms.SelectedCharacter;
}


// Function BP_CharacterSelectionComponent.BP_CharacterSelectionComponent_C.GetSelectLocation
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bHasValid                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_CharacterSelectionComponent_C::GetSelectLocation(struct FVector* Location, bool* bHasValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterSelectionComponent_C", "GetSelectLocation");

	Params::BP_CharacterSelectionComponent_C_GetSelectLocation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Location != nullptr)
		*Location = std::move(Parms.Location);

	if (bHasValid != nullptr)
		*bHasValid = Parms.bHasValid;
}


// Function BP_CharacterSelectionComponent.BP_CharacterSelectionComponent_C.InitCompnent
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_CharacterSelectionComponent_C::InitCompnent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterSelectionComponent_C", "InitCompnent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CharacterSelectionComponent.BP_CharacterSelectionComponent_C.Is Actor Selectable
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_Tgf_Character_Default_C*      Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// bool                                    bSelectable                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_CharacterSelectionComponent_C::Is_Actor_Selectable(class ABP_Tgf_Character_Default_C*& Actor, bool* bSelectable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterSelectionComponent_C", "Is Actor Selectable");

	Params::BP_CharacterSelectionComponent_C_Is_Actor_Selectable Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);

	Actor = Parms.Actor;

	if (bSelectable != nullptr)
		*bSelectable = Parms.bSelectable;
}


// Function BP_CharacterSelectionComponent.BP_CharacterSelectionComponent_C.Is Cur Chara Unselectable
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_Tgf_Character_Default_C*      NewChara                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    bUnselectable                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_CharacterSelectionComponent_C::Is_Cur_Chara_Unselectable(class ABP_Tgf_Character_Default_C* NewChara, bool* bUnselectable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterSelectionComponent_C", "Is Cur Chara Unselectable");

	Params::BP_CharacterSelectionComponent_C_Is_Cur_Chara_Unselectable Parms{};

	Parms.NewChara = NewChara;

	UObject::ProcessEvent(Func, &Parms);

	if (bUnselectable != nullptr)
		*bUnselectable = Parms.bUnselectable;
}


// Function BP_CharacterSelectionComponent.BP_CharacterSelectionComponent_C.IsActorTagsMatch
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_Tgf_Character_Default_C*      Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    bForceCheck                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bMatch                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_CharacterSelectionComponent_C::IsActorTagsMatch(class ABP_Tgf_Character_Default_C* Actor, bool bForceCheck, bool* bMatch)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterSelectionComponent_C", "IsActorTagsMatch");

	Params::BP_CharacterSelectionComponent_C_IsActorTagsMatch Parms{};

	Parms.Actor = Actor;
	Parms.bForceCheck = bForceCheck;

	UObject::ProcessEvent(Func, &Parms);

	if (bMatch != nullptr)
		*bMatch = Parms.bMatch;
}


// Function BP_CharacterSelectionComponent.BP_CharacterSelectionComponent_C.OnCharacterSelected__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_Tgf_Character_Default_C*      SelectedCharacter                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_CharacterSelectionComponent_C::OnCharacterSelected__DelegateSignature(class ABP_Tgf_Character_Default_C* SelectedCharacter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterSelectionComponent_C", "OnCharacterSelected__DelegateSignature");

	Params::BP_CharacterSelectionComponent_C_OnCharacterSelected__DelegateSignature Parms{};

	Parms.SelectedCharacter = SelectedCharacter;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharacterSelectionComponent.BP_CharacterSelectionComponent_C.OnEndSelection__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_Tgf_Character_Default_C*      SelectedCharacter                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_CharacterSelectionComponent_C::OnEndSelection__DelegateSignature(class ABP_Tgf_Character_Default_C* SelectedCharacter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterSelectionComponent_C", "OnEndSelection__DelegateSignature");

	Params::BP_CharacterSelectionComponent_C_OnEndSelection__DelegateSignature Parms{};

	Parms.SelectedCharacter = SelectedCharacter;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharacterSelectionComponent.BP_CharacterSelectionComponent_C.OnSelectedInvalid__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UBP_CharacterSelectionComponent_C::OnSelectedInvalid__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterSelectionComponent_C", "OnSelectedInvalid__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CharacterSelectionComponent.BP_CharacterSelectionComponent_C.OnSelectedTargetDead
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           OwningActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_CharacterSelectionComponent_C::OnSelectedTargetDead(class AActor* OwningActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterSelectionComponent_C", "OnSelectedTargetDead");

	Params::BP_CharacterSelectionComponent_C_OnSelectedTargetDead Parms{};

	Parms.OwningActor = OwningActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharacterSelectionComponent.BP_CharacterSelectionComponent_C.OnStartSelection
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_CharacterSelectionComponent_C::OnStartSelection()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterSelectionComponent_C", "OnStartSelection");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CharacterSelectionComponent.BP_CharacterSelectionComponent_C.OnUpdateSelectionServer
// (Net, NetReliable, NetServer, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_Tgf_Character_Default_C*      SelectedChara                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FVector                          TraceStart                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          TraceHit                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             Param_TraceBoneName                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class AActor*>                   IgnoreActors                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UBP_CharacterSelectionComponent_C::OnUpdateSelectionServer(class ABP_Tgf_Character_Default_C* SelectedChara, const struct FVector& TraceStart, const struct FVector& TraceHit, class FName Param_TraceBoneName, const TArray<class AActor*>& IgnoreActors)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterSelectionComponent_C", "OnUpdateSelectionServer");

	Params::BP_CharacterSelectionComponent_C_OnUpdateSelectionServer Parms{};

	Parms.SelectedChara = SelectedChara;
	Parms.TraceStart = std::move(TraceStart);
	Parms.TraceHit = std::move(TraceHit);
	Parms.Param_TraceBoneName = Param_TraceBoneName;
	Parms.IgnoreActors = std::move(IgnoreActors);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharacterSelectionComponent.BP_CharacterSelectionComponent_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UBP_CharacterSelectionComponent_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterSelectionComponent_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CharacterSelectionComponent.BP_CharacterSelectionComponent_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_CharacterSelectionComponent_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterSelectionComponent_C", "ReceiveTick");

	Params::BP_CharacterSelectionComponent_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharacterSelectionComponent.BP_CharacterSelectionComponent_C.SetSelectEffectPos
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_CharacterSelectionComponent_C::SetSelectEffectPos()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterSelectionComponent_C", "SetSelectEffectPos");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CharacterSelectionComponent.BP_CharacterSelectionComponent_C.StartSelection
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  MaxDistance                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  SelectionTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bSelectSelfTeam                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bSelectOtherTeam                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bSelectMonster                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bSelectAlive                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bSelectDead                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Param_UnselectAngle                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  UnselectMaxDistance                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bSelectGround                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  ServerVerifyDistanceRate                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  FindGroundDepth                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bSelectAOETarget                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  AOERadius                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Param_bIgnoreCheckTag                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bTraceAsProjectile                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_CharacterSelectionComponent_C::StartSelection(double MaxDistance, double SelectionTime, bool bSelectSelfTeam, bool bSelectOtherTeam, bool bSelectMonster, bool bSelectAlive, bool bSelectDead, double Param_UnselectAngle, double UnselectMaxDistance, bool bSelectGround, double ServerVerifyDistanceRate, double FindGroundDepth, bool bSelectAOETarget, double AOERadius, bool Param_bIgnoreCheckTag, bool bTraceAsProjectile)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterSelectionComponent_C", "StartSelection");

	Params::BP_CharacterSelectionComponent_C_StartSelection Parms{};

	Parms.MaxDistance = MaxDistance;
	Parms.SelectionTime = SelectionTime;
	Parms.bSelectSelfTeam = bSelectSelfTeam;
	Parms.bSelectOtherTeam = bSelectOtherTeam;
	Parms.bSelectMonster = bSelectMonster;
	Parms.bSelectAlive = bSelectAlive;
	Parms.bSelectDead = bSelectDead;
	Parms.Param_UnselectAngle = Param_UnselectAngle;
	Parms.UnselectMaxDistance = UnselectMaxDistance;
	Parms.bSelectGround = bSelectGround;
	Parms.ServerVerifyDistanceRate = ServerVerifyDistanceRate;
	Parms.FindGroundDepth = FindGroundDepth;
	Parms.bSelectAOETarget = bSelectAOETarget;
	Parms.AOERadius = AOERadius;
	Parms.Param_bIgnoreCheckTag = Param_bIgnoreCheckTag;
	Parms.bTraceAsProjectile = bTraceAsProjectile;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharacterSelectionComponent.BP_CharacterSelectionComponent_C.TraceGroundLocation
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AController*                      InController                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       OutHit                                                 (Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UBP_CharacterSelectionComponent_C::TraceGroundLocation(class AController* InController, struct FHitResult* OutHit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterSelectionComponent_C", "TraceGroundLocation");

	Params::BP_CharacterSelectionComponent_C_TraceGroundLocation Parms{};

	Parms.InController = InController;

	UObject::ProcessEvent(Func, &Parms);

	if (OutHit != nullptr)
		*OutHit = std::move(Parms.OutHit);

	return Parms.ReturnValue;
}


// Function BP_CharacterSelectionComponent.BP_CharacterSelectionComponent_C.TraceMultiTarget
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          TraceCenter                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_CharacterSelectionComponent_C::TraceMultiTarget(const struct FVector& TraceCenter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterSelectionComponent_C", "TraceMultiTarget");

	Params::BP_CharacterSelectionComponent_C_TraceMultiTarget Parms{};

	Parms.TraceCenter = std::move(TraceCenter);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharacterSelectionComponent.BP_CharacterSelectionComponent_C.TraceTarget
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AController*                      InController                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       OutHit                                                 (Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UBP_CharacterSelectionComponent_C::TraceTarget(class AController* InController, struct FHitResult* OutHit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterSelectionComponent_C", "TraceTarget");

	Params::BP_CharacterSelectionComponent_C_TraceTarget Parms{};

	Parms.InController = InController;

	UObject::ProcessEvent(Func, &Parms);

	if (OutHit != nullptr)
		*OutHit = std::move(Parms.OutHit);

	return Parms.ReturnValue;
}


// Function BP_CharacterSelectionComponent.BP_CharacterSelectionComponent_C.Update Beam Decal
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          CurrentPos                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          HitNormal                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ECollisionChannel                       HitComponet                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_CharacterSelectionComponent_C::Update_Beam_Decal(const struct FVector& CurrentPos, const struct FVector& HitNormal, ECollisionChannel HitComponet)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterSelectionComponent_C", "Update Beam Decal");

	Params::BP_CharacterSelectionComponent_C_Update_Beam_Decal Parms{};

	Parms.CurrentPos = std::move(CurrentPos);
	Parms.HitNormal = std::move(HitNormal);
	Parms.HitComponet = HitComponet;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharacterSelectionComponent.BP_CharacterSelectionComponent_C.UpdateMaxDistance
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  NewMaxDistance                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  NewVerifyRate                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_CharacterSelectionComponent_C::UpdateMaxDistance(double NewMaxDistance, double NewVerifyRate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterSelectionComponent_C", "UpdateMaxDistance");

	Params::BP_CharacterSelectionComponent_C_UpdateMaxDistance Parms{};

	Parms.NewMaxDistance = NewMaxDistance;
	Parms.NewVerifyRate = NewVerifyRate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharacterSelectionComponent.BP_CharacterSelectionComponent_C.UpdateSelectEffectPos
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          NewPos                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         NewRotation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_CharacterSelectionComponent_C::UpdateSelectEffectPos(const struct FVector& NewPos, const struct FRotator& NewRotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterSelectionComponent_C", "UpdateSelectEffectPos");

	Params::BP_CharacterSelectionComponent_C_UpdateSelectEffectPos Parms{};

	Parms.NewPos = std::move(NewPos);
	Parms.NewRotation = std::move(NewRotation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharacterSelectionComponent.BP_CharacterSelectionComponent_C.UpdateSelection
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_Tgf_Character_Default_C*      SelectedCharacter                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_CharacterSelectionComponent_C::UpdateSelection(class ABP_Tgf_Character_Default_C* SelectedCharacter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterSelectionComponent_C", "UpdateSelection");

	Params::BP_CharacterSelectionComponent_C_UpdateSelection Parms{};

	Parms.SelectedCharacter = SelectedCharacter;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharacterSelectionComponent.BP_CharacterSelectionComponent_C.UpdateSelectionGround
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          ViewTargetPos                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_CharacterSelectionComponent_C::UpdateSelectionGround(const struct FVector& Location, const struct FVector& ViewTargetPos)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterSelectionComponent_C", "UpdateSelectionGround");

	Params::BP_CharacterSelectionComponent_C_UpdateSelectionGround Parms{};

	Parms.Location = std::move(Location);
	Parms.ViewTargetPos = std::move(ViewTargetPos);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharacterSelectionComponent.BP_CharacterSelectionComponent_C.UpdateSelectionGroundServer
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          ViewTargetPos                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_CharacterSelectionComponent_C::UpdateSelectionGroundServer(const struct FVector& Location, const struct FVector& ViewTargetPos)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterSelectionComponent_C", "UpdateSelectionGroundServer");

	Params::BP_CharacterSelectionComponent_C_UpdateSelectionGroundServer Parms{};

	Parms.Location = std::move(Location);
	Parms.ViewTargetPos = std::move(ViewTargetPos);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharacterSelectionComponent.BP_CharacterSelectionComponent_C.UpdateSelectTargets
// (Net, NetReliable, NetServer, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class ABP_Tgf_Character_Default_C*>TempTargets                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UBP_CharacterSelectionComponent_C::UpdateSelectTargets(const TArray<class ABP_Tgf_Character_Default_C*>& TempTargets)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterSelectionComponent_C", "UpdateSelectTargets");

	Params::BP_CharacterSelectionComponent_C_UpdateSelectTargets Parms{};

	Parms.TempTargets = std::move(TempTargets);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharacterSelectionComponent.BP_CharacterSelectionComponent_C.UpdateTraceEndPos
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          NewPos                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       Param_HitResult                                        (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void UBP_CharacterSelectionComponent_C::UpdateTraceEndPos(const struct FVector& NewPos, const struct FHitResult& Param_HitResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterSelectionComponent_C", "UpdateTraceEndPos");

	Params::BP_CharacterSelectionComponent_C_UpdateTraceEndPos Parms{};

	Parms.NewPos = std::move(NewPos);
	Parms.Param_HitResult = std::move(Param_HitResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharacterSelectionComponent.BP_CharacterSelectionComponent_C.VerifySelectTarget
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_Tgf_Character_Default_C*      SelectedTarge                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FVector                          TraceStart                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          TraceHit                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class AActor*>                   ClientIgnoreActors                                     (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    bIsValid                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_CharacterSelectionComponent_C::VerifySelectTarget(class ABP_Tgf_Character_Default_C* SelectedTarge, const struct FVector& TraceStart, const struct FVector& TraceHit, TArray<class AActor*>& ClientIgnoreActors, bool* bIsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterSelectionComponent_C", "VerifySelectTarget");

	Params::BP_CharacterSelectionComponent_C_VerifySelectTarget Parms{};

	Parms.SelectedTarge = SelectedTarge;
	Parms.TraceStart = std::move(TraceStart);
	Parms.TraceHit = std::move(TraceHit);
	Parms.ClientIgnoreActors = std::move(ClientIgnoreActors);

	UObject::ProcessEvent(Func, &Parms);

	ClientIgnoreActors = std::move(Parms.ClientIgnoreActors);

	if (bIsValid != nullptr)
		*bIsValid = Parms.bIsValid;
}

}

