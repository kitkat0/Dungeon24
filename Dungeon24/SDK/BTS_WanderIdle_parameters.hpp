#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTS_WanderIdle

#include "Basic.hpp"


namespace SDK::Params
{

// Function BTS_WanderIdle.BTS_WanderIdle_C.ExecuteUbergraph_BTS_WanderIdle
// 0x0028 (0x0028 - 0x0000)
struct BTS_WanderIdle_C_ExecuteUbergraph_BTS_WanderIdle final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_Event_OwnerController;                      // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn;                       // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_Tgf_Monster_C*                      K2Node_DynamicCast_AsBP_Tgf_Monster;               // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTS_WanderIdle_C_ExecuteUbergraph_BTS_WanderIdle) == 0x000008, "Wrong alignment on BTS_WanderIdle_C_ExecuteUbergraph_BTS_WanderIdle");
static_assert(sizeof(BTS_WanderIdle_C_ExecuteUbergraph_BTS_WanderIdle) == 0x000028, "Wrong size on BTS_WanderIdle_C_ExecuteUbergraph_BTS_WanderIdle");
static_assert(offsetof(BTS_WanderIdle_C_ExecuteUbergraph_BTS_WanderIdle, EntryPoint) == 0x000000, "Member 'BTS_WanderIdle_C_ExecuteUbergraph_BTS_WanderIdle::EntryPoint' has a wrong offset!");
static_assert(offsetof(BTS_WanderIdle_C_ExecuteUbergraph_BTS_WanderIdle, K2Node_Event_OwnerController) == 0x000008, "Member 'BTS_WanderIdle_C_ExecuteUbergraph_BTS_WanderIdle::K2Node_Event_OwnerController' has a wrong offset!");
static_assert(offsetof(BTS_WanderIdle_C_ExecuteUbergraph_BTS_WanderIdle, K2Node_Event_ControlledPawn) == 0x000010, "Member 'BTS_WanderIdle_C_ExecuteUbergraph_BTS_WanderIdle::K2Node_Event_ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTS_WanderIdle_C_ExecuteUbergraph_BTS_WanderIdle, K2Node_DynamicCast_AsBP_Tgf_Monster) == 0x000018, "Member 'BTS_WanderIdle_C_ExecuteUbergraph_BTS_WanderIdle::K2Node_DynamicCast_AsBP_Tgf_Monster' has a wrong offset!");
static_assert(offsetof(BTS_WanderIdle_C_ExecuteUbergraph_BTS_WanderIdle, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BTS_WanderIdle_C_ExecuteUbergraph_BTS_WanderIdle::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BTS_WanderIdle_C_ExecuteUbergraph_BTS_WanderIdle, CallFunc_IsValidClass_ReturnValue) == 0x000021, "Member 'BTS_WanderIdle_C_ExecuteUbergraph_BTS_WanderIdle::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");

// Function BTS_WanderIdle.BTS_WanderIdle_C.ReceiveDeactivationAI
// 0x0010 (0x0010 - 0x0000)
struct BTS_WanderIdle_C_ReceiveDeactivationAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTS_WanderIdle_C_ReceiveDeactivationAI) == 0x000008, "Wrong alignment on BTS_WanderIdle_C_ReceiveDeactivationAI");
static_assert(sizeof(BTS_WanderIdle_C_ReceiveDeactivationAI) == 0x000010, "Wrong size on BTS_WanderIdle_C_ReceiveDeactivationAI");
static_assert(offsetof(BTS_WanderIdle_C_ReceiveDeactivationAI, OwnerController) == 0x000000, "Member 'BTS_WanderIdle_C_ReceiveDeactivationAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTS_WanderIdle_C_ReceiveDeactivationAI, ControlledPawn) == 0x000008, "Member 'BTS_WanderIdle_C_ReceiveDeactivationAI::ControlledPawn' has a wrong offset!");

}

