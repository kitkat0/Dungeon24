#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_TGF_BrightTorch_Base

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GA_TGF_Active_Base_classes.hpp"
#include "LyraGame_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_TGF_BrightTorch_Base.GA_TGF_BrightTorch_Base_C
// 0x0020 (0x0E20 - 0x0E00)
class UGA_TGF_BrightTorch_Base_C : public UGA_TGF_Active_Base_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_GA_TGF_BrightTorch_Base_C;          // 0x0E00(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class AB_Torch_001_C*                         Torch;                                             // 0x0E08(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          bReleased;                                         // 0x0E10(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E11[0x7];                                      // 0x0E11(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        MinHoldTime;                                       // 0x0E18(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BrightTorch();
	void DarkenTorch();
	void DoRelease();
	void ExecuteUbergraph_GA_TGF_BrightTorch_Base(int32 EntryPoint);
	void InitTorch();
	void K2_ActivateAbility();
	void K2_OnEndAbility(bool bWasCancelled);
	void OnBlendOut_99CA57034AF33DAA6EAAA9A168E0B405(class FName NotifyName);
	void OnBlendOut_99CA57034AF33DAA6EAAA9A1A1B13A30(class FName NotifyName);
	void OnBlendOut_99CA57034AF33DAA6EAAA9A1D6DF09DE(class FName NotifyName);
	void OnCancelled_99CA57034AF33DAA6EAAA9A168E0B405(class FName NotifyName);
	void OnCancelled_99CA57034AF33DAA6EAAA9A1A1B13A30(class FName NotifyName);
	void OnCancelled_99CA57034AF33DAA6EAAA9A1D6DF09DE(class FName NotifyName);
	void OnCompleted_99CA57034AF33DAA6EAAA9A168E0B405(class FName NotifyName);
	void OnCompleted_99CA57034AF33DAA6EAAA9A1A1B13A30(class FName NotifyName);
	void OnCompleted_99CA57034AF33DAA6EAAA9A1D6DF09DE(class FName NotifyName);
	void OnInterrupted_99CA57034AF33DAA6EAAA9A168E0B405(class FName NotifyName);
	void OnInterrupted_99CA57034AF33DAA6EAAA9A1A1B13A30(class FName NotifyName);
	void OnInterrupted_99CA57034AF33DAA6EAAA9A1D6DF09DE(class FName NotifyName);
	void OnNotifyBegin_99CA57034AF33DAA6EAAA9A168E0B405(class FName NotifyName);
	void OnNotifyBegin_99CA57034AF33DAA6EAAA9A1A1B13A30(class FName NotifyName);
	void OnNotifyBegin_99CA57034AF33DAA6EAAA9A1D6DF09DE(class FName NotifyName);
	void OnNotifyEnd_99CA57034AF33DAA6EAAA9A168E0B405(class FName NotifyName);
	void OnNotifyEnd_99CA57034AF33DAA6EAAA9A1A1B13A30(class FName NotifyName);
	void OnNotifyEnd_99CA57034AF33DAA6EAAA9A1D6DF09DE(class FName NotifyName);
	void OnRelease_2F62F0D8443746998FD5B296DCC40F31(float TimeHeld);
	void RecoverTorch();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_TGF_BrightTorch_Base_C">();
	}
	static class UGA_TGF_BrightTorch_Base_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_TGF_BrightTorch_Base_C>();
	}
};
static_assert(alignof(UGA_TGF_BrightTorch_Base_C) == 0x000010, "Wrong alignment on UGA_TGF_BrightTorch_Base_C");
static_assert(sizeof(UGA_TGF_BrightTorch_Base_C) == 0x000E20, "Wrong size on UGA_TGF_BrightTorch_Base_C");
static_assert(offsetof(UGA_TGF_BrightTorch_Base_C, UberGraphFrame_GA_TGF_BrightTorch_Base_C) == 0x000E00, "Member 'UGA_TGF_BrightTorch_Base_C::UberGraphFrame_GA_TGF_BrightTorch_Base_C' has a wrong offset!");
static_assert(offsetof(UGA_TGF_BrightTorch_Base_C, Torch) == 0x000E08, "Member 'UGA_TGF_BrightTorch_Base_C::Torch' has a wrong offset!");
static_assert(offsetof(UGA_TGF_BrightTorch_Base_C, bReleased) == 0x000E10, "Member 'UGA_TGF_BrightTorch_Base_C::bReleased' has a wrong offset!");
static_assert(offsetof(UGA_TGF_BrightTorch_Base_C, MinHoldTime) == 0x000E18, "Member 'UGA_TGF_BrightTorch_Base_C::MinHoldTime' has a wrong offset!");

}

