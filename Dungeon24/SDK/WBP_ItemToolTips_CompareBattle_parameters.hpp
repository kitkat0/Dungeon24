#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_ItemToolTips_CompareBattle

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "TGFBattleProtocol_structs.hpp"


namespace SDK::Params
{

// Function WBP_ItemToolTips_CompareBattle.WBP_ItemToolTips_CompareBattle_C.ExecuteUbergraph_WBP_ItemToolTips_CompareBattle
// 0x00B8 (0x00B8 - 0x0000)
struct WBP_ItemToolTips_CompareBattle_C_ExecuteUbergraph_WBP_ItemToolTips_CompareBattle final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool bCompareModeOn)>          K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bCompareModeOn_1;               // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0020(0x0040)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTgfInventoryWrapper*                   K2Node_CustomEvent_Inventory_Context;              // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTgfInventoryWrapper*                   K2Node_CustomEvent_Root_Inventory_Context;         // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTgfInventoryItemWrapper*               K2Node_CustomEvent_Item;                           // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ETGFProtoTgfEnItemStorageType                 K2Node_CustomEvent_Storage_Type;                   // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bDisplayAttributeAsRangeForSelf; // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_ShowUnkonw;                     // 0x0082(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_83[0x5];                                       // 0x0083(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_InventoryItemTooltipInstigator_C> K2Node_DynamicCast_AsBPI_Inventory_Item_Tooltip_Instigator; // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldNotShowTooltip_bNoShow;             // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x009B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsHovered_ReturnValue;                    // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x009D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9E[0x2];                                       // 0x009E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool bCompareModeOn)>          K2Node_CreateDelegate_OutputDelegate_1;            // 0x00A0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bCompareModeOn;                 // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemToolTips_CompareBattle_C_ExecuteUbergraph_WBP_ItemToolTips_CompareBattle) == 0x000008, "Wrong alignment on WBP_ItemToolTips_CompareBattle_C_ExecuteUbergraph_WBP_ItemToolTips_CompareBattle");
static_assert(sizeof(WBP_ItemToolTips_CompareBattle_C_ExecuteUbergraph_WBP_ItemToolTips_CompareBattle) == 0x0000B8, "Wrong size on WBP_ItemToolTips_CompareBattle_C_ExecuteUbergraph_WBP_ItemToolTips_CompareBattle");
static_assert(offsetof(WBP_ItemToolTips_CompareBattle_C_ExecuteUbergraph_WBP_ItemToolTips_CompareBattle, EntryPoint) == 0x000000, "Member 'WBP_ItemToolTips_CompareBattle_C_ExecuteUbergraph_WBP_ItemToolTips_CompareBattle::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_ItemToolTips_CompareBattle_C_ExecuteUbergraph_WBP_ItemToolTips_CompareBattle, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'WBP_ItemToolTips_CompareBattle_C_ExecuteUbergraph_WBP_ItemToolTips_CompareBattle::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemToolTips_CompareBattle_C_ExecuteUbergraph_WBP_ItemToolTips_CompareBattle, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'WBP_ItemToolTips_CompareBattle_C_ExecuteUbergraph_WBP_ItemToolTips_CompareBattle::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_ItemToolTips_CompareBattle_C_ExecuteUbergraph_WBP_ItemToolTips_CompareBattle, K2Node_CustomEvent_bCompareModeOn_1) == 0x000018, "Member 'WBP_ItemToolTips_CompareBattle_C_ExecuteUbergraph_WBP_ItemToolTips_CompareBattle::K2Node_CustomEvent_bCompareModeOn_1' has a wrong offset!");
static_assert(offsetof(WBP_ItemToolTips_CompareBattle_C_ExecuteUbergraph_WBP_ItemToolTips_CompareBattle, K2Node_Event_MyGeometry) == 0x000020, "Member 'WBP_ItemToolTips_CompareBattle_C_ExecuteUbergraph_WBP_ItemToolTips_CompareBattle::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_ItemToolTips_CompareBattle_C_ExecuteUbergraph_WBP_ItemToolTips_CompareBattle, K2Node_Event_InDeltaTime) == 0x000060, "Member 'WBP_ItemToolTips_CompareBattle_C_ExecuteUbergraph_WBP_ItemToolTips_CompareBattle::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(WBP_ItemToolTips_CompareBattle_C_ExecuteUbergraph_WBP_ItemToolTips_CompareBattle, K2Node_CustomEvent_Inventory_Context) == 0x000068, "Member 'WBP_ItemToolTips_CompareBattle_C_ExecuteUbergraph_WBP_ItemToolTips_CompareBattle::K2Node_CustomEvent_Inventory_Context' has a wrong offset!");
static_assert(offsetof(WBP_ItemToolTips_CompareBattle_C_ExecuteUbergraph_WBP_ItemToolTips_CompareBattle, K2Node_CustomEvent_Root_Inventory_Context) == 0x000070, "Member 'WBP_ItemToolTips_CompareBattle_C_ExecuteUbergraph_WBP_ItemToolTips_CompareBattle::K2Node_CustomEvent_Root_Inventory_Context' has a wrong offset!");
static_assert(offsetof(WBP_ItemToolTips_CompareBattle_C_ExecuteUbergraph_WBP_ItemToolTips_CompareBattle, K2Node_CustomEvent_Item) == 0x000078, "Member 'WBP_ItemToolTips_CompareBattle_C_ExecuteUbergraph_WBP_ItemToolTips_CompareBattle::K2Node_CustomEvent_Item' has a wrong offset!");
static_assert(offsetof(WBP_ItemToolTips_CompareBattle_C_ExecuteUbergraph_WBP_ItemToolTips_CompareBattle, K2Node_CustomEvent_Storage_Type) == 0x000080, "Member 'WBP_ItemToolTips_CompareBattle_C_ExecuteUbergraph_WBP_ItemToolTips_CompareBattle::K2Node_CustomEvent_Storage_Type' has a wrong offset!");
static_assert(offsetof(WBP_ItemToolTips_CompareBattle_C_ExecuteUbergraph_WBP_ItemToolTips_CompareBattle, K2Node_CustomEvent_bDisplayAttributeAsRangeForSelf) == 0x000081, "Member 'WBP_ItemToolTips_CompareBattle_C_ExecuteUbergraph_WBP_ItemToolTips_CompareBattle::K2Node_CustomEvent_bDisplayAttributeAsRangeForSelf' has a wrong offset!");
static_assert(offsetof(WBP_ItemToolTips_CompareBattle_C_ExecuteUbergraph_WBP_ItemToolTips_CompareBattle, K2Node_CustomEvent_ShowUnkonw) == 0x000082, "Member 'WBP_ItemToolTips_CompareBattle_C_ExecuteUbergraph_WBP_ItemToolTips_CompareBattle::K2Node_CustomEvent_ShowUnkonw' has a wrong offset!");
static_assert(offsetof(WBP_ItemToolTips_CompareBattle_C_ExecuteUbergraph_WBP_ItemToolTips_CompareBattle, K2Node_DynamicCast_AsBPI_Inventory_Item_Tooltip_Instigator) == 0x000088, "Member 'WBP_ItemToolTips_CompareBattle_C_ExecuteUbergraph_WBP_ItemToolTips_CompareBattle::K2Node_DynamicCast_AsBPI_Inventory_Item_Tooltip_Instigator' has a wrong offset!");
static_assert(offsetof(WBP_ItemToolTips_CompareBattle_C_ExecuteUbergraph_WBP_ItemToolTips_CompareBattle, K2Node_DynamicCast_bSuccess) == 0x000098, "Member 'WBP_ItemToolTips_CompareBattle_C_ExecuteUbergraph_WBP_ItemToolTips_CompareBattle::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_ItemToolTips_CompareBattle_C_ExecuteUbergraph_WBP_ItemToolTips_CompareBattle, CallFunc_ShouldNotShowTooltip_bNoShow) == 0x000099, "Member 'WBP_ItemToolTips_CompareBattle_C_ExecuteUbergraph_WBP_ItemToolTips_CompareBattle::CallFunc_ShouldNotShowTooltip_bNoShow' has a wrong offset!");
static_assert(offsetof(WBP_ItemToolTips_CompareBattle_C_ExecuteUbergraph_WBP_ItemToolTips_CompareBattle, CallFunc_Not_PreBool_ReturnValue) == 0x00009A, "Member 'WBP_ItemToolTips_CompareBattle_C_ExecuteUbergraph_WBP_ItemToolTips_CompareBattle::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemToolTips_CompareBattle_C_ExecuteUbergraph_WBP_ItemToolTips_CompareBattle, CallFunc_IsValid_ReturnValue_1) == 0x00009B, "Member 'WBP_ItemToolTips_CompareBattle_C_ExecuteUbergraph_WBP_ItemToolTips_CompareBattle::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ItemToolTips_CompareBattle_C_ExecuteUbergraph_WBP_ItemToolTips_CompareBattle, CallFunc_IsHovered_ReturnValue) == 0x00009C, "Member 'WBP_ItemToolTips_CompareBattle_C_ExecuteUbergraph_WBP_ItemToolTips_CompareBattle::CallFunc_IsHovered_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemToolTips_CompareBattle_C_ExecuteUbergraph_WBP_ItemToolTips_CompareBattle, CallFunc_BooleanAND_ReturnValue) == 0x00009D, "Member 'WBP_ItemToolTips_CompareBattle_C_ExecuteUbergraph_WBP_ItemToolTips_CompareBattle::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemToolTips_CompareBattle_C_ExecuteUbergraph_WBP_ItemToolTips_CompareBattle, K2Node_CreateDelegate_OutputDelegate_1) == 0x0000A0, "Member 'WBP_ItemToolTips_CompareBattle_C_ExecuteUbergraph_WBP_ItemToolTips_CompareBattle::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_ItemToolTips_CompareBattle_C_ExecuteUbergraph_WBP_ItemToolTips_CompareBattle, K2Node_Event_IsDesignTime) == 0x0000B0, "Member 'WBP_ItemToolTips_CompareBattle_C_ExecuteUbergraph_WBP_ItemToolTips_CompareBattle::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_ItemToolTips_CompareBattle_C_ExecuteUbergraph_WBP_ItemToolTips_CompareBattle, K2Node_CustomEvent_bCompareModeOn) == 0x0000B1, "Member 'WBP_ItemToolTips_CompareBattle_C_ExecuteUbergraph_WBP_ItemToolTips_CompareBattle::K2Node_CustomEvent_bCompareModeOn' has a wrong offset!");

// Function WBP_ItemToolTips_CompareBattle.WBP_ItemToolTips_CompareBattle_C.HaveOwnerList
// 0x0001 (0x0001 - 0x0000)
struct WBP_ItemToolTips_CompareBattle_C_HaveOwnerList final
{
public:
	bool                                          Ret;                                               // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemToolTips_CompareBattle_C_HaveOwnerList) == 0x000001, "Wrong alignment on WBP_ItemToolTips_CompareBattle_C_HaveOwnerList");
static_assert(sizeof(WBP_ItemToolTips_CompareBattle_C_HaveOwnerList) == 0x000001, "Wrong size on WBP_ItemToolTips_CompareBattle_C_HaveOwnerList");
static_assert(offsetof(WBP_ItemToolTips_CompareBattle_C_HaveOwnerList, Ret) == 0x000000, "Member 'WBP_ItemToolTips_CompareBattle_C_HaveOwnerList::Ret' has a wrong offset!");

// Function WBP_ItemToolTips_CompareBattle.WBP_ItemToolTips_CompareBattle_C.ItemCanCompare
// 0x0002 (0x0002 - 0x0000)
struct WBP_ItemToolTips_CompareBattle_C_ItemCanCompare final
{
public:
	bool                                          Ret;                                               // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemToolTips_CompareBattle_C_ItemCanCompare) == 0x000001, "Wrong alignment on WBP_ItemToolTips_CompareBattle_C_ItemCanCompare");
static_assert(sizeof(WBP_ItemToolTips_CompareBattle_C_ItemCanCompare) == 0x000002, "Wrong size on WBP_ItemToolTips_CompareBattle_C_ItemCanCompare");
static_assert(offsetof(WBP_ItemToolTips_CompareBattle_C_ItemCanCompare, Ret) == 0x000000, "Member 'WBP_ItemToolTips_CompareBattle_C_ItemCanCompare::Ret' has a wrong offset!");
static_assert(offsetof(WBP_ItemToolTips_CompareBattle_C_ItemCanCompare, CallFunc_IsVisible_ReturnValue) == 0x000001, "Member 'WBP_ItemToolTips_CompareBattle_C_ItemCanCompare::CallFunc_IsVisible_ReturnValue' has a wrong offset!");

// Function WBP_ItemToolTips_CompareBattle.WBP_ItemToolTips_CompareBattle_C.OnToggleCompareMode
// 0x0001 (0x0001 - 0x0000)
struct WBP_ItemToolTips_CompareBattle_C_OnToggleCompareMode final
{
public:
	bool                                          bCompareModeOn;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemToolTips_CompareBattle_C_OnToggleCompareMode) == 0x000001, "Wrong alignment on WBP_ItemToolTips_CompareBattle_C_OnToggleCompareMode");
static_assert(sizeof(WBP_ItemToolTips_CompareBattle_C_OnToggleCompareMode) == 0x000001, "Wrong size on WBP_ItemToolTips_CompareBattle_C_OnToggleCompareMode");
static_assert(offsetof(WBP_ItemToolTips_CompareBattle_C_OnToggleCompareMode, bCompareModeOn) == 0x000000, "Member 'WBP_ItemToolTips_CompareBattle_C_OnToggleCompareMode::bCompareModeOn' has a wrong offset!");

// Function WBP_ItemToolTips_CompareBattle.WBP_ItemToolTips_CompareBattle_C.OnToggleUserListMode
// 0x0001 (0x0001 - 0x0000)
struct WBP_ItemToolTips_CompareBattle_C_OnToggleUserListMode final
{
public:
	bool                                          bCompareModeOn;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemToolTips_CompareBattle_C_OnToggleUserListMode) == 0x000001, "Wrong alignment on WBP_ItemToolTips_CompareBattle_C_OnToggleUserListMode");
static_assert(sizeof(WBP_ItemToolTips_CompareBattle_C_OnToggleUserListMode) == 0x000001, "Wrong size on WBP_ItemToolTips_CompareBattle_C_OnToggleUserListMode");
static_assert(offsetof(WBP_ItemToolTips_CompareBattle_C_OnToggleUserListMode, bCompareModeOn) == 0x000000, "Member 'WBP_ItemToolTips_CompareBattle_C_OnToggleUserListMode::bCompareModeOn' has a wrong offset!");

// Function WBP_ItemToolTips_CompareBattle.WBP_ItemToolTips_CompareBattle_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_ItemToolTips_CompareBattle_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemToolTips_CompareBattle_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_ItemToolTips_CompareBattle_C_PreConstruct");
static_assert(sizeof(WBP_ItemToolTips_CompareBattle_C_PreConstruct) == 0x000001, "Wrong size on WBP_ItemToolTips_CompareBattle_C_PreConstruct");
static_assert(offsetof(WBP_ItemToolTips_CompareBattle_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_ItemToolTips_CompareBattle_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_ItemToolTips_CompareBattle.WBP_ItemToolTips_CompareBattle_C.SetUp
// 0x0020 (0x0020 - 0x0000)
struct WBP_ItemToolTips_CompareBattle_C_SetUp final
{
public:
	class UTgfInventoryWrapper*                   Param_Inventory_Context;                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTgfInventoryWrapper*                   Param_Root_Inventory_Context;                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTgfInventoryItemWrapper*               Param_Item;                                        // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ETGFProtoTgfEnItemStorageType                 Storage_Type;                                      // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDisplayAttributeAsRangeForSelf;                   // 0x0019(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Param_ShowUnkonw;                                  // 0x001A(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemToolTips_CompareBattle_C_SetUp) == 0x000008, "Wrong alignment on WBP_ItemToolTips_CompareBattle_C_SetUp");
static_assert(sizeof(WBP_ItemToolTips_CompareBattle_C_SetUp) == 0x000020, "Wrong size on WBP_ItemToolTips_CompareBattle_C_SetUp");
static_assert(offsetof(WBP_ItemToolTips_CompareBattle_C_SetUp, Param_Inventory_Context) == 0x000000, "Member 'WBP_ItemToolTips_CompareBattle_C_SetUp::Param_Inventory_Context' has a wrong offset!");
static_assert(offsetof(WBP_ItemToolTips_CompareBattle_C_SetUp, Param_Root_Inventory_Context) == 0x000008, "Member 'WBP_ItemToolTips_CompareBattle_C_SetUp::Param_Root_Inventory_Context' has a wrong offset!");
static_assert(offsetof(WBP_ItemToolTips_CompareBattle_C_SetUp, Param_Item) == 0x000010, "Member 'WBP_ItemToolTips_CompareBattle_C_SetUp::Param_Item' has a wrong offset!");
static_assert(offsetof(WBP_ItemToolTips_CompareBattle_C_SetUp, Storage_Type) == 0x000018, "Member 'WBP_ItemToolTips_CompareBattle_C_SetUp::Storage_Type' has a wrong offset!");
static_assert(offsetof(WBP_ItemToolTips_CompareBattle_C_SetUp, bDisplayAttributeAsRangeForSelf) == 0x000019, "Member 'WBP_ItemToolTips_CompareBattle_C_SetUp::bDisplayAttributeAsRangeForSelf' has a wrong offset!");
static_assert(offsetof(WBP_ItemToolTips_CompareBattle_C_SetUp, Param_ShowUnkonw) == 0x00001A, "Member 'WBP_ItemToolTips_CompareBattle_C_SetUp::Param_ShowUnkonw' has a wrong offset!");

// Function WBP_ItemToolTips_CompareBattle.WBP_ItemToolTips_CompareBattle_C.ShowComparison
// 0x0080 (0x0080 - 0x0000)
struct WBP_ItemToolTips_CompareBattle_C_ShowComparison final
{
public:
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UHorizontalBoxSlot*                     K2Node_DynamicCast_AsHorizontal_Box_Slot;          // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue_1;                   // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UHorizontalBoxSlot*                     K2Node_DynamicCast_AsHorizontal_Box_Slot_1;        // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetViewportSize_ReturnValue;              // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B[0x5];                                       // 0x006B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UTgfInventoryItemWrapper*               CallFunc_FindCompareTargetForItem_ReturnValue;     // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemToolTips_CompareBattle_C_ShowComparison) == 0x000008, "Wrong alignment on WBP_ItemToolTips_CompareBattle_C_ShowComparison");
static_assert(sizeof(WBP_ItemToolTips_CompareBattle_C_ShowComparison) == 0x000080, "Wrong size on WBP_ItemToolTips_CompareBattle_C_ShowComparison");
static_assert(offsetof(WBP_ItemToolTips_CompareBattle_C_ShowComparison, CallFunc_AddChild_ReturnValue) == 0x000000, "Member 'WBP_ItemToolTips_CompareBattle_C_ShowComparison::CallFunc_AddChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemToolTips_CompareBattle_C_ShowComparison, K2Node_DynamicCast_AsHorizontal_Box_Slot) == 0x000008, "Member 'WBP_ItemToolTips_CompareBattle_C_ShowComparison::K2Node_DynamicCast_AsHorizontal_Box_Slot' has a wrong offset!");
static_assert(offsetof(WBP_ItemToolTips_CompareBattle_C_ShowComparison, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'WBP_ItemToolTips_CompareBattle_C_ShowComparison::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_ItemToolTips_CompareBattle_C_ShowComparison, CallFunc_AddChild_ReturnValue_1) == 0x000018, "Member 'WBP_ItemToolTips_CompareBattle_C_ShowComparison::CallFunc_AddChild_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ItemToolTips_CompareBattle_C_ShowComparison, K2Node_DynamicCast_AsHorizontal_Box_Slot_1) == 0x000020, "Member 'WBP_ItemToolTips_CompareBattle_C_ShowComparison::K2Node_DynamicCast_AsHorizontal_Box_Slot_1' has a wrong offset!");
static_assert(offsetof(WBP_ItemToolTips_CompareBattle_C_ShowComparison, K2Node_DynamicCast_bSuccess_1) == 0x000028, "Member 'WBP_ItemToolTips_CompareBattle_C_ShowComparison::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_ItemToolTips_CompareBattle_C_ShowComparison, CallFunc_GetViewportSize_ReturnValue) == 0x000030, "Member 'WBP_ItemToolTips_CompareBattle_C_ShowComparison::CallFunc_GetViewportSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemToolTips_CompareBattle_C_ShowComparison, CallFunc_BreakVector2D_X) == 0x000040, "Member 'WBP_ItemToolTips_CompareBattle_C_ShowComparison::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WBP_ItemToolTips_CompareBattle_C_ShowComparison, CallFunc_BreakVector2D_Y) == 0x000048, "Member 'WBP_ItemToolTips_CompareBattle_C_ShowComparison::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WBP_ItemToolTips_CompareBattle_C_ShowComparison, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000050, "Member 'WBP_ItemToolTips_CompareBattle_C_ShowComparison::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemToolTips_CompareBattle_C_ShowComparison, CallFunc_BreakVector2D_X_1) == 0x000058, "Member 'WBP_ItemToolTips_CompareBattle_C_ShowComparison::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(WBP_ItemToolTips_CompareBattle_C_ShowComparison, CallFunc_BreakVector2D_Y_1) == 0x000060, "Member 'WBP_ItemToolTips_CompareBattle_C_ShowComparison::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(WBP_ItemToolTips_CompareBattle_C_ShowComparison, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000068, "Member 'WBP_ItemToolTips_CompareBattle_C_ShowComparison::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemToolTips_CompareBattle_C_ShowComparison, CallFunc_IsValid_ReturnValue) == 0x000069, "Member 'WBP_ItemToolTips_CompareBattle_C_ShowComparison::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemToolTips_CompareBattle_C_ShowComparison, CallFunc_IsValid_ReturnValue_1) == 0x00006A, "Member 'WBP_ItemToolTips_CompareBattle_C_ShowComparison::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ItemToolTips_CompareBattle_C_ShowComparison, CallFunc_FindCompareTargetForItem_ReturnValue) == 0x000070, "Member 'WBP_ItemToolTips_CompareBattle_C_ShowComparison::CallFunc_FindCompareTargetForItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemToolTips_CompareBattle_C_ShowComparison, CallFunc_IsValid_ReturnValue_2) == 0x000078, "Member 'WBP_ItemToolTips_CompareBattle_C_ShowComparison::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

// Function WBP_ItemToolTips_CompareBattle.WBP_ItemToolTips_CompareBattle_C.ShowTooltips
// 0x0040 (0x0040 - 0x0000)
struct WBP_ItemToolTips_CompareBattle_C_ShowTooltips final
{
public:
	struct FVector2D                              Parent_pos;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Parent_size;                                       // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            Parent_cell;                                       // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameViewportSubsystem*                 CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsWidgetAdded_ReturnValue;                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemToolTips_CompareBattle_C_ShowTooltips) == 0x000008, "Wrong alignment on WBP_ItemToolTips_CompareBattle_C_ShowTooltips");
static_assert(sizeof(WBP_ItemToolTips_CompareBattle_C_ShowTooltips) == 0x000040, "Wrong size on WBP_ItemToolTips_CompareBattle_C_ShowTooltips");
static_assert(offsetof(WBP_ItemToolTips_CompareBattle_C_ShowTooltips, Parent_pos) == 0x000000, "Member 'WBP_ItemToolTips_CompareBattle_C_ShowTooltips::Parent_pos' has a wrong offset!");
static_assert(offsetof(WBP_ItemToolTips_CompareBattle_C_ShowTooltips, Parent_size) == 0x000010, "Member 'WBP_ItemToolTips_CompareBattle_C_ShowTooltips::Parent_size' has a wrong offset!");
static_assert(offsetof(WBP_ItemToolTips_CompareBattle_C_ShowTooltips, Parent_cell) == 0x000020, "Member 'WBP_ItemToolTips_CompareBattle_C_ShowTooltips::Parent_cell' has a wrong offset!");
static_assert(offsetof(WBP_ItemToolTips_CompareBattle_C_ShowTooltips, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'WBP_ItemToolTips_CompareBattle_C_ShowTooltips::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemToolTips_CompareBattle_C_ShowTooltips, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000030, "Member 'WBP_ItemToolTips_CompareBattle_C_ShowTooltips::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemToolTips_CompareBattle_C_ShowTooltips, CallFunc_IsWidgetAdded_ReturnValue) == 0x000038, "Member 'WBP_ItemToolTips_CompareBattle_C_ShowTooltips::CallFunc_IsWidgetAdded_ReturnValue' has a wrong offset!");

// Function WBP_ItemToolTips_CompareBattle.WBP_ItemToolTips_CompareBattle_C.Tick
// 0x0048 (0x0048 - 0x0000)
struct WBP_ItemToolTips_CompareBattle_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0040(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemToolTips_CompareBattle_C_Tick) == 0x000008, "Wrong alignment on WBP_ItemToolTips_CompareBattle_C_Tick");
static_assert(sizeof(WBP_ItemToolTips_CompareBattle_C_Tick) == 0x000048, "Wrong size on WBP_ItemToolTips_CompareBattle_C_Tick");
static_assert(offsetof(WBP_ItemToolTips_CompareBattle_C_Tick, MyGeometry) == 0x000000, "Member 'WBP_ItemToolTips_CompareBattle_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_ItemToolTips_CompareBattle_C_Tick, InDeltaTime) == 0x000040, "Member 'WBP_ItemToolTips_CompareBattle_C_Tick::InDeltaTime' has a wrong offset!");

// Function WBP_ItemToolTips_CompareBattle.WBP_ItemToolTips_CompareBattle_C.UpdatePos
// 0x0228 (0x0228 - 0x0000)
struct WBP_ItemToolTips_CompareBattle_C_UpdatePos final
{
public:
	struct FVector2D                              Tips_size;                                         // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Showpos;                                           // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_2;                        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_2;                        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_3;                        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_3;                        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_4;                        // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_4;                        // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_5;                        // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_5;                        // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_6;                        // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_6;                        // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_2;      // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x00C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_7;                        // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_7;                        // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetViewportScale_ReturnValue;             // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x00E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_2;               // 0x00F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetDesiredSize_ReturnValue;               // 0x0108(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_8;                        // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_8;                        // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_9;                        // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_9;                        // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_3;               // 0x0150(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_10;                       // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_10;                       // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_11;                       // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_11;                       // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_3;           // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_12;                       // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_12;                       // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_4;           // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_4;               // 0x01A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetViewportSize_ReturnValue;              // 0x01B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_13;                       // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_13;                       // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_3;      // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E9[0x7];                                      // 0x01E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_5;               // 0x01F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_201[0x7];                                      // 0x0201(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_2;       // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_211[0x7];                                      // 0x0211(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1;   // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemToolTips_CompareBattle_C_UpdatePos) == 0x000008, "Wrong alignment on WBP_ItemToolTips_CompareBattle_C_UpdatePos");
static_assert(sizeof(WBP_ItemToolTips_CompareBattle_C_UpdatePos) == 0x000228, "Wrong size on WBP_ItemToolTips_CompareBattle_C_UpdatePos");
static_assert(offsetof(WBP_ItemToolTips_CompareBattle_C_UpdatePos, Tips_size) == 0x000000, "Member 'WBP_ItemToolTips_CompareBattle_C_UpdatePos::Tips_size' has a wrong offset!");
static_assert(offsetof(WBP_ItemToolTips_CompareBattle_C_UpdatePos, Showpos) == 0x000010, "Member 'WBP_ItemToolTips_CompareBattle_C_UpdatePos::Showpos' has a wrong offset!");
static_assert(offsetof(WBP_ItemToolTips_CompareBattle_C_UpdatePos, CallFunc_BreakVector2D_X) == 0x000020, "Member 'WBP_ItemToolTips_CompareBattle_C_UpdatePos::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WBP_ItemToolTips_CompareBattle_C_UpdatePos, CallFunc_BreakVector2D_Y) == 0x000028, "Member 'WBP_ItemToolTips_CompareBattle_C_UpdatePos::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WBP_ItemToolTips_CompareBattle_C_UpdatePos, CallFunc_BreakVector2D_X_1) == 0x000030, "Member 'WBP_ItemToolTips_CompareBattle_C_UpdatePos::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(WBP_ItemToolTips_CompareBattle_C_UpdatePos, CallFunc_BreakVector2D_Y_1) == 0x000038, "Member 'WBP_ItemToolTips_CompareBattle_C_UpdatePos::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(WBP_ItemToolTips_CompareBattle_C_UpdatePos, CallFunc_BreakVector2D_X_2) == 0x000040, "Member 'WBP_ItemToolTips_CompareBattle_C_UpdatePos::CallFunc_BreakVector2D_X_2' has a wrong offset!");
static_assert(offsetof(WBP_ItemToolTips_CompareBattle_C_UpdatePos, CallFunc_BreakVector2D_Y_2) == 0x000048, "Member 'WBP_ItemToolTips_CompareBattle_C_UpdatePos::CallFunc_BreakVector2D_Y_2' has a wrong offset!");
static_assert(offsetof(WBP_ItemToolTips_CompareBattle_C_UpdatePos, CallFunc_BreakVector2D_X_3) == 0x000050, "Member 'WBP_ItemToolTips_CompareBattle_C_UpdatePos::CallFunc_BreakVector2D_X_3' has a wrong offset!");
static_assert(offsetof(WBP_ItemToolTips_CompareBattle_C_UpdatePos, CallFunc_BreakVector2D_Y_3) == 0x000058, "Member 'WBP_ItemToolTips_CompareBattle_C_UpdatePos::CallFunc_BreakVector2D_Y_3' has a wrong offset!");
static_assert(offsetof(WBP_ItemToolTips_CompareBattle_C_UpdatePos, CallFunc_BreakVector2D_X_4) == 0x000060, "Member 'WBP_ItemToolTips_CompareBattle_C_UpdatePos::CallFunc_BreakVector2D_X_4' has a wrong offset!");
static_assert(offsetof(WBP_ItemToolTips_CompareBattle_C_UpdatePos, CallFunc_BreakVector2D_Y_4) == 0x000068, "Member 'WBP_ItemToolTips_CompareBattle_C_UpdatePos::CallFunc_BreakVector2D_Y_4' has a wrong offset!");
static_assert(offsetof(WBP_ItemToolTips_CompareBattle_C_UpdatePos, CallFunc_BreakVector2D_X_5) == 0x000070, "Member 'WBP_ItemToolTips_CompareBattle_C_UpdatePos::CallFunc_BreakVector2D_X_5' has a wrong offset!");
static_assert(offsetof(WBP_ItemToolTips_CompareBattle_C_UpdatePos, CallFunc_BreakVector2D_Y_5) == 0x000078, "Member 'WBP_ItemToolTips_CompareBattle_C_UpdatePos::CallFunc_BreakVector2D_Y_5' has a wrong offset!");
static_assert(offsetof(WBP_ItemToolTips_CompareBattle_C_UpdatePos, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000080, "Member 'WBP_ItemToolTips_CompareBattle_C_UpdatePos::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemToolTips_CompareBattle_C_UpdatePos, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000088, "Member 'WBP_ItemToolTips_CompareBattle_C_UpdatePos::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemToolTips_CompareBattle_C_UpdatePos, CallFunc_BreakVector2D_X_6) == 0x000090, "Member 'WBP_ItemToolTips_CompareBattle_C_UpdatePos::CallFunc_BreakVector2D_X_6' has a wrong offset!");
static_assert(offsetof(WBP_ItemToolTips_CompareBattle_C_UpdatePos, CallFunc_BreakVector2D_Y_6) == 0x000098, "Member 'WBP_ItemToolTips_CompareBattle_C_UpdatePos::CallFunc_BreakVector2D_Y_6' has a wrong offset!");
static_assert(offsetof(WBP_ItemToolTips_CompareBattle_C_UpdatePos, CallFunc_FClamp_ReturnValue) == 0x0000A0, "Member 'WBP_ItemToolTips_CompareBattle_C_UpdatePos::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemToolTips_CompareBattle_C_UpdatePos, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x0000A8, "Member 'WBP_ItemToolTips_CompareBattle_C_UpdatePos::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ItemToolTips_CompareBattle_C_UpdatePos, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0000B0, "Member 'WBP_ItemToolTips_CompareBattle_C_UpdatePos::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemToolTips_CompareBattle_C_UpdatePos, CallFunc_Subtract_DoubleDouble_ReturnValue_2) == 0x0000B8, "Member 'WBP_ItemToolTips_CompareBattle_C_UpdatePos::CallFunc_Subtract_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_ItemToolTips_CompareBattle_C_UpdatePos, CallFunc_MakeVector2D_ReturnValue) == 0x0000C0, "Member 'WBP_ItemToolTips_CompareBattle_C_UpdatePos::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemToolTips_CompareBattle_C_UpdatePos, CallFunc_BreakVector2D_X_7) == 0x0000D0, "Member 'WBP_ItemToolTips_CompareBattle_C_UpdatePos::CallFunc_BreakVector2D_X_7' has a wrong offset!");
static_assert(offsetof(WBP_ItemToolTips_CompareBattle_C_UpdatePos, CallFunc_BreakVector2D_Y_7) == 0x0000D8, "Member 'WBP_ItemToolTips_CompareBattle_C_UpdatePos::CallFunc_BreakVector2D_Y_7' has a wrong offset!");
static_assert(offsetof(WBP_ItemToolTips_CompareBattle_C_UpdatePos, CallFunc_GetViewportScale_ReturnValue) == 0x0000E0, "Member 'WBP_ItemToolTips_CompareBattle_C_UpdatePos::CallFunc_GetViewportScale_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemToolTips_CompareBattle_C_UpdatePos, CallFunc_MakeVector2D_ReturnValue_1) == 0x0000E8, "Member 'WBP_ItemToolTips_CompareBattle_C_UpdatePos::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ItemToolTips_CompareBattle_C_UpdatePos, CallFunc_MakeVector2D_ReturnValue_2) == 0x0000F8, "Member 'WBP_ItemToolTips_CompareBattle_C_UpdatePos::CallFunc_MakeVector2D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_ItemToolTips_CompareBattle_C_UpdatePos, CallFunc_GetDesiredSize_ReturnValue) == 0x000108, "Member 'WBP_ItemToolTips_CompareBattle_C_UpdatePos::CallFunc_GetDesiredSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemToolTips_CompareBattle_C_UpdatePos, CallFunc_BreakVector2D_X_8) == 0x000118, "Member 'WBP_ItemToolTips_CompareBattle_C_UpdatePos::CallFunc_BreakVector2D_X_8' has a wrong offset!");
static_assert(offsetof(WBP_ItemToolTips_CompareBattle_C_UpdatePos, CallFunc_BreakVector2D_Y_8) == 0x000120, "Member 'WBP_ItemToolTips_CompareBattle_C_UpdatePos::CallFunc_BreakVector2D_Y_8' has a wrong offset!");
static_assert(offsetof(WBP_ItemToolTips_CompareBattle_C_UpdatePos, CallFunc_BreakVector2D_X_9) == 0x000128, "Member 'WBP_ItemToolTips_CompareBattle_C_UpdatePos::CallFunc_BreakVector2D_X_9' has a wrong offset!");
static_assert(offsetof(WBP_ItemToolTips_CompareBattle_C_UpdatePos, CallFunc_BreakVector2D_Y_9) == 0x000130, "Member 'WBP_ItemToolTips_CompareBattle_C_UpdatePos::CallFunc_BreakVector2D_Y_9' has a wrong offset!");
static_assert(offsetof(WBP_ItemToolTips_CompareBattle_C_UpdatePos, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000138, "Member 'WBP_ItemToolTips_CompareBattle_C_UpdatePos::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemToolTips_CompareBattle_C_UpdatePos, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000140, "Member 'WBP_ItemToolTips_CompareBattle_C_UpdatePos::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ItemToolTips_CompareBattle_C_UpdatePos, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000148, "Member 'WBP_ItemToolTips_CompareBattle_C_UpdatePos::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ItemToolTips_CompareBattle_C_UpdatePos, CallFunc_MakeVector2D_ReturnValue_3) == 0x000150, "Member 'WBP_ItemToolTips_CompareBattle_C_UpdatePos::CallFunc_MakeVector2D_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_ItemToolTips_CompareBattle_C_UpdatePos, CallFunc_BreakVector2D_X_10) == 0x000160, "Member 'WBP_ItemToolTips_CompareBattle_C_UpdatePos::CallFunc_BreakVector2D_X_10' has a wrong offset!");
static_assert(offsetof(WBP_ItemToolTips_CompareBattle_C_UpdatePos, CallFunc_BreakVector2D_Y_10) == 0x000168, "Member 'WBP_ItemToolTips_CompareBattle_C_UpdatePos::CallFunc_BreakVector2D_Y_10' has a wrong offset!");
static_assert(offsetof(WBP_ItemToolTips_CompareBattle_C_UpdatePos, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x000170, "Member 'WBP_ItemToolTips_CompareBattle_C_UpdatePos::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_ItemToolTips_CompareBattle_C_UpdatePos, CallFunc_BreakVector2D_X_11) == 0x000178, "Member 'WBP_ItemToolTips_CompareBattle_C_UpdatePos::CallFunc_BreakVector2D_X_11' has a wrong offset!");
static_assert(offsetof(WBP_ItemToolTips_CompareBattle_C_UpdatePos, CallFunc_BreakVector2D_Y_11) == 0x000180, "Member 'WBP_ItemToolTips_CompareBattle_C_UpdatePos::CallFunc_BreakVector2D_Y_11' has a wrong offset!");
static_assert(offsetof(WBP_ItemToolTips_CompareBattle_C_UpdatePos, CallFunc_Add_DoubleDouble_ReturnValue_3) == 0x000188, "Member 'WBP_ItemToolTips_CompareBattle_C_UpdatePos::CallFunc_Add_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_ItemToolTips_CompareBattle_C_UpdatePos, CallFunc_BreakVector2D_X_12) == 0x000190, "Member 'WBP_ItemToolTips_CompareBattle_C_UpdatePos::CallFunc_BreakVector2D_X_12' has a wrong offset!");
static_assert(offsetof(WBP_ItemToolTips_CompareBattle_C_UpdatePos, CallFunc_BreakVector2D_Y_12) == 0x000198, "Member 'WBP_ItemToolTips_CompareBattle_C_UpdatePos::CallFunc_BreakVector2D_Y_12' has a wrong offset!");
static_assert(offsetof(WBP_ItemToolTips_CompareBattle_C_UpdatePos, CallFunc_Add_DoubleDouble_ReturnValue_4) == 0x0001A0, "Member 'WBP_ItemToolTips_CompareBattle_C_UpdatePos::CallFunc_Add_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_ItemToolTips_CompareBattle_C_UpdatePos, CallFunc_MakeVector2D_ReturnValue_4) == 0x0001A8, "Member 'WBP_ItemToolTips_CompareBattle_C_UpdatePos::CallFunc_MakeVector2D_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_ItemToolTips_CompareBattle_C_UpdatePos, CallFunc_GetViewportSize_ReturnValue) == 0x0001B8, "Member 'WBP_ItemToolTips_CompareBattle_C_UpdatePos::CallFunc_GetViewportSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemToolTips_CompareBattle_C_UpdatePos, CallFunc_BreakVector2D_X_13) == 0x0001C8, "Member 'WBP_ItemToolTips_CompareBattle_C_UpdatePos::CallFunc_BreakVector2D_X_13' has a wrong offset!");
static_assert(offsetof(WBP_ItemToolTips_CompareBattle_C_UpdatePos, CallFunc_BreakVector2D_Y_13) == 0x0001D0, "Member 'WBP_ItemToolTips_CompareBattle_C_UpdatePos::CallFunc_BreakVector2D_Y_13' has a wrong offset!");
static_assert(offsetof(WBP_ItemToolTips_CompareBattle_C_UpdatePos, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x0001D8, "Member 'WBP_ItemToolTips_CompareBattle_C_UpdatePos::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_ItemToolTips_CompareBattle_C_UpdatePos, CallFunc_Subtract_DoubleDouble_ReturnValue_3) == 0x0001E0, "Member 'WBP_ItemToolTips_CompareBattle_C_UpdatePos::CallFunc_Subtract_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_ItemToolTips_CompareBattle_C_UpdatePos, CallFunc_Less_DoubleDouble_ReturnValue) == 0x0001E8, "Member 'WBP_ItemToolTips_CompareBattle_C_UpdatePos::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemToolTips_CompareBattle_C_UpdatePos, CallFunc_MakeVector2D_ReturnValue_5) == 0x0001F0, "Member 'WBP_ItemToolTips_CompareBattle_C_UpdatePos::CallFunc_MakeVector2D_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WBP_ItemToolTips_CompareBattle_C_UpdatePos, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000200, "Member 'WBP_ItemToolTips_CompareBattle_C_UpdatePos::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ItemToolTips_CompareBattle_C_UpdatePos, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000208, "Member 'WBP_ItemToolTips_CompareBattle_C_UpdatePos::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_ItemToolTips_CompareBattle_C_UpdatePos, CallFunc_Greater_DoubleDouble_ReturnValue_2) == 0x000210, "Member 'WBP_ItemToolTips_CompareBattle_C_UpdatePos::CallFunc_Greater_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_ItemToolTips_CompareBattle_C_UpdatePos, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000218, "Member 'WBP_ItemToolTips_CompareBattle_C_UpdatePos::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_ItemToolTips_CompareBattle_C_UpdatePos, CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1) == 0x000220, "Member 'WBP_ItemToolTips_CompareBattle_C_UpdatePos::CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");

// Function WBP_ItemToolTips_CompareBattle.WBP_ItemToolTips_CompareBattle_C.GetModuleName
// 0x0010 (0x0010 - 0x0000)
struct WBP_ItemToolTips_CompareBattle_C_GetModuleName final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemToolTips_CompareBattle_C_GetModuleName) == 0x000008, "Wrong alignment on WBP_ItemToolTips_CompareBattle_C_GetModuleName");
static_assert(sizeof(WBP_ItemToolTips_CompareBattle_C_GetModuleName) == 0x000010, "Wrong size on WBP_ItemToolTips_CompareBattle_C_GetModuleName");
static_assert(offsetof(WBP_ItemToolTips_CompareBattle_C_GetModuleName, ReturnValue) == 0x000000, "Member 'WBP_ItemToolTips_CompareBattle_C_GetModuleName::ReturnValue' has a wrong offset!");

}

