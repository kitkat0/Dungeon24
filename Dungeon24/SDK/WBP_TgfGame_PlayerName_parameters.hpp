#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_TgfGame_PlayerName

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "LyraGame_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WBP_TgfGame_PlayerName.WBP_TgfGame_PlayerName_C.BindIndicator
// 0x0008 (0x0008 - 0x0000)
struct WBP_TgfGame_PlayerName_C_BindIndicator final
{
public:
	class UIndicatorDescriptor*                   Indicator;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TgfGame_PlayerName_C_BindIndicator) == 0x000008, "Wrong alignment on WBP_TgfGame_PlayerName_C_BindIndicator");
static_assert(sizeof(WBP_TgfGame_PlayerName_C_BindIndicator) == 0x000008, "Wrong size on WBP_TgfGame_PlayerName_C_BindIndicator");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_BindIndicator, Indicator) == 0x000000, "Member 'WBP_TgfGame_PlayerName_C_BindIndicator::Indicator' has a wrong offset!");

// Function WBP_TgfGame_PlayerName.WBP_TgfGame_PlayerName_C.DeathStarted
// 0x0008 (0x0008 - 0x0000)
struct WBP_TgfGame_PlayerName_C_DeathStarted final
{
public:
	class AActor*                                 OwningActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TgfGame_PlayerName_C_DeathStarted) == 0x000008, "Wrong alignment on WBP_TgfGame_PlayerName_C_DeathStarted");
static_assert(sizeof(WBP_TgfGame_PlayerName_C_DeathStarted) == 0x000008, "Wrong size on WBP_TgfGame_PlayerName_C_DeathStarted");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_DeathStarted, OwningActor) == 0x000000, "Member 'WBP_TgfGame_PlayerName_C_DeathStarted::OwningActor' has a wrong offset!");

// Function WBP_TgfGame_PlayerName.WBP_TgfGame_PlayerName_C.ExecuteUbergraph_WBP_TgfGame_PlayerName
// 0x00F0 (0x00F0 - 0x0000)
struct WBP_TgfGame_PlayerName_C_ExecuteUbergraph_WBP_TgfGame_PlayerName final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UIndicatorDescriptor*                   K2Node_Event_Indicator_1;                          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	const class UIndicatorDescriptor*             K2Node_Event_Indicator;                            // 0x0010(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_OwningActor_1;                  // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_CustomEvent_TargetPawn;                     // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Waiting;                        // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_CustomEvent_Pawn;                           // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AActor* OwningActor)>    K2Node_CreateDelegate_OutputDelegate;              // 0x0038(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ALyraCharacter*                         K2Node_DynamicCast_AsLyra_Character;               // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class APawn* TargetPawn, bool bWaiting)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0054(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0066(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_67[0x1];                                       // 0x0067(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetOverlayScale_Rate;                     // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0078(0x0040)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X;                          // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AActor* OwningActor)>    K2Node_CreateDelegate_OutputDelegate_2;            // 0x00D0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_OwningActor;                    // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TgfGame_PlayerName_C_ExecuteUbergraph_WBP_TgfGame_PlayerName) == 0x000008, "Wrong alignment on WBP_TgfGame_PlayerName_C_ExecuteUbergraph_WBP_TgfGame_PlayerName");
static_assert(sizeof(WBP_TgfGame_PlayerName_C_ExecuteUbergraph_WBP_TgfGame_PlayerName) == 0x0000F0, "Wrong size on WBP_TgfGame_PlayerName_C_ExecuteUbergraph_WBP_TgfGame_PlayerName");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_ExecuteUbergraph_WBP_TgfGame_PlayerName, EntryPoint) == 0x000000, "Member 'WBP_TgfGame_PlayerName_C_ExecuteUbergraph_WBP_TgfGame_PlayerName::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_ExecuteUbergraph_WBP_TgfGame_PlayerName, K2Node_Event_Indicator_1) == 0x000008, "Member 'WBP_TgfGame_PlayerName_C_ExecuteUbergraph_WBP_TgfGame_PlayerName::K2Node_Event_Indicator_1' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_ExecuteUbergraph_WBP_TgfGame_PlayerName, K2Node_Event_Indicator) == 0x000010, "Member 'WBP_TgfGame_PlayerName_C_ExecuteUbergraph_WBP_TgfGame_PlayerName::K2Node_Event_Indicator' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_ExecuteUbergraph_WBP_TgfGame_PlayerName, K2Node_CustomEvent_OwningActor_1) == 0x000018, "Member 'WBP_TgfGame_PlayerName_C_ExecuteUbergraph_WBP_TgfGame_PlayerName::K2Node_CustomEvent_OwningActor_1' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_ExecuteUbergraph_WBP_TgfGame_PlayerName, K2Node_CustomEvent_TargetPawn) == 0x000020, "Member 'WBP_TgfGame_PlayerName_C_ExecuteUbergraph_WBP_TgfGame_PlayerName::K2Node_CustomEvent_TargetPawn' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_ExecuteUbergraph_WBP_TgfGame_PlayerName, K2Node_CustomEvent_Waiting) == 0x000028, "Member 'WBP_TgfGame_PlayerName_C_ExecuteUbergraph_WBP_TgfGame_PlayerName::K2Node_CustomEvent_Waiting' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_ExecuteUbergraph_WBP_TgfGame_PlayerName, K2Node_CustomEvent_Pawn) == 0x000030, "Member 'WBP_TgfGame_PlayerName_C_ExecuteUbergraph_WBP_TgfGame_PlayerName::K2Node_CustomEvent_Pawn' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_ExecuteUbergraph_WBP_TgfGame_PlayerName, K2Node_CreateDelegate_OutputDelegate) == 0x000038, "Member 'WBP_TgfGame_PlayerName_C_ExecuteUbergraph_WBP_TgfGame_PlayerName::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_ExecuteUbergraph_WBP_TgfGame_PlayerName, K2Node_DynamicCast_AsLyra_Character) == 0x000048, "Member 'WBP_TgfGame_PlayerName_C_ExecuteUbergraph_WBP_TgfGame_PlayerName::K2Node_DynamicCast_AsLyra_Character' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_ExecuteUbergraph_WBP_TgfGame_PlayerName, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'WBP_TgfGame_PlayerName_C_ExecuteUbergraph_WBP_TgfGame_PlayerName::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_ExecuteUbergraph_WBP_TgfGame_PlayerName, K2Node_CreateDelegate_OutputDelegate_1) == 0x000054, "Member 'WBP_TgfGame_PlayerName_C_ExecuteUbergraph_WBP_TgfGame_PlayerName::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_ExecuteUbergraph_WBP_TgfGame_PlayerName, CallFunc_IsValid_ReturnValue) == 0x000064, "Member 'WBP_TgfGame_PlayerName_C_ExecuteUbergraph_WBP_TgfGame_PlayerName::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_ExecuteUbergraph_WBP_TgfGame_PlayerName, CallFunc_IsValid_ReturnValue_1) == 0x000065, "Member 'WBP_TgfGame_PlayerName_C_ExecuteUbergraph_WBP_TgfGame_PlayerName::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_ExecuteUbergraph_WBP_TgfGame_PlayerName, CallFunc_IsValid_ReturnValue_2) == 0x000066, "Member 'WBP_TgfGame_PlayerName_C_ExecuteUbergraph_WBP_TgfGame_PlayerName::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_ExecuteUbergraph_WBP_TgfGame_PlayerName, CallFunc_GetOverlayScale_Rate) == 0x000068, "Member 'WBP_TgfGame_PlayerName_C_ExecuteUbergraph_WBP_TgfGame_PlayerName::CallFunc_GetOverlayScale_Rate' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_ExecuteUbergraph_WBP_TgfGame_PlayerName, K2Node_Event_MyGeometry) == 0x000078, "Member 'WBP_TgfGame_PlayerName_C_ExecuteUbergraph_WBP_TgfGame_PlayerName::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_ExecuteUbergraph_WBP_TgfGame_PlayerName, K2Node_Event_InDeltaTime) == 0x0000B8, "Member 'WBP_TgfGame_PlayerName_C_ExecuteUbergraph_WBP_TgfGame_PlayerName::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_ExecuteUbergraph_WBP_TgfGame_PlayerName, CallFunc_BreakVector2D_X) == 0x0000C0, "Member 'WBP_TgfGame_PlayerName_C_ExecuteUbergraph_WBP_TgfGame_PlayerName::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_ExecuteUbergraph_WBP_TgfGame_PlayerName, CallFunc_BreakVector2D_Y) == 0x0000C8, "Member 'WBP_TgfGame_PlayerName_C_ExecuteUbergraph_WBP_TgfGame_PlayerName::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_ExecuteUbergraph_WBP_TgfGame_PlayerName, K2Node_CreateDelegate_OutputDelegate_2) == 0x0000D0, "Member 'WBP_TgfGame_PlayerName_C_ExecuteUbergraph_WBP_TgfGame_PlayerName::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_ExecuteUbergraph_WBP_TgfGame_PlayerName, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0000E0, "Member 'WBP_TgfGame_PlayerName_C_ExecuteUbergraph_WBP_TgfGame_PlayerName::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_ExecuteUbergraph_WBP_TgfGame_PlayerName, K2Node_CustomEvent_OwningActor) == 0x0000E8, "Member 'WBP_TgfGame_PlayerName_C_ExecuteUbergraph_WBP_TgfGame_PlayerName::K2Node_CustomEvent_OwningActor' has a wrong offset!");

// Function WBP_TgfGame_PlayerName.WBP_TgfGame_PlayerName_C.ExtractPortal
// 0x0010 (0x0010 - 0x0000)
struct WBP_TgfGame_PlayerName_C_ExtractPortal final
{
public:
	class APawn*                                  TargetPawn;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Waiting;                                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TgfGame_PlayerName_C_ExtractPortal) == 0x000008, "Wrong alignment on WBP_TgfGame_PlayerName_C_ExtractPortal");
static_assert(sizeof(WBP_TgfGame_PlayerName_C_ExtractPortal) == 0x000010, "Wrong size on WBP_TgfGame_PlayerName_C_ExtractPortal");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_ExtractPortal, TargetPawn) == 0x000000, "Member 'WBP_TgfGame_PlayerName_C_ExtractPortal::TargetPawn' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_ExtractPortal, Waiting) == 0x000008, "Member 'WBP_TgfGame_PlayerName_C_ExtractPortal::Waiting' has a wrong offset!");

// Function WBP_TgfGame_PlayerName.WBP_TgfGame_PlayerName_C.GetOverlayScale
// 0x00A0 (0x00A0 - 0x0000)
struct WBP_TgfGame_PlayerName_C_GetOverlayScale final
{
public:
	struct FVector2D                              Rate;                                              // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Sqrt_ReturnValue;                         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ALyraPlayerController*                  K2Node_DynamicCast_AsLyra_Player_Controller;       // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetCurrentViewTarget_ReturnValue;         // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Vector_Distance2D_ReturnValue;            // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Sqrt_ReturnValue_1;                       // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0090(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TgfGame_PlayerName_C_GetOverlayScale) == 0x000008, "Wrong alignment on WBP_TgfGame_PlayerName_C_GetOverlayScale");
static_assert(sizeof(WBP_TgfGame_PlayerName_C_GetOverlayScale) == 0x0000A0, "Wrong size on WBP_TgfGame_PlayerName_C_GetOverlayScale");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_GetOverlayScale, Rate) == 0x000000, "Member 'WBP_TgfGame_PlayerName_C_GetOverlayScale::Rate' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_GetOverlayScale, CallFunc_Sqrt_ReturnValue) == 0x000010, "Member 'WBP_TgfGame_PlayerName_C_GetOverlayScale::CallFunc_Sqrt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_GetOverlayScale, CallFunc_GetOwningPlayer_ReturnValue) == 0x000018, "Member 'WBP_TgfGame_PlayerName_C_GetOverlayScale::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_GetOverlayScale, K2Node_DynamicCast_AsLyra_Player_Controller) == 0x000020, "Member 'WBP_TgfGame_PlayerName_C_GetOverlayScale::K2Node_DynamicCast_AsLyra_Player_Controller' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_GetOverlayScale, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'WBP_TgfGame_PlayerName_C_GetOverlayScale::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_GetOverlayScale, CallFunc_IsValid_ReturnValue) == 0x000029, "Member 'WBP_TgfGame_PlayerName_C_GetOverlayScale::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_GetOverlayScale, CallFunc_GetCurrentViewTarget_ReturnValue) == 0x000030, "Member 'WBP_TgfGame_PlayerName_C_GetOverlayScale::CallFunc_GetCurrentViewTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_GetOverlayScale, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000038, "Member 'WBP_TgfGame_PlayerName_C_GetOverlayScale::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_GetOverlayScale, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000050, "Member 'WBP_TgfGame_PlayerName_C_GetOverlayScale::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_GetOverlayScale, CallFunc_Vector_Distance2D_ReturnValue) == 0x000068, "Member 'WBP_TgfGame_PlayerName_C_GetOverlayScale::CallFunc_Vector_Distance2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_GetOverlayScale, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000070, "Member 'WBP_TgfGame_PlayerName_C_GetOverlayScale::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_GetOverlayScale, CallFunc_Sqrt_ReturnValue_1) == 0x000078, "Member 'WBP_TgfGame_PlayerName_C_GetOverlayScale::CallFunc_Sqrt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_GetOverlayScale, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000080, "Member 'WBP_TgfGame_PlayerName_C_GetOverlayScale::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_GetOverlayScale, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000088, "Member 'WBP_TgfGame_PlayerName_C_GetOverlayScale::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_GetOverlayScale, CallFunc_MakeVector2D_ReturnValue) == 0x000090, "Member 'WBP_TgfGame_PlayerName_C_GetOverlayScale::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");

// Function WBP_TgfGame_PlayerName.WBP_TgfGame_PlayerName_C.InitializeNameplate
// 0x0008 (0x0008 - 0x0000)
struct WBP_TgfGame_PlayerName_C_InitializeNameplate final
{
public:
	class APawn*                                  Param_Pawn;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TgfGame_PlayerName_C_InitializeNameplate) == 0x000008, "Wrong alignment on WBP_TgfGame_PlayerName_C_InitializeNameplate");
static_assert(sizeof(WBP_TgfGame_PlayerName_C_InitializeNameplate) == 0x000008, "Wrong size on WBP_TgfGame_PlayerName_C_InitializeNameplate");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_InitializeNameplate, Param_Pawn) == 0x000000, "Member 'WBP_TgfGame_PlayerName_C_InitializeNameplate::Param_Pawn' has a wrong offset!");

// Function WBP_TgfGame_PlayerName.WBP_TgfGame_PlayerName_C.OnRebirth
// 0x0008 (0x0008 - 0x0000)
struct WBP_TgfGame_PlayerName_C_OnRebirth final
{
public:
	class AActor*                                 OwningActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TgfGame_PlayerName_C_OnRebirth) == 0x000008, "Wrong alignment on WBP_TgfGame_PlayerName_C_OnRebirth");
static_assert(sizeof(WBP_TgfGame_PlayerName_C_OnRebirth) == 0x000008, "Wrong size on WBP_TgfGame_PlayerName_C_OnRebirth");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_OnRebirth, OwningActor) == 0x000000, "Member 'WBP_TgfGame_PlayerName_C_OnRebirth::OwningActor' has a wrong offset!");

// Function WBP_TgfGame_PlayerName.WBP_TgfGame_PlayerName_C.SetHealthBar
// 0x03E0 (0x03E0 - 0x0000)
struct WBP_TgfGame_PlayerName_C_SetHealthBar final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_FloatToVector_ReturnValue;           // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetPlayerViewPoint_Location;              // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetPlayerViewPoint_Rotation;              // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0070(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FHitResult>                     CallFunc_LineTraceMulti_OutHits;                   // 0x00C8(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceMulti_ReturnValue;               // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue_1;            // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_Array_Get_Item;                           // 0x00E8(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x01D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x01D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D6[0x2];                                      // 0x01D6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x01E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x01F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0210(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0228(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0240(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0248(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0250(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x026C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_274[0x4];                                      // 0x0274(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0278(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0290(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x02A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x02AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2AB[0x5];                                      // 0x02AB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetViewportSize_ReturnValue;              // 0x02B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x02C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C1[0x7];                                      // 0x02C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X;                          // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x02E8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x02F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x02F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F9[0x7];                                      // 0x02F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	const class UAttributeSet*                    CallFunc_GetAttributeSet_ReturnValue;              // 0x0300(0x0008)(ConstParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UTgfDefendAttributeSet*                 K2Node_DynamicCast_AsTgf_Defend_Attribute_Set;     // 0x0308(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0310(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_311[0x7];                                      // 0x0311(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0318(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMaxHealthFinal_ReturnValue;            // 0x0328(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32C[0x4];                                      // 0x032C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0330(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x0348(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_ProjectWorldToScreen_ScreenPosition;      // 0x0350(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ProjectWorldToScreen_ReturnValue;         // 0x0360(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_361[0x7];                                      // 0x0361(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Distance2D_ReturnValue;                   // 0x0368(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0370(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_371[0x7];                                      // 0x0371(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue_2;            // 0x0378(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ALyraPlayerController*                  K2Node_DynamicCast_AsLyra_Player_Controller;       // 0x0380(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0388(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_389[0x7];                                      // 0x0389(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULyraAbilitySystemComponent*            CallFunc_GetLyraAbilitySystemComponent_ReturnValue; // 0x0390(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0398(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_399[0x7];                                      // 0x0399(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ALyraCharacter*                         CallFunc_GetOwnerLyraCharacter_ReturnValue;        // 0x03A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x03A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDeadOrDying_ReturnValue;                // 0x03A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AA[0x6];                                      // 0x03AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput;    // 0x03B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x03C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C1[0x7];                                      // 0x03C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_B_ImplicitCast;       // 0x03C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_A_ImplicitCast;       // 0x03D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetPercent_InPercent_ImplicitCast;        // 0x03D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TgfGame_PlayerName_C_SetHealthBar) == 0x000008, "Wrong alignment on WBP_TgfGame_PlayerName_C_SetHealthBar");
static_assert(sizeof(WBP_TgfGame_PlayerName_C_SetHealthBar) == 0x0003E0, "Wrong size on WBP_TgfGame_PlayerName_C_SetHealthBar");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_SetHealthBar, Temp_int_Array_Index_Variable) == 0x000000, "Member 'WBP_TgfGame_PlayerName_C_SetHealthBar::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_SetHealthBar, CallFunc_Conv_FloatToVector_ReturnValue) == 0x000008, "Member 'WBP_TgfGame_PlayerName_C_SetHealthBar::CallFunc_Conv_FloatToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_SetHealthBar, Temp_bool_True_if_break_was_hit_Variable) == 0x000020, "Member 'WBP_TgfGame_PlayerName_C_SetHealthBar::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_SetHealthBar, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'WBP_TgfGame_PlayerName_C_SetHealthBar::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_SetHealthBar, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'WBP_TgfGame_PlayerName_C_SetHealthBar::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_SetHealthBar, CallFunc_Not_PreBool_ReturnValue) == 0x00002C, "Member 'WBP_TgfGame_PlayerName_C_SetHealthBar::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_SetHealthBar, CallFunc_GetOwningPlayer_ReturnValue) == 0x000030, "Member 'WBP_TgfGame_PlayerName_C_SetHealthBar::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_SetHealthBar, CallFunc_K2_GetPawn_ReturnValue) == 0x000038, "Member 'WBP_TgfGame_PlayerName_C_SetHealthBar::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_SetHealthBar, CallFunc_GetPlayerViewPoint_Location) == 0x000040, "Member 'WBP_TgfGame_PlayerName_C_SetHealthBar::CallFunc_GetPlayerViewPoint_Location' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_SetHealthBar, CallFunc_GetPlayerViewPoint_Rotation) == 0x000058, "Member 'WBP_TgfGame_PlayerName_C_SetHealthBar::CallFunc_GetPlayerViewPoint_Rotation' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_SetHealthBar, K2Node_MakeArray_Array) == 0x000070, "Member 'WBP_TgfGame_PlayerName_C_SetHealthBar::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_SetHealthBar, CallFunc_GetForwardVector_ReturnValue) == 0x000080, "Member 'WBP_TgfGame_PlayerName_C_SetHealthBar::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_SetHealthBar, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000098, "Member 'WBP_TgfGame_PlayerName_C_SetHealthBar::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_SetHealthBar, CallFunc_Add_VectorVector_ReturnValue) == 0x0000B0, "Member 'WBP_TgfGame_PlayerName_C_SetHealthBar::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_SetHealthBar, CallFunc_LineTraceMulti_OutHits) == 0x0000C8, "Member 'WBP_TgfGame_PlayerName_C_SetHealthBar::CallFunc_LineTraceMulti_OutHits' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_SetHealthBar, CallFunc_LineTraceMulti_ReturnValue) == 0x0000D8, "Member 'WBP_TgfGame_PlayerName_C_SetHealthBar::CallFunc_LineTraceMulti_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_SetHealthBar, CallFunc_GetOwningPlayer_ReturnValue_1) == 0x0000E0, "Member 'WBP_TgfGame_PlayerName_C_SetHealthBar::CallFunc_GetOwningPlayer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_SetHealthBar, CallFunc_Array_Get_Item) == 0x0000E8, "Member 'WBP_TgfGame_PlayerName_C_SetHealthBar::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_SetHealthBar, CallFunc_Array_Length_ReturnValue) == 0x0001D0, "Member 'WBP_TgfGame_PlayerName_C_SetHealthBar::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_SetHealthBar, CallFunc_BreakHitResult_bBlockingHit) == 0x0001D4, "Member 'WBP_TgfGame_PlayerName_C_SetHealthBar::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_SetHealthBar, CallFunc_BreakHitResult_bInitialOverlap) == 0x0001D5, "Member 'WBP_TgfGame_PlayerName_C_SetHealthBar::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_SetHealthBar, CallFunc_BreakHitResult_Time) == 0x0001D8, "Member 'WBP_TgfGame_PlayerName_C_SetHealthBar::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_SetHealthBar, CallFunc_BreakHitResult_Distance) == 0x0001DC, "Member 'WBP_TgfGame_PlayerName_C_SetHealthBar::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_SetHealthBar, CallFunc_BreakHitResult_Location) == 0x0001E0, "Member 'WBP_TgfGame_PlayerName_C_SetHealthBar::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_SetHealthBar, CallFunc_BreakHitResult_ImpactPoint) == 0x0001F8, "Member 'WBP_TgfGame_PlayerName_C_SetHealthBar::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_SetHealthBar, CallFunc_BreakHitResult_Normal) == 0x000210, "Member 'WBP_TgfGame_PlayerName_C_SetHealthBar::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_SetHealthBar, CallFunc_BreakHitResult_ImpactNormal) == 0x000228, "Member 'WBP_TgfGame_PlayerName_C_SetHealthBar::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_SetHealthBar, CallFunc_BreakHitResult_PhysMat) == 0x000240, "Member 'WBP_TgfGame_PlayerName_C_SetHealthBar::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_SetHealthBar, CallFunc_BreakHitResult_HitActor) == 0x000248, "Member 'WBP_TgfGame_PlayerName_C_SetHealthBar::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_SetHealthBar, CallFunc_BreakHitResult_HitComponent) == 0x000250, "Member 'WBP_TgfGame_PlayerName_C_SetHealthBar::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_SetHealthBar, CallFunc_BreakHitResult_HitBoneName) == 0x000258, "Member 'WBP_TgfGame_PlayerName_C_SetHealthBar::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_SetHealthBar, CallFunc_BreakHitResult_BoneName) == 0x000260, "Member 'WBP_TgfGame_PlayerName_C_SetHealthBar::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_SetHealthBar, CallFunc_BreakHitResult_HitItem) == 0x000268, "Member 'WBP_TgfGame_PlayerName_C_SetHealthBar::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_SetHealthBar, CallFunc_BreakHitResult_ElementIndex) == 0x00026C, "Member 'WBP_TgfGame_PlayerName_C_SetHealthBar::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_SetHealthBar, CallFunc_BreakHitResult_FaceIndex) == 0x000270, "Member 'WBP_TgfGame_PlayerName_C_SetHealthBar::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_SetHealthBar, CallFunc_BreakHitResult_TraceStart) == 0x000278, "Member 'WBP_TgfGame_PlayerName_C_SetHealthBar::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_SetHealthBar, CallFunc_BreakHitResult_TraceEnd) == 0x000290, "Member 'WBP_TgfGame_PlayerName_C_SetHealthBar::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_SetHealthBar, CallFunc_Less_IntInt_ReturnValue) == 0x0002A8, "Member 'WBP_TgfGame_PlayerName_C_SetHealthBar::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_SetHealthBar, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0002A9, "Member 'WBP_TgfGame_PlayerName_C_SetHealthBar::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_SetHealthBar, CallFunc_BooleanAND_ReturnValue) == 0x0002AA, "Member 'WBP_TgfGame_PlayerName_C_SetHealthBar::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_SetHealthBar, CallFunc_GetViewportSize_ReturnValue) == 0x0002B0, "Member 'WBP_TgfGame_PlayerName_C_SetHealthBar::CallFunc_GetViewportSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_SetHealthBar, CallFunc_IsValid_ReturnValue) == 0x0002C0, "Member 'WBP_TgfGame_PlayerName_C_SetHealthBar::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_SetHealthBar, CallFunc_BreakVector2D_X) == 0x0002C8, "Member 'WBP_TgfGame_PlayerName_C_SetHealthBar::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_SetHealthBar, CallFunc_BreakVector2D_Y) == 0x0002D0, "Member 'WBP_TgfGame_PlayerName_C_SetHealthBar::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_SetHealthBar, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x0002D8, "Member 'WBP_TgfGame_PlayerName_C_SetHealthBar::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_SetHealthBar, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x0002E0, "Member 'WBP_TgfGame_PlayerName_C_SetHealthBar::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_SetHealthBar, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x0002E8, "Member 'WBP_TgfGame_PlayerName_C_SetHealthBar::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_SetHealthBar, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0002F0, "Member 'WBP_TgfGame_PlayerName_C_SetHealthBar::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_SetHealthBar, CallFunc_IsValid_ReturnValue_1) == 0x0002F8, "Member 'WBP_TgfGame_PlayerName_C_SetHealthBar::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_SetHealthBar, CallFunc_GetAttributeSet_ReturnValue) == 0x000300, "Member 'WBP_TgfGame_PlayerName_C_SetHealthBar::CallFunc_GetAttributeSet_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_SetHealthBar, K2Node_DynamicCast_AsTgf_Defend_Attribute_Set) == 0x000308, "Member 'WBP_TgfGame_PlayerName_C_SetHealthBar::K2Node_DynamicCast_AsTgf_Defend_Attribute_Set' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_SetHealthBar, K2Node_DynamicCast_bSuccess) == 0x000310, "Member 'WBP_TgfGame_PlayerName_C_SetHealthBar::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_SetHealthBar, CallFunc_MakeVector2D_ReturnValue) == 0x000318, "Member 'WBP_TgfGame_PlayerName_C_SetHealthBar::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_SetHealthBar, CallFunc_GetMaxHealthFinal_ReturnValue) == 0x000328, "Member 'WBP_TgfGame_PlayerName_C_SetHealthBar::CallFunc_GetMaxHealthFinal_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_SetHealthBar, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000330, "Member 'WBP_TgfGame_PlayerName_C_SetHealthBar::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_SetHealthBar, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x000348, "Member 'WBP_TgfGame_PlayerName_C_SetHealthBar::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_SetHealthBar, CallFunc_ProjectWorldToScreen_ScreenPosition) == 0x000350, "Member 'WBP_TgfGame_PlayerName_C_SetHealthBar::CallFunc_ProjectWorldToScreen_ScreenPosition' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_SetHealthBar, CallFunc_ProjectWorldToScreen_ReturnValue) == 0x000360, "Member 'WBP_TgfGame_PlayerName_C_SetHealthBar::CallFunc_ProjectWorldToScreen_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_SetHealthBar, CallFunc_Distance2D_ReturnValue) == 0x000368, "Member 'WBP_TgfGame_PlayerName_C_SetHealthBar::CallFunc_Distance2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_SetHealthBar, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000370, "Member 'WBP_TgfGame_PlayerName_C_SetHealthBar::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_SetHealthBar, CallFunc_GetOwningPlayer_ReturnValue_2) == 0x000378, "Member 'WBP_TgfGame_PlayerName_C_SetHealthBar::CallFunc_GetOwningPlayer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_SetHealthBar, K2Node_DynamicCast_AsLyra_Player_Controller) == 0x000380, "Member 'WBP_TgfGame_PlayerName_C_SetHealthBar::K2Node_DynamicCast_AsLyra_Player_Controller' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_SetHealthBar, K2Node_DynamicCast_bSuccess_1) == 0x000388, "Member 'WBP_TgfGame_PlayerName_C_SetHealthBar::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_SetHealthBar, CallFunc_GetLyraAbilitySystemComponent_ReturnValue) == 0x000390, "Member 'WBP_TgfGame_PlayerName_C_SetHealthBar::CallFunc_GetLyraAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_SetHealthBar, CallFunc_IsValid_ReturnValue_2) == 0x000398, "Member 'WBP_TgfGame_PlayerName_C_SetHealthBar::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_SetHealthBar, CallFunc_GetOwnerLyraCharacter_ReturnValue) == 0x0003A0, "Member 'WBP_TgfGame_PlayerName_C_SetHealthBar::CallFunc_GetOwnerLyraCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_SetHealthBar, CallFunc_IsValid_ReturnValue_3) == 0x0003A8, "Member 'WBP_TgfGame_PlayerName_C_SetHealthBar::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_SetHealthBar, CallFunc_IsDeadOrDying_ReturnValue) == 0x0003A9, "Member 'WBP_TgfGame_PlayerName_C_SetHealthBar::CallFunc_IsDeadOrDying_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_SetHealthBar, CallFunc_HasMatchingGameplayTag_self_CastInput) == 0x0003B0, "Member 'WBP_TgfGame_PlayerName_C_SetHealthBar::CallFunc_HasMatchingGameplayTag_self_CastInput' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_SetHealthBar, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x0003C0, "Member 'WBP_TgfGame_PlayerName_C_SetHealthBar::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_SetHealthBar, CallFunc_Divide_DoubleDouble_B_ImplicitCast) == 0x0003C8, "Member 'WBP_TgfGame_PlayerName_C_SetHealthBar::CallFunc_Divide_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_SetHealthBar, CallFunc_Divide_DoubleDouble_A_ImplicitCast) == 0x0003D0, "Member 'WBP_TgfGame_PlayerName_C_SetHealthBar::CallFunc_Divide_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_SetHealthBar, CallFunc_SetPercent_InPercent_ImplicitCast) == 0x0003D8, "Member 'WBP_TgfGame_PlayerName_C_SetHealthBar::CallFunc_SetPercent_InPercent_ImplicitCast' has a wrong offset!");

// Function WBP_TgfGame_PlayerName.WBP_TgfGame_PlayerName_C.SetNameVisibility
// 0x0001 (0x0001 - 0x0000)
struct WBP_TgfGame_PlayerName_C_SetNameVisibility final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TgfGame_PlayerName_C_SetNameVisibility) == 0x000001, "Wrong alignment on WBP_TgfGame_PlayerName_C_SetNameVisibility");
static_assert(sizeof(WBP_TgfGame_PlayerName_C_SetNameVisibility) == 0x000001, "Wrong size on WBP_TgfGame_PlayerName_C_SetNameVisibility");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_SetNameVisibility, Visible) == 0x000000, "Member 'WBP_TgfGame_PlayerName_C_SetNameVisibility::Visible' has a wrong offset!");

// Function WBP_TgfGame_PlayerName.WBP_TgfGame_PlayerName_C.SetPawn
// 0x0008 (0x0008 - 0x0000)
struct WBP_TgfGame_PlayerName_C_SetPawn final
{
public:
	class APawn*                                  Param_Pawn;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TgfGame_PlayerName_C_SetPawn) == 0x000008, "Wrong alignment on WBP_TgfGame_PlayerName_C_SetPawn");
static_assert(sizeof(WBP_TgfGame_PlayerName_C_SetPawn) == 0x000008, "Wrong size on WBP_TgfGame_PlayerName_C_SetPawn");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_SetPawn, Param_Pawn) == 0x000000, "Member 'WBP_TgfGame_PlayerName_C_SetPawn::Param_Pawn' has a wrong offset!");

// Function WBP_TgfGame_PlayerName.WBP_TgfGame_PlayerName_C.SetPlayerName
// 0x0080 (0x0080 - 0x0000)
struct WBP_TgfGame_PlayerName_C_SetPlayerName final
{
public:
	class ALyraCharacter*                         K2Node_DynamicCast_AsLyra_Character;               // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ALyraPlayerState*                       CallFunc_GetLyraPlayerState_ReturnValue;           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPlayerNameData                        CallFunc_GetPlayerNameData_ReturnValue;            // 0x0020(0x0030)()
	class FString                                 CallFunc_GetNameFromPlayerNameData_ReturnValue;    // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0060(0x0018)()
	bool                                          CallFunc_IsPlayer_ReturnValue;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TgfGame_PlayerName_C_SetPlayerName) == 0x000008, "Wrong alignment on WBP_TgfGame_PlayerName_C_SetPlayerName");
static_assert(sizeof(WBP_TgfGame_PlayerName_C_SetPlayerName) == 0x000080, "Wrong size on WBP_TgfGame_PlayerName_C_SetPlayerName");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_SetPlayerName, K2Node_DynamicCast_AsLyra_Character) == 0x000000, "Member 'WBP_TgfGame_PlayerName_C_SetPlayerName::K2Node_DynamicCast_AsLyra_Character' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_SetPlayerName, K2Node_DynamicCast_bSuccess) == 0x000008, "Member 'WBP_TgfGame_PlayerName_C_SetPlayerName::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_SetPlayerName, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'WBP_TgfGame_PlayerName_C_SetPlayerName::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_SetPlayerName, CallFunc_GetLyraPlayerState_ReturnValue) == 0x000010, "Member 'WBP_TgfGame_PlayerName_C_SetPlayerName::CallFunc_GetLyraPlayerState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_SetPlayerName, CallFunc_IsValid_ReturnValue_1) == 0x000018, "Member 'WBP_TgfGame_PlayerName_C_SetPlayerName::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_SetPlayerName, CallFunc_GetPlayerNameData_ReturnValue) == 0x000020, "Member 'WBP_TgfGame_PlayerName_C_SetPlayerName::CallFunc_GetPlayerNameData_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_SetPlayerName, CallFunc_GetNameFromPlayerNameData_ReturnValue) == 0x000050, "Member 'WBP_TgfGame_PlayerName_C_SetPlayerName::CallFunc_GetNameFromPlayerNameData_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_SetPlayerName, CallFunc_Conv_StringToText_ReturnValue) == 0x000060, "Member 'WBP_TgfGame_PlayerName_C_SetPlayerName::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_SetPlayerName, CallFunc_IsPlayer_ReturnValue) == 0x000078, "Member 'WBP_TgfGame_PlayerName_C_SetPlayerName::CallFunc_IsPlayer_ReturnValue' has a wrong offset!");

// Function WBP_TgfGame_PlayerName.WBP_TgfGame_PlayerName_C.SetVisibilityByScale
// 0x0001 (0x0001 - 0x0000)
struct WBP_TgfGame_PlayerName_C_SetVisibilityByScale final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TgfGame_PlayerName_C_SetVisibilityByScale) == 0x000001, "Wrong alignment on WBP_TgfGame_PlayerName_C_SetVisibilityByScale");
static_assert(sizeof(WBP_TgfGame_PlayerName_C_SetVisibilityByScale) == 0x000001, "Wrong size on WBP_TgfGame_PlayerName_C_SetVisibilityByScale");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_SetVisibilityByScale, Visible) == 0x000000, "Member 'WBP_TgfGame_PlayerName_C_SetVisibilityByScale::Visible' has a wrong offset!");

// Function WBP_TgfGame_PlayerName.WBP_TgfGame_PlayerName_C.Should Show Names
// 0x0020 (0x0020 - 0x0000)
struct WBP_TgfGame_PlayerName_C_Should_Show_Names final
{
public:
	class ALyraCharacter*                         Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Show;                                              // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ALyraPlayerController*                  CallFunc_GetLyraPlayerController_ReturnValue;      // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDeadOrDying_ReturnValue;                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasInPortalTags_ReturnValue;              // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TgfGame_PlayerName_C_Should_Show_Names) == 0x000008, "Wrong alignment on WBP_TgfGame_PlayerName_C_Should_Show_Names");
static_assert(sizeof(WBP_TgfGame_PlayerName_C_Should_Show_Names) == 0x000020, "Wrong size on WBP_TgfGame_PlayerName_C_Should_Show_Names");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_Should_Show_Names, Character) == 0x000000, "Member 'WBP_TgfGame_PlayerName_C_Should_Show_Names::Character' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_Should_Show_Names, Show) == 0x000008, "Member 'WBP_TgfGame_PlayerName_C_Should_Show_Names::Show' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_Should_Show_Names, CallFunc_GetLyraPlayerController_ReturnValue) == 0x000010, "Member 'WBP_TgfGame_PlayerName_C_Should_Show_Names::CallFunc_GetLyraPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_Should_Show_Names, CallFunc_IsDeadOrDying_ReturnValue) == 0x000018, "Member 'WBP_TgfGame_PlayerName_C_Should_Show_Names::CallFunc_IsDeadOrDying_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_Should_Show_Names, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'WBP_TgfGame_PlayerName_C_Should_Show_Names::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_Should_Show_Names, CallFunc_HasInPortalTags_ReturnValue) == 0x00001A, "Member 'WBP_TgfGame_PlayerName_C_Should_Show_Names::CallFunc_HasInPortalTags_ReturnValue' has a wrong offset!");

// Function WBP_TgfGame_PlayerName.WBP_TgfGame_PlayerName_C.Tick
// 0x0048 (0x0048 - 0x0000)
struct WBP_TgfGame_PlayerName_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0040(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TgfGame_PlayerName_C_Tick) == 0x000008, "Wrong alignment on WBP_TgfGame_PlayerName_C_Tick");
static_assert(sizeof(WBP_TgfGame_PlayerName_C_Tick) == 0x000048, "Wrong size on WBP_TgfGame_PlayerName_C_Tick");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_Tick, MyGeometry) == 0x000000, "Member 'WBP_TgfGame_PlayerName_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_Tick, InDeltaTime) == 0x000040, "Member 'WBP_TgfGame_PlayerName_C_Tick::InDeltaTime' has a wrong offset!");

// Function WBP_TgfGame_PlayerName.WBP_TgfGame_PlayerName_C.UnbindIndicator
// 0x0008 (0x0008 - 0x0000)
struct WBP_TgfGame_PlayerName_C_UnbindIndicator final
{
public:
	const class UIndicatorDescriptor*             Indicator;                                         // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TgfGame_PlayerName_C_UnbindIndicator) == 0x000008, "Wrong alignment on WBP_TgfGame_PlayerName_C_UnbindIndicator");
static_assert(sizeof(WBP_TgfGame_PlayerName_C_UnbindIndicator) == 0x000008, "Wrong size on WBP_TgfGame_PlayerName_C_UnbindIndicator");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_UnbindIndicator, Indicator) == 0x000000, "Member 'WBP_TgfGame_PlayerName_C_UnbindIndicator::Indicator' has a wrong offset!");

// Function WBP_TgfGame_PlayerName.WBP_TgfGame_PlayerName_C.UpdateVisibility
// 0x0028 (0x0028 - 0x0000)
struct WBP_TgfGame_PlayerName_C_UpdateVisibility final
{
public:
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ALyraPlayerController*                  K2Node_DynamicCast_AsLyra_Player_Controller;       // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ALyraCharacter*                         K2Node_DynamicCast_AsLyra_Character;               // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldAddTeammateMarker_ReturnValue;      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TgfGame_PlayerName_C_UpdateVisibility) == 0x000008, "Wrong alignment on WBP_TgfGame_PlayerName_C_UpdateVisibility");
static_assert(sizeof(WBP_TgfGame_PlayerName_C_UpdateVisibility) == 0x000028, "Wrong size on WBP_TgfGame_PlayerName_C_UpdateVisibility");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_UpdateVisibility, CallFunc_GetOwningPlayer_ReturnValue) == 0x000000, "Member 'WBP_TgfGame_PlayerName_C_UpdateVisibility::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_UpdateVisibility, K2Node_DynamicCast_AsLyra_Player_Controller) == 0x000008, "Member 'WBP_TgfGame_PlayerName_C_UpdateVisibility::K2Node_DynamicCast_AsLyra_Player_Controller' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_UpdateVisibility, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'WBP_TgfGame_PlayerName_C_UpdateVisibility::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_UpdateVisibility, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'WBP_TgfGame_PlayerName_C_UpdateVisibility::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_UpdateVisibility, K2Node_DynamicCast_AsLyra_Character) == 0x000018, "Member 'WBP_TgfGame_PlayerName_C_UpdateVisibility::K2Node_DynamicCast_AsLyra_Character' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_UpdateVisibility, K2Node_DynamicCast_bSuccess_1) == 0x000020, "Member 'WBP_TgfGame_PlayerName_C_UpdateVisibility::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_UpdateVisibility, CallFunc_ShouldAddTeammateMarker_ReturnValue) == 0x000021, "Member 'WBP_TgfGame_PlayerName_C_UpdateVisibility::CallFunc_ShouldAddTeammateMarker_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_UpdateVisibility, CallFunc_IsLocallyControlled_ReturnValue) == 0x000022, "Member 'WBP_TgfGame_PlayerName_C_UpdateVisibility::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_UpdateVisibility, CallFunc_Not_PreBool_ReturnValue) == 0x000023, "Member 'WBP_TgfGame_PlayerName_C_UpdateVisibility::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_PlayerName_C_UpdateVisibility, CallFunc_BooleanAND_ReturnValue) == 0x000024, "Member 'WBP_TgfGame_PlayerName_C_UpdateVisibility::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

}

