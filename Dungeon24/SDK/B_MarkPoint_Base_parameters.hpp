#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_MarkPoint_Base

#include "Basic.hpp"

#include "LyraGame_structs.hpp"
#include "AkAudio_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function B_MarkPoint_Base.B_MarkPoint_Base_C.ExecuteUbergraph_B_MarkPoint_Base
// 0x0138 (0x0138 - 0x0000)
struct B_MarkPoint_Base_C_ExecuteUbergraph_B_MarkPoint_Base final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_CustomEvent_Location;                       // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsDangerType;                   // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x0028(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0112(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_113[0x1];                                      // 0x0113(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0114(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_124[0x4];                                      // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0128(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_1;          // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_MarkPoint_Base_C_ExecuteUbergraph_B_MarkPoint_Base) == 0x000008, "Wrong alignment on B_MarkPoint_Base_C_ExecuteUbergraph_B_MarkPoint_Base");
static_assert(sizeof(B_MarkPoint_Base_C_ExecuteUbergraph_B_MarkPoint_Base) == 0x000138, "Wrong size on B_MarkPoint_Base_C_ExecuteUbergraph_B_MarkPoint_Base");
static_assert(offsetof(B_MarkPoint_Base_C_ExecuteUbergraph_B_MarkPoint_Base, EntryPoint) == 0x000000, "Member 'B_MarkPoint_Base_C_ExecuteUbergraph_B_MarkPoint_Base::EntryPoint' has a wrong offset!");
static_assert(offsetof(B_MarkPoint_Base_C_ExecuteUbergraph_B_MarkPoint_Base, K2Node_CustomEvent_Location) == 0x000008, "Member 'B_MarkPoint_Base_C_ExecuteUbergraph_B_MarkPoint_Base::K2Node_CustomEvent_Location' has a wrong offset!");
static_assert(offsetof(B_MarkPoint_Base_C_ExecuteUbergraph_B_MarkPoint_Base, K2Node_CustomEvent_IsDangerType) == 0x000020, "Member 'B_MarkPoint_Base_C_ExecuteUbergraph_B_MarkPoint_Base::K2Node_CustomEvent_IsDangerType' has a wrong offset!");
static_assert(offsetof(B_MarkPoint_Base_C_ExecuteUbergraph_B_MarkPoint_Base, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x000028, "Member 'B_MarkPoint_Base_C_ExecuteUbergraph_B_MarkPoint_Base::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(B_MarkPoint_Base_C_ExecuteUbergraph_B_MarkPoint_Base, CallFunc_K2_SetActorLocation_ReturnValue) == 0x000110, "Member 'B_MarkPoint_Base_C_ExecuteUbergraph_B_MarkPoint_Base::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_MarkPoint_Base_C_ExecuteUbergraph_B_MarkPoint_Base, CallFunc_IsDedicatedServer_ReturnValue) == 0x000111, "Member 'B_MarkPoint_Base_C_ExecuteUbergraph_B_MarkPoint_Base::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_MarkPoint_Base_C_ExecuteUbergraph_B_MarkPoint_Base, CallFunc_Not_PreBool_ReturnValue) == 0x000112, "Member 'B_MarkPoint_Base_C_ExecuteUbergraph_B_MarkPoint_Base::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_MarkPoint_Base_C_ExecuteUbergraph_B_MarkPoint_Base, K2Node_CreateDelegate_OutputDelegate) == 0x000114, "Member 'B_MarkPoint_Base_C_ExecuteUbergraph_B_MarkPoint_Base::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(B_MarkPoint_Base_C_ExecuteUbergraph_B_MarkPoint_Base, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000128, "Member 'B_MarkPoint_Base_C_ExecuteUbergraph_B_MarkPoint_Base::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_MarkPoint_Base_C_ExecuteUbergraph_B_MarkPoint_Base, CallFunc_IsDedicatedServer_ReturnValue_1) == 0x000130, "Member 'B_MarkPoint_Base_C_ExecuteUbergraph_B_MarkPoint_Base::CallFunc_IsDedicatedServer_ReturnValue_1' has a wrong offset!");

// Function B_MarkPoint_Base.B_MarkPoint_Base_C.ShowMarkPoint
// 0x0020 (0x0020 - 0x0000)
struct B_MarkPoint_Base_C_ShowMarkPoint final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Param_IsDangerType;                                // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_MarkPoint_Base_C_ShowMarkPoint) == 0x000008, "Wrong alignment on B_MarkPoint_Base_C_ShowMarkPoint");
static_assert(sizeof(B_MarkPoint_Base_C_ShowMarkPoint) == 0x000020, "Wrong size on B_MarkPoint_Base_C_ShowMarkPoint");
static_assert(offsetof(B_MarkPoint_Base_C_ShowMarkPoint, Location) == 0x000000, "Member 'B_MarkPoint_Base_C_ShowMarkPoint::Location' has a wrong offset!");
static_assert(offsetof(B_MarkPoint_Base_C_ShowMarkPoint, Param_IsDangerType) == 0x000018, "Member 'B_MarkPoint_Base_C_ShowMarkPoint::Param_IsDangerType' has a wrong offset!");

// Function B_MarkPoint_Base.B_MarkPoint_Base_C.UpdateType
// 0x0070 (0x0070 - 0x0000)
struct B_MarkPoint_Base_C_UpdateType final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ULyraTeamSubsystem*                     CallFunc_GetWorldSubsystem_ReturnValue;            // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable;                            // 0x0010(0x0010)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostAkEvent_ReturnValue;                  // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetTimeSeconds_ReturnValue;               // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               K2Node_Select_Default;                             // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_1;                          // 0x0038(0x0010)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_PostAkEvent_ReturnValue_1;                // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_CompareTeams_TeamIdA;                     // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_CompareTeams_TeamIdB;                     // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELyraTeamComparison                           CallFunc_CompareTeams_ReturnValue;                 // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0066(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0067(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_MarkPoint_Base_C_UpdateType) == 0x000008, "Wrong alignment on B_MarkPoint_Base_C_UpdateType");
static_assert(sizeof(B_MarkPoint_Base_C_UpdateType) == 0x000070, "Wrong size on B_MarkPoint_Base_C_UpdateType");
static_assert(offsetof(B_MarkPoint_Base_C_UpdateType, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'B_MarkPoint_Base_C_UpdateType::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_MarkPoint_Base_C_UpdateType, CallFunc_IsValid_ReturnValue_1) == 0x000001, "Member 'B_MarkPoint_Base_C_UpdateType::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_MarkPoint_Base_C_UpdateType, Temp_bool_Variable) == 0x000002, "Member 'B_MarkPoint_Base_C_UpdateType::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(B_MarkPoint_Base_C_UpdateType, CallFunc_GetWorldSubsystem_ReturnValue) == 0x000008, "Member 'B_MarkPoint_Base_C_UpdateType::CallFunc_GetWorldSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_MarkPoint_Base_C_UpdateType, Temp_delegate_Variable) == 0x000010, "Member 'B_MarkPoint_Base_C_UpdateType::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(B_MarkPoint_Base_C_UpdateType, CallFunc_PostAkEvent_ReturnValue) == 0x000020, "Member 'B_MarkPoint_Base_C_UpdateType::CallFunc_PostAkEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_MarkPoint_Base_C_UpdateType, CallFunc_GetTimeSeconds_ReturnValue) == 0x000028, "Member 'B_MarkPoint_Base_C_UpdateType::CallFunc_GetTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_MarkPoint_Base_C_UpdateType, K2Node_Select_Default) == 0x000030, "Member 'B_MarkPoint_Base_C_UpdateType::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(B_MarkPoint_Base_C_UpdateType, Temp_delegate_Variable_1) == 0x000038, "Member 'B_MarkPoint_Base_C_UpdateType::Temp_delegate_Variable_1' has a wrong offset!");
static_assert(offsetof(B_MarkPoint_Base_C_UpdateType, CallFunc_Not_PreBool_ReturnValue) == 0x000048, "Member 'B_MarkPoint_Base_C_UpdateType::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_MarkPoint_Base_C_UpdateType, CallFunc_PostAkEvent_ReturnValue_1) == 0x00004C, "Member 'B_MarkPoint_Base_C_UpdateType::CallFunc_PostAkEvent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_MarkPoint_Base_C_UpdateType, CallFunc_GetPlayerPawn_ReturnValue) == 0x000050, "Member 'B_MarkPoint_Base_C_UpdateType::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_MarkPoint_Base_C_UpdateType, CallFunc_IsValid_ReturnValue_2) == 0x000058, "Member 'B_MarkPoint_Base_C_UpdateType::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_MarkPoint_Base_C_UpdateType, CallFunc_CompareTeams_TeamIdA) == 0x00005C, "Member 'B_MarkPoint_Base_C_UpdateType::CallFunc_CompareTeams_TeamIdA' has a wrong offset!");
static_assert(offsetof(B_MarkPoint_Base_C_UpdateType, CallFunc_CompareTeams_TeamIdB) == 0x000060, "Member 'B_MarkPoint_Base_C_UpdateType::CallFunc_CompareTeams_TeamIdB' has a wrong offset!");
static_assert(offsetof(B_MarkPoint_Base_C_UpdateType, CallFunc_CompareTeams_ReturnValue) == 0x000064, "Member 'B_MarkPoint_Base_C_UpdateType::CallFunc_CompareTeams_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_MarkPoint_Base_C_UpdateType, K2Node_SwitchEnum_CmpSuccess) == 0x000065, "Member 'B_MarkPoint_Base_C_UpdateType::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(B_MarkPoint_Base_C_UpdateType, CallFunc_IsLocallyControlled_ReturnValue) == 0x000066, "Member 'B_MarkPoint_Base_C_UpdateType::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_MarkPoint_Base_C_UpdateType, CallFunc_IsDedicatedServer_ReturnValue) == 0x000067, "Member 'B_MarkPoint_Base_C_UpdateType::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_MarkPoint_Base_C_UpdateType, CallFunc_Not_PreBool_ReturnValue_1) == 0x000068, "Member 'B_MarkPoint_Base_C_UpdateType::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_MarkPoint_Base_C_UpdateType, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x00006C, "Member 'B_MarkPoint_Base_C_UpdateType::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");

// Function B_MarkPoint_Base.B_MarkPoint_Base_C.UserConstructionScript
// 0x0018 (0x0018 - 0x0000)
struct B_MarkPoint_Base_C_UserConstructionScript final
{
public:
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_1; // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_MarkPoint_Base_C_UserConstructionScript) == 0x000008, "Wrong alignment on B_MarkPoint_Base_C_UserConstructionScript");
static_assert(sizeof(B_MarkPoint_Base_C_UserConstructionScript) == 0x000018, "Wrong size on B_MarkPoint_Base_C_UserConstructionScript");
static_assert(offsetof(B_MarkPoint_Base_C_UserConstructionScript, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000000, "Member 'B_MarkPoint_Base_C_UserConstructionScript::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_MarkPoint_Base_C_UserConstructionScript, CallFunc_CreateDynamicMaterialInstance_ReturnValue_1) == 0x000008, "Member 'B_MarkPoint_Base_C_UserConstructionScript::CallFunc_CreateDynamicMaterialInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_MarkPoint_Base_C_UserConstructionScript, CallFunc_IsDedicatedServer_ReturnValue) == 0x000010, "Member 'B_MarkPoint_Base_C_UserConstructionScript::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");

}

