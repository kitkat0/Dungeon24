#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GameSettings

#include "Basic.hpp"

#include "GameSettings_classes.hpp"
#include "GameSettings_parameters.hpp"


namespace SDK
{

// Function GameSettings.GameSetting.GetDisplayNameVisibility
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ESlateVisibility                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ESlateVisibility UGameSetting::GetDisplayNameVisibility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSetting", "GetDisplayNameVisibility");

	Params::GameSetting_GetDisplayNameVisibility Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameSettings.GameSetting.SetLocalPlayer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ULocalPlayer*                     InLocalPlayer                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGameSetting::SetLocalPlayer(class ULocalPlayer* InLocalPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSetting", "SetLocalPlayer");

	Params::GameSetting_SetLocalPlayer Parms{};

	Parms.InLocalPlayer = InLocalPlayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameSettings.GameSetting.Startup
// (Native, Protected, BlueprintCallable)

void UGameSetting::Startup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSetting", "Startup");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameSettings.GameSetting.GetDescriptionRichText
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UGameSetting::GetDescriptionRichText() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSetting", "GetDescriptionRichText");

	Params::GameSetting_GetDescriptionRichText Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameSettings.GameSetting.GetDevName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UGameSetting::GetDevName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSetting", "GetDevName");

	Params::GameSetting_GetDevName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameSettings.GameSetting.GetDisplayName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UGameSetting::GetDisplayName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSetting", "GetDisplayName");

	Params::GameSetting_GetDisplayName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameSettings.GameSetting.GetDynamicDetails
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UGameSetting::GetDynamicDetails() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSetting", "GetDynamicDetails");

	Params::GameSetting_GetDynamicDetails Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameSettings.GameSetting.GetTags
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGameplayTagContainer      ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FGameplayTagContainer UGameSetting::GetTags() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSetting", "GetTags");

	Params::GameSetting_GetTags Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameSettings.GameSetting.GetWarningRichText
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UGameSetting::GetWarningRichText() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSetting", "GetWarningRichText");

	Params::GameSetting_GetWarningRichText Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameSettings.GameSettingValueDiscrete.GetDiscreteOptionDefaultIndex
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UGameSettingValueDiscrete::GetDiscreteOptionDefaultIndex() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSettingValueDiscrete", "GetDiscreteOptionDefaultIndex");

	Params::GameSettingValueDiscrete_GetDiscreteOptionDefaultIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameSettings.GameSettingValueDiscrete.GetDiscreteOptionIndex
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UGameSettingValueDiscrete::GetDiscreteOptionIndex() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSettingValueDiscrete", "GetDiscreteOptionIndex");

	Params::GameSettingValueDiscrete_GetDiscreteOptionIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameSettings.GameSettingValueDiscrete.GetDiscreteOptions
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class FText>                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FText> UGameSettingValueDiscrete::GetDiscreteOptions() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSettingValueDiscrete", "GetDiscreteOptions");

	Params::GameSettingValueDiscrete_GetDiscreteOptions Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameSettings.GameSettingDetailExtension.OnSettingAssigned
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UGameSetting*                     InSetting                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGameSettingDetailExtension::OnSettingAssigned(class UGameSetting* InSetting)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSettingDetailExtension", "OnSettingAssigned");

	Params::GameSettingDetailExtension_OnSettingAssigned Parms{};

	Parms.InSetting = InSetting;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GameSettings.GameSettingDetailExtension.OnSettingValueChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UGameSetting*                     InSetting                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGameSettingDetailExtension::OnSettingValueChanged(class UGameSetting* InSetting)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSettingDetailExtension", "OnSettingValueChanged");

	Params::GameSettingDetailExtension_OnSettingValueChanged Parms{};

	Parms.InSetting = InSetting;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GameSettings.GameSettingListEntryBase.GetPrimaryGamepadFocusWidget
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UWidget*                          ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWidget* UGameSettingListEntryBase::GetPrimaryGamepadFocusWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSettingListEntryBase", "GetPrimaryGamepadFocusWidget");

	Params::GameSettingListEntryBase_GetPrimaryGamepadFocusWidget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function GameSettings.GameSettingListEntrySetting_Scalar.HandleSliderCaptureEnded
// (Final, Native, Protected)

void UGameSettingListEntrySetting_Scalar::HandleSliderCaptureEnded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSettingListEntrySetting_Scalar", "HandleSliderCaptureEnded");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameSettings.GameSettingListEntrySetting_Scalar.HandleSliderValueChanged
// (Final, Native, Protected)
// Parameters:
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGameSettingListEntrySetting_Scalar::HandleSliderValueChanged(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSettingListEntrySetting_Scalar", "HandleSliderValueChanged");

	Params::GameSettingListEntrySetting_Scalar_HandleSliderValueChanged Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameSettings.GameSettingListEntrySetting_Scalar.OnDefaultValueChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// float                                   DefaultValue                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGameSettingListEntrySetting_Scalar::OnDefaultValueChanged(float DefaultValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSettingListEntrySetting_Scalar", "OnDefaultValueChanged");

	Params::GameSettingListEntrySetting_Scalar_OnDefaultValueChanged Parms{};

	Parms.DefaultValue = DefaultValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GameSettings.GameSettingListEntrySetting_Scalar.OnValueChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGameSettingListEntrySetting_Scalar::OnValueChanged(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSettingListEntrySetting_Scalar", "OnValueChanged");

	Params::GameSettingListEntrySetting_Scalar_OnValueChanged Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GameSettings.GameSettingListEntrySetting_Action.OnSettingAssigned
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             ActionText                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UGameSettingListEntrySetting_Action::OnSettingAssigned(const class FText& ActionText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSettingListEntrySetting_Action", "OnSettingAssigned");

	Params::GameSettingListEntrySetting_Action_OnSettingAssigned Parms{};

	Parms.ActionText = std::move(ActionText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function GameSettings.GameSettingListEntrySetting_Navigation.OnSettingAssigned
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             ActionText                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UGameSettingListEntrySetting_Navigation::OnSettingAssigned(const class FText& ActionText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSettingListEntrySetting_Navigation", "OnSettingAssigned");

	Params::GameSettingListEntrySetting_Navigation_OnSettingAssigned Parms{};

	Parms.ActionText = std::move(ActionText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function GameSettings.GameSettingScreen.ApplyChanges
// (Native, Protected, BlueprintCallable)

void UGameSettingScreen::ApplyChanges()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSettingScreen", "ApplyChanges");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameSettings.GameSettingScreen.AttemptToPopNavigation
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UGameSettingScreen::AttemptToPopNavigation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSettingScreen", "AttemptToPopNavigation");

	Params::GameSettingScreen_AttemptToPopNavigation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameSettings.GameSettingScreen.CancelChanges
// (Native, Protected, BlueprintCallable)

void UGameSettingScreen::CancelChanges()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSettingScreen", "CancelChanges");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameSettings.GameSettingScreen.GetSettingCollection
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             SettingDevName                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    HasAnySettings                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UGameSettingCollection*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UGameSettingCollection* UGameSettingScreen::GetSettingCollection(class FName SettingDevName, bool* HasAnySettings)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSettingScreen", "GetSettingCollection");

	Params::GameSettingScreen_GetSettingCollection Parms{};

	Parms.SettingDevName = SettingDevName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (HasAnySettings != nullptr)
		*HasAnySettings = Parms.HasAnySettings;

	return Parms.ReturnValue;
}


// Function GameSettings.GameSettingScreen.NavigateToSetting
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class FName                             SettingDevName                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGameSettingScreen::NavigateToSetting(class FName SettingDevName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSettingScreen", "NavigateToSetting");

	Params::GameSettingScreen_NavigateToSetting Parms{};

	Parms.SettingDevName = SettingDevName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameSettings.GameSettingScreen.NavigateToSettings
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class FName>                     SettingDevNames                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UGameSettingScreen::NavigateToSettings(const TArray<class FName>& SettingDevNames)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSettingScreen", "NavigateToSettings");

	Params::GameSettingScreen_NavigateToSettings Parms{};

	Parms.SettingDevNames = std::move(SettingDevNames);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameSettings.GameSettingScreen.OnSettingsDirtyStateChanged
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bSettingsDirty                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGameSettingScreen::OnSettingsDirtyStateChanged(bool bSettingsDirty)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSettingScreen", "OnSettingsDirtyStateChanged");

	Params::GameSettingScreen_OnSettingsDirtyStateChanged Parms{};

	Parms.bSettingsDirty = bSettingsDirty;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameSettings.GameSettingScreen.HaveSettingsBeenChanged
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UGameSettingScreen::HaveSettingsBeenChanged() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSettingScreen", "HaveSettingsBeenChanged");

	Params::GameSettingScreen_HaveSettingsBeenChanged Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameSettings.GameSettingActionInterface.ExecuteActionForSetting
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     ActionTag                                              (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UGameSetting*                     InSetting                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IGameSettingActionInterface::ExecuteActionForSetting(const struct FGameplayTag& ActionTag, class UGameSetting* InSetting)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSettingActionInterface", "ExecuteActionForSetting");

	Params::GameSettingActionInterface_ExecuteActionForSetting Parms{};

	Parms.ActionTag = std::move(ActionTag);
	Parms.InSetting = InSetting;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameSettings.GameSettingRotator.BP_OnDefaultOptionSpecified
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   DefaultOptionIndex                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGameSettingRotator::BP_OnDefaultOptionSpecified(int32 DefaultOptionIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSettingRotator", "BP_OnDefaultOptionSpecified");

	Params::GameSettingRotator_BP_OnDefaultOptionSpecified Parms{};

	Parms.DefaultOptionIndex = DefaultOptionIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GameSettings.GameResponsivePanel.AddChildToGameResponsivePanel
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWidget*                          Content                                                (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UGameResponsivePanelSlot*         ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UGameResponsivePanelSlot* UGameResponsivePanel::AddChildToGameResponsivePanel(class UWidget* Content)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameResponsivePanel", "AddChildToGameResponsivePanel");

	Params::GameResponsivePanel_AddChildToGameResponsivePanel Parms{};

	Parms.Content = Content;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

