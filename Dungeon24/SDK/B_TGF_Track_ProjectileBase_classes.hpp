#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_TGF_Track_ProjectileBase

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "AkAudio_structs.hpp"
#include "LyraGame_classes.hpp"
#include "PhysicsCore_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass B_TGF_Track_ProjectileBase.B_TGF_Track_ProjectileBase_C
// 0x01C8 (0x0870 - 0x06A8)
class AB_TGF_Track_ProjectileBase_C final : public ATgfProjectileBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x06A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAkComponent*                           Ak;                                                // 0x06B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 SkeletalMesh;                                      // 0x06B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          BoxCollision;                                      // 0x06C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UProjectileMovementComponent*           ProjectileMovement;                                // 0x06C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        MaxExistTime;                                      // 0x06D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SavedGravity;                                      // 0x06D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6DC[0x4];                                      // 0x06DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                SavedVelocity;                                     // 0x06E0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaxDegreeCompareToBegin;                           // 0x06F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                BeginForward;                                      // 0x0700(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 TrackTarget;                                       // 0x0718(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TargetForward;                                     // 0x0720(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldUpdateVelocity;                              // 0x0738(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_739[0x7];                                      // 0x0739(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Acc;                                               // 0x0740(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NewVelocity;                                       // 0x0748(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bShouldIgnoreInstigator;                           // 0x0760(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIgnoreOtherActors;                                // 0x0761(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_762[0x6];                                      // 0x0762(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         IgnoreActors;                                      // 0x0768(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	double                                        IgnoreRedius;                                      // 0x0778(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   TrackSocketName;                                   // 0x0780(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          StopTrack;                                         // 0x0788(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bExplodeIgnoreSelf;                                // 0x0789(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bExplosive;                                        // 0x078A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_78B[0x5];                                      // 0x078B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkAudioEvent*                          FlybySound;                                        // 0x0790(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<class UAkAudioEvent*>                  WooshSounds;                                       // 0x0798(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FVector                                TargetPos;                                         // 0x07A8(0x0018)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           ExceedHandle;                                      // 0x07C0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          IsPreload;                                         // 0x07C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AudioPlayed;                                       // 0x07C9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          EnableIgnoreStaticCollision;                       // 0x07CA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7CB[0x5];                                      // 0x07CB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        BaseIgnoreStaticCollisionDistance;                 // 0x07D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        NonLyraCharacterMinDistance;                       // 0x07D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                StaticCollisionRecoverStartPos;                    // 0x07E0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        StaticCollisionRecoverDistance;                    // 0x07F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIgnoreTargetDeathCheck;                           // 0x0800(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bHasResetState;                                    // 0x0801(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_802[0xE];                                      // 0x0802(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             New_Transform;                                     // 0x0810(0x0060)(Edit, BlueprintVisible, Net, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BeginFlyby();
	void ChangeMesh(class USkeletalMesh* Mesh);
	bool CheckHitInteractEnvironment(const struct FHitResult& Result);
	void CheckIgnoreStaticCollision();
	void DealResetState();
	void Detonate(class AActor* ExcludedActor, const struct FVector& ExplodeCenter);
	void DoChangeMesh(class USkeletalMesh* Mesh);
	void EndFlyby();
	void ExecuteUbergraph_B_TGF_Track_ProjectileBase(int32 EntryPoint);
	void GetCurTargetPos(struct FVector* Location);
	void IgnoreStaticCollision(const struct FVector& Param_StartPos, class AActor* TraceActor, double DistanceFromCameraToTarget, class AActor* TrackActor);
	void InitIgnoreActors();
	void OnExceedMaxExistTime();
	void OnRep_bHasResetState();
	void OnRep_TargetPos();
	void OnSetTrackTarget();
	void OnUpdateTargetPos();
	void PlayTickAudio();
	void ReceiveBeginPlay();
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void ReceiveHit(class UPrimitiveComponent* MyComp, class AActor* Other, class UPrimitiveComponent* OtherComp, bool bSelfMoved, const struct FVector& HitLocation, const struct FVector& HitNormal, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void ReceiveTick(float DeltaSeconds);
	void ResetMovementState(class AActor* Param_TrackTarget, class FName TrackSocket, const struct FTransform& NewTransform, const struct FVector& TrackPos);
	void SetMovementEnable(bool NewEnable);
	void SetTrackTarget(class AActor* InputActor, class FName Param_TrackSocketName);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_TGF_Track_ProjectileBase_C">();
	}
	static class AB_TGF_Track_ProjectileBase_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AB_TGF_Track_ProjectileBase_C>();
	}
};
static_assert(alignof(AB_TGF_Track_ProjectileBase_C) == 0x000010, "Wrong alignment on AB_TGF_Track_ProjectileBase_C");
static_assert(sizeof(AB_TGF_Track_ProjectileBase_C) == 0x000870, "Wrong size on AB_TGF_Track_ProjectileBase_C");
static_assert(offsetof(AB_TGF_Track_ProjectileBase_C, UberGraphFrame) == 0x0006A8, "Member 'AB_TGF_Track_ProjectileBase_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AB_TGF_Track_ProjectileBase_C, Ak) == 0x0006B0, "Member 'AB_TGF_Track_ProjectileBase_C::Ak' has a wrong offset!");
static_assert(offsetof(AB_TGF_Track_ProjectileBase_C, SkeletalMesh) == 0x0006B8, "Member 'AB_TGF_Track_ProjectileBase_C::SkeletalMesh' has a wrong offset!");
static_assert(offsetof(AB_TGF_Track_ProjectileBase_C, BoxCollision) == 0x0006C0, "Member 'AB_TGF_Track_ProjectileBase_C::BoxCollision' has a wrong offset!");
static_assert(offsetof(AB_TGF_Track_ProjectileBase_C, ProjectileMovement) == 0x0006C8, "Member 'AB_TGF_Track_ProjectileBase_C::ProjectileMovement' has a wrong offset!");
static_assert(offsetof(AB_TGF_Track_ProjectileBase_C, MaxExistTime) == 0x0006D0, "Member 'AB_TGF_Track_ProjectileBase_C::MaxExistTime' has a wrong offset!");
static_assert(offsetof(AB_TGF_Track_ProjectileBase_C, SavedGravity) == 0x0006D8, "Member 'AB_TGF_Track_ProjectileBase_C::SavedGravity' has a wrong offset!");
static_assert(offsetof(AB_TGF_Track_ProjectileBase_C, SavedVelocity) == 0x0006E0, "Member 'AB_TGF_Track_ProjectileBase_C::SavedVelocity' has a wrong offset!");
static_assert(offsetof(AB_TGF_Track_ProjectileBase_C, MaxDegreeCompareToBegin) == 0x0006F8, "Member 'AB_TGF_Track_ProjectileBase_C::MaxDegreeCompareToBegin' has a wrong offset!");
static_assert(offsetof(AB_TGF_Track_ProjectileBase_C, BeginForward) == 0x000700, "Member 'AB_TGF_Track_ProjectileBase_C::BeginForward' has a wrong offset!");
static_assert(offsetof(AB_TGF_Track_ProjectileBase_C, TrackTarget) == 0x000718, "Member 'AB_TGF_Track_ProjectileBase_C::TrackTarget' has a wrong offset!");
static_assert(offsetof(AB_TGF_Track_ProjectileBase_C, TargetForward) == 0x000720, "Member 'AB_TGF_Track_ProjectileBase_C::TargetForward' has a wrong offset!");
static_assert(offsetof(AB_TGF_Track_ProjectileBase_C, ShouldUpdateVelocity) == 0x000738, "Member 'AB_TGF_Track_ProjectileBase_C::ShouldUpdateVelocity' has a wrong offset!");
static_assert(offsetof(AB_TGF_Track_ProjectileBase_C, Acc) == 0x000740, "Member 'AB_TGF_Track_ProjectileBase_C::Acc' has a wrong offset!");
static_assert(offsetof(AB_TGF_Track_ProjectileBase_C, NewVelocity) == 0x000748, "Member 'AB_TGF_Track_ProjectileBase_C::NewVelocity' has a wrong offset!");
static_assert(offsetof(AB_TGF_Track_ProjectileBase_C, bShouldIgnoreInstigator) == 0x000760, "Member 'AB_TGF_Track_ProjectileBase_C::bShouldIgnoreInstigator' has a wrong offset!");
static_assert(offsetof(AB_TGF_Track_ProjectileBase_C, bIgnoreOtherActors) == 0x000761, "Member 'AB_TGF_Track_ProjectileBase_C::bIgnoreOtherActors' has a wrong offset!");
static_assert(offsetof(AB_TGF_Track_ProjectileBase_C, IgnoreActors) == 0x000768, "Member 'AB_TGF_Track_ProjectileBase_C::IgnoreActors' has a wrong offset!");
static_assert(offsetof(AB_TGF_Track_ProjectileBase_C, IgnoreRedius) == 0x000778, "Member 'AB_TGF_Track_ProjectileBase_C::IgnoreRedius' has a wrong offset!");
static_assert(offsetof(AB_TGF_Track_ProjectileBase_C, TrackSocketName) == 0x000780, "Member 'AB_TGF_Track_ProjectileBase_C::TrackSocketName' has a wrong offset!");
static_assert(offsetof(AB_TGF_Track_ProjectileBase_C, StopTrack) == 0x000788, "Member 'AB_TGF_Track_ProjectileBase_C::StopTrack' has a wrong offset!");
static_assert(offsetof(AB_TGF_Track_ProjectileBase_C, bExplodeIgnoreSelf) == 0x000789, "Member 'AB_TGF_Track_ProjectileBase_C::bExplodeIgnoreSelf' has a wrong offset!");
static_assert(offsetof(AB_TGF_Track_ProjectileBase_C, bExplosive) == 0x00078A, "Member 'AB_TGF_Track_ProjectileBase_C::bExplosive' has a wrong offset!");
static_assert(offsetof(AB_TGF_Track_ProjectileBase_C, FlybySound) == 0x000790, "Member 'AB_TGF_Track_ProjectileBase_C::FlybySound' has a wrong offset!");
static_assert(offsetof(AB_TGF_Track_ProjectileBase_C, WooshSounds) == 0x000798, "Member 'AB_TGF_Track_ProjectileBase_C::WooshSounds' has a wrong offset!");
static_assert(offsetof(AB_TGF_Track_ProjectileBase_C, TargetPos) == 0x0007A8, "Member 'AB_TGF_Track_ProjectileBase_C::TargetPos' has a wrong offset!");
static_assert(offsetof(AB_TGF_Track_ProjectileBase_C, ExceedHandle) == 0x0007C0, "Member 'AB_TGF_Track_ProjectileBase_C::ExceedHandle' has a wrong offset!");
static_assert(offsetof(AB_TGF_Track_ProjectileBase_C, IsPreload) == 0x0007C8, "Member 'AB_TGF_Track_ProjectileBase_C::IsPreload' has a wrong offset!");
static_assert(offsetof(AB_TGF_Track_ProjectileBase_C, AudioPlayed) == 0x0007C9, "Member 'AB_TGF_Track_ProjectileBase_C::AudioPlayed' has a wrong offset!");
static_assert(offsetof(AB_TGF_Track_ProjectileBase_C, EnableIgnoreStaticCollision) == 0x0007CA, "Member 'AB_TGF_Track_ProjectileBase_C::EnableIgnoreStaticCollision' has a wrong offset!");
static_assert(offsetof(AB_TGF_Track_ProjectileBase_C, BaseIgnoreStaticCollisionDistance) == 0x0007D0, "Member 'AB_TGF_Track_ProjectileBase_C::BaseIgnoreStaticCollisionDistance' has a wrong offset!");
static_assert(offsetof(AB_TGF_Track_ProjectileBase_C, NonLyraCharacterMinDistance) == 0x0007D8, "Member 'AB_TGF_Track_ProjectileBase_C::NonLyraCharacterMinDistance' has a wrong offset!");
static_assert(offsetof(AB_TGF_Track_ProjectileBase_C, StaticCollisionRecoverStartPos) == 0x0007E0, "Member 'AB_TGF_Track_ProjectileBase_C::StaticCollisionRecoverStartPos' has a wrong offset!");
static_assert(offsetof(AB_TGF_Track_ProjectileBase_C, StaticCollisionRecoverDistance) == 0x0007F8, "Member 'AB_TGF_Track_ProjectileBase_C::StaticCollisionRecoverDistance' has a wrong offset!");
static_assert(offsetof(AB_TGF_Track_ProjectileBase_C, bIgnoreTargetDeathCheck) == 0x000800, "Member 'AB_TGF_Track_ProjectileBase_C::bIgnoreTargetDeathCheck' has a wrong offset!");
static_assert(offsetof(AB_TGF_Track_ProjectileBase_C, bHasResetState) == 0x000801, "Member 'AB_TGF_Track_ProjectileBase_C::bHasResetState' has a wrong offset!");
static_assert(offsetof(AB_TGF_Track_ProjectileBase_C, New_Transform) == 0x000810, "Member 'AB_TGF_Track_ProjectileBase_C::New_Transform' has a wrong offset!");

}

