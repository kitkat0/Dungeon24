#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: IrisStub

#include "Basic.hpp"

#include "CoreUObject_classes.hpp"


namespace SDK
{

// Class IrisStub.DataStream
// 0x0000 (0x0028 - 0x0028)
class UDataStream final : public UObject
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DataStream">();
	}
	static class UDataStream* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDataStream>();
	}
};
static_assert(alignof(UDataStream) == 0x000008, "Wrong alignment on UDataStream");
static_assert(sizeof(UDataStream) == 0x000028, "Wrong size on UDataStream");

// Class IrisStub.IrisObjectReferencePackageMap
// 0x0000 (0x0028 - 0x0028)
class UIrisObjectReferencePackageMap final : public UObject
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"IrisObjectReferencePackageMap">();
	}
	static class UIrisObjectReferencePackageMap* GetDefaultObj()
	{
		return GetDefaultObjImpl<UIrisObjectReferencePackageMap>();
	}
};
static_assert(alignof(UIrisObjectReferencePackageMap) == 0x000008, "Wrong alignment on UIrisObjectReferencePackageMap");
static_assert(sizeof(UIrisObjectReferencePackageMap) == 0x000028, "Wrong size on UIrisObjectReferencePackageMap");

// Class IrisStub.NetBlobHandler
// 0x0000 (0x0028 - 0x0028)
class UNetBlobHandler : public UObject
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"NetBlobHandler">();
	}
	static class UNetBlobHandler* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNetBlobHandler>();
	}
};
static_assert(alignof(UNetBlobHandler) == 0x000008, "Wrong alignment on UNetBlobHandler");
static_assert(sizeof(UNetBlobHandler) == 0x000028, "Wrong size on UNetBlobHandler");

// Class IrisStub.NetObjectPrioritizerConfig
// 0x0000 (0x0028 - 0x0028)
class UNetObjectPrioritizerConfig : public UObject
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"NetObjectPrioritizerConfig">();
	}
	static class UNetObjectPrioritizerConfig* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNetObjectPrioritizerConfig>();
	}
};
static_assert(alignof(UNetObjectPrioritizerConfig) == 0x000008, "Wrong alignment on UNetObjectPrioritizerConfig");
static_assert(sizeof(UNetObjectPrioritizerConfig) == 0x000028, "Wrong size on UNetObjectPrioritizerConfig");

// Class IrisStub.NetObjectCountLimiterConfig
// 0x0000 (0x0028 - 0x0028)
class UNetObjectCountLimiterConfig : public UNetObjectPrioritizerConfig
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"NetObjectCountLimiterConfig">();
	}
	static class UNetObjectCountLimiterConfig* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNetObjectCountLimiterConfig>();
	}
};
static_assert(alignof(UNetObjectCountLimiterConfig) == 0x000008, "Wrong alignment on UNetObjectCountLimiterConfig");
static_assert(sizeof(UNetObjectCountLimiterConfig) == 0x000028, "Wrong size on UNetObjectCountLimiterConfig");

// Class IrisStub.NetObjectFilterConfig
// 0x0000 (0x0028 - 0x0028)
class UNetObjectFilterConfig final : public UObject
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"NetObjectFilterConfig">();
	}
	static class UNetObjectFilterConfig* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNetObjectFilterConfig>();
	}
};
static_assert(alignof(UNetObjectFilterConfig) == 0x000008, "Wrong alignment on UNetObjectFilterConfig");
static_assert(sizeof(UNetObjectFilterConfig) == 0x000028, "Wrong size on UNetObjectFilterConfig");

// Class IrisStub.NetObjectFilter
// 0x0000 (0x0028 - 0x0028)
class UNetObjectFilter final : public UObject
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"NetObjectFilter">();
	}
	static class UNetObjectFilter* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNetObjectFilter>();
	}
};
static_assert(alignof(UNetObjectFilter) == 0x000008, "Wrong alignment on UNetObjectFilter");
static_assert(sizeof(UNetObjectFilter) == 0x000028, "Wrong size on UNetObjectFilter");

// Class IrisStub.NetObjectPrioritizer
// 0x0000 (0x0028 - 0x0028)
class UNetObjectPrioritizer final : public UObject
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"NetObjectPrioritizer">();
	}
	static class UNetObjectPrioritizer* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNetObjectPrioritizer>();
	}
};
static_assert(alignof(UNetObjectPrioritizer) == 0x000008, "Wrong alignment on UNetObjectPrioritizer");
static_assert(sizeof(UNetObjectPrioritizer) == 0x000028, "Wrong size on UNetObjectPrioritizer");

// Class IrisStub.ReplicationBridge
// 0x0000 (0x0028 - 0x0028)
class UReplicationBridge : public UObject
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ReplicationBridge">();
	}
	static class UReplicationBridge* GetDefaultObj()
	{
		return GetDefaultObjImpl<UReplicationBridge>();
	}
};
static_assert(alignof(UReplicationBridge) == 0x000008, "Wrong alignment on UReplicationBridge");
static_assert(sizeof(UReplicationBridge) == 0x000028, "Wrong size on UReplicationBridge");

// Class IrisStub.ObjectReplicationBridge
// 0x0000 (0x0028 - 0x0028)
class UObjectReplicationBridge : public UReplicationBridge
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ObjectReplicationBridge">();
	}
	static class UObjectReplicationBridge* GetDefaultObj()
	{
		return GetDefaultObjImpl<UObjectReplicationBridge>();
	}
};
static_assert(alignof(UObjectReplicationBridge) == 0x000008, "Wrong alignment on UObjectReplicationBridge");
static_assert(sizeof(UObjectReplicationBridge) == 0x000028, "Wrong size on UObjectReplicationBridge");

// Class IrisStub.SequentialPartialNetBlobHandlerConfig
// 0x0000 (0x0028 - 0x0028)
class USequentialPartialNetBlobHandlerConfig final : public UObject
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SequentialPartialNetBlobHandlerConfig">();
	}
	static class USequentialPartialNetBlobHandlerConfig* GetDefaultObj()
	{
		return GetDefaultObjImpl<USequentialPartialNetBlobHandlerConfig>();
	}
};
static_assert(alignof(USequentialPartialNetBlobHandlerConfig) == 0x000008, "Wrong alignment on USequentialPartialNetBlobHandlerConfig");
static_assert(sizeof(USequentialPartialNetBlobHandlerConfig) == 0x000028, "Wrong size on USequentialPartialNetBlobHandlerConfig");

// Class IrisStub.SequentialPartialNetBlobHandler
// 0x0000 (0x0028 - 0x0028)
class USequentialPartialNetBlobHandler final : public UNetBlobHandler
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SequentialPartialNetBlobHandler">();
	}
	static class USequentialPartialNetBlobHandler* GetDefaultObj()
	{
		return GetDefaultObjImpl<USequentialPartialNetBlobHandler>();
	}
};
static_assert(alignof(USequentialPartialNetBlobHandler) == 0x000008, "Wrong alignment on USequentialPartialNetBlobHandler");
static_assert(sizeof(USequentialPartialNetBlobHandler) == 0x000028, "Wrong size on USequentialPartialNetBlobHandler");

// Class IrisStub.SphereWithOwnerBoostNetObjectPrioritizerConfig
// 0x0000 (0x0028 - 0x0028)
class USphereWithOwnerBoostNetObjectPrioritizerConfig final : public UNetObjectPrioritizerConfig
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SphereWithOwnerBoostNetObjectPrioritizerConfig">();
	}
	static class USphereWithOwnerBoostNetObjectPrioritizerConfig* GetDefaultObj()
	{
		return GetDefaultObjImpl<USphereWithOwnerBoostNetObjectPrioritizerConfig>();
	}
};
static_assert(alignof(USphereWithOwnerBoostNetObjectPrioritizerConfig) == 0x000008, "Wrong alignment on USphereWithOwnerBoostNetObjectPrioritizerConfig");
static_assert(sizeof(USphereWithOwnerBoostNetObjectPrioritizerConfig) == 0x000028, "Wrong size on USphereWithOwnerBoostNetObjectPrioritizerConfig");

}

