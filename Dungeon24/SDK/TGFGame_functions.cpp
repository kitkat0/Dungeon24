#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TGFGame

#include "Basic.hpp"

#include "TGFGame_classes.hpp"
#include "TGFGame_parameters.hpp"


namespace SDK
{

// Function TGFGame.ACEReportService.Lua_ACEReportPlayerInBattle
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// int64                                   TargetOpenId                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   TargetZoneId                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           TargetPlayerName                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APlayerController*                SourcePC                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UACEReportService::Lua_ACEReportPlayerInBattle(int64 TargetOpenId, int32 TargetZoneId, const class FString& TargetPlayerName, class APlayerController* SourcePC)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ACEReportService", "Lua_ACEReportPlayerInBattle");

	Params::ACEReportService_Lua_ACEReportPlayerInBattle Parms{};

	Parms.TargetOpenId = TargetOpenId;
	Parms.TargetZoneId = TargetZoneId;
	Parms.TargetPlayerName = std::move(TargetPlayerName);
	Parms.SourcePC = SourcePC;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.ACEReportService.SendACEReportRequest
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTGFProtoTgfCSReportActionReqReportBodyPublic*Body                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UACEReportService::SendACEReportRequest(class UTGFProtoTgfCSReportActionReqReportBodyPublic* Body)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ACEReportService", "SendACEReportRequest");

	Params::ACEReportService_SendACEReportRequest Parms{};

	Parms.Body = Body;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.ACEService.OnGameLoginSuccess
// (Final, Native, Private)
// Parameters:
// class UTGFEventArgs*                    Args                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UACEService::OnGameLoginSuccess(class UTGFEventArgs* Args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ACEService", "OnGameLoginSuccess");

	Params::ACEService_OnGameLoginSuccess Parms{};

	Parms.Args = Args;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.ACEService.OnGameLogout
// (Final, Native, Private)
// Parameters:
// class UTGFEventArgs*                    Args                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UACEService::OnGameLogout(class UTGFEventArgs* Args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ACEService", "OnGameLogout");

	Params::ACEService_OnGameLogout Parms{};

	Parms.Args = Args;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.ACEService.OnNetworkManagerEnterState
// (Final, Native, Private)
// Parameters:
// class UTGFEventArgs*                    Args                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UACEService::OnNetworkManagerEnterState(class UTGFEventArgs* Args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ACEService", "OnNetworkManagerEnterState");

	Params::ACEService_OnNetworkManagerEnterState Parms{};

	Parms.Args = Args;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.ACEService.OnNetworkManagerExitState
// (Final, Native, Private)
// Parameters:
// class UTGFEventArgs*                    Args                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UACEService::OnNetworkManagerExitState(class UTGFEventArgs* Args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ACEService", "OnNetworkManagerExitState");

	Params::ACEService_OnNetworkManagerExitState Parms{};

	Parms.Args = Args;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.ActivityCenterService.GetActivityCenterData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTGFProtoTgfDUserActivityDataList*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTGFProtoTgfDUserActivityDataList* UActivityCenterService::GetActivityCenterData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ActivityCenterService", "GetActivityCenterData");

	Params::ActivityCenterService_GetActivityCenterData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.ActivityCenterService.IsActivityListEmpty
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UActivityCenterService::IsActivityListEmpty()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ActivityCenterService", "IsActivityListEmpty");

	Params::ActivityCenterService_IsActivityListEmpty Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.ActivityCenterService.SendActivityCenterListReq
// (Final, Native, Public, BlueprintCallable)

void UActivityCenterService::SendActivityCenterListReq()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ActivityCenterService", "SendActivityCenterListReq");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.ActivityRewardService.GetActivityRandomReward
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ActivityId                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UActivityRewardService::GetActivityRandomReward(int32 ActivityId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ActivityRewardService", "GetActivityRandomReward");

	Params::ActivityRewardService_GetActivityRandomReward Parms{};

	Parms.ActivityId = ActivityId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.AlertWindow.OnConfirmButtonClicked
// (Final, Native, Protected, BlueprintCallable)

void UAlertWindow::OnConfirmButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AlertWindow", "OnConfirmButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.AppService.BroadcastGameLogoutEvent
// (Final, Native, Public, BlueprintCallable)

void UAppService::BroadcastGameLogoutEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AppService", "BroadcastGameLogoutEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.AppService.ChangeHallState
// (Final, Native, Public, HasOutParams)
// Parameters:
// EHallState                              InHallState                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAppService::ChangeHallState(const EHallState& InHallState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AppService", "ChangeHallState");

	Params::AppService_ChangeHallState Parms{};

	Parms.InHallState = InHallState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.AppService.CleanWindows
// (Final, Native, Public, BlueprintCallable)

void UAppService::CleanWindows()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AppService", "CleanWindows");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.AppService.GetWardrobeAvatarFromPool
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* UAppService::GetWardrobeAvatarFromPool()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AppService", "GetWardrobeAvatarFromPool");

	Params::AppService_GetWardrobeAvatarFromPool Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.AppService.LogoutGame
// (Final, Native, Public, BlueprintCallable)

void UAppService::LogoutGame()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AppService", "LogoutGame");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.AppService.Lua_OnEnterStateHall
// (Native, Event, Public, BlueprintEvent)

void UAppService::Lua_OnEnterStateHall()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AppService", "Lua_OnEnterStateHall");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.AppService.OnCreateRoleLevelLoaded
// (Final, Native, Public)

void UAppService::OnCreateRoleLevelLoaded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AppService", "OnCreateRoleLevelLoaded");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.AppService.OnCreateRoleLevelShown
// (Final, Native, Public)

void UAppService::OnCreateRoleLevelShown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AppService", "OnCreateRoleLevelShown");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.AppService.OnNetworkManagerEnterState
// (Final, Native, Private)
// Parameters:
// class UTGFEventArgs*                    Args                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAppService::OnNetworkManagerEnterState(class UTGFEventArgs* Args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AppService", "OnNetworkManagerEnterState");

	Params::AppService_OnNetworkManagerEnterState Parms{};

	Parms.Args = Args;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.AppService.OnWardrobeLevelHidden
// (Final, Native, Public)

void UAppService::OnWardrobeLevelHidden()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AppService", "OnWardrobeLevelHidden");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.AppService.OnWardrobeLevelLoaded
// (Final, Native, Public)

void UAppService::OnWardrobeLevelLoaded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AppService", "OnWardrobeLevelLoaded");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.AppService.OnWardrobeLevelShown
// (Final, Native, Public)

void UAppService::OnWardrobeLevelShown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AppService", "OnWardrobeLevelShown");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.AppService.OpenWindow
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           Path                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTGFWindowArgs*                   Args                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsUnique                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUserWidget*                      ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUserWidget* UAppService::OpenWindow(const class FString& Path, class UTGFWindowArgs* Args, bool bIsUnique)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AppService", "OpenWindow");

	Params::AppService_OpenWindow Parms{};

	Parms.Path = std::move(Path);
	Parms.Args = Args;
	Parms.bIsUnique = bIsUnique;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.AppService.RecycleWardrobeAvatar
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           InRecycleActor                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAppService::RecycleWardrobeAvatar(class AActor* InRecycleActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AppService", "RecycleWardrobeAvatar");

	Params::AppService_RecycleWardrobeAvatar Parms{};

	Parms.InRecycleActor = InRecycleActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.AppService.RollbackHallState
// (Final, Native, Public)

void UAppService::RollbackHallState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AppService", "RollbackHallState");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.AppService.SetCreateRoleLevelVisible
// (Final, Native, Public)
// Parameters:
// bool                                    bValue                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAppService::SetCreateRoleLevelVisible(bool bValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AppService", "SetCreateRoleLevelVisible");

	Params::AppService_SetCreateRoleLevelVisible Parms{};

	Parms.bValue = bValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.AppService.SetWardrobeLevelVisible
// (Final, Native, Public)
// Parameters:
// bool                                    bValue                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAppService::SetWardrobeLevelVisible(bool bValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AppService", "SetWardrobeLevelVisible");

	Params::AppService_SetWardrobeLevelVisible Parms{};

	Parms.bValue = bValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.AppService.ShouldShutDownHallGlobalEffects
// (Final, Native, Public)
// Parameters:
// bool                                    bIsOpen                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAppService::ShouldShutDownHallGlobalEffects(bool bIsOpen)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AppService", "ShouldShutDownHallGlobalEffects");

	Params::AppService_ShouldShutDownHallGlobalEffects Parms{};

	Parms.bIsOpen = bIsOpen;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.AppService.SpawnActorToWardrobeLevel
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UClass*                           Param_Class                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Location                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         Rotation                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* UAppService::SpawnActorToWardrobeLevel(class UClass* Param_Class, const struct FVector& Location, const struct FRotator& Rotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AppService", "SpawnActorToWardrobeLevel");

	Params::AppService_SpawnActorToWardrobeLevel Parms{};

	Parms.Param_Class = Param_Class;
	Parms.Location = std::move(Location);
	Parms.Rotation = std::move(Rotation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.AppService.ToggleCurrentLevelCompRegistration
// (Final, Native, Public)
// Parameters:
// bool                                    bValue                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAppService::ToggleCurrentLevelCompRegistration(bool bValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AppService", "ToggleCurrentLevelCompRegistration");

	Params::AppService_ToggleCurrentLevelCompRegistration Parms{};

	Parms.bValue = bValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.AppService.ToggleOptimizationForSceneCapture
// (Final, Native, Public)
// Parameters:
// bool                                    bIsOpen                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAppService::ToggleOptimizationForSceneCapture(bool bIsOpen)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AppService", "ToggleOptimizationForSceneCapture");

	Params::AppService_ToggleOptimizationForSceneCapture Parms{};

	Parms.bIsOpen = bIsOpen;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.AppService.CheckAboutToQuit
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAppService::CheckAboutToQuit() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AppService", "CheckAboutToQuit");

	Params::AppService_CheckAboutToQuit Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.AppService.ConfirmToQuit
// (Final, Native, Public, BlueprintCallable, Const)

void UAppService::ConfirmToQuit() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AppService", "ConfirmToQuit");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.AppService.GetAppState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EAppState                               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EAppState UAppService::GetAppState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AppService", "GetAppState");

	Params::AppService_GetAppState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.AppService.GetHallState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EHallState                              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EHallState UAppService::GetHallState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AppService", "GetHallState");

	Params::AppService_GetHallState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.AppService.LoadHall
// (Final, Native, Public, BlueprintCallable, Const)

void UAppService::LoadHall() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AppService", "LoadHall");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TGFNetworkManager.OnGameLoginFailed
// (Final, Native, Private)
// Parameters:
// class UTGFEventArgs*                    Args                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTGFNetworkManager::OnGameLoginFailed(class UTGFEventArgs* Args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TGFNetworkManager", "OnGameLoginFailed");

	Params::TGFNetworkManager_OnGameLoginFailed Parms{};

	Parms.Args = Args;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TGFNetworkManager.OnGameLoginSuccess
// (Final, Native, Private)
// Parameters:
// class UTGFEventArgs*                    Args                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTGFNetworkManager::OnGameLoginSuccess(class UTGFEventArgs* Args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TGFNetworkManager", "OnGameLoginSuccess");

	Params::TGFNetworkManager_OnGameLoginSuccess Parms{};

	Parms.Args = Args;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TGFNetworkManager.OnGameLogout
// (Final, Native, Private)
// Parameters:
// class UTGFEventArgs*                    Args                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTGFNetworkManager::OnGameLogout(class UTGFEventArgs* Args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TGFNetworkManager", "OnGameLogout");

	Params::TGFNetworkManager_OnGameLogout Parms{};

	Parms.Args = Args;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TGFNetworkManager.OnGamePreLoginFailed
// (Final, Native, Private)
// Parameters:
// class UTGFEventArgs*                    Args                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTGFNetworkManager::OnGamePreLoginFailed(class UTGFEventArgs* Args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TGFNetworkManager", "OnGamePreLoginFailed");

	Params::TGFNetworkManager_OnGamePreLoginFailed Parms{};

	Parms.Args = Args;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TGFNetworkManager.OnGamePreLoginSuccess
// (Final, Native, Private)
// Parameters:
// class UTGFEventArgs*                    Args                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTGFNetworkManager::OnGamePreLoginSuccess(class UTGFEventArgs* Args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TGFNetworkManager", "OnGamePreLoginSuccess");

	Params::TGFNetworkManager_OnGamePreLoginSuccess Parms{};

	Parms.Args = Args;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TGFNetworkManager.OnSyncPlayerInfoSuccess
// (Final, Native, Private)
// Parameters:
// class UTGFEventArgs*                    Args                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTGFNetworkManager::OnSyncPlayerInfoSuccess(class UTGFEventArgs* Args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TGFNetworkManager", "OnSyncPlayerInfoSuccess");

	Params::TGFNetworkManager_OnSyncPlayerInfoSuccess Parms{};

	Parms.Args = Args;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.AsyncAction_ShowAlert.ShowAlert
// (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             Message                                                (Parm, NativeAccessSpecifierPublic)
// class FText                             ConfirmText                                            (Parm, NativeAccessSpecifierPublic)
// class UAsyncAction_ShowAlert*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAsyncAction_ShowAlert* UAsyncAction_ShowAlert::ShowAlert(class UObject* InWorldContextObject, const class FText& Message, const class FText& ConfirmText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AsyncAction_ShowAlert", "ShowAlert");

	Params::AsyncAction_ShowAlert_ShowAlert Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.Message = std::move(Message);
	Parms.ConfirmText = std::move(ConfirmText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.AsyncAction_ShowConfirm.ShowConfirm
// (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             Message                                                (Parm, NativeAccessSpecifierPublic)
// class FText                             ConfirmText                                            (Parm, NativeAccessSpecifierPublic)
// class FText                             CancelText                                             (Parm, NativeAccessSpecifierPublic)
// class UObject*                          Context                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAsyncAction_ShowConfirm*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAsyncAction_ShowConfirm* UAsyncAction_ShowConfirm::ShowConfirm(class UObject* InWorldContextObject, const class FText& Message, const class FText& ConfirmText, const class FText& CancelText, class UObject* Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AsyncAction_ShowConfirm", "ShowConfirm");

	Params::AsyncAction_ShowConfirm_ShowConfirm Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.Message = std::move(Message);
	Parms.ConfirmText = std::move(ConfirmText);
	Parms.CancelText = std::move(CancelText);
	Parms.Context = Context;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.BannerSubsystem.GetBannerConfigList
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct FBannerConfig>            BannerConfigList                                       (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBannerSubsystem::GetBannerConfigList(TArray<struct FBannerConfig>* BannerConfigList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BannerSubsystem", "GetBannerConfigList");

	Params::BannerSubsystem_GetBannerConfigList Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (BannerConfigList != nullptr)
		*BannerConfigList = std::move(Parms.BannerConfigList);

	return Parms.ReturnValue;
}


// Function TGFGame.TradeSaleService.GetSaleableItems
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   MarketId                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<ETGFProtoTgfEnGearEquipSubType>  Types                                                  (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// ETGFProtoTgfEnItemRarity                Rarity                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    SortByPriceUp                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UTradeSaleItem*>           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UTradeSaleItem*> UTradeSaleService::GetSaleableItems(const int32 MarketId, const TArray<ETGFProtoTgfEnGearEquipSubType>& Types, ETGFProtoTgfEnItemRarity Rarity, bool SortByPriceUp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeSaleService", "GetSaleableItems");

	Params::TradeSaleService_GetSaleableItems Parms{};

	Parms.MarketId = MarketId;
	Parms.Types = std::move(Types);
	Parms.Rarity = Rarity;
	Parms.SortByPriceUp = SortByPriceUp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TradeSaleService.OnGameLogout
// (Final, Native, Private)
// Parameters:
// class UTGFEventArgs*                    Args                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTradeSaleService::OnGameLogout(class UTGFEventArgs* Args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeSaleService", "OnGameLogout");

	Params::TradeSaleService_OnGameLogout Parms{};

	Parms.Args = Args;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TradeSaleService.PublishAuctionOrder
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   MarketId                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTGFItem                         SaleItem                                               (Parm, NativeAccessSpecifierPublic)
// int32                                   Price                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CostType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   FixedPrice                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTradeSaleService::PublishAuctionOrder(int32 MarketId, const struct FTGFItem& SaleItem, int32 Price, int32 CostType, int32 FixedPrice)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeSaleService", "PublishAuctionOrder");

	Params::TradeSaleService_PublishAuctionOrder Parms{};

	Parms.MarketId = MarketId;
	Parms.SaleItem = std::move(SaleItem);
	Parms.Price = Price;
	Parms.CostType = CostType;
	Parms.FixedPrice = FixedPrice;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.UnlockService.GetModuleBannedMessage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InModuleId                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UUnlockService::GetModuleBannedMessage(int32 InModuleId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnlockService", "GetModuleBannedMessage");

	Params::UnlockService_GetModuleBannedMessage Parms{};

	Parms.InModuleId = InModuleId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.UnlockService.GetModuleCircularLockMessage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InModuleId                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UUnlockService::GetModuleCircularLockMessage(int32 InModuleId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnlockService", "GetModuleCircularLockMessage");

	Params::UnlockService_GetModuleCircularLockMessage Parms{};

	Parms.InModuleId = InModuleId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.UnlockService.GetModuleCircularNextTimeMessage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InModuleId                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UUnlockService::GetModuleCircularNextTimeMessage(int32 InModuleId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnlockService", "GetModuleCircularNextTimeMessage");

	Params::UnlockService_GetModuleCircularNextTimeMessage Parms{};

	Parms.InModuleId = InModuleId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.UnlockService.GetModuleGlobalForbidMessage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InModuleId                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UUnlockService::GetModuleGlobalForbidMessage(int32 InModuleId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnlockService", "GetModuleGlobalForbidMessage");

	Params::UnlockService_GetModuleGlobalForbidMessage Parms{};

	Parms.InModuleId = InModuleId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.UnlockService.GetModuleLockMessage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InModuleId                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UUnlockService::GetModuleLockMessage(int32 InModuleId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnlockService", "GetModuleLockMessage");

	Params::UnlockService_GetModuleLockMessage Parms{};

	Parms.InModuleId = InModuleId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.UnlockService.GetModuleNextTimeMessage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InModuleId                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UUnlockService::GetModuleNextTimeMessage(int32 InModuleId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnlockService", "GetModuleNextTimeMessage");

	Params::UnlockService_GetModuleNextTimeMessage Parms{};

	Parms.InModuleId = InModuleId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.UnlockService.GetModuleTimeLockMessage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InModuleId                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UUnlockService::GetModuleTimeLockMessage(int32 InModuleId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnlockService", "GetModuleTimeLockMessage");

	Params::UnlockService_GetModuleTimeLockMessage Parms{};

	Parms.InModuleId = InModuleId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.UnlockService.IsModuleAllowed
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InModuleId                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsAlert                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsToast                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnlockService::IsModuleAllowed(int32 InModuleId, bool bIsAlert, bool bIsToast)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnlockService", "IsModuleAllowed");

	Params::UnlockService_IsModuleAllowed Parms{};

	Parms.InModuleId = InModuleId;
	Parms.bIsAlert = bIsAlert;
	Parms.bIsToast = bIsToast;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.UnlockService.IsModuleBanned
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InModuleId                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsAlert                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsToast                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnlockService::IsModuleBanned(int32 InModuleId, bool bIsAlert, bool bIsToast)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnlockService", "IsModuleBanned");

	Params::UnlockService_IsModuleBanned Parms{};

	Parms.InModuleId = InModuleId;
	Parms.bIsAlert = bIsAlert;
	Parms.bIsToast = bIsToast;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.UnlockService.IsModuleCircularLock
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InModuleId                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsAlert                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsToast                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnlockService::IsModuleCircularLock(int32 InModuleId, bool bIsAlert, bool bIsToast)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnlockService", "IsModuleCircularLock");

	Params::UnlockService_IsModuleCircularLock Parms{};

	Parms.InModuleId = InModuleId;
	Parms.bIsAlert = bIsAlert;
	Parms.bIsToast = bIsToast;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.UnlockService.IsModuleGlobalForbid
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InModuleId                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsAlert                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsToast                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnlockService::IsModuleGlobalForbid(int32 InModuleId, bool bIsAlert, bool bIsToast)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnlockService", "IsModuleGlobalForbid");

	Params::UnlockService_IsModuleGlobalForbid Parms{};

	Parms.InModuleId = InModuleId;
	Parms.bIsAlert = bIsAlert;
	Parms.bIsToast = bIsToast;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.UnlockService.IsModuleLock
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InModuleId                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsAlert                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsToast                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnlockService::IsModuleLock(int32 InModuleId, bool bIsAlert, bool bIsToast)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnlockService", "IsModuleLock");

	Params::UnlockService_IsModuleLock Parms{};

	Parms.InModuleId = InModuleId;
	Parms.bIsAlert = bIsAlert;
	Parms.bIsToast = bIsToast;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.UnlockService.IsModuleTimeLock
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InModuleId                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsAlert                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsToast                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnlockService::IsModuleTimeLock(int32 InModuleId, bool bIsAlert, bool bIsToast)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnlockService", "IsModuleTimeLock");

	Params::UnlockService_IsModuleTimeLock Parms{};

	Parms.InModuleId = InModuleId;
	Parms.bIsAlert = bIsAlert;
	Parms.bIsToast = bIsToast;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.UnlockService.ShowGameKickedAlert
// (Final, Native, Public, BlueprintCallable)

void UUnlockService::ShowGameKickedAlert()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnlockService", "ShowGameKickedAlert");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.VelocityService.CdnHTTPRequest
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           URL                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UVelocityService::CdnHTTPRequest(const class FString& URL)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VelocityService", "CdnHTTPRequest");

	Params::VelocityService_CdnHTTPRequest Parms{};

	Parms.URL = std::move(URL);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.VelocityService.ClosePersistentSend
// (Final, Native, Public, BlueprintCallable)

void UVelocityService::ClosePersistentSend()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VelocityService", "ClosePersistentSend");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.VelocityService.GetCurSelectRegionData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FTGFRegionData                   ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FTGFRegionData UVelocityService::GetCurSelectRegionData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VelocityService", "GetCurSelectRegionData");

	Params::VelocityService_GetCurSelectRegionData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.VelocityService.GetLatencyByRegionId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           RegionId                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UVelocityService::GetLatencyByRegionId(const class FString& RegionId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VelocityService", "GetLatencyByRegionId");

	Params::VelocityService_GetLatencyByRegionId Parms{};

	Parms.RegionId = std::move(RegionId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.VelocityService.GetRegionDetailData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FTGFRegionDetailData       ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FTGFRegionDetailData UVelocityService::GetRegionDetailData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VelocityService", "GetRegionDetailData");

	Params::VelocityService_GetRegionDetailData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.VelocityService.OpenPersistentSend
// (Final, Native, Public, BlueprintCallable)

void UVelocityService::OpenPersistentSend()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VelocityService", "OpenPersistentSend");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.VelocityService.SetCurSelectRegionData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FTGFRegionData                   RegionData                                             (Parm, NativeAccessSpecifierPublic)

void UVelocityService::SetCurSelectRegionData(const struct FTGFRegionData& RegionData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VelocityService", "SetCurSelectRegionData");

	Params::VelocityService_SetCurSelectRegionData Parms{};

	Parms.RegionData = std::move(RegionData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.BattlePassRewardService.IsBattlePassUnlocked
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBattlePassRewardService::IsBattlePassUnlocked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassRewardService", "IsBattlePassUnlocked");

	Params::BattlePassRewardService_IsBattlePassUnlocked Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.BattlePassRewardService.Lua_Initialized
// (Native, Event, Public, BlueprintEvent)

void UBattlePassRewardService::Lua_Initialized()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassRewardService", "Lua_Initialized");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.BattlePassRewardService.OnActivityCenterListResponse
// (Final, Native, Private)
// Parameters:
// class UTGFEventArgs*                    Args                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBattlePassRewardService::OnActivityCenterListResponse(class UTGFEventArgs* Args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassRewardService", "OnActivityCenterListResponse");

	Params::BattlePassRewardService_OnActivityCenterListResponse Parms{};

	Parms.Args = Args;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.BattlePassRewardService.OnActivityCenterUpdate
// (Final, Native, Private)
// Parameters:
// class UTGFEventArgs*                    Args                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBattlePassRewardService::OnActivityCenterUpdate(class UTGFEventArgs* Args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassRewardService", "OnActivityCenterUpdate");

	Params::BattlePassRewardService_OnActivityCenterUpdate Parms{};

	Parms.Args = Args;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.BattlePassRewardService.SendBuyPassportReq
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InActivityId                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBattlePassRewardService::SendBuyPassportReq(int32 InActivityId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassRewardService", "SendBuyPassportReq");

	Params::BattlePassRewardService_SendBuyPassportReq Parms{};

	Parms.InActivityId = InActivityId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.BattlePassRewardService.SendReceiveCycleRewardsReq
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   InActivityId                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InGradeQty                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FTGFItemOffset>           InRewardItems                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UBattlePassRewardService::SendReceiveCycleRewardsReq(int32 InActivityId, int32 InGradeQty, const TArray<struct FTGFItemOffset>& InRewardItems)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassRewardService", "SendReceiveCycleRewardsReq");

	Params::BattlePassRewardService_SendReceiveCycleRewardsReq Parms{};

	Parms.InActivityId = InActivityId;
	Parms.InGradeQty = InGradeQty;
	Parms.InRewardItems = std::move(InRewardItems);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.BattlePassRewardService.SendReceiveRewardsReq
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   InActivityId                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InRewardId                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FTGFItemOffset>           InRewardItems                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UBattlePassRewardService::SendReceiveRewardsReq(int32 InActivityId, int32 InRewardId, const TArray<struct FTGFItemOffset>& InRewardItems)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassRewardService", "SendReceiveRewardsReq");

	Params::BattlePassRewardService_SendReceiveRewardsReq Parms{};

	Parms.InActivityId = InActivityId;
	Parms.InRewardId = InRewardId;
	Parms.InRewardItems = std::move(InRewardItems);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.BattlePassTaskService.Lua_Initialized
// (Native, Event, Public, BlueprintEvent)

void UBattlePassTaskService::Lua_Initialized()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassTaskService", "Lua_Initialized");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.BattlePassTaskService.SendRefreshQuestReq
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InActivityId                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InQuestId                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBattlePassTaskService::SendRefreshQuestReq(int32 InActivityId, int32 InQuestId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassTaskService", "SendRefreshQuestReq");

	Params::BattlePassTaskService_SendRefreshQuestReq Parms{};

	Parms.InActivityId = InActivityId;
	Parms.InQuestId = InQuestId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.BattlePassTaskService.SetDailyTaskToastShowed
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bShowed                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBattlePassTaskService::SetDailyTaskToastShowed(bool bShowed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassTaskService", "SetDailyTaskToastShowed");

	Params::BattlePassTaskService_SetDailyTaskToastShowed Parms{};

	Parms.bShowed = bShowed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.BattlePassTaskService.GetDailyTaskToastShowed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBattlePassTaskService::GetDailyTaskToastShowed() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassTaskService", "GetDailyTaskToastShowed");

	Params::BattlePassTaskService_GetDailyTaskToastShowed Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.UserRoleCacheService.GetGlobalUserInfo
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FGlobalUserKey                   GlobalUserKey                                          (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UGlobalUserInfo*                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UGlobalUserInfo* UUserRoleCacheService::GetGlobalUserInfo(const struct FGlobalUserKey& GlobalUserKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UserRoleCacheService", "GetGlobalUserInfo");

	Params::UserRoleCacheService_GetGlobalUserInfo Parms{};

	Parms.GlobalUserKey = std::move(GlobalUserKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.UserRoleCacheService.GetRoleInfoByKey
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FRoleKey                         RoleKey                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bMustValid                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class URoleInfo*                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class URoleInfo* UUserRoleCacheService::GetRoleInfoByKey(const struct FRoleKey& RoleKey, bool bMustValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UserRoleCacheService", "GetRoleInfoByKey");

	Params::UserRoleCacheService_GetRoleInfoByKey Parms{};

	Parms.RoleKey = std::move(RoleKey);
	Parms.bMustValid = bMustValid;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.UserRoleCacheService.GetRoleInfoCallbackHandler
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FRoleKey                         RoleKey                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsSubscribe                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UUserRoleCacheService::GetRoleInfoCallbackHandler(const struct FRoleKey& RoleKey, bool bIsSubscribe)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UserRoleCacheService", "GetRoleInfoCallbackHandler");

	Params::UserRoleCacheService_GetRoleInfoCallbackHandler Parms{};

	Parms.RoleKey = std::move(RoleKey);
	Parms.bIsSubscribe = bIsSubscribe;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.UserRoleCacheService.GetRoleInfoMapByKeySet
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TSet<struct FRoleKey>                   RoleKeySet                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    bMustValid                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bOutAllValid                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TMap<struct FRoleKey, class URoleInfo*> ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

TMap<struct FRoleKey, class URoleInfo*> UUserRoleCacheService::GetRoleInfoMapByKeySet(const TSet<struct FRoleKey>& RoleKeySet, bool bMustValid, bool* bOutAllValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UserRoleCacheService", "GetRoleInfoMapByKeySet");

	Params::UserRoleCacheService_GetRoleInfoMapByKeySet Parms{};

	Parms.RoleKeySet = std::move(RoleKeySet);
	Parms.bMustValid = bMustValid;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bOutAllValid != nullptr)
		*bOutAllValid = Parms.bOutAllValid;

	return Parms.ReturnValue;
}


// Function TGFGame.UserRoleCacheService.GetRoleInfoMapCallbackHandler
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TSet<struct FRoleKey>                   RoleKeySet                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UUserRoleCacheService::GetRoleInfoMapCallbackHandler(const TSet<struct FRoleKey>& RoleKeySet)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UserRoleCacheService", "GetRoleInfoMapCallbackHandler");

	Params::UserRoleCacheService_GetRoleInfoMapCallbackHandler Parms{};

	Parms.RoleKeySet = std::move(RoleKeySet);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.UserRoleCacheService.GetUserInfoByKey
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FUserKey                         UserKey                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bMustValid                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUserInfo*                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUserInfo* UUserRoleCacheService::GetUserInfoByKey(const struct FUserKey& UserKey, bool bMustValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UserRoleCacheService", "GetUserInfoByKey");

	Params::UserRoleCacheService_GetUserInfoByKey Parms{};

	Parms.UserKey = std::move(UserKey);
	Parms.bMustValid = bMustValid;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.UserRoleCacheService.GetUserInfoCallbackHandler
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FUserKey                         UserKey                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsSubscribe                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UUserRoleCacheService::GetUserInfoCallbackHandler(const struct FUserKey& UserKey, bool bIsSubscribe)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UserRoleCacheService", "GetUserInfoCallbackHandler");

	Params::UserRoleCacheService_GetUserInfoCallbackHandler Parms{};

	Parms.UserKey = std::move(UserKey);
	Parms.bIsSubscribe = bIsSubscribe;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.UserRoleCacheService.GetUserInfoMapByKeySet
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TSet<struct FUserKey>                   UserKeySet                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    bMustValid                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bOutAllValid                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TMap<struct FUserKey, class UUserInfo*> ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

TMap<struct FUserKey, class UUserInfo*> UUserRoleCacheService::GetUserInfoMapByKeySet(const TSet<struct FUserKey>& UserKeySet, bool bMustValid, bool* bOutAllValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UserRoleCacheService", "GetUserInfoMapByKeySet");

	Params::UserRoleCacheService_GetUserInfoMapByKeySet Parms{};

	Parms.UserKeySet = std::move(UserKeySet);
	Parms.bMustValid = bMustValid;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bOutAllValid != nullptr)
		*bOutAllValid = Parms.bOutAllValid;

	return Parms.ReturnValue;
}


// Function TGFGame.UserRoleCacheService.GetUserInfoMapCallbackHandler
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TSet<struct FUserKey>                   UserKeySet                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UUserRoleCacheService::GetUserInfoMapCallbackHandler(const TSet<struct FUserKey>& UserKeySet)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UserRoleCacheService", "GetUserInfoMapCallbackHandler");

	Params::UserRoleCacheService_GetUserInfoMapCallbackHandler Parms{};

	Parms.UserKeySet = std::move(UserKeySet);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.UserRoleCacheService.Lua_AppearanceCaptureFinish
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// int64                                   RoleGuid                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          AppearanceTexture                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUserRoleCacheService::Lua_AppearanceCaptureFinish(int64 RoleGuid, class UObject* AppearanceTexture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UserRoleCacheService", "Lua_AppearanceCaptureFinish");

	Params::UserRoleCacheService_Lua_AppearanceCaptureFinish Parms{};

	Parms.RoleGuid = RoleGuid;
	Parms.AppearanceTexture = AppearanceTexture;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.UserRoleCacheService.Lua_ExecuteUpdateEvent
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// int64                                   UpdateHandler                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUserRoleCacheService::Lua_ExecuteUpdateEvent(int64 UpdateHandler)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UserRoleCacheService", "Lua_ExecuteUpdateEvent");

	Params::UserRoleCacheService_Lua_ExecuteUpdateEvent Parms{};

	Parms.UpdateHandler = UpdateHandler;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.UserRoleCacheService.Lua_Initialized
// (Native, Event, Public, BlueprintEvent)

void UUserRoleCacheService::Lua_Initialized()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UserRoleCacheService", "Lua_Initialized");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.UserRoleCacheService.OnAppearanceTextureCaptureFinish
// (Final, Native, Public)
// Parameters:
// int64                                   RoleGuid                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          SlateBrush                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUserRoleCacheService::OnAppearanceTextureCaptureFinish(int64 RoleGuid, class UObject* SlateBrush)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UserRoleCacheService", "OnAppearanceTextureCaptureFinish");

	Params::UserRoleCacheService_OnAppearanceTextureCaptureFinish Parms{};

	Parms.RoleGuid = RoleGuid;
	Parms.SlateBrush = SlateBrush;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.UserRoleCacheService.OnHostPlayerEquipChange
// (Final, Native, Public)
// Parameters:
// class UTGFEventArgs*                    Args                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUserRoleCacheService::OnHostPlayerEquipChange(class UTGFEventArgs* Args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UserRoleCacheService", "OnHostPlayerEquipChange");

	Params::UserRoleCacheService_OnHostPlayerEquipChange Parms{};

	Parms.Args = Args;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.UserRoleCacheService.OnUpdateItemsNoti
// (Final, Native, Public)
// Parameters:
// class UTGFEventArgs*                    Args                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUserRoleCacheService::OnUpdateItemsNoti(class UTGFEventArgs* Args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UserRoleCacheService", "OnUpdateItemsNoti");

	Params::UserRoleCacheService_OnUpdateItemsNoti Parms{};

	Parms.Args = Args;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.UserRoleCacheService.RemoveUpdateHandler
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   UpdateHandler                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUserRoleCacheService::RemoveUpdateHandler(int64 UpdateHandler)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UserRoleCacheService", "RemoveUpdateHandler");

	Params::UserRoleCacheService_RemoveUpdateHandler Parms{};

	Parms.UpdateHandler = UpdateHandler;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.UserRoleCacheService.ResetAllRoleInfo
// (Final, Native, Public, BlueprintCallable)

void UUserRoleCacheService::ResetAllRoleInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UserRoleCacheService", "ResetAllRoleInfo");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.UserRoleCacheService.ResetAllUserInfo
// (Final, Native, Public, BlueprintCallable)

void UUserRoleCacheService::ResetAllUserInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UserRoleCacheService", "ResetAllUserInfo");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.UserRoleCacheService.ResetRoleInfoByKey
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FRoleKey                         RoleKey                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUserRoleCacheService::ResetRoleInfoByKey(const struct FRoleKey& RoleKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UserRoleCacheService", "ResetRoleInfoByKey");

	Params::UserRoleCacheService_ResetRoleInfoByKey Parms{};

	Parms.RoleKey = std::move(RoleKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.UserRoleCacheService.ResetUserInfoByKey
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FUserKey                         UserKey                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUserRoleCacheService::ResetUserInfoByKey(const struct FUserKey& UserKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UserRoleCacheService", "ResetUserInfoByKey");

	Params::UserRoleCacheService_ResetUserInfoByKey Parms{};

	Parms.UserKey = std::move(UserKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.UserRoleCacheService.GetSelfRoleKey
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FRoleKey                         ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FRoleKey UUserRoleCacheService::GetSelfRoleKey() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UserRoleCacheService", "GetSelfRoleKey");

	Params::UserRoleCacheService_GetSelfRoleKey Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.UserRoleCacheService.GetSelfUserKey
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FUserKey                         ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FUserKey UUserRoleCacheService::GetSelfUserKey() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UserRoleCacheService", "GetSelfUserKey");

	Params::UserRoleCacheService_GetSelfUserKey Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TGFBattlePassTaskInfo.AddProgressValue
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ProgressType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTGFBattlePassTaskInfo::AddProgressValue(int32 ProgressType, int64 Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TGFBattlePassTaskInfo", "AddProgressValue");

	Params::TGFBattlePassTaskInfo_AddProgressValue Parms{};

	Parms.ProgressType = ProgressType;
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TGFBattlePassTaskInfo.ClearProgressValue
// (Final, Native, Public, BlueprintCallable)

void UTGFBattlePassTaskInfo::ClearProgressValue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TGFBattlePassTaskInfo", "ClearProgressValue");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.UnlockBlueprintLibrary.GetModuleBannedMessage
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ModuleId                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UUnlockBlueprintLibrary::GetModuleBannedMessage(int32 ModuleId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnlockBlueprintLibrary", "GetModuleBannedMessage");

	Params::UnlockBlueprintLibrary_GetModuleBannedMessage Parms{};

	Parms.ModuleId = ModuleId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.UnlockBlueprintLibrary.GetModuleCircularNextTimeMessage
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ModuleId                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UUnlockBlueprintLibrary::GetModuleCircularNextTimeMessage(int32 ModuleId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnlockBlueprintLibrary", "GetModuleCircularNextTimeMessage");

	Params::UnlockBlueprintLibrary_GetModuleCircularNextTimeMessage Parms{};

	Parms.ModuleId = ModuleId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.UnlockBlueprintLibrary.GetModuleGlobalForbidMessage
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ModuleId                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UUnlockBlueprintLibrary::GetModuleGlobalForbidMessage(int32 ModuleId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnlockBlueprintLibrary", "GetModuleGlobalForbidMessage");

	Params::UnlockBlueprintLibrary_GetModuleGlobalForbidMessage Parms{};

	Parms.ModuleId = ModuleId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.UnlockBlueprintLibrary.GetModuleLockMessage
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ModuleId                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UUnlockBlueprintLibrary::GetModuleLockMessage(int32 ModuleId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnlockBlueprintLibrary", "GetModuleLockMessage");

	Params::UnlockBlueprintLibrary_GetModuleLockMessage Parms{};

	Parms.ModuleId = ModuleId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.UnlockBlueprintLibrary.GetModuleNextTimeMessage
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ModuleId                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UUnlockBlueprintLibrary::GetModuleNextTimeMessage(int32 ModuleId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnlockBlueprintLibrary", "GetModuleNextTimeMessage");

	Params::UnlockBlueprintLibrary_GetModuleNextTimeMessage Parms{};

	Parms.ModuleId = ModuleId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.UnlockBlueprintLibrary.GetModuleTimeLockMessage
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ModuleId                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UUnlockBlueprintLibrary::GetModuleTimeLockMessage(int32 ModuleId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnlockBlueprintLibrary", "GetModuleTimeLockMessage");

	Params::UnlockBlueprintLibrary_GetModuleTimeLockMessage Parms{};

	Parms.ModuleId = ModuleId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.UnlockBlueprintLibrary.IsModuleAllowed
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ModuleId                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsAlert                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsToast                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnlockBlueprintLibrary::IsModuleAllowed(int32 ModuleId, bool bIsAlert, bool bIsToast)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnlockBlueprintLibrary", "IsModuleAllowed");

	Params::UnlockBlueprintLibrary_IsModuleAllowed Parms{};

	Parms.ModuleId = ModuleId;
	Parms.bIsAlert = bIsAlert;
	Parms.bIsToast = bIsToast;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.UnlockBlueprintLibrary.IsModuleBanned
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ModuleId                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsAlert                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsToast                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnlockBlueprintLibrary::IsModuleBanned(int32 ModuleId, bool bIsAlert, bool bIsToast)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnlockBlueprintLibrary", "IsModuleBanned");

	Params::UnlockBlueprintLibrary_IsModuleBanned Parms{};

	Parms.ModuleId = ModuleId;
	Parms.bIsAlert = bIsAlert;
	Parms.bIsToast = bIsToast;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.UnlockBlueprintLibrary.IsModuleGlobalForbid
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ModuleId                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsAlert                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsToast                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnlockBlueprintLibrary::IsModuleGlobalForbid(int32 ModuleId, bool bIsAlert, bool bIsToast)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnlockBlueprintLibrary", "IsModuleGlobalForbid");

	Params::UnlockBlueprintLibrary_IsModuleGlobalForbid Parms{};

	Parms.ModuleId = ModuleId;
	Parms.bIsAlert = bIsAlert;
	Parms.bIsToast = bIsToast;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.UnlockBlueprintLibrary.IsModuleLock
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ModuleId                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsAlert                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsToast                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnlockBlueprintLibrary::IsModuleLock(int32 ModuleId, bool bIsAlert, bool bIsToast)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnlockBlueprintLibrary", "IsModuleLock");

	Params::UnlockBlueprintLibrary_IsModuleLock Parms{};

	Parms.ModuleId = ModuleId;
	Parms.bIsAlert = bIsAlert;
	Parms.bIsToast = bIsToast;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.UnlockBlueprintLibrary.IsModuleTimeLock
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ModuleId                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsAlert                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsToast                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnlockBlueprintLibrary::IsModuleTimeLock(int32 ModuleId, bool bIsAlert, bool bIsToast)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnlockBlueprintLibrary", "IsModuleTimeLock");

	Params::UnlockBlueprintLibrary_IsModuleTimeLock Parms{};

	Parms.ModuleId = ModuleId;
	Parms.bIsAlert = bIsAlert;
	Parms.bIsToast = bIsToast;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.BattleService.StartBeginnerLevel
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             MapName                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    EnterFromHall                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBattleService::StartBeginnerLevel(class FName MapName, bool EnterFromHall)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleService", "StartBeginnerLevel");

	Params::BattleService_StartBeginnerLevel Parms{};

	Parms.MapName = MapName;
	Parms.EnterFromHall = EnterFromHall;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.BattleService.StartLocalBattle
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             MapName                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBattleService::StartLocalBattle(class FName MapName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleService", "StartLocalBattle");

	Params::BattleService_StartLocalBattle Parms{};

	Parms.MapName = MapName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.BattleService.StartLocalFlawlessBattle
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             MapName                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Flawless                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   WinCount                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    RewardsAvailable                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBattleService::StartLocalFlawlessBattle(class FName MapName, bool Flawless, int32 WinCount, bool RewardsAvailable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleService", "StartLocalFlawlessBattle");

	Params::BattleService_StartLocalFlawlessBattle Parms{};

	Parms.MapName = MapName;
	Parms.Flawless = Flawless;
	Parms.WinCount = WinCount;
	Parms.RewardsAvailable = RewardsAvailable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.UserInfo.GetIsExpired
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUserInfo::GetIsExpired() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UserInfo", "GetIsExpired");

	Params::UserInfo_GetIsExpired Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.UserInfo.GetIsUnregistered
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUserInfo::GetIsUnregistered() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UserInfo", "GetIsUnregistered");

	Params::UserInfo_GetIsUnregistered Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.UserInfo.GetIsValid
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUserInfo::GetIsValid() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UserInfo", "GetIsValid");

	Params::UserInfo_GetIsValid Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.UserInfo.GetNickname
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UUserInfo::GetNickname() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UserInfo", "GetNickname");

	Params::UserInfo_GetNickname Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.UserInfo.GetTimeOffline
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UUserInfo::GetTimeOffline() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UserInfo", "GetTimeOffline");

	Params::UserInfo_GetTimeOffline Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.BlacksmithService.DismantleEquipments
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct FTGFItem>                 InEquipments                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UBlacksmithService::DismantleEquipments(const TArray<struct FTGFItem>& InEquipments)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BlacksmithService", "DismantleEquipments");

	Params::BlacksmithService_DismantleEquipments Parms{};

	Parms.InEquipments = std::move(InEquipments);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.BlacksmithService.GetRepairMaterialListEntry
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct FTGFItem>                 Equipments                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    bCanRepair                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UTGFItemBarData*>          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UTGFItemBarData*> UBlacksmithService::GetRepairMaterialListEntry(const TArray<struct FTGFItem>& Equipments, bool* bCanRepair)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BlacksmithService", "GetRepairMaterialListEntry");

	Params::BlacksmithService_GetRepairMaterialListEntry Parms{};

	Parms.Equipments = std::move(Equipments);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bCanRepair != nullptr)
		*bCanRepair = Parms.bCanRepair;

	return Parms.ReturnValue;
}


// Function TGFGame.BlacksmithService.Lua_Initialized
// (Native, Event, Public, BlueprintEvent)

void UBlacksmithService::Lua_Initialized()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BlacksmithService", "Lua_Initialized");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.BlacksmithService.OnSwitchForgeTab
// (Final, Native, Private)
// Parameters:
// class UTGFEventArgs*                    Args                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBlacksmithService::OnSwitchForgeTab(class UTGFEventArgs* Args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BlacksmithService", "OnSwitchForgeTab");

	Params::BlacksmithService_OnSwitchForgeTab Parms{};

	Parms.Args = Args;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.BlacksmithService.SendGearRepairReq
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct FTGFItem>                 InEquipments                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UBlacksmithService::SendGearRepairReq(const TArray<struct FTGFItem>& InEquipments)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BlacksmithService", "SendGearRepairReq");

	Params::BlacksmithService_SendGearRepairReq Parms{};

	Parms.InEquipments = std::move(InEquipments);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.BlacksmithService.SetPendingTabId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBlacksmithService::SetPendingTabId(int32 Param_Index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BlacksmithService", "SetPendingTabId");

	Params::BlacksmithService_SetPendingTabId Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.BlacksmithService.TurnDismantleState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bIsOpen                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETgfEquipQuality                        Quality                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBlacksmithService::TurnDismantleState(bool bIsOpen, ETgfEquipQuality Quality)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BlacksmithService", "TurnDismantleState");

	Params::BlacksmithService_TurnDismantleState Parms{};

	Parms.bIsOpen = bIsOpen;
	Parms.Quality = Quality;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.BlacksmithService.GetOwnMaterials
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UTGFItemBarData*>          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UTGFItemBarData*> UBlacksmithService::GetOwnMaterials() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BlacksmithService", "GetOwnMaterials");

	Params::BlacksmithService_GetOwnMaterials Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.BlacksmithService.GetPendingTabId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UBlacksmithService::GetPendingTabId() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BlacksmithService", "GetPendingTabId");

	Params::BlacksmithService_GetPendingTabId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.BlacksmithService.GetRepairMaterials
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   InEquipmentId                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UTGFProtoTgfDItemOffset*>  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UTGFProtoTgfDItemOffset*> UBlacksmithService::GetRepairMaterials(int32 InEquipmentId) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BlacksmithService", "GetRepairMaterials");

	Params::BlacksmithService_GetRepairMaterials Parms{};

	Parms.InEquipmentId = InEquipmentId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.BlacksmithService.GetSlotName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UBlacksmithService::GetSlotName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BlacksmithService", "GetSlotName");

	Params::BlacksmithService_GetSlotName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.BlacksmithService.GetTabId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UBlacksmithService::GetTabId() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BlacksmithService", "GetTabId");

	Params::BlacksmithService_GetTabId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.ChatFunctionLibrary.AddTemporaryMessage
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           StrContent                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETGFProtoTgfEnChatChannelType           ChannelType                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UChatFunctionLibrary::AddTemporaryMessage(const class FString& StrContent, const ETGFProtoTgfEnChatChannelType ChannelType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ChatFunctionLibrary", "AddTemporaryMessage");

	Params::ChatFunctionLibrary_AddTemporaryMessage Parms{};

	Parms.StrContent = std::move(StrContent);
	Parms.ChannelType = ChannelType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.ChatFunctionLibrary.GetCanMinorChat
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UChatFunctionLibrary::GetCanMinorChat()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ChatFunctionLibrary", "GetCanMinorChat");

	Params::ChatFunctionLibrary_GetCanMinorChat Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.ChatFunctionLibrary.GetCanMinorVoiceChat
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UChatFunctionLibrary::GetCanMinorVoiceChat()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ChatFunctionLibrary", "GetCanMinorVoiceChat");

	Params::ChatFunctionLibrary_GetCanMinorVoiceChat Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.ChatService.AddTemporaryMessage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           StrContent                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETGFProtoTgfEnChatChannelType           ChannelType                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UChatService::AddTemporaryMessage(const class FString& StrContent, const ETGFProtoTgfEnChatChannelType ChannelType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChatService", "AddTemporaryMessage");

	Params::ChatService_AddTemporaryMessage Parms{};

	Parms.StrContent = std::move(StrContent);
	Parms.ChannelType = ChannelType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.ChatService.ChangeToNextSendChannelType
// (Final, Native, Public, BlueprintCallable)

void UChatService::ChangeToNextSendChannelType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChatService", "ChangeToNextSendChannelType");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.ChatService.EditCommitTextContent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           TextContent                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UChatService::EditCommitTextContent(const class FString& TextContent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChatService", "EditCommitTextContent");

	Params::ChatService_EditCommitTextContent Parms{};

	Parms.TextContent = std::move(TextContent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.ChatService.GetCanMinorChat
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UChatService::GetCanMinorChat()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChatService", "GetCanMinorChat");

	Params::ChatService_GetCanMinorChat Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.ChatService.GetCanMinorVoiceChat
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UChatService::GetCanMinorVoiceChat()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChatService", "GetCanMinorVoiceChat");

	Params::ChatService_GetCanMinorVoiceChat Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.ChatService.GetChannelInfoByChannelType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ETGFProtoTgfEnChatChannelType           ChannelType                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UChatChannelInfo*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UChatChannelInfo* UChatService::GetChannelInfoByChannelType(const ETGFProtoTgfEnChatChannelType ChannelType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChatService", "GetChannelInfoByChannelType");

	Params::ChatService_GetChannelInfoByChannelType Parms{};

	Parms.ChannelType = ChannelType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.ChatService.GetChannelKeyByChannelType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ETGFProtoTgfEnChatChannelType           ChannelType                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UChatService::GetChannelKeyByChannelType(const ETGFProtoTgfEnChatChannelType ChannelType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChatService", "GetChannelKeyByChannelType");

	Params::ChatService_GetChannelKeyByChannelType Parms{};

	Parms.ChannelType = ChannelType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.ChatService.GetDisplayMessageList
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<struct FChatMessage>             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FChatMessage> UChatService::GetDisplayMessageList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChatService", "GetDisplayMessageList");

	Params::ChatService_GetDisplayMessageList Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.ChatService.SetDisplayChannelType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ETGFProtoTgfEnChatChannelType           ChannelType                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UChatService::SetDisplayChannelType(const ETGFProtoTgfEnChatChannelType ChannelType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChatService", "SetDisplayChannelType");

	Params::ChatService_SetDisplayChannelType Parms{};

	Parms.ChannelType = ChannelType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.ChatService.SetSendChannelType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ETGFProtoTgfEnChatChannelType           ChannelType                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UChatService::SetSendChannelType(const ETGFProtoTgfEnChatChannelType ChannelType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChatService", "SetSendChannelType");

	Params::ChatService_SetSendChannelType Parms{};

	Parms.ChannelType = ChannelType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.ChatService.SetSendRoleKey
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FRoleKey                         RoleKey                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UChatService::SetSendRoleKey(const struct FRoleKey& RoleKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChatService", "SetSendRoleKey");

	Params::ChatService_SetSendRoleKey Parms{};

	Parms.RoleKey = std::move(RoleKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.ChatService.SetUpdatePanelState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bIsUpdatePanel                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UChatService::SetUpdatePanelState(bool bIsUpdatePanel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChatService", "SetUpdatePanelState");

	Params::ChatService_SetUpdatePanelState Parms{};

	Parms.bIsUpdatePanel = bIsUpdatePanel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.ChatChannelInfo.CheckCanSendMessage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bSetSendTimestamp                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UChatChannelInfo::CheckCanSendMessage(bool bSetSendTimestamp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChatChannelInfo", "CheckCanSendMessage");

	Params::ChatChannelInfo_CheckCanSendMessage Parms{};

	Parms.bSetSendTimestamp = bSetSendTimestamp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.ChatChannelInfo.CheckCanShowMessage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ETGFProtoTgfEnChatChannelType           InChannelType                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UChatChannelInfo::CheckCanShowMessage(ETGFProtoTgfEnChatChannelType InChannelType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChatChannelInfo", "CheckCanShowMessage");

	Params::ChatChannelInfo_CheckCanShowMessage Parms{};

	Parms.InChannelType = InChannelType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.ChatChannelInfo.ResetLastSendTimeSeconds
// (Final, Native, Public, BlueprintCallable)

void UChatChannelInfo::ResetLastSendTimeSeconds()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChatChannelInfo", "ResetLastSendTimeSeconds");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.ChatChannelInfo.GetChannelType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ETGFProtoTgfEnChatChannelType           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETGFProtoTgfEnChatChannelType UChatChannelInfo::GetChannelType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChatChannelInfo", "GetChannelType");

	Params::ChatChannelInfo_GetChannelType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.ChatChannelInfo.IsValid
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UChatChannelInfo::IsValid() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChatChannelInfo", "IsValid");

	Params::ChatChannelInfo_IsValid Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.CommonFunctionLibrary.CopyStringToClipboard
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           Text                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCommonFunctionLibrary::CopyStringToClipboard(const class FString& Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CommonFunctionLibrary", "CopyStringToClipboard");

	Params::CommonFunctionLibrary_CopyStringToClipboard Parms{};

	Parms.Text = std::move(Text);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.CommonFunctionLibrary.DateTimeValidate
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   Year                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Month                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Day                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Hour                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Minute                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Second                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Millisecond                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UCommonFunctionLibrary::DateTimeValidate(int32 Year, int32 Month, int32 Day, int32 Hour, int32 Minute, int32 Second, int32 Millisecond)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CommonFunctionLibrary", "DateTimeValidate");

	Params::CommonFunctionLibrary_DateTimeValidate Parms{};

	Parms.Year = Year;
	Parms.Month = Month;
	Parms.Day = Day;
	Parms.Hour = Hour;
	Parms.Minute = Minute;
	Parms.Second = Second;
	Parms.Millisecond = Millisecond;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.CommonFunctionLibrary.GetCurveTableRowMap
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UCurveTable*                      CurveTable                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TMap<class FName, float>                ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

TMap<class FName, float> UCommonFunctionLibrary::GetCurveTableRowMap(class UCurveTable* CurveTable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CommonFunctionLibrary", "GetCurveTableRowMap");

	Params::CommonFunctionLibrary_GetCurveTableRowMap Parms{};

	Parms.CurveTable = CurveTable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.CommonFunctionLibrary.GetEmitterRendererPropertiesByNiagaraComponent
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UNiagaraComponent*                NiagaraComponent                                       (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UNiagaraRendererProperties*>RendererProperties                                     (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UCommonFunctionLibrary::GetEmitterRendererPropertiesByNiagaraComponent(class UNiagaraComponent* NiagaraComponent, TArray<class UNiagaraRendererProperties*>* RendererProperties)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CommonFunctionLibrary", "GetEmitterRendererPropertiesByNiagaraComponent");

	Params::CommonFunctionLibrary_GetEmitterRendererPropertiesByNiagaraComponent Parms{};

	Parms.NiagaraComponent = NiagaraComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (RendererProperties != nullptr)
		*RendererProperties = std::move(Parms.RendererProperties);

	return Parms.ReturnValue;
}


// Function TGFGame.CommonFunctionLibrary.GetEmittersByNiagaraComponent
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UNiagaraComponent*                NiagaraComponent                                       (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FVersionedNiagaraEmitterData>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FVersionedNiagaraEmitterData> UCommonFunctionLibrary::GetEmittersByNiagaraComponent(class UNiagaraComponent* NiagaraComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CommonFunctionLibrary", "GetEmittersByNiagaraComponent");

	Params::CommonFunctionLibrary_GetEmittersByNiagaraComponent Parms{};

	Parms.NiagaraComponent = NiagaraComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.CommonFunctionLibrary.GetIsShowWeaponOperationTips
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UCommonFunctionLibrary::GetIsShowWeaponOperationTips()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CommonFunctionLibrary", "GetIsShowWeaponOperationTips");

	Params::CommonFunctionLibrary_GetIsShowWeaponOperationTips Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.CommonFunctionLibrary.GetListViewEntryWidgetFromItem
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UListView*                        ListView                                               (ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          Item                                                   (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUserWidget*                      ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUserWidget* UCommonFunctionLibrary::GetListViewEntryWidgetFromItem(const class UListView* ListView, const class UObject* Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CommonFunctionLibrary", "GetListViewEntryWidgetFromItem");

	Params::CommonFunctionLibrary_GetListViewEntryWidgetFromItem Parms{};

	Parms.ListView = ListView;
	Parms.Item = Item;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.CommonFunctionLibrary.GetNameFromPlayerNameData
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FPlayerNameData                  InPlayerNameData                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    bIsForceUseHiddenName                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UCommonFunctionLibrary::GetNameFromPlayerNameData(const struct FPlayerNameData& InPlayerNameData, bool bIsForceUseHiddenName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CommonFunctionLibrary", "GetNameFromPlayerNameData");

	Params::CommonFunctionLibrary_GetNameFromPlayerNameData Parms{};

	Parms.InPlayerNameData = std::move(InPlayerNameData);
	Parms.bIsForceUseHiddenName = bIsForceUseHiddenName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.CommonFunctionLibrary.GetNiagaraEmittersMaterialByName
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UNiagaraComponent*                NiagaraComponent                                       (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           MaterialName                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UMaterialInterface*>       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UMaterialInterface*> UCommonFunctionLibrary::GetNiagaraEmittersMaterialByName(class UNiagaraComponent* NiagaraComponent, const class FString& MaterialName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CommonFunctionLibrary", "GetNiagaraEmittersMaterialByName");

	Params::CommonFunctionLibrary_GetNiagaraEmittersMaterialByName Parms{};

	Parms.NiagaraComponent = NiagaraComponent;
	Parms.MaterialName = std::move(MaterialName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.CommonFunctionLibrary.GetRoleHeadPortraitIconPath
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   TypeId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Gender                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   FaceId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SkinColor                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   RowId                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UCommonFunctionLibrary::GetRoleHeadPortraitIconPath(int32 TypeId, int32 Gender, int32 FaceId, int32 SkinColor, int32 RowId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CommonFunctionLibrary", "GetRoleHeadPortraitIconPath");

	Params::CommonFunctionLibrary_GetRoleHeadPortraitIconPath Parms{};

	Parms.TypeId = TypeId;
	Parms.Gender = Gender;
	Parms.FaceId = FaceId;
	Parms.SkinColor = SkinColor;
	Parms.RowId = RowId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.CommonFunctionLibrary.ParseGameplayAttributeFromName
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           AttrStr                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayAttribute               ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FGameplayAttribute UCommonFunctionLibrary::ParseGameplayAttributeFromName(const class FString& AttrStr)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CommonFunctionLibrary", "ParseGameplayAttributeFromName");

	Params::CommonFunctionLibrary_ParseGameplayAttributeFromName Parms{};

	Parms.AttrStr = std::move(AttrStr);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.CommonFunctionLibrary.PasteStringToClipboard
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UCommonFunctionLibrary::PasteStringToClipboard()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CommonFunctionLibrary", "PasteStringToClipboard");

	Params::CommonFunctionLibrary_PasteStringToClipboard Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.CommonFunctionLibrary.ReplaceNiagaraEmittersMaterialByDynamic
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UNiagaraComponent*                NiagaraComponent                                       (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           MaterialName                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMaterialInstanceDynamic*         DynamicMaterial                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UCommonFunctionLibrary::ReplaceNiagaraEmittersMaterialByDynamic(class UNiagaraComponent* NiagaraComponent, const class FString& MaterialName, class UMaterialInstanceDynamic* DynamicMaterial)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CommonFunctionLibrary", "ReplaceNiagaraEmittersMaterialByDynamic");

	Params::CommonFunctionLibrary_ReplaceNiagaraEmittersMaterialByDynamic Parms{};

	Parms.NiagaraComponent = NiagaraComponent;
	Parms.MaterialName = std::move(MaterialName);
	Parms.DynamicMaterial = DynamicMaterial;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.CommonFunctionLibrary.SetIsShowWeaponOperationTips
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UCommonFunctionLibrary::SetIsShowWeaponOperationTips()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CommonFunctionLibrary", "SetIsShowWeaponOperationTips");

	Params::CommonFunctionLibrary_SetIsShowWeaponOperationTips Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.CommonFunctionLibrary.GetFirstLevelAttrData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class UTgfFirstLevelAttrDataAsset*ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UTgfFirstLevelAttrDataAsset* UCommonFunctionLibrary::GetFirstLevelAttrData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CommonFunctionLibrary", "GetFirstLevelAttrData");

	Params::CommonFunctionLibrary_GetFirstLevelAttrData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.ConfigService.IsTest
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UConfigService::IsTest()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ConfigService", "IsTest");

	Params::ConfigService_IsTest Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.ConfirmWindow.OnCancelButtonClicked
// (Final, Native, Protected, BlueprintCallable)

void UConfirmWindow::OnCancelButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ConfirmWindow", "OnCancelButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.ConfirmWindow.OnConfirmButtonClicked
// (Final, Native, Protected, BlueprintCallable)

void UConfirmWindow::OnConfirmButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ConfirmWindow", "OnConfirmButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.CultureBlueprintLibrary.GetCultureNameByType
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// ETGFProtoTgfEnMutlLanguageType          CultureType                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UCultureBlueprintLibrary::GetCultureNameByType(const ETGFProtoTgfEnMutlLanguageType CultureType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CultureBlueprintLibrary", "GetCultureNameByType");

	Params::CultureBlueprintLibrary_GetCultureNameByType Parms{};

	Parms.CultureType = CultureType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.CultureBlueprintLibrary.GetCultureText
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FCultureTextMap                  CultureTextMap                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UCultureBlueprintLibrary::GetCultureText(const struct FCultureTextMap& CultureTextMap)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CultureBlueprintLibrary", "GetCultureText");

	Params::CultureBlueprintLibrary_GetCultureText Parms{};

	Parms.CultureTextMap = std::move(CultureTextMap);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.CultureBlueprintLibrary.GetCultureTypeByName
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           CultureName                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETGFProtoTgfEnMutlLanguageType          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETGFProtoTgfEnMutlLanguageType UCultureBlueprintLibrary::GetCultureTypeByName(const class FString& CultureName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CultureBlueprintLibrary", "GetCultureTypeByName");

	Params::CultureBlueprintLibrary_GetCultureTypeByName Parms{};

	Parms.CultureName = std::move(CultureName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.CultureBlueprintLibrary.GetCurrentCultureName
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UCultureBlueprintLibrary::GetCurrentCultureName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CultureBlueprintLibrary", "GetCurrentCultureName");

	Params::CultureBlueprintLibrary_GetCurrentCultureName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.CultureBlueprintLibrary.GetCurrentCultureType
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// ETGFProtoTgfEnMutlLanguageType          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETGFProtoTgfEnMutlLanguageType UCultureBlueprintLibrary::GetCurrentCultureType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CultureBlueprintLibrary", "GetCurrentCultureType");

	Params::CultureBlueprintLibrary_GetCurrentCultureType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.CultureBlueprintLibrary.GetDefaultCultureName
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UCultureBlueprintLibrary::GetDefaultCultureName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CultureBlueprintLibrary", "GetDefaultCultureName");

	Params::CultureBlueprintLibrary_GetDefaultCultureName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.DLCPacketService.HandleRainbowConfig
// (Final, Native, Private)
// Parameters:
// class UTGFEventArgs*                    Args                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDLCPacketService::HandleRainbowConfig(class UTGFEventArgs* Args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DLCPacketService", "HandleRainbowConfig");

	Params::DLCPacketService_HandleRainbowConfig Parms{};

	Parms.Args = Args;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.DLCPacketService.RefreshDLCInfo
// (Final, Native, Private)

void UDLCPacketService::RefreshDLCInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DLCPacketService", "RefreshDLCInfo");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.DLCPacketService.SendReceiveDLCPacketReq
// (Final, Native, Public, BlueprintCallable)

void UDLCPacketService::SendReceiveDLCPacketReq()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DLCPacketService", "SendReceiveDLCPacketReq");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.DLCPacketService.StartTimer
// (Final, Native, Private)
// Parameters:
// class UTGFEventArgs*                    Args                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDLCPacketService::StartTimer(class UTGFEventArgs* Args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DLCPacketService", "StartTimer");

	Params::DLCPacketService_StartTimer Parms{};

	Parms.Args = Args;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.FlawlessTrialsService.GetRecords
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UTrialBattleRecordsData*>  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UTrialBattleRecordsData*> UFlawlessTrialsService::GetRecords()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FlawlessTrialsService", "GetRecords");

	Params::FlawlessTrialsService_GetRecords Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.FlawlessTrialsService.InSceneSendFlawlessRewardReq
// (Final, Native, Public, BlueprintCallable)

void UFlawlessTrialsService::InSceneSendFlawlessRewardReq()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FlawlessTrialsService", "InSceneSendFlawlessRewardReq");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.FlawlessTrialsService.SendTrialHistoryReq
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ActivityId                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFlawlessTrialsService::SendTrialHistoryReq(const int32 ActivityId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FlawlessTrialsService", "SendTrialHistoryReq");

	Params::FlawlessTrialsService_SendTrialHistoryReq Parms{};

	Parms.ActivityId = ActivityId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.FlawlessTrialsService.SendTrialOpenReq
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ActivityId                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFlawlessTrialsService::SendTrialOpenReq(const int32 ActivityId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FlawlessTrialsService", "SendTrialOpenReq");

	Params::FlawlessTrialsService_SendTrialOpenReq Parms{};

	Parms.ActivityId = ActivityId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.FlawlessTrialsService.SendTrialReceiveRewardReq
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ActivityId                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFlawlessTrialsService::SendTrialReceiveRewardReq(const int32 ActivityId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FlawlessTrialsService", "SendTrialReceiveRewardReq");

	Params::FlawlessTrialsService_SendTrialReceiveRewardReq Parms{};

	Parms.ActivityId = ActivityId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.FlawlessTrialsService.SendTrialSelfQuitReq
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ActivityId                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFlawlessTrialsService::SendTrialSelfQuitReq(const int32 ActivityId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FlawlessTrialsService", "SendTrialSelfQuitReq");

	Params::FlawlessTrialsService_SendTrialSelfQuitReq Parms{};

	Parms.ActivityId = ActivityId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.FusionService.CheckCraftUnlock
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   CraftId                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFusionService::CheckCraftUnlock(int32 CraftId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FusionService", "CheckCraftUnlock");

	Params::FusionService_CheckCraftUnlock Parms{};

	Parms.CraftId = CraftId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.FusionService.CheckIsAllCraftFinish
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFusionService::CheckIsAllCraftFinish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FusionService", "CheckIsAllCraftFinish");

	Params::FusionService_CheckIsAllCraftFinish Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.FusionService.CheckIsAnyCraftFinish
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFusionService::CheckIsAnyCraftFinish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FusionService", "CheckIsAnyCraftFinish");

	Params::FusionService_CheckIsAnyCraftFinish Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.FusionService.CheckIsTabCraftAllFinish
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Tag                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFusionService::CheckIsTabCraftAllFinish(int32 Tag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FusionService", "CheckIsTabCraftAllFinish");

	Params::FusionService_CheckIsTabCraftAllFinish Parms{};

	Parms.Tag = Tag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.FusionService.CheckSlotUnlock
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   SlotId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFusionService::CheckSlotUnlock(int32 SlotId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FusionService", "CheckSlotUnlock");

	Params::FusionService_CheckSlotUnlock Parms{};

	Parms.SlotId = SlotId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.FusionService.GetCraftComboCount
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   CraftId                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFusionService::GetCraftComboCount(int32 CraftId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FusionService", "GetCraftComboCount");

	Params::FusionService_GetCraftComboCount Parms{};

	Parms.CraftId = CraftId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.FusionService.GetCraftCountById
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   CraftId                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFusionService::GetCraftCountById(int32 CraftId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FusionService", "GetCraftCountById");

	Params::FusionService_GetCraftCountById Parms{};

	Parms.CraftId = CraftId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.FusionService.GetCraftingData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FTGFUserCraftingData       ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FTGFUserCraftingData UFusionService::GetCraftingData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FusionService", "GetCraftingData");

	Params::FusionService_GetCraftingData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.FusionService.GetCraftTabFinishItems
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Tag                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TMap<int32, class UFusionItemData*>     ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

TMap<int32, class UFusionItemData*> UFusionService::GetCraftTabFinishItems(int32 Tag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FusionService", "GetCraftTabFinishItems");

	Params::FusionService_GetCraftTabFinishItems Parms{};

	Parms.Tag = Tag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.FusionService.GetCraftTabItems
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Tag                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FCraftTab                        ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FCraftTab UFusionService::GetCraftTabItems(int32 Tag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FusionService", "GetCraftTabItems");

	Params::FusionService_GetCraftTabItems Parms{};

	Parms.Tag = Tag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.FusionService.GetCraftTabItemTypes
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Tag                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UFusionService::GetCraftTabItemTypes(int32 Tag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FusionService", "GetCraftTabItemTypes");

	Params::FusionService_GetCraftTabItemTypes Parms{};

	Parms.Tag = Tag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.FusionService.GetCraftTabRunningItems
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Tag                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TMap<int32, class UFusionItemData*>     ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

TMap<int32, class UFusionItemData*> UFusionService::GetCraftTabRunningItems(int32 Tag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FusionService", "GetCraftTabRunningItems");

	Params::FusionService_GetCraftTabRunningItems Parms{};

	Parms.Tag = Tag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.FusionService.GetFilterState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFusionService::GetFilterState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FusionService", "GetFilterState");

	Params::FusionService_GetFilterState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.FusionService.GetFusionStateType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   CraftId                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETgfFusionStateType                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETgfFusionStateType UFusionService::GetFusionStateType(int32 CraftId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FusionService", "GetFusionStateType");

	Params::FusionService_GetFusionStateType Parms{};

	Parms.CraftId = CraftId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.FusionService.OnSelectCraft
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Craft                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFusionService::OnSelectCraft(int32 Craft)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FusionService", "OnSelectCraft");

	Params::FusionService_OnSelectCraft Parms{};

	Parms.Craft = Craft;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.FusionService.SendCancelCraftReq
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Craft                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   StorageType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFusionService::SendCancelCraftReq(int32 Craft, uint8 StorageType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FusionService", "SendCancelCraftReq");

	Params::FusionService_SendCancelCraftReq Parms{};

	Parms.Craft = Craft;
	Parms.StorageType = StorageType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.FusionService.SendDrawCraftReq
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Craft                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   StorageType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFusionService::SendDrawCraftReq(int32 Craft, uint8 StorageType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FusionService", "SendDrawCraftReq");

	Params::FusionService_SendDrawCraftReq Parms{};

	Parms.Craft = Craft;
	Parms.StorageType = StorageType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.FusionService.SendPlayerGetCraftingReq
// (Final, Native, Public, BlueprintCallable)

void UFusionService::SendPlayerGetCraftingReq()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FusionService", "SendPlayerGetCraftingReq");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.FusionService.SendStartCraftReq
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Crafting_recipe                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Count                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFusionService::SendStartCraftReq(int32 Crafting_recipe, int32 Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FusionService", "SendStartCraftReq");

	Params::FusionService_SendStartCraftReq Parms{};

	Parms.Crafting_recipe = Crafting_recipe;
	Parms.Count = Count;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.FusionService.SetCraftInventoryTabSelect
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// uint8                                   TabId                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFusionService::SetCraftInventoryTabSelect(uint8 TabId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FusionService", "SetCraftInventoryTabSelect");

	Params::FusionService_SetCraftInventoryTabSelect Parms{};

	Parms.TabId = TabId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.FusionService.SetCraftStragePageTab
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// uint8                                   PageId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFusionService::SetCraftStragePageTab(uint8 PageId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FusionService", "SetCraftStragePageTab");

	Params::FusionService_SetCraftStragePageTab Parms{};

	Parms.PageId = PageId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.FusionService.SetFilterState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   State                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFusionService::SetFilterState(int32 State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FusionService", "SetFilterState");

	Params::FusionService_SetFilterState Parms{};

	Parms.State = State;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.RpcGameClientServiceHelper.GetMethods
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FRpcGameClientServiceMethodsReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

const struct FRpcGameClientServiceMethods URpcGameClientServiceHelper::GetMethods()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RpcGameClientServiceHelper", "GetMethods");

	Params::RpcGameClientServiceHelper_GetMethods Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.GameLoginService.OnGameLogout
// (Final, Native, Private)
// Parameters:
// class UTGFEventArgs*                    Args                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGameLoginService::OnGameLogout(class UTGFEventArgs* Args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameLoginService", "OnGameLogout");

	Params::GameLoginService_OnGameLogout Parms{};

	Parms.Args = Args;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.GameLoginService.BP_GetOpenId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UGameLoginService::BP_GetOpenId() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameLoginService", "BP_GetOpenId");

	Params::GameLoginService_BP_GetOpenId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.GameLoginService.BP_GetUserId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UGameLoginService::BP_GetUserId() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameLoginService", "BP_GetUserId");

	Params::GameLoginService_BP_GetUserId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.GameLoginService.BP_GetZoneId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UGameLoginService::BP_GetZoneId() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameLoginService", "BP_GetZoneId");

	Params::GameLoginService_BP_GetZoneId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.GameLoginService.IsLogin
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UGameLoginService::IsLogin() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameLoginService", "IsLogin");

	Params::GameLoginService_IsLogin Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TradeSaleOrder.GetItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   MarketId                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FTGFItem                   ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FTGFItem UTradeSaleOrder::GetItem(int32 MarketId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeSaleOrder", "GetItem");

	Params::TradeSaleOrder_GetItem Parms{};

	Parms.MarketId = MarketId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TradeSaleOrder.HaveGearSetAttribute
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   MarketId                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTradeSaleOrder::HaveGearSetAttribute(int32 MarketId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeSaleOrder", "HaveGearSetAttribute");

	Params::TradeSaleOrder_HaveGearSetAttribute Parms{};

	Parms.MarketId = MarketId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TradeSaleOrder.IsCorruptionItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   MarketId                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTradeSaleOrder::IsCorruptionItem(int32 MarketId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeSaleOrder", "IsCorruptionItem");

	Params::TradeSaleOrder_IsCorruptionItem Parms{};

	Parms.MarketId = MarketId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TradeSaleOrder.GetCurrentBidPrice
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTradeSaleOrder::GetCurrentBidPrice() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeSaleOrder", "GetCurrentBidPrice");

	Params::TradeSaleOrder_GetCurrentBidPrice Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TradeSaleOrder.GetFixedPrice
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTradeSaleOrder::GetFixedPrice() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeSaleOrder", "GetFixedPrice");

	Params::TradeSaleOrder_GetFixedPrice Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TradeSaleOrder.GetItemTypeId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   MarketId                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTradeSaleOrder::GetItemTypeId(int32 MarketId) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeSaleOrder", "GetItemTypeId");

	Params::TradeSaleOrder_GetItemTypeId Parms{};

	Parms.MarketId = MarketId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TradeSaleOrder.GetLeftItemount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTradeSaleOrder::GetLeftItemount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeSaleOrder", "GetLeftItemount");

	Params::TradeSaleOrder_GetLeftItemount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TradeSaleOrder.GetOriginItemCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTradeSaleOrder::GetOriginItemCount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeSaleOrder", "GetOriginItemCount");

	Params::TradeSaleOrder_GetOriginItemCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TradeSaleOrder.GetRemainTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UTradeSaleOrder::GetRemainTime() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeSaleOrder", "GetRemainTime");

	Params::TradeSaleOrder_GetRemainTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TradeSaleOrder.GetStartingPrice
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTradeSaleOrder::GetStartingPrice() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeSaleOrder", "GetStartingPrice");

	Params::TradeSaleOrder_GetStartingPrice Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TradeSaleOrder.GetState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ETradeSaleOrderState                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETradeSaleOrderState UTradeSaleOrder::GetState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeSaleOrder", "GetState");

	Params::TradeSaleOrder_GetState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TradeSaleOrder.GetTradeItemProductId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTradeSaleOrder::GetTradeItemProductId() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeSaleOrder", "GetTradeItemProductId");

	Params::TradeSaleOrder_GetTradeItemProductId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TradeSaleOrder.GetType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ETradeSaleOrderType                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETradeSaleOrderType UTradeSaleOrder::GetType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeSaleOrder", "GetType");

	Params::TradeSaleOrder_GetType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TradeSaleOrder.GetUnitCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTradeSaleOrder::GetUnitCount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeSaleOrder", "GetUnitCount");

	Params::TradeSaleOrder_GetUnitCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TradeSaleOrder.GetUnitPrice
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTradeSaleOrder::GetUnitPrice() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeSaleOrder", "GetUnitPrice");

	Params::TradeSaleOrder_GetUnitPrice Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.GamePreLoginService.Lua_OnEnterLoginQueue
// (Native, Event, Public, BlueprintEvent)

void UGamePreLoginService::Lua_OnEnterLoginQueue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GamePreLoginService", "Lua_OnEnterLoginQueue");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.GamePreLoginService.OnNetworkManagerEnterState
// (Final, Native, Private)
// Parameters:
// class UTGFEventArgs*                    Args                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGamePreLoginService::OnNetworkManagerEnterState(class UTGFEventArgs* Args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GamePreLoginService", "OnNetworkManagerEnterState");

	Params::GamePreLoginService_OnNetworkManagerEnterState Parms{};

	Parms.Args = Args;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.GamePreLoginService.OnNetworkManagerExitState
// (Final, Native, Private)
// Parameters:
// class UTGFEventArgs*                    Args                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGamePreLoginService::OnNetworkManagerExitState(class UTGFEventArgs* Args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GamePreLoginService", "OnNetworkManagerExitState");

	Params::GamePreLoginService_OnNetworkManagerExitState Parms{};

	Parms.Args = Args;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.GamePreLoginService.GetPreLoginInfo
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTGFProtoTgfPlayerPreLoginInfo*   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTGFProtoTgfPlayerPreLoginInfo* UGamePreLoginService::GetPreLoginInfo() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GamePreLoginService", "GetPreLoginInfo");

	Params::GamePreLoginService_GetPreLoginInfo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.GamePreLoginService.IsInQueue
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UGamePreLoginService::IsInQueue() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GamePreLoginService", "IsInQueue");

	Params::GamePreLoginService_IsInQueue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.GameVersionManager.GetAppVersion
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UGameVersionManager::GetAppVersion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GameVersionManager", "GetAppVersion");

	Params::GameVersionManager_GetAppVersion Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.GlobalUserInfo.GetIsExpired
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UGlobalUserInfo::GetIsExpired() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GlobalUserInfo", "GetIsExpired");

	Params::GlobalUserInfo_GetIsExpired Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.GlobalUserInfo.GetIsValid
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UGlobalUserInfo::GetIsValid() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GlobalUserInfo", "GetIsValid");

	Params::GlobalUserInfo_GetIsValid Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.GMService.OnNetworkManagerEnterState
// (Final, Native, Private)
// Parameters:
// class UTGFEventArgs*                    Args                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGMService::OnNetworkManagerEnterState(class UTGFEventArgs* Args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GMService", "OnNetworkManagerEnterState");

	Params::GMService_OnNetworkManagerEnterState Parms{};

	Parms.Args = Args;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TradeSearchService.ClearPageDataCache
// (Final, Native, Public, BlueprintCallable)

void UTradeSearchService::ClearPageDataCache()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeSearchService", "ClearPageDataCache");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TradeSearchService.GeLegendaryAffixList
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UTradeSearchService::GeLegendaryAffixList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeSearchService", "GeLegendaryAffixList");

	Params::TradeSearchService_GeLegendaryAffixList Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TradeSearchService.GetAffixList
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           AffixType                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UTradeSearchService::GetAffixList(const class FString& AffixType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeSearchService", "GetAffixList");

	Params::TradeSearchService_GetAffixList Parms{};

	Parms.AffixType = std::move(AffixType);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TradeSearchService.GetAffixListByType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   AttributeClassify                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UTradeSearchService::GetAffixListByType(int32 AttributeClassify)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeSearchService", "GetAffixListByType");

	Params::TradeSearchService_GetAffixListByType Parms{};

	Parms.AttributeClassify = AttributeClassify;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TradeSearchService.GetHasNextPage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTradeSearchService::GetHasNextPage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeSearchService", "GetHasNextPage");

	Params::TradeSearchService_GetHasNextPage Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TradeSearchService.GetPageDataCache
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   PageIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTGFTradeSearchResultData        ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FTGFTradeSearchResultData UTradeSearchService::GetPageDataCache(int32 PageIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeSearchService", "GetPageDataCache");

	Params::TradeSearchService_GetPageDataCache Parms{};

	Parms.PageIndex = PageIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TradeSearchService.GetRecommendResults
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Refresh                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UTradeSearchResultOrder*>  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UTradeSearchResultOrder*> UTradeSearchService::GetRecommendResults(bool Refresh)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeSearchService", "GetRecommendResults");

	Params::TradeSearchService_GetRecommendResults Parms{};

	Parms.Refresh = Refresh;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TradeSearchService.GetRecommendResultsEaBase
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Refresh                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UTradeSearchResultOrder*>  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UTradeSearchResultOrder*> UTradeSearchService::GetRecommendResultsEaBase(bool Refresh)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeSearchService", "GetRecommendResultsEaBase");

	Params::TradeSearchService_GetRecommendResultsEaBase Parms{};

	Parms.Refresh = Refresh;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TradeSearchService.GetSearchResultOrders
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UTradeSearchResultOrder*>  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UTradeSearchResultOrder*> UTradeSearchService::GetSearchResultOrders()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeSearchService", "GetSearchResultOrders");

	Params::TradeSearchService_GetSearchResultOrders Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TradeSearchService.GetTradeAuctionRecommendOrder
// (Final, Native, Public, BlueprintCallable)

void UTradeSearchService::GetTradeAuctionRecommendOrder()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeSearchService", "GetTradeAuctionRecommendOrder");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TradeSearchService.OnAffixSelect
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   AffixId                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsSureSelect                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsHomogenTrade                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTradeSearchService::OnAffixSelect(int32 AffixId, bool IsSureSelect, bool IsHomogenTrade)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeSearchService", "OnAffixSelect");

	Params::TradeSearchService_OnAffixSelect Parms{};

	Parms.AffixId = AffixId;
	Parms.IsSureSelect = IsSureSelect;
	Parms.IsHomogenTrade = IsHomogenTrade;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TradeSearchService.OnGameLogout
// (Final, Native, Private)
// Parameters:
// class UTGFEventArgs*                    Args                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTradeSearchService::OnGameLogout(class UTGFEventArgs* Args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeSearchService", "OnGameLogout");

	Params::TradeSearchService_OnGameLogout Parms{};

	Parms.Args = Args;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TradeSearchService.RefreshSearchList
// (Final, Native, Public, BlueprintCallable)

void UTradeSearchService::RefreshSearchList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeSearchService", "RefreshSearchList");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TradeSearchService.ReqTradeAuctionRecommendOrder1
// (Final, Native, Public, BlueprintCallable)

void UTradeSearchService::ReqTradeAuctionRecommendOrder1()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeSearchService", "ReqTradeAuctionRecommendOrder1");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TradeSearchService.ReqTradeAuctionRecommendOrder2
// (Final, Native, Public, BlueprintCallable)

void UTradeSearchService::ReqTradeAuctionRecommendOrder2()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeSearchService", "ReqTradeAuctionRecommendOrder2");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TradeSearchService.ReSearchRequest
// (Final, Native, Public, BlueprintCallable)

void UTradeSearchService::ReSearchRequest()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeSearchService", "ReSearchRequest");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TradeSearchService.SendTradeAuctionRecommendOrderTicketRequest
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Refresh                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTradeSearchService::SendTradeAuctionRecommendOrderTicketRequest(bool Refresh)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeSearchService", "SendTradeAuctionRecommendOrderTicketRequest");

	Params::TradeSearchService_SendTradeAuctionRecommendOrderTicketRequest Parms{};

	Parms.Refresh = Refresh;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TradeSearchService.SendTradeAuctionSearchRequest
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Career                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   MinorType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<int32>                           SubTypes                                               (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// int32                                   Rarity                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Corruption                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   MinPrice                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   MaxPrice                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   BoundPrice                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   BoundTicketId                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   BoundSpScore                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   BoundRarity                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Affix1                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Affix2                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Affix3                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTradeSearchService::SendTradeAuctionSearchRequest(int32 Career, int32 MinorType, const TArray<int32>& SubTypes, int32 Rarity, int32 Corruption, int32 MinPrice, int32 MaxPrice, int32 BoundPrice, int64 BoundTicketId, int64 BoundSpScore, int32 BoundRarity, int32 Affix1, int32 Affix2, int32 Affix3)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeSearchService", "SendTradeAuctionSearchRequest");

	Params::TradeSearchService_SendTradeAuctionSearchRequest Parms{};

	Parms.Career = Career;
	Parms.MinorType = MinorType;
	Parms.SubTypes = std::move(SubTypes);
	Parms.Rarity = Rarity;
	Parms.Corruption = Corruption;
	Parms.MinPrice = MinPrice;
	Parms.MaxPrice = MaxPrice;
	Parms.BoundPrice = BoundPrice;
	Parms.BoundTicketId = BoundTicketId;
	Parms.BoundSpScore = BoundSpScore;
	Parms.BoundRarity = BoundRarity;
	Parms.Affix1 = Affix1;
	Parms.Affix2 = Affix2;
	Parms.Affix3 = Affix3;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TradeSearchService.SendTradeSearchRequest
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   MarketId                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Career                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   MajorType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   MinorType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<int32>                           SubTypes                                               (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// int32                                   Rarity                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Corruption                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   MinPrice                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   MaxPrice                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   BoundPrice                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   BoundTicketId                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   BoundSpScore                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   BoundRarity                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Affix1                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Affix2                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Affix3                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTradeSearchService::SendTradeSearchRequest(const int32 MarketId, int32 Career, int32 MajorType, int32 MinorType, const TArray<int32>& SubTypes, int32 Rarity, int32 Corruption, int32 MinPrice, int32 MaxPrice, int32 BoundPrice, int64 BoundTicketId, int64 BoundSpScore, int32 BoundRarity, int32 Affix1, int32 Affix2, int32 Affix3)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeSearchService", "SendTradeSearchRequest");

	Params::TradeSearchService_SendTradeSearchRequest Parms{};

	Parms.MarketId = MarketId;
	Parms.Career = Career;
	Parms.MajorType = MajorType;
	Parms.MinorType = MinorType;
	Parms.SubTypes = std::move(SubTypes);
	Parms.Rarity = Rarity;
	Parms.Corruption = Corruption;
	Parms.MinPrice = MinPrice;
	Parms.MaxPrice = MaxPrice;
	Parms.BoundPrice = BoundPrice;
	Parms.BoundTicketId = BoundTicketId;
	Parms.BoundSpScore = BoundSpScore;
	Parms.BoundRarity = BoundRarity;
	Parms.Affix1 = Affix1;
	Parms.Affix2 = Affix2;
	Parms.Affix3 = Affix3;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TradeSearchService.SetPageDataCache
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   PageIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UTradeSearchResultOrder*>  Datas                                                  (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    NextPage                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTradeSearchService::SetPageDataCache(int32 PageIndex, const TArray<class UTradeSearchResultOrder*>& Datas, bool NextPage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeSearchService", "SetPageDataCache");

	Params::TradeSearchService_SetPageDataCache Parms{};

	Parms.PageIndex = PageIndex;
	Parms.Datas = std::move(Datas);
	Parms.NextPage = NextPage;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TradeSearchService.TradeAuctionPageRequest
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   BoundPrice                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   BoundTicketId                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   BoundSpScore                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   BoundRarity                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTradeSearchService::TradeAuctionPageRequest(int32 BoundPrice, int64 BoundTicketId, int64 BoundSpScore, int32 BoundRarity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeSearchService", "TradeAuctionPageRequest");

	Params::TradeSearchService_TradeAuctionPageRequest Parms{};

	Parms.BoundPrice = BoundPrice;
	Parms.BoundTicketId = BoundTicketId;
	Parms.BoundSpScore = BoundSpScore;
	Parms.BoundRarity = BoundRarity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.GRomeLinkService.GetPingMs
// (Final, Native, Public, BlueprintCallable)

void UGRomeLinkService::GetPingMs()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GRomeLinkService", "GetPingMs");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.GRomeLinkService.HandleRainbowConfig
// (Final, Native, Private)
// Parameters:
// class UTGFEventArgs*                    Args                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGRomeLinkService::HandleRainbowConfig(class UTGFEventArgs* Args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GRomeLinkService", "HandleRainbowConfig");

	Params::GRomeLinkService_HandleRainbowConfig Parms{};

	Parms.Args = Args;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.GRomeLinkService.SetBOpenGRomeLinkLog
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bOpen                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGRomeLinkService::SetBOpenGRomeLinkLog(bool bOpen)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GRomeLinkService", "SetBOpenGRomeLinkLog");

	Params::GRomeLinkService_SetBOpenGRomeLinkLog Parms{};

	Parms.bOpen = bOpen;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.GuideService.GetIsShowReward
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UGuideService::GetIsShowReward()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GuideService", "GetIsShowReward");

	Params::GuideService_GetIsShowReward Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.GuideService.GetIsSkipGuide
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UGuideService::GetIsSkipGuide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GuideService", "GetIsSkipGuide");

	Params::GuideService_GetIsSkipGuide Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.GuideService.Lua_ShowGuideChoose
// (Native, Event, Public, BlueprintEvent)

void UGuideService::Lua_ShowGuideChoose()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GuideService", "Lua_ShowGuideChoose");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.GuideService.SetIsSkipGuide
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    IsShow                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGuideService::SetIsSkipGuide(bool IsShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GuideService", "SetIsSkipGuide");

	Params::GuideService_SetIsSkipGuide Parms{};

	Parms.IsShow = IsShow;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.GuideService.SetShowReward
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    IsShow                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGuideService::SetShowReward(bool IsShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GuideService", "SetShowReward");

	Params::GuideService_SetShowReward Parms{};

	Parms.IsShow = IsShow;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.GuideService.ShowGuideChoose
// (Final, Native, Public, BlueprintCallable)

void UGuideService::ShowGuideChoose()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GuideService", "ShowGuideChoose");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.HeadFunctionLibrary.GetDefaultHeadResConfigData
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   Race                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Gender                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTgfHeadResConfig                ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FTgfHeadResConfig UHeadFunctionLibrary::GetDefaultHeadResConfigData(int32 Race, int32 Gender)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HeadFunctionLibrary", "GetDefaultHeadResConfigData");

	Params::HeadFunctionLibrary_GetDefaultHeadResConfigData Parms{};

	Parms.Race = Race;
	Parms.Gender = Gender;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.HeartbeatService.OnGameLoginSuccess
// (Final, Native, Private)
// Parameters:
// class UTGFEventArgs*                    Args                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHeartbeatService::OnGameLoginSuccess(class UTGFEventArgs* Args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HeartbeatService", "OnGameLoginSuccess");

	Params::HeartbeatService_OnGameLoginSuccess Parms{};

	Parms.Args = Args;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.HeartbeatService.OnGameLogout
// (Final, Native, Private)
// Parameters:
// class UTGFEventArgs*                    Args                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHeartbeatService::OnGameLogout(class UTGFEventArgs* Args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HeartbeatService", "OnGameLogout");

	Params::HeartbeatService_OnGameLogout Parms{};

	Parms.Args = Args;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.HeartbeatService.OnNetworkManagerEnterState
// (Final, Native, Private)
// Parameters:
// class UTGFEventArgs*                    Args                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHeartbeatService::OnNetworkManagerEnterState(class UTGFEventArgs* Args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HeartbeatService", "OnNetworkManagerEnterState");

	Params::HeartbeatService_OnNetworkManagerEnterState Parms{};

	Parms.Args = Args;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.HeartbeatService.OnNetworkManagerExitState
// (Final, Native, Private)
// Parameters:
// class UTGFEventArgs*                    Args                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHeartbeatService::OnNetworkManagerExitState(class UTGFEventArgs* Args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HeartbeatService", "OnNetworkManagerExitState");

	Params::HeartbeatService_OnNetworkManagerExitState Parms{};

	Parms.Args = Args;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.ServerItem.IsServerUnavailable
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UServerItem::IsServerUnavailable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ServerItem", "IsServerUnavailable");

	Params::ServerItem_IsServerUnavailable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.HeirloomService.ArouseGearGem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   GearGemId                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CostIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHeirloomService::ArouseGearGem(int32 GearGemId, int32 CostIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HeirloomService", "ArouseGearGem");

	Params::HeirloomService_ArouseGearGem Parms{};

	Parms.GearGemId = GearGemId;
	Parms.CostIndex = CostIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.HeirloomService.ArouseHeirloom
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   HeirloomId                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CostIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHeirloomService::ArouseHeirloom(int32 HeirloomId, int32 CostIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HeirloomService", "ArouseHeirloom");

	Params::HeirloomService_ArouseHeirloom Parms{};

	Parms.HeirloomId = HeirloomId;
	Parms.CostIndex = CostIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.HeirloomService.CheckHeirloomCanInstantiate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   HeirloomId                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EnItemStorageType                       StorageType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   PageId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHeirloomService::CheckHeirloomCanInstantiate(int32 HeirloomId, EnItemStorageType StorageType, int32 PageId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HeirloomService", "CheckHeirloomCanInstantiate");

	Params::HeirloomService_CheckHeirloomCanInstantiate Parms{};

	Parms.HeirloomId = HeirloomId;
	Parms.StorageType = StorageType;
	Parms.PageId = PageId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.HeirloomService.CheckHeirloomGemItemCanInlaidByAffix
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   HeirloomId                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   GemItemId                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SlotId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHeirloomService::CheckHeirloomGemItemCanInlaidByAffix(int32 HeirloomId, int32 GemItemId, int32 SlotId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HeirloomService", "CheckHeirloomGemItemCanInlaidByAffix");

	Params::HeirloomService_CheckHeirloomGemItemCanInlaidByAffix Parms{};

	Parms.HeirloomId = HeirloomId;
	Parms.GemItemId = GemItemId;
	Parms.SlotId = SlotId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.HeirloomService.GetHeirloomGearGemArrayByMinorType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ETGFProtoTgfEnItemMinorType             ItemMinorType                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UHeirloomGearGem*>         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UHeirloomGearGem*> UHeirloomService::GetHeirloomGearGemArrayByMinorType(ETGFProtoTgfEnItemMinorType ItemMinorType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HeirloomService", "GetHeirloomGearGemArrayByMinorType");

	Params::HeirloomService_GetHeirloomGearGemArrayByMinorType Parms{};

	Parms.ItemMinorType = ItemMinorType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.HeirloomService.GetHeirloomGearGemById
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   GearGemId                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UHeirloomGearGem*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHeirloomGearGem* UHeirloomService::GetHeirloomGearGemById(int32 GearGemId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HeirloomService", "GetHeirloomGearGemById");

	Params::HeirloomService_GetHeirloomGearGemById Parms{};

	Parms.GearGemId = GearGemId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.HeirloomService.GetHeirloomGearGemByItemId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   GemItemId                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UHeirloomGearGem*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHeirloomGearGem* UHeirloomService::GetHeirloomGearGemByItemId(int32 GemItemId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HeirloomService", "GetHeirloomGearGemByItemId");

	Params::HeirloomService_GetHeirloomGearGemByItemId Parms{};

	Parms.GemItemId = GemItemId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.HeirloomService.GetHeirloomGearGemSlotMap
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   HeirloomId                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TMap<int32, struct FHeirloomGearGemSlot>ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

TMap<int32, struct FHeirloomGearGemSlot> UHeirloomService::GetHeirloomGearGemSlotMap(int32 HeirloomId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HeirloomService", "GetHeirloomGearGemSlotMap");

	Params::HeirloomService_GetHeirloomGearGemSlotMap Parms{};

	Parms.HeirloomId = HeirloomId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.HeirloomService.GetHeirloomGroupArray
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   TypeId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UHeirloomGroup*>           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UHeirloomGroup*> UHeirloomService::GetHeirloomGroupArray(int32 TypeId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HeirloomService", "GetHeirloomGroupArray");

	Params::HeirloomService_GetHeirloomGroupArray Parms{};

	Parms.TypeId = TypeId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.HeirloomService.GetHeirloomGroupById
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   HeirloomGroupId                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UHeirloomGroup*                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHeirloomGroup* UHeirloomService::GetHeirloomGroupById(int32 HeirloomGroupId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HeirloomService", "GetHeirloomGroupById");

	Params::HeirloomService_GetHeirloomGroupById Parms{};

	Parms.HeirloomGroupId = HeirloomGroupId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.HeirloomService.GetHeirloomTypeByItemTypeId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   TypeId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHeirloomService::GetHeirloomTypeByItemTypeId(int32 TypeId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HeirloomService", "GetHeirloomTypeByItemTypeId");

	Params::HeirloomService_GetHeirloomTypeByItemTypeId Parms{};

	Parms.TypeId = TypeId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.HeirloomService.InlaidGearGem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   HeirloomId                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   GearGemId                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SlotId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHeirloomService::InlaidGearGem(int32 HeirloomId, int32 GearGemId, int32 SlotId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HeirloomService", "InlaidGearGem");

	Params::HeirloomService_InlaidGearGem Parms{};

	Parms.HeirloomId = HeirloomId;
	Parms.GearGemId = GearGemId;
	Parms.SlotId = SlotId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.HeirloomService.InstantiateHeirloom
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   HeirloomId                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CostIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EnItemStorageType                       StorageType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   PageId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHeirloomService::InstantiateHeirloom(int32 HeirloomId, int32 CostIndex, EnItemStorageType StorageType, int32 PageId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HeirloomService", "InstantiateHeirloom");

	Params::HeirloomService_InstantiateHeirloom Parms{};

	Parms.HeirloomId = HeirloomId;
	Parms.CostIndex = CostIndex;
	Parms.StorageType = StorageType;
	Parms.PageId = PageId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.HeirloomService.Lua_Deinitialize
// (Native, Event, Public, BlueprintEvent)

void UHeirloomService::Lua_Deinitialize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HeirloomService", "Lua_Deinitialize");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.HeirloomService.Lua_Initialized
// (Native, Event, Public, BlueprintEvent)

void UHeirloomService::Lua_Initialized()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HeirloomService", "Lua_Initialized");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.HeirloomService.GetAllHeirloomGroupData
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TMap<int32, class UHeirloomGroup*>      ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

TMap<int32, class UHeirloomGroup*> UHeirloomService::GetAllHeirloomGroupData() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HeirloomService", "GetAllHeirloomGroupData");

	Params::HeirloomService_GetAllHeirloomGroupData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.HeirloomGroup.GetCurHeirloomId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHeirloomGroup::GetCurHeirloomId() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HeirloomGroup", "GetCurHeirloomId");

	Params::HeirloomGroup_GetCurHeirloomId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.HeirloomGroup.GetDisplayHeirloomId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHeirloomGroup::GetDisplayHeirloomId() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HeirloomGroup", "GetDisplayHeirloomId");

	Params::HeirloomGroup_GetDisplayHeirloomId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.HeirloomGroup.GetEquippedGemItemId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   SlotId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHeirloomGroup::GetEquippedGemItemId(int32 SlotId) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HeirloomGroup", "GetEquippedGemItemId");

	Params::HeirloomGroup_GetEquippedGemItemId Parms{};

	Parms.SlotId = SlotId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.HeirloomGroup.GetGemItemIsEquipped
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   GemItemId                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHeirloomGroup::GetGemItemIsEquipped(int32 GemItemId) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HeirloomGroup", "GetGemItemIsEquipped");

	Params::HeirloomGroup_GetGemItemIsEquipped Parms{};

	Parms.GemItemId = GemItemId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.HeirloomGroup.GetHeirloomCanUpgrade
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   HeirloomId                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHeirloomGroup::GetHeirloomCanUpgrade(int32 HeirloomId) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HeirloomGroup", "GetHeirloomCanUpgrade");

	Params::HeirloomGroup_GetHeirloomCanUpgrade Parms{};

	Parms.HeirloomId = HeirloomId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.HeirloomGroup.GetIsUnlock
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHeirloomGroup::GetIsUnlock() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HeirloomGroup", "GetIsUnlock");

	Params::HeirloomGroup_GetIsUnlock Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.HeirloomGroup.GetIsValid
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHeirloomGroup::GetIsValid() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HeirloomGroup", "GetIsValid");

	Params::HeirloomGroup_GetIsValid Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.HeirloomGroup.GetLastHeirloomId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHeirloomGroup::GetLastHeirloomId() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HeirloomGroup", "GetLastHeirloomId");

	Params::HeirloomGroup_GetLastHeirloomId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.HeirloomGroup.GetNextHeirloomId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHeirloomGroup::GetNextHeirloomId() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HeirloomGroup", "GetNextHeirloomId");

	Params::HeirloomGroup_GetNextHeirloomId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.HeirloomGearGem.GetIsUnlock
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHeirloomGearGem::GetIsUnlock() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HeirloomGearGem", "GetIsUnlock");

	Params::HeirloomGearGem_GetIsUnlock Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.HeirloomGearGem.GetIsValid
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHeirloomGearGem::GetIsValid() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HeirloomGearGem", "GetIsValid");

	Params::HeirloomGearGem_GetIsValid Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.HttpReportService.ReportError
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FTGFReportRecord                 Record                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FString                           OpenID                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpReportService::ReportError(const struct FTGFReportRecord& Record, const class FString& OpenID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HttpReportService", "ReportError");

	Params::HttpReportService_ReportError Parms{};

	Parms.Record = std::move(Record);
	Parms.OpenID = std::move(OpenID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.HttpReportService.ReportEvent
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FTGFReportRecord                 Record                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FString                           OpenID                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpReportService::ReportEvent(const struct FTGFReportRecord& Record, const class FString& OpenID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HttpReportService", "ReportEvent");

	Params::HttpReportService_ReportEvent Parms{};

	Parms.Record = std::move(Record);
	Parms.OpenID = std::move(OpenID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.RainbowConfigService.GetConfig
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString URainbowConfigService::GetConfig(const class FString& Key) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RainbowConfigService", "GetConfig");

	Params::RainbowConfigService_GetConfig Parms{};

	Parms.Key = std::move(Key);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.RainbowConfigService.GetIntConfig
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 URainbowConfigService::GetIntConfig(const class FString& Key) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RainbowConfigService", "GetIntConfig");

	Params::RainbowConfigService_GetIntConfig Parms{};

	Parms.Key = std::move(Key);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.RankUserData.Create
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   RankIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class URankUserData*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class URankUserData* URankUserData::Create(int32 RankIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RankUserData", "Create");

	Params::RankUserData_Create Parms{};

	Parms.RankIndex = RankIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.RankUserData.IsContainsRank
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class URankUserData*                    RankData                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URankUserData::IsContainsRank(class URankUserData* RankData) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RankUserData", "IsContainsRank");

	Params::RankUserData_IsContainsRank Parms{};

	Parms.RankData = RankData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.PVPService.GetRoomInvitation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UPVPRoomInvitation*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPVPRoomInvitation* UPVPService::GetRoomInvitation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PVPService", "GetRoomInvitation");

	Params::PVPService_GetRoomInvitation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.PVPService.RestoreLastRoomInfos
// (Final, Native, Public, BlueprintCallable)

void UPVPService::RestoreLastRoomInfos()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PVPService", "RestoreLastRoomInfos");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.PVPService.SendRoomBatchGetReq
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class UPVPRoomKey*>              InRoomKeys                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<class FString>                   InRoomNames                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    bInSearch                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPVPService::SendRoomBatchGetReq(const TArray<class UPVPRoomKey*>& InRoomKeys, const TArray<class FString>& InRoomNames, bool bInSearch)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PVPService", "SendRoomBatchGetReq");

	Params::PVPService_SendRoomBatchGetReq Parms{};

	Parms.InRoomKeys = std::move(InRoomKeys);
	Parms.InRoomNames = std::move(InRoomNames);
	Parms.bInSearch = bInSearch;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.PVPService.SendRoomCancelReadyReq
// (Final, Native, Public, BlueprintCallable)

void UPVPService::SendRoomCancelReadyReq()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PVPService", "SendRoomCancelReadyReq");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.PVPService.SendRoomChangeMemberPosReq
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FUserKey                         InMemberUserKey                                        (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InTargetPos                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InIsTeamMember                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPVPService::SendRoomChangeMemberPosReq(const struct FUserKey& InMemberUserKey, int32 InTargetPos, bool InIsTeamMember)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PVPService", "SendRoomChangeMemberPosReq");

	Params::PVPService_SendRoomChangeMemberPosReq Parms{};

	Parms.InMemberUserKey = std::move(InMemberUserKey);
	Parms.InTargetPos = InTargetPos;
	Parms.InIsTeamMember = InIsTeamMember;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.PVPService.SendRoomChangeMySelfPosReq
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InTargetPos                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InIsTeamMember                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPVPService::SendRoomChangeMySelfPosReq(int32 InTargetPos, bool InIsTeamMember)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PVPService", "SendRoomChangeMySelfPosReq");

	Params::PVPService_SendRoomChangeMySelfPosReq Parms{};

	Parms.InTargetPos = InTargetPos;
	Parms.InIsTeamMember = InIsTeamMember;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.PVPService.SendRoomCreateReq
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           InRoomName                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           InRoomKeyword                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPVPService::SendRoomCreateReq(const class FString& InRoomName, const class FString& InRoomKeyword)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PVPService", "SendRoomCreateReq");

	Params::PVPService_SendRoomCreateReq Parms{};

	Parms.InRoomName = std::move(InRoomName);
	Parms.InRoomKeyword = std::move(InRoomKeyword);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.PVPService.SendRoomDisbandReq
// (Final, Native, Public, BlueprintCallable)

void UPVPService::SendRoomDisbandReq()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PVPService", "SendRoomDisbandReq");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.PVPService.SendRoomEnterReq
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UPVPRoomKey*                      InRoomKey                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           InRoomKeyword                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInInvited                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPVPService::SendRoomEnterReq(class UPVPRoomKey* InRoomKey, const class FString& InRoomKeyword, bool bInInvited)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PVPService", "SendRoomEnterReq");

	Params::PVPService_SendRoomEnterReq Parms{};

	Parms.InRoomKey = InRoomKey;
	Parms.InRoomKeyword = std::move(InRoomKeyword);
	Parms.bInInvited = bInInvited;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.PVPService.SendRoomGetReadyReq
// (Final, Native, Public, BlueprintCallable)

void UPVPService::SendRoomGetReadyReq()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PVPService", "SendRoomGetReadyReq");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.PVPService.SendRoomIgnoreAllUserInviteReq
// (Final, Native, Public, BlueprintCallable)

void UPVPService::SendRoomIgnoreAllUserInviteReq()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PVPService", "SendRoomIgnoreAllUserInviteReq");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.PVPService.SendRoomIgnoreRoomAllInviteReq
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UPVPRoomKey*                      InRoomKey                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPVPService::SendRoomIgnoreRoomAllInviteReq(class UPVPRoomKey* InRoomKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PVPService", "SendRoomIgnoreRoomAllInviteReq");

	Params::PVPService_SendRoomIgnoreRoomAllInviteReq Parms{};

	Parms.InRoomKey = InRoomKey;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.PVPService.SendRoomInviteAcceptReq
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FUserKey                         InSendUser                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPVPRoomKey*                      InRoomKey                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPVPService::SendRoomInviteAcceptReq(const struct FUserKey& InSendUser, class UPVPRoomKey* InRoomKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PVPService", "SendRoomInviteAcceptReq");

	Params::PVPService_SendRoomInviteAcceptReq Parms{};

	Parms.InSendUser = std::move(InSendUser);
	Parms.InRoomKey = InRoomKey;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.PVPService.SendRoomInviteRejectReq
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FUserKey                         InSendUser                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPVPRoomKey*                      InRoomKey                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPVPService::SendRoomInviteRejectReq(const struct FUserKey& InSendUser, class UPVPRoomKey* InRoomKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PVPService", "SendRoomInviteRejectReq");

	Params::PVPService_SendRoomInviteRejectReq Parms{};

	Parms.InSendUser = std::move(InSendUser);
	Parms.InRoomKey = InRoomKey;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.PVPService.SendRoomInviteSendReq
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FUserKey                         InTargetUser                                           (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPVPService::SendRoomInviteSendReq(const struct FUserKey& InTargetUser)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PVPService", "SendRoomInviteSendReq");

	Params::PVPService_SendRoomInviteSendReq Parms{};

	Parms.InTargetUser = std::move(InTargetUser);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.PVPService.SendRoomKeywordChangeReq
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           InRoomKeyword                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPVPService::SendRoomKeywordChangeReq(const class FString& InRoomKeyword)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PVPService", "SendRoomKeywordChangeReq");

	Params::PVPService_SendRoomKeywordChangeReq Parms{};

	Parms.InRoomKeyword = std::move(InRoomKeyword);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.PVPService.SendRoomKickOffMemberReq
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FUserKey                         InMemberKey                                            (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPVPService::SendRoomKickOffMemberReq(const struct FUserKey& InMemberKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PVPService", "SendRoomKickOffMemberReq");

	Params::PVPService_SendRoomKickOffMemberReq Parms{};

	Parms.InMemberKey = std::move(InMemberKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.PVPService.SendRoomLeaveReq
// (Final, Native, Public, BlueprintCallable)

void UPVPService::SendRoomLeaveReq()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PVPService", "SendRoomLeaveReq");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.PVPService.SendRoomNameChangeReq
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           InName                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPVPService::SendRoomNameChangeReq(const class FString& InName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PVPService", "SendRoomNameChangeReq");

	Params::PVPService_SendRoomNameChangeReq Parms{};

	Parms.InName = std::move(InName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.PVPService.SendRoomRefreshReq
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UPVPRoomKey*                      InRoomKey                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPVPService::SendRoomRefreshReq(class UPVPRoomKey* InRoomKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PVPService", "SendRoomRefreshReq");

	Params::PVPService_SendRoomRefreshReq Parms{};

	Parms.InRoomKey = InRoomKey;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.PVPService.SendRoomSelectBattleMapReq
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InMapId                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPVPService::SendRoomSelectBattleMapReq(int32 InMapId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PVPService", "SendRoomSelectBattleMapReq");

	Params::PVPService_SendRoomSelectBattleMapReq Parms{};

	Parms.InMapId = InMapId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.PVPService.SendRoomSelectBattleTypeReq
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InBattleType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPVPService::SendRoomSelectBattleTypeReq(int32 InBattleType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PVPService", "SendRoomSelectBattleTypeReq");

	Params::PVPService_SendRoomSelectBattleTypeReq Parms{};

	Parms.InBattleType = InBattleType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.PVPService.SendRoomStartBattleReq
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           InRegion                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPVPService::SendRoomStartBattleReq(const class FString& InRegion)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PVPService", "SendRoomStartBattleReq");

	Params::PVPService_SendRoomStartBattleReq Parms{};

	Parms.InRegion = std::move(InRegion);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.PVPService.SendRoomSuggestReq
// (Final, Native, Public, BlueprintCallable)

void UPVPService::SendRoomSuggestReq()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PVPService", "SendRoomSuggestReq");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.PVPService.SendRoomTransferOwnerReq
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FUserKey                         InNewOwnerUserKey                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPVPService::SendRoomTransferOwnerReq(const struct FUserKey& InNewOwnerUserKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PVPService", "SendRoomTransferOwnerReq");

	Params::PVPService_SendRoomTransferOwnerReq Parms{};

	Parms.InNewOwnerUserKey = std::move(InNewOwnerUserKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.PVPService.SetAutoEnterRoom
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    InAutoEnterRoom                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPVPService::SetAutoEnterRoom(bool InAutoEnterRoom)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PVPService", "SetAutoEnterRoom");

	Params::PVPService_SetAutoEnterRoom Parms{};

	Parms.InAutoEnterRoom = InAutoEnterRoom;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.PVPService.SetHasEnterRoomConfirmed
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    InHasEnterRoomConfirmed                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPVPService::SetHasEnterRoomConfirmed(bool InHasEnterRoomConfirmed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PVPService", "SetHasEnterRoomConfirmed");

	Params::PVPService_SetHasEnterRoomConfirmed Parms{};

	Parms.InHasEnterRoomConfirmed = InHasEnterRoomConfirmed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.PVPService.GetAutoEnterRoom
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPVPService::GetAutoEnterRoom() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PVPService", "GetAutoEnterRoom");

	Params::PVPService_GetAutoEnterRoom Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.PVPService.GetConsecutiveInvitationCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UPVPService::GetConsecutiveInvitationCount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PVPService", "GetConsecutiveInvitationCount");

	Params::PVPService_GetConsecutiveInvitationCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.PVPService.GetCurrentRoomInfo
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UPVPRoomListItemObject*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPVPRoomListItemObject* UPVPService::GetCurrentRoomInfo() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PVPService", "GetCurrentRoomInfo");

	Params::PVPService_GetCurrentRoomInfo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.PVPService.GetHasEnterRoomConfirmed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPVPService::GetHasEnterRoomConfirmed() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PVPService", "GetHasEnterRoomConfirmed");

	Params::PVPService_GetHasEnterRoomConfirmed Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.PVPService.GetIndexInWatchMembers
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FUserKey                         InUserKey                                              (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UPVPService::GetIndexInWatchMembers(const struct FUserKey& InUserKey) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PVPService", "GetIndexInWatchMembers");

	Params::PVPService_GetIndexInWatchMembers Parms{};

	Parms.InUserKey = std::move(InUserKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.PVPService.GetInviteRoomKey
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UPVPRoomKey*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPVPRoomKey* UPVPService::GetInviteRoomKey() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PVPService", "GetInviteRoomKey");

	Params::PVPService_GetInviteRoomKey Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.PVPService.GetMemberCamp
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FUserKey                         InUserKey                                              (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EPVPRoomMemberCamp                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EPVPRoomMemberCamp UPVPService::GetMemberCamp(const struct FUserKey& InUserKey) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PVPService", "GetMemberCamp");

	Params::PVPService_GetMemberCamp Parms{};

	Parms.InUserKey = std::move(InUserKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.PVPService.GetRoomAudienceMaxNum
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UPVPService::GetRoomAudienceMaxNum() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PVPService", "GetRoomAudienceMaxNum");

	Params::PVPService_GetRoomAudienceMaxNum Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.PVPService.GetRoomInfo
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UPVPRoomKey*                      InRoomKey                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPVPRoomListItemObject*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPVPRoomListItemObject* UPVPService::GetRoomInfo(class UPVPRoomKey* InRoomKey) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PVPService", "GetRoomInfo");

	Params::PVPService_GetRoomInfo Parms{};

	Parms.InRoomKey = InRoomKey;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.PVPService.GetRoomInfos
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const TArray<class UPVPRoomListItemObject*>ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const TArray<class UPVPRoomListItemObject*> UPVPService::GetRoomInfos() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PVPService", "GetRoomInfos");

	Params::PVPService_GetRoomInfos Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.PVPService.GetRoomMemberMaxNum
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UPVPService::GetRoomMemberMaxNum() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PVPService", "GetRoomMemberMaxNum");

	Params::PVPService_GetRoomMemberMaxNum Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.PVPService.GetRoomNameMaxLength
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UPVPService::GetRoomNameMaxLength() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PVPService", "GetRoomNameMaxLength");

	Params::PVPService_GetRoomNameMaxLength Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.PVPService.GetRoomPasswordMaxLength
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UPVPService::GetRoomPasswordMaxLength() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PVPService", "GetRoomPasswordMaxLength");

	Params::PVPService_GetRoomPasswordMaxLength Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.PVPService.GetTeamOwnerUserKey
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FUserKey                         ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FUserKey UPVPService::GetTeamOwnerUserKey() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PVPService", "GetTeamOwnerUserKey");

	Params::PVPService_GetTeamOwnerUserKey Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.PVPService.IsAudienceFull
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPVPService::IsAudienceFull() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PVPService", "IsAudienceFull");

	Params::PVPService_IsAudienceFull Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.PVPService.IsLeader
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   InSlotId                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InIsTeamMember                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPVPService::IsLeader(int32 InSlotId, bool InIsTeamMember) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PVPService", "IsLeader");

	Params::PVPService_IsLeader Parms{};

	Parms.InSlotId = InSlotId;
	Parms.InIsTeamMember = InIsTeamMember;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.PVPService.IsMySelfOwner
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPVPService::IsMySelfOwner() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PVPService", "IsMySelfOwner");

	Params::PVPService_IsMySelfOwner Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.PVPService.IsMySelfTeamMember
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPVPService::IsMySelfTeamMember() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PVPService", "IsMySelfTeamMember");

	Params::PVPService_IsMySelfTeamMember Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.PVPService.IsOwner
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FUserKey                         InUserKey                                              (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPVPService::IsOwner(const struct FUserKey& InUserKey) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PVPService", "IsOwner");

	Params::PVPService_IsOwner Parms{};

	Parms.InUserKey = std::move(InUserKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.PVPService.IsPlayerReady
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FUserKey                         InUserKey                                              (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPVPService::IsPlayerReady(const struct FUserKey& InUserKey) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PVPService", "IsPlayerReady");

	Params::PVPService_IsPlayerReady Parms{};

	Parms.InUserKey = std::move(InUserKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.InventoryService.GetAllFirstLevelAttributeId
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UInventoryService::GetAllFirstLevelAttributeId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("InventoryService", "GetAllFirstLevelAttributeId");

	Params::InventoryService_GetAllFirstLevelAttributeId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.InventoryService.GetDPHAttributeId
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UInventoryService::GetDPHAttributeId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("InventoryService", "GetDPHAttributeId");

	Params::InventoryService_GetDPHAttributeId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.InventoryService.GetRoleAttributeValue
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class URoleAttributeInfo*               AttributeInfo                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EnRoleDisplayAttribueID                 Type_id                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UInventoryService::GetRoleAttributeValue(class URoleAttributeInfo* AttributeInfo, EnRoleDisplayAttribueID Type_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("InventoryService", "GetRoleAttributeValue");

	Params::InventoryService_GetRoleAttributeValue Parms{};

	Parms.AttributeInfo = AttributeInfo;
	Parms.Type_id = Type_id;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.InventoryService.SortConsumeItems
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct FTGFItem>                 Items                                                  (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UInventoryService::SortConsumeItems(TArray<struct FTGFItem>* Items)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("InventoryService", "SortConsumeItems");

	Params::InventoryService_SortConsumeItems Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Items != nullptr)
		*Items = std::move(Parms.Items);
}


// Function TGFGame.InventoryService.TGFItemToTGFProtoTgfDItem
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FTGFItem                         Item                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class UTGFProtoTgfDItem*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTGFProtoTgfDItem* UInventoryService::TGFItemToTGFProtoTgfDItem(const struct FTGFItem& Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("InventoryService", "TGFItemToTGFProtoTgfDItem");

	Params::InventoryService_TGFItemToTGFProtoTgfDItem Parms{};

	Parms.Item = std::move(Item);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.InventoryService.CanInventoryHotkey
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInventoryService::CanInventoryHotkey()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryService", "CanInventoryHotkey");

	Params::InventoryService_CanInventoryHotkey Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.InventoryService.DisableInventoryHotkey
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUserWidget*                      Widget                                                 (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UInventoryService::DisableInventoryHotkey(class UUserWidget* Widget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryService", "DisableInventoryHotkey");

	Params::InventoryService_DisableInventoryHotkey Parms{};

	Parms.Widget = Widget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.InventoryService.DuplicateWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWidget*                          Src                                                    (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             Param_Name                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                          ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWidget* UInventoryService::DuplicateWidget(class UWidget* Src, const class FName Param_Name)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryService", "DuplicateWidget");

	Params::InventoryService_DuplicateWidget Parms{};

	Parms.Src = Src;
	Parms.Param_Name = Param_Name;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.InventoryService.EnableInventoryHotkey
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUserWidget*                      Widget                                                 (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UInventoryService::EnableInventoryHotkey(class UUserWidget* Widget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryService", "EnableInventoryHotkey");

	Params::InventoryService_EnableInventoryHotkey Parms{};

	Parms.Widget = Widget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.InventoryService.FindEquipmentDefinition
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Type_id                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UTgfEquipmentDefinition*    ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UTgfEquipmentDefinition* UInventoryService::FindEquipmentDefinition(int32 Type_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryService", "FindEquipmentDefinition");

	Params::InventoryService_FindEquipmentDefinition Parms{};

	Parms.Type_id = Type_id;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.InventoryService.FireHostEquipChnaged
// (Final, Native, Public, BlueprintCallable)

void UInventoryService::FireHostEquipChnaged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryService", "FireHostEquipChnaged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.InventoryService.FireLobbyInventoryOpen
// (Final, Native, Public, BlueprintCallable)

void UInventoryService::FireLobbyInventoryOpen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryService", "FireLobbyInventoryOpen");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.InventoryService.GetAffixDisplayConfig
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FTGFItem                         TGFItem                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<struct FAffixDisplayConfig>      Base                                                   (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<struct FAffixDisplayConfig>      MainBasic                                              (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<struct FAffixDisplayConfig>      TopAffix                                               (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<struct FAffixDisplayConfig>      GemAffix                                               (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<struct FAffixDisplayConfig>      GearSetAffix                                           (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInventoryService::GetAffixDisplayConfig(const struct FTGFItem& TGFItem, TArray<struct FAffixDisplayConfig>* Base, TArray<struct FAffixDisplayConfig>* MainBasic, TArray<struct FAffixDisplayConfig>* TopAffix, TArray<struct FAffixDisplayConfig>* GemAffix, TArray<struct FAffixDisplayConfig>* GearSetAffix)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryService", "GetAffixDisplayConfig");

	Params::InventoryService_GetAffixDisplayConfig Parms{};

	Parms.TGFItem = std::move(TGFItem);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Base != nullptr)
		*Base = std::move(Parms.Base);

	if (MainBasic != nullptr)
		*MainBasic = std::move(Parms.MainBasic);

	if (TopAffix != nullptr)
		*TopAffix = std::move(Parms.TopAffix);

	if (GemAffix != nullptr)
		*GemAffix = std::move(Parms.GemAffix);

	if (GearSetAffix != nullptr)
		*GearSetAffix = std::move(Parms.GearSetAffix);

	return Parms.ReturnValue;
}


// Function TGFGame.InventoryService.GetAffixDisplayConfigByPos
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FTGFItemPosition                 Pos                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
// TArray<struct FAffixDisplayConfig>      Base                                                   (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<struct FAffixDisplayConfig>      MainBasic                                              (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<struct FAffixDisplayConfig>      TopAffix                                               (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<struct FAffixDisplayConfig>      GemAffix                                               (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<struct FAffixDisplayConfig>      GearSetAffix                                           (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInventoryService::GetAffixDisplayConfigByPos(const struct FTGFItemPosition& Pos, TArray<struct FAffixDisplayConfig>* Base, TArray<struct FAffixDisplayConfig>* MainBasic, TArray<struct FAffixDisplayConfig>* TopAffix, TArray<struct FAffixDisplayConfig>* GemAffix, TArray<struct FAffixDisplayConfig>* GearSetAffix)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryService", "GetAffixDisplayConfigByPos");

	Params::InventoryService_GetAffixDisplayConfigByPos Parms{};

	Parms.Pos = std::move(Pos);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Base != nullptr)
		*Base = std::move(Parms.Base);

	if (MainBasic != nullptr)
		*MainBasic = std::move(Parms.MainBasic);

	if (TopAffix != nullptr)
		*TopAffix = std::move(Parms.TopAffix);

	if (GemAffix != nullptr)
		*GemAffix = std::move(Parms.GemAffix);

	if (GearSetAffix != nullptr)
		*GearSetAffix = std::move(Parms.GearSetAffix);

	return Parms.ReturnValue;
}


// Function TGFGame.InventoryService.GetAllAffix
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Guid                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TMap<int32, float>                      Attributes                                             (Parm, OutParm, NativeAccessSpecifierPublic)
// TMap<int32, float>                      base_attributes                                        (Parm, OutParm, NativeAccessSpecifierPublic)

void UInventoryService::GetAllAffix(int64 Guid, TMap<int32, float>* Attributes, TMap<int32, float>* base_attributes)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryService", "GetAllAffix");

	Params::InventoryService_GetAllAffix Parms{};

	Parms.Guid = Guid;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Attributes != nullptr)
		*Attributes = std::move(Parms.Attributes);

	if (base_attributes != nullptr)
		*base_attributes = std::move(Parms.base_attributes);
}


// Function TGFGame.InventoryService.GetAllEquipLevel
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UInventoryService::GetAllEquipLevel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryService", "GetAllEquipLevel");

	Params::InventoryService_GetAllEquipLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.InventoryService.GetArmorDefinition
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Type_id                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UTgfArmorDefinition*        ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UTgfArmorDefinition* UInventoryService::GetArmorDefinition(int32 Type_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryService", "GetArmorDefinition");

	Params::InventoryService_GetArmorDefinition Parms{};

	Parms.Type_id = Type_id;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.InventoryService.GetAverageDefence
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   Guid                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UInventoryService::GetAverageDefence(int64 Guid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryService", "GetAverageDefence");

	Params::InventoryService_GetAverageDefence Parms{};

	Parms.Guid = Guid;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.InventoryService.GetAverageDPH
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   Guid                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UInventoryService::GetAverageDPH(int64 Guid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryService", "GetAverageDPH");

	Params::InventoryService_GetAverageDPH Parms{};

	Parms.Guid = Guid;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.InventoryService.GetBagData
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Guid                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTGFUserInvetoryData             Inventory                                              (Parm, OutParm, NativeAccessSpecifierPublic)
// TArray<struct FTGFItem>                 Items                                                  (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInventoryService::GetBagData(int64 Guid, struct FTGFUserInvetoryData* Inventory, TArray<struct FTGFItem>* Items)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryService", "GetBagData");

	Params::InventoryService_GetBagData Parms{};

	Parms.Guid = Guid;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Inventory != nullptr)
		*Inventory = std::move(Parms.Inventory);

	if (Items != nullptr)
		*Items = std::move(Parms.Items);

	return Parms.ReturnValue;
}


// Function TGFGame.InventoryService.GetCellItem
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// EnItemStorageType                       Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   X                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Y                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   PageId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTGFItem                         Item                                                   (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInventoryService::GetCellItem(EnItemStorageType Type, int32 X, int32 Y, int32 PageId, struct FTGFItem* Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryService", "GetCellItem");

	Params::InventoryService_GetCellItem Parms{};

	Parms.Type = Type;
	Parms.X = X;
	Parms.Y = Y;
	Parms.PageId = PageId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Item != nullptr)
		*Item = std::move(Parms.Item);

	return Parms.ReturnValue;
}


// Function TGFGame.InventoryService.GetClickDragingWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWidget*                          ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWidget* UInventoryService::GetClickDragingWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryService", "GetClickDragingWidget");

	Params::InventoryService_GetClickDragingWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.InventoryService.GetCoin
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UInventoryService::GetCoin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryService", "GetCoin");

	Params::InventoryService_GetCoin Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.InventoryService.GetCoinItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Type_id                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UInventoryService::GetCoinItem(int32 Type_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryService", "GetCoinItem");

	Params::InventoryService_GetCoinItem Parms{};

	Parms.Type_id = Type_id;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.InventoryService.GetCostItemCount
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   TypeId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UInventoryService::GetCostItemCount(int32 TypeId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryService", "GetCostItemCount");

	Params::InventoryService_GetCostItemCount Parms{};

	Parms.TypeId = TypeId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.InventoryService.GetCurrentRole
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UInventoryService::GetCurrentRole()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryService", "GetCurrentRole");

	Params::InventoryService_GetCurrentRole Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.InventoryService.GetEquipmentData
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Guid                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FTGFItem>                 Items                                                  (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInventoryService::GetEquipmentData(int64 Guid, TArray<struct FTGFItem>* Items)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryService", "GetEquipmentData");

	Params::InventoryService_GetEquipmentData Parms{};

	Parms.Guid = Guid;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Items != nullptr)
		*Items = std::move(Parms.Items);

	return Parms.ReturnValue;
}


// Function TGFGame.InventoryService.GetEquipSubtype
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Type_id                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETgfEquipSubType                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETgfEquipSubType UInventoryService::GetEquipSubtype(int32 Type_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryService", "GetEquipSubtype");

	Params::InventoryService_GetEquipSubtype Parms{};

	Parms.Type_id = Type_id;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.InventoryService.GetEquipType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Type_id                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETgfWeaponEquipType                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETgfWeaponEquipType UInventoryService::GetEquipType(int32 Type_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryService", "GetEquipType");

	Params::InventoryService_GetEquipType Parms{};

	Parms.Type_id = Type_id;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.InventoryService.GetFacadeDta
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTGFProtoTgfDUserFacadeData*      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTGFProtoTgfDUserFacadeData* UInventoryService::GetFacadeDta()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryService", "GetFacadeDta");

	Params::InventoryService_GetFacadeDta Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.InventoryService.GetIdleAnimation
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   Main_type_id                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Second_type_id                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTagContainer            WithTags                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    bIsRightIdle                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UAnimSequenceBase*          ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UAnimSequenceBase* UInventoryService::GetIdleAnimation(int32 Main_type_id, int32 Second_type_id, const struct FGameplayTagContainer& WithTags, bool* bIsRightIdle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryService", "GetIdleAnimation");

	Params::InventoryService_GetIdleAnimation Parms{};

	Parms.Main_type_id = Main_type_id;
	Parms.Second_type_id = Second_type_id;
	Parms.WithTags = std::move(WithTags);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bIsRightIdle != nullptr)
		*bIsRightIdle = Parms.bIsRightIdle;

	return Parms.ReturnValue;
}


// Function TGFGame.InventoryService.GetInventoryIcon
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Type_id                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UInventoryFragment_InventoryIcon*ReturnValue                                            (ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UInventoryFragment_InventoryIcon* UInventoryService::GetInventoryIcon(int32 Type_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryService", "GetInventoryIcon");

	Params::InventoryService_GetInventoryIcon Parms{};

	Parms.Type_id = Type_id;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.InventoryService.GetInventoryWindow
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTGFWindow*                       ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTGFWindow* UInventoryService::GetInventoryWindow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryService", "GetInventoryWindow");

	Params::InventoryService_GetInventoryWindow Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.InventoryService.GetItemAffixAttributeIds
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ItemId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSet<int32>                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

TSet<int32> UInventoryService::GetItemAffixAttributeIds(int32 ItemId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryService", "GetItemAffixAttributeIds");

	Params::InventoryService_GetItemAffixAttributeIds Parms{};

	Parms.ItemId = ItemId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.InventoryService.GetItemAffixDisplayConfig
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   ItemId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FAffixDisplayConfig>      Affix                                                  (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<struct FAffixDisplayConfig>      Base                                                   (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<struct FAffixDisplayConfig>      Main                                                   (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<struct FAffixDisplayConfig>      Top                                                    (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<struct FAffixDisplayConfig>      Gem                                                    (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<struct FAffixDisplayConfig>      GearSet                                                (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UInventoryService::GetItemAffixDisplayConfig(int32 ItemId, TArray<struct FAffixDisplayConfig>* Affix, TArray<struct FAffixDisplayConfig>* Base, TArray<struct FAffixDisplayConfig>* Main, TArray<struct FAffixDisplayConfig>* Top, TArray<struct FAffixDisplayConfig>* Gem, TArray<struct FAffixDisplayConfig>* GearSet)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryService", "GetItemAffixDisplayConfig");

	Params::InventoryService_GetItemAffixDisplayConfig Parms{};

	Parms.ItemId = ItemId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Affix != nullptr)
		*Affix = std::move(Parms.Affix);

	if (Base != nullptr)
		*Base = std::move(Parms.Base);

	if (Main != nullptr)
		*Main = std::move(Parms.Main);

	if (Top != nullptr)
		*Top = std::move(Parms.Top);

	if (Gem != nullptr)
		*Gem = std::move(Parms.Gem);

	if (GearSet != nullptr)
		*GearSet = std::move(Parms.GearSet);
}


// Function TGFGame.InventoryService.GetItemByGuid
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   RoleGuid                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ItemGuid                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTGFItem                         Item                                                   (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInventoryService::GetItemByGuid(int64 RoleGuid, int64 ItemGuid, struct FTGFItem* Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryService", "GetItemByGuid");

	Params::InventoryService_GetItemByGuid Parms{};

	Parms.RoleGuid = RoleGuid;
	Parms.ItemGuid = ItemGuid;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Item != nullptr)
		*Item = std::move(Parms.Item);

	return Parms.ReturnValue;
}


// Function TGFGame.InventoryService.GetItemConfig
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Type_id                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UTgfInventoryItemDefinition*ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UTgfInventoryItemDefinition* UInventoryService::GetItemConfig(int32 Type_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryService", "GetItemConfig");

	Params::InventoryService_GetItemConfig Parms{};

	Parms.Type_id = Type_id;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.InventoryService.GetItemConfigClass
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   Type_id                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UTgfInventoryItemDefinition>ItemClass                                              (Parm, OutParm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInventoryService::GetItemConfigClass(int32 Type_id, TSubclassOf<class UTgfInventoryItemDefinition>* ItemClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryService", "GetItemConfigClass");

	Params::InventoryService_GetItemConfigClass Parms{};

	Parms.Type_id = Type_id;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ItemClass != nullptr)
		*ItemClass = Parms.ItemClass;

	return Parms.ReturnValue;
}


// Function TGFGame.InventoryService.GetItemCountInPackage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   Guid                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Type_id                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UInventoryService::GetItemCountInPackage(int64 Guid, int32 Type_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryService", "GetItemCountInPackage");

	Params::InventoryService_GetItemCountInPackage Parms{};

	Parms.Guid = Guid;
	Parms.Type_id = Type_id;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.InventoryService.GetItemItemMinorType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Type_id                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETGFProtoTgfEnItemMinorType             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETGFProtoTgfEnItemMinorType UInventoryService::GetItemItemMinorType(int32 Type_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryService", "GetItemItemMinorType");

	Params::InventoryService_GetItemItemMinorType Parms{};

	Parms.Type_id = Type_id;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.InventoryService.GetItemMajorType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Type_id                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETGFProtoTgfEnItemMajorType             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETGFProtoTgfEnItemMajorType UInventoryService::GetItemMajorType(int32 Type_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryService", "GetItemMajorType");

	Params::InventoryService_GetItemMajorType Parms{};

	Parms.Type_id = Type_id;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.InventoryService.GetItemQuality
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Type_id                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETgfEquipQuality                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETgfEquipQuality UInventoryService::GetItemQuality(int32 Type_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryService", "GetItemQuality");

	Params::InventoryService_GetItemQuality Parms{};

	Parms.Type_id = Type_id;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.InventoryService.GetItemsById
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Guid                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Type_id                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FTGFItem>                 Out_items                                              (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UInventoryService::GetItemsById(int64 Guid, int32 Type_id, TArray<struct FTGFItem>* Out_items)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryService", "GetItemsById");

	Params::InventoryService_GetItemsById Parms{};

	Parms.Guid = Guid;
	Parms.Type_id = Type_id;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Out_items != nullptr)
		*Out_items = std::move(Parms.Out_items);
}


// Function TGFGame.InventoryService.GetItemsByIdAndType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Guid                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Type_id                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EnItemStorageType                       Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FTGFItem>                 Out_items                                              (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UInventoryService::GetItemsByIdAndType(int64 Guid, int32 Type_id, EnItemStorageType Type, TArray<struct FTGFItem>* Out_items)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryService", "GetItemsByIdAndType");

	Params::InventoryService_GetItemsByIdAndType Parms{};

	Parms.Guid = Guid;
	Parms.Type_id = Type_id;
	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Out_items != nullptr)
		*Out_items = std::move(Parms.Out_items);
}


// Function TGFGame.InventoryService.GetItemSize
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// int32                                   Type_id                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FIntPoint                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FIntPoint UInventoryService::GetItemSize(int32 Type_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryService", "GetItemSize");

	Params::InventoryService_GetItemSize Parms{};

	Parms.Type_id = Type_id;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.InventoryService.GetItemSkinId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ETgfSkinSlot                            Slot                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UInventoryService::GetItemSkinId(ETgfSkinSlot Slot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryService", "GetItemSkinId");

	Params::InventoryService_GetItemSkinId Parms{};

	Parms.Slot = Slot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.InventoryService.GetItemTooltipWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUserWidget*                      ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUserWidget* UInventoryService::GetItemTooltipWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryService", "GetItemTooltipWidget");

	Params::InventoryService_GetItemTooltipWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.InventoryService.GetMatchEquip
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   Type_id                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTGFItem                         Item                                                   (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInventoryService::GetMatchEquip(int32 Type_id, struct FTGFItem* Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryService", "GetMatchEquip");

	Params::InventoryService_GetMatchEquip Parms{};

	Parms.Type_id = Type_id;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Item != nullptr)
		*Item = std::move(Parms.Item);

	return Parms.ReturnValue;
}


// Function TGFGame.InventoryService.GetPageAddItemId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   Count                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UInventoryService::GetPageAddItemId(int32* Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryService", "GetPageAddItemId");

	Params::InventoryService_GetPageAddItemId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Count != nullptr)
		*Count = Parms.Count;

	return Parms.ReturnValue;
}


// Function TGFGame.InventoryService.GetPayDiamond
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UInventoryService::GetPayDiamond()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryService", "GetPayDiamond");

	Params::InventoryService_GetPayDiamond Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.InventoryService.GetRoleAttributeInfo
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   Guid                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class URoleAttributeInfo*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class URoleAttributeInfo* UInventoryService::GetRoleAttributeInfo(int64 Guid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryService", "GetRoleAttributeInfo");

	Params::InventoryService_GetRoleAttributeInfo Parms{};

	Parms.Guid = Guid;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.InventoryService.GetRoleEquipment
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   Guid                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   X                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTGFItem                         Item                                                   (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInventoryService::GetRoleEquipment(int32 Guid, int32 X, struct FTGFItem* Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryService", "GetRoleEquipment");

	Params::InventoryService_GetRoleEquipment Parms{};

	Parms.Guid = Guid;
	Parms.X = X;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Item != nullptr)
		*Item = std::move(Parms.Item);

	return Parms.ReturnValue;
}


// Function TGFGame.InventoryService.GetRoleWeaponOnHand
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// int64                                   Guid                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Right                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Left                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInventoryService::GetRoleWeaponOnHand(int64 Guid, int32* Right, int32* Left)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryService", "GetRoleWeaponOnHand");

	Params::InventoryService_GetRoleWeaponOnHand Parms{};

	Parms.Guid = Guid;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Right != nullptr)
		*Right = Parms.Right;

	if (Left != nullptr)
		*Left = Parms.Left;

	return Parms.ReturnValue;
}


// Function TGFGame.InventoryService.GetSkinAcquireTime
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   SkinId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UInventoryService::GetSkinAcquireTime(int32 SkinId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryService", "GetSkinAcquireTime");

	Params::InventoryService_GetSkinAcquireTime Parms{};

	Parms.SkinId = SkinId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.InventoryService.GetSkinByThirdSlot
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ThirdSlot                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UInventoryService::GetSkinByThirdSlot(int32 ThirdSlot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryService", "GetSkinByThirdSlot");

	Params::InventoryService_GetSkinByThirdSlot Parms{};

	Parms.ThirdSlot = ThirdSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.InventoryService.GetSmallPackData
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Guid                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTGFUserInvetoryData             Inventory                                              (Parm, OutParm, NativeAccessSpecifierPublic)
// TArray<struct FTGFItem>                 Items                                                  (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInventoryService::GetSmallPackData(int64 Guid, struct FTGFUserInvetoryData* Inventory, TArray<struct FTGFItem>* Items)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryService", "GetSmallPackData");

	Params::InventoryService_GetSmallPackData Parms{};

	Parms.Guid = Guid;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Inventory != nullptr)
		*Inventory = std::move(Parms.Inventory);

	if (Items != nullptr)
		*Items = std::move(Parms.Items);

	return Parms.ReturnValue;
}


// Function TGFGame.InventoryService.GetSoulBound
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTGFProtoTgfDUserSoulBound*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTGFProtoTgfDUserSoulBound* UInventoryService::GetSoulBound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryService", "GetSoulBound");

	Params::InventoryService_GetSoulBound Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.InventoryService.GetStackCount
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   Type_id                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Stack_count                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInventoryService::GetStackCount(int32 Type_id, int32* Stack_count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryService", "GetStackCount");

	Params::InventoryService_GetStackCount Parms{};

	Parms.Type_id = Type_id;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Stack_count != nullptr)
		*Stack_count = Parms.Stack_count;

	return Parms.ReturnValue;
}


// Function TGFGame.InventoryService.GetStorageData
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   PageId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FTGFItem>                 Items                                                  (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// struct FTGFUserInvetoryData             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FTGFUserInvetoryData UInventoryService::GetStorageData(int32 PageId, TArray<struct FTGFItem>* Items)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryService", "GetStorageData");

	Params::InventoryService_GetStorageData Parms{};

	Parms.PageId = PageId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Items != nullptr)
		*Items = std::move(Parms.Items);

	return Parms.ReturnValue;
}


// Function TGFGame.InventoryService.GetStoragePageCount
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UInventoryService::GetStoragePageCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryService", "GetStoragePageCount");

	Params::InventoryService_GetStoragePageCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.InventoryService.GetTalentsCount
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UInventoryService::GetTalentsCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryService", "GetTalentsCount");

	Params::InventoryService_GetTalentsCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.InventoryService.GetTooltipCompare
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInventoryService::GetTooltipCompare()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryService", "GetTooltipCompare");

	Params::InventoryService_GetTooltipCompare Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.InventoryService.GetVirtualItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Type_id                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UInventoryService::GetVirtualItem(int32 Type_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryService", "GetVirtualItem");

	Params::InventoryService_GetVirtualItem Parms{};

	Parms.Type_id = Type_id;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.InventoryService.GetVirtualItemInfo
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   Type_id                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTGFItem                         Item                                                   (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInventoryService::GetVirtualItemInfo(int32 Type_id, struct FTGFItem* Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryService", "GetVirtualItemInfo");

	Params::InventoryService_GetVirtualItemInfo Parms{};

	Parms.Type_id = Type_id;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Item != nullptr)
		*Item = std::move(Parms.Item);

	return Parms.ReturnValue;
}


// Function TGFGame.InventoryService.GetVirtualItemRowIndex
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// int32                                   TypeId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UInventoryService::GetVirtualItemRowIndex(int32 TypeId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryService", "GetVirtualItemRowIndex");

	Params::InventoryService_GetVirtualItemRowIndex Parms{};

	Parms.TypeId = TypeId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.InventoryService.GetVirtualItems
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UTypeIdObject*>            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UTypeIdObject*> UInventoryService::GetVirtualItems()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryService", "GetVirtualItems");

	Params::InventoryService_GetVirtualItems Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.InventoryService.GetWeaponOnHand
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   Right                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Left                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInventoryService::GetWeaponOnHand(int32* Right, int32* Left)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryService", "GetWeaponOnHand");

	Params::InventoryService_GetWeaponOnHand Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Right != nullptr)
		*Right = Parms.Right;

	if (Left != nullptr)
		*Left = Parms.Left;

	return Parms.ReturnValue;
}


// Function TGFGame.InventoryService.IsBothHandWeapon
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Type_id                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInventoryService::IsBothHandWeapon(int32 Type_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryService", "IsBothHandWeapon");

	Params::InventoryService_IsBothHandWeapon Parms{};

	Parms.Type_id = Type_id;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.InventoryService.IsCellValid
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// EnItemStorageType                       Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FIntPoint                        Cell                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FIntPoint                        Size                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   PageId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInventoryService::IsCellValid(EnItemStorageType Type, const struct FIntPoint& Cell, const struct FIntPoint& Size, int32 PageId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryService", "IsCellValid");

	Params::InventoryService_IsCellValid Parms{};

	Parms.Type = Type;
	Parms.Cell = std::move(Cell);
	Parms.Size = std::move(Size);
	Parms.PageId = PageId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.InventoryService.IsEquipment
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Type_id                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInventoryService::IsEquipment(int32 Type_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryService", "IsEquipment");

	Params::InventoryService_IsEquipment Parms{};

	Parms.Type_id = Type_id;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.InventoryService.IsFreezeOperation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInventoryService::IsFreezeOperation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryService", "IsFreezeOperation");

	Params::InventoryService_IsFreezeOperation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.InventoryService.IsHaveSkin
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   SkinId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInventoryService::IsHaveSkin(int32 SkinId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryService", "IsHaveSkin");

	Params::InventoryService_IsHaveSkin Parms{};

	Parms.SkinId = SkinId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.InventoryService.IsHiddenHelmet
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInventoryService::IsHiddenHelmet()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryService", "IsHiddenHelmet");

	Params::InventoryService_IsHiddenHelmet Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.InventoryService.IsItemMatchLeftWeapon
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Main_type_id                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Left_type_id                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInventoryService::IsItemMatchLeftWeapon(int32 Main_type_id, int32 Left_type_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryService", "IsItemMatchLeftWeapon");

	Params::InventoryService_IsItemMatchLeftWeapon Parms{};

	Parms.Main_type_id = Main_type_id;
	Parms.Left_type_id = Left_type_id;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.InventoryService.IsItemMatchSlot
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   Type_id                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETgfEquipSlot                           SlotType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTagContainer            Container                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    IgnoreCondition                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInventoryService::IsItemMatchSlot(int32 Type_id, ETgfEquipSlot SlotType, const struct FGameplayTagContainer& Container, bool IgnoreCondition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryService", "IsItemMatchSlot");

	Params::InventoryService_IsItemMatchSlot Parms{};

	Parms.Type_id = Type_id;
	Parms.SlotType = SlotType;
	Parms.Container = std::move(Container);
	Parms.IgnoreCondition = IgnoreCondition;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.InventoryService.IsMatchSlotConfig
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// ETgfEquipSlot                           SlotType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETgfEquipSubType                        WeaponType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTagContainer            Container                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    IgnoreCondition                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInventoryService::IsMatchSlotConfig(ETgfEquipSlot SlotType, ETgfEquipSubType WeaponType, const struct FGameplayTagContainer& Container, bool IgnoreCondition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryService", "IsMatchSlotConfig");

	Params::InventoryService_IsMatchSlotConfig Parms{};

	Parms.SlotType = SlotType;
	Parms.WeaponType = WeaponType;
	Parms.Container = std::move(Container);
	Parms.IgnoreCondition = IgnoreCondition;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.InventoryService.Lua_GetRoleAttributeValue
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// EnRoleDisplayAttribueID                 AttributeID                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UInventoryService::Lua_GetRoleAttributeValue(EnRoleDisplayAttribueID AttributeID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryService", "Lua_GetRoleAttributeValue");

	Params::InventoryService_Lua_GetRoleAttributeValue Parms{};

	Parms.AttributeID = AttributeID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.InventoryService.Lua_Initialized
// (Native, Event, Public, BlueprintEvent)

void UInventoryService::Lua_Initialized()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryService", "Lua_Initialized");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.InventoryService.Lua_OnPreLoadMap
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class FString                           MapName                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UInventoryService::Lua_OnPreLoadMap(const class FString& MapName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryService", "Lua_OnPreLoadMap");

	Params::InventoryService_Lua_OnPreLoadMap Parms{};

	Parms.MapName = std::move(MapName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.InventoryService.OnGameLogout
// (Final, Native, Private)
// Parameters:
// class UTGFEventArgs*                    Args                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UInventoryService::OnGameLogout(class UTGFEventArgs* Args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryService", "OnGameLogout");

	Params::InventoryService_OnGameLogout Parms{};

	Parms.Args = Args;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.InventoryService.OpenInventoryWindow
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    byHotkey                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UInventoryService::OpenInventoryWindow(bool byHotkey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryService", "OpenInventoryWindow");

	Params::InventoryService_OpenInventoryWindow Parms{};

	Parms.byHotkey = byHotkey;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.InventoryService.ResetCell
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// EnItemStorageType                       Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FIntVector                       Cell                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FIntPoint                        Size                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UInventoryService::ResetCell(EnItemStorageType Type, const struct FIntVector& Cell, const struct FIntPoint& Size)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryService", "ResetCell");

	Params::InventoryService_ResetCell Parms{};

	Parms.Type = Type;
	Parms.Cell = std::move(Cell);
	Parms.Size = std::move(Size);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.InventoryService.ResetFreezeOperationTime
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UInventoryService::ResetFreezeOperationTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryService", "ResetFreezeOperationTime");

	Params::InventoryService_ResetFreezeOperationTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.InventoryService.SendDeleteSkinTemplate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           ID                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UInventoryService::SendDeleteSkinTemplate(const class FString& ID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryService", "SendDeleteSkinTemplate");

	Params::InventoryService_SendDeleteSkinTemplate Parms{};

	Parms.ID = std::move(ID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.InventoryService.SendInventoryItemMoveReq
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<struct FTGFItemMoveAction>       Actions                                                (Parm, ZeroConstructor, NativeAccessSpecifierPublic)

void UInventoryService::SendInventoryItemMoveReq(const TArray<struct FTGFItemMoveAction>& Actions)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryService", "SendInventoryItemMoveReq");

	Params::InventoryService_SendInventoryItemMoveReq Parms{};

	Parms.Actions = std::move(Actions);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.InventoryService.SendInventoryItemSwapReq
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FTGFItemPosition                 SrcCell                                                (Parm, NoDestructor, NativeAccessSpecifierPublic)
// struct FTGFItemPosition                 DestCell                                               (Parm, NoDestructor, NativeAccessSpecifierPublic)
// struct FTGFItemPosition                 Pos1                                                   (Parm, NoDestructor, NativeAccessSpecifierPublic)
// struct FTGFItemPosition                 Pos2                                                   (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UInventoryService::SendInventoryItemSwapReq(const struct FTGFItemPosition& SrcCell, const struct FTGFItemPosition& DestCell, const struct FTGFItemPosition& Pos1, const struct FTGFItemPosition& Pos2)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryService", "SendInventoryItemSwapReq");

	Params::InventoryService_SendInventoryItemSwapReq Parms{};

	Parms.SrcCell = std::move(SrcCell);
	Parms.DestCell = std::move(DestCell);
	Parms.Pos1 = std::move(Pos1);
	Parms.Pos2 = std::move(Pos2);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.InventoryService.SendInventoryPageAddReq
// (Final, Native, Public, BlueprintCallable)

void UInventoryService::SendInventoryPageAddReq()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryService", "SendInventoryPageAddReq");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.InventoryService.SendMithrilRoleWearReq
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   TypeId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Count                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTGFItemPosition                 Position                                               (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UInventoryService::SendMithrilRoleWearReq(int32 TypeId, int32 Count, const struct FTGFItemPosition& Position)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryService", "SendMithrilRoleWearReq");

	Params::InventoryService_SendMithrilRoleWearReq Parms{};

	Parms.TypeId = TypeId;
	Parms.Count = Count;
	Parms.Position = std::move(Position);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.InventoryService.SendRoleSelectSkillReq
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SkillId                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UInventoryService::SendRoleSelectSkillReq(int32 Position, int32 SkillId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryService", "SendRoleSelectSkillReq");

	Params::InventoryService_SendRoleSelectSkillReq Parms{};

	Parms.Position = Position;
	Parms.SkillId = SkillId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.InventoryService.SendSaveRoleSkin
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   RoleGuid                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<int32>                           ItemIds                                                (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    bHideHelmet                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UInventoryService::SendSaveRoleSkin(int64 RoleGuid, const TArray<int32>& ItemIds, bool bHideHelmet)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryService", "SendSaveRoleSkin");

	Params::InventoryService_SendSaveRoleSkin Parms{};

	Parms.RoleGuid = RoleGuid;
	Parms.ItemIds = std::move(ItemIds);
	Parms.bHideHelmet = bHideHelmet;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.InventoryService.SendSaveSkinTemplate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           Param_Name                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<int32>                           ItemIds                                                (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    bHideHelmet                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UInventoryService::SendSaveSkinTemplate(const class FString& Param_Name, const TArray<int32>& ItemIds, bool bHideHelmet)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryService", "SendSaveSkinTemplate");

	Params::InventoryService_SendSaveSkinTemplate Parms{};

	Parms.Param_Name = std::move(Param_Name);
	Parms.ItemIds = std::move(ItemIds);
	Parms.bHideHelmet = bHideHelmet;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.InventoryService.SendSoulBoundReq
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FTGFItem>                 Items                                                  (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// int64                                   Guid                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UInventoryService::SendSoulBoundReq(int32 Param_Index, TArray<struct FTGFItem>* Items, int64 Guid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryService", "SendSoulBoundReq");

	Params::InventoryService_SendSoulBoundReq Parms{};

	Parms.Param_Index = Param_Index;
	Parms.Guid = Guid;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Items != nullptr)
		*Items = std::move(Parms.Items);
}


// Function TGFGame.InventoryService.SendTakeoffItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FTGFItemPosition                 ItemCell                                               (Parm, NoDestructor, NativeAccessSpecifierPublic)
// struct FTGFItemPosition                 DestCell                                               (Parm, NoDestructor, NativeAccessSpecifierPublic)
// struct FTGFItemPosition                 SecondPos                                              (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UInventoryService::SendTakeoffItem(const struct FTGFItemPosition& ItemCell, const struct FTGFItemPosition& DestCell, const struct FTGFItemPosition& SecondPos)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryService", "SendTakeoffItem");

	Params::InventoryService_SendTakeoffItem Parms{};

	Parms.ItemCell = std::move(ItemCell);
	Parms.DestCell = std::move(DestCell);
	Parms.SecondPos = std::move(SecondPos);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.InventoryService.SendUseItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FTGFItem                         Item                                                   (Parm, NativeAccessSpecifierPublic)
// int32                                   Count                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UInventoryService::SendUseItem(const struct FTGFItem& Item, int32 Count, int32 Param_Index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryService", "SendUseItem");

	Params::InventoryService_SendUseItem Parms{};

	Parms.Item = std::move(Item);
	Parms.Count = Count;
	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.InventoryService.SendWeaponSetSwap
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FTGFItemPosition                 SrcCell1                                               (Parm, NoDestructor, NativeAccessSpecifierPublic)
// struct FTGFItemPosition                 SrcCell2                                               (Parm, NoDestructor, NativeAccessSpecifierPublic)
// struct FTGFItemPosition                 DestCell1                                              (Parm, NoDestructor, NativeAccessSpecifierPublic)
// struct FTGFItemPosition                 DestCell2                                              (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UInventoryService::SendWeaponSetSwap(const struct FTGFItemPosition& SrcCell1, const struct FTGFItemPosition& SrcCell2, const struct FTGFItemPosition& DestCell1, const struct FTGFItemPosition& DestCell2)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryService", "SendWeaponSetSwap");

	Params::InventoryService_SendWeaponSetSwap Parms{};

	Parms.SrcCell1 = std::move(SrcCell1);
	Parms.SrcCell2 = std::move(SrcCell2);
	Parms.DestCell1 = std::move(DestCell1);
	Parms.DestCell2 = std::move(DestCell2);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.InventoryService.SendWearItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FTGFItemPosition                 ItemCell                                               (Parm, NoDestructor, NativeAccessSpecifierPublic)
// int32                                   Partid                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTGFItemPosition                 SwapPos                                                (Parm, NoDestructor, NativeAccessSpecifierPublic)
// struct FTGFItemPosition                 SecondPos                                              (Parm, NoDestructor, NativeAccessSpecifierPublic)
// int32                                   ItemCount                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UInventoryService::SendWearItem(const struct FTGFItemPosition& ItemCell, int32 Partid, const struct FTGFItemPosition& SwapPos, const struct FTGFItemPosition& SecondPos, int32 ItemCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryService", "SendWearItem");

	Params::InventoryService_SendWearItem Parms{};

	Parms.ItemCell = std::move(ItemCell);
	Parms.Partid = Partid;
	Parms.SwapPos = std::move(SwapPos);
	Parms.SecondPos = std::move(SecondPos);
	Parms.ItemCount = ItemCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.InventoryService.SetClickDragingWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWidget*                          Widget                                                 (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UInventoryService::SetClickDragingWidget(class UWidget* Widget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryService", "SetClickDragingWidget");

	Params::InventoryService_SetClickDragingWidget Parms{};

	Parms.Widget = Widget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.InventoryService.SetCurrentRole
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   Guid                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UInventoryService::SetCurrentRole(int64 Guid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryService", "SetCurrentRole");

	Params::InventoryService_SetCurrentRole Parms{};

	Parms.Guid = Guid;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.InventoryService.SetInventoryWindow
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTGFWindow*                       Win                                                    (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UInventoryService::SetInventoryWindow(class UTGFWindow* Win)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryService", "SetInventoryWindow");

	Params::InventoryService_SetInventoryWindow Parms{};

	Parms.Win = Win;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.InventoryService.SetItemTooltipWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUserWidget*                      Widget                                                 (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UInventoryService::SetItemTooltipWidget(class UUserWidget* Widget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryService", "SetItemTooltipWidget");

	Params::InventoryService_SetItemTooltipWidget Parms{};

	Parms.Widget = Widget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.InventoryService.SetTooltipCompare
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Compare                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UInventoryService::SetTooltipCompare(bool Compare)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryService", "SetTooltipCompare");

	Params::InventoryService_SetTooltipCompare Parms{};

	Parms.Compare = Compare;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.InventoryService.SpawnEquipmentActorsWithAttachTarget
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   Type_id                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USceneComponent*                  AttachTarget                                           (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AActor*>                   OutSpawnedActors                                       (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    bAttachToLeft                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UInventoryService::SpawnEquipmentActorsWithAttachTarget(int32 Type_id, class USceneComponent* AttachTarget, TArray<class AActor*>* OutSpawnedActors, bool bAttachToLeft)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryService", "SpawnEquipmentActorsWithAttachTarget");

	Params::InventoryService_SpawnEquipmentActorsWithAttachTarget Parms{};

	Parms.Type_id = Type_id;
	Parms.AttachTarget = AttachTarget;
	Parms.bAttachToLeft = bAttachToLeft;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutSpawnedActors != nullptr)
		*OutSpawnedActors = std::move(Parms.OutSpawnedActors);
}


// Function TGFGame.InventoryService.SpawnEquipmentActorsWithAttachTargetByDefinition
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UTgfEquipmentDefinition*          Def                                                    (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USceneComponent*                  AttachTarget                                           (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AActor*>                   OutSpawnedActors                                       (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    bAttachToLeft                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UInventoryService::SpawnEquipmentActorsWithAttachTargetByDefinition(const class UTgfEquipmentDefinition* Def, class USceneComponent* AttachTarget, TArray<class AActor*>* OutSpawnedActors, bool bAttachToLeft)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryService", "SpawnEquipmentActorsWithAttachTargetByDefinition");

	Params::InventoryService_SpawnEquipmentActorsWithAttachTargetByDefinition Parms{};

	Parms.Def = Def;
	Parms.AttachTarget = AttachTarget;
	Parms.bAttachToLeft = bAttachToLeft;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutSpawnedActors != nullptr)
		*OutSpawnedActors = std::move(Parms.OutSpawnedActors);
}


// Function TGFGame.InventoryService.FindFragmentByClass
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSubclassOf<class ULyraInventoryItemDefinition>Item_class                                             (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class ULyraInventoryItemFragment>Fragment_class                                         (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class ULyraInventoryItemFragment* ReturnValue                                            (ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class ULyraInventoryItemFragment* UInventoryService::FindFragmentByClass(TSubclassOf<class ULyraInventoryItemDefinition> Item_class, TSubclassOf<class ULyraInventoryItemFragment> Fragment_class) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryService", "FindFragmentByClass");

	Params::InventoryService_FindFragmentByClass Parms{};

	Parms.Item_class = Item_class;
	Parms.Fragment_class = Fragment_class;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.JumpManager.JumpByHref
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           Href                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UJumpManager::JumpByHref(const class FString& Href)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JumpManager", "JumpByHref");

	Params::JumpManager_JumpByHref Parms{};

	Parms.Href = std::move(Href);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.JumpManager.Lua_HyperlinkJump
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class FString                           Href                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UJumpManager::Lua_HyperlinkJump(const class FString& Href)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JumpManager", "Lua_HyperlinkJump");

	Params::JumpManager_Lua_HyperlinkJump Parms{};

	Parms.Href = std::move(Href);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.JumpManager.Lua_Initialized
// (Native, Event, Public, BlueprintEvent)

void UJumpManager::Lua_Initialized()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JumpManager", "Lua_Initialized");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.JumpManager.OnHyperlinkJumpDelegate
// (Final, Native, Public)
// Parameters:
// class FString                           Href                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UJumpManager::OnHyperlinkJumpDelegate(const class FString& Href)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JumpManager", "OnHyperlinkJumpDelegate");

	Params::JumpManager_OnHyperlinkJumpDelegate Parms{};

	Parms.Href = std::move(Href);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.LevelService.GetLevelItemByIdAndType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   LevelId                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   LevelType                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ULevelItem*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ULevelItem* ULevelService::GetLevelItemByIdAndType(const int32 LevelId, const int32 LevelType) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LevelService", "GetLevelItemByIdAndType");

	Params::LevelService_GetLevelItemByIdAndType Parms{};

	Parms.LevelId = LevelId;
	Parms.LevelType = LevelType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.LevelService.GetLevelItemByName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           Param_Name                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ULevelItem*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ULevelItem* ULevelService::GetLevelItemByName(const class FString& Param_Name) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LevelService", "GetLevelItemByName");

	Params::LevelService_GetLevelItemByName Parms{};

	Parms.Param_Name = std::move(Param_Name);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.LevelService.GetLevels
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const TArray<class ULevelItem*>         ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const TArray<class ULevelItem*> ULevelService::GetLevels() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LevelService", "GetLevels");

	Params::LevelService_GetLevels Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.LobbyService.BackToHallWindow
// (Final, Native, Public, BlueprintCallable)

void ULobbyService::BackToHallWindow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyService", "BackToHallWindow");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.LobbyService.ChangeHallForce
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ETGFProtoTgfEnHallSwitchType            SwitchType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULobbyService::ChangeHallForce(ETGFProtoTgfEnHallSwitchType SwitchType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyService", "ChangeHallForce");

	Params::LobbyService_ChangeHallForce Parms{};

	Parms.SwitchType = SwitchType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.LobbyService.CheckCanChangeHallForce
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bIsToast                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULobbyService::CheckCanChangeHallForce(bool bIsToast)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyService", "CheckCanChangeHallForce");

	Params::LobbyService_CheckCanChangeHallForce Parms{};

	Parms.bIsToast = bIsToast;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.LobbyService.GetCurrentLobbyName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString ULobbyService::GetCurrentLobbyName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyService", "GetCurrentLobbyName");

	Params::LobbyService_GetCurrentLobbyName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.LobbyService.GetPlayerProfile
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FPlayerProfile                   ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FPlayerProfile ULobbyService::GetPlayerProfile()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyService", "GetPlayerProfile");

	Params::LobbyService_GetPlayerProfile Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.LobbyService.LoadLobbyLevel
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             LevelName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UUserWidget>          LobbyUi                                                (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULobbyService::LoadLobbyLevel(class FName LevelName, TSubclassOf<class UUserWidget> LobbyUi)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyService", "LoadLobbyLevel");

	Params::LobbyService_LoadLobbyLevel Parms{};

	Parms.LevelName = LevelName;
	Parms.LobbyUi = LobbyUi;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.LobbyService.OnLoadingEnd
// (Native, Public)
// Parameters:
// class UWorld*                           LoadedWorld                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULobbyService::OnLoadingEnd(class UWorld* LoadedWorld)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyService", "OnLoadingEnd");

	Params::LobbyService_OnLoadingEnd Parms{};

	Parms.LoadedWorld = LoadedWorld;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.LobbyService.SendPlayerGetInfoReq
// (Final, Native, Public, BlueprintCallable)

void ULobbyService::SendPlayerGetInfoReq()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyService", "SendPlayerGetInfoReq");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.LobbyService.SetCurrentLobbyName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           LobbyName                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULobbyService::SetCurrentLobbyName(const class FString& LobbyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyService", "SetCurrentLobbyName");

	Params::LobbyService_SetCurrentLobbyName Parms{};

	Parms.LobbyName = std::move(LobbyName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.LoginCreateRoleWindow.CancelLazyDeleteRole
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   Guid                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULoginCreateRoleWindow::CancelLazyDeleteRole(int64 Guid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoginCreateRoleWindow", "CancelLazyDeleteRole");

	Params::LoginCreateRoleWindow_CancelLazyDeleteRole Parms{};

	Parms.Guid = Guid;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.LoginCreateRoleWindow.EnterHallWithGuid
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   SelectGuid                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   CurrentGuid                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULoginCreateRoleWindow::EnterHallWithGuid(int64 SelectGuid, int64 CurrentGuid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoginCreateRoleWindow", "EnterHallWithGuid");

	Params::LoginCreateRoleWindow_EnterHallWithGuid Parms{};

	Parms.SelectGuid = SelectGuid;
	Parms.CurrentGuid = CurrentGuid;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.LoginCreateRoleWindow.GetRaceList
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class URoleRaceData*>            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class URoleRaceData*> ULoginCreateRoleWindow::GetRaceList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoginCreateRoleWindow", "GetRaceList");

	Params::LoginCreateRoleWindow_GetRaceList Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.LoginCreateRoleWindow.GetRaceListBy
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Race                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UExcelLoaderTgfConfigExcelRoleType*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelRoleType*> ULoginCreateRoleWindow::GetRaceListBy(int32 Race)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoginCreateRoleWindow", "GetRaceListBy");

	Params::LoginCreateRoleWindow_GetRaceListBy Parms{};

	Parms.Race = Race;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.LoginCreateRoleWindow.GetTexture2D
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           Fs                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTexture2D*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTexture2D* ULoginCreateRoleWindow::GetTexture2D(const class FString& Fs)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoginCreateRoleWindow", "GetTexture2D");

	Params::LoginCreateRoleWindow_GetTexture2D Parms{};

	Parms.Fs = std::move(Fs);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.LoginCreateRoleWindow.GetUserRoles
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UDUserRole*>               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UDUserRole*> ULoginCreateRoleWindow::GetUserRoles()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoginCreateRoleWindow", "GetUserRoles");

	Params::LoginCreateRoleWindow_GetUserRoles Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.LoginCreateRoleWindow.LazyDeleteRole
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   Guid                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULoginCreateRoleWindow::LazyDeleteRole(int64 Guid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoginCreateRoleWindow", "LazyDeleteRole");

	Params::LoginCreateRoleWindow_LazyDeleteRole Parms{};

	Parms.Guid = Guid;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.LoginCreateRoleWindow.LeaveCreate
// (Final, Native, Public)

void ULoginCreateRoleWindow::LeaveCreate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoginCreateRoleWindow", "LeaveCreate");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.LoginCreateRoleWindow.OnHallSetRoleRspSuccess
// (Final, Native, Public)
// Parameters:
// class UTGFEventArgs*                    Args                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULoginCreateRoleWindow::OnHallSetRoleRspSuccess(class UTGFEventArgs* Args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoginCreateRoleWindow", "OnHallSetRoleRspSuccess");

	Params::LoginCreateRoleWindow_OnHallSetRoleRspSuccess Parms{};

	Parms.Args = Args;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.LoginCreateRoleWindow.OnLazyDeleteTimeReached
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   Guid                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULoginCreateRoleWindow::OnLazyDeleteTimeReached(int64 Guid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoginCreateRoleWindow", "OnLazyDeleteTimeReached");

	Params::LoginCreateRoleWindow_OnLazyDeleteTimeReached Parms{};

	Parms.Guid = Guid;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.LoginCreateRoleWindow.OnReshapeFaceRspSuccess
// (Final, Native, Public)
// Parameters:
// class UTGFEventArgs*                    Args                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULoginCreateRoleWindow::OnReshapeFaceRspSuccess(class UTGFEventArgs* Args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoginCreateRoleWindow", "OnReshapeFaceRspSuccess");

	Params::LoginCreateRoleWindow_OnReshapeFaceRspSuccess Parms{};

	Parms.Args = Args;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.LoginCreateRoleWindow.OnRoleCreateSuccess
// (Final, Native, Public)
// Parameters:
// class UTGFEventArgs*                    Args                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULoginCreateRoleWindow::OnRoleCreateSuccess(class UTGFEventArgs* Args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoginCreateRoleWindow", "OnRoleCreateSuccess");

	Params::LoginCreateRoleWindow_OnRoleCreateSuccess Parms{};

	Parms.Args = Args;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.LoginCreateRoleWindow.OnRoleDeleteResponse
// (Final, Native, Public)
// Parameters:
// class UTGFEventArgs*                    Args                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULoginCreateRoleWindow::OnRoleDeleteResponse(class UTGFEventArgs* Args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoginCreateRoleWindow", "OnRoleDeleteResponse");

	Params::LoginCreateRoleWindow_OnRoleDeleteResponse Parms{};

	Parms.Args = Args;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.LoginCreateRoleWindow.SendHallSetRoleReq
// (Final, Native, Public)
// Parameters:
// int64                                   Guid                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULoginCreateRoleWindow::SendHallSetRoleReq(int64 Guid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoginCreateRoleWindow", "SendHallSetRoleReq");

	Params::LoginCreateRoleWindow_SendHallSetRoleReq Parms{};

	Parms.Guid = Guid;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.LoginCreateRoleWindow.SendRoleCreateReq
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FRoleCreateData                  Data                                                   (Parm, NativeAccessSpecifierPublic)

void ULoginCreateRoleWindow::SendRoleCreateReq(const struct FRoleCreateData& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoginCreateRoleWindow", "SendRoleCreateReq");

	Params::LoginCreateRoleWindow_SendRoleCreateReq Parms{};

	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.LoginCreateRoleWindow.SendRoleCreateRequest
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   TypeId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           RoleName                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Gender                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULoginCreateRoleWindow::SendRoleCreateRequest(int32 TypeId, const class FString& RoleName, int32 Gender)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoginCreateRoleWindow", "SendRoleCreateRequest");

	Params::LoginCreateRoleWindow_SendRoleCreateRequest Parms{};

	Parms.TypeId = TypeId;
	Parms.RoleName = std::move(RoleName);
	Parms.Gender = Gender;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.LoginCreateRoleWindow.SendRoleDeleteReq
// (Final, Native, Public)
// Parameters:
// int64                                   Guid                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULoginCreateRoleWindow::SendRoleDeleteReq(int64 Guid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoginCreateRoleWindow", "SendRoleDeleteReq");

	Params::LoginCreateRoleWindow_SendRoleDeleteReq Parms{};

	Parms.Guid = Guid;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.LoginCreateRoleWindow.SendRoleReshapeFaceReq
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   InRoleID                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRoleCreateData                  Data                                                   (Parm, NativeAccessSpecifierPublic)

void ULoginCreateRoleWindow::SendRoleReshapeFaceReq(int64 InRoleID, const struct FRoleCreateData& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoginCreateRoleWindow", "SendRoleReshapeFaceReq");

	Params::LoginCreateRoleWindow_SendRoleReshapeFaceReq Parms{};

	Parms.InRoleID = InRoleID;
	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.LoginCreateRoleWindow.TryDeleteRole
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   Guid                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULoginCreateRoleWindow::TryDeleteRole(int64 Guid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoginCreateRoleWindow", "TryDeleteRole");

	Params::LoginCreateRoleWindow_TryDeleteRole Parms{};

	Parms.Guid = Guid;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.SceneAppearanceActor.GetCurrentCaptureContent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTexture2D*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTexture2D* ASceneAppearanceActor::GetCurrentCaptureContent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SceneAppearanceActor", "GetCurrentCaptureContent");

	Params::SceneAppearanceActor_GetCurrentCaptureContent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.SceneAppearanceActor.GetCurrentCaptureRenderTarget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTextureRenderTarget2D*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTextureRenderTarget2D* ASceneAppearanceActor::GetCurrentCaptureRenderTarget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SceneAppearanceActor", "GetCurrentCaptureRenderTarget");

	Params::SceneAppearanceActor_GetCurrentCaptureRenderTarget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.SceneAppearanceActor.ReregisterMesh
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void ASceneAppearanceActor::ReregisterMesh()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SceneAppearanceActor", "ReregisterMesh");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.SceneAppearanceActor.SetCaptureComponent
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ASceneAppearanceActor::SetCaptureComponent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SceneAppearanceActor", "SetCaptureComponent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TGFGame.SceneAppearanceActor.UpdateAvatorCapture
// (Native, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FTgfAvatarBuildConfig            InAppearanceConfig                                     (Parm, NativeAccessSpecifierPublic)
// struct FIntPoint                        NewRTSize                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASceneAppearanceActor::UpdateAvatorCapture(const struct FTgfAvatarBuildConfig& InAppearanceConfig, const struct FIntPoint& NewRTSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SceneAppearanceActor", "UpdateAvatorCapture");

	Params::SceneAppearanceActor_UpdateAvatorCapture Parms{};

	Parms.InAppearanceConfig = std::move(InAppearanceConfig);
	Parms.NewRTSize = std::move(NewRTSize);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.SceneAppearanceActor.UpdateCapture
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ASceneAppearanceActor::UpdateCapture()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SceneAppearanceActor", "UpdateCapture");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TGFGame.SceneAppearanceActor.UpdateCaptureTarget
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UTextureRenderTarget2D*           NewTarget                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASceneAppearanceActor::UpdateCaptureTarget(class UTextureRenderTarget2D* NewTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SceneAppearanceActor", "UpdateCaptureTarget");

	Params::SceneAppearanceActor_UpdateCaptureTarget Parms{};

	Parms.NewTarget = NewTarget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TGFGame.SceneAppearanceActor.UpdateMesh
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FTgfAvatarBuildConfig            InAppearanceConfig                                     (Parm, NativeAccessSpecifierPublic)

void ASceneAppearanceActor::UpdateMesh(const struct FTgfAvatarBuildConfig& InAppearanceConfig)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SceneAppearanceActor", "UpdateMesh");

	Params::SceneAppearanceActor_UpdateMesh Parms{};

	Parms.InAppearanceConfig = std::move(InAppearanceConfig);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TGFGame.LoginWindow.CheckNoticePopup
// (Event, Public, BlueprintEvent)

void ULoginWindow::CheckNoticePopup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoginWindow", "CheckNoticePopup");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TGFGame.LoginWindow.FAlertResultDelegate
// (Final, Native, Public)

void ULoginWindow::FAlertResultDelegate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoginWindow", "FAlertResultDelegate");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.LoginWindow.FRetryLoginDelegate
// (Final, Native, Public)

void ULoginWindow::FRetryLoginDelegate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoginWindow", "FRetryLoginDelegate");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.LoginWindow.FRetryQueryDirDelegate
// (Final, Native, Public)

void ULoginWindow::FRetryQueryDirDelegate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoginWindow", "FRetryQueryDirDelegate");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.LoginWindow.GetServerUnavailableMessage
// (Event, Public, BlueprintEvent)
// Parameters:
// class FString                           UserData                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString ULoginWindow::GetServerUnavailableMessage(const class FString& UserData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoginWindow", "GetServerUnavailableMessage");

	Params::LoginWindow_GetServerUnavailableMessage Parms{};

	Parms.UserData = std::move(UserData);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function TGFGame.LoginWindow.OnConnectServerFailed
// (Final, Native, Public)
// Parameters:
// class UTGFEventArgs*                    Args                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULoginWindow::OnConnectServerFailed(class UTGFEventArgs* Args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoginWindow", "OnConnectServerFailed");

	Params::LoginWindow_OnConnectServerFailed Parms{};

	Parms.Args = Args;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.LoginWindow.OnConnectServerSuccess
// (Final, Native, Public)
// Parameters:
// class UTGFEventArgs*                    Args                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULoginWindow::OnConnectServerSuccess(class UTGFEventArgs* Args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoginWindow", "OnConnectServerSuccess");

	Params::LoginWindow_OnConnectServerSuccess Parms{};

	Parms.Args = Args;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.LoginWindow.OnEnterStateConnectServer
// (Event, Public, BlueprintEvent)

void ULoginWindow::OnEnterStateConnectServer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoginWindow", "OnEnterStateConnectServer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TGFGame.LoginWindow.OnEnterStateGameLogin
// (Event, Public, BlueprintEvent)

void ULoginWindow::OnEnterStateGameLogin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoginWindow", "OnEnterStateGameLogin");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TGFGame.LoginWindow.OnEnterStateLoadHall
// (Event, Public, BlueprintEvent)

void ULoginWindow::OnEnterStateLoadHall()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoginWindow", "OnEnterStateLoadHall");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TGFGame.LoginWindow.OnEnterStateNone
// (Event, Public, BlueprintEvent)

void ULoginWindow::OnEnterStateNone()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoginWindow", "OnEnterStateNone");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TGFGame.LoginWindow.OnEnterStateQueryDir
// (Event, Public, BlueprintEvent)

void ULoginWindow::OnEnterStateQueryDir()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoginWindow", "OnEnterStateQueryDir");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TGFGame.LoginWindow.OnEnterStateQueryRegion
// (Event, Public, BlueprintEvent)

void ULoginWindow::OnEnterStateQueryRegion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoginWindow", "OnEnterStateQueryRegion");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TGFGame.LoginWindow.OnEnterStateSDKLogin
// (Event, Public, BlueprintEvent)

void ULoginWindow::OnEnterStateSDKLogin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoginWindow", "OnEnterStateSDKLogin");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TGFGame.LoginWindow.OnEnterStateSyncPlayerInfo
// (Event, Public, BlueprintEvent)

void ULoginWindow::OnEnterStateSyncPlayerInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoginWindow", "OnEnterStateSyncPlayerInfo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TGFGame.LoginWindow.OnEnterStateWaitingSDKLogin
// (Event, Public, BlueprintEvent)

void ULoginWindow::OnEnterStateWaitingSDKLogin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoginWindow", "OnEnterStateWaitingSDKLogin");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TGFGame.LoginWindow.OnEnterStateWaitingStartGame
// (Event, Public, BlueprintEvent)

void ULoginWindow::OnEnterStateWaitingStartGame()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoginWindow", "OnEnterStateWaitingStartGame");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TGFGame.LoginWindow.OnExitStateConnectServer
// (Event, Public, BlueprintEvent)

void ULoginWindow::OnExitStateConnectServer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoginWindow", "OnExitStateConnectServer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TGFGame.LoginWindow.OnExitStateGameLogin
// (Event, Public, BlueprintEvent)

void ULoginWindow::OnExitStateGameLogin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoginWindow", "OnExitStateGameLogin");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TGFGame.LoginWindow.OnExitStateNone
// (Event, Public, BlueprintEvent)

void ULoginWindow::OnExitStateNone()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoginWindow", "OnExitStateNone");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TGFGame.LoginWindow.OnExitStateQueryDir
// (Event, Public, BlueprintEvent)

void ULoginWindow::OnExitStateQueryDir()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoginWindow", "OnExitStateQueryDir");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TGFGame.LoginWindow.OnExitStateQueryRegion
// (Event, Public, BlueprintEvent)

void ULoginWindow::OnExitStateQueryRegion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoginWindow", "OnExitStateQueryRegion");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TGFGame.LoginWindow.OnExitStateSDKLogin
// (Event, Public, BlueprintEvent)

void ULoginWindow::OnExitStateSDKLogin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoginWindow", "OnExitStateSDKLogin");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TGFGame.LoginWindow.OnExitStateSyncPlayerInfo
// (Event, Public, BlueprintEvent)

void ULoginWindow::OnExitStateSyncPlayerInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoginWindow", "OnExitStateSyncPlayerInfo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TGFGame.LoginWindow.OnExitStateWaitingSDKLogin
// (Event, Public, BlueprintEvent)

void ULoginWindow::OnExitStateWaitingSDKLogin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoginWindow", "OnExitStateWaitingSDKLogin");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TGFGame.LoginWindow.OnExitStateWaitingStartGame
// (Event, Public, BlueprintEvent)

void ULoginWindow::OnExitStateWaitingStartGame()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoginWindow", "OnExitStateWaitingStartGame");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TGFGame.LoginWindow.OnGameLoginFailed
// (Final, Native, Public)
// Parameters:
// class UTGFEventArgs*                    Args                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULoginWindow::OnGameLoginFailed(class UTGFEventArgs* Args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoginWindow", "OnGameLoginFailed");

	Params::LoginWindow_OnGameLoginFailed Parms{};

	Parms.Args = Args;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.LoginWindow.OnGameLoginSuccess
// (Final, Native, Public)
// Parameters:
// class UTGFEventArgs*                    Args                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULoginWindow::OnGameLoginSuccess(class UTGFEventArgs* Args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoginWindow", "OnGameLoginSuccess");

	Params::LoginWindow_OnGameLoginSuccess Parms{};

	Parms.Args = Args;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.LoginWindow.OnGameLogout
// (Final, Native, Public)
// Parameters:
// class UTGFEventArgs*                    Args                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULoginWindow::OnGameLogout(class UTGFEventArgs* Args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoginWindow", "OnGameLogout");

	Params::LoginWindow_OnGameLogout Parms{};

	Parms.Args = Args;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.LoginWindow.OnGetNoticeResult
// (Final, Native, Public)
// Parameters:
// class UTGFEventArgs*                    Args                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULoginWindow::OnGetNoticeResult(class UTGFEventArgs* Args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoginWindow", "OnGetNoticeResult");

	Params::LoginWindow_OnGetNoticeResult Parms{};

	Parms.Args = Args;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.LoginWindow.OnQueryDirFailed
// (Final, Native, Public)
// Parameters:
// class UTGFEventArgs*                    Args                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULoginWindow::OnQueryDirFailed(class UTGFEventArgs* Args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoginWindow", "OnQueryDirFailed");

	Params::LoginWindow_OnQueryDirFailed Parms{};

	Parms.Args = Args;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.LoginWindow.OnQueryDirSuccess
// (Final, Native, Public)
// Parameters:
// class UTGFEventArgs*                    Args                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULoginWindow::OnQueryDirSuccess(class UTGFEventArgs* Args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoginWindow", "OnQueryDirSuccess");

	Params::LoginWindow_OnQueryDirSuccess Parms{};

	Parms.Args = Args;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.LoginWindow.OnQueryRegionResult
// (Final, Native, Public)
// Parameters:
// class UTGFEventArgs*                    Args                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULoginWindow::OnQueryRegionResult(class UTGFEventArgs* Args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoginWindow", "OnQueryRegionResult");

	Params::LoginWindow_OnQueryRegionResult Parms{};

	Parms.Args = Args;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.LoginWindow.OnSDKLoginFailed
// (Final, Native, Public)
// Parameters:
// class UTGFEventArgs*                    Args                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULoginWindow::OnSDKLoginFailed(class UTGFEventArgs* Args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoginWindow", "OnSDKLoginFailed");

	Params::LoginWindow_OnSDKLoginFailed Parms{};

	Parms.Args = Args;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.LoginWindow.OnSDKLoginSuccess
// (Final, Native, Public)
// Parameters:
// class UTGFEventArgs*                    Args                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULoginWindow::OnSDKLoginSuccess(class UTGFEventArgs* Args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoginWindow", "OnSDKLoginSuccess");

	Params::LoginWindow_OnSDKLoginSuccess Parms{};

	Parms.Args = Args;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.LoginWindow.OnSyncPlayerInfoFailed
// (Final, Native, Public)
// Parameters:
// class UTGFEventArgs*                    Args                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULoginWindow::OnSyncPlayerInfoFailed(class UTGFEventArgs* Args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoginWindow", "OnSyncPlayerInfoFailed");

	Params::LoginWindow_OnSyncPlayerInfoFailed Parms{};

	Parms.Args = Args;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.LoginWindow.OnSyncPlayerInfoSuccess
// (Final, Native, Public)
// Parameters:
// class UTGFEventArgs*                    Args                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULoginWindow::OnSyncPlayerInfoSuccess(class UTGFEventArgs* Args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoginWindow", "OnSyncPlayerInfoSuccess");

	Params::LoginWindow_OnSyncPlayerInfoSuccess Parms{};

	Parms.Args = Args;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.LoginWindow.OnUpdateStateWaitingStartGame
// (Native, Event, Public, BlueprintEvent)

void ULoginWindow::OnUpdateStateWaitingStartGame()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoginWindow", "OnUpdateStateWaitingStartGame");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.LoginWindow.QQLogin
// (Final, Native, Public, BlueprintCallable)

void ULoginWindow::QQLogin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoginWindow", "QQLogin");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.LoginWindow.SDKLogout
// (Final, Native, Public, BlueprintCallable)

void ULoginWindow::SDKLogout()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoginWindow", "SDKLogout");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.LoginWindow.SetSensitive
// (Final, Native, Public, BlueprintCallable)

void ULoginWindow::SetSensitive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoginWindow", "SetSensitive");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.LoginWindow.StartGame
// (Final, Native, Public, BlueprintCallable)

void ULoginWindow::StartGame()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoginWindow", "StartGame");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.LoginWindow.StartNoAuthLogin
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           SimulateOpenId                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULoginWindow::StartNoAuthLogin(const class FString& SimulateOpenId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoginWindow", "StartNoAuthLogin");

	Params::LoginWindow_StartNoAuthLogin Parms{};

	Parms.SimulateOpenId = std::move(SimulateOpenId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.LoginWindow.WeChatLogin
// (Final, Native, Public, BlueprintCallable)

void ULoginWindow::WeChatLogin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoginWindow", "WeChatLogin");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.LoginWindow.GetOpenId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString ULoginWindow::GetOpenId() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoginWindow", "GetOpenId");

	Params::LoginWindow_GetOpenId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.SDKNoticeService.GetNoticeStableId
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FSDKNoticeInfo                   Notice                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString USDKNoticeService::GetNoticeStableId(const struct FSDKNoticeInfo& Notice)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SDKNoticeService", "GetNoticeStableId");

	Params::SDKNoticeService_GetNoticeStableId Parms{};

	Parms.Notice = std::move(Notice);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.SDKNoticeService.GetNoticeTextInfo
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FSDKNoticeInfo                   Notice                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FSDKNoticeTextInfo         ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FSDKNoticeTextInfo USDKNoticeService::GetNoticeTextInfo(const struct FSDKNoticeInfo& Notice)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SDKNoticeService", "GetNoticeTextInfo");

	Params::SDKNoticeService_GetNoticeTextInfo Parms{};

	Parms.Notice = std::move(Notice);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.SDKNoticeService.IsPopupNoticePopupOnce
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FSDKNoticeInfo                   NoticeInfo                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USDKNoticeService::IsPopupNoticePopupOnce(const struct FSDKNoticeInfo& NoticeInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SDKNoticeService", "IsPopupNoticePopupOnce");

	Params::SDKNoticeService_IsPopupNoticePopupOnce Parms{};

	Parms.NoticeInfo = std::move(NoticeInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.SDKNoticeService.SetNoticeRead
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           NoticeStableId                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USDKNoticeService::SetNoticeRead(const class FString& NoticeStableId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SDKNoticeService", "SetNoticeRead");

	Params::SDKNoticeService_SetNoticeRead Parms{};

	Parms.NoticeStableId = std::move(NoticeStableId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.SDKNoticeService.SetPopupNoticeBlockForever
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           NoticeStableId                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USDKNoticeService::SetPopupNoticeBlockForever(const class FString& NoticeStableId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SDKNoticeService", "SetPopupNoticeBlockForever");

	Params::SDKNoticeService_SetPopupNoticeBlockForever Parms{};

	Parms.NoticeStableId = std::move(NoticeStableId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.SDKNoticeService.SetPopupNoticeBlockToday
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           NoticeStableId                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USDKNoticeService::SetPopupNoticeBlockToday(const class FString& NoticeStableId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SDKNoticeService", "SetPopupNoticeBlockToday");

	Params::SDKNoticeService_SetPopupNoticeBlockToday Parms{};

	Parms.NoticeStableId = std::move(NoticeStableId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.SDKNoticeService.SetPopupNoticeShowed
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           NoticeStableId                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USDKNoticeService::SetPopupNoticeShowed(const class FString& NoticeStableId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SDKNoticeService", "SetPopupNoticeShowed");

	Params::SDKNoticeService_SetPopupNoticeShowed Parms{};

	Parms.NoticeStableId = std::move(NoticeStableId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.SDKNoticeService.GetNoticeList
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   NoticeType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FSDKNoticeInfo>           NoticeList                                             (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USDKNoticeService::GetNoticeList(int32 NoticeType, TArray<struct FSDKNoticeInfo>* NoticeList) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SDKNoticeService", "GetNoticeList");

	Params::SDKNoticeService_GetNoticeList Parms{};

	Parms.NoticeType = NoticeType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (NoticeList != nullptr)
		*NoticeList = std::move(Parms.NoticeList);

	return Parms.ReturnValue;
}


// Function TGFGame.SDKNoticeService.GetNoticeRead
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           NoticeStableId                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USDKNoticeService::GetNoticeRead(const class FString& NoticeStableId) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SDKNoticeService", "GetNoticeRead");

	Params::SDKNoticeService_GetNoticeRead Parms{};

	Parms.NoticeStableId = std::move(NoticeStableId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.SDKNoticeService.GetNoticeUnreadByType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   NoticeType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USDKNoticeService::GetNoticeUnreadByType(int32 NoticeType) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SDKNoticeService", "GetNoticeUnreadByType");

	Params::SDKNoticeService_GetNoticeUnreadByType Parms{};

	Parms.NoticeType = NoticeType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.SDKNoticeService.GetPopupNoticeBlockToday
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           NoticeStableId                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USDKNoticeService::GetPopupNoticeBlockToday(const class FString& NoticeStableId) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SDKNoticeService", "GetPopupNoticeBlockToday");

	Params::SDKNoticeService_GetPopupNoticeBlockToday Parms{};

	Parms.NoticeStableId = std::move(NoticeStableId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.SDKNoticeService.GetPopupNoticeShowed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           NoticeStableId                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USDKNoticeService::GetPopupNoticeShowed(const class FString& NoticeStableId) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SDKNoticeService", "GetPopupNoticeShowed");

	Params::SDKNoticeService_GetPopupNoticeShowed Parms{};

	Parms.NoticeStableId = std::move(NoticeStableId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.SDKNoticeService.PopupNoticeNeedShow
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USDKNoticeService::PopupNoticeNeedShow() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SDKNoticeService", "PopupNoticeNeedShow");

	Params::SDKNoticeService_PopupNoticeNeedShow Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.MailService.DeleteMails
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<int64>                           MailIds                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UMailService::DeleteMails(const TArray<int64>& MailIds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MailService", "DeleteMails");

	Params::MailService_DeleteMails Parms{};

	Parms.MailIds = std::move(MailIds);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.MailService.GetAllMails
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UTGFMailHeaderInfo*>       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UTGFMailHeaderInfo*> UMailService::GetAllMails()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MailService", "GetAllMails");

	Params::MailService_GetAllMails Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.MailService.GetMail
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   MailId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTGFMailHeaderInfo*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTGFMailHeaderInfo* UMailService::GetMail(int64 MailId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MailService", "GetMail");

	Params::MailService_GetMail Parms{};

	Parms.MailId = MailId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.MailService.MarkAsRead
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<int64>                           MailIds                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UMailService::MarkAsRead(const TArray<int64>& MailIds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MailService", "MarkAsRead");

	Params::MailService_MarkAsRead Parms{};

	Parms.MailIds = std::move(MailIds);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.MailService.OnGameLogout
// (Final, Native, Private)
// Parameters:
// class UTGFEventArgs*                    Args                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMailService::OnGameLogout(class UTGFEventArgs* Args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MailService", "OnGameLogout");

	Params::MailService_OnGameLogout Parms{};

	Parms.Args = Args;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.MailService.ReceiveAttachments
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTgfInventoryWrapper_Virtual*     VirtualInventory                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTgfInventoryWrapper*             InventoryContext                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMailService::ReceiveAttachments(class UTgfInventoryWrapper_Virtual* VirtualInventory, class UTgfInventoryWrapper* InventoryContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MailService", "ReceiveAttachments");

	Params::MailService_ReceiveAttachments Parms{};

	Parms.VirtualInventory = VirtualInventory;
	Parms.InventoryContext = InventoryContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.MailService.ReceiveOneAttachment
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   MailId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTGFItem                         Item                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMailService::ReceiveOneAttachment(int64 MailId, const struct FTGFItem& Item, int32 Param_Index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MailService", "ReceiveOneAttachment");

	Params::MailService_ReceiveOneAttachment Parms{};

	Parms.MailId = MailId;
	Parms.Item = std::move(Item);
	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.MailService.ReceiveVirtualAttachments
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<int64>                           MailIds                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    NeedRemove                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMailService::ReceiveVirtualAttachments(const TArray<int64>& MailIds, bool NeedRemove)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MailService", "ReceiveVirtualAttachments");

	Params::MailService_ReceiveVirtualAttachments Parms{};

	Parms.MailIds = std::move(MailIds);
	Parms.NeedRemove = NeedRemove;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.MailService.SetCurrentMailId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   InCurrentMailId                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMailService::SetCurrentMailId(int64 InCurrentMailId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MailService", "SetCurrentMailId");

	Params::MailService_SetCurrentMailId Parms{};

	Parms.InCurrentMailId = InCurrentMailId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.MailService.SetCurrentMailType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ETGFProtoTgfEnMailMajorType             MajorType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMailService::SetCurrentMailType(ETGFProtoTgfEnMailMajorType MajorType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MailService", "SetCurrentMailType");

	Params::MailService_SetCurrentMailType Parms{};

	Parms.MajorType = MajorType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.MailService.GetCurrentMailId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UMailService::GetCurrentMailId() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MailService", "GetCurrentMailId");

	Params::MailService_GetCurrentMailId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.MailService.GetCurrentMailReceiveKey
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int64                                   MailId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FTGFMailReceiveKey>       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FTGFMailReceiveKey> UMailService::GetCurrentMailReceiveKey(int64 MailId) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MailService", "GetCurrentMailReceiveKey");

	Params::MailService_GetCurrentMailReceiveKey Parms{};

	Parms.MailId = MailId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.MailService.GetCurrentMailType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ETGFProtoTgfEnMailMajorType             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETGFProtoTgfEnMailMajorType UMailService::GetCurrentMailType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MailService", "GetCurrentMailType");

	Params::MailService_GetCurrentMailType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.MailService.GetMailContent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int64                                   MailId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTGFMailContent                  ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FTGFMailContent UMailService::GetMailContent(int64 MailId) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MailService", "GetMailContent");

	Params::MailService_GetMailContent Parms{};

	Parms.MailId = MailId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.MailService.GetMailCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMailService::GetMailCount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MailService", "GetMailCount");

	Params::MailService_GetMailCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.MailService.GetMailReceiveKeys
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct FTGFMailReceiveKey>       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FTGFMailReceiveKey> UMailService::GetMailReceiveKeys() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MailService", "GetMailReceiveKeys");

	Params::MailService_GetMailReceiveKeys Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.MailService.GetMaxMailContent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMailService::GetMaxMailContent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MailService", "GetMaxMailContent");

	Params::MailService_GetMaxMailContent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.MailService.GetMultiLanguageContent
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FTGFMailContent                  MailContent                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UMailService::GetMultiLanguageContent(const struct FTGFMailContent& MailContent) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MailService", "GetMultiLanguageContent");

	Params::MailService_GetMultiLanguageContent Parms{};

	Parms.MailContent = std::move(MailContent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.MailService.GetMultiLanguageTitle
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FTGFMailContent                  MailContent                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UMailService::GetMultiLanguageTitle(const struct FTGFMailContent& MailContent) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MailService", "GetMultiLanguageTitle");

	Params::MailService_GetMultiLanguageTitle Parms{};

	Parms.MailContent = std::move(MailContent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.MailService.IsGivenTypeMailRedDot
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ETGFProtoTgfEnMailMajorType             MailType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMailService::IsGivenTypeMailRedDot(ETGFProtoTgfEnMailMajorType MailType) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MailService", "IsGivenTypeMailRedDot");

	Params::MailService_IsGivenTypeMailRedDot Parms{};

	Parms.MailType = MailType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.MailService.IsMailAttachmentNotReceived
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int64                                   MailId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMailService::IsMailAttachmentNotReceived(int64 MailId) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MailService", "IsMailAttachmentNotReceived");

	Params::MailService_IsMailAttachmentNotReceived Parms{};

	Parms.MailId = MailId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.MailService.IsMailAttachmentReceived
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ETGFProtoTgfEnMailStatusType            Status                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMailService::IsMailAttachmentReceived(ETGFProtoTgfEnMailStatusType Status) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MailService", "IsMailAttachmentReceived");

	Params::MailService_IsMailAttachmentReceived Parms{};

	Parms.Status = Status;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.MailService.IsMailRedDot
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMailService::IsMailRedDot() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MailService", "IsMailRedDot");

	Params::MailService_IsMailRedDot Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.MailService.IsMailRemoved
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int64                                   MailId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMailService::IsMailRemoved(int64 MailId) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MailService", "IsMailRemoved");

	Params::MailService_IsMailRemoved Parms{};

	Parms.MailId = MailId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TgfInventoryWrapper_Virtual.OnMailReceiveAttachmentsPartly
// (Final, Native, Public)
// Parameters:
// class UTGFEventArgs*                    Args                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTgfInventoryWrapper_Virtual::OnMailReceiveAttachmentsPartly(class UTGFEventArgs* Args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TgfInventoryWrapper_Virtual", "OnMailReceiveAttachmentsPartly");

	Params::TgfInventoryWrapper_Virtual_OnMailReceiveAttachmentsPartly Parms{};

	Parms.Args = Args;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TgfInventoryWrapper_Virtual.SetMailItems
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<struct FTGFMailReceiveKey>       MailItems                                              (Parm, ZeroConstructor, NativeAccessSpecifierPublic)

void UTgfInventoryWrapper_Virtual::SetMailItems(const TArray<struct FTGFMailReceiveKey>& MailItems)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TgfInventoryWrapper_Virtual", "SetMailItems");

	Params::TgfInventoryWrapper_Virtual_SetMailItems Parms{};

	Parms.MailItems = std::move(MailItems);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TgfInventoryItemWrapper_Market.GetItemData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FTGFItem                         ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FTGFItem UTgfInventoryItemWrapper_Market::GetItemData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TgfInventoryItemWrapper_Market", "GetItemData");

	Params::TgfInventoryItemWrapper_Market_GetItemData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.MarketProduct.GetCost
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct FMarketCost>              OutCost                                                (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UMarketProduct::GetCost(TArray<struct FMarketCost>* OutCost) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MarketProduct", "GetCost");

	Params::MarketProduct_GetCost Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutCost != nullptr)
		*OutCost = std::move(Parms.OutCost);
}


// Function TGFGame.MarketProduct.GetCostFromServerData
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FMarketCost                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FMarketCost UMarketProduct::GetCostFromServerData() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MarketProduct", "GetCostFromServerData");

	Params::MarketProduct_GetCostFromServerData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.MarketProduct.GetIsBuyBackItem
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMarketProduct::GetIsBuyBackItem() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MarketProduct", "GetIsBuyBackItem");

	Params::MarketProduct_GetIsBuyBackItem Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.MarketProduct.GetProductDisplayOrder
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMarketProduct::GetProductDisplayOrder() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MarketProduct", "GetProductDisplayOrder");

	Params::MarketProduct_GetProductDisplayOrder Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.MarketProduct.GetProductIcon
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UMarketProduct::GetProductIcon() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MarketProduct", "GetProductIcon");

	Params::MarketProduct_GetProductIcon Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.MarketProduct.GetProductId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMarketProduct::GetProductId() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MarketProduct", "GetProductId");

	Params::MarketProduct_GetProductId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.MarketProduct.GetProductName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UMarketProduct::GetProductName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MarketProduct", "GetProductName");

	Params::MarketProduct_GetProductName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.MarketProduct.GetProductSkuId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UMarketProduct::GetProductSkuId() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MarketProduct", "GetProductSkuId");

	Params::MarketProduct_GetProductSkuId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.MarketProduct.IsIdentified
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMarketProduct::IsIdentified() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MarketProduct", "IsIdentified");

	Params::MarketProduct_IsIdentified Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.MarketProduct.IsShowDisplayTemplate
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMarketProduct::IsShowDisplayTemplate() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MarketProduct", "IsShowDisplayTemplate");

	Params::MarketProduct_IsShowDisplayTemplate Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.MarketProduct.IsSpecialProduct
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMarketProduct::IsSpecialProduct() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MarketProduct", "IsSpecialProduct");

	Params::MarketProduct_IsSpecialProduct Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TGFKeyConflictPopup.UpdateConflictKeyWidget
// (Event, Public, BlueprintEvent)
// Parameters:
// struct FKey                             InKey                                                  (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTGFKeyConflictPopup::UpdateConflictKeyWidget(const struct FKey& InKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TGFKeyConflictPopup", "UpdateConflictKeyWidget");

	Params::TGFKeyConflictPopup_UpdateConflictKeyWidget Parms{};

	Parms.InKey = std::move(InKey);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TGFGame.MarketService.ContainPopupVideo
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   PopupVideoId                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMarketService::ContainPopupVideo(int32 PopupVideoId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MarketService", "ContainPopupVideo");

	Params::MarketService_ContainPopupVideo Parms{};

	Parms.PopupVideoId = PopupVideoId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.MarketService.GetMarketInventoryTableSelect
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// uint8                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

uint8 UMarketService::GetMarketInventoryTableSelect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MarketService", "GetMarketInventoryTableSelect");

	Params::MarketService_GetMarketInventoryTableSelect Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.MarketService.GetMarketTabInfoCfgByMarketId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   MarketId                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UExcelLoaderTgfConfigExcelMarketTabInfo*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelMarketTabInfo*> UMarketService::GetMarketTabInfoCfgByMarketId(int32 MarketId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MarketService", "GetMarketTabInfoCfgByMarketId");

	Params::MarketService_GetMarketTabInfoCfgByMarketId Parms{};

	Parms.MarketId = MarketId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.MarketService.GetMarketTabRefreshTime
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   TabId                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UMarketService::GetMarketTabRefreshTime(int32 TabId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MarketService", "GetMarketTabRefreshTime");

	Params::MarketService_GetMarketTabRefreshTime Parms{};

	Parms.TabId = TabId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.MarketService.GetPlayRefreshEffect
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMarketService::GetPlayRefreshEffect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MarketService", "GetPlayRefreshEffect");

	Params::MarketService_GetPlayRefreshEffect Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.MarketService.GetProduct
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ProductId                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMarketProduct*                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMarketProduct* UMarketService::GetProduct(int32 ProductId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MarketService", "GetProduct");

	Params::MarketService_GetProduct Parms{};

	Parms.ProductId = ProductId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.MarketService.GetProductListByTabId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   TabId                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UMarketProduct*>           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UMarketProduct*> UMarketService::GetProductListByTabId(int32 TabId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MarketService", "GetProductListByTabId");

	Params::MarketService_GetProductListByTabId Parms{};

	Parms.TabId = TabId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.MarketService.OnCheckTab
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   TabId                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMarketService::OnCheckTab(int32 TabId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MarketService", "OnCheckTab");

	Params::MarketService_OnCheckTab Parms{};

	Parms.TabId = TabId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.MarketService.OnMarketSellFinish
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTgfInventoryItemWrapper*         Item                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMarketService::OnMarketSellFinish(class UTgfInventoryItemWrapper* Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MarketService", "OnMarketSellFinish");

	Params::MarketService_OnMarketSellFinish Parms{};

	Parms.Item = Item;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.MarketService.OnMarketSellStart
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTgfInventoryItemWrapper*         Item                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMarketService::OnMarketSellStart(class UTgfInventoryItemWrapper* Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MarketService", "OnMarketSellStart");

	Params::MarketService_OnMarketSellStart Parms{};

	Parms.Item = Item;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.MarketService.ReInitProduct
// (Final, Native, Public, BlueprintCallable)

void UMarketService::ReInitProduct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MarketService", "ReInitProduct");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.MarketService.SendMarketBuyProductReq
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ProductId                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Count                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMarketService::SendMarketBuyProductReq(int32 ProductId, int32 Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MarketService", "SendMarketBuyProductReq");

	Params::MarketService_SendMarketBuyProductReq Parms{};

	Parms.ProductId = ProductId;
	Parms.Count = Count;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.MarketService.SendMarketBuyProductWithCostReq
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ProductId                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Count                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CostType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CostPrice                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMarketService::SendMarketBuyProductWithCostReq(int32 ProductId, int32 Count, int32 CostType, int32 CostPrice)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MarketService", "SendMarketBuyProductWithCostReq");

	Params::MarketService_SendMarketBuyProductWithCostReq Parms{};

	Parms.ProductId = ProductId;
	Parms.Count = Count;
	Parms.CostType = CostType;
	Parms.CostPrice = CostPrice;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.MarketService.SendMarketBuySoldItemReq
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UMarketProduct*                   Product                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Count                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMarketService::SendMarketBuySoldItemReq(class UMarketProduct* Product, int32 Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MarketService", "SendMarketBuySoldItemReq");

	Params::MarketService_SendMarketBuySoldItemReq Parms{};

	Parms.Product = Product;
	Parms.Count = Count;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.MarketService.SendMarketSellItemsReq
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTgfInventoryItemWrapper*         Item                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMarketService::SendMarketSellItemsReq(class UTgfInventoryItemWrapper* Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MarketService", "SendMarketSellItemsReq");

	Params::MarketService_SendMarketSellItemsReq Parms{};

	Parms.Item = Item;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.MarketService.SendPlayRefreshEffect
// (Final, Native, Public, BlueprintCallable)

void UMarketService::SendPlayRefreshEffect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MarketService", "SendPlayRefreshEffect");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.MarketService.SendPopupVideo
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   PopupVideoId                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMarketService::SendPopupVideo(int32 PopupVideoId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MarketService", "SendPopupVideo");

	Params::MarketService_SendPopupVideo Parms{};

	Parms.PopupVideoId = PopupVideoId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.MarketService.SetMarketInventoryTabSelect
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// uint8                                   TabId                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMarketService::SetMarketInventoryTabSelect(uint8 TabId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MarketService", "SetMarketInventoryTabSelect");

	Params::MarketService_SetMarketInventoryTabSelect Parms{};

	Parms.TabId = TabId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.MarketService.SetMarketStragePageTab
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// uint8                                   PageId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMarketService::SetMarketStragePageTab(uint8 PageId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MarketService", "SetMarketStragePageTab");

	Params::MarketService_SetMarketStragePageTab Parms{};

	Parms.PageId = PageId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.MarketService.ShouldShowMarketRedDot
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMarketService::ShouldShowMarketRedDot() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MarketService", "ShouldShowMarketRedDot");

	Params::MarketService_ShouldShowMarketRedDot Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.MarketService.ShouldShowMarketTabRedDot
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   TabId                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMarketService::ShouldShowMarketTabRedDot(int32 TabId) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MarketService", "ShouldShowMarketTabRedDot");

	Params::MarketService_ShouldShowMarketTabRedDot Parms{};

	Parms.TabId = TabId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.MarqueeSubsystem.AddOneMarqueeById
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   MarqueeId                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMarqueeSubsystem::AddOneMarqueeById(int32 MarqueeId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MarqueeSubsystem", "AddOneMarqueeById");

	Params::MarqueeSubsystem_AddOneMarqueeById Parms{};

	Parms.MarqueeId = MarqueeId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.MarqueeSubsystem.AddOneMarqueeByStr
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           StrContent                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EMarqueeType                            MarqueeType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SortOrder                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMarqueeSubsystem::AddOneMarqueeByStr(const class FString& StrContent, EMarqueeType MarqueeType, int32 SortOrder)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MarqueeSubsystem", "AddOneMarqueeByStr");

	Params::MarqueeSubsystem_AddOneMarqueeByStr Parms{};

	Parms.StrContent = std::move(StrContent);
	Parms.MarqueeType = MarqueeType;
	Parms.SortOrder = SortOrder;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.MarqueeSubsystem.GetLastMarqueeMessage
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FMarqueeMessage                  OutMarqueeMessage                                      (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMarqueeSubsystem::GetLastMarqueeMessage(struct FMarqueeMessage* OutMarqueeMessage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MarqueeSubsystem", "GetLastMarqueeMessage");

	Params::MarqueeSubsystem_GetLastMarqueeMessage Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutMarqueeMessage != nullptr)
		*OutMarqueeMessage = std::move(Parms.OutMarqueeMessage);

	return Parms.ReturnValue;
}


// Function TGFGame.MarqueeSubsystem.GetMarqueeMoveSpeed
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UMarqueeSubsystem::GetMarqueeMoveSpeed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MarqueeSubsystem", "GetMarqueeMoveSpeed");

	Params::MarqueeSubsystem_GetMarqueeMoveSpeed Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.SocialService.AcceptAllFriendInvite
// (Final, Native, Public, BlueprintCallable)

void USocialService::AcceptAllFriendInvite()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SocialService", "AcceptAllFriendInvite");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.SocialService.AcceptFriendInvite
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FUserKey                         UserKey                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USocialService::AcceptFriendInvite(const struct FUserKey& UserKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SocialService", "AcceptFriendInvite");

	Params::SocialService_AcceptFriendInvite Parms{};

	Parms.UserKey = std::move(UserKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.SocialService.AddInvitedUser
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FUserKey                         UserKey                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USocialService::AddInvitedUser(const struct FUserKey& UserKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SocialService", "AddInvitedUser");

	Params::SocialService_AddInvitedUser Parms{};

	Parms.UserKey = std::move(UserKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.SocialService.ApplyFriend
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FUserKey                         UserKey                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USocialService::ApplyFriend(const struct FUserKey& UserKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SocialService", "ApplyFriend");

	Params::SocialService_ApplyFriend Parms{};

	Parms.UserKey = std::move(UserKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.SocialService.CheckIsFriend
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   UserId                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USocialService::CheckIsFriend(const int64 UserId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SocialService", "CheckIsFriend");

	Params::SocialService_CheckIsFriend Parms{};

	Parms.UserId = UserId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.SocialService.CheckIsGameFriend
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FUserKey                         UserKey                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USocialService::CheckIsGameFriend(const struct FUserKey& UserKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SocialService", "CheckIsGameFriend");

	Params::SocialService_CheckIsGameFriend Parms{};

	Parms.UserKey = std::move(UserKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.SocialService.CheckIsInvitedUser
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FUserKey                         UserKey                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USocialService::CheckIsInvitedUser(const struct FUserKey& UserKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SocialService", "CheckIsInvitedUser");

	Params::SocialService_CheckIsInvitedUser Parms{};

	Parms.UserKey = std::move(UserKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.SocialService.CheckIsSteamFriend
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FGlobalUserKey                   GlobalUserKey                                          (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USocialService::CheckIsSteamFriend(const struct FGlobalUserKey& GlobalUserKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SocialService", "CheckIsSteamFriend");

	Params::SocialService_CheckIsSteamFriend Parms{};

	Parms.GlobalUserKey = std::move(GlobalUserKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.SocialService.ClearInvitedUser
// (Final, Native, Public, BlueprintCallable)

void USocialService::ClearInvitedUser()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SocialService", "ClearInvitedUser");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.SocialService.GetFriendInviteArray
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UFriendInvite*>            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UFriendInvite*> USocialService::GetFriendInviteArray()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SocialService", "GetFriendInviteArray");

	Params::SocialService_GetFriendInviteArray Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.SocialService.GetFriendSearchArray
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UFriendSuggest*>           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UFriendSuggest*> USocialService::GetFriendSearchArray()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SocialService", "GetFriendSearchArray");

	Params::SocialService_GetFriendSearchArray Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.SocialService.GetFriendSuggestArray
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UFriendSuggest*>           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UFriendSuggest*> USocialService::GetFriendSuggestArray()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SocialService", "GetFriendSuggestArray");

	Params::SocialService_GetFriendSuggestArray Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.SocialService.GetGameFriendArray
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UGameFriend*>              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UGameFriend*> USocialService::GetGameFriendArray()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SocialService", "GetGameFriendArray");

	Params::SocialService_GetGameFriendArray Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.SocialService.GetGameFriendCount
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 USocialService::GetGameFriendCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SocialService", "GetGameFriendCount");

	Params::SocialService_GetGameFriendCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.SocialService.GetOnlineGameFriendCount
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 USocialService::GetOnlineGameFriendCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SocialService", "GetOnlineGameFriendCount");

	Params::SocialService_GetOnlineGameFriendCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.SocialService.GetOnlineSteamFriendCount
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 USocialService::GetOnlineSteamFriendCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SocialService", "GetOnlineSteamFriendCount");

	Params::SocialService_GetOnlineSteamFriendCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.SocialService.GetSteamFriendArray
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class USteamFriend*>             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class USteamFriend*> USocialService::GetSteamFriendArray()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SocialService", "GetSteamFriendArray");

	Params::SocialService_GetSteamFriendArray Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.SocialService.GetSteamFriendCount
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 USocialService::GetSteamFriendCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SocialService", "GetSteamFriendCount");

	Params::SocialService_GetSteamFriendCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.SocialService.GetTogetherPlayerArray
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UFriendSuggest*>           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UFriendSuggest*> USocialService::GetTogetherPlayerArray()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SocialService", "GetTogetherPlayerArray");

	Params::SocialService_GetTogetherPlayerArray Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.SocialService.Lua_Initialized
// (Native, Event, Public, BlueprintEvent)

void USocialService::Lua_Initialized()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SocialService", "Lua_Initialized");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.SocialService.Lua_SetToggleRedDot
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// ESocialToggleType                       ToggleType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bRedTips                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USocialService::Lua_SetToggleRedDot(ESocialToggleType ToggleType, bool bRedTips)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SocialService", "Lua_SetToggleRedDot");

	Params::SocialService_Lua_SetToggleRedDot Parms{};

	Parms.ToggleType = ToggleType;
	Parms.bRedTips = bRedTips;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.SocialService.RejectAllFriendInvite
// (Final, Native, Public, BlueprintCallable)

void USocialService::RejectAllFriendInvite()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SocialService", "RejectAllFriendInvite");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.SocialService.RejectFriendInvite
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FUserKey                         UserKey                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USocialService::RejectFriendInvite(const struct FUserKey& UserKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SocialService", "RejectFriendInvite");

	Params::SocialService_RejectFriendInvite Parms{};

	Parms.UserKey = std::move(UserKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.SocialService.RemoveFriend
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FUserKey                         UserKey                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USocialService::RemoveFriend(const struct FUserKey& UserKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SocialService", "RemoveFriend");

	Params::SocialService_RemoveFriend Parms{};

	Parms.UserKey = std::move(UserKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.SocialService.RemoveTogetherPlayer
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FUserKey                         UserKey                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USocialService::RemoveTogetherPlayer(const struct FUserKey& UserKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SocialService", "RemoveTogetherPlayer");

	Params::SocialService_RemoveTogetherPlayer Parms{};

	Parms.UserKey = std::move(UserKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.SocialService.RequestFriendAll
// (Final, Native, Public, BlueprintCallable)

void USocialService::RequestFriendAll()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SocialService", "RequestFriendAll");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.SocialService.RequestFriendSuggest
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ETGFProtoTgfEnForceType                 ForceType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USocialService::RequestFriendSuggest(ETGFProtoTgfEnForceType ForceType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SocialService", "RequestFriendSuggest");

	Params::SocialService_RequestFriendSuggest Parms{};

	Parms.ForceType = ForceType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.SocialService.SearchPlayer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           StrContent                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESearchPlayerTag                        SearchTag                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USocialService::SearchPlayer(const class FString& StrContent, ESearchPlayerTag SearchTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SocialService", "SearchPlayer");

	Params::SocialService_SearchPlayer Parms{};

	Parms.StrContent = std::move(StrContent);
	Parms.SearchTag = SearchTag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.SettingService.AddCheckedActivitiy
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ActivitiyID                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USettingService::AddCheckedActivitiy(int32 ActivitiyID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingService", "AddCheckedActivitiy");

	Params::SettingService_AddCheckedActivitiy Parms{};

	Parms.ActivitiyID = ActivitiyID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.SettingService.GetInputKeyByInputAction
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UInputAction*                     InputAction                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FKey                             ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FKey USettingService::GetInputKeyByInputAction(class UInputAction* InputAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingService", "GetInputKeyByInputAction");

	Params::SettingService_GetInputKeyByInputAction Parms{};

	Parms.InputAction = InputAction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.SettingService.GetLyraSettingsLocal
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ULyraSettingsLocal*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ULyraSettingsLocal* USettingService::GetLyraSettingsLocal()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingService", "GetLyraSettingsLocal");

	Params::SettingService_GetLyraSettingsLocal Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.SettingService.GetLyraSettingsShared
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ULyraSettingsShared*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ULyraSettingsShared* USettingService::GetLyraSettingsShared()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingService", "GetLyraSettingsShared");

	Params::SettingService_GetLyraSettingsShared Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.SettingService.LoadAllowMakeTeam
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USettingService::LoadAllowMakeTeam()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingService", "LoadAllowMakeTeam");

	Params::SettingService_LoadAllowMakeTeam Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.SettingService.LoadCameraShakesByMoving
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USettingService::LoadCameraShakesByMoving()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingService", "LoadCameraShakesByMoving");

	Params::SettingService_LoadCameraShakesByMoving Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.SettingService.LoadChargeSkillMethod
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USettingService::LoadChargeSkillMethod()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingService", "LoadChargeSkillMethod");

	Params::SettingService_LoadChargeSkillMethod Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.SettingService.LoadCheckedActivities
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> USettingService::LoadCheckedActivities()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingService", "LoadCheckedActivities");

	Params::SettingService_LoadCheckedActivities Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.SettingService.LoadDailyLoginCheck
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 USettingService::LoadDailyLoginCheck()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingService", "LoadDailyLoginCheck");

	Params::SettingService_LoadDailyLoginCheck Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.SettingService.LoadInventoryAutoQuality
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<ETgfEquipQuality>                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<ETgfEquipQuality> USettingService::LoadInventoryAutoQuality()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingService", "LoadInventoryAutoQuality");

	Params::SettingService_LoadInventoryAutoQuality Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.SettingService.LoadInventoryOpened
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const TArray<int64>                     ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const TArray<int64> USettingService::LoadInventoryOpened()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingService", "LoadInventoryOpened");

	Params::SettingService_LoadInventoryOpened Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.SettingService.LoadInventorySee
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USettingService::LoadInventorySee()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingService", "LoadInventorySee");

	Params::SettingService_LoadInventorySee Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.SettingService.LoadInventoryTalentTips
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Key                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<int64>                     ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const TArray<int64> USettingService::LoadInventoryTalentTips(int32 Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingService", "LoadInventoryTalentTips");

	Params::SettingService_LoadInventoryTalentTips Parms{};

	Parms.Key = Key;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.SettingService.LoadIsLiveMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USettingService::LoadIsLiveMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingService", "LoadIsLiveMode");

	Params::SettingService_LoadIsLiveMode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.SettingService.LoadKilledScreenshotAutoDelete
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USettingService::LoadKilledScreenshotAutoDelete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingService", "LoadKilledScreenshotAutoDelete");

	Params::SettingService_LoadKilledScreenshotAutoDelete Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.SettingService.LoadKilledScreenshotPath
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString USettingService::LoadKilledScreenshotPath()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingService", "LoadKilledScreenshotPath");

	Params::SettingService_LoadKilledScreenshotPath Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.SettingService.LoadKilledScreenshotStorageLimit
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EStorageLimit                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EStorageLimit USettingService::LoadKilledScreenshotStorageLimit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingService", "LoadKilledScreenshotStorageLimit");

	Params::SettingService_LoadKilledScreenshotStorageLimit Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.SettingService.LoadMithrilInventoryOpened
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const TArray<int64>                     ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const TArray<int64> USettingService::LoadMithrilInventoryOpened()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingService", "LoadMithrilInventoryOpened");

	Params::SettingService_LoadMithrilInventoryOpened Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.SettingService.LoadMoonInterationTime
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 USettingService::LoadMoonInterationTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingService", "LoadMoonInterationTime");

	Params::SettingService_LoadMoonInterationTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.SettingService.LoadMouseTargetingMethod
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USettingService::LoadMouseTargetingMethod()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingService", "LoadMouseTargetingMethod");

	Params::SettingService_LoadMouseTargetingMethod Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.SettingService.LoadOpenOperationTips
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USettingService::LoadOpenOperationTips()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingService", "LoadOpenOperationTips");

	Params::SettingService_LoadOpenOperationTips Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.SettingService.LoadPrivateChat
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USettingService::LoadPrivateChat()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingService", "LoadPrivateChat");

	Params::SettingService_LoadPrivateChat Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.SettingService.LoadPrivateRoomInvitePermission
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ESocialPermission                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ESocialPermission USettingService::LoadPrivateRoomInvitePermission()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingService", "LoadPrivateRoomInvitePermission");

	Params::SettingService_LoadPrivateRoomInvitePermission Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.SettingService.LoadProcessingTaskIds
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           LocalUserKey                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> USettingService::LoadProcessingTaskIds(const class FString& LocalUserKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingService", "LoadProcessingTaskIds");

	Params::SettingService_LoadProcessingTaskIds Parms{};

	Parms.LocalUserKey = std::move(LocalUserKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.SettingService.LoadSavedTalents
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> USettingService::LoadSavedTalents()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingService", "LoadSavedTalents");

	Params::SettingService_LoadSavedTalents Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.SettingService.LoadSaveKilledScreenshot
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USettingService::LoadSaveKilledScreenshot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingService", "LoadSaveKilledScreenshot");

	Params::SettingService_LoadSaveKilledScreenshot Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.SettingService.LoadShowWeaponOperatinsTipsFlag
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USettingService::LoadShowWeaponOperatinsTipsFlag()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingService", "LoadShowWeaponOperatinsTipsFlag");

	Params::SettingService_LoadShowWeaponOperatinsTipsFlag Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.SettingService.LoadSquatDownMethodMethod
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USettingService::LoadSquatDownMethodMethod()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingService", "LoadSquatDownMethodMethod");

	Params::SettingService_LoadSquatDownMethodMethod Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.SettingService.LoadTermAttribute
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USettingService::LoadTermAttribute()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingService", "LoadTermAttribute");

	Params::SettingService_LoadTermAttribute Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.SettingService.Lua_Initialized
// (Native, Event, Public, BlueprintEvent)

void USettingService::Lua_Initialized()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingService", "Lua_Initialized");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.SettingService.Lua_OpenAccountDeletion
// (Native, Event, Public, BlueprintEvent)

void USettingService::Lua_OpenAccountDeletion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingService", "Lua_OpenAccountDeletion");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.SettingService.Lua_OpenCustomerService
// (Native, Event, Public, BlueprintEvent)

void USettingService::Lua_OpenCustomerService()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingService", "Lua_OpenCustomerService");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.SettingService.Lua_OpenPrivacyProtocol
// (Native, Event, Public, BlueprintEvent)

void USettingService::Lua_OpenPrivacyProtocol()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingService", "Lua_OpenPrivacyProtocol");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.SettingService.Lua_OpenProtocolDescription
// (Native, Event, Public, BlueprintEvent)

void USettingService::Lua_OpenProtocolDescription()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingService", "Lua_OpenProtocolDescription");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.SettingService.Lua_OpenUserProtocol
// (Native, Event, Public, BlueprintEvent)

void USettingService::Lua_OpenUserProtocol()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingService", "Lua_OpenUserProtocol");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.SettingService.ResetKeyBindings
// (Final, Native, Public, BlueprintCallable)

void USettingService::ResetKeyBindings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingService", "ResetKeyBindings");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.SettingService.SaveCheckedActivities
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<int32>                           Activities                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void USettingService::SaveCheckedActivities(const TArray<int32>& Activities)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingService", "SaveCheckedActivities");

	Params::SettingService_SaveCheckedActivities Parms{};

	Parms.Activities = std::move(Activities);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.SettingService.SaveDailyLoginCheck
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Timme                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USettingService::SaveDailyLoginCheck(int32 Timme)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingService", "SaveDailyLoginCheck");

	Params::SettingService_SaveDailyLoginCheck Parms{};

	Parms.Timme = Timme;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.SettingService.SaveInventoryAutoQuality
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<ETgfEquipQuality>                Rarity                                                 (Parm, ZeroConstructor, NativeAccessSpecifierPublic)

void USettingService::SaveInventoryAutoQuality(const TArray<ETgfEquipQuality>& Rarity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingService", "SaveInventoryAutoQuality");

	Params::SettingService_SaveInventoryAutoQuality Parms{};

	Parms.Rarity = std::move(Rarity);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.SettingService.SaveInventoryOpened
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<int64>                           Guids                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void USettingService::SaveInventoryOpened(const TArray<int64>& Guids)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingService", "SaveInventoryOpened");

	Params::SettingService_SaveInventoryOpened Parms{};

	Parms.Guids = std::move(Guids);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.SettingService.SaveInventoryTalentTips
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   Key                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<int64>                           Guids                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void USettingService::SaveInventoryTalentTips(int32 Key, const TArray<int64>& Guids)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingService", "SaveInventoryTalentTips");

	Params::SettingService_SaveInventoryTalentTips Parms{};

	Parms.Key = Key;
	Parms.Guids = std::move(Guids);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.SettingService.SaveKeyBinding
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             ActionName                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FKey                             Key                                                    (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USettingService::SaveKeyBinding(class FName ActionName, const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingService", "SaveKeyBinding");

	Params::SettingService_SaveKeyBinding Parms{};

	Parms.ActionName = ActionName;
	Parms.Key = std::move(Key);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.SettingService.SaveMithrilInventoryOpened
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<int64>                           Guids                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void USettingService::SaveMithrilInventoryOpened(const TArray<int64>& Guids)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingService", "SaveMithrilInventoryOpened");

	Params::SettingService_SaveMithrilInventoryOpened Parms{};

	Parms.Guids = std::move(Guids);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.SettingService.SaveMoonInterationTime
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Timme                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USettingService::SaveMoonInterationTime(int32 Timme)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingService", "SaveMoonInterationTime");

	Params::SettingService_SaveMoonInterationTime Parms{};

	Parms.Timme = Timme;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.SettingService.SavePrivateRoomInvitePermission
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ESocialPermission                       Permission                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USettingService::SavePrivateRoomInvitePermission(ESocialPermission Permission)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingService", "SavePrivateRoomInvitePermission");

	Params::SettingService_SavePrivateRoomInvitePermission Parms{};

	Parms.Permission = Permission;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.SettingService.SaveProcessingTaskIds
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           LocalUserKey                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<int32>                           ProcessingTaskIds                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void USettingService::SaveProcessingTaskIds(const class FString& LocalUserKey, const TArray<int32>& ProcessingTaskIds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingService", "SaveProcessingTaskIds");

	Params::SettingService_SaveProcessingTaskIds Parms{};

	Parms.LocalUserKey = std::move(LocalUserKey);
	Parms.ProcessingTaskIds = std::move(ProcessingTaskIds);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.SettingService.SaveShowWeaponOperatinsTipsFlag
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bIsShow                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USettingService::SaveShowWeaponOperatinsTipsFlag(bool bIsShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingService", "SaveShowWeaponOperatinsTipsFlag");

	Params::SettingService_SaveShowWeaponOperatinsTipsFlag Parms{};

	Parms.bIsShow = bIsShow;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.SettingService.SaveTalents
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<int32>                           Talents                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void USettingService::SaveTalents(const TArray<int32>& Talents)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingService", "SaveTalents");

	Params::SettingService_SaveTalents Parms{};

	Parms.Talents = std::move(Talents);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.SettingService.SetIsLiveMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USettingService::SetIsLiveMode(bool NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingService", "SetIsLiveMode");

	Params::SettingService_SetIsLiveMode Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.StringFunctionLibrary.ConvertDateTimeToLocal
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           InString                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FStringResult                    ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FStringResult UStringFunctionLibrary::ConvertDateTimeToLocal(const class FString& InString)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("StringFunctionLibrary", "ConvertDateTimeToLocal");

	Params::StringFunctionLibrary_ConvertDateTimeToLocal Parms{};

	Parms.InString = std::move(InString);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.StringFunctionLibrary.FilterChineseCharacter
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           InString                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FStringResult                    ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FStringResult UStringFunctionLibrary::FilterChineseCharacter(const class FString& InString)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("StringFunctionLibrary", "FilterChineseCharacter");

	Params::StringFunctionLibrary_FilterChineseCharacter Parms{};

	Parms.InString = std::move(InString);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.StringFunctionLibrary.LeftLimitStringLength
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           InString                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Length                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FStringResult                    ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FStringResult UStringFunctionLibrary::LeftLimitStringLength(const class FString& InString, const int32 Length)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("StringFunctionLibrary", "LeftLimitStringLength");

	Params::StringFunctionLibrary_LeftLimitStringLength Parms{};

	Parms.InString = std::move(InString);
	Parms.Length = Length;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.StringFunctionLibrary.MatchDefaultRoleName
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           InString                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           OutName                                                (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   OutIndex                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UStringFunctionLibrary::MatchDefaultRoleName(const class FString& InString, class FString* OutName, int64* OutIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("StringFunctionLibrary", "MatchDefaultRoleName");

	Params::StringFunctionLibrary_MatchDefaultRoleName Parms{};

	Parms.InString = std::move(InString);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutName != nullptr)
		*OutName = std::move(Parms.OutName);

	if (OutIndex != nullptr)
		*OutIndex = Parms.OutIndex;

	return Parms.ReturnValue;
}


// Function TGFGame.StringFunctionLibrary.ReserveEnglishAndNumberCharacter
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           InString                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FStringResult                    ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FStringResult UStringFunctionLibrary::ReserveEnglishAndNumberCharacter(const class FString& InString)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("StringFunctionLibrary", "ReserveEnglishAndNumberCharacter");

	Params::StringFunctionLibrary_ReserveEnglishAndNumberCharacter Parms{};

	Parms.InString = std::move(InString);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.StringFunctionLibrary.ReserveEnglishCharacter
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           InString                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FStringResult                    ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FStringResult UStringFunctionLibrary::ReserveEnglishCharacter(const class FString& InString)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("StringFunctionLibrary", "ReserveEnglishCharacter");

	Params::StringFunctionLibrary_ReserveEnglishCharacter Parms{};

	Parms.InString = std::move(InString);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.StringFunctionLibrary.ReserveEnglishSymbolAndNumberCharacter
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           InString                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FStringResult                    ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FStringResult UStringFunctionLibrary::ReserveEnglishSymbolAndNumberCharacter(const class FString& InString)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("StringFunctionLibrary", "ReserveEnglishSymbolAndNumberCharacter");

	Params::StringFunctionLibrary_ReserveEnglishSymbolAndNumberCharacter Parms{};

	Parms.InString = std::move(InString);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.StringFunctionLibrary.ReserveNumberCharacter
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           InString                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FStringResult                    ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FStringResult UStringFunctionLibrary::ReserveNumberCharacter(const class FString& InString)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("StringFunctionLibrary", "ReserveNumberCharacter");

	Params::StringFunctionLibrary_ReserveNumberCharacter Parms{};

	Parms.InString = std::move(InString);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.StringFunctionLibrary.ReserveRoomNameAndPasswordCharacter
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           InString                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FStringResult                    ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FStringResult UStringFunctionLibrary::ReserveRoomNameAndPasswordCharacter(const class FString& InString)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("StringFunctionLibrary", "ReserveRoomNameAndPasswordCharacter");

	Params::StringFunctionLibrary_ReserveRoomNameAndPasswordCharacter Parms{};

	Parms.InString = std::move(InString);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.MatchService.CloseMatchToast
// (Final, Native, Public, BlueprintCallable)

void UMatchService::CloseMatchToast()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchService", "CloseMatchToast");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.MatchService.CreatTestResultData
// (Final, Native, Public, BlueprintCallable)

void UMatchService::CreatTestResultData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchService", "CreatTestResultData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.MatchService.ExitMatching
// (Final, Native, Public, BlueprintCallable)

void UMatchService::ExitMatching()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchService", "ExitMatching");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.MatchService.OnGameLogout
// (Final, Native, Public)
// Parameters:
// class UTGFEventArgs*                    Args                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMatchService::OnGameLogout(class UTGFEventArgs* Args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchService", "OnGameLogout");

	Params::MatchService_OnGameLogout Parms{};

	Parms.Args = Args;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.MatchService.OnNetworkManagerEnterState
// (Final, Native, Public)
// Parameters:
// class UTGFEventArgs*                    Args                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMatchService::OnNetworkManagerEnterState(class UTGFEventArgs* Args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchService", "OnNetworkManagerEnterState");

	Params::MatchService_OnNetworkManagerEnterState Parms{};

	Parms.Args = Args;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.MatchService.OnNetworkManagerExitState
// (Final, Native, Public)
// Parameters:
// class UTGFEventArgs*                    Args                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMatchService::OnNetworkManagerExitState(class UTGFEventArgs* Args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchService", "OnNetworkManagerExitState");

	Params::MatchService_OnNetworkManagerExitState Parms{};

	Parms.Args = Args;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.MatchService.OpenMatchToast
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EMatchState                             MatchState                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMatchService::OpenMatchToast(EMatchState MatchState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchService", "OpenMatchToast");

	Params::MatchService_OpenMatchToast Parms{};

	Parms.MatchState = MatchState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.MatchService.ResumeMatching
// (Final, Native, Public, BlueprintCallable)

void UMatchService::ResumeMatching()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchService", "ResumeMatching");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.MatchService.SelectChallengerType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ETGFProtoTgfEnChallengerModelType       ChallengerType                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMatchService::SelectChallengerType(ETGFProtoTgfEnChallengerModelType ChallengerType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchService", "SelectChallengerType");

	Params::MatchService_SelectChallengerType Parms{};

	Parms.ChallengerType = ChallengerType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.MatchService.SelectMapLevel
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   LevelId                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   LevelType                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Region                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMatchService::SelectMapLevel(const int32 LevelId, const int32 LevelType, const class FString& Region)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchService", "SelectMapLevel");

	Params::MatchService_SelectMapLevel Parms{};

	Parms.LevelId = LevelId;
	Parms.LevelType = LevelType;
	Parms.Region = std::move(Region);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.MatchService.SetShowBattleResult
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    IsShow                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMatchService::SetShowBattleResult(bool IsShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchService", "SetShowBattleResult");

	Params::MatchService_SetShowBattleResult Parms{};

	Parms.IsShow = IsShow;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.MatchService.SetShowBattleReturn
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    IsShow                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMatchService::SetShowBattleReturn(bool IsShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchService", "SetShowBattleReturn");

	Params::MatchService_SetShowBattleReturn Parms{};

	Parms.IsShow = IsShow;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.MatchService.StartMatch
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   LevelType                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   LevelId                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Region                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMatchService::StartMatch(const int32 LevelType, const int32 LevelId, const class FString& Region)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchService", "StartMatch");

	Params::MatchService_StartMatch Parms{};

	Parms.LevelType = LevelType;
	Parms.LevelId = LevelId;
	Parms.Region = std::move(Region);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.MatchService.StopMatch
// (Final, Native, Public, BlueprintCallable)

void UMatchService::StopMatch()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchService", "StopMatch");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.MatchService.GetResultData
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTGFProtoTgfSCBattleSettleSync*   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTGFProtoTgfSCBattleSettleSync* UMatchService::GetResultData() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchService", "GetResultData");

	Params::MatchService_GetResultData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.MatchService.GetSelectedChallengerType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ETGFProtoTgfEnChallengerModelType       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETGFProtoTgfEnChallengerModelType UMatchService::GetSelectedChallengerType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchService", "GetSelectedChallengerType");

	Params::MatchService_GetSelectedChallengerType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.MatchService.GetSelectedLevelInfo
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FMatchLevelInfo                  ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FMatchLevelInfo UMatchService::GetSelectedLevelInfo() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchService", "GetSelectedLevelInfo");

	Params::MatchService_GetSelectedLevelInfo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.MatchService.IsMatching
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMatchService::IsMatching() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchService", "IsMatching");

	Params::MatchService_IsMatching Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.MatchService.IsTicketsEnough
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMatchService::IsTicketsEnough() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchService", "IsTicketsEnough");

	Params::MatchService_IsTicketsEnough Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.MatchService.ShouldShowBattleResult
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMatchService::ShouldShowBattleResult() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchService", "ShouldShowBattleResult");

	Params::MatchService_ShouldShowBattleResult Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.MatchService.ShouldShowBattleReturn
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMatchService::ShouldShowBattleReturn() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchService", "ShouldShowBattleReturn");

	Params::MatchService_ShouldShowBattleReturn Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.MatchToastArgs.Create
// (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable)
// Parameters:
// EMatchState                             InMatchState                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMatchToastArgs*                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMatchToastArgs* UMatchToastArgs::Create(EMatchState InMatchState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MatchToastArgs", "Create");

	Params::MatchToastArgs_Create Parms{};

	Parms.InMatchState = InMatchState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.MatchWindowArgs.Create
// (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   Param_LevelId                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Param_LevelType                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Param_Region                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Param_SendSearchRequest                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMatchWindowArgs*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMatchWindowArgs* UMatchWindowArgs::Create(const int32 Param_LevelId, const int32 Param_LevelType, const class FString& Param_Region, bool Param_SendSearchRequest)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MatchWindowArgs", "Create");

	Params::MatchWindowArgs_Create Parms{};

	Parms.Param_LevelId = Param_LevelId;
	Parms.Param_LevelType = Param_LevelType;
	Parms.Param_Region = std::move(Param_Region);
	Parms.Param_SendSearchRequest = Param_SendSearchRequest;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.MidasService.GetIsLimitInterval
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMidasService::GetIsLimitInterval()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MidasService", "GetIsLimitInterval");

	Params::MidasService_GetIsLimitInterval Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.MidasService.GetIsPaying
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMidasService::GetIsPaying()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MidasService", "GetIsPaying");

	Params::MidasService_GetIsPaying Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.MidasService.GetProductInfo
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class FString>                   SkuIdList                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UMidasService::GetProductInfo(const TArray<class FString>& SkuIdList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MidasService", "GetProductInfo");

	Params::MidasService_GetProductInfo Parms{};

	Parms.SkuIdList = std::move(SkuIdList);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.MidasService.GetProductInfoBySkuId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           SkuId                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FCtiProductInfo                  OutProductInfo                                         (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMidasService::GetProductInfoBySkuId(const class FString& SkuId, struct FCtiProductInfo* OutProductInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MidasService", "GetProductInfoBySkuId");

	Params::MidasService_GetProductInfoBySkuId Parms{};

	Parms.SkuId = std::move(SkuId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutProductInfo != nullptr)
		*OutProductInfo = std::move(Parms.OutProductInfo);

	return Parms.ReturnValue;
}


// Function TGFGame.MidasService.GetProductInnerCode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UMidasService::GetProductInnerCode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MidasService", "GetProductInnerCode");

	Params::MidasService_GetProductInnerCode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.MidasService.GetProductRetCode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMidasService::GetProductRetCode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MidasService", "GetProductRetCode");

	Params::MidasService_GetProductRetCode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.MidasService.Init
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           OpenID                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ServerId                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMidasService::Init(const class FString& OpenID, const class FString& ServerId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MidasService", "Init");

	Params::MidasService_Init Parms{};

	Parms.OpenID = std::move(OpenID);
	Parms.ServerId = std::move(ServerId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.MidasService.Pay
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           PayInfo                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMidasService::Pay(const class FString& PayInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MidasService", "Pay");

	Params::MidasService_Pay Parms{};

	Parms.PayInfo = std::move(PayInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.MidasService.ReapplyReceipt
// (Final, Native, Public, BlueprintCallable)

void UMidasService::ReapplyReceipt()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MidasService", "ReapplyReceipt");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.MithrilService.EnterMithrilHall
// (Final, Native, Public, BlueprintCallable)

void UMithrilService::EnterMithrilHall()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MithrilService", "EnterMithrilHall");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.MithrilService.LeaveMithrilHall
// (Final, Native, Public, BlueprintCallable)

void UMithrilService::LeaveMithrilHall()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MithrilService", "LeaveMithrilHall");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.MithrilService.Lua_Initialized
// (Native, Event, Public, BlueprintEvent)

void UMithrilService::Lua_Initialized()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MithrilService", "Lua_Initialized");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.MithrilService.SelectMithrilRole
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ETGFProtoTgfEnRoleCareerType            CareerType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETGFProtoTgfEnRoleGenderType            GenderType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMithrilService::SelectMithrilRole(ETGFProtoTgfEnRoleCareerType CareerType, ETGFProtoTgfEnRoleGenderType GenderType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MithrilService", "SelectMithrilRole");

	Params::MithrilService_SelectMithrilRole Parms{};

	Parms.CareerType = CareerType;
	Parms.GenderType = GenderType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.MithrilService.SendMithrilForceReceiveRewardReq
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class UTGFProtoTgfDItemOffset*>  InRewardItems                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UMithrilService::SendMithrilForceReceiveRewardReq(const TArray<class UTGFProtoTgfDItemOffset*>& InRewardItems)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MithrilService", "SendMithrilForceReceiveRewardReq");

	Params::MithrilService_SendMithrilForceReceiveRewardReq Parms{};

	Parms.InRewardItems = std::move(InRewardItems);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.MithrilService.SetMithrilPrestige
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   Prestige                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMithrilService::SetMithrilPrestige(int64 Prestige)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MithrilService", "SetMithrilPrestige");

	Params::MithrilService_SetMithrilPrestige Parms{};

	Parms.Prestige = Prestige;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.MithrilService.CheckHasMithrilRole
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMithrilService::CheckHasMithrilRole() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MithrilService", "CheckHasMithrilRole");

	Params::MithrilService_CheckHasMithrilRole Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.MithrilService.CheckInMithrilHall
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMithrilService::CheckInMithrilHall() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MithrilService", "CheckInMithrilHall");

	Params::MithrilService_CheckInMithrilHall Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.MithrilService.GetMithrilLevel
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int64                                   OutNextExp                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   OutRemainExp                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMithrilService::GetMithrilLevel(int64* OutNextExp, int64* OutRemainExp) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MithrilService", "GetMithrilLevel");

	Params::MithrilService_GetMithrilLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutNextExp != nullptr)
		*OutNextExp = Parms.OutNextExp;

	if (OutRemainExp != nullptr)
		*OutRemainExp = Parms.OutRemainExp;

	return Parms.ReturnValue;
}


// Function TGFGame.MithrilService.GetMithrilPrestigeLevel
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int64                                   Prestige                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   OutNextExp                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   OutRemainExp                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMithrilService::GetMithrilPrestigeLevel(int64 Prestige, int64* OutNextExp, int64* OutRemainExp) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MithrilService", "GetMithrilPrestigeLevel");

	Params::MithrilService_GetMithrilPrestigeLevel Parms{};

	Parms.Prestige = Prestige;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutNextExp != nullptr)
		*OutNextExp = Parms.OutNextExp;

	if (OutRemainExp != nullptr)
		*OutRemainExp = Parms.OutRemainExp;

	return Parms.ReturnValue;
}


// Function TGFGame.MithrilService.GetMithrilRoleGuid
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ETGFProtoTgfEnRoleCareerType            CareerType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UMithrilService::GetMithrilRoleGuid(ETGFProtoTgfEnRoleCareerType CareerType) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MithrilService", "GetMithrilRoleGuid");

	Params::MithrilService_GetMithrilRoleGuid Parms{};

	Parms.CareerType = CareerType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TaskService.Lua_BroadcastCheckDailyLogin
// (Final, Native, Public, BlueprintCallable)

void UTaskService::Lua_BroadcastCheckDailyLogin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TaskService", "Lua_BroadcastCheckDailyLogin");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TaskService.Lua_Initialized
// (Native, Event, Public, BlueprintEvent)

void UTaskService::Lua_Initialized()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TaskService", "Lua_Initialized");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TaskService.Lua_NotifyTaskDataReady
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bIsReady                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTaskService::Lua_NotifyTaskDataReady(bool bIsReady)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TaskService", "Lua_NotifyTaskDataReady");

	Params::TaskService_Lua_NotifyTaskDataReady Parms{};

	Parms.bIsReady = bIsReady;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TaskService.Lua_ReportTaskReward
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   TaskId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTaskService::Lua_ReportTaskReward(int32 TaskId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TaskService", "Lua_ReportTaskReward");

	Params::TaskService_Lua_ReportTaskReward Parms{};

	Parms.TaskId = TaskId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TaskService.Lua_ReportTaskSubmitItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   TaskId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   SubmitCnt                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTaskService::Lua_ReportTaskSubmitItem(int32 TaskId, int64 SubmitCnt)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TaskService", "Lua_ReportTaskSubmitItem");

	Params::TaskService_Lua_ReportTaskSubmitItem Parms{};

	Parms.TaskId = TaskId;
	Parms.SubmitCnt = SubmitCnt;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TaskService.Lua_UpdateTaskInfo
// (Event, Public, BlueprintEvent)
// Parameters:
// class UTGFProtoTgfDUserQuestData*       UpdataTaskInfo                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTaskService::Lua_UpdateTaskInfo(class UTGFProtoTgfDUserQuestData* UpdataTaskInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TaskService", "Lua_UpdateTaskInfo");

	Params::TaskService_Lua_UpdateTaskInfo Parms{};

	Parms.UpdataTaskInfo = UpdataTaskInfo;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TGFGame.TgfAppearanceService.BroadcastCaptureData
// (Final, Native, Public)
// Parameters:
// int64                                   RoleID                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          SlateBrush                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTgfAppearanceService::BroadcastCaptureData(int64 RoleID, class UObject* SlateBrush)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TgfAppearanceService", "BroadcastCaptureData");

	Params::TgfAppearanceService_BroadcastCaptureData Parms{};

	Parms.RoleID = RoleID;
	Parms.SlateBrush = SlateBrush;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TgfAppearanceService.GetAppearanceTextureDirectly
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FTgfAvatarBuildConfig            InAppearanceConfig                                     (Parm, NativeAccessSpecifierPublic)
// class UTexture2D*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTexture2D* UTgfAppearanceService::GetAppearanceTextureDirectly(const struct FTgfAvatarBuildConfig& InAppearanceConfig)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TgfAppearanceService", "GetAppearanceTextureDirectly");

	Params::TgfAppearanceService_GetAppearanceTextureDirectly Parms{};

	Parms.InAppearanceConfig = std::move(InAppearanceConfig);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TgfAppearanceService.GetSceneInstance
// (Final, Native, Public)
// Parameters:
// class ASceneAppearanceActor*            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ASceneAppearanceActor* UTgfAppearanceService::GetSceneInstance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TgfAppearanceService", "GetSceneInstance");

	Params::TgfAppearanceService_GetSceneInstance Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TgfAppearanceService.InitAppearanceScene
// (Final, Native, Public, BlueprintCallable)

void UTgfAppearanceService::InitAppearanceScene()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TgfAppearanceService", "InitAppearanceScene");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TgfAppearanceService.RequestRoleAppearanceTexture
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// int64                                   RoleID                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTgfAvatarBuildConfig            InAppearanceConfig                                     (Parm, NativeAccessSpecifierPublic)
// bool                                    NeedQueueFirst                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        ImgSize                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTgfAppearanceService::RequestRoleAppearanceTexture(int64 RoleID, const struct FTgfAvatarBuildConfig& InAppearanceConfig, bool NeedQueueFirst, const struct FVector2D& ImgSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TgfAppearanceService", "RequestRoleAppearanceTexture");

	Params::TgfAppearanceService_RequestRoleAppearanceTexture Parms{};

	Parms.RoleID = RoleID;
	Parms.InAppearanceConfig = std::move(InAppearanceConfig);
	Parms.NeedQueueFirst = NeedQueueFirst;
	Parms.ImgSize = std::move(ImgSize);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TgfAppearanceService.SetOperateFrameInterval
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   FrameInterval                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTgfAppearanceService::SetOperateFrameInterval(int32 FrameInterval)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TgfAppearanceService", "SetOperateFrameInterval");

	Params::TgfAppearanceService_SetOperateFrameInterval Parms{};

	Parms.FrameInterval = FrameInterval;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TgfAppearanceService.SetWorkerFrameInterval
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   FrameInterval                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTgfAppearanceService::SetWorkerFrameInterval(int32 FrameInterval)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TgfAppearanceService", "SetWorkerFrameInterval");

	Params::TgfAppearanceService_SetWorkerFrameInterval Parms{};

	Parms.FrameInterval = FrameInterval;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.RoleInfo.GetAvatarBuildConfig
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FTgfAvatarBuildConfig            ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FTgfAvatarBuildConfig URoleInfo::GetAvatarBuildConfig() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RoleInfo", "GetAvatarBuildConfig");

	Params::RoleInfo_GetAvatarBuildConfig Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.RoleInfo.GetDefaultRoleName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString URoleInfo::GetDefaultRoleName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RoleInfo", "GetDefaultRoleName");

	Params::RoleInfo_GetDefaultRoleName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.RoleInfo.GetEquipmentList
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    bFilterDressUp                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> URoleInfo::GetEquipmentList(bool bFilterDressUp) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RoleInfo", "GetEquipmentList");

	Params::RoleInfo_GetEquipmentList Parms{};

	Parms.bFilterDressUp = bFilterDressUp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.RoleInfo.GetEquipmentListWithoutSlotType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ETgfEquipSlot                           ExceptType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> URoleInfo::GetEquipmentListWithoutSlotType(ETgfEquipSlot ExceptType) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RoleInfo", "GetEquipmentListWithoutSlotType");

	Params::RoleInfo_GetEquipmentListWithoutSlotType Parms{};

	Parms.ExceptType = ExceptType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.RoleInfo.GetHeadIconPath
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString URoleInfo::GetHeadIconPath() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RoleInfo", "GetHeadIconPath");

	Params::RoleInfo_GetHeadIconPath Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.RoleInfo.GetIsExpired
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URoleInfo::GetIsExpired() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RoleInfo", "GetIsExpired");

	Params::RoleInfo_GetIsExpired Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.RoleInfo.GetIsValid
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URoleInfo::GetIsValid() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RoleInfo", "GetIsValid");

	Params::RoleInfo_GetIsValid Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.RoleInfo.GetRoleName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString URoleInfo::GetRoleName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RoleInfo", "GetRoleName");

	Params::RoleInfo_GetRoleName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.RoleInfo.GetUESkinsList
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> URoleInfo::GetUESkinsList() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RoleInfo", "GetUESkinsList");

	Params::RoleInfo_GetUESkinsList Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.RoleInfo.GetWeaponList
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> URoleInfo::GetWeaponList() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RoleInfo", "GetWeaponList");

	Params::RoleInfo_GetWeaponList Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.PayService.CheckPayGetAllReceived
// (Final, Native, Public)

void UPayService::CheckPayGetAllReceived()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PayService", "CheckPayGetAllReceived");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.PayService.OnGameLogout
// (Final, Native, Public)
// Parameters:
// class UTGFEventArgs*                    Args                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPayService::OnGameLogout(class UTGFEventArgs* Args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PayService", "OnGameLogout");

	Params::PayService_OnGameLogout Parms{};

	Parms.Args = Args;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.PayService.OnPaySuccess
// (Final, Native, Public)
// Parameters:
// class UTGFEventArgs*                    Args                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPayService::OnPaySuccess(class UTGFEventArgs* Args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PayService", "OnPaySuccess");

	Params::PayService_OnPaySuccess Parms{};

	Parms.Args = Args;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.PayService.SendPayGetAll
// (Final, Native, Public, BlueprintCallable)

void UPayService::SendPayGetAll()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PayService", "SendPayGetAll");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.PayService.SendPayUpdateDiamondReq
// (Final, Native, Public, BlueprintCallable)

void UPayService::SendPayUpdateDiamondReq()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PayService", "SendPayUpdateDiamondReq");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.PlayerInfoService.GetCreateOpenFrom
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ECreateRoleFrom                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ECreateRoleFrom UPlayerInfoService::GetCreateOpenFrom()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerInfoService", "GetCreateOpenFrom");

	Params::PlayerInfoService_GetCreateOpenFrom Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.PlayerInfoService.GetHallRoleCareerType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ETGFProtoTgfEnRoleCareerType            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETGFProtoTgfEnRoleCareerType UPlayerInfoService::GetHallRoleCareerType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerInfoService", "GetHallRoleCareerType");

	Params::PlayerInfoService_GetHallRoleCareerType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.PlayerInfoService.GetHallRoleForceType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ETGFProtoTgfEnForceType                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETGFProtoTgfEnForceType UPlayerInfoService::GetHallRoleForceType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerInfoService", "GetHallRoleForceType");

	Params::PlayerInfoService_GetHallRoleForceType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.PlayerInfoService.GetHallRoleGender
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UPlayerInfoService::GetHallRoleGender()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerInfoService", "GetHallRoleGender");

	Params::PlayerInfoService_GetHallRoleGender Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.PlayerInfoService.GetHallRoleGuid
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UPlayerInfoService::GetHallRoleGuid()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerInfoService", "GetHallRoleGuid");

	Params::PlayerInfoService_GetHallRoleGuid Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.PlayerInfoService.GetHallRoleInfo
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTGFProtoTgfDUserRole*            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTGFProtoTgfDUserRole* UPlayerInfoService::GetHallRoleInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerInfoService", "GetHallRoleInfo");

	Params::PlayerInfoService_GetHallRoleInfo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.PlayerInfoService.GetHallRoleInfoBasic
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTGFProtoTgfDUserRoleBasic*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTGFProtoTgfDUserRoleBasic* UPlayerInfoService::GetHallRoleInfoBasic()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerInfoService", "GetHallRoleInfoBasic");

	Params::PlayerInfoService_GetHallRoleInfoBasic Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.PlayerInfoService.GetHallRoleRace
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ETGFProtoTgfEnRoleRaceType              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETGFProtoTgfEnRoleRaceType UPlayerInfoService::GetHallRoleRace()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerInfoService", "GetHallRoleRace");

	Params::PlayerInfoService_GetHallRoleRace Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.PlayerInfoService.GetRole
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   Guid                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTGFUserRole                     Role                                                   (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlayerInfoService::GetRole(int64 Guid, struct FTGFUserRole* Role)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerInfoService", "GetRole");

	Params::PlayerInfoService_GetRole Parms{};

	Parms.Guid = Guid;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Role != nullptr)
		*Role = std::move(Parms.Role);

	return Parms.ReturnValue;
}


// Function TGFGame.PlayerInfoService.GetRoleInfo
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   Guid                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTGFProtoTgfDUserRole*            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTGFProtoTgfDUserRole* UPlayerInfoService::GetRoleInfo(int64 Guid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerInfoService", "GetRoleInfo");

	Params::PlayerInfoService_GetRoleInfo Parms{};

	Parms.Guid = Guid;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.PlayerInfoService.GetRoleList
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<struct FTGFUserRole>             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FTGFUserRole> UPlayerInfoService::GetRoleList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerInfoService", "GetRoleList");

	Params::PlayerInfoService_GetRoleList Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.PlayerInfoService.OnGameLogout
// (Final, Native, Public)
// Parameters:
// class UTGFEventArgs*                    Args                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayerInfoService::OnGameLogout(class UTGFEventArgs* Args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerInfoService", "OnGameLogout");

	Params::PlayerInfoService_OnGameLogout Parms{};

	Parms.Args = Args;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.PlayerInfoService.OpenCreateRole
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ECreateRoleFrom                         InFrom                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTGFCreateRoleWindowArgs*         Args                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayerInfoService::OpenCreateRole(ECreateRoleFrom InFrom, class UTGFCreateRoleWindowArgs* Args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerInfoService", "OpenCreateRole");

	Params::PlayerInfoService_OpenCreateRole Parms{};

	Parms.InFrom = InFrom;
	Parms.Args = Args;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.PlayerInfoService.SendBusinessPingReq
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ETGFProtoTgfEnBusinessPingType          PingType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayerInfoService::SendBusinessPingReq(ETGFProtoTgfEnBusinessPingType PingType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerInfoService", "SendBusinessPingReq");

	Params::PlayerInfoService_SendBusinessPingReq Parms{};

	Parms.PingType = PingType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.PlayerInfoService.SendPlayerUpdateBirthDayReq
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           Birth                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayerInfoService::SendPlayerUpdateBirthDayReq(const class FString& Birth)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerInfoService", "SendPlayerUpdateBirthDayReq");

	Params::PlayerInfoService_SendPlayerUpdateBirthDayReq Parms{};

	Parms.Birth = std::move(Birth);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.PlayerInfoService.GetAreaId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UPlayerInfoService::GetAreaId() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerInfoService", "GetAreaId");

	Params::PlayerInfoService_GetAreaId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.PlayerInfoService.GetBirth
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UPlayerInfoService::GetBirth() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerInfoService", "GetBirth");

	Params::PlayerInfoService_GetBirth Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.PlayerInfoService.GetConsecutiveLoginDays
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UPlayerInfoService::GetConsecutiveLoginDays() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerInfoService", "GetConsecutiveLoginDays");

	Params::PlayerInfoService_GetConsecutiveLoginDays Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.PlayerInfoService.GetCumulativeLoginDays
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UPlayerInfoService::GetCumulativeLoginDays() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerInfoService", "GetCumulativeLoginDays");

	Params::PlayerInfoService_GetCumulativeLoginDays Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.PlayerInfoService.GetHistoryRoleMaxLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UPlayerInfoService::GetHistoryRoleMaxLevel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerInfoService", "GetHistoryRoleMaxLevel");

	Params::PlayerInfoService_GetHistoryRoleMaxLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.PlayerInfoService.GetRegisterCountry
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UPlayerInfoService::GetRegisterCountry() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerInfoService", "GetRegisterCountry");

	Params::PlayerInfoService_GetRegisterCountry Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.PlayerInfoService.GetRoleCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UPlayerInfoService::GetRoleCount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerInfoService", "GetRoleCount");

	Params::PlayerInfoService_GetRoleCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.PlayerInfoService.GetUserDataVersion
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ETGFProtoTgfEnUserTableDataVersion      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETGFProtoTgfEnUserTableDataVersion UPlayerInfoService::GetUserDataVersion() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerInfoService", "GetUserDataVersion");

	Params::PlayerInfoService_GetUserDataVersion Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TeamMember.SetIsReady
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInReady                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTeamMember::SetIsReady(bool bInReady)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TeamMember", "SetIsReady");

	Params::TeamMember_SetIsReady Parms{};

	Parms.bInReady = bInReady;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TeamMember.GetIsValid
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTeamMember::GetIsValid() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TeamMember", "GetIsValid");

	Params::TeamMember_GetIsValid Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TgfInventoryWrapper_Lobby.OnItemUpdate
// (Native, Protected)
// Parameters:
// class UTGFEventArgs*                    Args                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTgfInventoryWrapper_Lobby::OnItemUpdate(class UTGFEventArgs* Args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TgfInventoryWrapper_Lobby", "OnItemUpdate");

	Params::TgfInventoryWrapper_Lobby_OnItemUpdate Parms{};

	Parms.Args = Args;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TgfInventoryWrapper_Lobby.SetInventoryRoleWrapper
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTgfInventoryRoleWrapper*         RoleWrapper                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTgfInventoryWrapper_Lobby::SetInventoryRoleWrapper(class UTgfInventoryRoleWrapper* RoleWrapper)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TgfInventoryWrapper_Lobby", "SetInventoryRoleWrapper");

	Params::TgfInventoryWrapper_Lobby_SetInventoryRoleWrapper Parms{};

	Parms.RoleWrapper = RoleWrapper;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TgfInventoryWrapper_Lobby.GetActiveTalents
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct FTgfCareerTalentCfgItem>  ActiveTalents                                          (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UTgfInventoryWrapper_Lobby::GetActiveTalents(TArray<struct FTgfCareerTalentCfgItem>* ActiveTalents) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TgfInventoryWrapper_Lobby", "GetActiveTalents");

	Params::TgfInventoryWrapper_Lobby_GetActiveTalents Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ActiveTalents != nullptr)
		*ActiveTalents = std::move(Parms.ActiveTalents);
}


// Function TGFGame.TgfInventoryItemWrapper_Activity.Create
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   Type_id                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Count                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTgfInventoryItemWrapper_Activity*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTgfInventoryItemWrapper_Activity* UTgfInventoryItemWrapper_Activity::Create(int32 Type_id, int32 Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TgfInventoryItemWrapper_Activity", "Create");

	Params::TgfInventoryItemWrapper_Activity_Create Parms{};

	Parms.Type_id = Type_id;
	Parms.Count = Count;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TgfCommonWindowArgs.Create
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   Param_Param1                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Param_Param2                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ParamStr                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTgfCommonWindowArgs*             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTgfCommonWindowArgs* UTgfCommonWindowArgs::Create(int32 Param_Param1, int32 Param_Param2, const class FString& ParamStr)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TgfCommonWindowArgs", "Create");

	Params::TgfCommonWindowArgs_Create Parms{};

	Parms.Param_Param1 = Param_Param1;
	Parms.Param_Param2 = Param_Param2;
	Parms.ParamStr = std::move(ParamStr);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TgfInventoryItemWrapper_Lobby.Create
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FTGFItem                         Item                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class UTgfInventoryItemWrapper_Lobby*   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTgfInventoryItemWrapper_Lobby* UTgfInventoryItemWrapper_Lobby::Create(const struct FTGFItem& Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TgfInventoryItemWrapper_Lobby", "Create");

	Params::TgfInventoryItemWrapper_Lobby_Create Parms{};

	Parms.Item = std::move(Item);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TgfInventoryItemWrapper_Lobby.CreateByDItem
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UTGFProtoTgfDItem*                ProtoDItem                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTgfInventoryItemWrapper_Lobby*   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTgfInventoryItemWrapper_Lobby* UTgfInventoryItemWrapper_Lobby::CreateByDItem(class UTGFProtoTgfDItem* ProtoDItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TgfInventoryItemWrapper_Lobby", "CreateByDItem");

	Params::TgfInventoryItemWrapper_Lobby_CreateByDItem Parms{};

	Parms.ProtoDItem = ProtoDItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TgfInventoryItemWrapper_Lobby.GetItemData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FTGFItem                         ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FTGFItem UTgfInventoryItemWrapper_Lobby::GetItemData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TgfInventoryItemWrapper_Lobby", "GetItemData");

	Params::TgfInventoryItemWrapper_Lobby_GetItemData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TgfInventoryItemWrapper_Trade.GetItemData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FTGFItem                         ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FTGFItem UTgfInventoryItemWrapper_Trade::GetItemData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TgfInventoryItemWrapper_Trade", "GetItemData");

	Params::TgfInventoryItemWrapper_Trade_GetItemData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.PVPRoomListItemObject.GetNumTotalMember
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UPVPRoomListItemObject::GetNumTotalMember() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PVPRoomListItemObject", "GetNumTotalMember");

	Params::PVPRoomListItemObject_GetNumTotalMember Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.RankService.DelRankData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class URankUserData*                    TargetData                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URankService::DelRankData(class URankUserData* TargetData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RankService", "DelRankData");

	Params::RankService_DelRankData Parms{};

	Parms.TargetData = TargetData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.RankService.GetMyRankDataByRankTypeInstanceId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   RankType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   RankInstanceId                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   RoleGuid                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class URankUserData*>            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class URankUserData*> URankService::GetMyRankDataByRankTypeInstanceId(int32 RankType, int32 RankInstanceId, int64 RoleGuid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RankService", "GetMyRankDataByRankTypeInstanceId");

	Params::RankService_GetMyRankDataByRankTypeInstanceId Parms{};

	Parms.RankType = RankType;
	Parms.RankInstanceId = RankInstanceId;
	Parms.RoleGuid = RoleGuid;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.RankService.GetMyRankDatas
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class URankUserData*>            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class URankUserData*> URankService::GetMyRankDatas()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RankService", "GetMyRankDatas");

	Params::RankService_GetMyRankDatas Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.RankService.GetMyRankScore
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   RankType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   RankInstanceId                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 URankService::GetMyRankScore(int32 RankType, int32 RankInstanceId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RankService", "GetMyRankScore");

	Params::RankService_GetMyRankScore Parms{};

	Parms.RankType = RankType;
	Parms.RankInstanceId = RankInstanceId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.RankService.GetRankDataByRankTypeInstanceId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   RankType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   RankInstanceId                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class URankUserData*>            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class URankUserData*> URankService::GetRankDataByRankTypeInstanceId(int32 RankType, int32 RankInstanceId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RankService", "GetRankDataByRankTypeInstanceId");

	Params::RankService_GetRankDataByRankTypeInstanceId Parms{};

	Parms.RankType = RankType;
	Parms.RankInstanceId = RankInstanceId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.RankService.GetRankDatas
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class URankUserData*>            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class URankUserData*> URankService::GetRankDatas()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RankService", "GetRankDatas");

	Params::RankService_GetRankDatas Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.RankService.SendRankGetSelfRankRequest
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   RankType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   RankInstance                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SubRankType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SubRankInstance                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   RoleGuid                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   UpCount                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   DownCount                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URankService::SendRankGetSelfRankRequest(int32 RankType, int32 RankInstance, int32 SubRankType, int32 SubRankInstance, int64 RoleGuid, int32 UpCount, int32 DownCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RankService", "SendRankGetSelfRankRequest");

	Params::RankService_SendRankGetSelfRankRequest Parms{};

	Parms.RankType = RankType;
	Parms.RankInstance = RankInstance;
	Parms.SubRankType = SubRankType;
	Parms.SubRankInstance = SubRankInstance;
	Parms.RoleGuid = RoleGuid;
	Parms.UpCount = UpCount;
	Parms.DownCount = DownCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.RankService.SendRankGetSpecifyRequest
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   RankType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   RankInstance                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SubRankType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SubRankInstance                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   StartNo                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Count                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URankService::SendRankGetSpecifyRequest(int32 RankType, int32 RankInstance, int32 SubRankType, int32 SubRankInstance, int32 StartNo, int32 Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RankService", "SendRankGetSpecifyRequest");

	Params::RankService_SendRankGetSpecifyRequest Parms{};

	Parms.RankType = RankType;
	Parms.RankInstance = RankInstance;
	Parms.SubRankType = SubRankType;
	Parms.SubRankInstance = SubRankInstance;
	Parms.StartNo = StartNo;
	Parms.Count = Count;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.RankService.UpdateOrAddRankData
// (Final, Native, Private, HasOutParams)
// Parameters:
// TArray<class URankUserData*>            SourceData                                             (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// class URankUserData*                    TargetData                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URankService::UpdateOrAddRankData(TArray<class URankUserData*>* SourceData, class URankUserData* TargetData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RankService", "UpdateOrAddRankData");

	Params::RankService_UpdateOrAddRankData Parms{};

	Parms.TargetData = TargetData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (SourceData != nullptr)
		*SourceData = std::move(Parms.SourceData);
}


// Function TGFGame.ReportService.AddGameReport
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FTGFReportRecord                 Record                                                 (Parm, NativeAccessSpecifierPublic)

void UReportService::AddGameReport(const struct FTGFReportRecord& Record)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ReportService", "AddGameReport");

	Params::ReportService_AddGameReport Parms{};

	Parms.Record = std::move(Record);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.ReportService.OnSendReport
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FTGFReportRecord                 Record                                                 (Parm, NativeAccessSpecifierPublic)

void UReportService::OnSendReport(const struct FTGFReportRecord& Record)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ReportService", "OnSendReport");

	Params::ReportService_OnSendReport Parms{};

	Parms.Record = std::move(Record);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.RoleFunctionLibrary.GetExcelRoleTypeById
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   RoleTypeId                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExcelLoaderTgfConfigExcelRoleType*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UExcelLoaderTgfConfigExcelRoleType* URoleFunctionLibrary::GetExcelRoleTypeById(int32 RoleTypeId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RoleFunctionLibrary", "GetExcelRoleTypeById");

	Params::RoleFunctionLibrary_GetExcelRoleTypeById Parms{};

	Parms.RoleTypeId = RoleTypeId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.RoleFunctionLibrary.GetExcelRoleTypeList
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// ETGFProtoTgfEnForceType                 InForceType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UExcelLoaderTgfConfigExcelRoleType*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelRoleType*> URoleFunctionLibrary::GetExcelRoleTypeList(ETGFProtoTgfEnForceType InForceType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RoleFunctionLibrary", "GetExcelRoleTypeList");

	Params::RoleFunctionLibrary_GetExcelRoleTypeList Parms{};

	Parms.InForceType = InForceType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.RoleFunctionLibrary.GetRoleHeadPortraitSourceRelativePath
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   RowId                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString URoleFunctionLibrary::GetRoleHeadPortraitSourceRelativePath(int32 RowId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RoleFunctionLibrary", "GetRoleHeadPortraitSourceRelativePath");

	Params::RoleFunctionLibrary_GetRoleHeadPortraitSourceRelativePath Parms{};

	Parms.RowId = RowId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.RoleFunctionLibrary.GetRoleTypeIdByTypeName
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           RoleTypeName                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 URoleFunctionLibrary::GetRoleTypeIdByTypeName(const class FString& RoleTypeName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RoleFunctionLibrary", "GetRoleTypeIdByTypeName");

	Params::RoleFunctionLibrary_GetRoleTypeIdByTypeName Parms{};

	Parms.RoleTypeName = std::move(RoleTypeName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.RoleFunctionLibrary.GetRoleUeSkinIds
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TArray<int32>                           SkinIds                                                (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> URoleFunctionLibrary::GetRoleUeSkinIds(const TArray<int32>& SkinIds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RoleFunctionLibrary", "GetRoleUeSkinIds");

	Params::RoleFunctionLibrary_GetRoleUeSkinIds Parms{};

	Parms.SkinIds = std::move(SkinIds);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.RoleFunctionLibrary.SortCareerConfigList
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class UExcelLoaderTgfConfigExcelRoleType*>CareerConfigList                                       (Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<class UExcelLoaderTgfConfigExcelRoleType*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelRoleType*> URoleFunctionLibrary::SortCareerConfigList(TArray<class UExcelLoaderTgfConfigExcelRoleType*>& CareerConfigList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RoleFunctionLibrary", "SortCareerConfigList");

	Params::RoleFunctionLibrary_SortCareerConfigList Parms{};

	Parms.CareerConfigList = std::move(CareerConfigList);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	CareerConfigList = std::move(Parms.CareerConfigList);

	return Parms.ReturnValue;
}


// Function TGFGame.RoomService.OnGameLogout
// (Final, Native, Private)
// Parameters:
// class UTGFEventArgs*                    Args                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URoomService::OnGameLogout(class UTGFEventArgs* Args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RoomService", "OnGameLogout");

	Params::RoomService_OnGameLogout Parms{};

	Parms.Args = Args;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.RoomService.OnNetworkManagerEnterState
// (Final, Native, Private)
// Parameters:
// class UTGFEventArgs*                    Args                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URoomService::OnNetworkManagerEnterState(class UTGFEventArgs* Args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RoomService", "OnNetworkManagerEnterState");

	Params::RoomService_OnNetworkManagerEnterState Parms{};

	Parms.Args = Args;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.RoomService.OnNetworkManagerExitState
// (Final, Native, Private)
// Parameters:
// class UTGFEventArgs*                    Args                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URoomService::OnNetworkManagerExitState(class UTGFEventArgs* Args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RoomService", "OnNetworkManagerExitState");

	Params::RoomService_OnNetworkManagerExitState Parms{};

	Parms.Args = Args;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.RoomService.SetShouldPromptBattleVersionNotCompatible
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ShouldPrompt                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URoomService::SetShouldPromptBattleVersionNotCompatible(bool ShouldPrompt)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RoomService", "SetShouldPromptBattleVersionNotCompatible");

	Params::RoomService_SetShouldPromptBattleVersionNotCompatible Parms{};

	Parms.ShouldPrompt = ShouldPrompt;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.RoomService.GetShouldPromptBattleVersionNotCompatible
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URoomService::GetShouldPromptBattleVersionNotCompatible() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RoomService", "GetShouldPromptBattleVersionNotCompatible");

	Params::RoomService_GetShouldPromptBattleVersionNotCompatible Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.SDKAccountService.UseLIPass
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USDKAccountService::UseLIPass()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SDKAccountService", "UseLIPass");

	Params::SDKAccountService_UseLIPass Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.SDKAccountService.LIOnBackPressed
// (Final, Native, Public, BlueprintCallable)

void USDKAccountService::LIOnBackPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SDKAccountService", "LIOnBackPressed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.SDKAccountService.LIOpenAccountCenter
// (Final, Native, Public, BlueprintCallable)

void USDKAccountService::LIOpenAccountCenter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SDKAccountService", "LIOpenAccountCenter");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.SDKAccountService.LIResetUIRoot
// (Final, Native, Public, BlueprintCallable)

void USDKAccountService::LIResetUIRoot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SDKAccountService", "LIResetUIRoot");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.SDKAccountService.LISetUIRoot
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UCanvasPanel*                     UiRoot                                                 (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USDKAccountService::LISetUIRoot(class UCanvasPanel* UiRoot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SDKAccountService", "LISetUIRoot");

	Params::SDKAccountService_LISetUIRoot Parms{};

	Parms.UiRoot = UiRoot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.SDKAccountService.GetAdultAge
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 USDKAccountService::GetAdultAge() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SDKAccountService", "GetAdultAge");

	Params::SDKAccountService_GetAdultAge Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.SDKAccountService.GetAdultCheckStatus
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 USDKAccountService::GetAdultCheckStatus() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SDKAccountService", "GetAdultCheckStatus");

	Params::SDKAccountService_GetAdultCheckStatus Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.SDKAccountService.GetChannelId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 USDKAccountService::GetChannelId() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SDKAccountService", "GetChannelId");

	Params::SDKAccountService_GetChannelId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.SDKAccountService.GetOpenId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString USDKAccountService::GetOpenId() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SDKAccountService", "GetOpenId");

	Params::SDKAccountService_GetOpenId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.SDKAccountService.GetRegion
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString USDKAccountService::GetRegion() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SDKAccountService", "GetRegion");

	Params::SDKAccountService_GetRegion Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.SDKAccountService.GetSteamId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString USDKAccountService::GetSteamId() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SDKAccountService", "GetSteamId");

	Params::SDKAccountService_GetSteamId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.SDKAccountService.GetSteamUserName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString USDKAccountService::GetSteamUserName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SDKAccountService", "GetSteamUserName");

	Params::SDKAccountService_GetSteamUserName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.SDKService.GetConfig
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString USDKService::GetConfig(const class FString& Key) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SDKService", "GetConfig");

	Params::SDKService_GetConfig Parms{};

	Parms.Key = std::move(Key);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.SDKService.GetINTLGameId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString USDKService::GetINTLGameId() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SDKService", "GetINTLGameId");

	Params::SDKService_GetINTLGameId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.SDKWebviewService.Lua_OnWebViewResult
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// int32                                   MsgType                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           MsgJsonData                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USDKWebviewService::Lua_OnWebViewResult(int32 MsgType, const class FString& MsgJsonData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SDKWebviewService", "Lua_OnWebViewResult");

	Params::SDKWebviewService_Lua_OnWebViewResult Parms{};

	Parms.MsgType = MsgType;
	Parms.MsgJsonData = std::move(MsgJsonData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.SDKWebviewService.OpenUrl
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           URL                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ScreenOrientationValue                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    FullScreenValue                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    UseURLEncodeValue                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsBrowserValue                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ExtraJsonValue                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    UseEncryptUrl                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USDKWebviewService::OpenUrl(const class FString& URL, int32 ScreenOrientationValue, bool FullScreenValue, bool UseURLEncodeValue, bool IsBrowserValue, const class FString& ExtraJsonValue, bool UseEncryptUrl)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SDKWebviewService", "OpenUrl");

	Params::SDKWebviewService_OpenUrl Parms{};

	Parms.URL = std::move(URL);
	Parms.ScreenOrientationValue = ScreenOrientationValue;
	Parms.FullScreenValue = FullScreenValue;
	Parms.UseURLEncodeValue = UseURLEncodeValue;
	Parms.IsBrowserValue = IsBrowserValue;
	Parms.ExtraJsonValue = std::move(ExtraJsonValue);
	Parms.UseEncryptUrl = UseEncryptUrl;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.SDKWebviewService.OpenUrlByExternalUI
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           URL                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Modal                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    UseURLEncodeValue                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    UseEncryptUrl                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USDKWebviewService::OpenUrlByExternalUI(const class FString& URL, bool Modal, bool UseURLEncodeValue, bool UseEncryptUrl)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SDKWebviewService", "OpenUrlByExternalUI");

	Params::SDKWebviewService_OpenUrlByExternalUI Parms{};

	Parms.URL = std::move(URL);
	Parms.Modal = Modal;
	Parms.UseURLEncodeValue = UseURLEncodeValue;
	Parms.UseEncryptUrl = UseEncryptUrl;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.SelectMapService.GetMapNameIdByMapIdAndDiffSelect
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// int32                                   MapId                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   DifficultySelect                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString USelectMapService::GetMapNameIdByMapIdAndDiffSelect(int32 MapId, int32 DifficultySelect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SelectMapService", "GetMapNameIdByMapIdAndDiffSelect");

	Params::SelectMapService_GetMapNameIdByMapIdAndDiffSelect Parms{};

	Parms.MapId = MapId;
	Parms.DifficultySelect = DifficultySelect;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.SelectServerService.SetCurrentServerItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UServerItem*                      ServerItem                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USelectServerService::SetCurrentServerItem(class UServerItem* ServerItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SelectServerService", "SetCurrentServerItem");

	Params::SelectServerService_SetCurrentServerItem Parms{};

	Parms.ServerItem = ServerItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.SelectServerService.GetCategories
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const TArray<class UCategory*>          ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const TArray<class UCategory*> USelectServerService::GetCategories() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SelectServerService", "GetCategories");

	Params::SelectServerService_GetCategories Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.SelectServerService.GetCurrentServerItem
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UServerItem*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UServerItem* USelectServerService::GetCurrentServerItem() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SelectServerService", "GetCurrentServerItem");

	Params::SelectServerService_GetCurrentServerItem Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.SelectServerService.GetDefaultServerItem
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UServerItem*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UServerItem* USelectServerService::GetDefaultServerItem() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SelectServerService", "GetDefaultServerItem");

	Params::SelectServerService_GetDefaultServerItem Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.SelectServerService.GetServerCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 USelectServerService::GetServerCount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SelectServerService", "GetServerCount");

	Params::SelectServerService_GetServerCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.SelectServerService.GetServerItem
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ServerId                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UServerItem*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UServerItem* USelectServerService::GetServerItem(int32 ServerId) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SelectServerService", "GetServerItem");

	Params::SelectServerService_GetServerItem Parms{};

	Parms.ServerId = ServerId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TaskFunctionLibrary.GetAdventureDetailConfigRow
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   AdventrureID                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTGFGameAdventureDetailConfigRow AdventureConfigRow                                     (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTaskFunctionLibrary::GetAdventureDetailConfigRow(int32 AdventrureID, struct FTGFGameAdventureDetailConfigRow* AdventureConfigRow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TaskFunctionLibrary", "GetAdventureDetailConfigRow");

	Params::TaskFunctionLibrary_GetAdventureDetailConfigRow Parms{};

	Parms.AdventrureID = AdventrureID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (AdventureConfigRow != nullptr)
		*AdventureConfigRow = std::move(Parms.AdventureConfigRow);

	return Parms.ReturnValue;
}


// Function TGFGame.TaskFunctionLibrary.GetSteamAchievementConfigRow
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// ETGFInGameRookieTaskType                TaskType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTGFSteamAchievementTaskParamConfigRowSteamAchievementConfigRow                              (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTaskFunctionLibrary::GetSteamAchievementConfigRow(ETGFInGameRookieTaskType TaskType, struct FTGFSteamAchievementTaskParamConfigRow* SteamAchievementConfigRow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TaskFunctionLibrary", "GetSteamAchievementConfigRow");

	Params::TaskFunctionLibrary_GetSteamAchievementConfigRow Parms{};

	Parms.TaskType = TaskType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (SteamAchievementConfigRow != nullptr)
		*SteamAchievementConfigRow = std::move(Parms.SteamAchievementConfigRow);

	return Parms.ReturnValue;
}


// Function TGFGame.TaskFunctionLibrary.ReportClientTaskProgressValue
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// ETGFInGameRookieTaskType                RookieTaskType                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTaskFunctionLibrary::ReportClientTaskProgressValue(ETGFInGameRookieTaskType RookieTaskType, int64 Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TaskFunctionLibrary", "ReportClientTaskProgressValue");

	Params::TaskFunctionLibrary_ReportClientTaskProgressValue Parms{};

	Parms.RookieTaskType = RookieTaskType;
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TGFTaskItemData.AddProgressValue
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ProgressType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTGFTaskItemData::AddProgressValue(int32 ProgressType, int64 Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TGFTaskItemData", "AddProgressValue");

	Params::TGFTaskItemData_AddProgressValue Parms{};

	Parms.ProgressType = ProgressType;
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TGFTaskItemData.ClearProgressValue
// (Final, Native, Public, BlueprintCallable)

void UTGFTaskItemData::ClearProgressValue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TGFTaskItemData", "ClearProgressValue");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TeamService.ApproveInvite
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTeamInvite*                      TeamInvite                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTeamService::ApproveInvite(const class UTeamInvite* TeamInvite)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TeamService", "ApproveInvite");

	Params::TeamService_ApproveInvite Parms{};

	Parms.TeamInvite = TeamInvite;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TeamService.CancelSearchTeam
// (Final, Native, Public, BlueprintCallable)

void UTeamService::CancelSearchTeam()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TeamService", "CancelSearchTeam");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TeamService.CheckIsTeamMember
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FUserKey                         UserKey                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTeamService::CheckIsTeamMember(const struct FUserKey& UserKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TeamService", "CheckIsTeamMember");

	Params::TeamService_CheckIsTeamMember Parms{};

	Parms.UserKey = std::move(UserKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TeamService.ClearExpiredInvite
// (Final, Native, Public, BlueprintCallable)

void UTeamService::ClearExpiredInvite()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TeamService", "ClearExpiredInvite");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TeamService.ClearInvite
// (Final, Native, Public, BlueprintCallable)

void UTeamService::ClearInvite()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TeamService", "ClearInvite");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TeamService.CloseTeamInvitePage
// (Final, Native, Public, BlueprintCallable)

void UTeamService::CloseTeamInvitePage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TeamService", "CloseTeamInvitePage");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TeamService.ExitTeam
// (Final, Native, Public, BlueprintCallable)

void UTeamService::ExitTeam()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TeamService", "ExitTeam");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TeamService.GetCaptainUserKey
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FUserKey                         ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FUserKey UTeamService::GetCaptainUserKey()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TeamService", "GetCaptainUserKey");

	Params::TeamService_GetCaptainUserKey Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TeamService.GetFinderStatus
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTeamService::GetFinderStatus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TeamService", "GetFinderStatus");

	Params::TeamService_GetFinderStatus Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TeamService.GetIsAllReady
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTeamService::GetIsAllReady()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TeamService", "GetIsAllReady");

	Params::TeamService_GetIsAllReady Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TeamService.GetIsCaptain
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTeamService::GetIsCaptain()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TeamService", "GetIsCaptain");

	Params::TeamService_GetIsCaptain Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TeamService.GetIsInTeam
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTeamService::GetIsInTeam()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TeamService", "GetIsInTeam");

	Params::TeamService_GetIsInTeam Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TeamService.GetIsNoOneInBattle
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTeamService::GetIsNoOneInBattle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TeamService", "GetIsNoOneInBattle");

	Params::TeamService_GetIsNoOneInBattle Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TeamService.GetIsNoOneOffline
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTeamService::GetIsNoOneOffline()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TeamService", "GetIsNoOneOffline");

	Params::TeamService_GetIsNoOneOffline Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TeamService.GetIsReady
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTeamService::GetIsReady()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TeamService", "GetIsReady");

	Params::TeamService_GetIsReady Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TeamService.GetMemberCount
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTeamService::GetMemberCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TeamService", "GetMemberCount");

	Params::TeamService_GetMemberCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TeamService.GetSearchTeamStatus
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTeamService::GetSearchTeamStatus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TeamService", "GetSearchTeamStatus");

	Params::TeamService_GetSearchTeamStatus Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TeamService.GetTeamId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UTeamService::GetTeamId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TeamService", "GetTeamId");

	Params::TeamService_GetTeamId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TeamService.GetTeamInviteList
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UTeamInvite*>              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UTeamInvite*> UTeamService::GetTeamInviteList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TeamService", "GetTeamInviteList");

	Params::TeamService_GetTeamInviteList Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TeamService.GetTeamMemberList
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bExceptSelf                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UTeamMember*>              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UTeamMember*> UTeamService::GetTeamMemberList(const bool bExceptSelf)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TeamService", "GetTeamMemberList");

	Params::TeamService_GetTeamMemberList Parms{};

	Parms.bExceptSelf = bExceptSelf;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TeamService.GetTeamRole
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ETeamRole                               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETeamRole UTeamService::GetTeamRole()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TeamService", "GetTeamRole");

	Params::TeamService_GetTeamRole Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TeamService.GiveCaptain
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FUserKey                         UserKey                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTeamService::GiveCaptain(const struct FUserKey& UserKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TeamService", "GiveCaptain");

	Params::TeamService_GiveCaptain Parms{};

	Parms.UserKey = std::move(UserKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TeamService.Invite
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FUserKey                         UserKey                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETGFProtoTgfEnTeamMethodType            TeamMethod                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTeamService::Invite(const struct FUserKey& UserKey, ETGFProtoTgfEnTeamMethodType TeamMethod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TeamService", "Invite");

	Params::TeamService_Invite Parms{};

	Parms.UserKey = std::move(UserKey);
	Parms.TeamMethod = TeamMethod;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TeamService.OnTeamSearchTimer
// (Final, Native, Protected)

void UTeamService::OnTeamSearchTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TeamService", "OnTeamSearchTimer");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TeamService.OpenTeamInvitePage
// (Final, Native, Public, BlueprintCallable)

void UTeamService::OpenTeamInvitePage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TeamService", "OpenTeamInvitePage");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TeamService.Ready
// (Final, Native, Public, BlueprintCallable)

void UTeamService::Ready()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TeamService", "Ready");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TeamService.RejectInvite
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTeamInvite*                      TeamInvite                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTeamService::RejectInvite(const class UTeamInvite* TeamInvite)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TeamService", "RejectInvite");

	Params::TeamService_RejectInvite Parms{};

	Parms.TeamInvite = TeamInvite;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TeamService.RemoveMember
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FUserKey                         UserKey                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTeamService::RemoveMember(const struct FUserKey& UserKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TeamService", "RemoveMember");

	Params::TeamService_RemoveMember Parms{};

	Parms.UserKey = std::move(UserKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TeamService.SearchTeam
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   MinRoleLevel                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<int32>                           RoleTypeList                                           (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<int32>                           ModeTypeList                                           (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<int32>                           ServiceTypeList                                        (Parm, ZeroConstructor, NativeAccessSpecifierPublic)

void UTeamService::SearchTeam(int32 MinRoleLevel, const TArray<int32>& RoleTypeList, const TArray<int32>& ModeTypeList, const TArray<int32>& ServiceTypeList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TeamService", "SearchTeam");

	Params::TeamService_SearchTeam Parms{};

	Parms.MinRoleLevel = MinRoleLevel;
	Parms.RoleTypeList = std::move(RoleTypeList);
	Parms.ModeTypeList = std::move(ModeTypeList);
	Parms.ServiceTypeList = std::move(ServiceTypeList);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TeamService.SetFinderStatus
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bFinderStatus                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTeamService::SetFinderStatus(bool bFinderStatus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TeamService", "SetFinderStatus");

	Params::TeamService_SetFinderStatus Parms{};

	Parms.bFinderStatus = bFinderStatus;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TeamService.ToggleTeamSearchTimer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bIsOpen                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTeamService::ToggleTeamSearchTimer(bool bIsOpen)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TeamService", "ToggleTeamSearchTimer");

	Params::TeamService_ToggleTeamSearchTimer Parms{};

	Parms.bIsOpen = bIsOpen;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TeamService.Unready
// (Final, Native, Public, BlueprintCallable)

void UTeamService::Unready()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TeamService", "Unready");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TeamInvite.GetIsValid
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTeamInvite::GetIsValid() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TeamInvite", "GetIsValid");

	Params::TeamInvite_GetIsValid Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TeamInfo.GetIsMember
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FUserKey                         InUserKey                                              (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTeamInfo::GetIsMember(const struct FUserKey& InUserKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TeamInfo", "GetIsMember");

	Params::TeamInfo_GetIsMember Parms{};

	Parms.InUserKey = std::move(InUserKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TeamInfo.GetIsReady
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FUserKey                         InUserKey                                              (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTeamInfo::GetIsReady(const struct FUserKey& InUserKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TeamInfo", "GetIsReady");

	Params::TeamInfo_GetIsReady Parms{};

	Parms.InUserKey = std::move(InUserKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TeamInfo.GetMemberCount
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTeamInfo::GetMemberCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TeamInfo", "GetMemberCount");

	Params::TeamInfo_GetMemberCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TeamInfo.GetIsValid
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTeamInfo::GetIsValid() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TeamInfo", "GetIsValid");

	Params::TeamInfo_GetIsValid Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TgfAudioStateVolume.OnOverlapBegin
// (Final, Native, Public)
// Parameters:
// class AActor*                           OverlappedActor                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATgfAudioStateVolume::OnOverlapBegin(class AActor* OverlappedActor, class AActor* OtherActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TgfAudioStateVolume", "OnOverlapBegin");

	Params::TgfAudioStateVolume_OnOverlapBegin Parms{};

	Parms.OverlappedActor = OverlappedActor;
	Parms.OtherActor = OtherActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TgfAudioStateVolume.OnOverlapEnd
// (Final, Native, Public)
// Parameters:
// class AActor*                           OverlappedActor                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATgfAudioStateVolume::OnOverlapEnd(class AActor* OverlappedActor, class AActor* OtherActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TgfAudioStateVolume", "OnOverlapEnd");

	Params::TgfAudioStateVolume_OnOverlapEnd Parms{};

	Parms.OverlappedActor = OverlappedActor;
	Parms.OtherActor = OtherActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TgfAudioSystem.GetDefaultListener
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UAkComponent*                     ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAkComponent* UTgfAudioSystem::GetDefaultListener()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TgfAudioSystem", "GetDefaultListener");

	Params::TgfAudioSystem_GetDefaultListener Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TgfAudioSystem.MuteSFX
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Mute                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTgfAudioSystem::MuteSFX(bool Mute)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TgfAudioSystem", "MuteSFX");

	Params::TgfAudioSystem_MuteSFX Parms{};

	Parms.Mute = Mute;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TgfAudioSystem.OnBattleEnter
// (Final, Native, Public, BlueprintCallable)

void UTgfAudioSystem::OnBattleEnter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TgfAudioSystem", "OnBattleEnter");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TgfAudioSystem.OnBattleLeave
// (Final, Native, Public, BlueprintCallable)

void UTgfAudioSystem::OnBattleLeave()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TgfAudioSystem", "OnBattleLeave");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TgfAudioSystem.PlayHallMusic
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UAkAudioEvent*                    PlayEvent                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAkAudioEvent*                    StopEvent                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTgfAudioSystem::PlayHallMusic(class UAkAudioEvent* PlayEvent, class UAkAudioEvent* StopEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TgfAudioSystem", "PlayHallMusic");

	Params::TgfAudioSystem_PlayHallMusic Parms{};

	Parms.PlayEvent = PlayEvent;
	Parms.StopEvent = StopEvent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TgfAudioSystem.StopHallMusic
// (Final, Native, Public, BlueprintCallable)

void UTgfAudioSystem::StopHallMusic()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TgfAudioSystem", "StopHallMusic");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TGFForgeRepairPanel.HandleGearRepairFinish
// (Final, Native, Protected)
// Parameters:
// class UTGFEventArgs*                    Args                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTGFForgeRepairPanel::HandleGearRepairFinish(class UTGFEventArgs* Args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TGFForgeRepairPanel", "HandleGearRepairFinish");

	Params::TGFForgeRepairPanel_HandleGearRepairFinish Parms{};

	Parms.Args = Args;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TGFForgeRepairPanel.HandleGearRepairSuccess
// (Event, Protected, BlueprintEvent)

void UTGFForgeRepairPanel::HandleGearRepairSuccess()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TGFForgeRepairPanel", "HandleGearRepairSuccess");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TGFGame.TGFForgeRepairPanel.HandleOnBtnRepairBackpackClicked
// (Final, Native, Protected)

void UTGFForgeRepairPanel::HandleOnBtnRepairBackpackClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TGFForgeRepairPanel", "HandleOnBtnRepairBackpackClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TGFForgeRepairPanel.HandleOnBtnRepairClicked
// (Final, Native, Protected)

void UTGFForgeRepairPanel::HandleOnBtnRepairClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TGFForgeRepairPanel", "HandleOnBtnRepairClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TGFForgeRepairPanel.HandleOnBtnRepairWearingClicked
// (Final, Native, Protected)

void UTGFForgeRepairPanel::HandleOnBtnRepairWearingClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TGFForgeRepairPanel", "HandleOnBtnRepairWearingClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TGFForgeRepairPanel.HandleSwitchForgeTab
// (Final, Native, Protected)
// Parameters:
// class UTGFEventArgs*                    Args                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTGFForgeRepairPanel::HandleSwitchForgeTab(class UTGFEventArgs* Args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TGFForgeRepairPanel", "HandleSwitchForgeTab");

	Params::TGFForgeRepairPanel_HandleSwitchForgeTab Parms{};

	Parms.Args = Args;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TGFForgeRepairPanel.Refresh
// (Final, Native, Public, BlueprintCallable)

void UTGFForgeRepairPanel::Refresh()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TGFForgeRepairPanel", "Refresh");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TGFForgeRepairPanel.RefreshSelectedEquipment
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTgfInventoryItemWrapper*         ItemWrapper                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTGFForgeRepairPanel::RefreshSelectedEquipment(class UTgfInventoryItemWrapper* ItemWrapper)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TGFForgeRepairPanel", "RefreshSelectedEquipment");

	Params::TGFForgeRepairPanel_RefreshSelectedEquipment Parms{};

	Parms.ItemWrapper = ItemWrapper;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TgfInventoryRoleWrapper_Lobby.CreateInventoryRoleWrapperLobby
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UTgfInventoryRoleWrapper_Lobby*   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTgfInventoryRoleWrapper_Lobby* UTgfInventoryRoleWrapper_Lobby::CreateInventoryRoleWrapperLobby()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TgfInventoryRoleWrapper_Lobby", "CreateInventoryRoleWrapperLobby");

	Params::TgfInventoryRoleWrapper_Lobby_CreateInventoryRoleWrapperLobby Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TgfInventoryRoleWrapper_Lobby.GetRoleAttributeInfo
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   Guid                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class URoleAttributeInfo*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class URoleAttributeInfo* UTgfInventoryRoleWrapper_Lobby::GetRoleAttributeInfo(int64 Guid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TgfInventoryRoleWrapper_Lobby", "GetRoleAttributeInfo");

	Params::TgfInventoryRoleWrapper_Lobby_GetRoleAttributeInfo Parms{};

	Parms.Guid = Guid;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TgfInventoryRoleWrapper_Lobby.Lua_GetRoleAttributeValue
// (Event, Public, BlueprintEvent)
// Parameters:
// EnRoleDisplayAttribueID                 AttributeID                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UTgfInventoryRoleWrapper_Lobby::Lua_GetRoleAttributeValue(EnRoleDisplayAttribueID AttributeID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TgfInventoryRoleWrapper_Lobby", "Lua_GetRoleAttributeValue");

	Params::TgfInventoryRoleWrapper_Lobby_Lua_GetRoleAttributeValue Parms{};

	Parms.AttributeID = AttributeID;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function TGFGame.TgfInventoryRoleWrapper_Lobby.ResetRoleAttributeInfo
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTgfInventoryRoleWrapper_Lobby::ResetRoleAttributeInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TgfInventoryRoleWrapper_Lobby", "ResetRoleAttributeInfo");

	Params::TgfInventoryRoleWrapper_Lobby_ResetRoleAttributeInfo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TgfInventoryRoleWrapper_Lobby.SetFirstLevelAttrDataAsset
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTgfFirstLevelAttrDataAsset*      DataAsset                                              (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTgfInventoryRoleWrapper_Lobby::SetFirstLevelAttrDataAsset(const class UTgfFirstLevelAttrDataAsset* DataAsset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TgfInventoryRoleWrapper_Lobby", "SetFirstLevelAttrDataAsset");

	Params::TgfInventoryRoleWrapper_Lobby_SetFirstLevelAttrDataAsset Parms{};

	Parms.DataAsset = DataAsset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TgfInventoryLibrary_Lobby.CreateLobbyInventoryContext
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// ETgfInventoryType                       Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UOverlay*                         InPopupOverlayPanel                                    (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TScriptInterface<class ITooltipWidget>  InItemTooltipWidget                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTgfInventoryWrapper*             ParentInventory                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTgfInventoryWrapper*             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTgfInventoryWrapper* UTgfInventoryLibrary_Lobby::CreateLobbyInventoryContext(ETgfInventoryType Type, class UOverlay* InPopupOverlayPanel, TScriptInterface<class ITooltipWidget> InItemTooltipWidget, class UTgfInventoryWrapper* ParentInventory)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TgfInventoryLibrary_Lobby", "CreateLobbyInventoryContext");

	Params::TgfInventoryLibrary_Lobby_CreateLobbyInventoryContext Parms{};

	Parms.Type = Type;
	Parms.InPopupOverlayPanel = InPopupOverlayPanel;
	Parms.InItemTooltipWidget = InItemTooltipWidget;
	Parms.ParentInventory = ParentInventory;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TgfInventoryLibrary_Lobby.GetMarketBuybackTabId
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTgfInventoryLibrary_Lobby::GetMarketBuybackTabId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TgfInventoryLibrary_Lobby", "GetMarketBuybackTabId");

	Params::TgfInventoryLibrary_Lobby_GetMarketBuybackTabId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TgfInventoryLibrary_Lobby.InventoryTypeToServerEnum
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ETgfInventoryType                       InventoryType                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EnItemStorageType                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EnItemStorageType UTgfInventoryLibrary_Lobby::InventoryTypeToServerEnum(ETgfInventoryType InventoryType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TgfInventoryLibrary_Lobby", "InventoryTypeToServerEnum");

	Params::TgfInventoryLibrary_Lobby_InventoryTypeToServerEnum Parms{};

	Parms.InventoryType = InventoryType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TgfInventoryLibrary_Mithril.CreateMithrilInventoryContext
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// ETgfInventoryType                       Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UOverlay*                         InPopupOverlayPanel                                    (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TScriptInterface<class ITooltipWidget>  InItemTooltipWidget                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTgfInventoryWrapper*             ParentInventory                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTgfInventoryWrapper*             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTgfInventoryWrapper* UTgfInventoryLibrary_Mithril::CreateMithrilInventoryContext(ETgfInventoryType Type, class UOverlay* InPopupOverlayPanel, TScriptInterface<class ITooltipWidget> InItemTooltipWidget, class UTgfInventoryWrapper* ParentInventory)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TgfInventoryLibrary_Mithril", "CreateMithrilInventoryContext");

	Params::TgfInventoryLibrary_Mithril_CreateMithrilInventoryContext Parms{};

	Parms.Type = Type;
	Parms.InPopupOverlayPanel = InPopupOverlayPanel;
	Parms.InItemTooltipWidget = InItemTooltipWidget;
	Parms.ParentInventory = ParentInventory;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TgfInventoryLibrary_MithrilResult.CreateMithrilInventoryContext
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// ETgfInventoryType                       Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UOverlay*                         InPopupOverlayPanel                                    (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TScriptInterface<class ITooltipWidget>  InItemTooltipWidget                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTgfInventoryWrapper*             ParentInventory                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTgfInventoryWrapper*             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTgfInventoryWrapper* UTgfInventoryLibrary_MithrilResult::CreateMithrilInventoryContext(ETgfInventoryType Type, class UOverlay* InPopupOverlayPanel, TScriptInterface<class ITooltipWidget> InItemTooltipWidget, class UTgfInventoryWrapper* ParentInventory)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TgfInventoryLibrary_MithrilResult", "CreateMithrilInventoryContext");

	Params::TgfInventoryLibrary_MithrilResult_CreateMithrilInventoryContext Parms{};

	Parms.Type = Type;
	Parms.InPopupOverlayPanel = InPopupOverlayPanel;
	Parms.InItemTooltipWidget = InItemTooltipWidget;
	Parms.ParentInventory = ParentInventory;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TgfInventoryLibrary_Virtual.CreateActivityInventoryContext
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UOverlay*                         InPopupOverlayPanel                                    (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TScriptInterface<class ITooltipWidget>  InItemTooltipWidget                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTgfInventoryWrapper*             ParentInventory                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FIntPoint                        Size                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FIntPoint                        MaxSize                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTgfInventoryWrapper*             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTgfInventoryWrapper* UTgfInventoryLibrary_Virtual::CreateActivityInventoryContext(class UOverlay* InPopupOverlayPanel, TScriptInterface<class ITooltipWidget> InItemTooltipWidget, class UTgfInventoryWrapper* ParentInventory, const struct FIntPoint& Size, const struct FIntPoint& MaxSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TgfInventoryLibrary_Virtual", "CreateActivityInventoryContext");

	Params::TgfInventoryLibrary_Virtual_CreateActivityInventoryContext Parms{};

	Parms.InPopupOverlayPanel = InPopupOverlayPanel;
	Parms.InItemTooltipWidget = InItemTooltipWidget;
	Parms.ParentInventory = ParentInventory;
	Parms.Size = std::move(Size);
	Parms.MaxSize = std::move(MaxSize);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TGFItemBar.SetUp
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   InTypeId                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InCount                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bEmphasize                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTGFItemBar::SetUp(int32 InTypeId, int32 InCount, bool bEmphasize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TGFItemBar", "SetUp");

	Params::TGFItemBar_SetUp Parms{};

	Parms.InTypeId = InTypeId;
	Parms.InCount = InCount;
	Parms.bEmphasize = bEmphasize;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TGFGame.TGFNetworkFunctionLibrary.GetProtocolErrorText
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ErrorCode                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   SubErrorCode                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UTGFNetworkFunctionLibrary::GetProtocolErrorText(int32 ErrorCode, int64 SubErrorCode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TGFNetworkFunctionLibrary", "GetProtocolErrorText");

	Params::TGFNetworkFunctionLibrary_GetProtocolErrorText Parms{};

	Parms.ErrorCode = ErrorCode;
	Parms.SubErrorCode = SubErrorCode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TGFNetworkFunctionLibrary.PromptProtocolError
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ErrorCode                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   SubErrorCode                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTGFNetworkFunctionLibrary::PromptProtocolError(int32 ErrorCode, int64 SubErrorCode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TGFNetworkFunctionLibrary", "PromptProtocolError");

	Params::TGFNetworkFunctionLibrary_PromptProtocolError Parms{};

	Parms.ErrorCode = ErrorCode;
	Parms.SubErrorCode = SubErrorCode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.RegionData.GetRegionData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FTGFRegionData                   ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FTGFRegionData URegionData::GetRegionData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RegionData", "GetRegionData");

	Params::RegionData_GetRegionData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.RegionData.GetRegionLatency
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URegionData::GetRegionLatency()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RegionData", "GetRegionLatency");

	Params::RegionData_GetRegionLatency Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.RegionData.SendUdpMsg
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URegionData::SendUdpMsg()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RegionData", "SendUdpMsg");

	Params::RegionData_SendUdpMsg Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TGFSettingsListEntrySetting_Button.HandleSettingButtonClicked
// (Final, Native, Protected)

void UTGFSettingsListEntrySetting_Button::HandleSettingButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TGFSettingsListEntrySetting_Button", "HandleSettingButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TGFSettingsListEntrySetting_ComboBox.HandleSelectOptionChanged
// (Final, Native, Protected)
// Parameters:
// class FString                           SelectedItem                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESelectInfo                             SelectionType                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTGFSettingsListEntrySetting_ComboBox::HandleSelectOptionChanged(const class FString& SelectedItem, ESelectInfo SelectionType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TGFSettingsListEntrySetting_ComboBox", "HandleSelectOptionChanged");

	Params::TGFSettingsListEntrySetting_ComboBox_HandleSelectOptionChanged Parms{};

	Parms.SelectedItem = std::move(SelectedItem);
	Parms.SelectionType = SelectionType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TGFSettingsListEntrySetting_FileDialog.HandleBtnFileDialogClicked
// (Final, Native, Protected)

void UTGFSettingsListEntrySetting_FileDialog::HandleBtnFileDialogClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TGFSettingsListEntrySetting_FileDialog", "HandleBtnFileDialogClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TGFSettingsListEntrySetting_KeyboardInput.HandleBtnKeyboardClicked
// (Final, Native, Protected)

void UTGFSettingsListEntrySetting_KeyboardInput::HandleBtnKeyboardClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TGFSettingsListEntrySetting_KeyboardInput", "HandleBtnKeyboardClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TGFSettingsListEntrySetting_KeyboardInput.HandleBtnKeyboardSelected
// (Final, Native, Protected)
// Parameters:
// struct FKey                             InKey                                                  (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTGFSettingsListEntrySetting_KeyboardInput::HandleBtnKeyboardSelected(const struct FKey& InKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TGFSettingsListEntrySetting_KeyboardInput", "HandleBtnKeyboardSelected");

	Params::TGFSettingsListEntrySetting_KeyboardInput_HandleBtnKeyboardSelected Parms{};

	Parms.InKey = std::move(InKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TGFSettingsListEntrySetting_KeyboardInput.HandleConflictKeyCanceled
// (Final, Native, Protected)

void UTGFSettingsListEntrySetting_KeyboardInput::HandleConflictKeyCanceled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TGFSettingsListEntrySetting_KeyboardInput", "HandleConflictKeyCanceled");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TGFSettingsListEntrySetting_KeyboardInput.HandleConflictKeyConfirmed
// (Final, Native, Protected)

void UTGFSettingsListEntrySetting_KeyboardInput::HandleConflictKeyConfirmed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TGFSettingsListEntrySetting_KeyboardInput", "HandleConflictKeyConfirmed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TGFSettingsListEntrySetting_KeyboardInput.HandleInvalidKeySelected
// (Final, Native, Protected)
// Parameters:
// struct FKey                             InKey                                                  (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTGFSettingsListEntrySetting_KeyboardInput::HandleInvalidKeySelected(const struct FKey& InKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TGFSettingsListEntrySetting_KeyboardInput", "HandleInvalidKeySelected");

	Params::TGFSettingsListEntrySetting_KeyboardInput_HandleInvalidKeySelected Parms{};

	Parms.InKey = std::move(InKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TGFSettingsListEntrySetting_KeyboardInput.HandleKeySelectionCanceled
// (Final, Native, Protected)

void UTGFSettingsListEntrySetting_KeyboardInput::HandleKeySelectionCanceled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TGFSettingsListEntrySetting_KeyboardInput", "HandleKeySelectionCanceled");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TGFSettingsListEntrySetting_KeyboardInput.UpdateKey
// (Event, Protected, BlueprintEvent)
// Parameters:
// struct FKey                             InKey                                                  (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTGFSettingsListEntrySetting_KeyboardInput::UpdateKey(const struct FKey& InKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TGFSettingsListEntrySetting_KeyboardInput", "UpdateKey");

	Params::TGFSettingsListEntrySetting_KeyboardInput_UpdateKey Parms{};

	Parms.InKey = std::move(InKey);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TGFGame.TGFSettingsListEntrySetting_Switch.HandleBtnCloseClicked
// (Final, Native, Protected)
// Parameters:
// bool                                    InIsChecked                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTGFSettingsListEntrySetting_Switch::HandleBtnCloseClicked(bool InIsChecked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TGFSettingsListEntrySetting_Switch", "HandleBtnCloseClicked");

	Params::TGFSettingsListEntrySetting_Switch_HandleBtnCloseClicked Parms{};

	Parms.InIsChecked = InIsChecked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TGFSettingsListEntrySetting_Switch.HandleBtnOpenClicked
// (Final, Native, Protected)
// Parameters:
// bool                                    InIsChecked                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTGFSettingsListEntrySetting_Switch::HandleBtnOpenClicked(bool InIsChecked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TGFSettingsListEntrySetting_Switch", "HandleBtnOpenClicked");

	Params::TGFSettingsListEntrySetting_Switch_HandleBtnOpenClicked Parms{};

	Parms.InIsChecked = InIsChecked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TGFSettingValueDiscrete_Resolution.GetAppropraiteDiscreteOptionIndex
// (Final, Native, Public)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTGFSettingValueDiscrete_Resolution::GetAppropraiteDiscreteOptionIndex()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TGFSettingValueDiscrete_Resolution", "GetAppropraiteDiscreteOptionIndex");

	Params::TGFSettingValueDiscrete_Resolution_GetAppropraiteDiscreteOptionIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TGFSettingValueDiscrete_Resolution.GetAppropriateDiscreteOptions
// (Final, Native, Public)
// Parameters:
// TArray<class FText>                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FText> UTGFSettingValueDiscrete_Resolution::GetAppropriateDiscreteOptions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TGFSettingValueDiscrete_Resolution", "GetAppropriateDiscreteOptions");

	Params::TGFSettingValueDiscrete_Resolution_GetAppropriateDiscreteOptions Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TGFSettingValueDiscrete_Resolution.Initialize
// (Final, Native, Public)

void UTGFSettingValueDiscrete_Resolution::Initialize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TGFSettingValueDiscrete_Resolution", "Initialize");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TGFSettingValueDiscrete_Resolution.SetAppropriateDiscreteOptionByIndex
// (Final, Native, Public)
// Parameters:
// int32                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTGFSettingValueDiscrete_Resolution::SetAppropriateDiscreteOptionByIndex(int32 Param_Index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TGFSettingValueDiscrete_Resolution", "SetAppropriateDiscreteOptionByIndex");

	Params::TGFSettingValueDiscrete_Resolution_SetAppropriateDiscreteOptionByIndex Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TgfSteamAchievement.HandleWearEquipmentTask
// (Final, Native, Public)
// Parameters:
// int64                                   RoleGuid                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTgfSteamAchievement::HandleWearEquipmentTask(int64 RoleGuid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TgfSteamAchievement", "HandleWearEquipmentTask");

	Params::TgfSteamAchievement_HandleWearEquipmentTask Parms{};

	Parms.RoleGuid = RoleGuid;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TgfSteamAchievement.HandleWithTalentsTask
// (Final, Native, Public)

void UTgfSteamAchievement::HandleWithTalentsTask()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TgfSteamAchievement", "HandleWithTalentsTask");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TgfSteamAchievement.OnBattleMatchEvent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTGFEventArgs*                    Arg                                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTgfSteamAchievement::OnBattleMatchEvent(class UTGFEventArgs* Arg)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TgfSteamAchievement", "OnBattleMatchEvent");

	Params::TgfSteamAchievement_OnBattleMatchEvent Parms{};

	Parms.Arg = Arg;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TGFTradeMarketProductData.GetItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   MarketId                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FTGFItem                   ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FTGFItem UTGFTradeMarketProductData::GetItem(int32 MarketId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TGFTradeMarketProductData", "GetItem");

	Params::TGFTradeMarketProductData_GetItem Parms{};

	Parms.MarketId = MarketId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TGFTradeMarketProductData.GetSourceTypes
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UTGFTradeMarketProductData::GetSourceTypes()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TGFTradeMarketProductData", "GetSourceTypes");

	Params::TGFTradeMarketProductData_GetSourceTypes Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TGFTradeMarketProductData.HaveGearSetAttribute
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   MarketId                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTGFTradeMarketProductData::HaveGearSetAttribute(int32 MarketId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TGFTradeMarketProductData", "HaveGearSetAttribute");

	Params::TGFTradeMarketProductData_HaveGearSetAttribute Parms{};

	Parms.MarketId = MarketId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TGFTradeMarketProductData.IsCorruptionItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   MarketId                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTGFTradeMarketProductData::IsCorruptionItem(int32 MarketId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TGFTradeMarketProductData", "IsCorruptionItem");

	Params::TGFTradeMarketProductData_IsCorruptionItem Parms{};

	Parms.MarketId = MarketId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TGFTradeMarketProductData.GetItemTypeId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   MarketId                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTGFTradeMarketProductData::GetItemTypeId(int32 MarketId) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TGFTradeMarketProductData", "GetItemTypeId");

	Params::TGFTradeMarketProductData_GetItemTypeId Parms{};

	Parms.MarketId = MarketId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TGFTradeMarketProductData.GetLowestPrice
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UTGFTradeMarketProductData::GetLowestPrice() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TGFTradeMarketProductData", "GetLowestPrice");

	Params::TGFTradeMarketProductData_GetLowestPrice Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TGFTradeMarketProductData.GetStartPrice
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UTGFTradeMarketProductData::GetStartPrice() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TGFTradeMarketProductData", "GetStartPrice");

	Params::TGFTradeMarketProductData_GetStartPrice Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TgfVoiceChatService.GA_CloseMic
// (Final, Native, Public, BlueprintCallable)

void UTgfVoiceChatService::GA_CloseMic()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TgfVoiceChatService", "GA_CloseMic");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TgfVoiceChatService.GA_OpenMic
// (Final, Native, Public, BlueprintCallable)

void UTgfVoiceChatService::GA_OpenMic()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TgfVoiceChatService", "GA_OpenMic");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TgfVoiceChatService.JoinVoiceRoom
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           RoomName                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTgfVoiceChatService::JoinVoiceRoom(const class FString& RoomName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TgfVoiceChatService", "JoinVoiceRoom");

	Params::TgfVoiceChatService_JoinVoiceRoom Parms{};

	Parms.RoomName = std::move(RoomName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TgfVoiceChatService.OnGmeConnectTimeout
// (Final, Native, Protected)
// Parameters:
// class UTGFEventArgs*                    Args                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTgfVoiceChatService::OnGmeConnectTimeout(class UTGFEventArgs* Args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TgfVoiceChatService", "OnGmeConnectTimeout");

	Params::TgfVoiceChatService_OnGmeConnectTimeout Parms{};

	Parms.Args = Args;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TgfVoiceChatService.OnSettingScreenDestruct
// (Final, Native, Protected)
// Parameters:
// class UTGFEventArgs*                    Args                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTgfVoiceChatService::OnSettingScreenDestruct(class UTGFEventArgs* Args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TgfVoiceChatService", "OnSettingScreenDestruct");

	Params::TgfVoiceChatService_OnSettingScreenDestruct Parms{};

	Parms.Args = Args;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TgfVoiceChatService.OnUnlockModuleDirty
// (Final, Native, Protected)
// Parameters:
// class UTGFEventArgs*                    Args                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTgfVoiceChatService::OnUnlockModuleDirty(class UTGFEventArgs* Args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TgfVoiceChatService", "OnUnlockModuleDirty");

	Params::TgfVoiceChatService_OnUnlockModuleDirty Parms{};

	Parms.Args = Args;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TgfVoiceChatService.OnUserKeyDownEvent
// (Final, Native, Protected, HasOutParams)
// Parameters:
// struct FKeyEvent                        InKeyEvent                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTgfVoiceChatService::OnUserKeyDownEvent(const struct FKeyEvent& InKeyEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TgfVoiceChatService", "OnUserKeyDownEvent");

	Params::TgfVoiceChatService_OnUserKeyDownEvent Parms{};

	Parms.InKeyEvent = std::move(InKeyEvent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TgfVoiceChatService.OnUserKeyUpEvent
// (Final, Native, Protected, HasOutParams)
// Parameters:
// struct FKeyEvent                        InKeyEvent                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTgfVoiceChatService::OnUserKeyUpEvent(const struct FKeyEvent& InKeyEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TgfVoiceChatService", "OnUserKeyUpEvent");

	Params::TgfVoiceChatService_OnUserKeyUpEvent Parms{};

	Parms.InKeyEvent = std::move(InKeyEvent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TgfVoiceChatService.QuitVoiceRoom
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           RoomMark                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTgfVoiceChatService::QuitVoiceRoom(const class FString& RoomMark)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TgfVoiceChatService", "QuitVoiceRoom");

	Params::TgfVoiceChatService_QuitVoiceRoom Parms{};

	Parms.RoomMark = std::move(RoomMark);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TgfVoiceChatService.UpdateVoiceMode
// (Final, Native, Public, BlueprintCallable)

void UTgfVoiceChatService::UpdateVoiceMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TgfVoiceChatService", "UpdateVoiceMode");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TgfVoiceChatService.CloseVoicePage
// (Final, Native, Public, BlueprintCallable, Const)

void UTgfVoiceChatService::CloseVoicePage() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TgfVoiceChatService", "CloseVoicePage");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TgfVoiceChatService.GetSettingOpenState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTgfVoiceChatService::GetSettingOpenState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TgfVoiceChatService", "GetSettingOpenState");

	Params::TgfVoiceChatService_GetSettingOpenState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TgfVoiceChatService.GetVoiceLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int64                                   UserId                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTgfVoiceChatService::GetVoiceLevel(const int64 UserId) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TgfVoiceChatService", "GetVoiceLevel");

	Params::TgfVoiceChatService_GetVoiceLevel Parms{};

	Parms.UserId = UserId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TgfVoiceChatService.OpenVoicePage
// (Final, Native, Public, BlueprintCallable, Const)

void UTgfVoiceChatService::OpenVoicePage() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TgfVoiceChatService", "OpenVoicePage");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TimeFunctionLibrary.FormatToCultureLocalTime
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int64                                   UnixTimestamp                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETimeFormatType                         FormatType                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           CultureName                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UTimeFunctionLibrary::FormatToCultureLocalTime(int64 UnixTimestamp, const ETimeFormatType FormatType, const class FString& CultureName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TimeFunctionLibrary", "FormatToCultureLocalTime");

	Params::TimeFunctionLibrary_FormatToCultureLocalTime Parms{};

	Parms.UnixTimestamp = UnixTimestamp;
	Parms.FormatType = FormatType;
	Parms.CultureName = std::move(CultureName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TimeFunctionLibrary.FormatToLocalTime
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int64                                   UnixTimestamp                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UTimeFunctionLibrary::FormatToLocalTime(int64 UnixTimestamp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TimeFunctionLibrary", "FormatToLocalTime");

	Params::TimeFunctionLibrary_FormatToLocalTime Parms{};

	Parms.UnixTimestamp = UnixTimestamp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TimeFunctionLibrary.FormatToLocalTimeWithFormat
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int64                                   UnixTimestamp                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           InFormat                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UTimeFunctionLibrary::FormatToLocalTimeWithFormat(int64 UnixTimestamp, const class FString& InFormat)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TimeFunctionLibrary", "FormatToLocalTimeWithFormat");

	Params::TimeFunctionLibrary_FormatToLocalTimeWithFormat Parms{};

	Parms.UnixTimestamp = UnixTimestamp;
	Parms.InFormat = std::move(InFormat);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TimeFunctionLibrary.GetLocalTimestamp
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UTimeFunctionLibrary::GetLocalTimestamp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TimeFunctionLibrary", "GetLocalTimestamp");

	Params::TimeFunctionLibrary_GetLocalTimestamp Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TimeFunctionLibrary.GetOrdinal
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UTimeFunctionLibrary::GetOrdinal(int32 Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TimeFunctionLibrary", "GetOrdinal");

	Params::TimeFunctionLibrary_GetOrdinal Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TimeFunctionLibrary.GetUtcDateTime
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FDateTime                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FDateTime UTimeFunctionLibrary::GetUtcDateTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TimeFunctionLibrary", "GetUtcDateTime");

	Params::TimeFunctionLibrary_GetUtcDateTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TimeFunctionLibrary.TransToLocalDateTime
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// int64                                   UnixTimestamp                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDateTime                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FDateTime UTimeFunctionLibrary::TransToLocalDateTime(int64 UnixTimestamp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TimeFunctionLibrary", "TransToLocalDateTime");

	Params::TimeFunctionLibrary_TransToLocalDateTime Parms{};

	Parms.UnixTimestamp = UnixTimestamp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TimerSubsystem.Lua_Initialized
// (Native, Event, Public, BlueprintEvent)

void UTimerSubsystem::Lua_Initialized()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TimerSubsystem", "Lua_Initialized");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TimerSubsystem.Lua_Tick
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTimerSubsystem::Lua_Tick(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TimerSubsystem", "Lua_Tick");

	Params::TimerSubsystem_Lua_Tick Parms{};

	Parms.DeltaTime = DeltaTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TimeService.OnGameLogout
// (Final, Native, Private)
// Parameters:
// class UTGFEventArgs*                    Args                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTimeService::OnGameLogout(class UTGFEventArgs* Args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TimeService", "OnGameLogout");

	Params::TimeService_OnGameLogout Parms{};

	Parms.Args = Args;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TimeService.GetCurrentTimeStamp
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UTimeService::GetCurrentTimeStamp() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TimeService", "GetCurrentTimeStamp");

	Params::TimeService_GetCurrentTimeStamp Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.ToastWindow.ShowToast
// (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FText                             Message                                                (Parm, NativeAccessSpecifierPublic)

void UToastWindow::ShowToast(const class FText& Message)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ToastWindow", "ShowToast");

	Params::ToastWindow_ShowToast Parms{};

	Parms.Message = std::move(Message);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.ToastWindow.ShowToastWithActor
// (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FText                             Message                                                (Parm, NativeAccessSpecifierPublic)
// class AActor*                           InputActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UToastWindow::ShowToastWithActor(const class FText& Message, class AActor* InputActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ToastWindow", "ShowToastWithActor");

	Params::ToastWindow_ShowToastWithActor Parms{};

	Parms.Message = std::move(Message);
	Parms.InputActor = InputActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.ToastWindow.ShowToastWithActorAndTime
// (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FText                             Message                                                (Parm, NativeAccessSpecifierPublic)
// class AActor*                           InputActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Time                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UToastWindow::ShowToastWithActorAndTime(const class FText& Message, class AActor* InputActor, float Time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ToastWindow", "ShowToastWithActorAndTime");

	Params::ToastWindow_ShowToastWithActorAndTime Parms{};

	Parms.Message = std::move(Message);
	Parms.InputActor = InputActor;
	Parms.Time = Time;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.ToastWindow.ShowToastWithObject
// (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FText                             Message                                                (Parm, NativeAccessSpecifierPublic)
// class UObject*                          InputObject                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UToastWindow::ShowToastWithObject(const class FText& Message, class UObject* InputObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ToastWindow", "ShowToastWithObject");

	Params::ToastWindow_ShowToastWithObject Parms{};

	Parms.Message = std::move(Message);
	Parms.InputObject = InputObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.ToolLib.GetCareerConfigList
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   Race                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UExcelLoaderTgfConfigExcelRoleType*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UExcelLoaderTgfConfigExcelRoleType*> UToolLib::GetCareerConfigList(int32 Race)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ToolLib", "GetCareerConfigList");

	Params::ToolLib_GetCareerConfigList Parms{};

	Parms.Race = Race;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.ToolLib.GetTexture2D
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           Path                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTexture2D*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTexture2D* UToolLib::GetTexture2D(const class FString& Path)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ToolLib", "GetTexture2D");

	Params::ToolLib_GetTexture2D Parms{};

	Parms.Path = std::move(Path);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.ToolLib.GetTotlePageCount
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   DataCnt                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OnePageCnt                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UToolLib::GetTotlePageCount(int32 DataCnt, int32 OnePageCnt)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ToolLib", "GetTotlePageCount");

	Params::ToolLib_GetTotlePageCount Parms{};

	Parms.DataCnt = DataCnt;
	Parms.OnePageCnt = OnePageCnt;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TradeBidOrder.GetItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FTGFItem                   ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FTGFItem UTradeBidOrder::GetItem()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeBidOrder", "GetItem");

	Params::TradeBidOrder_GetItem Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TradeBidOrder.GetCurrentBidPrice
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTradeBidOrder::GetCurrentBidPrice() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeBidOrder", "GetCurrentBidPrice");

	Params::TradeBidOrder_GetCurrentBidPrice Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TradeBidOrder.GetItemTypeId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTradeBidOrder::GetItemTypeId() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeBidOrder", "GetItemTypeId");

	Params::TradeBidOrder_GetItemTypeId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TradeBidOrder.GetMyBidPrice
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTradeBidOrder::GetMyBidPrice() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeBidOrder", "GetMyBidPrice");

	Params::TradeBidOrder_GetMyBidPrice Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TradeBidOrder.GetOrderForBid
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTradeSearchResultOrder*          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTradeSearchResultOrder* UTradeBidOrder::GetOrderForBid() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeBidOrder", "GetOrderForBid");

	Params::TradeBidOrder_GetOrderForBid Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TradeBidOrder.GetRemainTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UTradeBidOrder::GetRemainTime() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeBidOrder", "GetRemainTime");

	Params::TradeBidOrder_GetRemainTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TradeBidOrder.GetState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ETradeBidOrderState                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETradeBidOrderState UTradeBidOrder::GetState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeBidOrder", "GetState");

	Params::TradeBidOrder_GetState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TradeBidOrder.GetTradeItemProductId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTradeBidOrder::GetTradeItemProductId() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeBidOrder", "GetTradeItemProductId");

	Params::TradeBidOrder_GetTradeItemProductId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TradeBidOrder.GetTradeOrderTicketId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UTradeBidOrder::GetTradeOrderTicketId() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeBidOrder", "GetTradeOrderTicketId");

	Params::TradeBidOrder_GetTradeOrderTicketId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TradeFunctionLibrary.GetTradeAuctionStartingPrice
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   ProductId                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   MarketId                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsDefaultSp                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTradeFunctionLibrary::GetTradeAuctionStartingPrice(int32 ProductId, int32 MarketId, bool* IsDefaultSp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TradeFunctionLibrary", "GetTradeAuctionStartingPrice");

	Params::TradeFunctionLibrary_GetTradeAuctionStartingPrice Parms{};

	Parms.ProductId = ProductId;
	Parms.MarketId = MarketId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsDefaultSp != nullptr)
		*IsDefaultSp = Parms.IsDefaultSp;

	return Parms.ReturnValue;
}


// Function TGFGame.TradeFunctionLibrary.GetTradeItemProductIdByItem
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FTGFItem                         Item                                                   (Parm, NativeAccessSpecifierPublic)
// int32                                   MarketId                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTradeFunctionLibrary::GetTradeItemProductIdByItem(const struct FTGFItem& Item, int32 MarketId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TradeFunctionLibrary", "GetTradeItemProductIdByItem");

	Params::TradeFunctionLibrary_GetTradeItemProductIdByItem Parms{};

	Parms.Item = std::move(Item);
	Parms.MarketId = MarketId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TradeFunctionLibrary.GetTradeItemStartingPrice
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FTGFItem                         Item                                                   (Parm, NativeAccessSpecifierPublic)
// int32                                   MarketId                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTradeFunctionLibrary::GetTradeItemStartingPrice(const struct FTGFItem& Item, int32 MarketId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TradeFunctionLibrary", "GetTradeItemStartingPrice");

	Params::TradeFunctionLibrary_GetTradeItemStartingPrice Parms{};

	Parms.Item = std::move(Item);
	Parms.MarketId = MarketId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TradeFunctionLibrary.GetTradeItemTypeByProductId
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ProductId                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   MarketId                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTradeFunctionLibrary::GetTradeItemTypeByProductId(int32 ProductId, int32 MarketId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TradeFunctionLibrary", "GetTradeItemTypeByProductId");

	Params::TradeFunctionLibrary_GetTradeItemTypeByProductId Parms{};

	Parms.ProductId = ProductId;
	Parms.MarketId = MarketId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TradeFunctionLibrary.GetTradeMarketCurrencyType
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   TradeMarketId                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTradeFunctionLibrary::GetTradeMarketCurrencyType(int32 TradeMarketId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TradeFunctionLibrary", "GetTradeMarketCurrencyType");

	Params::TradeFunctionLibrary_GetTradeMarketCurrencyType Parms{};

	Parms.TradeMarketId = TradeMarketId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TradeFunctionLibrary.IsTradeAllowed
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ModuleId                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTradeFunctionLibrary::IsTradeAllowed(int32 ModuleId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TradeFunctionLibrary", "IsTradeAllowed");

	Params::TradeFunctionLibrary_IsTradeAllowed Parms{};

	Parms.ModuleId = ModuleId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TradeHomogenService.AddSelectItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FTGFItem                         Item                                                   (Parm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTradeHomogenService::AddSelectItem(const struct FTGFItem& Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeHomogenService", "AddSelectItem");

	Params::TradeHomogenService_AddSelectItem Parms{};

	Parms.Item = std::move(Item);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TradeHomogenService.CheckCanReceiveRedPoint
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTradeHomogenService::CheckCanReceiveRedPoint()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeHomogenService", "CheckCanReceiveRedPoint");

	Params::TradeHomogenService_CheckCanReceiveRedPoint Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TradeHomogenService.CheckHasSoldOutRedPoint
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTradeHomogenService::CheckHasSoldOutRedPoint()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeHomogenService", "CheckHasSoldOutRedPoint");

	Params::TradeHomogenService_CheckHasSoldOutRedPoint Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TradeHomogenService.CheckSelectItems
// (Final, Native, Public, BlueprintCallable)

void UTradeHomogenService::CheckSelectItems()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeHomogenService", "CheckSelectItems");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TradeHomogenService.ClearSearchDataCache
// (Final, Native, Public, BlueprintCallable)

void UTradeHomogenService::ClearSearchDataCache()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeHomogenService", "ClearSearchDataCache");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TradeHomogenService.ClearSelectItems
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTradeHomogenService::ClearSelectItems()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeHomogenService", "ClearSelectItems");

	Params::TradeHomogenService_ClearSelectItems Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TradeHomogenService.ClientSearch
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Career                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   MinorType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<int32>                           SubTypes                                               (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// int32                                   Rarity                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   MinPrice                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   MaxPrice                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ProductCount                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   PageIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Affix1                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Affix2                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Affix3                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTradeHomogenService::ClientSearch(int32 Career, int32 MinorType, const TArray<int32>& SubTypes, int32 Rarity, int32 MinPrice, int32 MaxPrice, int32 ProductCount, int32 PageIndex, int32 Affix1, int32 Affix2, int32 Affix3)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeHomogenService", "ClientSearch");

	Params::TradeHomogenService_ClientSearch Parms{};

	Parms.Career = Career;
	Parms.MinorType = MinorType;
	Parms.SubTypes = std::move(SubTypes);
	Parms.Rarity = Rarity;
	Parms.MinPrice = MinPrice;
	Parms.MaxPrice = MaxPrice;
	Parms.ProductCount = ProductCount;
	Parms.PageIndex = PageIndex;
	Parms.Affix1 = Affix1;
	Parms.Affix2 = Affix2;
	Parms.Affix3 = Affix3;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TradeHomogenService.ClientSearchByPage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ProductCount                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   PageIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTradeHomogenService::ClientSearchByPage(int32 ProductCount, int32 PageIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeHomogenService", "ClientSearchByPage");

	Params::TradeHomogenService_ClientSearchByPage Parms{};

	Parms.ProductCount = ProductCount;
	Parms.PageIndex = PageIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TradeHomogenService.ContainSelectItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FTGFItem                         Item                                                   (Parm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTradeHomogenService::ContainSelectItem(const struct FTGFItem& Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeHomogenService", "ContainSelectItem");

	Params::TradeHomogenService_ContainSelectItem Parms{};

	Parms.Item = std::move(Item);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TradeHomogenService.FindClosestIntervalValue
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Start                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   End                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Interval                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTradeHomogenService::FindClosestIntervalValue(int32 Start, int32 End, int32 Interval, int32 Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeHomogenService", "FindClosestIntervalValue");

	Params::TradeHomogenService_FindClosestIntervalValue Parms{};

	Parms.Start = Start;
	Parms.End = End;
	Parms.Interval = Interval;
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TradeHomogenService.GetHasNextPage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTradeHomogenService::GetHasNextPage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeHomogenService", "GetHasNextPage");

	Params::TradeHomogenService_GetHasNextPage Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TradeHomogenService.GetItemPrice
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ProductId                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTradeHomogenService::GetItemPrice(int32 ProductId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeHomogenService", "GetItemPrice");

	Params::TradeHomogenService_GetItemPrice Parms{};

	Parms.ProductId = ProductId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TradeHomogenService.GetLeftReceiveCount
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   TradeOrderTicketId                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTradeHomogenService::GetLeftReceiveCount(int64 TradeOrderTicketId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeHomogenService", "GetLeftReceiveCount");

	Params::TradeHomogenService_GetLeftReceiveCount Parms{};

	Parms.TradeOrderTicketId = TradeOrderTicketId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TradeHomogenService.GetMyBuyOrders
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   State                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UTradeProductBuyOrder*>    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UTradeProductBuyOrder*> UTradeHomogenService::GetMyBuyOrders(int32 State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeHomogenService", "GetMyBuyOrders");

	Params::TradeHomogenService_GetMyBuyOrders Parms{};

	Parms.State = State;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TradeHomogenService.GetPageDataCache
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   PageIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTGFTradeProductSearchResultData ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FTGFTradeProductSearchResultData UTradeHomogenService::GetPageDataCache(int32 PageIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeHomogenService", "GetPageDataCache");

	Params::TradeHomogenService_GetPageDataCache Parms{};

	Parms.PageIndex = PageIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TradeHomogenService.GetProductOrderById
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ProductId                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   OrderType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTGFTradeMarketProductData*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTGFTradeMarketProductData* UTradeHomogenService::GetProductOrderById(int32 ProductId, int64 OrderType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeHomogenService", "GetProductOrderById");

	Params::TradeHomogenService_GetProductOrderById Parms{};

	Parms.ProductId = ProductId;
	Parms.OrderType = OrderType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TradeHomogenService.GetPublishCostType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTradeHomogenService::GetPublishCostType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeHomogenService", "GetPublishCostType");

	Params::TradeHomogenService_GetPublishCostType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TradeHomogenService.GetRecommendList
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSet<class UTGFTradeMarketProductData*> ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

TSet<class UTGFTradeMarketProductData*> UTradeHomogenService::GetRecommendList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeHomogenService", "GetRecommendList");

	Params::TradeHomogenService_GetRecommendList Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TradeHomogenService.GetRecommendResults
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Refresh                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSet<class UTGFTradeMarketProductData*> ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

TSet<class UTGFTradeMarketProductData*> UTradeHomogenService::GetRecommendResults(bool Refresh)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeHomogenService", "GetRecommendResults");

	Params::TradeHomogenService_GetRecommendResults Parms{};

	Parms.Refresh = Refresh;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TradeHomogenService.GetRecommendResults_New
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Refresh                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSet<class UTGFTradeMarketProductData*> ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

TSet<class UTGFTradeMarketProductData*> UTradeHomogenService::GetRecommendResults_New(bool Refresh)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeHomogenService", "GetRecommendResults_New");

	Params::TradeHomogenService_GetRecommendResults_New Parms{};

	Parms.Refresh = Refresh;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TradeHomogenService.GetSaleOrders
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   MaxCount                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UTradeSaleOrder*>          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UTradeSaleOrder*> UTradeHomogenService::GetSaleOrders(int32 MaxCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeHomogenService", "GetSaleOrders");

	Params::TradeHomogenService_GetSaleOrders Parms{};

	Parms.MaxCount = MaxCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TradeHomogenService.GetSearchResults
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UTGFTradeMarketProductData*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UTGFTradeMarketProductData*> UTradeHomogenService::GetSearchResults()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeHomogenService", "GetSearchResults");

	Params::TradeHomogenService_GetSearchResults Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TradeHomogenService.GetSelectItems
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<struct FTGFItem>                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FTGFItem> UTradeHomogenService::GetSelectItems()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeHomogenService", "GetSelectItems");

	Params::TradeHomogenService_GetSelectItems Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TradeHomogenService.GetTradeMarketProductDataById
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ProductId                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   OrderType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTGFTradeMarketProductData*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTGFTradeMarketProductData* UTradeHomogenService::GetTradeMarketProductDataById(int32 ProductId, int64 OrderType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeHomogenService", "GetTradeMarketProductDataById");

	Params::TradeHomogenService_GetTradeMarketProductDataById Parms{};

	Parms.ProductId = ProductId;
	Parms.OrderType = OrderType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TradeHomogenService.GetTradeMarketProductDatas
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UTGFTradeMarketProductData*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UTGFTradeMarketProductData*> UTradeHomogenService::GetTradeMarketProductDatas()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeHomogenService", "GetTradeMarketProductDatas");

	Params::TradeHomogenService_GetTradeMarketProductDatas Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TradeHomogenService.HandleGearRepairFinish
// (Final, Native, Private)
// Parameters:
// class UTGFEventArgs*                    Args                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTradeHomogenService::HandleGearRepairFinish(class UTGFEventArgs* Args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeHomogenService", "HandleGearRepairFinish");

	Params::TradeHomogenService_HandleGearRepairFinish Parms{};

	Parms.Args = Args;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TradeHomogenService.InitSearchProductData
// (Final, Native, Public, BlueprintCallable)

void UTradeHomogenService::InitSearchProductData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeHomogenService", "InitSearchProductData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TradeHomogenService.OnPublishProduct
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FTGFItem                         Item                                                   (Parm, NativeAccessSpecifierPublic)
// int32                                   Count                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Price                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTradeHomogenService::OnPublishProduct(const struct FTGFItem& Item, int32 Count, int32 Price)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeHomogenService", "OnPublishProduct");

	Params::TradeHomogenService_OnPublishProduct Parms{};

	Parms.Item = std::move(Item);
	Parms.Count = Count;
	Parms.Price = Price;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TradeHomogenService.ReceiveAll
// (Final, Native, Public, BlueprintCallable)

void UTradeHomogenService::ReceiveAll()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeHomogenService", "ReceiveAll");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TradeHomogenService.ReceiveProductOrder
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTradeProductBuyOrder*            BuyOrder                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTradeHomogenService::ReceiveProductOrder(class UTradeProductBuyOrder* BuyOrder)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeHomogenService", "ReceiveProductOrder");

	Params::TradeHomogenService_ReceiveProductOrder Parms{};

	Parms.BuyOrder = BuyOrder;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TradeHomogenService.ReceiveSaleList
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UTradeSaleOrder*>          Orders                                                 (Parm, ZeroConstructor, NativeAccessSpecifierPublic)

void UTradeHomogenService::ReceiveSaleList(const TArray<class UTradeSaleOrder*>& Orders)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeHomogenService", "ReceiveSaleList");

	Params::TradeHomogenService_ReceiveSaleList Parms{};

	Parms.Orders = std::move(Orders);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TradeHomogenService.ReceiveSaleOrder
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTradeSaleOrder*                  SaleOrder                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTradeHomogenService::ReceiveSaleOrder(class UTradeSaleOrder* SaleOrder)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeHomogenService", "ReceiveSaleOrder");

	Params::TradeHomogenService_ReceiveSaleOrder Parms{};

	Parms.SaleOrder = SaleOrder;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TradeHomogenService.RefreshSearchList
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   PageIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTradeHomogenService::RefreshSearchList(int32 PageIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeHomogenService", "RefreshSearchList");

	Params::TradeHomogenService_RefreshSearchList Parms{};

	Parms.PageIndex = PageIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TradeHomogenService.RemoveSelectItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FTGFItem                         Item                                                   (Parm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTradeHomogenService::RemoveSelectItem(const struct FTGFItem& Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeHomogenService", "RemoveSelectItem");

	Params::TradeHomogenService_RemoveSelectItem Parms{};

	Parms.Item = std::move(Item);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TradeHomogenService.ReSearchRequest
// (Final, Native, Public, BlueprintCallable)

void UTradeHomogenService::ReSearchRequest()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeHomogenService", "ReSearchRequest");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TradeHomogenService.SendTradeOrderHistoryRequest
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   MarketId                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTradeHomogenService::SendTradeOrderHistoryRequest(const int32 MarketId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeHomogenService", "SendTradeOrderHistoryRequest");

	Params::TradeHomogenService_SendTradeOrderHistoryRequest Parms{};

	Parms.MarketId = MarketId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TradeHomogenService.SendTradeProductBasicInfoRequest
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UTradeSaleItem*>           Items                                                  (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// int64                                   OrderType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTradeHomogenService::SendTradeProductBasicInfoRequest(const TArray<class UTradeSaleItem*>& Items, int64 OrderType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeHomogenService", "SendTradeProductBasicInfoRequest");

	Params::TradeHomogenService_SendTradeProductBasicInfoRequest Parms{};

	Parms.Items = std::move(Items);
	Parms.OrderType = OrderType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TradeHomogenService.SendTradeProductOrderCancelRequest
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   TradeOrderTicketId                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTradeHomogenService::SendTradeProductOrderCancelRequest(const int64 TradeOrderTicketId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeHomogenService", "SendTradeProductOrderCancelRequest");

	Params::TradeHomogenService_SendTradeProductOrderCancelRequest Parms{};

	Parms.TradeOrderTicketId = TradeOrderTicketId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TradeHomogenService.SendTradeProductPriceInfoRequest
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   MarketId                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ProductId                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OrderType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bNotFireInfoRsp                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTradeHomogenService::SendTradeProductPriceInfoRequest(const int32 MarketId, int32 ProductId, int32 OrderType, bool bNotFireInfoRsp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeHomogenService", "SendTradeProductPriceInfoRequest");

	Params::TradeHomogenService_SendTradeProductPriceInfoRequest Parms{};

	Parms.MarketId = MarketId;
	Parms.ProductId = ProductId;
	Parms.OrderType = OrderType;
	Parms.bNotFireInfoRsp = bNotFireInfoRsp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TradeHomogenService.SendTradeProductRecommendOrderTicketRequest
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Refresh                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTradeHomogenService::SendTradeProductRecommendOrderTicketRequest(bool Refresh)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeHomogenService", "SendTradeProductRecommendOrderTicketRequest");

	Params::TradeHomogenService_SendTradeProductRecommendOrderTicketRequest Parms{};

	Parms.Refresh = Refresh;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TradeHomogenService.SendTradeProductRecommendOrderTicketRequest_New
// (Final, Native, Public, BlueprintCallable)

void UTradeHomogenService::SendTradeProductRecommendOrderTicketRequest_New()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeHomogenService", "SendTradeProductRecommendOrderTicketRequest_New");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TradeHomogenService.SendTradePublishRequest
// (Final, Native, Public, BlueprintCallable)

void UTradeHomogenService::SendTradePublishRequest()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeHomogenService", "SendTradePublishRequest");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TradeHomogenService.SendTradePurchaseOrderPublishRequest
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ProductId                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Count                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Price                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           BillNo                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsFixed                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTradeHomogenService::SendTradePurchaseOrderPublishRequest(int32 ProductId, int32 Count, int32 Price, const class FString& BillNo, bool IsFixed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeHomogenService", "SendTradePurchaseOrderPublishRequest");

	Params::TradeHomogenService_SendTradePurchaseOrderPublishRequest Parms{};

	Parms.ProductId = ProductId;
	Parms.Count = Count;
	Parms.Price = Price;
	Parms.BillNo = std::move(BillNo);
	Parms.IsFixed = IsFixed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TradeHomogenService.SendTradeSaleOrderPublishRequest
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ProductId                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Count                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Price                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FTGFItem>                 Items                                                  (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// int32                                   CostType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           BillNo                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsBatchSell                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTradeHomogenService::SendTradeSaleOrderPublishRequest(int32 ProductId, int32 Count, int32 Price, const TArray<struct FTGFItem>& Items, int32 CostType, const class FString& BillNo, bool IsBatchSell)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeHomogenService", "SendTradeSaleOrderPublishRequest");

	Params::TradeHomogenService_SendTradeSaleOrderPublishRequest Parms{};

	Parms.ProductId = ProductId;
	Parms.Count = Count;
	Parms.Price = Price;
	Parms.Items = std::move(Items);
	Parms.CostType = CostType;
	Parms.BillNo = std::move(BillNo);
	Parms.IsBatchSell = IsBatchSell;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TradeHomogenService.SendTradeSearchRequest
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Career                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   MinorType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<int32>                           SubTypes                                               (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// int32                                   Rarity                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   MinPrice                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   MaxPrice                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Affix1                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Affix2                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Affix3                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTGFProtoTgfDTradeIndexSearchBound*Bound                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTradeHomogenService::SendTradeSearchRequest(int32 Career, int32 MinorType, const TArray<int32>& SubTypes, int32 Rarity, int32 MinPrice, int32 MaxPrice, int32 Affix1, int32 Affix2, int32 Affix3, class UTGFProtoTgfDTradeIndexSearchBound* Bound)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeHomogenService", "SendTradeSearchRequest");

	Params::TradeHomogenService_SendTradeSearchRequest Parms{};

	Parms.Career = Career;
	Parms.MinorType = MinorType;
	Parms.SubTypes = std::move(SubTypes);
	Parms.Rarity = Rarity;
	Parms.MinPrice = MinPrice;
	Parms.MaxPrice = MaxPrice;
	Parms.Affix1 = Affix1;
	Parms.Affix2 = Affix2;
	Parms.Affix3 = Affix3;
	Parms.Bound = Bound;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TradeHomogenService.SetPageDataCache
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   PageIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UTGFTradeMarketProductData*>Datas                                                  (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    NextPage                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTradeHomogenService::SetPageDataCache(int32 PageIndex, const TArray<class UTGFTradeMarketProductData*>& Datas, bool NextPage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeHomogenService", "SetPageDataCache");

	Params::TradeHomogenService_SetPageDataCache Parms{};

	Parms.PageIndex = PageIndex;
	Parms.Datas = std::move(Datas);
	Parms.NextPage = NextPage;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TradeHomogenService.SetProductSoldOut
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ProductId                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTradeHomogenService::SetProductSoldOut(const int64 ProductId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeHomogenService", "SetProductSoldOut");

	Params::TradeHomogenService_SetProductSoldOut Parms{};

	Parms.ProductId = ProductId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TradeHomogenService.SetSaleMultiMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    MultiMode                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTradeHomogenService::SetSaleMultiMode(bool MultiMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeHomogenService", "SetSaleMultiMode");

	Params::TradeHomogenService_SetSaleMultiMode Parms{};

	Parms.MultiMode = MultiMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TradeHomogenService.TradeProductBasicInfoReq
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UTGFTradeMarketProductData*>Products                                               (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// int64                                   OrderType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTradeHomogenService::TradeProductBasicInfoReq(const TArray<class UTGFTradeMarketProductData*>& Products, int64 OrderType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeHomogenService", "TradeProductBasicInfoReq");

	Params::TradeHomogenService_TradeProductBasicInfoReq Parms{};

	Parms.Products = std::move(Products);
	Parms.OrderType = OrderType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TradeHomogenService.TradeProductBasicInfoReqByProductId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ProductId                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   OrderType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTradeHomogenService::TradeProductBasicInfoReqByProductId(int32 ProductId, int64 OrderType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeHomogenService", "TradeProductBasicInfoReqByProductId");

	Params::TradeHomogenService_TradeProductBasicInfoReqByProductId Parms{};

	Parms.ProductId = ProductId;
	Parms.OrderType = OrderType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TradeHomogenService.TradeProductBasicInfoReqByProductIdArray
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<int32>                           ProductIds                                             (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// int64                                   OrderType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTradeHomogenService::TradeProductBasicInfoReqByProductIdArray(const TArray<int32>& ProductIds, int64 OrderType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeHomogenService", "TradeProductBasicInfoReqByProductIdArray");

	Params::TradeHomogenService_TradeProductBasicInfoReqByProductIdArray Parms{};

	Parms.ProductIds = std::move(ProductIds);
	Parms.OrderType = OrderType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TradeHomogenService.TradeSearchPageRequest
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTGFProtoTgfDTradeIndexSearchBound*Bound                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTradeHomogenService::TradeSearchPageRequest(class UTGFProtoTgfDTradeIndexSearchBound* Bound)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeHomogenService", "TradeSearchPageRequest");

	Params::TradeHomogenService_TradeSearchPageRequest Parms{};

	Parms.Bound = Bound;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TradeHomogenService.GetCurrentIncome
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTradeHomogenService::GetCurrentIncome() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeHomogenService", "GetCurrentIncome");

	Params::TradeHomogenService_GetCurrentIncome Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TradeProductBuyOrder.GetItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FTGFItem                   ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FTGFItem UTradeProductBuyOrder::GetItem()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeProductBuyOrder", "GetItem");

	Params::TradeProductBuyOrder_GetItem Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TradeProductBuyOrder.GetBuyTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UTradeProductBuyOrder::GetBuyTime() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeProductBuyOrder", "GetBuyTime");

	Params::TradeProductBuyOrder_GetBuyTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TradeProductBuyOrder.GetIsFixedOrder
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTradeProductBuyOrder::GetIsFixedOrder() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeProductBuyOrder", "GetIsFixedOrder");

	Params::TradeProductBuyOrder_GetIsFixedOrder Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TradeProductBuyOrder.GetItemTypeId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTradeProductBuyOrder::GetItemTypeId() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeProductBuyOrder", "GetItemTypeId");

	Params::TradeProductBuyOrder_GetItemTypeId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TradeProductBuyOrder.GetOriginItemCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTradeProductBuyOrder::GetOriginItemCount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeProductBuyOrder", "GetOriginItemCount");

	Params::TradeProductBuyOrder_GetOriginItemCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TradeProductBuyOrder.GetPurchaseLeftCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTradeProductBuyOrder::GetPurchaseLeftCount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeProductBuyOrder", "GetPurchaseLeftCount");

	Params::TradeProductBuyOrder_GetPurchaseLeftCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TradeProductBuyOrder.GetPurchaseLeftPrice
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTradeProductBuyOrder::GetPurchaseLeftPrice() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeProductBuyOrder", "GetPurchaseLeftPrice");

	Params::TradeProductBuyOrder_GetPurchaseLeftPrice Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TradeProductBuyOrder.GetPurchaseOriginItemCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTradeProductBuyOrder::GetPurchaseOriginItemCount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeProductBuyOrder", "GetPurchaseOriginItemCount");

	Params::TradeProductBuyOrder_GetPurchaseOriginItemCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TradeProductBuyOrder.GetPurchaseOriginPrice
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTradeProductBuyOrder::GetPurchaseOriginPrice() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeProductBuyOrder", "GetPurchaseOriginPrice");

	Params::TradeProductBuyOrder_GetPurchaseOriginPrice Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TradeProductBuyOrder.GetPurchaseUnitPrice
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTradeProductBuyOrder::GetPurchaseUnitPrice() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeProductBuyOrder", "GetPurchaseUnitPrice");

	Params::TradeProductBuyOrder_GetPurchaseUnitPrice Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TradeProductBuyOrder.GetRealDealTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UTradeProductBuyOrder::GetRealDealTime() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeProductBuyOrder", "GetRealDealTime");

	Params::TradeProductBuyOrder_GetRealDealTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TradeProductBuyOrder.GetTradeItemProductId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTradeProductBuyOrder::GetTradeItemProductId() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeProductBuyOrder", "GetTradeItemProductId");

	Params::TradeProductBuyOrder_GetTradeItemProductId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TradeProductBuyOrder.GetTradeProductTicketId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UTradeProductBuyOrder::GetTradeProductTicketId() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeProductBuyOrder", "GetTradeProductTicketId");

	Params::TradeProductBuyOrder_GetTradeProductTicketId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TradeProductBuyOrder.GetTradeTicketState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UTradeProductBuyOrder::GetTradeTicketState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeProductBuyOrder", "GetTradeTicketState");

	Params::TradeProductBuyOrder_GetTradeTicketState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TradeProductBuyOrder.GetUnitPrice
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTradeProductBuyOrder::GetUnitPrice() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeProductBuyOrder", "GetUnitPrice");

	Params::TradeProductBuyOrder_GetUnitPrice Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TradeProductBuyOrder.IsPartDeal
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTradeProductBuyOrder::IsPartDeal() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeProductBuyOrder", "IsPartDeal");

	Params::TradeProductBuyOrder_IsPartDeal Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TradeSaleItem.IsCorruptionItem
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTradeSaleItem::IsCorruptionItem() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeSaleItem", "IsCorruptionItem");

	Params::TradeSaleItem_IsCorruptionItem Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TradeSearchResultOrder.GetItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FTGFItem                   ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FTGFItem UTradeSearchResultOrder::GetItem()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeSearchResultOrder", "GetItem");

	Params::TradeSearchResultOrder_GetItem Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TradeSearchResultOrder.GetItemWrapper
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTgfInventoryItemWrapper_Lobby*   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTgfInventoryItemWrapper_Lobby* UTradeSearchResultOrder::GetItemWrapper()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeSearchResultOrder", "GetItemWrapper");

	Params::TradeSearchResultOrder_GetItemWrapper Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TradeSearchResultOrder.GetSourceTypes
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UTradeSearchResultOrder::GetSourceTypes()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeSearchResultOrder", "GetSourceTypes");

	Params::TradeSearchResultOrder_GetSourceTypes Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TradeSearchResultOrder.IsCorruptionItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTradeSearchResultOrder::IsCorruptionItem()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeSearchResultOrder", "IsCorruptionItem");

	Params::TradeSearchResultOrder_IsCorruptionItem Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TradeSearchResultOrder.GetCurrentBidPrice
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTradeSearchResultOrder::GetCurrentBidPrice() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeSearchResultOrder", "GetCurrentBidPrice");

	Params::TradeSearchResultOrder_GetCurrentBidPrice Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TradeSearchResultOrder.GetFixedPrice
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTradeSearchResultOrder::GetFixedPrice() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeSearchResultOrder", "GetFixedPrice");

	Params::TradeSearchResultOrder_GetFixedPrice Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TradeSearchResultOrder.GetItemRarity
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTradeSearchResultOrder::GetItemRarity() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeSearchResultOrder", "GetItemRarity");

	Params::TradeSearchResultOrder_GetItemRarity Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TradeSearchResultOrder.GetItemTypeId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTradeSearchResultOrder::GetItemTypeId() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeSearchResultOrder", "GetItemTypeId");

	Params::TradeSearchResultOrder_GetItemTypeId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TradeSearchResultOrder.GetRemainTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UTradeSearchResultOrder::GetRemainTime() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeSearchResultOrder", "GetRemainTime");

	Params::TradeSearchResultOrder_GetRemainTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TradeSearchResultOrder.GetSpScore
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UTradeSearchResultOrder::GetSpScore() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeSearchResultOrder", "GetSpScore");

	Params::TradeSearchResultOrder_GetSpScore Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TradeSearchResultOrder.GetStartingPrice
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTradeSearchResultOrder::GetStartingPrice() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeSearchResultOrder", "GetStartingPrice");

	Params::TradeSearchResultOrder_GetStartingPrice Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TradeSearchResultOrder.GetState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ETradeSaleOrderState                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETradeSaleOrderState UTradeSearchResultOrder::GetState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeSearchResultOrder", "GetState");

	Params::TradeSearchResultOrder_GetState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TradeSearchResultOrder.GetTradeItemProductId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTradeSearchResultOrder::GetTradeItemProductId() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeSearchResultOrder", "GetTradeItemProductId");

	Params::TradeSearchResultOrder_GetTradeItemProductId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TradeSearchResultOrder.GetTradeOrderTicketId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UTradeSearchResultOrder::GetTradeOrderTicketId() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeSearchResultOrder", "GetTradeOrderTicketId");

	Params::TradeSearchResultOrder_GetTradeOrderTicketId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TradeSearchResultOrder.IsMyAuctionOrder
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTradeSearchResultOrder::IsMyAuctionOrder() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeSearchResultOrder", "IsMyAuctionOrder");

	Params::TradeSearchResultOrder_IsMyAuctionOrder Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TradeSearchResultOrder.IsMyBidOrderAndCurrentWinning
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTradeSearchResultOrder::IsMyBidOrderAndCurrentWinning() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeSearchResultOrder", "IsMyBidOrderAndCurrentWinning");

	Params::TradeSearchResultOrder_IsMyBidOrderAndCurrentWinning Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TradeService.BidOrder
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTradeSearchResultOrder*          Order                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   BidPrice                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTradeService::BidOrder(class UTradeSearchResultOrder* Order, int32 BidPrice)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeService", "BidOrder");

	Params::TradeService_BidOrder Parms{};

	Parms.Order = Order;
	Parms.BidPrice = BidPrice;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TradeService.CancelSaleOrder
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTradeSaleOrder*                  SaleOrder                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTradeService::CancelSaleOrder(class UTradeSaleOrder* SaleOrder)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeService", "CancelSaleOrder");

	Params::TradeService_CancelSaleOrder Parms{};

	Parms.SaleOrder = SaleOrder;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TradeService.CheckHaveBidOutAuction
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTradeService::CheckHaveBidOutAuction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeService", "CheckHaveBidOutAuction");

	Params::TradeService_CheckHaveBidOutAuction Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TradeService.CheckHaveBidSuccessAuction
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTradeService::CheckHaveBidSuccessAuction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeService", "CheckHaveBidSuccessAuction");

	Params::TradeService_CheckHaveBidSuccessAuction Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TradeService.CheckHaveOutBidRedPoint
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTradeService::CheckHaveOutBidRedPoint()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeService", "CheckHaveOutBidRedPoint");

	Params::TradeService_CheckHaveOutBidRedPoint Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TradeService.CheckHaveSellRedPoint
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTradeService::CheckHaveSellRedPoint()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeService", "CheckHaveSellRedPoint");

	Params::TradeService_CheckHaveSellRedPoint Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TradeService.DeleteBidOrder
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTradeBidOrder*                   BidOrder                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTradeService::DeleteBidOrder(class UTradeBidOrder* BidOrder)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeService", "DeleteBidOrder");

	Params::TradeService_DeleteBidOrder Parms{};

	Parms.BidOrder = BidOrder;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TradeService.GetBagTabPageIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTradeService::GetBagTabPageIndex()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeService", "GetBagTabPageIndex");

	Params::TradeService_GetBagTabPageIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TradeService.GetInventoryPageIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTradeService::GetInventoryPageIndex()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeService", "GetInventoryPageIndex");

	Params::TradeService_GetInventoryPageIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TradeService.GetMyBidOrders
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ETradeBidOrderState                     State                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UTradeBidOrder*>           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UTradeBidOrder*> UTradeService::GetMyBidOrders(ETradeBidOrderState State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeService", "GetMyBidOrders");

	Params::TradeService_GetMyBidOrders Parms{};

	Parms.State = State;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TradeService.GetReceiveOrderPendingSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   TradeOrderTicketId                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTradeService::GetReceiveOrderPendingSize(int64 TradeOrderTicketId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeService", "GetReceiveOrderPendingSize");

	Params::TradeService_GetReceiveOrderPendingSize Parms{};

	Parms.TradeOrderTicketId = TradeOrderTicketId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TradeService.GetSaleOrders
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   MaxCount                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UTradeSaleOrder*>          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UTradeSaleOrder*> UTradeService::GetSaleOrders(int32 MaxCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeService", "GetSaleOrders");

	Params::TradeService_GetSaleOrders Parms{};

	Parms.MaxCount = MaxCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TradeService.GetTradeIsUnlock
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTradeService::GetTradeIsUnlock()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeService", "GetTradeIsUnlock");

	Params::TradeService_GetTradeIsUnlock Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TradeService.GetTradeMarketProductDataById
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ProductId                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTGFTradeMarketProductData*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTGFTradeMarketProductData* UTradeService::GetTradeMarketProductDataById(int32 ProductId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeService", "GetTradeMarketProductDataById");

	Params::TradeService_GetTradeMarketProductDataById Parms{};

	Parms.ProductId = ProductId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TradeService.GetTradeUnlockIsClicked
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTradeService::GetTradeUnlockIsClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeService", "GetTradeUnlockIsClicked");

	Params::TradeService_GetTradeUnlockIsClicked Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TradeService.GetTradeUnlockTimeStamp
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UTradeService::GetTradeUnlockTimeStamp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeService", "GetTradeUnlockTimeStamp");

	Params::TradeService_GetTradeUnlockTimeStamp Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.TradeService.OnGameLogout
// (Final, Native, Private)
// Parameters:
// class UTGFEventArgs*                    Args                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTradeService::OnGameLogout(class UTGFEventArgs* Args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeService", "OnGameLogout");

	Params::TradeService_OnGameLogout Parms{};

	Parms.Args = Args;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TradeService.ReceiveBidOrder
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTradeBidOrder*                   BidOrder                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTradeService::ReceiveBidOrder(class UTradeBidOrder* BidOrder)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeService", "ReceiveBidOrder");

	Params::TradeService_ReceiveBidOrder Parms{};

	Parms.BidOrder = BidOrder;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TradeService.ReceiveSaleList
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UTradeSaleOrder*>          Orders                                                 (Parm, ZeroConstructor, NativeAccessSpecifierPublic)

void UTradeService::ReceiveSaleList(const TArray<class UTradeSaleOrder*>& Orders)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeService", "ReceiveSaleList");

	Params::TradeService_ReceiveSaleList Parms{};

	Parms.Orders = std::move(Orders);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TradeService.ReceiveSaleOrder
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTradeSaleOrder*                  SaleOrder                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTradeService::ReceiveSaleOrder(class UTradeSaleOrder* SaleOrder)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeService", "ReceiveSaleOrder");

	Params::TradeService_ReceiveSaleOrder Parms{};

	Parms.SaleOrder = SaleOrder;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TradeService.RefreshBidOrderDetail
// (Final, Native, Public, BlueprintCallable)

void UTradeService::RefreshBidOrderDetail()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeService", "RefreshBidOrderDetail");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TradeService.RefreshOrderInfoForBid
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTradeSearchResultOrder*          Order                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTradeService::RefreshOrderInfoForBid(class UTradeSearchResultOrder* Order)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeService", "RefreshOrderInfoForBid");

	Params::TradeService_RefreshOrderInfoForBid Parms{};

	Parms.Order = Order;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TradeService.RefreshOrderInfoForOutBidOrders
// (Final, Native, Public, BlueprintCallable)

void UTradeService::RefreshOrderInfoForOutBidOrders()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeService", "RefreshOrderInfoForOutBidOrders");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TradeService.ReportBagTabState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   PageIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTradeService::ReportBagTabState(int32 PageIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeService", "ReportBagTabState");

	Params::TradeService_ReportBagTabState Parms{};

	Parms.PageIndex = PageIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TradeService.SendTradeAuctionBasicInfoRequest
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UTradeSaleItem*>           Items                                                  (Parm, ZeroConstructor, NativeAccessSpecifierPublic)

void UTradeService::SendTradeAuctionBasicInfoRequest(const TArray<class UTradeSaleItem*>& Items)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeService", "SendTradeAuctionBasicInfoRequest");

	Params::TradeService_SendTradeAuctionBasicInfoRequest Parms{};

	Parms.Items = std::move(Items);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TradeService.SetBidRedPointSeen
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    HasSeen                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTradeService::SetBidRedPointSeen(bool HasSeen)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeService", "SetBidRedPointSeen");

	Params::TradeService_SetBidRedPointSeen Parms{};

	Parms.HasSeen = HasSeen;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TradeService.SetCurControlType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTradeService::SetCurControlType(int32 Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeService", "SetCurControlType");

	Params::TradeService_SetCurControlType Parms{};

	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TradeService.SetInventoryPageIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   PageIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTradeService::SetInventoryPageIndex(int32 PageIndex, int32 Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeService", "SetInventoryPageIndex");

	Params::TradeService_SetInventoryPageIndex Parms{};

	Parms.PageIndex = PageIndex;
	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TradeService.SetSellRedPointSeen
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    HasSeen                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTradeService::SetSellRedPointSeen(bool HasSeen)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeService", "SetSellRedPointSeen");

	Params::TradeService_SetSellRedPointSeen Parms{};

	Parms.HasSeen = HasSeen;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TradeService.SetTradeUnlockClickState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    IsClickToClick                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTradeService::SetTradeUnlockClickState(bool IsClickToClick)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeService", "SetTradeUnlockClickState");

	Params::TradeService_SetTradeUnlockClickState Parms{};

	Parms.IsClickToClick = IsClickToClick;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TradeService.SetTradeUnlockTimeStamp
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   Timestamp                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTradeService::SetTradeUnlockTimeStamp(int64 Timestamp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeService", "SetTradeUnlockTimeStamp");

	Params::TradeService_SetTradeUnlockTimeStamp Parms{};

	Parms.Timestamp = Timestamp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TradeService.GetCurrentIncome
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTradeService::GetCurrentIncome() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TradeService", "GetCurrentIncome");

	Params::TradeService_GetCurrentIncome Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TGFGame.UnlockBanWindow.ExecuteConfirm
// (Final, Native, Public, BlueprintCallable)

void UUnlockBanWindow::ExecuteConfirm()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnlockBanWindow", "ExecuteConfirm");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.UpdateConfigBytesService.CheckUseUpdateConfigBytes
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           StrServerVersion                                       (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUpdateConfigBytesService::CheckUseUpdateConfigBytes(class FString* StrServerVersion)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UpdateConfigBytesService", "CheckUseUpdateConfigBytes");

	Params::UpdateConfigBytesService_CheckUseUpdateConfigBytes Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (StrServerVersion != nullptr)
		*StrServerVersion = std::move(Parms.StrServerVersion);
}


// Function TGFGame.UpdateConfigBytesService.HandleRainbowConfig
// (Final, Native, Public)
// Parameters:
// class UTGFEventArgs*                    Args                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUpdateConfigBytesService::HandleRainbowConfig(class UTGFEventArgs* Args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UpdateConfigBytesService", "HandleRainbowConfig");

	Params::UpdateConfigBytesService_HandleRainbowConfig Parms{};

	Parms.Args = Args;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TGFSettingScreen.HandleOnResetButtonClicked
// (Final, Native, Protected)

void UTGFSettingScreen::HandleOnResetButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TGFSettingScreen", "HandleOnResetButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TGFSettingScreen.HandleSettingKeyBindingActivate
// (Final, Native, Protected)
// Parameters:
// class UTGFEventArgs*                    Args                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTGFSettingScreen::HandleSettingKeyBindingActivate(class UTGFEventArgs* Args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TGFSettingScreen", "HandleSettingKeyBindingActivate");

	Params::TGFSettingScreen_HandleSettingKeyBindingActivate Parms{};

	Parms.Args = Args;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TGFSettingScreen.HandleSettingKeyBindingDeactivate
// (Final, Native, Protected)
// Parameters:
// class UTGFEventArgs*                    Args                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTGFSettingScreen::HandleSettingKeyBindingDeactivate(class UTGFEventArgs* Args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TGFSettingScreen", "HandleSettingKeyBindingDeactivate");

	Params::TGFSettingScreen_HandleSettingKeyBindingDeactivate Parms{};

	Parms.Args = Args;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TGFSettingScreen.HandleToggleFullScreenCommand
// (Final, Native, Protected)
// Parameters:
// bool                                    bValue                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTGFSettingScreen::HandleToggleFullScreenCommand(bool bValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TGFSettingScreen", "HandleToggleFullScreenCommand");

	Params::TGFSettingScreen_HandleToggleFullScreenCommand Parms{};

	Parms.bValue = bValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TGFSettingScreen.NavigateToSettingTab
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class FName                             SettingDevName                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTGFSettingScreen::NavigateToSettingTab(class FName SettingDevName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TGFSettingScreen", "NavigateToSettingTab");

	Params::TGFSettingScreen_NavigateToSettingTab Parms{};

	Parms.SettingDevName = SettingDevName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TGFGame.TGFSettingScreen.GetMapName
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UTGFSettingScreen::GetMapName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TGFSettingScreen", "GetMapName");

	Params::TGFSettingScreen_GetMapName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

