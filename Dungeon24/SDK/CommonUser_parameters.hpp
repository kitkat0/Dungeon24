#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CommonUser

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "CommonUser_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "InputCore_structs.hpp"


namespace SDK::Params
{

// Function CommonUser.AsyncAction_CommonUserInitialize.InitializeForLocalPlay
// 0x0020 (0x0020 - 0x0000)
struct AsyncAction_CommonUserInitialize_InitializeForLocalPlay final
{
public:
	class UCommonUserSubsystem*                   Target;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         LocalPlayerIndex;                                  // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FInputDeviceId                         PrimaryInputDevice;                                // 0x000C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCanUseGuestLogin;                                 // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAsyncAction_CommonUserInitialize*      ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AsyncAction_CommonUserInitialize_InitializeForLocalPlay) == 0x000008, "Wrong alignment on AsyncAction_CommonUserInitialize_InitializeForLocalPlay");
static_assert(sizeof(AsyncAction_CommonUserInitialize_InitializeForLocalPlay) == 0x000020, "Wrong size on AsyncAction_CommonUserInitialize_InitializeForLocalPlay");
static_assert(offsetof(AsyncAction_CommonUserInitialize_InitializeForLocalPlay, Target) == 0x000000, "Member 'AsyncAction_CommonUserInitialize_InitializeForLocalPlay::Target' has a wrong offset!");
static_assert(offsetof(AsyncAction_CommonUserInitialize_InitializeForLocalPlay, LocalPlayerIndex) == 0x000008, "Member 'AsyncAction_CommonUserInitialize_InitializeForLocalPlay::LocalPlayerIndex' has a wrong offset!");
static_assert(offsetof(AsyncAction_CommonUserInitialize_InitializeForLocalPlay, PrimaryInputDevice) == 0x00000C, "Member 'AsyncAction_CommonUserInitialize_InitializeForLocalPlay::PrimaryInputDevice' has a wrong offset!");
static_assert(offsetof(AsyncAction_CommonUserInitialize_InitializeForLocalPlay, bCanUseGuestLogin) == 0x000010, "Member 'AsyncAction_CommonUserInitialize_InitializeForLocalPlay::bCanUseGuestLogin' has a wrong offset!");
static_assert(offsetof(AsyncAction_CommonUserInitialize_InitializeForLocalPlay, ReturnValue) == 0x000018, "Member 'AsyncAction_CommonUserInitialize_InitializeForLocalPlay::ReturnValue' has a wrong offset!");

// Function CommonUser.AsyncAction_CommonUserInitialize.LoginForOnlinePlay
// 0x0018 (0x0018 - 0x0000)
struct AsyncAction_CommonUserInitialize_LoginForOnlinePlay final
{
public:
	class UCommonUserSubsystem*                   Target;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         LocalPlayerIndex;                                  // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAsyncAction_CommonUserInitialize*      ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AsyncAction_CommonUserInitialize_LoginForOnlinePlay) == 0x000008, "Wrong alignment on AsyncAction_CommonUserInitialize_LoginForOnlinePlay");
static_assert(sizeof(AsyncAction_CommonUserInitialize_LoginForOnlinePlay) == 0x000018, "Wrong size on AsyncAction_CommonUserInitialize_LoginForOnlinePlay");
static_assert(offsetof(AsyncAction_CommonUserInitialize_LoginForOnlinePlay, Target) == 0x000000, "Member 'AsyncAction_CommonUserInitialize_LoginForOnlinePlay::Target' has a wrong offset!");
static_assert(offsetof(AsyncAction_CommonUserInitialize_LoginForOnlinePlay, LocalPlayerIndex) == 0x000008, "Member 'AsyncAction_CommonUserInitialize_LoginForOnlinePlay::LocalPlayerIndex' has a wrong offset!");
static_assert(offsetof(AsyncAction_CommonUserInitialize_LoginForOnlinePlay, ReturnValue) == 0x000010, "Member 'AsyncAction_CommonUserInitialize_LoginForOnlinePlay::ReturnValue' has a wrong offset!");

// Function CommonUser.AsyncAction_CommonUserInitialize.HandleInitializationComplete
// 0x0030 (0x0030 - 0x0000)
struct AsyncAction_CommonUserInitialize_HandleInitializationComplete final
{
public:
	const class UCommonUserInfo*                  UserInfo;                                          // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSuccess;                                          // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Error;                                             // 0x0010(0x0018)(Parm, NativeAccessSpecifierPublic)
	ECommonUserPrivilege                          RequestedPrivilege;                                // 0x0028(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ECommonUserOnlineContext                      OnlineContext;                                     // 0x0029(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(AsyncAction_CommonUserInitialize_HandleInitializationComplete) == 0x000008, "Wrong alignment on AsyncAction_CommonUserInitialize_HandleInitializationComplete");
static_assert(sizeof(AsyncAction_CommonUserInitialize_HandleInitializationComplete) == 0x000030, "Wrong size on AsyncAction_CommonUserInitialize_HandleInitializationComplete");
static_assert(offsetof(AsyncAction_CommonUserInitialize_HandleInitializationComplete, UserInfo) == 0x000000, "Member 'AsyncAction_CommonUserInitialize_HandleInitializationComplete::UserInfo' has a wrong offset!");
static_assert(offsetof(AsyncAction_CommonUserInitialize_HandleInitializationComplete, bSuccess) == 0x000008, "Member 'AsyncAction_CommonUserInitialize_HandleInitializationComplete::bSuccess' has a wrong offset!");
static_assert(offsetof(AsyncAction_CommonUserInitialize_HandleInitializationComplete, Error) == 0x000010, "Member 'AsyncAction_CommonUserInitialize_HandleInitializationComplete::Error' has a wrong offset!");
static_assert(offsetof(AsyncAction_CommonUserInitialize_HandleInitializationComplete, RequestedPrivilege) == 0x000028, "Member 'AsyncAction_CommonUserInitialize_HandleInitializationComplete::RequestedPrivilege' has a wrong offset!");
static_assert(offsetof(AsyncAction_CommonUserInitialize_HandleInitializationComplete, OnlineContext) == 0x000029, "Member 'AsyncAction_CommonUserInitialize_HandleInitializationComplete::OnlineContext' has a wrong offset!");

// Function CommonUser.CommonSession_SearchResult.GetDescription
// 0x0010 (0x0010 - 0x0000)
struct CommonSession_SearchResult_GetDescription final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonSession_SearchResult_GetDescription) == 0x000008, "Wrong alignment on CommonSession_SearchResult_GetDescription");
static_assert(sizeof(CommonSession_SearchResult_GetDescription) == 0x000010, "Wrong size on CommonSession_SearchResult_GetDescription");
static_assert(offsetof(CommonSession_SearchResult_GetDescription, ReturnValue) == 0x000000, "Member 'CommonSession_SearchResult_GetDescription::ReturnValue' has a wrong offset!");

// Function CommonUser.CommonSession_SearchResult.GetIntSetting
// 0x0010 (0x0010 - 0x0000)
struct CommonSession_SearchResult_GetIntSetting final
{
public:
	class FName                                   Key;                                               // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Value;                                             // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bFoundValue;                                       // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(CommonSession_SearchResult_GetIntSetting) == 0x000004, "Wrong alignment on CommonSession_SearchResult_GetIntSetting");
static_assert(sizeof(CommonSession_SearchResult_GetIntSetting) == 0x000010, "Wrong size on CommonSession_SearchResult_GetIntSetting");
static_assert(offsetof(CommonSession_SearchResult_GetIntSetting, Key) == 0x000000, "Member 'CommonSession_SearchResult_GetIntSetting::Key' has a wrong offset!");
static_assert(offsetof(CommonSession_SearchResult_GetIntSetting, Value) == 0x000008, "Member 'CommonSession_SearchResult_GetIntSetting::Value' has a wrong offset!");
static_assert(offsetof(CommonSession_SearchResult_GetIntSetting, bFoundValue) == 0x00000C, "Member 'CommonSession_SearchResult_GetIntSetting::bFoundValue' has a wrong offset!");

// Function CommonUser.CommonSession_SearchResult.GetMaxPublicConnections
// 0x0004 (0x0004 - 0x0000)
struct CommonSession_SearchResult_GetMaxPublicConnections final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonSession_SearchResult_GetMaxPublicConnections) == 0x000004, "Wrong alignment on CommonSession_SearchResult_GetMaxPublicConnections");
static_assert(sizeof(CommonSession_SearchResult_GetMaxPublicConnections) == 0x000004, "Wrong size on CommonSession_SearchResult_GetMaxPublicConnections");
static_assert(offsetof(CommonSession_SearchResult_GetMaxPublicConnections, ReturnValue) == 0x000000, "Member 'CommonSession_SearchResult_GetMaxPublicConnections::ReturnValue' has a wrong offset!");

// Function CommonUser.CommonSession_SearchResult.GetNumOpenPrivateConnections
// 0x0004 (0x0004 - 0x0000)
struct CommonSession_SearchResult_GetNumOpenPrivateConnections final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonSession_SearchResult_GetNumOpenPrivateConnections) == 0x000004, "Wrong alignment on CommonSession_SearchResult_GetNumOpenPrivateConnections");
static_assert(sizeof(CommonSession_SearchResult_GetNumOpenPrivateConnections) == 0x000004, "Wrong size on CommonSession_SearchResult_GetNumOpenPrivateConnections");
static_assert(offsetof(CommonSession_SearchResult_GetNumOpenPrivateConnections, ReturnValue) == 0x000000, "Member 'CommonSession_SearchResult_GetNumOpenPrivateConnections::ReturnValue' has a wrong offset!");

// Function CommonUser.CommonSession_SearchResult.GetNumOpenPublicConnections
// 0x0004 (0x0004 - 0x0000)
struct CommonSession_SearchResult_GetNumOpenPublicConnections final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonSession_SearchResult_GetNumOpenPublicConnections) == 0x000004, "Wrong alignment on CommonSession_SearchResult_GetNumOpenPublicConnections");
static_assert(sizeof(CommonSession_SearchResult_GetNumOpenPublicConnections) == 0x000004, "Wrong size on CommonSession_SearchResult_GetNumOpenPublicConnections");
static_assert(offsetof(CommonSession_SearchResult_GetNumOpenPublicConnections, ReturnValue) == 0x000000, "Member 'CommonSession_SearchResult_GetNumOpenPublicConnections::ReturnValue' has a wrong offset!");

// Function CommonUser.CommonSession_SearchResult.GetPingInMs
// 0x0004 (0x0004 - 0x0000)
struct CommonSession_SearchResult_GetPingInMs final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonSession_SearchResult_GetPingInMs) == 0x000004, "Wrong alignment on CommonSession_SearchResult_GetPingInMs");
static_assert(sizeof(CommonSession_SearchResult_GetPingInMs) == 0x000004, "Wrong size on CommonSession_SearchResult_GetPingInMs");
static_assert(offsetof(CommonSession_SearchResult_GetPingInMs, ReturnValue) == 0x000000, "Member 'CommonSession_SearchResult_GetPingInMs::ReturnValue' has a wrong offset!");

// Function CommonUser.CommonSession_SearchResult.GetStringSetting
// 0x0020 (0x0020 - 0x0000)
struct CommonSession_SearchResult_GetStringSetting final
{
public:
	class FName                                   Key;                                               // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Value;                                             // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bFoundValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(CommonSession_SearchResult_GetStringSetting) == 0x000008, "Wrong alignment on CommonSession_SearchResult_GetStringSetting");
static_assert(sizeof(CommonSession_SearchResult_GetStringSetting) == 0x000020, "Wrong size on CommonSession_SearchResult_GetStringSetting");
static_assert(offsetof(CommonSession_SearchResult_GetStringSetting, Key) == 0x000000, "Member 'CommonSession_SearchResult_GetStringSetting::Key' has a wrong offset!");
static_assert(offsetof(CommonSession_SearchResult_GetStringSetting, Value) == 0x000008, "Member 'CommonSession_SearchResult_GetStringSetting::Value' has a wrong offset!");
static_assert(offsetof(CommonSession_SearchResult_GetStringSetting, bFoundValue) == 0x000018, "Member 'CommonSession_SearchResult_GetStringSetting::bFoundValue' has a wrong offset!");

// Function CommonUser.CommonSessionSubsystem.CreateOnlineHostSessionRequest
// 0x0008 (0x0008 - 0x0000)
struct CommonSessionSubsystem_CreateOnlineHostSessionRequest final
{
public:
	class UCommonSession_HostSessionRequest*      ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonSessionSubsystem_CreateOnlineHostSessionRequest) == 0x000008, "Wrong alignment on CommonSessionSubsystem_CreateOnlineHostSessionRequest");
static_assert(sizeof(CommonSessionSubsystem_CreateOnlineHostSessionRequest) == 0x000008, "Wrong size on CommonSessionSubsystem_CreateOnlineHostSessionRequest");
static_assert(offsetof(CommonSessionSubsystem_CreateOnlineHostSessionRequest, ReturnValue) == 0x000000, "Member 'CommonSessionSubsystem_CreateOnlineHostSessionRequest::ReturnValue' has a wrong offset!");

// Function CommonUser.CommonSessionSubsystem.CreateOnlineSearchSessionRequest
// 0x0008 (0x0008 - 0x0000)
struct CommonSessionSubsystem_CreateOnlineSearchSessionRequest final
{
public:
	class UCommonSession_SearchSessionRequest*    ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonSessionSubsystem_CreateOnlineSearchSessionRequest) == 0x000008, "Wrong alignment on CommonSessionSubsystem_CreateOnlineSearchSessionRequest");
static_assert(sizeof(CommonSessionSubsystem_CreateOnlineSearchSessionRequest) == 0x000008, "Wrong size on CommonSessionSubsystem_CreateOnlineSearchSessionRequest");
static_assert(offsetof(CommonSessionSubsystem_CreateOnlineSearchSessionRequest, ReturnValue) == 0x000000, "Member 'CommonSessionSubsystem_CreateOnlineSearchSessionRequest::ReturnValue' has a wrong offset!");

// Function CommonUser.CommonSessionSubsystem.FindSessions
// 0x0010 (0x0010 - 0x0000)
struct CommonSessionSubsystem_FindSessions final
{
public:
	class APlayerController*                      SearchingPlayer;                                   // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCommonSession_SearchSessionRequest*    Request;                                           // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonSessionSubsystem_FindSessions) == 0x000008, "Wrong alignment on CommonSessionSubsystem_FindSessions");
static_assert(sizeof(CommonSessionSubsystem_FindSessions) == 0x000010, "Wrong size on CommonSessionSubsystem_FindSessions");
static_assert(offsetof(CommonSessionSubsystem_FindSessions, SearchingPlayer) == 0x000000, "Member 'CommonSessionSubsystem_FindSessions::SearchingPlayer' has a wrong offset!");
static_assert(offsetof(CommonSessionSubsystem_FindSessions, Request) == 0x000008, "Member 'CommonSessionSubsystem_FindSessions::Request' has a wrong offset!");

// Function CommonUser.CommonSessionSubsystem.HostSession
// 0x0010 (0x0010 - 0x0000)
struct CommonSessionSubsystem_HostSession final
{
public:
	class APlayerController*                      HostingPlayer;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCommonSession_HostSessionRequest*      Request;                                           // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonSessionSubsystem_HostSession) == 0x000008, "Wrong alignment on CommonSessionSubsystem_HostSession");
static_assert(sizeof(CommonSessionSubsystem_HostSession) == 0x000010, "Wrong size on CommonSessionSubsystem_HostSession");
static_assert(offsetof(CommonSessionSubsystem_HostSession, HostingPlayer) == 0x000000, "Member 'CommonSessionSubsystem_HostSession::HostingPlayer' has a wrong offset!");
static_assert(offsetof(CommonSessionSubsystem_HostSession, Request) == 0x000008, "Member 'CommonSessionSubsystem_HostSession::Request' has a wrong offset!");

// Function CommonUser.CommonSessionSubsystem.JoinSession
// 0x0010 (0x0010 - 0x0000)
struct CommonSessionSubsystem_JoinSession final
{
public:
	class APlayerController*                      JoiningPlayer;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCommonSession_SearchResult*            Request;                                           // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonSessionSubsystem_JoinSession) == 0x000008, "Wrong alignment on CommonSessionSubsystem_JoinSession");
static_assert(sizeof(CommonSessionSubsystem_JoinSession) == 0x000010, "Wrong size on CommonSessionSubsystem_JoinSession");
static_assert(offsetof(CommonSessionSubsystem_JoinSession, JoiningPlayer) == 0x000000, "Member 'CommonSessionSubsystem_JoinSession::JoiningPlayer' has a wrong offset!");
static_assert(offsetof(CommonSessionSubsystem_JoinSession, Request) == 0x000008, "Member 'CommonSessionSubsystem_JoinSession::Request' has a wrong offset!");

// Function CommonUser.CommonSessionSubsystem.QuickPlaySession
// 0x0010 (0x0010 - 0x0000)
struct CommonSessionSubsystem_QuickPlaySession final
{
public:
	class APlayerController*                      JoiningOrHostingPlayer;                            // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCommonSession_HostSessionRequest*      Request;                                           // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonSessionSubsystem_QuickPlaySession) == 0x000008, "Wrong alignment on CommonSessionSubsystem_QuickPlaySession");
static_assert(sizeof(CommonSessionSubsystem_QuickPlaySession) == 0x000010, "Wrong size on CommonSessionSubsystem_QuickPlaySession");
static_assert(offsetof(CommonSessionSubsystem_QuickPlaySession, JoiningOrHostingPlayer) == 0x000000, "Member 'CommonSessionSubsystem_QuickPlaySession::JoiningOrHostingPlayer' has a wrong offset!");
static_assert(offsetof(CommonSessionSubsystem_QuickPlaySession, Request) == 0x000008, "Member 'CommonSessionSubsystem_QuickPlaySession::Request' has a wrong offset!");

// Function CommonUser.CommonUserInfo.GetCachedPrivilegeResult
// 0x0003 (0x0003 - 0x0000)
struct CommonUserInfo_GetCachedPrivilegeResult final
{
public:
	ECommonUserPrivilege                          Privilege;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ECommonUserOnlineContext                      Context;                                           // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ECommonUserPrivilegeResult                    ReturnValue;                                       // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonUserInfo_GetCachedPrivilegeResult) == 0x000001, "Wrong alignment on CommonUserInfo_GetCachedPrivilegeResult");
static_assert(sizeof(CommonUserInfo_GetCachedPrivilegeResult) == 0x000003, "Wrong size on CommonUserInfo_GetCachedPrivilegeResult");
static_assert(offsetof(CommonUserInfo_GetCachedPrivilegeResult, Privilege) == 0x000000, "Member 'CommonUserInfo_GetCachedPrivilegeResult::Privilege' has a wrong offset!");
static_assert(offsetof(CommonUserInfo_GetCachedPrivilegeResult, Context) == 0x000001, "Member 'CommonUserInfo_GetCachedPrivilegeResult::Context' has a wrong offset!");
static_assert(offsetof(CommonUserInfo_GetCachedPrivilegeResult, ReturnValue) == 0x000002, "Member 'CommonUserInfo_GetCachedPrivilegeResult::ReturnValue' has a wrong offset!");

// Function CommonUser.CommonUserInfo.GetDebugString
// 0x0010 (0x0010 - 0x0000)
struct CommonUserInfo_GetDebugString final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonUserInfo_GetDebugString) == 0x000008, "Wrong alignment on CommonUserInfo_GetDebugString");
static_assert(sizeof(CommonUserInfo_GetDebugString) == 0x000010, "Wrong size on CommonUserInfo_GetDebugString");
static_assert(offsetof(CommonUserInfo_GetDebugString, ReturnValue) == 0x000000, "Member 'CommonUserInfo_GetDebugString::ReturnValue' has a wrong offset!");

// Function CommonUser.CommonUserInfo.GetNetId
// 0x0038 (0x0038 - 0x0000)
struct CommonUserInfo_GetNetId final
{
public:
	ECommonUserOnlineContext                      Context;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUniqueNetIdRepl                       ReturnValue;                                       // 0x0008(0x0030)(Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonUserInfo_GetNetId) == 0x000008, "Wrong alignment on CommonUserInfo_GetNetId");
static_assert(sizeof(CommonUserInfo_GetNetId) == 0x000038, "Wrong size on CommonUserInfo_GetNetId");
static_assert(offsetof(CommonUserInfo_GetNetId, Context) == 0x000000, "Member 'CommonUserInfo_GetNetId::Context' has a wrong offset!");
static_assert(offsetof(CommonUserInfo_GetNetId, ReturnValue) == 0x000008, "Member 'CommonUserInfo_GetNetId::ReturnValue' has a wrong offset!");

// Function CommonUser.CommonUserInfo.GetNickname
// 0x0010 (0x0010 - 0x0000)
struct CommonUserInfo_GetNickname final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonUserInfo_GetNickname) == 0x000008, "Wrong alignment on CommonUserInfo_GetNickname");
static_assert(sizeof(CommonUserInfo_GetNickname) == 0x000010, "Wrong size on CommonUserInfo_GetNickname");
static_assert(offsetof(CommonUserInfo_GetNickname, ReturnValue) == 0x000000, "Member 'CommonUserInfo_GetNickname::ReturnValue' has a wrong offset!");

// Function CommonUser.CommonUserInfo.GetPrivilegeAvailability
// 0x0002 (0x0002 - 0x0000)
struct CommonUserInfo_GetPrivilegeAvailability final
{
public:
	ECommonUserPrivilege                          Privilege;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ECommonUserAvailability                       ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonUserInfo_GetPrivilegeAvailability) == 0x000001, "Wrong alignment on CommonUserInfo_GetPrivilegeAvailability");
static_assert(sizeof(CommonUserInfo_GetPrivilegeAvailability) == 0x000002, "Wrong size on CommonUserInfo_GetPrivilegeAvailability");
static_assert(offsetof(CommonUserInfo_GetPrivilegeAvailability, Privilege) == 0x000000, "Member 'CommonUserInfo_GetPrivilegeAvailability::Privilege' has a wrong offset!");
static_assert(offsetof(CommonUserInfo_GetPrivilegeAvailability, ReturnValue) == 0x000001, "Member 'CommonUserInfo_GetPrivilegeAvailability::ReturnValue' has a wrong offset!");

// Function CommonUser.CommonUserSubsystem.CancelUserInitialization
// 0x0008 (0x0008 - 0x0000)
struct CommonUserSubsystem_CancelUserInitialization final
{
public:
	int32                                         LocalPlayerIndex;                                  // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(CommonUserSubsystem_CancelUserInitialization) == 0x000004, "Wrong alignment on CommonUserSubsystem_CancelUserInitialization");
static_assert(sizeof(CommonUserSubsystem_CancelUserInitialization) == 0x000008, "Wrong size on CommonUserSubsystem_CancelUserInitialization");
static_assert(offsetof(CommonUserSubsystem_CancelUserInitialization, LocalPlayerIndex) == 0x000000, "Member 'CommonUserSubsystem_CancelUserInitialization::LocalPlayerIndex' has a wrong offset!");
static_assert(offsetof(CommonUserSubsystem_CancelUserInitialization, ReturnValue) == 0x000004, "Member 'CommonUserSubsystem_CancelUserInitialization::ReturnValue' has a wrong offset!");

// Function CommonUser.CommonUserSubsystem.ListenForLoginKeyInput
// 0x0048 (0x0048 - 0x0000)
struct CommonUserSubsystem_ListenForLoginKeyInput final
{
public:
	TArray<struct FKey>                           AnyUserKeys;                                       // 0x0000(0x0010)(Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FKey>                           NewUserKeys;                                       // 0x0010(0x0010)(Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FCommonUserInitializeParams            Params_0;                                          // 0x0020(0x0028)(Parm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonUserSubsystem_ListenForLoginKeyInput) == 0x000008, "Wrong alignment on CommonUserSubsystem_ListenForLoginKeyInput");
static_assert(sizeof(CommonUserSubsystem_ListenForLoginKeyInput) == 0x000048, "Wrong size on CommonUserSubsystem_ListenForLoginKeyInput");
static_assert(offsetof(CommonUserSubsystem_ListenForLoginKeyInput, AnyUserKeys) == 0x000000, "Member 'CommonUserSubsystem_ListenForLoginKeyInput::AnyUserKeys' has a wrong offset!");
static_assert(offsetof(CommonUserSubsystem_ListenForLoginKeyInput, NewUserKeys) == 0x000010, "Member 'CommonUserSubsystem_ListenForLoginKeyInput::NewUserKeys' has a wrong offset!");
static_assert(offsetof(CommonUserSubsystem_ListenForLoginKeyInput, Params_0) == 0x000020, "Member 'CommonUserSubsystem_ListenForLoginKeyInput::Params_0' has a wrong offset!");

// Function CommonUser.CommonUserSubsystem.SendSystemMessage
// 0x0038 (0x0038 - 0x0000)
struct CommonUserSubsystem_SendSystemMessage final
{
public:
	struct FGameplayTag                           MessageType;                                       // 0x0000(0x0008)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   TitleText;                                         // 0x0008(0x0018)(Parm, NativeAccessSpecifierPublic)
	class FText                                   BodyText;                                          // 0x0020(0x0018)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonUserSubsystem_SendSystemMessage) == 0x000008, "Wrong alignment on CommonUserSubsystem_SendSystemMessage");
static_assert(sizeof(CommonUserSubsystem_SendSystemMessage) == 0x000038, "Wrong size on CommonUserSubsystem_SendSystemMessage");
static_assert(offsetof(CommonUserSubsystem_SendSystemMessage, MessageType) == 0x000000, "Member 'CommonUserSubsystem_SendSystemMessage::MessageType' has a wrong offset!");
static_assert(offsetof(CommonUserSubsystem_SendSystemMessage, TitleText) == 0x000008, "Member 'CommonUserSubsystem_SendSystemMessage::TitleText' has a wrong offset!");
static_assert(offsetof(CommonUserSubsystem_SendSystemMessage, BodyText) == 0x000020, "Member 'CommonUserSubsystem_SendSystemMessage::BodyText' has a wrong offset!");

// Function CommonUser.CommonUserSubsystem.SetMaxLocalPlayers
// 0x0004 (0x0004 - 0x0000)
struct CommonUserSubsystem_SetMaxLocalPlayers final
{
public:
	int32                                         InMaxLocalPLayers;                                 // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonUserSubsystem_SetMaxLocalPlayers) == 0x000004, "Wrong alignment on CommonUserSubsystem_SetMaxLocalPlayers");
static_assert(sizeof(CommonUserSubsystem_SetMaxLocalPlayers) == 0x000004, "Wrong size on CommonUserSubsystem_SetMaxLocalPlayers");
static_assert(offsetof(CommonUserSubsystem_SetMaxLocalPlayers, InMaxLocalPLayers) == 0x000000, "Member 'CommonUserSubsystem_SetMaxLocalPlayers::InMaxLocalPLayers' has a wrong offset!");

// Function CommonUser.CommonUserSubsystem.TryToInitializeForLocalPlay
// 0x000C (0x000C - 0x0000)
struct CommonUserSubsystem_TryToInitializeForLocalPlay final
{
public:
	int32                                         LocalPlayerIndex;                                  // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FInputDeviceId                         PrimaryInputDevice;                                // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCanUseGuestLogin;                                 // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(CommonUserSubsystem_TryToInitializeForLocalPlay) == 0x000004, "Wrong alignment on CommonUserSubsystem_TryToInitializeForLocalPlay");
static_assert(sizeof(CommonUserSubsystem_TryToInitializeForLocalPlay) == 0x00000C, "Wrong size on CommonUserSubsystem_TryToInitializeForLocalPlay");
static_assert(offsetof(CommonUserSubsystem_TryToInitializeForLocalPlay, LocalPlayerIndex) == 0x000000, "Member 'CommonUserSubsystem_TryToInitializeForLocalPlay::LocalPlayerIndex' has a wrong offset!");
static_assert(offsetof(CommonUserSubsystem_TryToInitializeForLocalPlay, PrimaryInputDevice) == 0x000004, "Member 'CommonUserSubsystem_TryToInitializeForLocalPlay::PrimaryInputDevice' has a wrong offset!");
static_assert(offsetof(CommonUserSubsystem_TryToInitializeForLocalPlay, bCanUseGuestLogin) == 0x000008, "Member 'CommonUserSubsystem_TryToInitializeForLocalPlay::bCanUseGuestLogin' has a wrong offset!");
static_assert(offsetof(CommonUserSubsystem_TryToInitializeForLocalPlay, ReturnValue) == 0x000009, "Member 'CommonUserSubsystem_TryToInitializeForLocalPlay::ReturnValue' has a wrong offset!");

// Function CommonUser.CommonUserSubsystem.TryToInitializeUser
// 0x002C (0x002C - 0x0000)
struct CommonUserSubsystem_TryToInitializeUser final
{
public:
	struct FCommonUserInitializeParams            Params_0;                                          // 0x0000(0x0028)(Parm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0028(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(CommonUserSubsystem_TryToInitializeUser) == 0x000004, "Wrong alignment on CommonUserSubsystem_TryToInitializeUser");
static_assert(sizeof(CommonUserSubsystem_TryToInitializeUser) == 0x00002C, "Wrong size on CommonUserSubsystem_TryToInitializeUser");
static_assert(offsetof(CommonUserSubsystem_TryToInitializeUser, Params_0) == 0x000000, "Member 'CommonUserSubsystem_TryToInitializeUser::Params_0' has a wrong offset!");
static_assert(offsetof(CommonUserSubsystem_TryToInitializeUser, ReturnValue) == 0x000028, "Member 'CommonUserSubsystem_TryToInitializeUser::ReturnValue' has a wrong offset!");

// Function CommonUser.CommonUserSubsystem.TryToLoginForOnlinePlay
// 0x0008 (0x0008 - 0x0000)
struct CommonUserSubsystem_TryToLoginForOnlinePlay final
{
public:
	int32                                         LocalPlayerIndex;                                  // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(CommonUserSubsystem_TryToLoginForOnlinePlay) == 0x000004, "Wrong alignment on CommonUserSubsystem_TryToLoginForOnlinePlay");
static_assert(sizeof(CommonUserSubsystem_TryToLoginForOnlinePlay) == 0x000008, "Wrong size on CommonUserSubsystem_TryToLoginForOnlinePlay");
static_assert(offsetof(CommonUserSubsystem_TryToLoginForOnlinePlay, LocalPlayerIndex) == 0x000000, "Member 'CommonUserSubsystem_TryToLoginForOnlinePlay::LocalPlayerIndex' has a wrong offset!");
static_assert(offsetof(CommonUserSubsystem_TryToLoginForOnlinePlay, ReturnValue) == 0x000004, "Member 'CommonUserSubsystem_TryToLoginForOnlinePlay::ReturnValue' has a wrong offset!");

// Function CommonUser.CommonUserSubsystem.GetLocalPlayerInitializationState
// 0x0008 (0x0008 - 0x0000)
struct CommonUserSubsystem_GetLocalPlayerInitializationState final
{
public:
	int32                                         LocalPlayerIndex;                                  // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ECommonUserInitializationState                ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(CommonUserSubsystem_GetLocalPlayerInitializationState) == 0x000004, "Wrong alignment on CommonUserSubsystem_GetLocalPlayerInitializationState");
static_assert(sizeof(CommonUserSubsystem_GetLocalPlayerInitializationState) == 0x000008, "Wrong size on CommonUserSubsystem_GetLocalPlayerInitializationState");
static_assert(offsetof(CommonUserSubsystem_GetLocalPlayerInitializationState, LocalPlayerIndex) == 0x000000, "Member 'CommonUserSubsystem_GetLocalPlayerInitializationState::LocalPlayerIndex' has a wrong offset!");
static_assert(offsetof(CommonUserSubsystem_GetLocalPlayerInitializationState, ReturnValue) == 0x000004, "Member 'CommonUserSubsystem_GetLocalPlayerInitializationState::ReturnValue' has a wrong offset!");

// Function CommonUser.CommonUserSubsystem.GetMaxLocalPlayers
// 0x0004 (0x0004 - 0x0000)
struct CommonUserSubsystem_GetMaxLocalPlayers final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonUserSubsystem_GetMaxLocalPlayers) == 0x000004, "Wrong alignment on CommonUserSubsystem_GetMaxLocalPlayers");
static_assert(sizeof(CommonUserSubsystem_GetMaxLocalPlayers) == 0x000004, "Wrong size on CommonUserSubsystem_GetMaxLocalPlayers");
static_assert(offsetof(CommonUserSubsystem_GetMaxLocalPlayers, ReturnValue) == 0x000000, "Member 'CommonUserSubsystem_GetMaxLocalPlayers::ReturnValue' has a wrong offset!");

// Function CommonUser.CommonUserSubsystem.GetNumLocalPlayers
// 0x0004 (0x0004 - 0x0000)
struct CommonUserSubsystem_GetNumLocalPlayers final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonUserSubsystem_GetNumLocalPlayers) == 0x000004, "Wrong alignment on CommonUserSubsystem_GetNumLocalPlayers");
static_assert(sizeof(CommonUserSubsystem_GetNumLocalPlayers) == 0x000004, "Wrong size on CommonUserSubsystem_GetNumLocalPlayers");
static_assert(offsetof(CommonUserSubsystem_GetNumLocalPlayers, ReturnValue) == 0x000000, "Member 'CommonUserSubsystem_GetNumLocalPlayers::ReturnValue' has a wrong offset!");

// Function CommonUser.CommonUserSubsystem.GetUserInfoForControllerId
// 0x0010 (0x0010 - 0x0000)
struct CommonUserSubsystem_GetUserInfoForControllerId final
{
public:
	int32                                         ControllerId;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UCommonUserInfo*                  ReturnValue;                                       // 0x0008(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonUserSubsystem_GetUserInfoForControllerId) == 0x000008, "Wrong alignment on CommonUserSubsystem_GetUserInfoForControllerId");
static_assert(sizeof(CommonUserSubsystem_GetUserInfoForControllerId) == 0x000010, "Wrong size on CommonUserSubsystem_GetUserInfoForControllerId");
static_assert(offsetof(CommonUserSubsystem_GetUserInfoForControllerId, ControllerId) == 0x000000, "Member 'CommonUserSubsystem_GetUserInfoForControllerId::ControllerId' has a wrong offset!");
static_assert(offsetof(CommonUserSubsystem_GetUserInfoForControllerId, ReturnValue) == 0x000008, "Member 'CommonUserSubsystem_GetUserInfoForControllerId::ReturnValue' has a wrong offset!");

// Function CommonUser.CommonUserSubsystem.GetUserInfoForInputDevice
// 0x0010 (0x0010 - 0x0000)
struct CommonUserSubsystem_GetUserInfoForInputDevice final
{
public:
	struct FInputDeviceId                         InputDevice;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UCommonUserInfo*                  ReturnValue;                                       // 0x0008(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonUserSubsystem_GetUserInfoForInputDevice) == 0x000008, "Wrong alignment on CommonUserSubsystem_GetUserInfoForInputDevice");
static_assert(sizeof(CommonUserSubsystem_GetUserInfoForInputDevice) == 0x000010, "Wrong size on CommonUserSubsystem_GetUserInfoForInputDevice");
static_assert(offsetof(CommonUserSubsystem_GetUserInfoForInputDevice, InputDevice) == 0x000000, "Member 'CommonUserSubsystem_GetUserInfoForInputDevice::InputDevice' has a wrong offset!");
static_assert(offsetof(CommonUserSubsystem_GetUserInfoForInputDevice, ReturnValue) == 0x000008, "Member 'CommonUserSubsystem_GetUserInfoForInputDevice::ReturnValue' has a wrong offset!");

// Function CommonUser.CommonUserSubsystem.GetUserInfoForLocalPlayerIndex
// 0x0010 (0x0010 - 0x0000)
struct CommonUserSubsystem_GetUserInfoForLocalPlayerIndex final
{
public:
	int32                                         LocalPlayerIndex;                                  // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UCommonUserInfo*                  ReturnValue;                                       // 0x0008(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonUserSubsystem_GetUserInfoForLocalPlayerIndex) == 0x000008, "Wrong alignment on CommonUserSubsystem_GetUserInfoForLocalPlayerIndex");
static_assert(sizeof(CommonUserSubsystem_GetUserInfoForLocalPlayerIndex) == 0x000010, "Wrong size on CommonUserSubsystem_GetUserInfoForLocalPlayerIndex");
static_assert(offsetof(CommonUserSubsystem_GetUserInfoForLocalPlayerIndex, LocalPlayerIndex) == 0x000000, "Member 'CommonUserSubsystem_GetUserInfoForLocalPlayerIndex::LocalPlayerIndex' has a wrong offset!");
static_assert(offsetof(CommonUserSubsystem_GetUserInfoForLocalPlayerIndex, ReturnValue) == 0x000008, "Member 'CommonUserSubsystem_GetUserInfoForLocalPlayerIndex::ReturnValue' has a wrong offset!");

// Function CommonUser.CommonUserSubsystem.GetUserInfoForPlatformUser
// 0x0010 (0x0010 - 0x0000)
struct CommonUserSubsystem_GetUserInfoForPlatformUser final
{
public:
	struct FPlatformUserId                        PlatformUser;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UCommonUserInfo*                  ReturnValue;                                       // 0x0008(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonUserSubsystem_GetUserInfoForPlatformUser) == 0x000008, "Wrong alignment on CommonUserSubsystem_GetUserInfoForPlatformUser");
static_assert(sizeof(CommonUserSubsystem_GetUserInfoForPlatformUser) == 0x000010, "Wrong size on CommonUserSubsystem_GetUserInfoForPlatformUser");
static_assert(offsetof(CommonUserSubsystem_GetUserInfoForPlatformUser, PlatformUser) == 0x000000, "Member 'CommonUserSubsystem_GetUserInfoForPlatformUser::PlatformUser' has a wrong offset!");
static_assert(offsetof(CommonUserSubsystem_GetUserInfoForPlatformUser, ReturnValue) == 0x000008, "Member 'CommonUserSubsystem_GetUserInfoForPlatformUser::ReturnValue' has a wrong offset!");

// Function CommonUser.CommonUserSubsystem.GetUserInfoForPlatformUserIndex
// 0x0010 (0x0010 - 0x0000)
struct CommonUserSubsystem_GetUserInfoForPlatformUserIndex final
{
public:
	int32                                         PlatformUserIndex;                                 // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UCommonUserInfo*                  ReturnValue;                                       // 0x0008(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonUserSubsystem_GetUserInfoForPlatformUserIndex) == 0x000008, "Wrong alignment on CommonUserSubsystem_GetUserInfoForPlatformUserIndex");
static_assert(sizeof(CommonUserSubsystem_GetUserInfoForPlatformUserIndex) == 0x000010, "Wrong size on CommonUserSubsystem_GetUserInfoForPlatformUserIndex");
static_assert(offsetof(CommonUserSubsystem_GetUserInfoForPlatformUserIndex, PlatformUserIndex) == 0x000000, "Member 'CommonUserSubsystem_GetUserInfoForPlatformUserIndex::PlatformUserIndex' has a wrong offset!");
static_assert(offsetof(CommonUserSubsystem_GetUserInfoForPlatformUserIndex, ReturnValue) == 0x000008, "Member 'CommonUserSubsystem_GetUserInfoForPlatformUserIndex::ReturnValue' has a wrong offset!");

// Function CommonUser.CommonUserSubsystem.GetUserInfoForUniqueNetId
// 0x0038 (0x0038 - 0x0000)
struct CommonUserSubsystem_GetUserInfoForUniqueNetId final
{
public:
	struct FUniqueNetIdRepl                       NetId;                                             // 0x0000(0x0030)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class UCommonUserInfo*                  ReturnValue;                                       // 0x0030(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonUserSubsystem_GetUserInfoForUniqueNetId) == 0x000008, "Wrong alignment on CommonUserSubsystem_GetUserInfoForUniqueNetId");
static_assert(sizeof(CommonUserSubsystem_GetUserInfoForUniqueNetId) == 0x000038, "Wrong size on CommonUserSubsystem_GetUserInfoForUniqueNetId");
static_assert(offsetof(CommonUserSubsystem_GetUserInfoForUniqueNetId, NetId) == 0x000000, "Member 'CommonUserSubsystem_GetUserInfoForUniqueNetId::NetId' has a wrong offset!");
static_assert(offsetof(CommonUserSubsystem_GetUserInfoForUniqueNetId, ReturnValue) == 0x000030, "Member 'CommonUserSubsystem_GetUserInfoForUniqueNetId::ReturnValue' has a wrong offset!");

// Function CommonUser.CommonUserSubsystem.HasTraitTag
// 0x000C (0x000C - 0x0000)
struct CommonUserSubsystem_HasTraitTag final
{
public:
	struct FGameplayTag                           TraitTag;                                          // 0x0000(0x0008)(ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(CommonUserSubsystem_HasTraitTag) == 0x000004, "Wrong alignment on CommonUserSubsystem_HasTraitTag");
static_assert(sizeof(CommonUserSubsystem_HasTraitTag) == 0x00000C, "Wrong size on CommonUserSubsystem_HasTraitTag");
static_assert(offsetof(CommonUserSubsystem_HasTraitTag, TraitTag) == 0x000000, "Member 'CommonUserSubsystem_HasTraitTag::TraitTag' has a wrong offset!");
static_assert(offsetof(CommonUserSubsystem_HasTraitTag, ReturnValue) == 0x000008, "Member 'CommonUserSubsystem_HasTraitTag::ReturnValue' has a wrong offset!");

// Function CommonUser.CommonUserSubsystem.ShouldWaitForStartInput
// 0x0001 (0x0001 - 0x0000)
struct CommonUserSubsystem_ShouldWaitForStartInput final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonUserSubsystem_ShouldWaitForStartInput) == 0x000001, "Wrong alignment on CommonUserSubsystem_ShouldWaitForStartInput");
static_assert(sizeof(CommonUserSubsystem_ShouldWaitForStartInput) == 0x000001, "Wrong size on CommonUserSubsystem_ShouldWaitForStartInput");
static_assert(offsetof(CommonUserSubsystem_ShouldWaitForStartInput, ReturnValue) == 0x000000, "Member 'CommonUserSubsystem_ShouldWaitForStartInput::ReturnValue' has a wrong offset!");

}

