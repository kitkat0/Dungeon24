#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AbilitySelectionComponent

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "LyraGame_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_AbilitySelectionComponent.BP_AbilitySelectionComponent_C.CheckAndSwitchTarget
// 0x0048 (0x0048 - 0x0000)
struct BP_AbilitySelectionComponent_C_CheckAndSwitchTarget final
{
public:
	class AActor*                                 OldTarget;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 NewTarget;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 NewActor;                                          // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OldActor;                                          // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23[0x5];                                       // 0x0023(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Tgf_Character_Default_C*            K2Node_DynamicCast_AsBP_Tgf_Character_Default;     // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Tgf_Character_Default_C*            K2Node_DynamicCast_AsBP_Tgf_Character_Default_1;   // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AbilitySelectionComponent_C_CheckAndSwitchTarget) == 0x000008, "Wrong alignment on BP_AbilitySelectionComponent_C_CheckAndSwitchTarget");
static_assert(sizeof(BP_AbilitySelectionComponent_C_CheckAndSwitchTarget) == 0x000048, "Wrong size on BP_AbilitySelectionComponent_C_CheckAndSwitchTarget");
static_assert(offsetof(BP_AbilitySelectionComponent_C_CheckAndSwitchTarget, OldTarget) == 0x000000, "Member 'BP_AbilitySelectionComponent_C_CheckAndSwitchTarget::OldTarget' has a wrong offset!");
static_assert(offsetof(BP_AbilitySelectionComponent_C_CheckAndSwitchTarget, NewTarget) == 0x000008, "Member 'BP_AbilitySelectionComponent_C_CheckAndSwitchTarget::NewTarget' has a wrong offset!");
static_assert(offsetof(BP_AbilitySelectionComponent_C_CheckAndSwitchTarget, NewActor) == 0x000010, "Member 'BP_AbilitySelectionComponent_C_CheckAndSwitchTarget::NewActor' has a wrong offset!");
static_assert(offsetof(BP_AbilitySelectionComponent_C_CheckAndSwitchTarget, OldActor) == 0x000018, "Member 'BP_AbilitySelectionComponent_C_CheckAndSwitchTarget::OldActor' has a wrong offset!");
static_assert(offsetof(BP_AbilitySelectionComponent_C_CheckAndSwitchTarget, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000020, "Member 'BP_AbilitySelectionComponent_C_CheckAndSwitchTarget::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AbilitySelectionComponent_C_CheckAndSwitchTarget, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'BP_AbilitySelectionComponent_C_CheckAndSwitchTarget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AbilitySelectionComponent_C_CheckAndSwitchTarget, CallFunc_IsValid_ReturnValue_1) == 0x000022, "Member 'BP_AbilitySelectionComponent_C_CheckAndSwitchTarget::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AbilitySelectionComponent_C_CheckAndSwitchTarget, K2Node_DynamicCast_AsBP_Tgf_Character_Default) == 0x000028, "Member 'BP_AbilitySelectionComponent_C_CheckAndSwitchTarget::K2Node_DynamicCast_AsBP_Tgf_Character_Default' has a wrong offset!");
static_assert(offsetof(BP_AbilitySelectionComponent_C_CheckAndSwitchTarget, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_AbilitySelectionComponent_C_CheckAndSwitchTarget::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AbilitySelectionComponent_C_CheckAndSwitchTarget, K2Node_DynamicCast_AsBP_Tgf_Character_Default_1) == 0x000038, "Member 'BP_AbilitySelectionComponent_C_CheckAndSwitchTarget::K2Node_DynamicCast_AsBP_Tgf_Character_Default_1' has a wrong offset!");
static_assert(offsetof(BP_AbilitySelectionComponent_C_CheckAndSwitchTarget, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'BP_AbilitySelectionComponent_C_CheckAndSwitchTarget::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function BP_AbilitySelectionComponent.BP_AbilitySelectionComponent_C.CheckValidBase
// 0x0030 (0x0030 - 0x0000)
struct BP_AbilitySelectionComponent_C_CheckValidBase final
{
public:
	bool                                          CheckResult;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue;   // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActorInWaitingRoom_Result;              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface; // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAllMatchingGameplayTags_ReturnValue;   // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ALyraCharacter*                         K2Node_DynamicCast_AsLyra_Character;               // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanBeTarget_Result;                       // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDeadOrDying_ReturnValue;                // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AbilitySelectionComponent_C_CheckValidBase) == 0x000008, "Wrong alignment on BP_AbilitySelectionComponent_C_CheckValidBase");
static_assert(sizeof(BP_AbilitySelectionComponent_C_CheckValidBase) == 0x000030, "Wrong size on BP_AbilitySelectionComponent_C_CheckValidBase");
static_assert(offsetof(BP_AbilitySelectionComponent_C_CheckValidBase, CheckResult) == 0x000000, "Member 'BP_AbilitySelectionComponent_C_CheckValidBase::CheckResult' has a wrong offset!");
static_assert(offsetof(BP_AbilitySelectionComponent_C_CheckValidBase, CallFunc_HasAnyMatchingGameplayTags_ReturnValue) == 0x000001, "Member 'BP_AbilitySelectionComponent_C_CheckValidBase::CallFunc_HasAnyMatchingGameplayTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AbilitySelectionComponent_C_CheckValidBase, CallFunc_IsActorInWaitingRoom_Result) == 0x000002, "Member 'BP_AbilitySelectionComponent_C_CheckValidBase::CallFunc_IsActorInWaitingRoom_Result' has a wrong offset!");
static_assert(offsetof(BP_AbilitySelectionComponent_C_CheckValidBase, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x000003, "Member 'BP_AbilitySelectionComponent_C_CheckValidBase::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AbilitySelectionComponent_C_CheckValidBase, CallFunc_Not_PreBool_ReturnValue) == 0x000004, "Member 'BP_AbilitySelectionComponent_C_CheckValidBase::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AbilitySelectionComponent_C_CheckValidBase, CallFunc_BooleanAND_ReturnValue) == 0x000005, "Member 'BP_AbilitySelectionComponent_C_CheckValidBase::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AbilitySelectionComponent_C_CheckValidBase, Temp_bool_Variable) == 0x000006, "Member 'BP_AbilitySelectionComponent_C_CheckValidBase::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AbilitySelectionComponent_C_CheckValidBase, K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface) == 0x000008, "Member 'BP_AbilitySelectionComponent_C_CheckValidBase::K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface' has a wrong offset!");
static_assert(offsetof(BP_AbilitySelectionComponent_C_CheckValidBase, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_AbilitySelectionComponent_C_CheckValidBase::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AbilitySelectionComponent_C_CheckValidBase, CallFunc_HasAllMatchingGameplayTags_ReturnValue) == 0x000019, "Member 'BP_AbilitySelectionComponent_C_CheckValidBase::CallFunc_HasAllMatchingGameplayTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AbilitySelectionComponent_C_CheckValidBase, CallFunc_IsValid_ReturnValue) == 0x00001A, "Member 'BP_AbilitySelectionComponent_C_CheckValidBase::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AbilitySelectionComponent_C_CheckValidBase, CallFunc_IsValid_ReturnValue_1) == 0x00001B, "Member 'BP_AbilitySelectionComponent_C_CheckValidBase::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AbilitySelectionComponent_C_CheckValidBase, CallFunc_IsValid_ReturnValue_2) == 0x00001C, "Member 'BP_AbilitySelectionComponent_C_CheckValidBase::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AbilitySelectionComponent_C_CheckValidBase, K2Node_DynamicCast_AsLyra_Character) == 0x000020, "Member 'BP_AbilitySelectionComponent_C_CheckValidBase::K2Node_DynamicCast_AsLyra_Character' has a wrong offset!");
static_assert(offsetof(BP_AbilitySelectionComponent_C_CheckValidBase, K2Node_DynamicCast_bSuccess_1) == 0x000028, "Member 'BP_AbilitySelectionComponent_C_CheckValidBase::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_AbilitySelectionComponent_C_CheckValidBase, CallFunc_CanBeTarget_Result) == 0x000029, "Member 'BP_AbilitySelectionComponent_C_CheckValidBase::CallFunc_CanBeTarget_Result' has a wrong offset!");
static_assert(offsetof(BP_AbilitySelectionComponent_C_CheckValidBase, CallFunc_IsValid_ReturnValue_3) == 0x00002A, "Member 'BP_AbilitySelectionComponent_C_CheckValidBase::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_AbilitySelectionComponent_C_CheckValidBase, CallFunc_IsDeadOrDying_ReturnValue) == 0x00002B, "Member 'BP_AbilitySelectionComponent_C_CheckValidBase::CallFunc_IsDeadOrDying_ReturnValue' has a wrong offset!");

// Function BP_AbilitySelectionComponent.BP_AbilitySelectionComponent_C.ExecuteUbergraph_BP_AbilitySelectionComponent
// 0x0038 (0x0038 - 0x0000)
struct BP_AbilitySelectionComponent_C_ExecuteUbergraph_BP_AbilitySelectionComponent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckValidBase_CheckResult;               // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ALyraPlayerController*                  K2Node_DynamicCast_AsLyra_Player_Controller;       // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AbilitySelectionComponent_C_ExecuteUbergraph_BP_AbilitySelectionComponent) == 0x000008, "Wrong alignment on BP_AbilitySelectionComponent_C_ExecuteUbergraph_BP_AbilitySelectionComponent");
static_assert(sizeof(BP_AbilitySelectionComponent_C_ExecuteUbergraph_BP_AbilitySelectionComponent) == 0x000038, "Wrong size on BP_AbilitySelectionComponent_C_ExecuteUbergraph_BP_AbilitySelectionComponent");
static_assert(offsetof(BP_AbilitySelectionComponent_C_ExecuteUbergraph_BP_AbilitySelectionComponent, EntryPoint) == 0x000000, "Member 'BP_AbilitySelectionComponent_C_ExecuteUbergraph_BP_AbilitySelectionComponent::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_AbilitySelectionComponent_C_ExecuteUbergraph_BP_AbilitySelectionComponent, CallFunc_K2_GetPawn_ReturnValue) == 0x000008, "Member 'BP_AbilitySelectionComponent_C_ExecuteUbergraph_BP_AbilitySelectionComponent::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AbilitySelectionComponent_C_ExecuteUbergraph_BP_AbilitySelectionComponent, K2Node_Event_DeltaSeconds) == 0x000010, "Member 'BP_AbilitySelectionComponent_C_ExecuteUbergraph_BP_AbilitySelectionComponent::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_AbilitySelectionComponent_C_ExecuteUbergraph_BP_AbilitySelectionComponent, CallFunc_GetOwner_ReturnValue) == 0x000018, "Member 'BP_AbilitySelectionComponent_C_ExecuteUbergraph_BP_AbilitySelectionComponent::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AbilitySelectionComponent_C_ExecuteUbergraph_BP_AbilitySelectionComponent, CallFunc_CheckValidBase_CheckResult) == 0x000020, "Member 'BP_AbilitySelectionComponent_C_ExecuteUbergraph_BP_AbilitySelectionComponent::CallFunc_CheckValidBase_CheckResult' has a wrong offset!");
static_assert(offsetof(BP_AbilitySelectionComponent_C_ExecuteUbergraph_BP_AbilitySelectionComponent, K2Node_DynamicCast_AsLyra_Player_Controller) == 0x000028, "Member 'BP_AbilitySelectionComponent_C_ExecuteUbergraph_BP_AbilitySelectionComponent::K2Node_DynamicCast_AsLyra_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_AbilitySelectionComponent_C_ExecuteUbergraph_BP_AbilitySelectionComponent, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_AbilitySelectionComponent_C_ExecuteUbergraph_BP_AbilitySelectionComponent::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_AbilitySelectionComponent.BP_AbilitySelectionComponent_C.OnSelectionTargetChanged__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct BP_AbilitySelectionComponent_C_OnSelectionTargetChanged__DelegateSignature final
{
public:
	class AActor*                                 OldTarget;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 NewTarget;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AbilitySelectionComponent_C_OnSelectionTargetChanged__DelegateSignature) == 0x000008, "Wrong alignment on BP_AbilitySelectionComponent_C_OnSelectionTargetChanged__DelegateSignature");
static_assert(sizeof(BP_AbilitySelectionComponent_C_OnSelectionTargetChanged__DelegateSignature) == 0x000010, "Wrong size on BP_AbilitySelectionComponent_C_OnSelectionTargetChanged__DelegateSignature");
static_assert(offsetof(BP_AbilitySelectionComponent_C_OnSelectionTargetChanged__DelegateSignature, OldTarget) == 0x000000, "Member 'BP_AbilitySelectionComponent_C_OnSelectionTargetChanged__DelegateSignature::OldTarget' has a wrong offset!");
static_assert(offsetof(BP_AbilitySelectionComponent_C_OnSelectionTargetChanged__DelegateSignature, NewTarget) == 0x000008, "Member 'BP_AbilitySelectionComponent_C_OnSelectionTargetChanged__DelegateSignature::NewTarget' has a wrong offset!");

// Function BP_AbilitySelectionComponent.BP_AbilitySelectionComponent_C.ProcessResult
// 0x0070 (0x0070 - 0x0000)
struct BP_AbilitySelectionComponent_C_ProcessResult final
{
public:
	TArray<struct FGameplayTag>                   K2Node_MakeArray_Array;                            // 0x0000(0x0010)(ConstParm, ReferenceParm)
	struct FGameplayTagContainer                  CallFunc_MakeGameplayTagContainerFromArray_ReturnValue; // 0x0010(0x0020)()
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGameplayTag>                   K2Node_MakeArray_Array_1;                          // 0x0038(0x0010)(ConstParm, ReferenceParm)
	struct FGameplayTagContainer                  CallFunc_MakeGameplayTagContainerFromArray_ReturnValue_1; // 0x0048(0x0020)()
	bool                                          CallFunc_RemoveLooseGameplayTags_ReturnValue;      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddLooseGameplayTags_ReturnValue;         // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue_1;     // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x006B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AbilitySelectionComponent_C_ProcessResult) == 0x000008, "Wrong alignment on BP_AbilitySelectionComponent_C_ProcessResult");
static_assert(sizeof(BP_AbilitySelectionComponent_C_ProcessResult) == 0x000070, "Wrong size on BP_AbilitySelectionComponent_C_ProcessResult");
static_assert(offsetof(BP_AbilitySelectionComponent_C_ProcessResult, K2Node_MakeArray_Array) == 0x000000, "Member 'BP_AbilitySelectionComponent_C_ProcessResult::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_AbilitySelectionComponent_C_ProcessResult, CallFunc_MakeGameplayTagContainerFromArray_ReturnValue) == 0x000010, "Member 'BP_AbilitySelectionComponent_C_ProcessResult::CallFunc_MakeGameplayTagContainerFromArray_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AbilitySelectionComponent_C_ProcessResult, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x000030, "Member 'BP_AbilitySelectionComponent_C_ProcessResult::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AbilitySelectionComponent_C_ProcessResult, K2Node_MakeArray_Array_1) == 0x000038, "Member 'BP_AbilitySelectionComponent_C_ProcessResult::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_AbilitySelectionComponent_C_ProcessResult, CallFunc_MakeGameplayTagContainerFromArray_ReturnValue_1) == 0x000048, "Member 'BP_AbilitySelectionComponent_C_ProcessResult::CallFunc_MakeGameplayTagContainerFromArray_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AbilitySelectionComponent_C_ProcessResult, CallFunc_RemoveLooseGameplayTags_ReturnValue) == 0x000068, "Member 'BP_AbilitySelectionComponent_C_ProcessResult::CallFunc_RemoveLooseGameplayTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AbilitySelectionComponent_C_ProcessResult, CallFunc_AddLooseGameplayTags_ReturnValue) == 0x000069, "Member 'BP_AbilitySelectionComponent_C_ProcessResult::CallFunc_AddLooseGameplayTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AbilitySelectionComponent_C_ProcessResult, CallFunc_HasMatchingGameplayTag_ReturnValue_1) == 0x00006A, "Member 'BP_AbilitySelectionComponent_C_ProcessResult::CallFunc_HasMatchingGameplayTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AbilitySelectionComponent_C_ProcessResult, CallFunc_IsValid_ReturnValue) == 0x00006B, "Member 'BP_AbilitySelectionComponent_C_ProcessResult::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_AbilitySelectionComponent.BP_AbilitySelectionComponent_C.ProcessSelection
// 0x06D8 (0x06D8 - 0x0000)
struct BP_AbilitySelectionComponent_C_ProcessSelection final
{
public:
	struct FVector                                CurTargetLookAt;                                   // 0x0000(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        RealSearchDistance;                                // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0058(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULyraTeamSubsystem*                     CallFunc_GetWorldSubsystem_ReturnValue;            // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0088(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0171(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0172(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_173[0x1];                                      // 0x0173(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17C[0x4];                                      // 0x017C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0180(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0198(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x01B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x01C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x01E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x01E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x01F0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_214[0x4];                                      // 0x0214(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0218(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0230(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue;            // 0x0248(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0260(0x0050)(HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_3;        // 0x02B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x02C8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x02D8(0x0018)()
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_4;        // 0x02F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0308(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0318(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x0330(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0338(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0350(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0351(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0352(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_353[0x5];                                      // 0x0353(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetPlayerViewPoint_Location;              // 0x0358(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetPlayerViewPoint_Rotation;              // 0x0370(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class AActor*>                         K2Node_MakeArray_Array_2;                          // 0x0388(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0398(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x03B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x03C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit_1;                 // 0x03E0(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue_1;            // 0x04C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_1;            // 0x04C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_1;         // 0x04CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4CB[0x1];                                      // 0x04CB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_1;                    // 0x04CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_1;                // 0x04D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D4[0x4];                                      // 0x04D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location_1;                // 0x04D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_1;             // 0x04F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_1;                  // 0x0508(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_1;            // 0x0520(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_1;                 // 0x0538(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_1;                // 0x0540(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_1;            // 0x0548(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_1;             // 0x0550(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName_1;                // 0x0558(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_1;                 // 0x0560(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_1;            // 0x0564(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_1;               // 0x0568(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56C[0x4];                                      // 0x056C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart_1;              // 0x0570(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_1;                // 0x0588(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array_3;                          // 0x05A0(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_5;        // 0x05B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ALyraCharacter*                         K2Node_DynamicCast_AsLyra_Character;               // 0x05C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x05D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D1[0x7];                                      // 0x05D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit_2;                 // 0x05D8(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue_2;            // 0x06C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue;   // 0x06C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x06C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C3[0x1];                                      // 0x06C3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_CompareTeams_TeamIdA;                     // 0x06C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_CompareTeams_TeamIdB;                     // 0x06C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELyraTeamComparison                           CallFunc_CompareTeams_ReturnValue;                 // 0x06CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanBeTarget_Result;                       // 0x06CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x06CE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDeadOrDying_ReturnValue;                // 0x06CF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayer_ReturnValue;                     // 0x06D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x06D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x06D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x06D3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x06D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AbilitySelectionComponent_C_ProcessSelection) == 0x000008, "Wrong alignment on BP_AbilitySelectionComponent_C_ProcessSelection");
static_assert(sizeof(BP_AbilitySelectionComponent_C_ProcessSelection) == 0x0006D8, "Wrong size on BP_AbilitySelectionComponent_C_ProcessSelection");
static_assert(offsetof(BP_AbilitySelectionComponent_C_ProcessSelection, CurTargetLookAt) == 0x000000, "Member 'BP_AbilitySelectionComponent_C_ProcessSelection::CurTargetLookAt' has a wrong offset!");
static_assert(offsetof(BP_AbilitySelectionComponent_C_ProcessSelection, RealSearchDistance) == 0x000018, "Member 'BP_AbilitySelectionComponent_C_ProcessSelection::RealSearchDistance' has a wrong offset!");
static_assert(offsetof(BP_AbilitySelectionComponent_C_ProcessSelection, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_AbilitySelectionComponent_C_ProcessSelection::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AbilitySelectionComponent_C_ProcessSelection, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000028, "Member 'BP_AbilitySelectionComponent_C_ProcessSelection::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AbilitySelectionComponent_C_ProcessSelection, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000040, "Member 'BP_AbilitySelectionComponent_C_ProcessSelection::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AbilitySelectionComponent_C_ProcessSelection, K2Node_MakeArray_Array) == 0x000058, "Member 'BP_AbilitySelectionComponent_C_ProcessSelection::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_AbilitySelectionComponent_C_ProcessSelection, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x000068, "Member 'BP_AbilitySelectionComponent_C_ProcessSelection::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AbilitySelectionComponent_C_ProcessSelection, CallFunc_GetWorldSubsystem_ReturnValue) == 0x000080, "Member 'BP_AbilitySelectionComponent_C_ProcessSelection::CallFunc_GetWorldSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AbilitySelectionComponent_C_ProcessSelection, CallFunc_LineTraceSingle_OutHit) == 0x000088, "Member 'BP_AbilitySelectionComponent_C_ProcessSelection::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BP_AbilitySelectionComponent_C_ProcessSelection, CallFunc_LineTraceSingle_ReturnValue) == 0x000170, "Member 'BP_AbilitySelectionComponent_C_ProcessSelection::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AbilitySelectionComponent_C_ProcessSelection, CallFunc_BreakHitResult_bBlockingHit) == 0x000171, "Member 'BP_AbilitySelectionComponent_C_ProcessSelection::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_AbilitySelectionComponent_C_ProcessSelection, CallFunc_BreakHitResult_bInitialOverlap) == 0x000172, "Member 'BP_AbilitySelectionComponent_C_ProcessSelection::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_AbilitySelectionComponent_C_ProcessSelection, CallFunc_BreakHitResult_Time) == 0x000174, "Member 'BP_AbilitySelectionComponent_C_ProcessSelection::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_AbilitySelectionComponent_C_ProcessSelection, CallFunc_BreakHitResult_Distance) == 0x000178, "Member 'BP_AbilitySelectionComponent_C_ProcessSelection::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_AbilitySelectionComponent_C_ProcessSelection, CallFunc_BreakHitResult_Location) == 0x000180, "Member 'BP_AbilitySelectionComponent_C_ProcessSelection::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_AbilitySelectionComponent_C_ProcessSelection, CallFunc_BreakHitResult_ImpactPoint) == 0x000198, "Member 'BP_AbilitySelectionComponent_C_ProcessSelection::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_AbilitySelectionComponent_C_ProcessSelection, CallFunc_BreakHitResult_Normal) == 0x0001B0, "Member 'BP_AbilitySelectionComponent_C_ProcessSelection::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_AbilitySelectionComponent_C_ProcessSelection, CallFunc_BreakHitResult_ImpactNormal) == 0x0001C8, "Member 'BP_AbilitySelectionComponent_C_ProcessSelection::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_AbilitySelectionComponent_C_ProcessSelection, CallFunc_BreakHitResult_PhysMat) == 0x0001E0, "Member 'BP_AbilitySelectionComponent_C_ProcessSelection::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_AbilitySelectionComponent_C_ProcessSelection, CallFunc_BreakHitResult_HitActor) == 0x0001E8, "Member 'BP_AbilitySelectionComponent_C_ProcessSelection::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_AbilitySelectionComponent_C_ProcessSelection, CallFunc_BreakHitResult_HitComponent) == 0x0001F0, "Member 'BP_AbilitySelectionComponent_C_ProcessSelection::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_AbilitySelectionComponent_C_ProcessSelection, CallFunc_BreakHitResult_HitBoneName) == 0x0001F8, "Member 'BP_AbilitySelectionComponent_C_ProcessSelection::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_AbilitySelectionComponent_C_ProcessSelection, CallFunc_BreakHitResult_BoneName) == 0x000200, "Member 'BP_AbilitySelectionComponent_C_ProcessSelection::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BP_AbilitySelectionComponent_C_ProcessSelection, CallFunc_BreakHitResult_HitItem) == 0x000208, "Member 'BP_AbilitySelectionComponent_C_ProcessSelection::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_AbilitySelectionComponent_C_ProcessSelection, CallFunc_BreakHitResult_ElementIndex) == 0x00020C, "Member 'BP_AbilitySelectionComponent_C_ProcessSelection::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_AbilitySelectionComponent_C_ProcessSelection, CallFunc_BreakHitResult_FaceIndex) == 0x000210, "Member 'BP_AbilitySelectionComponent_C_ProcessSelection::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_AbilitySelectionComponent_C_ProcessSelection, CallFunc_BreakHitResult_TraceStart) == 0x000218, "Member 'BP_AbilitySelectionComponent_C_ProcessSelection::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_AbilitySelectionComponent_C_ProcessSelection, CallFunc_BreakHitResult_TraceEnd) == 0x000230, "Member 'BP_AbilitySelectionComponent_C_ProcessSelection::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_AbilitySelectionComponent_C_ProcessSelection, CallFunc_Conv_ObjectToText_ReturnValue) == 0x000248, "Member 'BP_AbilitySelectionComponent_C_ProcessSelection::CallFunc_Conv_ObjectToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AbilitySelectionComponent_C_ProcessSelection, K2Node_MakeStruct_FormatArgumentData) == 0x000260, "Member 'BP_AbilitySelectionComponent_C_ProcessSelection::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_AbilitySelectionComponent_C_ProcessSelection, CallFunc_K2_GetActorLocation_ReturnValue_3) == 0x0002B0, "Member 'BP_AbilitySelectionComponent_C_ProcessSelection::CallFunc_K2_GetActorLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_AbilitySelectionComponent_C_ProcessSelection, K2Node_MakeArray_Array_1) == 0x0002C8, "Member 'BP_AbilitySelectionComponent_C_ProcessSelection::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_AbilitySelectionComponent_C_ProcessSelection, CallFunc_Format_ReturnValue) == 0x0002D8, "Member 'BP_AbilitySelectionComponent_C_ProcessSelection::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AbilitySelectionComponent_C_ProcessSelection, CallFunc_K2_GetActorLocation_ReturnValue_4) == 0x0002F0, "Member 'BP_AbilitySelectionComponent_C_ProcessSelection::CallFunc_K2_GetActorLocation_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_AbilitySelectionComponent_C_ProcessSelection, CallFunc_Conv_TextToString_ReturnValue) == 0x000308, "Member 'BP_AbilitySelectionComponent_C_ProcessSelection::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AbilitySelectionComponent_C_ProcessSelection, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000318, "Member 'BP_AbilitySelectionComponent_C_ProcessSelection::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AbilitySelectionComponent_C_ProcessSelection, CallFunc_VSize_ReturnValue) == 0x000330, "Member 'BP_AbilitySelectionComponent_C_ProcessSelection::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AbilitySelectionComponent_C_ProcessSelection, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000338, "Member 'BP_AbilitySelectionComponent_C_ProcessSelection::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AbilitySelectionComponent_C_ProcessSelection, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000350, "Member 'BP_AbilitySelectionComponent_C_ProcessSelection::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AbilitySelectionComponent_C_ProcessSelection, CallFunc_IsValid_ReturnValue_1) == 0x000351, "Member 'BP_AbilitySelectionComponent_C_ProcessSelection::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AbilitySelectionComponent_C_ProcessSelection, CallFunc_IsValid_ReturnValue_2) == 0x000352, "Member 'BP_AbilitySelectionComponent_C_ProcessSelection::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AbilitySelectionComponent_C_ProcessSelection, CallFunc_GetPlayerViewPoint_Location) == 0x000358, "Member 'BP_AbilitySelectionComponent_C_ProcessSelection::CallFunc_GetPlayerViewPoint_Location' has a wrong offset!");
static_assert(offsetof(BP_AbilitySelectionComponent_C_ProcessSelection, CallFunc_GetPlayerViewPoint_Rotation) == 0x000370, "Member 'BP_AbilitySelectionComponent_C_ProcessSelection::CallFunc_GetPlayerViewPoint_Rotation' has a wrong offset!");
static_assert(offsetof(BP_AbilitySelectionComponent_C_ProcessSelection, K2Node_MakeArray_Array_2) == 0x000388, "Member 'BP_AbilitySelectionComponent_C_ProcessSelection::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(BP_AbilitySelectionComponent_C_ProcessSelection, CallFunc_GetForwardVector_ReturnValue) == 0x000398, "Member 'BP_AbilitySelectionComponent_C_ProcessSelection::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AbilitySelectionComponent_C_ProcessSelection, CallFunc_Multiply_VectorVector_ReturnValue) == 0x0003B0, "Member 'BP_AbilitySelectionComponent_C_ProcessSelection::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AbilitySelectionComponent_C_ProcessSelection, CallFunc_Add_VectorVector_ReturnValue) == 0x0003C8, "Member 'BP_AbilitySelectionComponent_C_ProcessSelection::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AbilitySelectionComponent_C_ProcessSelection, CallFunc_LineTraceSingle_OutHit_1) == 0x0003E0, "Member 'BP_AbilitySelectionComponent_C_ProcessSelection::CallFunc_LineTraceSingle_OutHit_1' has a wrong offset!");
static_assert(offsetof(BP_AbilitySelectionComponent_C_ProcessSelection, CallFunc_LineTraceSingle_ReturnValue_1) == 0x0004C8, "Member 'BP_AbilitySelectionComponent_C_ProcessSelection::CallFunc_LineTraceSingle_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AbilitySelectionComponent_C_ProcessSelection, CallFunc_BreakHitResult_bBlockingHit_1) == 0x0004C9, "Member 'BP_AbilitySelectionComponent_C_ProcessSelection::CallFunc_BreakHitResult_bBlockingHit_1' has a wrong offset!");
static_assert(offsetof(BP_AbilitySelectionComponent_C_ProcessSelection, CallFunc_BreakHitResult_bInitialOverlap_1) == 0x0004CA, "Member 'BP_AbilitySelectionComponent_C_ProcessSelection::CallFunc_BreakHitResult_bInitialOverlap_1' has a wrong offset!");
static_assert(offsetof(BP_AbilitySelectionComponent_C_ProcessSelection, CallFunc_BreakHitResult_Time_1) == 0x0004CC, "Member 'BP_AbilitySelectionComponent_C_ProcessSelection::CallFunc_BreakHitResult_Time_1' has a wrong offset!");
static_assert(offsetof(BP_AbilitySelectionComponent_C_ProcessSelection, CallFunc_BreakHitResult_Distance_1) == 0x0004D0, "Member 'BP_AbilitySelectionComponent_C_ProcessSelection::CallFunc_BreakHitResult_Distance_1' has a wrong offset!");
static_assert(offsetof(BP_AbilitySelectionComponent_C_ProcessSelection, CallFunc_BreakHitResult_Location_1) == 0x0004D8, "Member 'BP_AbilitySelectionComponent_C_ProcessSelection::CallFunc_BreakHitResult_Location_1' has a wrong offset!");
static_assert(offsetof(BP_AbilitySelectionComponent_C_ProcessSelection, CallFunc_BreakHitResult_ImpactPoint_1) == 0x0004F0, "Member 'BP_AbilitySelectionComponent_C_ProcessSelection::CallFunc_BreakHitResult_ImpactPoint_1' has a wrong offset!");
static_assert(offsetof(BP_AbilitySelectionComponent_C_ProcessSelection, CallFunc_BreakHitResult_Normal_1) == 0x000508, "Member 'BP_AbilitySelectionComponent_C_ProcessSelection::CallFunc_BreakHitResult_Normal_1' has a wrong offset!");
static_assert(offsetof(BP_AbilitySelectionComponent_C_ProcessSelection, CallFunc_BreakHitResult_ImpactNormal_1) == 0x000520, "Member 'BP_AbilitySelectionComponent_C_ProcessSelection::CallFunc_BreakHitResult_ImpactNormal_1' has a wrong offset!");
static_assert(offsetof(BP_AbilitySelectionComponent_C_ProcessSelection, CallFunc_BreakHitResult_PhysMat_1) == 0x000538, "Member 'BP_AbilitySelectionComponent_C_ProcessSelection::CallFunc_BreakHitResult_PhysMat_1' has a wrong offset!");
static_assert(offsetof(BP_AbilitySelectionComponent_C_ProcessSelection, CallFunc_BreakHitResult_HitActor_1) == 0x000540, "Member 'BP_AbilitySelectionComponent_C_ProcessSelection::CallFunc_BreakHitResult_HitActor_1' has a wrong offset!");
static_assert(offsetof(BP_AbilitySelectionComponent_C_ProcessSelection, CallFunc_BreakHitResult_HitComponent_1) == 0x000548, "Member 'BP_AbilitySelectionComponent_C_ProcessSelection::CallFunc_BreakHitResult_HitComponent_1' has a wrong offset!");
static_assert(offsetof(BP_AbilitySelectionComponent_C_ProcessSelection, CallFunc_BreakHitResult_HitBoneName_1) == 0x000550, "Member 'BP_AbilitySelectionComponent_C_ProcessSelection::CallFunc_BreakHitResult_HitBoneName_1' has a wrong offset!");
static_assert(offsetof(BP_AbilitySelectionComponent_C_ProcessSelection, CallFunc_BreakHitResult_BoneName_1) == 0x000558, "Member 'BP_AbilitySelectionComponent_C_ProcessSelection::CallFunc_BreakHitResult_BoneName_1' has a wrong offset!");
static_assert(offsetof(BP_AbilitySelectionComponent_C_ProcessSelection, CallFunc_BreakHitResult_HitItem_1) == 0x000560, "Member 'BP_AbilitySelectionComponent_C_ProcessSelection::CallFunc_BreakHitResult_HitItem_1' has a wrong offset!");
static_assert(offsetof(BP_AbilitySelectionComponent_C_ProcessSelection, CallFunc_BreakHitResult_ElementIndex_1) == 0x000564, "Member 'BP_AbilitySelectionComponent_C_ProcessSelection::CallFunc_BreakHitResult_ElementIndex_1' has a wrong offset!");
static_assert(offsetof(BP_AbilitySelectionComponent_C_ProcessSelection, CallFunc_BreakHitResult_FaceIndex_1) == 0x000568, "Member 'BP_AbilitySelectionComponent_C_ProcessSelection::CallFunc_BreakHitResult_FaceIndex_1' has a wrong offset!");
static_assert(offsetof(BP_AbilitySelectionComponent_C_ProcessSelection, CallFunc_BreakHitResult_TraceStart_1) == 0x000570, "Member 'BP_AbilitySelectionComponent_C_ProcessSelection::CallFunc_BreakHitResult_TraceStart_1' has a wrong offset!");
static_assert(offsetof(BP_AbilitySelectionComponent_C_ProcessSelection, CallFunc_BreakHitResult_TraceEnd_1) == 0x000588, "Member 'BP_AbilitySelectionComponent_C_ProcessSelection::CallFunc_BreakHitResult_TraceEnd_1' has a wrong offset!");
static_assert(offsetof(BP_AbilitySelectionComponent_C_ProcessSelection, K2Node_MakeArray_Array_3) == 0x0005A0, "Member 'BP_AbilitySelectionComponent_C_ProcessSelection::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(BP_AbilitySelectionComponent_C_ProcessSelection, CallFunc_K2_GetActorLocation_ReturnValue_5) == 0x0005B0, "Member 'BP_AbilitySelectionComponent_C_ProcessSelection::CallFunc_K2_GetActorLocation_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_AbilitySelectionComponent_C_ProcessSelection, K2Node_DynamicCast_AsLyra_Character) == 0x0005C8, "Member 'BP_AbilitySelectionComponent_C_ProcessSelection::K2Node_DynamicCast_AsLyra_Character' has a wrong offset!");
static_assert(offsetof(BP_AbilitySelectionComponent_C_ProcessSelection, K2Node_DynamicCast_bSuccess) == 0x0005D0, "Member 'BP_AbilitySelectionComponent_C_ProcessSelection::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AbilitySelectionComponent_C_ProcessSelection, CallFunc_LineTraceSingle_OutHit_2) == 0x0005D8, "Member 'BP_AbilitySelectionComponent_C_ProcessSelection::CallFunc_LineTraceSingle_OutHit_2' has a wrong offset!");
static_assert(offsetof(BP_AbilitySelectionComponent_C_ProcessSelection, CallFunc_LineTraceSingle_ReturnValue_2) == 0x0006C0, "Member 'BP_AbilitySelectionComponent_C_ProcessSelection::CallFunc_LineTraceSingle_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AbilitySelectionComponent_C_ProcessSelection, CallFunc_HasAnyMatchingGameplayTags_ReturnValue) == 0x0006C1, "Member 'BP_AbilitySelectionComponent_C_ProcessSelection::CallFunc_HasAnyMatchingGameplayTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AbilitySelectionComponent_C_ProcessSelection, CallFunc_Not_PreBool_ReturnValue) == 0x0006C2, "Member 'BP_AbilitySelectionComponent_C_ProcessSelection::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AbilitySelectionComponent_C_ProcessSelection, CallFunc_CompareTeams_TeamIdA) == 0x0006C4, "Member 'BP_AbilitySelectionComponent_C_ProcessSelection::CallFunc_CompareTeams_TeamIdA' has a wrong offset!");
static_assert(offsetof(BP_AbilitySelectionComponent_C_ProcessSelection, CallFunc_CompareTeams_TeamIdB) == 0x0006C8, "Member 'BP_AbilitySelectionComponent_C_ProcessSelection::CallFunc_CompareTeams_TeamIdB' has a wrong offset!");
static_assert(offsetof(BP_AbilitySelectionComponent_C_ProcessSelection, CallFunc_CompareTeams_ReturnValue) == 0x0006CC, "Member 'BP_AbilitySelectionComponent_C_ProcessSelection::CallFunc_CompareTeams_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AbilitySelectionComponent_C_ProcessSelection, CallFunc_CanBeTarget_Result) == 0x0006CD, "Member 'BP_AbilitySelectionComponent_C_ProcessSelection::CallFunc_CanBeTarget_Result' has a wrong offset!");
static_assert(offsetof(BP_AbilitySelectionComponent_C_ProcessSelection, K2Node_SwitchEnum_CmpSuccess) == 0x0006CE, "Member 'BP_AbilitySelectionComponent_C_ProcessSelection::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_AbilitySelectionComponent_C_ProcessSelection, CallFunc_IsDeadOrDying_ReturnValue) == 0x0006CF, "Member 'BP_AbilitySelectionComponent_C_ProcessSelection::CallFunc_IsDeadOrDying_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AbilitySelectionComponent_C_ProcessSelection, CallFunc_IsPlayer_ReturnValue) == 0x0006D0, "Member 'BP_AbilitySelectionComponent_C_ProcessSelection::CallFunc_IsPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AbilitySelectionComponent_C_ProcessSelection, CallFunc_Not_PreBool_ReturnValue_1) == 0x0006D1, "Member 'BP_AbilitySelectionComponent_C_ProcessSelection::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AbilitySelectionComponent_C_ProcessSelection, CallFunc_BooleanAND_ReturnValue) == 0x0006D2, "Member 'BP_AbilitySelectionComponent_C_ProcessSelection::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AbilitySelectionComponent_C_ProcessSelection, CallFunc_BooleanAND_ReturnValue_1) == 0x0006D3, "Member 'BP_AbilitySelectionComponent_C_ProcessSelection::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AbilitySelectionComponent_C_ProcessSelection, CallFunc_BooleanAND_ReturnValue_2) == 0x0006D4, "Member 'BP_AbilitySelectionComponent_C_ProcessSelection::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");

// Function BP_AbilitySelectionComponent.BP_AbilitySelectionComponent_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_AbilitySelectionComponent_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AbilitySelectionComponent_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_AbilitySelectionComponent_C_ReceiveTick");
static_assert(sizeof(BP_AbilitySelectionComponent_C_ReceiveTick) == 0x000004, "Wrong size on BP_AbilitySelectionComponent_C_ReceiveTick");
static_assert(offsetof(BP_AbilitySelectionComponent_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_AbilitySelectionComponent_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

}

