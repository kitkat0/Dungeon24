#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_TGF_TalentLich_WhenCausingIceDamage

#include "Basic.hpp"

#include "GA_TGF_Passive_Base_classes.hpp"
#include "Engine_structs.hpp"
#include "LyraGame_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_TGF_TalentLich_WhenCausingIceDamage.GA_TGF_TalentLich_WhenCausingIceDamage_C
// 0x0010 (0x09B0 - 0x09A0)
class UGA_TGF_TalentLich_WhenCausingIceDamage_C final : public UGA_TGF_Passive_Base_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x09A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAbilityTask_WaitGameplayEvent*         ListenCausingDamageTask;                           // 0x09A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void EventReceived_08F3FA65471F2100F92FC581D3B40888(const struct FGameplayEventData& Payload);
	void ExecuteUbergraph_GA_TGF_TalentLich_WhenCausingIceDamage(int32 EntryPoint);
	void K2_ActivateAbility();
	void K2_OnEndAbility(bool bWasCancelled);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_TGF_TalentLich_WhenCausingIceDamage_C">();
	}
	static class UGA_TGF_TalentLich_WhenCausingIceDamage_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_TGF_TalentLich_WhenCausingIceDamage_C>();
	}
};
static_assert(alignof(UGA_TGF_TalentLich_WhenCausingIceDamage_C) == 0x000010, "Wrong alignment on UGA_TGF_TalentLich_WhenCausingIceDamage_C");
static_assert(sizeof(UGA_TGF_TalentLich_WhenCausingIceDamage_C) == 0x0009B0, "Wrong size on UGA_TGF_TalentLich_WhenCausingIceDamage_C");
static_assert(offsetof(UGA_TGF_TalentLich_WhenCausingIceDamage_C, UberGraphFrame) == 0x0009A0, "Member 'UGA_TGF_TalentLich_WhenCausingIceDamage_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGA_TGF_TalentLich_WhenCausingIceDamage_C, ListenCausingDamageTask) == 0x0009A8, "Member 'UGA_TGF_TalentLich_WhenCausingIceDamage_C::ListenCausingDamageTask' has a wrong offset!");

}

