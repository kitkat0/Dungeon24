#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Inventory_EquipmentSlot_Clothing

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "WBP_Inventory_EquipmentSlot_Base_classes.hpp"
#include "LyraGame_structs.hpp"
#include "AkAudio_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_Inventory_EquipmentSlot_Clothing.WBP_Inventory_EquipmentSlot_Clothing_C
// 0x0248 (0x0640 - 0x03F8)
class UWBP_Inventory_EquipmentSlot_Clothing_C final : public UWBP_Inventory_EquipmentSlot_Base_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_WBP_Inventory_EquipmentSlot_Clothing_C; // 0x03F8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 ActiveWeapon;                                      // 0x0400(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                EntrySlot;                                         // 0x0408(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 FrameImage;                                        // 0x0410(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Hover;                                             // 0x0418(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Locked;                                            // 0x0420(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Mask;                                              // 0x0428(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay;                                           // 0x0430(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 SketchImage;                                       // 0x0438(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Soul;                                              // 0x0440(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_InventorySoulBoundInspector_C*     SoulFull;                                          // 0x0448(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SoulFx;                                            // 0x0450(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Inventory_Equipment_DropArea_C*    WBP_Inventory_Equipment_DropArea;                  // 0x0458(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnEquipmentDrop;                                   // 0x0460(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class UWBP_Common_ItemEntry_C*                Item_Entry;                                        // 0x0470(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_478[0x8];                                      // 0x0478(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            Frame;                                             // 0x0480(0x00D0)(Edit, BlueprintVisible)
	struct FSlateBrush                            Sketch;                                            // 0x0550(0x00D0)(Edit, BlueprintVisible)
	double                                        IconScale;                                         // 0x0620(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDefaultDisabled;                                  // 0x0628(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_629[0x7];                                      // 0x0629(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTgfWidgetGamepadWrapper*               GamepadWrapper;                                    // 0x0630(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void Construct();
	void DoTgfCustomNavigation(EUINavigation Param_Navigation, class UWidget** Result);
	void ExecuteUbergraph_WBP_Inventory_EquipmentSlot_Clothing(int32 EntryPoint);
	void On_Quick_Discard(class UWBP_Common_ItemEntry_C* Param_Item_Entry);
	void On_Quick_Unequip(class UWBP_Common_ItemEntry_C* ItemEntry);
	void OnDragDetected(const struct FGeometry& MyGeometry, const struct FPointerEvent& PointerEvent, class UDragDropOperation** Operation);
	void OnEquipmentDrop__DelegateSignature(class UBP_Inventory_DragDrop_Base_C* DropOperation, class ULyraInventoryItemInstance* Item, ETgfEquipSlot From_EquipSlot);
	struct FEventReply OnMouseButtonDown(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	struct FEventReply OnMouseButtonUp(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void OnMouseEnter(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void OnMouseLeave(const struct FPointerEvent& MouseEvent);
	void PreConstruct(bool IsDesignTime);
	void RefreshEquipment(class UTgfEquipmentWrapper* Equipment);
	void Set_Locked(bool Lock);
	void ShouldNotShowTooltip(bool* bNoShow);

	class FString GetModuleName() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_Inventory_EquipmentSlot_Clothing_C">();
	}
	static class UWBP_Inventory_EquipmentSlot_Clothing_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_Inventory_EquipmentSlot_Clothing_C>();
	}
};
static_assert(alignof(UWBP_Inventory_EquipmentSlot_Clothing_C) == 0x000010, "Wrong alignment on UWBP_Inventory_EquipmentSlot_Clothing_C");
static_assert(sizeof(UWBP_Inventory_EquipmentSlot_Clothing_C) == 0x000640, "Wrong size on UWBP_Inventory_EquipmentSlot_Clothing_C");
static_assert(offsetof(UWBP_Inventory_EquipmentSlot_Clothing_C, UberGraphFrame_WBP_Inventory_EquipmentSlot_Clothing_C) == 0x0003F8, "Member 'UWBP_Inventory_EquipmentSlot_Clothing_C::UberGraphFrame_WBP_Inventory_EquipmentSlot_Clothing_C' has a wrong offset!");
static_assert(offsetof(UWBP_Inventory_EquipmentSlot_Clothing_C, ActiveWeapon) == 0x000400, "Member 'UWBP_Inventory_EquipmentSlot_Clothing_C::ActiveWeapon' has a wrong offset!");
static_assert(offsetof(UWBP_Inventory_EquipmentSlot_Clothing_C, EntrySlot) == 0x000408, "Member 'UWBP_Inventory_EquipmentSlot_Clothing_C::EntrySlot' has a wrong offset!");
static_assert(offsetof(UWBP_Inventory_EquipmentSlot_Clothing_C, FrameImage) == 0x000410, "Member 'UWBP_Inventory_EquipmentSlot_Clothing_C::FrameImage' has a wrong offset!");
static_assert(offsetof(UWBP_Inventory_EquipmentSlot_Clothing_C, Hover) == 0x000418, "Member 'UWBP_Inventory_EquipmentSlot_Clothing_C::Hover' has a wrong offset!");
static_assert(offsetof(UWBP_Inventory_EquipmentSlot_Clothing_C, Locked) == 0x000420, "Member 'UWBP_Inventory_EquipmentSlot_Clothing_C::Locked' has a wrong offset!");
static_assert(offsetof(UWBP_Inventory_EquipmentSlot_Clothing_C, Mask) == 0x000428, "Member 'UWBP_Inventory_EquipmentSlot_Clothing_C::Mask' has a wrong offset!");
static_assert(offsetof(UWBP_Inventory_EquipmentSlot_Clothing_C, Overlay) == 0x000430, "Member 'UWBP_Inventory_EquipmentSlot_Clothing_C::Overlay' has a wrong offset!");
static_assert(offsetof(UWBP_Inventory_EquipmentSlot_Clothing_C, SketchImage) == 0x000438, "Member 'UWBP_Inventory_EquipmentSlot_Clothing_C::SketchImage' has a wrong offset!");
static_assert(offsetof(UWBP_Inventory_EquipmentSlot_Clothing_C, Soul) == 0x000440, "Member 'UWBP_Inventory_EquipmentSlot_Clothing_C::Soul' has a wrong offset!");
static_assert(offsetof(UWBP_Inventory_EquipmentSlot_Clothing_C, SoulFull) == 0x000448, "Member 'UWBP_Inventory_EquipmentSlot_Clothing_C::SoulFull' has a wrong offset!");
static_assert(offsetof(UWBP_Inventory_EquipmentSlot_Clothing_C, SoulFx) == 0x000450, "Member 'UWBP_Inventory_EquipmentSlot_Clothing_C::SoulFx' has a wrong offset!");
static_assert(offsetof(UWBP_Inventory_EquipmentSlot_Clothing_C, WBP_Inventory_Equipment_DropArea) == 0x000458, "Member 'UWBP_Inventory_EquipmentSlot_Clothing_C::WBP_Inventory_Equipment_DropArea' has a wrong offset!");
static_assert(offsetof(UWBP_Inventory_EquipmentSlot_Clothing_C, OnEquipmentDrop) == 0x000460, "Member 'UWBP_Inventory_EquipmentSlot_Clothing_C::OnEquipmentDrop' has a wrong offset!");
static_assert(offsetof(UWBP_Inventory_EquipmentSlot_Clothing_C, Item_Entry) == 0x000470, "Member 'UWBP_Inventory_EquipmentSlot_Clothing_C::Item_Entry' has a wrong offset!");
static_assert(offsetof(UWBP_Inventory_EquipmentSlot_Clothing_C, Frame) == 0x000480, "Member 'UWBP_Inventory_EquipmentSlot_Clothing_C::Frame' has a wrong offset!");
static_assert(offsetof(UWBP_Inventory_EquipmentSlot_Clothing_C, Sketch) == 0x000550, "Member 'UWBP_Inventory_EquipmentSlot_Clothing_C::Sketch' has a wrong offset!");
static_assert(offsetof(UWBP_Inventory_EquipmentSlot_Clothing_C, IconScale) == 0x000620, "Member 'UWBP_Inventory_EquipmentSlot_Clothing_C::IconScale' has a wrong offset!");
static_assert(offsetof(UWBP_Inventory_EquipmentSlot_Clothing_C, bDefaultDisabled) == 0x000628, "Member 'UWBP_Inventory_EquipmentSlot_Clothing_C::bDefaultDisabled' has a wrong offset!");
static_assert(offsetof(UWBP_Inventory_EquipmentSlot_Clothing_C, GamepadWrapper) == 0x000630, "Member 'UWBP_Inventory_EquipmentSlot_Clothing_C::GamepadWrapper' has a wrong offset!");

}

