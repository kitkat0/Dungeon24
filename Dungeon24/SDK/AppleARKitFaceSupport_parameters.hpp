#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AppleARKitFaceSupport

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "AugmentedReality_structs.hpp"
#include "AppleARKitFaceSupport_structs.hpp"


namespace SDK::Params
{

// Function AppleARKitFaceSupport.AppleARKitFaceMeshComponent.CreateMesh
// 0x0030 (0x0030 - 0x0000)
struct AppleARKitFaceMeshComponent_CreateMesh final
{
public:
	TArray<struct FVector>                        Vertices;                                          // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	TArray<int32>                                 Triangles;                                         // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	TArray<struct FVector2D>                      UV0;                                               // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppleARKitFaceMeshComponent_CreateMesh) == 0x000008, "Wrong alignment on AppleARKitFaceMeshComponent_CreateMesh");
static_assert(sizeof(AppleARKitFaceMeshComponent_CreateMesh) == 0x000030, "Wrong size on AppleARKitFaceMeshComponent_CreateMesh");
static_assert(offsetof(AppleARKitFaceMeshComponent_CreateMesh, Vertices) == 0x000000, "Member 'AppleARKitFaceMeshComponent_CreateMesh::Vertices' has a wrong offset!");
static_assert(offsetof(AppleARKitFaceMeshComponent_CreateMesh, Triangles) == 0x000010, "Member 'AppleARKitFaceMeshComponent_CreateMesh::Triangles' has a wrong offset!");
static_assert(offsetof(AppleARKitFaceMeshComponent_CreateMesh, UV0) == 0x000020, "Member 'AppleARKitFaceMeshComponent_CreateMesh::UV0' has a wrong offset!");

// Function AppleARKitFaceSupport.AppleARKitFaceMeshComponent.PublishViaLiveLink
// 0x0008 (0x0008 - 0x0000)
struct AppleARKitFaceMeshComponent_PublishViaLiveLink final
{
public:
	class FName                                   SubjectName;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppleARKitFaceMeshComponent_PublishViaLiveLink) == 0x000004, "Wrong alignment on AppleARKitFaceMeshComponent_PublishViaLiveLink");
static_assert(sizeof(AppleARKitFaceMeshComponent_PublishViaLiveLink) == 0x000008, "Wrong size on AppleARKitFaceMeshComponent_PublishViaLiveLink");
static_assert(offsetof(AppleARKitFaceMeshComponent_PublishViaLiveLink, SubjectName) == 0x000000, "Member 'AppleARKitFaceMeshComponent_PublishViaLiveLink::SubjectName' has a wrong offset!");

// Function AppleARKitFaceSupport.AppleARKitFaceMeshComponent.ServerUpdateFaceCurves
// 0x0010 (0x0010 - 0x0000)
struct AppleARKitFaceMeshComponent_ServerUpdateFaceCurves final
{
public:
	TArray<struct FNetQuantizeFaceCurve>          ClientCurves;                                      // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppleARKitFaceMeshComponent_ServerUpdateFaceCurves) == 0x000008, "Wrong alignment on AppleARKitFaceMeshComponent_ServerUpdateFaceCurves");
static_assert(sizeof(AppleARKitFaceMeshComponent_ServerUpdateFaceCurves) == 0x000010, "Wrong size on AppleARKitFaceMeshComponent_ServerUpdateFaceCurves");
static_assert(offsetof(AppleARKitFaceMeshComponent_ServerUpdateFaceCurves, ClientCurves) == 0x000000, "Member 'AppleARKitFaceMeshComponent_ServerUpdateFaceCurves::ClientCurves' has a wrong offset!");

// Function AppleARKitFaceSupport.AppleARKitFaceMeshComponent.SetAutoBind
// 0x0001 (0x0001 - 0x0000)
struct AppleARKitFaceMeshComponent_SetAutoBind final
{
public:
	bool                                          bAutoBind;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppleARKitFaceMeshComponent_SetAutoBind) == 0x000001, "Wrong alignment on AppleARKitFaceMeshComponent_SetAutoBind");
static_assert(sizeof(AppleARKitFaceMeshComponent_SetAutoBind) == 0x000001, "Wrong size on AppleARKitFaceMeshComponent_SetAutoBind");
static_assert(offsetof(AppleARKitFaceMeshComponent_SetAutoBind, bAutoBind) == 0x000000, "Member 'AppleARKitFaceMeshComponent_SetAutoBind::bAutoBind' has a wrong offset!");

// Function AppleARKitFaceSupport.AppleARKitFaceMeshComponent.SetBlendShapeAmount
// 0x0008 (0x0008 - 0x0000)
struct AppleARKitFaceMeshComponent_SetBlendShapeAmount final
{
public:
	EARFaceBlendShape                             BlendShape;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Amount;                                            // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppleARKitFaceMeshComponent_SetBlendShapeAmount) == 0x000004, "Wrong alignment on AppleARKitFaceMeshComponent_SetBlendShapeAmount");
static_assert(sizeof(AppleARKitFaceMeshComponent_SetBlendShapeAmount) == 0x000008, "Wrong size on AppleARKitFaceMeshComponent_SetBlendShapeAmount");
static_assert(offsetof(AppleARKitFaceMeshComponent_SetBlendShapeAmount, BlendShape) == 0x000000, "Member 'AppleARKitFaceMeshComponent_SetBlendShapeAmount::BlendShape' has a wrong offset!");
static_assert(offsetof(AppleARKitFaceMeshComponent_SetBlendShapeAmount, Amount) == 0x000004, "Member 'AppleARKitFaceMeshComponent_SetBlendShapeAmount::Amount' has a wrong offset!");

// Function AppleARKitFaceSupport.AppleARKitFaceMeshComponent.SetBlendShapes
// 0x0050 (0x0050 - 0x0000)
struct AppleARKitFaceMeshComponent_SetBlendShapes final
{
public:
	TMap<EARFaceBlendShape, float>                InBlendShapes;                                     // 0x0000(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppleARKitFaceMeshComponent_SetBlendShapes) == 0x000008, "Wrong alignment on AppleARKitFaceMeshComponent_SetBlendShapes");
static_assert(sizeof(AppleARKitFaceMeshComponent_SetBlendShapes) == 0x000050, "Wrong size on AppleARKitFaceMeshComponent_SetBlendShapes");
static_assert(offsetof(AppleARKitFaceMeshComponent_SetBlendShapes, InBlendShapes) == 0x000000, "Member 'AppleARKitFaceMeshComponent_SetBlendShapes::InBlendShapes' has a wrong offset!");

// Function AppleARKitFaceSupport.AppleARKitFaceMeshComponent.UpdateMesh
// 0x0010 (0x0010 - 0x0000)
struct AppleARKitFaceMeshComponent_UpdateMesh final
{
public:
	TArray<struct FVector>                        Vertices;                                          // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppleARKitFaceMeshComponent_UpdateMesh) == 0x000008, "Wrong alignment on AppleARKitFaceMeshComponent_UpdateMesh");
static_assert(sizeof(AppleARKitFaceMeshComponent_UpdateMesh) == 0x000010, "Wrong size on AppleARKitFaceMeshComponent_UpdateMesh");
static_assert(offsetof(AppleARKitFaceMeshComponent_UpdateMesh, Vertices) == 0x000000, "Member 'AppleARKitFaceMeshComponent_UpdateMesh::Vertices' has a wrong offset!");

// Function AppleARKitFaceSupport.AppleARKitFaceMeshComponent.GetFaceBlendShapeAmount
// 0x0008 (0x0008 - 0x0000)
struct AppleARKitFaceMeshComponent_GetFaceBlendShapeAmount final
{
public:
	EARFaceBlendShape                             BlendShape;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppleARKitFaceMeshComponent_GetFaceBlendShapeAmount) == 0x000004, "Wrong alignment on AppleARKitFaceMeshComponent_GetFaceBlendShapeAmount");
static_assert(sizeof(AppleARKitFaceMeshComponent_GetFaceBlendShapeAmount) == 0x000008, "Wrong size on AppleARKitFaceMeshComponent_GetFaceBlendShapeAmount");
static_assert(offsetof(AppleARKitFaceMeshComponent_GetFaceBlendShapeAmount, BlendShape) == 0x000000, "Member 'AppleARKitFaceMeshComponent_GetFaceBlendShapeAmount::BlendShape' has a wrong offset!");
static_assert(offsetof(AppleARKitFaceMeshComponent_GetFaceBlendShapeAmount, ReturnValue) == 0x000004, "Member 'AppleARKitFaceMeshComponent_GetFaceBlendShapeAmount::ReturnValue' has a wrong offset!");

// Function AppleARKitFaceSupport.AppleARKitFaceMeshComponent.GetLastUpdateFrameNumber
// 0x0004 (0x0004 - 0x0000)
struct AppleARKitFaceMeshComponent_GetLastUpdateFrameNumber final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppleARKitFaceMeshComponent_GetLastUpdateFrameNumber) == 0x000004, "Wrong alignment on AppleARKitFaceMeshComponent_GetLastUpdateFrameNumber");
static_assert(sizeof(AppleARKitFaceMeshComponent_GetLastUpdateFrameNumber) == 0x000004, "Wrong size on AppleARKitFaceMeshComponent_GetLastUpdateFrameNumber");
static_assert(offsetof(AppleARKitFaceMeshComponent_GetLastUpdateFrameNumber, ReturnValue) == 0x000000, "Member 'AppleARKitFaceMeshComponent_GetLastUpdateFrameNumber::ReturnValue' has a wrong offset!");

// Function AppleARKitFaceSupport.AppleARKitFaceMeshComponent.GetLastUpdateTimestamp
// 0x0004 (0x0004 - 0x0000)
struct AppleARKitFaceMeshComponent_GetLastUpdateTimestamp final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppleARKitFaceMeshComponent_GetLastUpdateTimestamp) == 0x000004, "Wrong alignment on AppleARKitFaceMeshComponent_GetLastUpdateTimestamp");
static_assert(sizeof(AppleARKitFaceMeshComponent_GetLastUpdateTimestamp) == 0x000004, "Wrong size on AppleARKitFaceMeshComponent_GetLastUpdateTimestamp");
static_assert(offsetof(AppleARKitFaceMeshComponent_GetLastUpdateTimestamp, ReturnValue) == 0x000000, "Member 'AppleARKitFaceMeshComponent_GetLastUpdateTimestamp::ReturnValue' has a wrong offset!");

// Function AppleARKitFaceSupport.AppleARKitFaceMeshComponent.GetTransform
// 0x0060 (0x0060 - 0x0000)
struct AppleARKitFaceMeshComponent_GetTransform final
{
public:
	struct FTransform                             ReturnValue;                                       // 0x0000(0x0060)(Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppleARKitFaceMeshComponent_GetTransform) == 0x000010, "Wrong alignment on AppleARKitFaceMeshComponent_GetTransform");
static_assert(sizeof(AppleARKitFaceMeshComponent_GetTransform) == 0x000060, "Wrong size on AppleARKitFaceMeshComponent_GetTransform");
static_assert(offsetof(AppleARKitFaceMeshComponent_GetTransform, ReturnValue) == 0x000000, "Member 'AppleARKitFaceMeshComponent_GetTransform::ReturnValue' has a wrong offset!");

}

