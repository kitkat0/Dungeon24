#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ExtractDevice

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_InteractableBase_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "AkAudio_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_ExtractDevice.BP_ExtractDevice_C
// 0x0058 (0x03A8 - 0x0350)
class ABP_ExtractDevice_C : public ABP_InteractableBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_ExtractDevice_C;                 // 0x0350(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAkComponent*                           Ak;                                                // 0x0358(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      VFX_Loop;                                          // 0x0360(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      VFX_Once;                                          // 0x0368(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                InitialLocation;                                   // 0x0370(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        InitialColorIntensity;                             // 0x0388(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CacheColorIntensity;                               // 0x0390(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          TickColorIntensity;                                // 0x0398(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_399[0x3];                                      // 0x0399(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Interactions;                                      // 0x039C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CompletedInteractions;                             // 0x03A0(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	bool                                          ConsumeScroll;                                     // 0x03A4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InteractOnceSpawnAll;                              // 0x03A5(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BeginInteract();
	void EndInteract();
	void ExecuteUbergraph_BP_ExtractDevice(int32 EntryPoint);
	void GetInteractionPromptText(class APlayerController* Param_Instigator, class FText* Key, class FText* Out_Text_Line_1, class FText* Out_Text_Line_2);
	void HasInteractions(bool* Reset);
	void InitiliazeVFXLoop();
	void OnInteractionFinish(class APawn* InteractionPawn);
	void OnRep_CompletedInteractions();
	void PerformInteraction(class APawn* Interacting_Pawn);
	void PerformInteraction_on_Server(class APawn* InteractingPawn);
	void PromptTeleportScrollComsuption();
	void ReceiveBeginPlay();
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void ReceiveTick(float DeltaSeconds);
	void SpawnExtractPortal(class ABP_ExtractPortal_C** Portal);
	void UpdateInteractions();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ExtractDevice_C">();
	}
	static class ABP_ExtractDevice_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_ExtractDevice_C>();
	}
};
static_assert(alignof(ABP_ExtractDevice_C) == 0x000008, "Wrong alignment on ABP_ExtractDevice_C");
static_assert(sizeof(ABP_ExtractDevice_C) == 0x0003A8, "Wrong size on ABP_ExtractDevice_C");
static_assert(offsetof(ABP_ExtractDevice_C, UberGraphFrame_BP_ExtractDevice_C) == 0x000350, "Member 'ABP_ExtractDevice_C::UberGraphFrame_BP_ExtractDevice_C' has a wrong offset!");
static_assert(offsetof(ABP_ExtractDevice_C, Ak) == 0x000358, "Member 'ABP_ExtractDevice_C::Ak' has a wrong offset!");
static_assert(offsetof(ABP_ExtractDevice_C, VFX_Loop) == 0x000360, "Member 'ABP_ExtractDevice_C::VFX_Loop' has a wrong offset!");
static_assert(offsetof(ABP_ExtractDevice_C, VFX_Once) == 0x000368, "Member 'ABP_ExtractDevice_C::VFX_Once' has a wrong offset!");
static_assert(offsetof(ABP_ExtractDevice_C, InitialLocation) == 0x000370, "Member 'ABP_ExtractDevice_C::InitialLocation' has a wrong offset!");
static_assert(offsetof(ABP_ExtractDevice_C, InitialColorIntensity) == 0x000388, "Member 'ABP_ExtractDevice_C::InitialColorIntensity' has a wrong offset!");
static_assert(offsetof(ABP_ExtractDevice_C, CacheColorIntensity) == 0x000390, "Member 'ABP_ExtractDevice_C::CacheColorIntensity' has a wrong offset!");
static_assert(offsetof(ABP_ExtractDevice_C, TickColorIntensity) == 0x000398, "Member 'ABP_ExtractDevice_C::TickColorIntensity' has a wrong offset!");
static_assert(offsetof(ABP_ExtractDevice_C, Interactions) == 0x00039C, "Member 'ABP_ExtractDevice_C::Interactions' has a wrong offset!");
static_assert(offsetof(ABP_ExtractDevice_C, CompletedInteractions) == 0x0003A0, "Member 'ABP_ExtractDevice_C::CompletedInteractions' has a wrong offset!");
static_assert(offsetof(ABP_ExtractDevice_C, ConsumeScroll) == 0x0003A4, "Member 'ABP_ExtractDevice_C::ConsumeScroll' has a wrong offset!");
static_assert(offsetof(ABP_ExtractDevice_C, InteractOnceSpawnAll) == 0x0003A5, "Member 'ABP_ExtractDevice_C::InteractOnceSpawnAll' has a wrong offset!");

}

