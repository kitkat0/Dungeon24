#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UIExtension

#include "Basic.hpp"

#include "UIExtension_classes.hpp"
#include "UIExtension_parameters.hpp"


namespace SDK
{

// Function UIExtension.UIExtensionSubsystem.K2_RegisterExtensionAsData
// (Final, BlueprintCosmetic, Native, Protected, BlueprintCallable)
// Parameters:
// struct FGameplayTag                     ExtensionPointTag                                      (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          Data                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Priority                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FUIExtensionHandle               ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FUIExtensionHandle UUIExtensionSubsystem::K2_RegisterExtensionAsData(const struct FGameplayTag& ExtensionPointTag, class UObject* Data, int32 Priority)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIExtensionSubsystem", "K2_RegisterExtensionAsData");

	Params::UIExtensionSubsystem_K2_RegisterExtensionAsData Parms{};

	Parms.ExtensionPointTag = std::move(ExtensionPointTag);
	Parms.Data = Data;
	Parms.Priority = Priority;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UIExtension.UIExtensionSubsystem.K2_RegisterExtensionAsDataForContext
// (Final, BlueprintCosmetic, Native, Protected, BlueprintCallable)
// Parameters:
// struct FGameplayTag                     ExtensionPointTag                                      (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          ContextObject                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          Data                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Priority                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FUIExtensionHandle               ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FUIExtensionHandle UUIExtensionSubsystem::K2_RegisterExtensionAsDataForContext(const struct FGameplayTag& ExtensionPointTag, class UObject* ContextObject, class UObject* Data, int32 Priority)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIExtensionSubsystem", "K2_RegisterExtensionAsDataForContext");

	Params::UIExtensionSubsystem_K2_RegisterExtensionAsDataForContext Parms{};

	Parms.ExtensionPointTag = std::move(ExtensionPointTag);
	Parms.ContextObject = ContextObject;
	Parms.Data = Data;
	Parms.Priority = Priority;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UIExtension.UIExtensionSubsystem.K2_RegisterExtensionAsWidget
// (Final, BlueprintCosmetic, Native, Protected, BlueprintCallable)
// Parameters:
// struct FGameplayTag                     ExtensionPointTag                                      (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UUserWidget>          WidgetClass                                            (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Priority                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FUIExtensionHandle               ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FUIExtensionHandle UUIExtensionSubsystem::K2_RegisterExtensionAsWidget(const struct FGameplayTag& ExtensionPointTag, TSubclassOf<class UUserWidget> WidgetClass, int32 Priority)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIExtensionSubsystem", "K2_RegisterExtensionAsWidget");

	Params::UIExtensionSubsystem_K2_RegisterExtensionAsWidget Parms{};

	Parms.ExtensionPointTag = std::move(ExtensionPointTag);
	Parms.WidgetClass = WidgetClass;
	Parms.Priority = Priority;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UIExtension.UIExtensionSubsystem.K2_RegisterExtensionAsWidgetForContext
// (Final, BlueprintCosmetic, Native, Protected, BlueprintCallable)
// Parameters:
// struct FGameplayTag                     ExtensionPointTag                                      (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UUserWidget>          WidgetClass                                            (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          ContextObject                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Priority                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FUIExtensionHandle               ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FUIExtensionHandle UUIExtensionSubsystem::K2_RegisterExtensionAsWidgetForContext(const struct FGameplayTag& ExtensionPointTag, TSubclassOf<class UUserWidget> WidgetClass, class UObject* ContextObject, int32 Priority)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIExtensionSubsystem", "K2_RegisterExtensionAsWidgetForContext");

	Params::UIExtensionSubsystem_K2_RegisterExtensionAsWidgetForContext Parms{};

	Parms.ExtensionPointTag = std::move(ExtensionPointTag);
	Parms.WidgetClass = WidgetClass;
	Parms.ContextObject = ContextObject;
	Parms.Priority = Priority;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UIExtension.UIExtensionSubsystem.K2_RegisterExtensionPoint
// (Final, BlueprintCosmetic, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// struct FGameplayTag                     ExtensionPointTag                                      (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EUIExtensionPointMatch                  ExtensionPointTagMatchType                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UClass*>                   AllowedDataClasses                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(EUIExtensionAction Action, struct FUIExtensionRequest& ExtensionRequest)>ExtensionCallback                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FUIExtensionPointHandle          ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FUIExtensionPointHandle UUIExtensionSubsystem::K2_RegisterExtensionPoint(const struct FGameplayTag& ExtensionPointTag, EUIExtensionPointMatch ExtensionPointTagMatchType, const TArray<class UClass*>& AllowedDataClasses, TDelegate<void(EUIExtensionAction Action, struct FUIExtensionRequest& ExtensionRequest)> ExtensionCallback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIExtensionSubsystem", "K2_RegisterExtensionPoint");

	Params::UIExtensionSubsystem_K2_RegisterExtensionPoint Parms{};

	Parms.ExtensionPointTag = std::move(ExtensionPointTag);
	Parms.ExtensionPointTagMatchType = ExtensionPointTagMatchType;
	Parms.AllowedDataClasses = std::move(AllowedDataClasses);
	Parms.ExtensionCallback = ExtensionCallback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UIExtension.UIExtensionSubsystem.UnregisterExtension
// (Final, BlueprintCosmetic, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FUIExtensionHandle               ExtensionHandle                                        (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUIExtensionSubsystem::UnregisterExtension(const struct FUIExtensionHandle& ExtensionHandle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIExtensionSubsystem", "UnregisterExtension");

	Params::UIExtensionSubsystem_UnregisterExtension Parms{};

	Parms.ExtensionHandle = std::move(ExtensionHandle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UIExtension.UIExtensionSubsystem.UnregisterExtensionAsWidget
// (Final, BlueprintCosmetic, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FGameplayTag                     ExtensionPointTag                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UUserWidget>          InWidgetClass                                          (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUIExtensionSubsystem::UnregisterExtensionAsWidget(const struct FGameplayTag& ExtensionPointTag, TSubclassOf<class UUserWidget> InWidgetClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIExtensionSubsystem", "UnregisterExtensionAsWidget");

	Params::UIExtensionSubsystem_UnregisterExtensionAsWidget Parms{};

	Parms.ExtensionPointTag = std::move(ExtensionPointTag);
	Parms.InWidgetClass = InWidgetClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UIExtension.UIExtensionSubsystem.UnregisterExtensionPoint
// (Final, BlueprintCosmetic, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FUIExtensionPointHandle          ExtensionPointHandle                                   (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUIExtensionSubsystem::UnregisterExtensionPoint(const struct FUIExtensionPointHandle& ExtensionPointHandle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIExtensionSubsystem", "UnregisterExtensionPoint");

	Params::UIExtensionSubsystem_UnregisterExtensionPoint Parms{};

	Parms.ExtensionPointHandle = std::move(ExtensionPointHandle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UIExtension.UIExtensionSubsystem.UnregisterExtensionsWithExceptions
// (Final, BlueprintCosmetic, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FGameplayTag                     ExtensionPointTag                                      (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<TSubclassOf<class UUserWidget>>  Exceptions                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, UObjectWrapper, NativeAccessSpecifierPublic)

void UUIExtensionSubsystem::UnregisterExtensionsWithExceptions(const struct FGameplayTag& ExtensionPointTag, const TArray<TSubclassOf<class UUserWidget>>& Exceptions)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIExtensionSubsystem", "UnregisterExtensionsWithExceptions");

	Params::UIExtensionSubsystem_UnregisterExtensionsWithExceptions Parms{};

	Parms.ExtensionPointTag = std::move(ExtensionPointTag);
	Parms.Exceptions = std::move(Exceptions);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UIExtension.UIExtensionHandleFunctions.IsValid
// (Final, BlueprintCosmetic, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FUIExtensionHandle               Handle                                                 (Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUIExtensionHandleFunctions::IsValid(struct FUIExtensionHandle& Handle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UIExtensionHandleFunctions", "IsValid");

	Params::UIExtensionHandleFunctions_IsValid Parms{};

	Parms.Handle = std::move(Handle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	Handle = std::move(Parms.Handle);

	return Parms.ReturnValue;
}


// Function UIExtension.UIExtensionHandleFunctions.Unregister
// (Final, BlueprintCosmetic, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FUIExtensionHandle               Handle                                                 (Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUIExtensionHandleFunctions::Unregister(struct FUIExtensionHandle& Handle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UIExtensionHandleFunctions", "Unregister");

	Params::UIExtensionHandleFunctions_Unregister Parms{};

	Parms.Handle = std::move(Handle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	Handle = std::move(Parms.Handle);
}


// Function UIExtension.UIExtensionPointHandleFunctions.IsValid
// (Final, BlueprintCosmetic, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FUIExtensionPointHandle          Handle                                                 (Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUIExtensionPointHandleFunctions::IsValid(struct FUIExtensionPointHandle& Handle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UIExtensionPointHandleFunctions", "IsValid");

	Params::UIExtensionPointHandleFunctions_IsValid Parms{};

	Parms.Handle = std::move(Handle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	Handle = std::move(Parms.Handle);

	return Parms.ReturnValue;
}


// Function UIExtension.UIExtensionPointHandleFunctions.Unregister
// (Final, BlueprintCosmetic, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FUIExtensionPointHandle          Handle                                                 (Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUIExtensionPointHandleFunctions::Unregister(struct FUIExtensionPointHandle& Handle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UIExtensionPointHandleFunctions", "Unregister");

	Params::UIExtensionPointHandleFunctions_Unregister Parms{};

	Parms.Handle = std::move(Handle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	Handle = std::move(Parms.Handle);
}

}

