#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_TGF_PlayerState

#include "Basic.hpp"

#include "BP_TGF_PlayerState_classes.hpp"
#include "BP_TGF_PlayerState_parameters.hpp"


namespace SDK
{

// Function BP_TGF_PlayerState.BP_TGF_PlayerState_C.ExecuteUbergraph_BP_TGF_PlayerState
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TGF_PlayerState_C::ExecuteUbergraph_BP_TGF_PlayerState(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TGF_PlayerState_C", "ExecuteUbergraph_BP_TGF_PlayerState");

	Params::BP_TGF_PlayerState_C_ExecuteUbergraph_BP_TGF_PlayerState Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TGF_PlayerState.BP_TGF_PlayerState_C.MulticastMarkPoint
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsDangerType                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TGF_PlayerState_C::MulticastMarkPoint(const struct FVector& Location, bool IsDangerType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TGF_PlayerState_C", "MulticastMarkPoint");

	Params::BP_TGF_PlayerState_C_MulticastMarkPoint Parms{};

	Parms.Location = std::move(Location);
	Parms.IsDangerType = IsDangerType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TGF_PlayerState.BP_TGF_PlayerState_C.OnMarkPointTimeOut
// (BlueprintCallable, BlueprintEvent)

void ABP_TGF_PlayerState_C::OnMarkPointTimeOut()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TGF_PlayerState_C", "OnMarkPointTimeOut");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TGF_PlayerState.BP_TGF_PlayerState_C.SpawnMarkPointLocal
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsDangerType                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TGF_PlayerState_C::SpawnMarkPointLocal(const struct FVector& Location, bool IsDangerType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TGF_PlayerState_C", "SpawnMarkPointLocal");

	Params::BP_TGF_PlayerState_C_SpawnMarkPointLocal Parms{};

	Parms.Location = std::move(Location);
	Parms.IsDangerType = IsDangerType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TGF_PlayerState.BP_TGF_PlayerState_C.TrySpawnOrUpdateMarkPoint
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsDangerType                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TGF_PlayerState_C::TrySpawnOrUpdateMarkPoint(const struct FVector& Location, bool IsDangerType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TGF_PlayerState_C", "TrySpawnOrUpdateMarkPoint");

	Params::BP_TGF_PlayerState_C_TrySpawnOrUpdateMarkPoint Parms{};

	Parms.Location = std::move(Location);
	Parms.IsDangerType = IsDangerType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TGF_PlayerState.BP_TGF_PlayerState_C.UpdateMarkPointToServer
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsDangerType                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TGF_PlayerState_C::UpdateMarkPointToServer(const struct FVector& Location, bool IsDangerType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TGF_PlayerState_C", "UpdateMarkPointToServer");

	Params::BP_TGF_PlayerState_C_UpdateMarkPointToServer Parms{};

	Parms.Location = std::move(Location);
	Parms.IsDangerType = IsDangerType;

	UObject::ProcessEvent(Func, &Parms);
}

}

