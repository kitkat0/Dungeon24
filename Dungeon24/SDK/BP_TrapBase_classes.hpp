#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_TrapBase

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "LyraGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_TrapBase.BP_TrapBase_C
// 0x00B8 (0x0350 - 0x0298)
class ABP_TrapBase_C final : public ATgfModularActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0298(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBoxComponent*                          BoxTrigger;                                        // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          DamageTrigger;                                     // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        MoveNode;                                          // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<class UClass*>                         DamageGE;                                          // 0x02B8(0x0010)(Edit, BlueprintVisible)
	bool                                          bOnlyPlayer;                                       // 0x02C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C9[0x3];                                      // 0x02C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ActorNum;                                          // 0x02CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 InterruptGE;                                       // 0x02D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          bCanCauseInterupt;                                 // 0x02D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D9[0x7];                                      // 0x02D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        HitValue;                                          // 0x02E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DefendHitValue;                                    // 0x02E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectContextHandle           EffectContext;                                     // 0x02F0(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          bOn;                                               // 0x0308(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_309[0x7];                                      // 0x0309(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        MoveDuration;                                      // 0x0310(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSelfTrigger;                                      // 0x0318(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_319[0x7];                                      // 0x0319(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UAbilitySystemComponent*>        DamagedASCs;                                       // 0x0320(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	double                                        RollbackValue;                                     // 0x0330(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LineTraceEndPoint;                                 // 0x0338(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__BP_FloorSpikes_DamageTrgger_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void BndEvt__BP_TrapBase_BoxTrigger_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void BndEvt__BP_TrapBase_BoxTrigger_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void ClearDamagedASCs();
	void ExecuteUbergraph_BP_TrapBase(int32 EntryPoint);
	void Move();
	void OnRep_bOn();
	void OnTriggered(int32 IntParam);
	void Reset();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_TrapBase_C">();
	}
	static class ABP_TrapBase_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_TrapBase_C>();
	}
};
static_assert(alignof(ABP_TrapBase_C) == 0x000008, "Wrong alignment on ABP_TrapBase_C");
static_assert(sizeof(ABP_TrapBase_C) == 0x000350, "Wrong size on ABP_TrapBase_C");
static_assert(offsetof(ABP_TrapBase_C, UberGraphFrame) == 0x000298, "Member 'ABP_TrapBase_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_TrapBase_C, BoxTrigger) == 0x0002A0, "Member 'ABP_TrapBase_C::BoxTrigger' has a wrong offset!");
static_assert(offsetof(ABP_TrapBase_C, DamageTrigger) == 0x0002A8, "Member 'ABP_TrapBase_C::DamageTrigger' has a wrong offset!");
static_assert(offsetof(ABP_TrapBase_C, MoveNode) == 0x0002B0, "Member 'ABP_TrapBase_C::MoveNode' has a wrong offset!");
static_assert(offsetof(ABP_TrapBase_C, DamageGE) == 0x0002B8, "Member 'ABP_TrapBase_C::DamageGE' has a wrong offset!");
static_assert(offsetof(ABP_TrapBase_C, bOnlyPlayer) == 0x0002C8, "Member 'ABP_TrapBase_C::bOnlyPlayer' has a wrong offset!");
static_assert(offsetof(ABP_TrapBase_C, ActorNum) == 0x0002CC, "Member 'ABP_TrapBase_C::ActorNum' has a wrong offset!");
static_assert(offsetof(ABP_TrapBase_C, InterruptGE) == 0x0002D0, "Member 'ABP_TrapBase_C::InterruptGE' has a wrong offset!");
static_assert(offsetof(ABP_TrapBase_C, bCanCauseInterupt) == 0x0002D8, "Member 'ABP_TrapBase_C::bCanCauseInterupt' has a wrong offset!");
static_assert(offsetof(ABP_TrapBase_C, HitValue) == 0x0002E0, "Member 'ABP_TrapBase_C::HitValue' has a wrong offset!");
static_assert(offsetof(ABP_TrapBase_C, DefendHitValue) == 0x0002E8, "Member 'ABP_TrapBase_C::DefendHitValue' has a wrong offset!");
static_assert(offsetof(ABP_TrapBase_C, EffectContext) == 0x0002F0, "Member 'ABP_TrapBase_C::EffectContext' has a wrong offset!");
static_assert(offsetof(ABP_TrapBase_C, bOn) == 0x000308, "Member 'ABP_TrapBase_C::bOn' has a wrong offset!");
static_assert(offsetof(ABP_TrapBase_C, MoveDuration) == 0x000310, "Member 'ABP_TrapBase_C::MoveDuration' has a wrong offset!");
static_assert(offsetof(ABP_TrapBase_C, bSelfTrigger) == 0x000318, "Member 'ABP_TrapBase_C::bSelfTrigger' has a wrong offset!");
static_assert(offsetof(ABP_TrapBase_C, DamagedASCs) == 0x000320, "Member 'ABP_TrapBase_C::DamagedASCs' has a wrong offset!");
static_assert(offsetof(ABP_TrapBase_C, RollbackValue) == 0x000330, "Member 'ABP_TrapBase_C::RollbackValue' has a wrong offset!");
static_assert(offsetof(ABP_TrapBase_C, LineTraceEndPoint) == 0x000338, "Member 'ABP_TrapBase_C::LineTraceEndPoint' has a wrong offset!");

}

