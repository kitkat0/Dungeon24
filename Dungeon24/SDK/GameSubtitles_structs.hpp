#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GameSubtitles

#include "Basic.hpp"


namespace SDK
{

// Enum GameSubtitles.ESubtitleDisplayTextSize
// NumValues: 0x0006
enum class ESubtitleDisplayTextSize : uint8
{
	ExtraSmall                               = 0,
	Small                                    = 1,
	Medium                                   = 2,
	Large                                    = 3,
	ExtraLarge                               = 4,
	ESubtitleDisplayTextSize_MAX             = 5,
};

// Enum GameSubtitles.ESubtitleDisplayTextColor
// NumValues: 0x0003
enum class ESubtitleDisplayTextColor : uint8
{
	White                                    = 0,
	Yellow                                   = 1,
	ESubtitleDisplayTextColor_MAX            = 2,
};

// Enum GameSubtitles.ESubtitleDisplayTextBorder
// NumValues: 0x0004
enum class ESubtitleDisplayTextBorder : uint8
{
	None                                     = 0,
	Outline                                  = 1,
	DropShadow                               = 2,
	ESubtitleDisplayTextBorder_MAX           = 3,
};

// Enum GameSubtitles.ESubtitleDisplayBackgroundOpacity
// NumValues: 0x0006
enum class ESubtitleDisplayBackgroundOpacity : uint8
{
	Clear                                    = 0,
	Low                                      = 1,
	Medium                                   = 2,
	High                                     = 3,
	Solid                                    = 4,
	ESubtitleDisplayBackgroundOpacity_MAX    = 5,
};

// ScriptStruct GameSubtitles.SubtitleFormat
// 0x0004 (0x0004 - 0x0000)
struct FSubtitleFormat final
{
public:
	ESubtitleDisplayTextSize                      SubtitleTextSize;                                  // 0x0000(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESubtitleDisplayTextColor                     SubtitleTextColor;                                 // 0x0001(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESubtitleDisplayTextBorder                    SubtitleTextBorder;                                // 0x0002(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESubtitleDisplayBackgroundOpacity             SubtitleBackgroundOpacity;                         // 0x0003(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FSubtitleFormat) == 0x000001, "Wrong alignment on FSubtitleFormat");
static_assert(sizeof(FSubtitleFormat) == 0x000004, "Wrong size on FSubtitleFormat");
static_assert(offsetof(FSubtitleFormat, SubtitleTextSize) == 0x000000, "Member 'FSubtitleFormat::SubtitleTextSize' has a wrong offset!");
static_assert(offsetof(FSubtitleFormat, SubtitleTextColor) == 0x000001, "Member 'FSubtitleFormat::SubtitleTextColor' has a wrong offset!");
static_assert(offsetof(FSubtitleFormat, SubtitleTextBorder) == 0x000002, "Member 'FSubtitleFormat::SubtitleTextBorder' has a wrong offset!");
static_assert(offsetof(FSubtitleFormat, SubtitleBackgroundOpacity) == 0x000003, "Member 'FSubtitleFormat::SubtitleBackgroundOpacity' has a wrong offset!");

}

