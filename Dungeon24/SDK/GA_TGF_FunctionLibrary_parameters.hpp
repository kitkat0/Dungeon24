#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_TGF_FunctionLibrary

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "TgfGameplayEffectHandleData_structs.hpp"
#include "LyraGame_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function GA_TGF_FunctionLibrary.GA_TGF_FunctionLibrary_C.CalculateOffsetAccordingToActor
// 0x0188 (0x0188 - 0x0000)
struct GA_TGF_FunctionLibrary_C_CalculateOffsetAccordingToActor final
{
public:
	double                                        Forward;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Up;                                                // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Right;                                             // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                BaseLocation;                                      // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               BaseRot;                                           // 0x0030(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UObject*                                __WorldContext;                                    // 0x0048(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Result;                                            // 0x0050(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetRightVector_ReturnValue;               // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUpVector_ReturnValue;                  // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x00C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_1;        // 0x00E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_2;        // 0x00F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_1;      // 0x0110(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_2;      // 0x0128(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0140(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0158(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x0170(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_TGF_FunctionLibrary_C_CalculateOffsetAccordingToActor) == 0x000008, "Wrong alignment on GA_TGF_FunctionLibrary_C_CalculateOffsetAccordingToActor");
static_assert(sizeof(GA_TGF_FunctionLibrary_C_CalculateOffsetAccordingToActor) == 0x000188, "Wrong size on GA_TGF_FunctionLibrary_C_CalculateOffsetAccordingToActor");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_CalculateOffsetAccordingToActor, Forward) == 0x000000, "Member 'GA_TGF_FunctionLibrary_C_CalculateOffsetAccordingToActor::Forward' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_CalculateOffsetAccordingToActor, Up) == 0x000008, "Member 'GA_TGF_FunctionLibrary_C_CalculateOffsetAccordingToActor::Up' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_CalculateOffsetAccordingToActor, Right) == 0x000010, "Member 'GA_TGF_FunctionLibrary_C_CalculateOffsetAccordingToActor::Right' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_CalculateOffsetAccordingToActor, BaseLocation) == 0x000018, "Member 'GA_TGF_FunctionLibrary_C_CalculateOffsetAccordingToActor::BaseLocation' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_CalculateOffsetAccordingToActor, BaseRot) == 0x000030, "Member 'GA_TGF_FunctionLibrary_C_CalculateOffsetAccordingToActor::BaseRot' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_CalculateOffsetAccordingToActor, __WorldContext) == 0x000048, "Member 'GA_TGF_FunctionLibrary_C_CalculateOffsetAccordingToActor::__WorldContext' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_CalculateOffsetAccordingToActor, Result) == 0x000050, "Member 'GA_TGF_FunctionLibrary_C_CalculateOffsetAccordingToActor::Result' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_CalculateOffsetAccordingToActor, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000068, "Member 'GA_TGF_FunctionLibrary_C_CalculateOffsetAccordingToActor::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_CalculateOffsetAccordingToActor, CallFunc_GetRightVector_ReturnValue) == 0x000080, "Member 'GA_TGF_FunctionLibrary_C_CalculateOffsetAccordingToActor::CallFunc_GetRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_CalculateOffsetAccordingToActor, CallFunc_GetUpVector_ReturnValue) == 0x000098, "Member 'GA_TGF_FunctionLibrary_C_CalculateOffsetAccordingToActor::CallFunc_GetUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_CalculateOffsetAccordingToActor, CallFunc_Multiply_VectorVector_ReturnValue) == 0x0000B0, "Member 'GA_TGF_FunctionLibrary_C_CalculateOffsetAccordingToActor::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_CalculateOffsetAccordingToActor, CallFunc_GetForwardVector_ReturnValue) == 0x0000C8, "Member 'GA_TGF_FunctionLibrary_C_CalculateOffsetAccordingToActor::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_CalculateOffsetAccordingToActor, CallFunc_Conv_DoubleToVector_ReturnValue_1) == 0x0000E0, "Member 'GA_TGF_FunctionLibrary_C_CalculateOffsetAccordingToActor::CallFunc_Conv_DoubleToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_CalculateOffsetAccordingToActor, CallFunc_Conv_DoubleToVector_ReturnValue_2) == 0x0000F8, "Member 'GA_TGF_FunctionLibrary_C_CalculateOffsetAccordingToActor::CallFunc_Conv_DoubleToVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_CalculateOffsetAccordingToActor, CallFunc_Multiply_VectorVector_ReturnValue_1) == 0x000110, "Member 'GA_TGF_FunctionLibrary_C_CalculateOffsetAccordingToActor::CallFunc_Multiply_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_CalculateOffsetAccordingToActor, CallFunc_Multiply_VectorVector_ReturnValue_2) == 0x000128, "Member 'GA_TGF_FunctionLibrary_C_CalculateOffsetAccordingToActor::CallFunc_Multiply_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_CalculateOffsetAccordingToActor, CallFunc_Add_VectorVector_ReturnValue) == 0x000140, "Member 'GA_TGF_FunctionLibrary_C_CalculateOffsetAccordingToActor::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_CalculateOffsetAccordingToActor, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000158, "Member 'GA_TGF_FunctionLibrary_C_CalculateOffsetAccordingToActor::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_CalculateOffsetAccordingToActor, CallFunc_Add_VectorVector_ReturnValue_2) == 0x000170, "Member 'GA_TGF_FunctionLibrary_C_CalculateOffsetAccordingToActor::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");

// Function GA_TGF_FunctionLibrary.GA_TGF_FunctionLibrary_C.CanBeTarget
// 0x0018 (0x0018 - 0x0000)
struct GA_TGF_FunctionLibrary_C_CanBeTarget final
{
public:
	class AActor*                                 InputActor;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanBeTarget_ReturnValue;                  // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_TGF_FunctionLibrary_C_CanBeTarget) == 0x000008, "Wrong alignment on GA_TGF_FunctionLibrary_C_CanBeTarget");
static_assert(sizeof(GA_TGF_FunctionLibrary_C_CanBeTarget) == 0x000018, "Wrong size on GA_TGF_FunctionLibrary_C_CanBeTarget");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_CanBeTarget, InputActor) == 0x000000, "Member 'GA_TGF_FunctionLibrary_C_CanBeTarget::InputActor' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_CanBeTarget, __WorldContext) == 0x000008, "Member 'GA_TGF_FunctionLibrary_C_CanBeTarget::__WorldContext' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_CanBeTarget, Result) == 0x000010, "Member 'GA_TGF_FunctionLibrary_C_CanBeTarget::Result' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_CanBeTarget, CallFunc_CanBeTarget_ReturnValue) == 0x000011, "Member 'GA_TGF_FunctionLibrary_C_CanBeTarget::CallFunc_CanBeTarget_ReturnValue' has a wrong offset!");

// Function GA_TGF_FunctionLibrary.GA_TGF_FunctionLibrary_C.CheckAbilityAdditionalCostValid
// 0x00A8 (0x00A8 - 0x0000)
struct GA_TGF_FunctionLibrary_C_CheckAbilityAdditionalCostValid final
{
public:
	TArray<ETgfEquipSlot>                         CanUseAdditionalList;                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          IgnoreCheck;                                       // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ALyraCharacter*                         InActor;                                           // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<ETgfEquipSlot>                         AllAdditionalList;                                 // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UObject*                                __WorldContext;                                    // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTgfEquipmentManagerComponent*          EquipmentComponent;                                // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CostValid;                                         // 0x0040(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTgfEquipmentManagerComponent*          EquipmentComp;                                     // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETgfEquipSlot                                 CallFunc_Array_Get_Item;                           // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTgfEquipmentManagerComponent*          CallFunc_GetComponentByClass_ReturnValue;          // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETgfEquipSlot                                 CallFunc_Array_Get_Item_1;                         // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue_1;            // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULyraEquipmentInstance*                 CallFunc_GetEquipBySlot_ReturnValue;               // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x009D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9E[0x2];                                       // 0x009E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_TGF_FunctionLibrary_C_CheckAbilityAdditionalCostValid) == 0x000008, "Wrong alignment on GA_TGF_FunctionLibrary_C_CheckAbilityAdditionalCostValid");
static_assert(sizeof(GA_TGF_FunctionLibrary_C_CheckAbilityAdditionalCostValid) == 0x0000A8, "Wrong size on GA_TGF_FunctionLibrary_C_CheckAbilityAdditionalCostValid");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_CheckAbilityAdditionalCostValid, CanUseAdditionalList) == 0x000000, "Member 'GA_TGF_FunctionLibrary_C_CheckAbilityAdditionalCostValid::CanUseAdditionalList' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_CheckAbilityAdditionalCostValid, IgnoreCheck) == 0x000010, "Member 'GA_TGF_FunctionLibrary_C_CheckAbilityAdditionalCostValid::IgnoreCheck' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_CheckAbilityAdditionalCostValid, InActor) == 0x000018, "Member 'GA_TGF_FunctionLibrary_C_CheckAbilityAdditionalCostValid::InActor' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_CheckAbilityAdditionalCostValid, AllAdditionalList) == 0x000020, "Member 'GA_TGF_FunctionLibrary_C_CheckAbilityAdditionalCostValid::AllAdditionalList' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_CheckAbilityAdditionalCostValid, __WorldContext) == 0x000030, "Member 'GA_TGF_FunctionLibrary_C_CheckAbilityAdditionalCostValid::__WorldContext' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_CheckAbilityAdditionalCostValid, EquipmentComponent) == 0x000038, "Member 'GA_TGF_FunctionLibrary_C_CheckAbilityAdditionalCostValid::EquipmentComponent' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_CheckAbilityAdditionalCostValid, CostValid) == 0x000040, "Member 'GA_TGF_FunctionLibrary_C_CheckAbilityAdditionalCostValid::CostValid' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_CheckAbilityAdditionalCostValid, EquipmentComp) == 0x000048, "Member 'GA_TGF_FunctionLibrary_C_CheckAbilityAdditionalCostValid::EquipmentComp' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_CheckAbilityAdditionalCostValid, Temp_int_Array_Index_Variable) == 0x000050, "Member 'GA_TGF_FunctionLibrary_C_CheckAbilityAdditionalCostValid::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_CheckAbilityAdditionalCostValid, CallFunc_Array_Length_ReturnValue) == 0x000054, "Member 'GA_TGF_FunctionLibrary_C_CheckAbilityAdditionalCostValid::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_CheckAbilityAdditionalCostValid, CallFunc_Array_Get_Item) == 0x000058, "Member 'GA_TGF_FunctionLibrary_C_CheckAbilityAdditionalCostValid::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_CheckAbilityAdditionalCostValid, CallFunc_Array_AddUnique_ReturnValue) == 0x00005C, "Member 'GA_TGF_FunctionLibrary_C_CheckAbilityAdditionalCostValid::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_CheckAbilityAdditionalCostValid, CallFunc_Array_Length_ReturnValue_1) == 0x000060, "Member 'GA_TGF_FunctionLibrary_C_CheckAbilityAdditionalCostValid::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_CheckAbilityAdditionalCostValid, CallFunc_GetComponentByClass_ReturnValue) == 0x000068, "Member 'GA_TGF_FunctionLibrary_C_CheckAbilityAdditionalCostValid::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_CheckAbilityAdditionalCostValid, CallFunc_Array_Length_ReturnValue_2) == 0x000070, "Member 'GA_TGF_FunctionLibrary_C_CheckAbilityAdditionalCostValid::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_CheckAbilityAdditionalCostValid, CallFunc_Greater_IntInt_ReturnValue) == 0x000074, "Member 'GA_TGF_FunctionLibrary_C_CheckAbilityAdditionalCostValid::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_CheckAbilityAdditionalCostValid, Temp_int_Loop_Counter_Variable) == 0x000078, "Member 'GA_TGF_FunctionLibrary_C_CheckAbilityAdditionalCostValid::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_CheckAbilityAdditionalCostValid, CallFunc_Less_IntInt_ReturnValue) == 0x00007C, "Member 'GA_TGF_FunctionLibrary_C_CheckAbilityAdditionalCostValid::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_CheckAbilityAdditionalCostValid, CallFunc_Add_IntInt_ReturnValue) == 0x000080, "Member 'GA_TGF_FunctionLibrary_C_CheckAbilityAdditionalCostValid::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_CheckAbilityAdditionalCostValid, Temp_int_Array_Index_Variable_1) == 0x000084, "Member 'GA_TGF_FunctionLibrary_C_CheckAbilityAdditionalCostValid::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_CheckAbilityAdditionalCostValid, CallFunc_Array_Get_Item_1) == 0x000088, "Member 'GA_TGF_FunctionLibrary_C_CheckAbilityAdditionalCostValid::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_CheckAbilityAdditionalCostValid, CallFunc_Array_AddUnique_ReturnValue_1) == 0x00008C, "Member 'GA_TGF_FunctionLibrary_C_CheckAbilityAdditionalCostValid::CallFunc_Array_AddUnique_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_CheckAbilityAdditionalCostValid, CallFunc_GetEquipBySlot_ReturnValue) == 0x000090, "Member 'GA_TGF_FunctionLibrary_C_CheckAbilityAdditionalCostValid::CallFunc_GetEquipBySlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_CheckAbilityAdditionalCostValid, Temp_int_Loop_Counter_Variable_1) == 0x000098, "Member 'GA_TGF_FunctionLibrary_C_CheckAbilityAdditionalCostValid::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_CheckAbilityAdditionalCostValid, CallFunc_IsValid_ReturnValue) == 0x00009C, "Member 'GA_TGF_FunctionLibrary_C_CheckAbilityAdditionalCostValid::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_CheckAbilityAdditionalCostValid, CallFunc_Less_IntInt_ReturnValue_1) == 0x00009D, "Member 'GA_TGF_FunctionLibrary_C_CheckAbilityAdditionalCostValid::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_CheckAbilityAdditionalCostValid, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000A0, "Member 'GA_TGF_FunctionLibrary_C_CheckAbilityAdditionalCostValid::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_CheckAbilityAdditionalCostValid, CallFunc_IsValid_ReturnValue_1) == 0x0000A4, "Member 'GA_TGF_FunctionLibrary_C_CheckAbilityAdditionalCostValid::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function GA_TGF_FunctionLibrary.GA_TGF_FunctionLibrary_C.CheckCharacterStateValid
// 0x0098 (0x0098 - 0x0000)
struct GA_TGF_FunctionLibrary_C_CheckCharacterStateValid final
{
public:
	class ALyraCharacter*                         InputActor;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  MustHaveTags;                                      // 0x0008(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FGameplayTagContainer                  MustNotHaveTags;                                   // 0x0028(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          DontCareCharacterState;                            // 0x0048(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0050(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  RelevantTags;                                      // 0x0058(0x0020)(Parm, OutParm)
	bool                                          Result;                                            // 0x0078(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SkipNormalCheck;                                   // 0x0079(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7A[0x6];                                       // 0x007A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ALyraCharacter*                         CurActor;                                          // 0x0080(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumGameplayTagsInContainer_ReturnValue; // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumGameplayTagsInContainer_ReturnValue_1; // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue;   // 0x0093(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAllMatchingGameplayTags_ReturnValue;   // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsNormalCharacterState_ReturnValue;       // 0x0095(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_TGF_FunctionLibrary_C_CheckCharacterStateValid) == 0x000008, "Wrong alignment on GA_TGF_FunctionLibrary_C_CheckCharacterStateValid");
static_assert(sizeof(GA_TGF_FunctionLibrary_C_CheckCharacterStateValid) == 0x000098, "Wrong size on GA_TGF_FunctionLibrary_C_CheckCharacterStateValid");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_CheckCharacterStateValid, InputActor) == 0x000000, "Member 'GA_TGF_FunctionLibrary_C_CheckCharacterStateValid::InputActor' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_CheckCharacterStateValid, MustHaveTags) == 0x000008, "Member 'GA_TGF_FunctionLibrary_C_CheckCharacterStateValid::MustHaveTags' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_CheckCharacterStateValid, MustNotHaveTags) == 0x000028, "Member 'GA_TGF_FunctionLibrary_C_CheckCharacterStateValid::MustNotHaveTags' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_CheckCharacterStateValid, DontCareCharacterState) == 0x000048, "Member 'GA_TGF_FunctionLibrary_C_CheckCharacterStateValid::DontCareCharacterState' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_CheckCharacterStateValid, __WorldContext) == 0x000050, "Member 'GA_TGF_FunctionLibrary_C_CheckCharacterStateValid::__WorldContext' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_CheckCharacterStateValid, RelevantTags) == 0x000058, "Member 'GA_TGF_FunctionLibrary_C_CheckCharacterStateValid::RelevantTags' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_CheckCharacterStateValid, Result) == 0x000078, "Member 'GA_TGF_FunctionLibrary_C_CheckCharacterStateValid::Result' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_CheckCharacterStateValid, SkipNormalCheck) == 0x000079, "Member 'GA_TGF_FunctionLibrary_C_CheckCharacterStateValid::SkipNormalCheck' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_CheckCharacterStateValid, CurActor) == 0x000080, "Member 'GA_TGF_FunctionLibrary_C_CheckCharacterStateValid::CurActor' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_CheckCharacterStateValid, CallFunc_GetNumGameplayTagsInContainer_ReturnValue) == 0x000088, "Member 'GA_TGF_FunctionLibrary_C_CheckCharacterStateValid::CallFunc_GetNumGameplayTagsInContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_CheckCharacterStateValid, CallFunc_GetNumGameplayTagsInContainer_ReturnValue_1) == 0x00008C, "Member 'GA_TGF_FunctionLibrary_C_CheckCharacterStateValid::CallFunc_GetNumGameplayTagsInContainer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_CheckCharacterStateValid, CallFunc_Greater_IntInt_ReturnValue) == 0x000090, "Member 'GA_TGF_FunctionLibrary_C_CheckCharacterStateValid::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_CheckCharacterStateValid, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000091, "Member 'GA_TGF_FunctionLibrary_C_CheckCharacterStateValid::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_CheckCharacterStateValid, CallFunc_IsValid_ReturnValue) == 0x000092, "Member 'GA_TGF_FunctionLibrary_C_CheckCharacterStateValid::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_CheckCharacterStateValid, CallFunc_HasAnyMatchingGameplayTags_ReturnValue) == 0x000093, "Member 'GA_TGF_FunctionLibrary_C_CheckCharacterStateValid::CallFunc_HasAnyMatchingGameplayTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_CheckCharacterStateValid, CallFunc_HasAllMatchingGameplayTags_ReturnValue) == 0x000094, "Member 'GA_TGF_FunctionLibrary_C_CheckCharacterStateValid::CallFunc_HasAllMatchingGameplayTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_CheckCharacterStateValid, CallFunc_IsNormalCharacterState_ReturnValue) == 0x000095, "Member 'GA_TGF_FunctionLibrary_C_CheckCharacterStateValid::CallFunc_IsNormalCharacterState_ReturnValue' has a wrong offset!");

// Function GA_TGF_FunctionLibrary.GA_TGF_FunctionLibrary_C.CheckCrouch
// 0x0018 (0x0018 - 0x0000)
struct GA_TGF_FunctionLibrary_C_CheckCrouch final
{
public:
	class ALyraCharacter*                         InputActor;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_TGF_FunctionLibrary_C_CheckCrouch) == 0x000008, "Wrong alignment on GA_TGF_FunctionLibrary_C_CheckCrouch");
static_assert(sizeof(GA_TGF_FunctionLibrary_C_CheckCrouch) == 0x000018, "Wrong size on GA_TGF_FunctionLibrary_C_CheckCrouch");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_CheckCrouch, InputActor) == 0x000000, "Member 'GA_TGF_FunctionLibrary_C_CheckCrouch::InputActor' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_CheckCrouch, __WorldContext) == 0x000008, "Member 'GA_TGF_FunctionLibrary_C_CheckCrouch::__WorldContext' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_CheckCrouch, CallFunc_BooleanOR_ReturnValue) == 0x000010, "Member 'GA_TGF_FunctionLibrary_C_CheckCrouch::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function GA_TGF_FunctionLibrary.GA_TGF_FunctionLibrary_C.Get Adjust Collision Spawn Pos
// 0x02D0 (0x02D0 - 0x0000)
struct GA_TGF_FunctionLibrary_C_Get_Adjust_Collision_Spawn_Pos final
{
public:
	struct FVector                                OriginalPos;                                       // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ALyraCharacter*                         Instigator;                                        // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        AdjustDelta;                                       // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                AdjustPos;                                         // 0x0030(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ALyraPlayerController*                  CallFunc_GetLyraPlayerController_ReturnValue;      // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0068(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_GetPlayerViewPoint_Location;              // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetPlayerViewPoint_Rotation;              // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x00A8(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_191[0x7];                                      // 0x0191(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0198(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x01B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x01C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CA[0x2];                                      // 0x01CA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D4[0x4];                                      // 0x01D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x01D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x01F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0208(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0220(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0238(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0240(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0248(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0264(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26C[0x4];                                      // 0x026C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0270(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0288(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x02A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x02B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_TGF_FunctionLibrary_C_Get_Adjust_Collision_Spawn_Pos) == 0x000008, "Wrong alignment on GA_TGF_FunctionLibrary_C_Get_Adjust_Collision_Spawn_Pos");
static_assert(sizeof(GA_TGF_FunctionLibrary_C_Get_Adjust_Collision_Spawn_Pos) == 0x0002D0, "Wrong size on GA_TGF_FunctionLibrary_C_Get_Adjust_Collision_Spawn_Pos");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_Get_Adjust_Collision_Spawn_Pos, OriginalPos) == 0x000000, "Member 'GA_TGF_FunctionLibrary_C_Get_Adjust_Collision_Spawn_Pos::OriginalPos' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_Get_Adjust_Collision_Spawn_Pos, Instigator) == 0x000018, "Member 'GA_TGF_FunctionLibrary_C_Get_Adjust_Collision_Spawn_Pos::Instigator' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_Get_Adjust_Collision_Spawn_Pos, AdjustDelta) == 0x000020, "Member 'GA_TGF_FunctionLibrary_C_Get_Adjust_Collision_Spawn_Pos::AdjustDelta' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_Get_Adjust_Collision_Spawn_Pos, __WorldContext) == 0x000028, "Member 'GA_TGF_FunctionLibrary_C_Get_Adjust_Collision_Spawn_Pos::__WorldContext' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_Get_Adjust_Collision_Spawn_Pos, AdjustPos) == 0x000030, "Member 'GA_TGF_FunctionLibrary_C_Get_Adjust_Collision_Spawn_Pos::AdjustPos' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_Get_Adjust_Collision_Spawn_Pos, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000048, "Member 'GA_TGF_FunctionLibrary_C_Get_Adjust_Collision_Spawn_Pos::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_Get_Adjust_Collision_Spawn_Pos, CallFunc_GetLyraPlayerController_ReturnValue) == 0x000060, "Member 'GA_TGF_FunctionLibrary_C_Get_Adjust_Collision_Spawn_Pos::CallFunc_GetLyraPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_Get_Adjust_Collision_Spawn_Pos, K2Node_MakeArray_Array) == 0x000068, "Member 'GA_TGF_FunctionLibrary_C_Get_Adjust_Collision_Spawn_Pos::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_Get_Adjust_Collision_Spawn_Pos, CallFunc_GetPlayerViewPoint_Location) == 0x000078, "Member 'GA_TGF_FunctionLibrary_C_Get_Adjust_Collision_Spawn_Pos::CallFunc_GetPlayerViewPoint_Location' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_Get_Adjust_Collision_Spawn_Pos, CallFunc_GetPlayerViewPoint_Rotation) == 0x000090, "Member 'GA_TGF_FunctionLibrary_C_Get_Adjust_Collision_Spawn_Pos::CallFunc_GetPlayerViewPoint_Rotation' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_Get_Adjust_Collision_Spawn_Pos, CallFunc_LineTraceSingle_OutHit) == 0x0000A8, "Member 'GA_TGF_FunctionLibrary_C_Get_Adjust_Collision_Spawn_Pos::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_Get_Adjust_Collision_Spawn_Pos, CallFunc_LineTraceSingle_ReturnValue) == 0x000190, "Member 'GA_TGF_FunctionLibrary_C_Get_Adjust_Collision_Spawn_Pos::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_Get_Adjust_Collision_Spawn_Pos, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000198, "Member 'GA_TGF_FunctionLibrary_C_Get_Adjust_Collision_Spawn_Pos::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_Get_Adjust_Collision_Spawn_Pos, CallFunc_Normal_ReturnValue) == 0x0001B0, "Member 'GA_TGF_FunctionLibrary_C_Get_Adjust_Collision_Spawn_Pos::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_Get_Adjust_Collision_Spawn_Pos, CallFunc_BreakHitResult_bBlockingHit) == 0x0001C8, "Member 'GA_TGF_FunctionLibrary_C_Get_Adjust_Collision_Spawn_Pos::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_Get_Adjust_Collision_Spawn_Pos, CallFunc_BreakHitResult_bInitialOverlap) == 0x0001C9, "Member 'GA_TGF_FunctionLibrary_C_Get_Adjust_Collision_Spawn_Pos::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_Get_Adjust_Collision_Spawn_Pos, CallFunc_BreakHitResult_Time) == 0x0001CC, "Member 'GA_TGF_FunctionLibrary_C_Get_Adjust_Collision_Spawn_Pos::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_Get_Adjust_Collision_Spawn_Pos, CallFunc_BreakHitResult_Distance) == 0x0001D0, "Member 'GA_TGF_FunctionLibrary_C_Get_Adjust_Collision_Spawn_Pos::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_Get_Adjust_Collision_Spawn_Pos, CallFunc_BreakHitResult_Location) == 0x0001D8, "Member 'GA_TGF_FunctionLibrary_C_Get_Adjust_Collision_Spawn_Pos::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_Get_Adjust_Collision_Spawn_Pos, CallFunc_BreakHitResult_ImpactPoint) == 0x0001F0, "Member 'GA_TGF_FunctionLibrary_C_Get_Adjust_Collision_Spawn_Pos::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_Get_Adjust_Collision_Spawn_Pos, CallFunc_BreakHitResult_Normal) == 0x000208, "Member 'GA_TGF_FunctionLibrary_C_Get_Adjust_Collision_Spawn_Pos::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_Get_Adjust_Collision_Spawn_Pos, CallFunc_BreakHitResult_ImpactNormal) == 0x000220, "Member 'GA_TGF_FunctionLibrary_C_Get_Adjust_Collision_Spawn_Pos::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_Get_Adjust_Collision_Spawn_Pos, CallFunc_BreakHitResult_PhysMat) == 0x000238, "Member 'GA_TGF_FunctionLibrary_C_Get_Adjust_Collision_Spawn_Pos::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_Get_Adjust_Collision_Spawn_Pos, CallFunc_BreakHitResult_HitActor) == 0x000240, "Member 'GA_TGF_FunctionLibrary_C_Get_Adjust_Collision_Spawn_Pos::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_Get_Adjust_Collision_Spawn_Pos, CallFunc_BreakHitResult_HitComponent) == 0x000248, "Member 'GA_TGF_FunctionLibrary_C_Get_Adjust_Collision_Spawn_Pos::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_Get_Adjust_Collision_Spawn_Pos, CallFunc_BreakHitResult_HitBoneName) == 0x000250, "Member 'GA_TGF_FunctionLibrary_C_Get_Adjust_Collision_Spawn_Pos::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_Get_Adjust_Collision_Spawn_Pos, CallFunc_BreakHitResult_BoneName) == 0x000258, "Member 'GA_TGF_FunctionLibrary_C_Get_Adjust_Collision_Spawn_Pos::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_Get_Adjust_Collision_Spawn_Pos, CallFunc_BreakHitResult_HitItem) == 0x000260, "Member 'GA_TGF_FunctionLibrary_C_Get_Adjust_Collision_Spawn_Pos::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_Get_Adjust_Collision_Spawn_Pos, CallFunc_BreakHitResult_ElementIndex) == 0x000264, "Member 'GA_TGF_FunctionLibrary_C_Get_Adjust_Collision_Spawn_Pos::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_Get_Adjust_Collision_Spawn_Pos, CallFunc_BreakHitResult_FaceIndex) == 0x000268, "Member 'GA_TGF_FunctionLibrary_C_Get_Adjust_Collision_Spawn_Pos::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_Get_Adjust_Collision_Spawn_Pos, CallFunc_BreakHitResult_TraceStart) == 0x000270, "Member 'GA_TGF_FunctionLibrary_C_Get_Adjust_Collision_Spawn_Pos::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_Get_Adjust_Collision_Spawn_Pos, CallFunc_BreakHitResult_TraceEnd) == 0x000288, "Member 'GA_TGF_FunctionLibrary_C_Get_Adjust_Collision_Spawn_Pos::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_Get_Adjust_Collision_Spawn_Pos, CallFunc_Multiply_VectorVector_ReturnValue) == 0x0002A0, "Member 'GA_TGF_FunctionLibrary_C_Get_Adjust_Collision_Spawn_Pos::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_Get_Adjust_Collision_Spawn_Pos, CallFunc_Add_VectorVector_ReturnValue) == 0x0002B8, "Member 'GA_TGF_FunctionLibrary_C_Get_Adjust_Collision_Spawn_Pos::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");

// Function GA_TGF_FunctionLibrary.GA_TGF_FunctionLibrary_C.Get Spawn Projectile Rot
// 0x0390 (0x0390 - 0x0000)
struct GA_TGF_FunctionLibrary_C_Get_Spawn_Projectile_Rot final
{
public:
	struct FVector                                SpawnPos;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LookDistance;                                      // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Instigator;                                        // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        MinDistance;                                       // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldIgnoreWeapon;                                // 0x0030(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotation;                                          // 0x0040(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class AActor*>                         IgnoreActors;                                      // 0x0058(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetCurrentWeaponFirstActor_ReturnValue;   // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetCurrentWeaponFirstActor_ReturnValue_1; // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_92[0x6];                                       // 0x0092(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerControllerFromObject_ReturnValue; // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_1;        // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetCameraRotation_ReturnValue;            // 0x00B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue;         // 0x00D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCameraLocation_ReturnValue;            // 0x00F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0108(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_1;      // 0x0120(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0138(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0150(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x0168(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_AddUnique_ReturnValue_1;            // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue_2;            // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0188(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_271[0x7];                                      // 0x0271(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue_1;         // 0x0278(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0291(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_292[0x2];                                      // 0x0292(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0294(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0298(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29C[0x4];                                      // 0x029C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x02A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x02B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x02D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x02E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0300(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0308(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0310(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0318(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0320(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0328(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x032C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0330(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_334[0x4];                                      // 0x0334(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0338(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0350(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue_2;         // 0x0368(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0380(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_381[0x7];                                      // 0x0381(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast; // 0x0388(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_TGF_FunctionLibrary_C_Get_Spawn_Projectile_Rot) == 0x000008, "Wrong alignment on GA_TGF_FunctionLibrary_C_Get_Spawn_Projectile_Rot");
static_assert(sizeof(GA_TGF_FunctionLibrary_C_Get_Spawn_Projectile_Rot) == 0x000390, "Wrong size on GA_TGF_FunctionLibrary_C_Get_Spawn_Projectile_Rot");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_Get_Spawn_Projectile_Rot, SpawnPos) == 0x000000, "Member 'GA_TGF_FunctionLibrary_C_Get_Spawn_Projectile_Rot::SpawnPos' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_Get_Spawn_Projectile_Rot, LookDistance) == 0x000018, "Member 'GA_TGF_FunctionLibrary_C_Get_Spawn_Projectile_Rot::LookDistance' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_Get_Spawn_Projectile_Rot, Instigator) == 0x000020, "Member 'GA_TGF_FunctionLibrary_C_Get_Spawn_Projectile_Rot::Instigator' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_Get_Spawn_Projectile_Rot, MinDistance) == 0x000028, "Member 'GA_TGF_FunctionLibrary_C_Get_Spawn_Projectile_Rot::MinDistance' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_Get_Spawn_Projectile_Rot, ShouldIgnoreWeapon) == 0x000030, "Member 'GA_TGF_FunctionLibrary_C_Get_Spawn_Projectile_Rot::ShouldIgnoreWeapon' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_Get_Spawn_Projectile_Rot, __WorldContext) == 0x000038, "Member 'GA_TGF_FunctionLibrary_C_Get_Spawn_Projectile_Rot::__WorldContext' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_Get_Spawn_Projectile_Rot, Rotation) == 0x000040, "Member 'GA_TGF_FunctionLibrary_C_Get_Spawn_Projectile_Rot::Rotation' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_Get_Spawn_Projectile_Rot, IgnoreActors) == 0x000058, "Member 'GA_TGF_FunctionLibrary_C_Get_Spawn_Projectile_Rot::IgnoreActors' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_Get_Spawn_Projectile_Rot, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000068, "Member 'GA_TGF_FunctionLibrary_C_Get_Spawn_Projectile_Rot::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_Get_Spawn_Projectile_Rot, CallFunc_GetCurrentWeaponFirstActor_ReturnValue) == 0x000080, "Member 'GA_TGF_FunctionLibrary_C_Get_Spawn_Projectile_Rot::CallFunc_GetCurrentWeaponFirstActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_Get_Spawn_Projectile_Rot, CallFunc_GetCurrentWeaponFirstActor_ReturnValue_1) == 0x000088, "Member 'GA_TGF_FunctionLibrary_C_Get_Spawn_Projectile_Rot::CallFunc_GetCurrentWeaponFirstActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_Get_Spawn_Projectile_Rot, CallFunc_IsValid_ReturnValue) == 0x000090, "Member 'GA_TGF_FunctionLibrary_C_Get_Spawn_Projectile_Rot::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_Get_Spawn_Projectile_Rot, CallFunc_IsValid_ReturnValue_1) == 0x000091, "Member 'GA_TGF_FunctionLibrary_C_Get_Spawn_Projectile_Rot::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_Get_Spawn_Projectile_Rot, CallFunc_GetPlayerControllerFromObject_ReturnValue) == 0x000098, "Member 'GA_TGF_FunctionLibrary_C_Get_Spawn_Projectile_Rot::CallFunc_GetPlayerControllerFromObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_Get_Spawn_Projectile_Rot, CallFunc_Conv_DoubleToVector_ReturnValue_1) == 0x0000A0, "Member 'GA_TGF_FunctionLibrary_C_Get_Spawn_Projectile_Rot::CallFunc_Conv_DoubleToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_Get_Spawn_Projectile_Rot, CallFunc_GetCameraRotation_ReturnValue) == 0x0000B8, "Member 'GA_TGF_FunctionLibrary_C_Get_Spawn_Projectile_Rot::CallFunc_GetCameraRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_Get_Spawn_Projectile_Rot, CallFunc_Array_AddUnique_ReturnValue) == 0x0000D0, "Member 'GA_TGF_FunctionLibrary_C_Get_Spawn_Projectile_Rot::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_Get_Spawn_Projectile_Rot, CallFunc_Conv_RotatorToVector_ReturnValue) == 0x0000D8, "Member 'GA_TGF_FunctionLibrary_C_Get_Spawn_Projectile_Rot::CallFunc_Conv_RotatorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_Get_Spawn_Projectile_Rot, CallFunc_GetCameraLocation_ReturnValue) == 0x0000F0, "Member 'GA_TGF_FunctionLibrary_C_Get_Spawn_Projectile_Rot::CallFunc_GetCameraLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_Get_Spawn_Projectile_Rot, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000108, "Member 'GA_TGF_FunctionLibrary_C_Get_Spawn_Projectile_Rot::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_Get_Spawn_Projectile_Rot, CallFunc_Multiply_VectorVector_ReturnValue_1) == 0x000120, "Member 'GA_TGF_FunctionLibrary_C_Get_Spawn_Projectile_Rot::CallFunc_Multiply_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_Get_Spawn_Projectile_Rot, CallFunc_Add_VectorVector_ReturnValue) == 0x000138, "Member 'GA_TGF_FunctionLibrary_C_Get_Spawn_Projectile_Rot::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_Get_Spawn_Projectile_Rot, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000150, "Member 'GA_TGF_FunctionLibrary_C_Get_Spawn_Projectile_Rot::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_Get_Spawn_Projectile_Rot, CallFunc_FindLookAtRotation_ReturnValue) == 0x000168, "Member 'GA_TGF_FunctionLibrary_C_Get_Spawn_Projectile_Rot::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_Get_Spawn_Projectile_Rot, CallFunc_Array_AddUnique_ReturnValue_1) == 0x000180, "Member 'GA_TGF_FunctionLibrary_C_Get_Spawn_Projectile_Rot::CallFunc_Array_AddUnique_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_Get_Spawn_Projectile_Rot, CallFunc_Array_AddUnique_ReturnValue_2) == 0x000184, "Member 'GA_TGF_FunctionLibrary_C_Get_Spawn_Projectile_Rot::CallFunc_Array_AddUnique_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_Get_Spawn_Projectile_Rot, CallFunc_LineTraceSingle_OutHit) == 0x000188, "Member 'GA_TGF_FunctionLibrary_C_Get_Spawn_Projectile_Rot::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_Get_Spawn_Projectile_Rot, CallFunc_LineTraceSingle_ReturnValue) == 0x000270, "Member 'GA_TGF_FunctionLibrary_C_Get_Spawn_Projectile_Rot::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_Get_Spawn_Projectile_Rot, CallFunc_FindLookAtRotation_ReturnValue_1) == 0x000278, "Member 'GA_TGF_FunctionLibrary_C_Get_Spawn_Projectile_Rot::CallFunc_FindLookAtRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_Get_Spawn_Projectile_Rot, CallFunc_BreakHitResult_bBlockingHit) == 0x000290, "Member 'GA_TGF_FunctionLibrary_C_Get_Spawn_Projectile_Rot::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_Get_Spawn_Projectile_Rot, CallFunc_BreakHitResult_bInitialOverlap) == 0x000291, "Member 'GA_TGF_FunctionLibrary_C_Get_Spawn_Projectile_Rot::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_Get_Spawn_Projectile_Rot, CallFunc_BreakHitResult_Time) == 0x000294, "Member 'GA_TGF_FunctionLibrary_C_Get_Spawn_Projectile_Rot::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_Get_Spawn_Projectile_Rot, CallFunc_BreakHitResult_Distance) == 0x000298, "Member 'GA_TGF_FunctionLibrary_C_Get_Spawn_Projectile_Rot::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_Get_Spawn_Projectile_Rot, CallFunc_BreakHitResult_Location) == 0x0002A0, "Member 'GA_TGF_FunctionLibrary_C_Get_Spawn_Projectile_Rot::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_Get_Spawn_Projectile_Rot, CallFunc_BreakHitResult_ImpactPoint) == 0x0002B8, "Member 'GA_TGF_FunctionLibrary_C_Get_Spawn_Projectile_Rot::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_Get_Spawn_Projectile_Rot, CallFunc_BreakHitResult_Normal) == 0x0002D0, "Member 'GA_TGF_FunctionLibrary_C_Get_Spawn_Projectile_Rot::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_Get_Spawn_Projectile_Rot, CallFunc_BreakHitResult_ImpactNormal) == 0x0002E8, "Member 'GA_TGF_FunctionLibrary_C_Get_Spawn_Projectile_Rot::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_Get_Spawn_Projectile_Rot, CallFunc_BreakHitResult_PhysMat) == 0x000300, "Member 'GA_TGF_FunctionLibrary_C_Get_Spawn_Projectile_Rot::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_Get_Spawn_Projectile_Rot, CallFunc_BreakHitResult_HitActor) == 0x000308, "Member 'GA_TGF_FunctionLibrary_C_Get_Spawn_Projectile_Rot::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_Get_Spawn_Projectile_Rot, CallFunc_BreakHitResult_HitComponent) == 0x000310, "Member 'GA_TGF_FunctionLibrary_C_Get_Spawn_Projectile_Rot::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_Get_Spawn_Projectile_Rot, CallFunc_BreakHitResult_HitBoneName) == 0x000318, "Member 'GA_TGF_FunctionLibrary_C_Get_Spawn_Projectile_Rot::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_Get_Spawn_Projectile_Rot, CallFunc_BreakHitResult_BoneName) == 0x000320, "Member 'GA_TGF_FunctionLibrary_C_Get_Spawn_Projectile_Rot::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_Get_Spawn_Projectile_Rot, CallFunc_BreakHitResult_HitItem) == 0x000328, "Member 'GA_TGF_FunctionLibrary_C_Get_Spawn_Projectile_Rot::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_Get_Spawn_Projectile_Rot, CallFunc_BreakHitResult_ElementIndex) == 0x00032C, "Member 'GA_TGF_FunctionLibrary_C_Get_Spawn_Projectile_Rot::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_Get_Spawn_Projectile_Rot, CallFunc_BreakHitResult_FaceIndex) == 0x000330, "Member 'GA_TGF_FunctionLibrary_C_Get_Spawn_Projectile_Rot::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_Get_Spawn_Projectile_Rot, CallFunc_BreakHitResult_TraceStart) == 0x000338, "Member 'GA_TGF_FunctionLibrary_C_Get_Spawn_Projectile_Rot::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_Get_Spawn_Projectile_Rot, CallFunc_BreakHitResult_TraceEnd) == 0x000350, "Member 'GA_TGF_FunctionLibrary_C_Get_Spawn_Projectile_Rot::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_Get_Spawn_Projectile_Rot, CallFunc_FindLookAtRotation_ReturnValue_2) == 0x000368, "Member 'GA_TGF_FunctionLibrary_C_Get_Spawn_Projectile_Rot::CallFunc_FindLookAtRotation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_Get_Spawn_Projectile_Rot, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000380, "Member 'GA_TGF_FunctionLibrary_C_Get_Spawn_Projectile_Rot::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_Get_Spawn_Projectile_Rot, CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast) == 0x000388, "Member 'GA_TGF_FunctionLibrary_C_Get_Spawn_Projectile_Rot::CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function GA_TGF_FunctionLibrary.GA_TGF_FunctionLibrary_C.GetChargeSkillMethodFromComponent
// 0x0028 (0x0028 - 0x0000)
struct GA_TGF_FunctionLibrary_C_GetChargeSkillMethodFromComponent final
{
public:
	class ALyraPlayerController*                  InputController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetChargeSkillMethod_ReturnValue;         // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsStandalone_ReturnValue;                 // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTgfLyraInteractComponent*              CallFunc_GetComponentByClass_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_TGF_FunctionLibrary_C_GetChargeSkillMethodFromComponent) == 0x000008, "Wrong alignment on GA_TGF_FunctionLibrary_C_GetChargeSkillMethodFromComponent");
static_assert(sizeof(GA_TGF_FunctionLibrary_C_GetChargeSkillMethodFromComponent) == 0x000028, "Wrong size on GA_TGF_FunctionLibrary_C_GetChargeSkillMethodFromComponent");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_GetChargeSkillMethodFromComponent, InputController) == 0x000000, "Member 'GA_TGF_FunctionLibrary_C_GetChargeSkillMethodFromComponent::InputController' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_GetChargeSkillMethodFromComponent, __WorldContext) == 0x000008, "Member 'GA_TGF_FunctionLibrary_C_GetChargeSkillMethodFromComponent::__WorldContext' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_GetChargeSkillMethodFromComponent, Result) == 0x000010, "Member 'GA_TGF_FunctionLibrary_C_GetChargeSkillMethodFromComponent::Result' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_GetChargeSkillMethodFromComponent, CallFunc_GetChargeSkillMethod_ReturnValue) == 0x000011, "Member 'GA_TGF_FunctionLibrary_C_GetChargeSkillMethodFromComponent::CallFunc_GetChargeSkillMethod_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_GetChargeSkillMethodFromComponent, CallFunc_IsValid_ReturnValue) == 0x000012, "Member 'GA_TGF_FunctionLibrary_C_GetChargeSkillMethodFromComponent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_GetChargeSkillMethodFromComponent, CallFunc_IsStandalone_ReturnValue) == 0x000013, "Member 'GA_TGF_FunctionLibrary_C_GetChargeSkillMethodFromComponent::CallFunc_IsStandalone_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_GetChargeSkillMethodFromComponent, CallFunc_GetComponentByClass_ReturnValue) == 0x000018, "Member 'GA_TGF_FunctionLibrary_C_GetChargeSkillMethodFromComponent::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_GetChargeSkillMethodFromComponent, CallFunc_IsValid_ReturnValue_1) == 0x000020, "Member 'GA_TGF_FunctionLibrary_C_GetChargeSkillMethodFromComponent::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function GA_TGF_FunctionLibrary.GA_TGF_FunctionLibrary_C.GetExplodeHitActors
// 0x0400 (0x0400 - 0x0000)
struct GA_TGF_FunctionLibrary_C_GetExplodeHitActors final
{
public:
	class UGameplayAbility*                       GameplayAbility;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          bCheckExplodeBlock;                                // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                ExplodeCenter;                                     // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ExplodeRadius;                                     // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      TraceType;                                         // 0x0030(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	ETraceTypeQuery                               TraceBlockChannel;                                 // 0x0040(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0048(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Targets;                                           // 0x0050(0x0010)(Parm, OutParm)
	TArray<class AActor*>                         ExplodeTargets;                                    // 0x0060(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	class UGameplayAbility*                       SourceGA;                                          // 0x0070(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0078(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_HasAuthority_ReturnValue;              // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A5[0x3];                                       // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable_1;                            // 0x00B8(0x0010)(ConstParm, ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FHitResult>                     CallFunc_SphereTraceMultiForObjects_OutHits;       // 0x00D0(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceMultiForObjects_ReturnValue;   // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1[0x3];                                       // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_Array_Get_Item;                           // 0x00E8(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x01D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x01D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D6[0x2];                                      // 0x01D6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x01E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x01F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0210(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0228(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0240(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0248(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0250(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x026C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_274[0x4];                                      // 0x0274(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0278(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0290(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A9[0x3];                                      // 0x02A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x02AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_SphereOverlapActors_OutActors;            // 0x02B0(0x0010)(ReferenceParm)
	bool                                          CallFunc_SphereOverlapActors_ReturnValue;          // 0x02C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C1[0x3];                                      // 0x02C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x02C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C9[0x7];                                      // 0x02C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item_1;                         // 0x02D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue_1;            // 0x02D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2DC[0x4];                                      // 0x02DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x02E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x02F8(0x0010)(ConstParm, ReferenceParm)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0308(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x03F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F1[0x3];                                      // 0x03F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SphereOverlapActors_SphereRadius_ImplicitCast; // 0x03F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SphereTraceMultiForObjects_Radius_ImplicitCast; // 0x03F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_TGF_FunctionLibrary_C_GetExplodeHitActors) == 0x000008, "Wrong alignment on GA_TGF_FunctionLibrary_C_GetExplodeHitActors");
static_assert(sizeof(GA_TGF_FunctionLibrary_C_GetExplodeHitActors) == 0x000400, "Wrong size on GA_TGF_FunctionLibrary_C_GetExplodeHitActors");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_GetExplodeHitActors, GameplayAbility) == 0x000000, "Member 'GA_TGF_FunctionLibrary_C_GetExplodeHitActors::GameplayAbility' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_GetExplodeHitActors, bCheckExplodeBlock) == 0x000008, "Member 'GA_TGF_FunctionLibrary_C_GetExplodeHitActors::bCheckExplodeBlock' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_GetExplodeHitActors, ExplodeCenter) == 0x000010, "Member 'GA_TGF_FunctionLibrary_C_GetExplodeHitActors::ExplodeCenter' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_GetExplodeHitActors, ExplodeRadius) == 0x000028, "Member 'GA_TGF_FunctionLibrary_C_GetExplodeHitActors::ExplodeRadius' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_GetExplodeHitActors, TraceType) == 0x000030, "Member 'GA_TGF_FunctionLibrary_C_GetExplodeHitActors::TraceType' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_GetExplodeHitActors, TraceBlockChannel) == 0x000040, "Member 'GA_TGF_FunctionLibrary_C_GetExplodeHitActors::TraceBlockChannel' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_GetExplodeHitActors, __WorldContext) == 0x000048, "Member 'GA_TGF_FunctionLibrary_C_GetExplodeHitActors::__WorldContext' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_GetExplodeHitActors, Targets) == 0x000050, "Member 'GA_TGF_FunctionLibrary_C_GetExplodeHitActors::Targets' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_GetExplodeHitActors, ExplodeTargets) == 0x000060, "Member 'GA_TGF_FunctionLibrary_C_GetExplodeHitActors::ExplodeTargets' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_GetExplodeHitActors, SourceGA) == 0x000070, "Member 'GA_TGF_FunctionLibrary_C_GetExplodeHitActors::SourceGA' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_GetExplodeHitActors, Temp_object_Variable) == 0x000078, "Member 'GA_TGF_FunctionLibrary_C_GetExplodeHitActors::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_GetExplodeHitActors, CallFunc_Add_VectorVector_ReturnValue) == 0x000088, "Member 'GA_TGF_FunctionLibrary_C_GetExplodeHitActors::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_GetExplodeHitActors, Temp_int_Array_Index_Variable) == 0x0000A0, "Member 'GA_TGF_FunctionLibrary_C_GetExplodeHitActors::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_GetExplodeHitActors, CallFunc_K2_HasAuthority_ReturnValue) == 0x0000A4, "Member 'GA_TGF_FunctionLibrary_C_GetExplodeHitActors::CallFunc_K2_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_GetExplodeHitActors, Temp_int_Loop_Counter_Variable) == 0x0000A8, "Member 'GA_TGF_FunctionLibrary_C_GetExplodeHitActors::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_GetExplodeHitActors, CallFunc_Add_IntInt_ReturnValue) == 0x0000AC, "Member 'GA_TGF_FunctionLibrary_C_GetExplodeHitActors::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_GetExplodeHitActors, Temp_int_Array_Index_Variable_1) == 0x0000B0, "Member 'GA_TGF_FunctionLibrary_C_GetExplodeHitActors::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_GetExplodeHitActors, Temp_object_Variable_1) == 0x0000B8, "Member 'GA_TGF_FunctionLibrary_C_GetExplodeHitActors::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_GetExplodeHitActors, Temp_int_Loop_Counter_Variable_1) == 0x0000C8, "Member 'GA_TGF_FunctionLibrary_C_GetExplodeHitActors::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_GetExplodeHitActors, CallFunc_SphereTraceMultiForObjects_OutHits) == 0x0000D0, "Member 'GA_TGF_FunctionLibrary_C_GetExplodeHitActors::CallFunc_SphereTraceMultiForObjects_OutHits' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_GetExplodeHitActors, CallFunc_SphereTraceMultiForObjects_ReturnValue) == 0x0000E0, "Member 'GA_TGF_FunctionLibrary_C_GetExplodeHitActors::CallFunc_SphereTraceMultiForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_GetExplodeHitActors, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000E4, "Member 'GA_TGF_FunctionLibrary_C_GetExplodeHitActors::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_GetExplodeHitActors, CallFunc_Array_Get_Item) == 0x0000E8, "Member 'GA_TGF_FunctionLibrary_C_GetExplodeHitActors::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_GetExplodeHitActors, CallFunc_Array_Length_ReturnValue) == 0x0001D0, "Member 'GA_TGF_FunctionLibrary_C_GetExplodeHitActors::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_GetExplodeHitActors, CallFunc_BreakHitResult_bBlockingHit) == 0x0001D4, "Member 'GA_TGF_FunctionLibrary_C_GetExplodeHitActors::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_GetExplodeHitActors, CallFunc_BreakHitResult_bInitialOverlap) == 0x0001D5, "Member 'GA_TGF_FunctionLibrary_C_GetExplodeHitActors::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_GetExplodeHitActors, CallFunc_BreakHitResult_Time) == 0x0001D8, "Member 'GA_TGF_FunctionLibrary_C_GetExplodeHitActors::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_GetExplodeHitActors, CallFunc_BreakHitResult_Distance) == 0x0001DC, "Member 'GA_TGF_FunctionLibrary_C_GetExplodeHitActors::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_GetExplodeHitActors, CallFunc_BreakHitResult_Location) == 0x0001E0, "Member 'GA_TGF_FunctionLibrary_C_GetExplodeHitActors::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_GetExplodeHitActors, CallFunc_BreakHitResult_ImpactPoint) == 0x0001F8, "Member 'GA_TGF_FunctionLibrary_C_GetExplodeHitActors::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_GetExplodeHitActors, CallFunc_BreakHitResult_Normal) == 0x000210, "Member 'GA_TGF_FunctionLibrary_C_GetExplodeHitActors::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_GetExplodeHitActors, CallFunc_BreakHitResult_ImpactNormal) == 0x000228, "Member 'GA_TGF_FunctionLibrary_C_GetExplodeHitActors::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_GetExplodeHitActors, CallFunc_BreakHitResult_PhysMat) == 0x000240, "Member 'GA_TGF_FunctionLibrary_C_GetExplodeHitActors::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_GetExplodeHitActors, CallFunc_BreakHitResult_HitActor) == 0x000248, "Member 'GA_TGF_FunctionLibrary_C_GetExplodeHitActors::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_GetExplodeHitActors, CallFunc_BreakHitResult_HitComponent) == 0x000250, "Member 'GA_TGF_FunctionLibrary_C_GetExplodeHitActors::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_GetExplodeHitActors, CallFunc_BreakHitResult_HitBoneName) == 0x000258, "Member 'GA_TGF_FunctionLibrary_C_GetExplodeHitActors::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_GetExplodeHitActors, CallFunc_BreakHitResult_BoneName) == 0x000260, "Member 'GA_TGF_FunctionLibrary_C_GetExplodeHitActors::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_GetExplodeHitActors, CallFunc_BreakHitResult_HitItem) == 0x000268, "Member 'GA_TGF_FunctionLibrary_C_GetExplodeHitActors::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_GetExplodeHitActors, CallFunc_BreakHitResult_ElementIndex) == 0x00026C, "Member 'GA_TGF_FunctionLibrary_C_GetExplodeHitActors::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_GetExplodeHitActors, CallFunc_BreakHitResult_FaceIndex) == 0x000270, "Member 'GA_TGF_FunctionLibrary_C_GetExplodeHitActors::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_GetExplodeHitActors, CallFunc_BreakHitResult_TraceStart) == 0x000278, "Member 'GA_TGF_FunctionLibrary_C_GetExplodeHitActors::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_GetExplodeHitActors, CallFunc_BreakHitResult_TraceEnd) == 0x000290, "Member 'GA_TGF_FunctionLibrary_C_GetExplodeHitActors::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_GetExplodeHitActors, CallFunc_Less_IntInt_ReturnValue) == 0x0002A8, "Member 'GA_TGF_FunctionLibrary_C_GetExplodeHitActors::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_GetExplodeHitActors, CallFunc_Array_AddUnique_ReturnValue) == 0x0002AC, "Member 'GA_TGF_FunctionLibrary_C_GetExplodeHitActors::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_GetExplodeHitActors, CallFunc_SphereOverlapActors_OutActors) == 0x0002B0, "Member 'GA_TGF_FunctionLibrary_C_GetExplodeHitActors::CallFunc_SphereOverlapActors_OutActors' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_GetExplodeHitActors, CallFunc_SphereOverlapActors_ReturnValue) == 0x0002C0, "Member 'GA_TGF_FunctionLibrary_C_GetExplodeHitActors::CallFunc_SphereOverlapActors_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_GetExplodeHitActors, CallFunc_Array_Length_ReturnValue_1) == 0x0002C4, "Member 'GA_TGF_FunctionLibrary_C_GetExplodeHitActors::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_GetExplodeHitActors, CallFunc_Less_IntInt_ReturnValue_1) == 0x0002C8, "Member 'GA_TGF_FunctionLibrary_C_GetExplodeHitActors::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_GetExplodeHitActors, CallFunc_Array_Get_Item_1) == 0x0002D0, "Member 'GA_TGF_FunctionLibrary_C_GetExplodeHitActors::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_GetExplodeHitActors, CallFunc_Array_AddUnique_ReturnValue_1) == 0x0002D8, "Member 'GA_TGF_FunctionLibrary_C_GetExplodeHitActors::CallFunc_Array_AddUnique_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_GetExplodeHitActors, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0002E0, "Member 'GA_TGF_FunctionLibrary_C_GetExplodeHitActors::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_GetExplodeHitActors, K2Node_MakeArray_Array) == 0x0002F8, "Member 'GA_TGF_FunctionLibrary_C_GetExplodeHitActors::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_GetExplodeHitActors, CallFunc_LineTraceSingle_OutHit) == 0x000308, "Member 'GA_TGF_FunctionLibrary_C_GetExplodeHitActors::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_GetExplodeHitActors, CallFunc_LineTraceSingle_ReturnValue) == 0x0003F0, "Member 'GA_TGF_FunctionLibrary_C_GetExplodeHitActors::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_GetExplodeHitActors, CallFunc_SphereOverlapActors_SphereRadius_ImplicitCast) == 0x0003F4, "Member 'GA_TGF_FunctionLibrary_C_GetExplodeHitActors::CallFunc_SphereOverlapActors_SphereRadius_ImplicitCast' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_GetExplodeHitActors, CallFunc_SphereTraceMultiForObjects_Radius_ImplicitCast) == 0x0003F8, "Member 'GA_TGF_FunctionLibrary_C_GetExplodeHitActors::CallFunc_SphereTraceMultiForObjects_Radius_ImplicitCast' has a wrong offset!");

// Function GA_TGF_FunctionLibrary.GA_TGF_FunctionLibrary_C.GetMouseTargetingMethodFromComponent
// 0x0028 (0x0028 - 0x0000)
struct GA_TGF_FunctionLibrary_C_GetMouseTargetingMethodFromComponent final
{
public:
	class ALyraPlayerController*                  InputController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetMouseTargetingMethod_ReturnValue;      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsStandalone_ReturnValue;                 // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTgfLyraInteractComponent*              CallFunc_GetComponentByClass_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_TGF_FunctionLibrary_C_GetMouseTargetingMethodFromComponent) == 0x000008, "Wrong alignment on GA_TGF_FunctionLibrary_C_GetMouseTargetingMethodFromComponent");
static_assert(sizeof(GA_TGF_FunctionLibrary_C_GetMouseTargetingMethodFromComponent) == 0x000028, "Wrong size on GA_TGF_FunctionLibrary_C_GetMouseTargetingMethodFromComponent");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_GetMouseTargetingMethodFromComponent, InputController) == 0x000000, "Member 'GA_TGF_FunctionLibrary_C_GetMouseTargetingMethodFromComponent::InputController' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_GetMouseTargetingMethodFromComponent, __WorldContext) == 0x000008, "Member 'GA_TGF_FunctionLibrary_C_GetMouseTargetingMethodFromComponent::__WorldContext' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_GetMouseTargetingMethodFromComponent, Result) == 0x000010, "Member 'GA_TGF_FunctionLibrary_C_GetMouseTargetingMethodFromComponent::Result' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_GetMouseTargetingMethodFromComponent, CallFunc_GetMouseTargetingMethod_ReturnValue) == 0x000011, "Member 'GA_TGF_FunctionLibrary_C_GetMouseTargetingMethodFromComponent::CallFunc_GetMouseTargetingMethod_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_GetMouseTargetingMethodFromComponent, CallFunc_IsValid_ReturnValue) == 0x000012, "Member 'GA_TGF_FunctionLibrary_C_GetMouseTargetingMethodFromComponent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_GetMouseTargetingMethodFromComponent, CallFunc_IsStandalone_ReturnValue) == 0x000013, "Member 'GA_TGF_FunctionLibrary_C_GetMouseTargetingMethodFromComponent::CallFunc_IsStandalone_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_GetMouseTargetingMethodFromComponent, CallFunc_GetComponentByClass_ReturnValue) == 0x000018, "Member 'GA_TGF_FunctionLibrary_C_GetMouseTargetingMethodFromComponent::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_GetMouseTargetingMethodFromComponent, CallFunc_IsValid_ReturnValue_1) == 0x000020, "Member 'GA_TGF_FunctionLibrary_C_GetMouseTargetingMethodFromComponent::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function GA_TGF_FunctionLibrary.GA_TGF_FunctionLibrary_C.IsActorInWaitingRoom
// 0x0018 (0x0018 - 0x0000)
struct GA_TGF_FunctionLibrary_C_IsActorInWaitingRoom final
{
public:
	class AActor*                                 InputActor;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_TGF_FunctionLibrary_C_IsActorInWaitingRoom) == 0x000008, "Wrong alignment on GA_TGF_FunctionLibrary_C_IsActorInWaitingRoom");
static_assert(sizeof(GA_TGF_FunctionLibrary_C_IsActorInWaitingRoom) == 0x000018, "Wrong size on GA_TGF_FunctionLibrary_C_IsActorInWaitingRoom");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_IsActorInWaitingRoom, InputActor) == 0x000000, "Member 'GA_TGF_FunctionLibrary_C_IsActorInWaitingRoom::InputActor' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_IsActorInWaitingRoom, __WorldContext) == 0x000008, "Member 'GA_TGF_FunctionLibrary_C_IsActorInWaitingRoom::__WorldContext' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_IsActorInWaitingRoom, Result) == 0x000010, "Member 'GA_TGF_FunctionLibrary_C_IsActorInWaitingRoom::Result' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_IsActorInWaitingRoom, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x000011, "Member 'GA_TGF_FunctionLibrary_C_IsActorInWaitingRoom::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");

// Function GA_TGF_FunctionLibrary.GA_TGF_FunctionLibrary_C.IsHitInteractorBattle
// 0x0028 (0x0028 - 0x0000)
struct GA_TGF_FunctionLibrary_C_IsHitInteractorBattle final
{
public:
	class AActor*                                 CheckActor;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTgfInteractorBattleComponent*          CallFunc_GetComponentByClass_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_TGF_FunctionLibrary_C_IsHitInteractorBattle) == 0x000008, "Wrong alignment on GA_TGF_FunctionLibrary_C_IsHitInteractorBattle");
static_assert(sizeof(GA_TGF_FunctionLibrary_C_IsHitInteractorBattle) == 0x000028, "Wrong size on GA_TGF_FunctionLibrary_C_IsHitInteractorBattle");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_IsHitInteractorBattle, CheckActor) == 0x000000, "Member 'GA_TGF_FunctionLibrary_C_IsHitInteractorBattle::CheckActor' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_IsHitInteractorBattle, __WorldContext) == 0x000008, "Member 'GA_TGF_FunctionLibrary_C_IsHitInteractorBattle::__WorldContext' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_IsHitInteractorBattle, Result) == 0x000010, "Member 'GA_TGF_FunctionLibrary_C_IsHitInteractorBattle::Result' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_IsHitInteractorBattle, CallFunc_GetComponentByClass_ReturnValue) == 0x000018, "Member 'GA_TGF_FunctionLibrary_C_IsHitInteractorBattle::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_IsHitInteractorBattle, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'GA_TGF_FunctionLibrary_C_IsHitInteractorBattle::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function GA_TGF_FunctionLibrary.GA_TGF_FunctionLibrary_C.IsHitInteractorEnvironment
// 0x01F0 (0x01F0 - 0x0000)
struct GA_TGF_FunctionLibrary_C_IsHitInteractorEnvironment final
{
public:
	struct FHitResult                             HitResult;                                         // 0x0000(0x00E8)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AActor*                                 HitActor;                                          // 0x00E8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x00F0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x00F8(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTgfEnvSurfaceTypeDataAsset*            AllowedSurfaceTypes;                               // 0x0100(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTgfInteractorBattleComponent*          CallFunc_GetComponentByClass_ReturnValue;          // 0x0108(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_112[0x2];                                      // 0x0112(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11C[0x4];                                      // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0120(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0138(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0150(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0168(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0180(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0188(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0190(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B4[0x4];                                      // 0x01B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x01E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x01EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x01EB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x01EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_TGF_FunctionLibrary_C_IsHitInteractorEnvironment) == 0x000008, "Wrong alignment on GA_TGF_FunctionLibrary_C_IsHitInteractorEnvironment");
static_assert(sizeof(GA_TGF_FunctionLibrary_C_IsHitInteractorEnvironment) == 0x0001F0, "Wrong size on GA_TGF_FunctionLibrary_C_IsHitInteractorEnvironment");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_IsHitInteractorEnvironment, HitResult) == 0x000000, "Member 'GA_TGF_FunctionLibrary_C_IsHitInteractorEnvironment::HitResult' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_IsHitInteractorEnvironment, HitActor) == 0x0000E8, "Member 'GA_TGF_FunctionLibrary_C_IsHitInteractorEnvironment::HitActor' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_IsHitInteractorEnvironment, __WorldContext) == 0x0000F0, "Member 'GA_TGF_FunctionLibrary_C_IsHitInteractorEnvironment::__WorldContext' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_IsHitInteractorEnvironment, Result) == 0x0000F8, "Member 'GA_TGF_FunctionLibrary_C_IsHitInteractorEnvironment::Result' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_IsHitInteractorEnvironment, AllowedSurfaceTypes) == 0x000100, "Member 'GA_TGF_FunctionLibrary_C_IsHitInteractorEnvironment::AllowedSurfaceTypes' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_IsHitInteractorEnvironment, CallFunc_GetComponentByClass_ReturnValue) == 0x000108, "Member 'GA_TGF_FunctionLibrary_C_IsHitInteractorEnvironment::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_IsHitInteractorEnvironment, CallFunc_BreakHitResult_bBlockingHit) == 0x000110, "Member 'GA_TGF_FunctionLibrary_C_IsHitInteractorEnvironment::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_IsHitInteractorEnvironment, CallFunc_BreakHitResult_bInitialOverlap) == 0x000111, "Member 'GA_TGF_FunctionLibrary_C_IsHitInteractorEnvironment::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_IsHitInteractorEnvironment, CallFunc_BreakHitResult_Time) == 0x000114, "Member 'GA_TGF_FunctionLibrary_C_IsHitInteractorEnvironment::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_IsHitInteractorEnvironment, CallFunc_BreakHitResult_Distance) == 0x000118, "Member 'GA_TGF_FunctionLibrary_C_IsHitInteractorEnvironment::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_IsHitInteractorEnvironment, CallFunc_BreakHitResult_Location) == 0x000120, "Member 'GA_TGF_FunctionLibrary_C_IsHitInteractorEnvironment::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_IsHitInteractorEnvironment, CallFunc_BreakHitResult_ImpactPoint) == 0x000138, "Member 'GA_TGF_FunctionLibrary_C_IsHitInteractorEnvironment::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_IsHitInteractorEnvironment, CallFunc_BreakHitResult_Normal) == 0x000150, "Member 'GA_TGF_FunctionLibrary_C_IsHitInteractorEnvironment::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_IsHitInteractorEnvironment, CallFunc_BreakHitResult_ImpactNormal) == 0x000168, "Member 'GA_TGF_FunctionLibrary_C_IsHitInteractorEnvironment::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_IsHitInteractorEnvironment, CallFunc_BreakHitResult_PhysMat) == 0x000180, "Member 'GA_TGF_FunctionLibrary_C_IsHitInteractorEnvironment::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_IsHitInteractorEnvironment, CallFunc_BreakHitResult_HitActor) == 0x000188, "Member 'GA_TGF_FunctionLibrary_C_IsHitInteractorEnvironment::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_IsHitInteractorEnvironment, CallFunc_BreakHitResult_HitComponent) == 0x000190, "Member 'GA_TGF_FunctionLibrary_C_IsHitInteractorEnvironment::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_IsHitInteractorEnvironment, CallFunc_BreakHitResult_HitBoneName) == 0x000198, "Member 'GA_TGF_FunctionLibrary_C_IsHitInteractorEnvironment::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_IsHitInteractorEnvironment, CallFunc_BreakHitResult_BoneName) == 0x0001A0, "Member 'GA_TGF_FunctionLibrary_C_IsHitInteractorEnvironment::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_IsHitInteractorEnvironment, CallFunc_BreakHitResult_HitItem) == 0x0001A8, "Member 'GA_TGF_FunctionLibrary_C_IsHitInteractorEnvironment::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_IsHitInteractorEnvironment, CallFunc_BreakHitResult_ElementIndex) == 0x0001AC, "Member 'GA_TGF_FunctionLibrary_C_IsHitInteractorEnvironment::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_IsHitInteractorEnvironment, CallFunc_BreakHitResult_FaceIndex) == 0x0001B0, "Member 'GA_TGF_FunctionLibrary_C_IsHitInteractorEnvironment::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_IsHitInteractorEnvironment, CallFunc_BreakHitResult_TraceStart) == 0x0001B8, "Member 'GA_TGF_FunctionLibrary_C_IsHitInteractorEnvironment::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_IsHitInteractorEnvironment, CallFunc_BreakHitResult_TraceEnd) == 0x0001D0, "Member 'GA_TGF_FunctionLibrary_C_IsHitInteractorEnvironment::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_IsHitInteractorEnvironment, CallFunc_IsValid_ReturnValue) == 0x0001E8, "Member 'GA_TGF_FunctionLibrary_C_IsHitInteractorEnvironment::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_IsHitInteractorEnvironment, CallFunc_IsValid_ReturnValue_1) == 0x0001E9, "Member 'GA_TGF_FunctionLibrary_C_IsHitInteractorEnvironment::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_IsHitInteractorEnvironment, CallFunc_Not_PreBool_ReturnValue) == 0x0001EA, "Member 'GA_TGF_FunctionLibrary_C_IsHitInteractorEnvironment::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_IsHitInteractorEnvironment, CallFunc_Array_Contains_ReturnValue) == 0x0001EB, "Member 'GA_TGF_FunctionLibrary_C_IsHitInteractorEnvironment::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_IsHitInteractorEnvironment, CallFunc_BooleanAND_ReturnValue) == 0x0001EC, "Member 'GA_TGF_FunctionLibrary_C_IsHitInteractorEnvironment::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function GA_TGF_FunctionLibrary.GA_TGF_FunctionLibrary_C.IsHomelandMatchType
// 0x0030 (0x0030 - 0x0000)
struct GA_TGF_FunctionLibrary_C_IsHomelandMatchType final
{
public:
	class AActor*                                 InputActor;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ALyraGameMode*                          K2Node_DynamicCast_AsLyra_Game_Mode;               // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETgfMatchType                                 CallFunc_GetMatchType_ReturnValue;                 // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_TGF_FunctionLibrary_C_IsHomelandMatchType) == 0x000008, "Wrong alignment on GA_TGF_FunctionLibrary_C_IsHomelandMatchType");
static_assert(sizeof(GA_TGF_FunctionLibrary_C_IsHomelandMatchType) == 0x000030, "Wrong size on GA_TGF_FunctionLibrary_C_IsHomelandMatchType");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_IsHomelandMatchType, InputActor) == 0x000000, "Member 'GA_TGF_FunctionLibrary_C_IsHomelandMatchType::InputActor' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_IsHomelandMatchType, __WorldContext) == 0x000008, "Member 'GA_TGF_FunctionLibrary_C_IsHomelandMatchType::__WorldContext' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_IsHomelandMatchType, Result) == 0x000010, "Member 'GA_TGF_FunctionLibrary_C_IsHomelandMatchType::Result' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_IsHomelandMatchType, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'GA_TGF_FunctionLibrary_C_IsHomelandMatchType::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_IsHomelandMatchType, CallFunc_GetGameMode_ReturnValue) == 0x000018, "Member 'GA_TGF_FunctionLibrary_C_IsHomelandMatchType::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_IsHomelandMatchType, K2Node_DynamicCast_AsLyra_Game_Mode) == 0x000020, "Member 'GA_TGF_FunctionLibrary_C_IsHomelandMatchType::K2Node_DynamicCast_AsLyra_Game_Mode' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_IsHomelandMatchType, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'GA_TGF_FunctionLibrary_C_IsHomelandMatchType::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_IsHomelandMatchType, CallFunc_GetMatchType_ReturnValue) == 0x000029, "Member 'GA_TGF_FunctionLibrary_C_IsHomelandMatchType::CallFunc_GetMatchType_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_IsHomelandMatchType, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00002A, "Member 'GA_TGF_FunctionLibrary_C_IsHomelandMatchType::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function GA_TGF_FunctionLibrary.GA_TGF_FunctionLibrary_C.IsInADS
// 0x0018 (0x0018 - 0x0000)
struct GA_TGF_FunctionLibrary_C_IsInADS final
{
public:
	class ALyraCharacter*                         InActor;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_TGF_FunctionLibrary_C_IsInADS) == 0x000008, "Wrong alignment on GA_TGF_FunctionLibrary_C_IsInADS");
static_assert(sizeof(GA_TGF_FunctionLibrary_C_IsInADS) == 0x000018, "Wrong size on GA_TGF_FunctionLibrary_C_IsInADS");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_IsInADS, InActor) == 0x000000, "Member 'GA_TGF_FunctionLibrary_C_IsInADS::InActor' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_IsInADS, __WorldContext) == 0x000008, "Member 'GA_TGF_FunctionLibrary_C_IsInADS::__WorldContext' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_IsInADS, Result) == 0x000010, "Member 'GA_TGF_FunctionLibrary_C_IsInADS::Result' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_IsInADS, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x000011, "Member 'GA_TGF_FunctionLibrary_C_IsInADS::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");

// Function GA_TGF_FunctionLibrary.GA_TGF_FunctionLibrary_C.IsPlayersSummon
// 0x0050 (0x0050 - 0x0000)
struct GA_TGF_FunctionLibrary_C_IsPlayersSummon final
{
public:
	class AActor*                                 InputActor;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ALyraCharacter*                         K2Node_DynamicCast_AsLyra_Character;               // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTgfCharacterSummonComponent*           CallFunc_GetComponentByClass_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	ETgfActorType                                 CallFunc_GetActorType_ReturnValue;                 // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSummonActor_ReturnValue;                // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33[0x5];                                       // 0x0033(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetSummonSource_ReturnValue;              // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ALyraCharacter*                         K2Node_DynamicCast_AsLyra_Character_1;             // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETgfActorType                                 CallFunc_GetActorType_ReturnValue_1;               // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayer_ReturnValue;                     // 0x004B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_TGF_FunctionLibrary_C_IsPlayersSummon) == 0x000008, "Wrong alignment on GA_TGF_FunctionLibrary_C_IsPlayersSummon");
static_assert(sizeof(GA_TGF_FunctionLibrary_C_IsPlayersSummon) == 0x000050, "Wrong size on GA_TGF_FunctionLibrary_C_IsPlayersSummon");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_IsPlayersSummon, InputActor) == 0x000000, "Member 'GA_TGF_FunctionLibrary_C_IsPlayersSummon::InputActor' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_IsPlayersSummon, __WorldContext) == 0x000008, "Member 'GA_TGF_FunctionLibrary_C_IsPlayersSummon::__WorldContext' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_IsPlayersSummon, Result) == 0x000010, "Member 'GA_TGF_FunctionLibrary_C_IsPlayersSummon::Result' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_IsPlayersSummon, K2Node_DynamicCast_AsLyra_Character) == 0x000018, "Member 'GA_TGF_FunctionLibrary_C_IsPlayersSummon::K2Node_DynamicCast_AsLyra_Character' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_IsPlayersSummon, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'GA_TGF_FunctionLibrary_C_IsPlayersSummon::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_IsPlayersSummon, CallFunc_GetComponentByClass_ReturnValue) == 0x000028, "Member 'GA_TGF_FunctionLibrary_C_IsPlayersSummon::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_IsPlayersSummon, CallFunc_GetActorType_ReturnValue) == 0x000030, "Member 'GA_TGF_FunctionLibrary_C_IsPlayersSummon::CallFunc_GetActorType_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_IsPlayersSummon, CallFunc_IsValid_ReturnValue) == 0x000031, "Member 'GA_TGF_FunctionLibrary_C_IsPlayersSummon::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_IsPlayersSummon, CallFunc_IsSummonActor_ReturnValue) == 0x000032, "Member 'GA_TGF_FunctionLibrary_C_IsPlayersSummon::CallFunc_IsSummonActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_IsPlayersSummon, CallFunc_GetSummonSource_ReturnValue) == 0x000038, "Member 'GA_TGF_FunctionLibrary_C_IsPlayersSummon::CallFunc_GetSummonSource_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_IsPlayersSummon, K2Node_DynamicCast_AsLyra_Character_1) == 0x000040, "Member 'GA_TGF_FunctionLibrary_C_IsPlayersSummon::K2Node_DynamicCast_AsLyra_Character_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_IsPlayersSummon, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'GA_TGF_FunctionLibrary_C_IsPlayersSummon::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_IsPlayersSummon, CallFunc_IsValid_ReturnValue_1) == 0x000049, "Member 'GA_TGF_FunctionLibrary_C_IsPlayersSummon::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_IsPlayersSummon, CallFunc_GetActorType_ReturnValue_1) == 0x00004A, "Member 'GA_TGF_FunctionLibrary_C_IsPlayersSummon::CallFunc_GetActorType_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_IsPlayersSummon, CallFunc_IsPlayer_ReturnValue) == 0x00004B, "Member 'GA_TGF_FunctionLibrary_C_IsPlayersSummon::CallFunc_IsPlayer_ReturnValue' has a wrong offset!");

// Function GA_TGF_FunctionLibrary.GA_TGF_FunctionLibrary_C.IsReboundEnvironment
// 0x0200 (0x0200 - 0x0000)
struct GA_TGF_FunctionLibrary_C_IsReboundEnvironment final
{
public:
	struct FHitResult                             HitResult;                                         // 0x0000(0x00E8)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AActor*                                 HitActor;                                          // 0x00E8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x00F0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x00F8(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsHitInteractorBattle_Result;             // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FA[0x6];                                       // 0x00FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UTgfInteractorBattleComponent*          CallFunc_GetComponentByClass_ReturnValue;          // 0x0100(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x010A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10B[0x1];                                      // 0x010B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_114[0x4];                                      // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0118(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0130(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0148(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0160(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0178(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0180(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0188(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AC[0x4];                                      // 0x01AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x01E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E2[0x6];                                      // 0x01E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x01E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue_1;          // 0x01F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue_2;          // 0x01FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x01FB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x01FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x01FD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_TGF_FunctionLibrary_C_IsReboundEnvironment) == 0x000008, "Wrong alignment on GA_TGF_FunctionLibrary_C_IsReboundEnvironment");
static_assert(sizeof(GA_TGF_FunctionLibrary_C_IsReboundEnvironment) == 0x000200, "Wrong size on GA_TGF_FunctionLibrary_C_IsReboundEnvironment");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_IsReboundEnvironment, HitResult) == 0x000000, "Member 'GA_TGF_FunctionLibrary_C_IsReboundEnvironment::HitResult' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_IsReboundEnvironment, HitActor) == 0x0000E8, "Member 'GA_TGF_FunctionLibrary_C_IsReboundEnvironment::HitActor' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_IsReboundEnvironment, __WorldContext) == 0x0000F0, "Member 'GA_TGF_FunctionLibrary_C_IsReboundEnvironment::__WorldContext' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_IsReboundEnvironment, Result) == 0x0000F8, "Member 'GA_TGF_FunctionLibrary_C_IsReboundEnvironment::Result' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_IsReboundEnvironment, CallFunc_IsHitInteractorBattle_Result) == 0x0000F9, "Member 'GA_TGF_FunctionLibrary_C_IsReboundEnvironment::CallFunc_IsHitInteractorBattle_Result' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_IsReboundEnvironment, CallFunc_GetComponentByClass_ReturnValue) == 0x000100, "Member 'GA_TGF_FunctionLibrary_C_IsReboundEnvironment::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_IsReboundEnvironment, CallFunc_IsValid_ReturnValue) == 0x000108, "Member 'GA_TGF_FunctionLibrary_C_IsReboundEnvironment::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_IsReboundEnvironment, CallFunc_BreakHitResult_bBlockingHit) == 0x000109, "Member 'GA_TGF_FunctionLibrary_C_IsReboundEnvironment::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_IsReboundEnvironment, CallFunc_BreakHitResult_bInitialOverlap) == 0x00010A, "Member 'GA_TGF_FunctionLibrary_C_IsReboundEnvironment::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_IsReboundEnvironment, CallFunc_BreakHitResult_Time) == 0x00010C, "Member 'GA_TGF_FunctionLibrary_C_IsReboundEnvironment::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_IsReboundEnvironment, CallFunc_BreakHitResult_Distance) == 0x000110, "Member 'GA_TGF_FunctionLibrary_C_IsReboundEnvironment::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_IsReboundEnvironment, CallFunc_BreakHitResult_Location) == 0x000118, "Member 'GA_TGF_FunctionLibrary_C_IsReboundEnvironment::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_IsReboundEnvironment, CallFunc_BreakHitResult_ImpactPoint) == 0x000130, "Member 'GA_TGF_FunctionLibrary_C_IsReboundEnvironment::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_IsReboundEnvironment, CallFunc_BreakHitResult_Normal) == 0x000148, "Member 'GA_TGF_FunctionLibrary_C_IsReboundEnvironment::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_IsReboundEnvironment, CallFunc_BreakHitResult_ImpactNormal) == 0x000160, "Member 'GA_TGF_FunctionLibrary_C_IsReboundEnvironment::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_IsReboundEnvironment, CallFunc_BreakHitResult_PhysMat) == 0x000178, "Member 'GA_TGF_FunctionLibrary_C_IsReboundEnvironment::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_IsReboundEnvironment, CallFunc_BreakHitResult_HitActor) == 0x000180, "Member 'GA_TGF_FunctionLibrary_C_IsReboundEnvironment::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_IsReboundEnvironment, CallFunc_BreakHitResult_HitComponent) == 0x000188, "Member 'GA_TGF_FunctionLibrary_C_IsReboundEnvironment::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_IsReboundEnvironment, CallFunc_BreakHitResult_HitBoneName) == 0x000190, "Member 'GA_TGF_FunctionLibrary_C_IsReboundEnvironment::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_IsReboundEnvironment, CallFunc_BreakHitResult_BoneName) == 0x000198, "Member 'GA_TGF_FunctionLibrary_C_IsReboundEnvironment::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_IsReboundEnvironment, CallFunc_BreakHitResult_HitItem) == 0x0001A0, "Member 'GA_TGF_FunctionLibrary_C_IsReboundEnvironment::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_IsReboundEnvironment, CallFunc_BreakHitResult_ElementIndex) == 0x0001A4, "Member 'GA_TGF_FunctionLibrary_C_IsReboundEnvironment::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_IsReboundEnvironment, CallFunc_BreakHitResult_FaceIndex) == 0x0001A8, "Member 'GA_TGF_FunctionLibrary_C_IsReboundEnvironment::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_IsReboundEnvironment, CallFunc_BreakHitResult_TraceStart) == 0x0001B0, "Member 'GA_TGF_FunctionLibrary_C_IsReboundEnvironment::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_IsReboundEnvironment, CallFunc_BreakHitResult_TraceEnd) == 0x0001C8, "Member 'GA_TGF_FunctionLibrary_C_IsReboundEnvironment::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_IsReboundEnvironment, CallFunc_Not_PreBool_ReturnValue) == 0x0001E0, "Member 'GA_TGF_FunctionLibrary_C_IsReboundEnvironment::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_IsReboundEnvironment, CallFunc_IsValid_ReturnValue_1) == 0x0001E1, "Member 'GA_TGF_FunctionLibrary_C_IsReboundEnvironment::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_IsReboundEnvironment, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x0001E8, "Member 'GA_TGF_FunctionLibrary_C_IsReboundEnvironment::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_IsReboundEnvironment, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x0001F8, "Member 'GA_TGF_FunctionLibrary_C_IsReboundEnvironment::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_IsReboundEnvironment, CallFunc_EqualEqual_StrStr_ReturnValue_1) == 0x0001F9, "Member 'GA_TGF_FunctionLibrary_C_IsReboundEnvironment::CallFunc_EqualEqual_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_IsReboundEnvironment, CallFunc_EqualEqual_StrStr_ReturnValue_2) == 0x0001FA, "Member 'GA_TGF_FunctionLibrary_C_IsReboundEnvironment::CallFunc_EqualEqual_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_IsReboundEnvironment, CallFunc_BooleanOR_ReturnValue) == 0x0001FB, "Member 'GA_TGF_FunctionLibrary_C_IsReboundEnvironment::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_IsReboundEnvironment, CallFunc_BooleanOR_ReturnValue_1) == 0x0001FC, "Member 'GA_TGF_FunctionLibrary_C_IsReboundEnvironment::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_IsReboundEnvironment, CallFunc_BooleanAND_ReturnValue) == 0x0001FD, "Member 'GA_TGF_FunctionLibrary_C_IsReboundEnvironment::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function GA_TGF_FunctionLibrary.GA_TGF_FunctionLibrary_C.MonsterAddThreat
// 0x0038 (0x0038 - 0x0000)
struct GA_TGF_FunctionLibrary_C_MonsterAddThreat final
{
public:
	class AActor*                                 Monster;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 ThreatTarget;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Threat;                                            // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_Tgf_Monster_C*                      K2Node_DynamicCast_AsBP_Tgf_Monster;               // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_AddThreat_ReturnValue;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_AddThreat_Threat_ImplicitCast;            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_TGF_FunctionLibrary_C_MonsterAddThreat) == 0x000008, "Wrong alignment on GA_TGF_FunctionLibrary_C_MonsterAddThreat");
static_assert(sizeof(GA_TGF_FunctionLibrary_C_MonsterAddThreat) == 0x000038, "Wrong size on GA_TGF_FunctionLibrary_C_MonsterAddThreat");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_MonsterAddThreat, Monster) == 0x000000, "Member 'GA_TGF_FunctionLibrary_C_MonsterAddThreat::Monster' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_MonsterAddThreat, ThreatTarget) == 0x000008, "Member 'GA_TGF_FunctionLibrary_C_MonsterAddThreat::ThreatTarget' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_MonsterAddThreat, Threat) == 0x000010, "Member 'GA_TGF_FunctionLibrary_C_MonsterAddThreat::Threat' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_MonsterAddThreat, __WorldContext) == 0x000018, "Member 'GA_TGF_FunctionLibrary_C_MonsterAddThreat::__WorldContext' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_MonsterAddThreat, K2Node_DynamicCast_AsBP_Tgf_Monster) == 0x000020, "Member 'GA_TGF_FunctionLibrary_C_MonsterAddThreat::K2Node_DynamicCast_AsBP_Tgf_Monster' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_MonsterAddThreat, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'GA_TGF_FunctionLibrary_C_MonsterAddThreat::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_MonsterAddThreat, CallFunc_AddThreat_ReturnValue) == 0x00002C, "Member 'GA_TGF_FunctionLibrary_C_MonsterAddThreat::CallFunc_AddThreat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_MonsterAddThreat, CallFunc_AddThreat_Threat_ImplicitCast) == 0x000030, "Member 'GA_TGF_FunctionLibrary_C_MonsterAddThreat::CallFunc_AddThreat_Threat_ImplicitCast' has a wrong offset!");

// Function GA_TGF_FunctionLibrary.GA_TGF_FunctionLibrary_C.MonsterGetCurrentTarget
// 0x0038 (0x0038 - 0x0000)
struct GA_TGF_FunctionLibrary_C_MonsterGetCurrentTarget final
{
public:
	class ALyraCharacter*                         InputActor;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 ResultActor;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_Tgf_Monster_C*                      K2Node_DynamicCast_AsBP_Tgf_Monster;               // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetTargetActor_Actor;                     // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMonster_ReturnValue;                    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_TGF_FunctionLibrary_C_MonsterGetCurrentTarget) == 0x000008, "Wrong alignment on GA_TGF_FunctionLibrary_C_MonsterGetCurrentTarget");
static_assert(sizeof(GA_TGF_FunctionLibrary_C_MonsterGetCurrentTarget) == 0x000038, "Wrong size on GA_TGF_FunctionLibrary_C_MonsterGetCurrentTarget");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_MonsterGetCurrentTarget, InputActor) == 0x000000, "Member 'GA_TGF_FunctionLibrary_C_MonsterGetCurrentTarget::InputActor' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_MonsterGetCurrentTarget, __WorldContext) == 0x000008, "Member 'GA_TGF_FunctionLibrary_C_MonsterGetCurrentTarget::__WorldContext' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_MonsterGetCurrentTarget, ResultActor) == 0x000010, "Member 'GA_TGF_FunctionLibrary_C_MonsterGetCurrentTarget::ResultActor' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_MonsterGetCurrentTarget, K2Node_DynamicCast_AsBP_Tgf_Monster) == 0x000018, "Member 'GA_TGF_FunctionLibrary_C_MonsterGetCurrentTarget::K2Node_DynamicCast_AsBP_Tgf_Monster' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_MonsterGetCurrentTarget, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'GA_TGF_FunctionLibrary_C_MonsterGetCurrentTarget::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_MonsterGetCurrentTarget, CallFunc_GetTargetActor_Actor) == 0x000028, "Member 'GA_TGF_FunctionLibrary_C_MonsterGetCurrentTarget::CallFunc_GetTargetActor_Actor' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_MonsterGetCurrentTarget, CallFunc_IsMonster_ReturnValue) == 0x000030, "Member 'GA_TGF_FunctionLibrary_C_MonsterGetCurrentTarget::CallFunc_IsMonster_ReturnValue' has a wrong offset!");

// Function GA_TGF_FunctionLibrary.GA_TGF_FunctionLibrary_C.PrintDSMeshTick
// 0x00E0 (0x00E0 - 0x0000)
struct GA_TGF_FunctionLibrary_C_PrintDSMeshTick final
{
public:
	class ALyraCharacter*                         InputActor;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ALyraCharacter*                         CurActor;                                          // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_GetComponentByClass_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0040(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0058(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00A8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00B8(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_TGF_FunctionLibrary_C_PrintDSMeshTick) == 0x000008, "Wrong alignment on GA_TGF_FunctionLibrary_C_PrintDSMeshTick");
static_assert(sizeof(GA_TGF_FunctionLibrary_C_PrintDSMeshTick) == 0x0000E0, "Wrong size on GA_TGF_FunctionLibrary_C_PrintDSMeshTick");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_PrintDSMeshTick, InputActor) == 0x000000, "Member 'GA_TGF_FunctionLibrary_C_PrintDSMeshTick::InputActor' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_PrintDSMeshTick, __WorldContext) == 0x000008, "Member 'GA_TGF_FunctionLibrary_C_PrintDSMeshTick::__WorldContext' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_PrintDSMeshTick, CurActor) == 0x000010, "Member 'GA_TGF_FunctionLibrary_C_PrintDSMeshTick::CurActor' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_PrintDSMeshTick, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'GA_TGF_FunctionLibrary_C_PrintDSMeshTick::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_PrintDSMeshTick, CallFunc_GetComponentByClass_ReturnValue) == 0x000020, "Member 'GA_TGF_FunctionLibrary_C_PrintDSMeshTick::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_PrintDSMeshTick, CallFunc_IsValid_ReturnValue_1) == 0x000028, "Member 'GA_TGF_FunctionLibrary_C_PrintDSMeshTick::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_PrintDSMeshTick, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000030, "Member 'GA_TGF_FunctionLibrary_C_PrintDSMeshTick::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_PrintDSMeshTick, CallFunc_Conv_StringToText_ReturnValue) == 0x000040, "Member 'GA_TGF_FunctionLibrary_C_PrintDSMeshTick::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_PrintDSMeshTick, K2Node_MakeStruct_FormatArgumentData) == 0x000058, "Member 'GA_TGF_FunctionLibrary_C_PrintDSMeshTick::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_PrintDSMeshTick, K2Node_MakeArray_Array) == 0x0000A8, "Member 'GA_TGF_FunctionLibrary_C_PrintDSMeshTick::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_PrintDSMeshTick, CallFunc_Format_ReturnValue) == 0x0000B8, "Member 'GA_TGF_FunctionLibrary_C_PrintDSMeshTick::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_PrintDSMeshTick, CallFunc_Conv_TextToString_ReturnValue) == 0x0000D0, "Member 'GA_TGF_FunctionLibrary_C_PrintDSMeshTick::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");

// Function GA_TGF_FunctionLibrary.GA_TGF_FunctionLibrary_C.RemoveEquipBySlotWithCheck
// 0x0028 (0x0028 - 0x0000)
struct GA_TGF_FunctionLibrary_C_RemoveEquipBySlotWithCheck final
{
public:
	class UTgfEquipmentManagerComponent*          EquipComponent;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	ETgfEquipSlot                                 Slot;                                              // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActorInWaitingRoom_Result;              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_TGF_FunctionLibrary_C_RemoveEquipBySlotWithCheck) == 0x000008, "Wrong alignment on GA_TGF_FunctionLibrary_C_RemoveEquipBySlotWithCheck");
static_assert(sizeof(GA_TGF_FunctionLibrary_C_RemoveEquipBySlotWithCheck) == 0x000028, "Wrong size on GA_TGF_FunctionLibrary_C_RemoveEquipBySlotWithCheck");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_RemoveEquipBySlotWithCheck, EquipComponent) == 0x000000, "Member 'GA_TGF_FunctionLibrary_C_RemoveEquipBySlotWithCheck::EquipComponent' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_RemoveEquipBySlotWithCheck, Slot) == 0x000008, "Member 'GA_TGF_FunctionLibrary_C_RemoveEquipBySlotWithCheck::Slot' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_RemoveEquipBySlotWithCheck, __WorldContext) == 0x000010, "Member 'GA_TGF_FunctionLibrary_C_RemoveEquipBySlotWithCheck::__WorldContext' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_RemoveEquipBySlotWithCheck, CallFunc_GetOwner_ReturnValue) == 0x000018, "Member 'GA_TGF_FunctionLibrary_C_RemoveEquipBySlotWithCheck::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_RemoveEquipBySlotWithCheck, CallFunc_IsActorInWaitingRoom_Result) == 0x000020, "Member 'GA_TGF_FunctionLibrary_C_RemoveEquipBySlotWithCheck::CallFunc_IsActorInWaitingRoom_Result' has a wrong offset!");

// Function GA_TGF_FunctionLibrary.GA_TGF_FunctionLibrary_C.ResetAllAbilityInput
// 0x00B8 (0x00B8 - 0x0000)
struct GA_TGF_FunctionLibrary_C_ResetAllAbilityInput final
{
public:
	class ALyraPlayerController*                  LyraCtrl;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UEnhancedInputLocalPlayerSubsystem*     CallFunc_GetLocalPlayerSubSystemFromPlayerController_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IEnhancedInputSubsystemInterface> CallFunc_ResetInputForAction_self_CastInput;       // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IEnhancedInputSubsystemInterface> CallFunc_ResetInputForAction_self_CastInput_1;     // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IEnhancedInputSubsystemInterface> CallFunc_ResetInputForAction_self_CastInput_2;     // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IEnhancedInputSubsystemInterface> CallFunc_ResetInputForAction_self_CastInput_3;     // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IEnhancedInputSubsystemInterface> CallFunc_ResetInputForAction_self_CastInput_4;     // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IEnhancedInputSubsystemInterface> CallFunc_ResetInputForAction_self_CastInput_5;     // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IEnhancedInputSubsystemInterface> CallFunc_ResetInputForAction_self_CastInput_6;     // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IEnhancedInputSubsystemInterface> CallFunc_ResetInputForAction_self_CastInput_7;     // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IEnhancedInputSubsystemInterface> CallFunc_ResetInputForAction_self_CastInput_8;     // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IEnhancedInputSubsystemInterface> CallFunc_ResetInputForAction_self_CastInput_9;     // 0x00A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_TGF_FunctionLibrary_C_ResetAllAbilityInput) == 0x000008, "Wrong alignment on GA_TGF_FunctionLibrary_C_ResetAllAbilityInput");
static_assert(sizeof(GA_TGF_FunctionLibrary_C_ResetAllAbilityInput) == 0x0000B8, "Wrong size on GA_TGF_FunctionLibrary_C_ResetAllAbilityInput");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_ResetAllAbilityInput, LyraCtrl) == 0x000000, "Member 'GA_TGF_FunctionLibrary_C_ResetAllAbilityInput::LyraCtrl' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_ResetAllAbilityInput, __WorldContext) == 0x000008, "Member 'GA_TGF_FunctionLibrary_C_ResetAllAbilityInput::__WorldContext' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_ResetAllAbilityInput, CallFunc_GetLocalPlayerSubSystemFromPlayerController_ReturnValue) == 0x000010, "Member 'GA_TGF_FunctionLibrary_C_ResetAllAbilityInput::CallFunc_GetLocalPlayerSubSystemFromPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_ResetAllAbilityInput, CallFunc_ResetInputForAction_self_CastInput) == 0x000018, "Member 'GA_TGF_FunctionLibrary_C_ResetAllAbilityInput::CallFunc_ResetInputForAction_self_CastInput' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_ResetAllAbilityInput, CallFunc_ResetInputForAction_self_CastInput_1) == 0x000028, "Member 'GA_TGF_FunctionLibrary_C_ResetAllAbilityInput::CallFunc_ResetInputForAction_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_ResetAllAbilityInput, CallFunc_ResetInputForAction_self_CastInput_2) == 0x000038, "Member 'GA_TGF_FunctionLibrary_C_ResetAllAbilityInput::CallFunc_ResetInputForAction_self_CastInput_2' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_ResetAllAbilityInput, CallFunc_ResetInputForAction_self_CastInput_3) == 0x000048, "Member 'GA_TGF_FunctionLibrary_C_ResetAllAbilityInput::CallFunc_ResetInputForAction_self_CastInput_3' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_ResetAllAbilityInput, CallFunc_ResetInputForAction_self_CastInput_4) == 0x000058, "Member 'GA_TGF_FunctionLibrary_C_ResetAllAbilityInput::CallFunc_ResetInputForAction_self_CastInput_4' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_ResetAllAbilityInput, CallFunc_ResetInputForAction_self_CastInput_5) == 0x000068, "Member 'GA_TGF_FunctionLibrary_C_ResetAllAbilityInput::CallFunc_ResetInputForAction_self_CastInput_5' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_ResetAllAbilityInput, CallFunc_ResetInputForAction_self_CastInput_6) == 0x000078, "Member 'GA_TGF_FunctionLibrary_C_ResetAllAbilityInput::CallFunc_ResetInputForAction_self_CastInput_6' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_ResetAllAbilityInput, CallFunc_ResetInputForAction_self_CastInput_7) == 0x000088, "Member 'GA_TGF_FunctionLibrary_C_ResetAllAbilityInput::CallFunc_ResetInputForAction_self_CastInput_7' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_ResetAllAbilityInput, CallFunc_ResetInputForAction_self_CastInput_8) == 0x000098, "Member 'GA_TGF_FunctionLibrary_C_ResetAllAbilityInput::CallFunc_ResetInputForAction_self_CastInput_8' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_ResetAllAbilityInput, CallFunc_ResetInputForAction_self_CastInput_9) == 0x0000A8, "Member 'GA_TGF_FunctionLibrary_C_ResetAllAbilityInput::CallFunc_ResetInputForAction_self_CastInput_9' has a wrong offset!");

// Function GA_TGF_FunctionLibrary.GA_TGF_FunctionLibrary_C.SearchTarget
// 0x0500 (0x0500 - 0x0000)
struct GA_TGF_FunctionLibrary_C_SearchTarget final
{
public:
	class ALyraCharacter*                         SrcActor;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        WithInAngle;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        SearchRadius;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                BoxHalfSize;                                       // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         ResultActors;                                      // 0x0038(0x0010)(Parm, OutParm)
	TArray<class ALyraCharacter*>                 Targets;                                           // 0x0048(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	struct FVector                                SrcForward;                                        // 0x0058(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ALyraCharacter*                         CurActor;                                          // 0x0070(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class ALyraCharacter*                         Src;                                               // 0x0078(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SrcLocation;                                       // 0x0080(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULyraTeamSubsystem*                     CallFunc_GetWorldSubsystem_ReturnValue;            // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x00B0(0x0010)(ConstParm, ReferenceParm)
	TArray<class AActor*>                         CallFunc_SortActorsByDistance_ReturnValue;         // 0x00C0(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D5[0x3];                                       // 0x00D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array_1;                          // 0x00F8(0x0010)(ConstParm, ReferenceParm)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0108(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F1[0x7];                                      // 0x01F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x01F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0210(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0228(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x0240(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0258(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAngleBetweenTwoVectors_ReturnValue;    // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_274[0x4];                                      // 0x0274(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Vector_Distance2D_ReturnValue;            // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0281(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_282[0x2];                                      // 0x0282(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_CompareTeams_TeamIdA;                     // 0x0284(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_CompareTeams_TeamIdB;                     // 0x0288(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELyraTeamComparison                           CallFunc_CompareTeams_ReturnValue;                 // 0x028C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDeadOrDying_ReturnValue;                // 0x028D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x028E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanBeTarget_Result;                       // 0x028F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array_2;                          // 0x0290(0x0010)(ConstParm, ReferenceParm)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x02A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_3;        // 0x02A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetControlRotation_ReturnValue;           // 0x02C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x02D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x02F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FHitResult>                     CallFunc_BoxTraceMultiForObjects_OutHits;          // 0x0308(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_BoxTraceMultiForObjects_ReturnValue;      // 0x0318(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_319[0x3];                                      // 0x0319(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x031C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0320(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_321[0x7];                                      // 0x0321(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_Array_Get_Item;                           // 0x0328(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0410(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0411(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_412[0x2];                                      // 0x0412(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0414(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0418(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41C[0x4];                                      // 0x041C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0420(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0438(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0450(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0468(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0480(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0488(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0490(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0498(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x04A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x04A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x04AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x04B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B4[0x4];                                      // 0x04B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x04B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x04D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ALyraCharacter*                         K2Node_DynamicCast_AsLyra_Character;               // 0x04E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x04F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F1[0x7];                                      // 0x04F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Less_DoubleDouble_A_ImplicitCast;         // 0x04F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_TGF_FunctionLibrary_C_SearchTarget) == 0x000008, "Wrong alignment on GA_TGF_FunctionLibrary_C_SearchTarget");
static_assert(sizeof(GA_TGF_FunctionLibrary_C_SearchTarget) == 0x000500, "Wrong size on GA_TGF_FunctionLibrary_C_SearchTarget");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_SearchTarget, SrcActor) == 0x000000, "Member 'GA_TGF_FunctionLibrary_C_SearchTarget::SrcActor' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_SearchTarget, WithInAngle) == 0x000008, "Member 'GA_TGF_FunctionLibrary_C_SearchTarget::WithInAngle' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_SearchTarget, SearchRadius) == 0x000010, "Member 'GA_TGF_FunctionLibrary_C_SearchTarget::SearchRadius' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_SearchTarget, BoxHalfSize) == 0x000018, "Member 'GA_TGF_FunctionLibrary_C_SearchTarget::BoxHalfSize' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_SearchTarget, __WorldContext) == 0x000030, "Member 'GA_TGF_FunctionLibrary_C_SearchTarget::__WorldContext' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_SearchTarget, ResultActors) == 0x000038, "Member 'GA_TGF_FunctionLibrary_C_SearchTarget::ResultActors' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_SearchTarget, Targets) == 0x000048, "Member 'GA_TGF_FunctionLibrary_C_SearchTarget::Targets' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_SearchTarget, SrcForward) == 0x000058, "Member 'GA_TGF_FunctionLibrary_C_SearchTarget::SrcForward' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_SearchTarget, CurActor) == 0x000070, "Member 'GA_TGF_FunctionLibrary_C_SearchTarget::CurActor' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_SearchTarget, Src) == 0x000078, "Member 'GA_TGF_FunctionLibrary_C_SearchTarget::Src' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_SearchTarget, SrcLocation) == 0x000080, "Member 'GA_TGF_FunctionLibrary_C_SearchTarget::SrcLocation' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_SearchTarget, CallFunc_GetWorldSubsystem_ReturnValue) == 0x000098, "Member 'GA_TGF_FunctionLibrary_C_SearchTarget::CallFunc_GetWorldSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_SearchTarget, Temp_int_Array_Index_Variable) == 0x0000A0, "Member 'GA_TGF_FunctionLibrary_C_SearchTarget::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_SearchTarget, Temp_int_Loop_Counter_Variable) == 0x0000A4, "Member 'GA_TGF_FunctionLibrary_C_SearchTarget::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_SearchTarget, CallFunc_Add_IntInt_ReturnValue) == 0x0000A8, "Member 'GA_TGF_FunctionLibrary_C_SearchTarget::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_SearchTarget, K2Node_MakeArray_Array) == 0x0000B0, "Member 'GA_TGF_FunctionLibrary_C_SearchTarget::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_SearchTarget, CallFunc_SortActorsByDistance_ReturnValue) == 0x0000C0, "Member 'GA_TGF_FunctionLibrary_C_SearchTarget::CallFunc_SortActorsByDistance_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_SearchTarget, CallFunc_Array_Length_ReturnValue) == 0x0000D0, "Member 'GA_TGF_FunctionLibrary_C_SearchTarget::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_SearchTarget, CallFunc_Greater_IntInt_ReturnValue) == 0x0000D4, "Member 'GA_TGF_FunctionLibrary_C_SearchTarget::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_SearchTarget, CallFunc_Array_AddUnique_ReturnValue) == 0x0000D8, "Member 'GA_TGF_FunctionLibrary_C_SearchTarget::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_SearchTarget, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000E0, "Member 'GA_TGF_FunctionLibrary_C_SearchTarget::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_SearchTarget, K2Node_MakeArray_Array_1) == 0x0000F8, "Member 'GA_TGF_FunctionLibrary_C_SearchTarget::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_SearchTarget, CallFunc_LineTraceSingle_OutHit) == 0x000108, "Member 'GA_TGF_FunctionLibrary_C_SearchTarget::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_SearchTarget, CallFunc_LineTraceSingle_ReturnValue) == 0x0001F0, "Member 'GA_TGF_FunctionLibrary_C_SearchTarget::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_SearchTarget, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x0001F8, "Member 'GA_TGF_FunctionLibrary_C_SearchTarget::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_SearchTarget, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000210, "Member 'GA_TGF_FunctionLibrary_C_SearchTarget::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_SearchTarget, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000228, "Member 'GA_TGF_FunctionLibrary_C_SearchTarget::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_SearchTarget, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x000240, "Member 'GA_TGF_FunctionLibrary_C_SearchTarget::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_SearchTarget, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000258, "Member 'GA_TGF_FunctionLibrary_C_SearchTarget::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_SearchTarget, CallFunc_GetAngleBetweenTwoVectors_ReturnValue) == 0x000270, "Member 'GA_TGF_FunctionLibrary_C_SearchTarget::CallFunc_GetAngleBetweenTwoVectors_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_SearchTarget, CallFunc_Vector_Distance2D_ReturnValue) == 0x000278, "Member 'GA_TGF_FunctionLibrary_C_SearchTarget::CallFunc_Vector_Distance2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_SearchTarget, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000280, "Member 'GA_TGF_FunctionLibrary_C_SearchTarget::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_SearchTarget, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000281, "Member 'GA_TGF_FunctionLibrary_C_SearchTarget::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_SearchTarget, CallFunc_CompareTeams_TeamIdA) == 0x000284, "Member 'GA_TGF_FunctionLibrary_C_SearchTarget::CallFunc_CompareTeams_TeamIdA' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_SearchTarget, CallFunc_CompareTeams_TeamIdB) == 0x000288, "Member 'GA_TGF_FunctionLibrary_C_SearchTarget::CallFunc_CompareTeams_TeamIdB' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_SearchTarget, CallFunc_CompareTeams_ReturnValue) == 0x00028C, "Member 'GA_TGF_FunctionLibrary_C_SearchTarget::CallFunc_CompareTeams_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_SearchTarget, CallFunc_IsDeadOrDying_ReturnValue) == 0x00028D, "Member 'GA_TGF_FunctionLibrary_C_SearchTarget::CallFunc_IsDeadOrDying_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_SearchTarget, K2Node_SwitchEnum_CmpSuccess) == 0x00028E, "Member 'GA_TGF_FunctionLibrary_C_SearchTarget::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_SearchTarget, CallFunc_CanBeTarget_Result) == 0x00028F, "Member 'GA_TGF_FunctionLibrary_C_SearchTarget::CallFunc_CanBeTarget_Result' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_SearchTarget, K2Node_MakeArray_Array_2) == 0x000290, "Member 'GA_TGF_FunctionLibrary_C_SearchTarget::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_SearchTarget, CallFunc_GetController_ReturnValue) == 0x0002A0, "Member 'GA_TGF_FunctionLibrary_C_SearchTarget::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_SearchTarget, CallFunc_K2_GetActorLocation_ReturnValue_3) == 0x0002A8, "Member 'GA_TGF_FunctionLibrary_C_SearchTarget::CallFunc_K2_GetActorLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_SearchTarget, CallFunc_GetControlRotation_ReturnValue) == 0x0002C0, "Member 'GA_TGF_FunctionLibrary_C_SearchTarget::CallFunc_GetControlRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_SearchTarget, CallFunc_GetForwardVector_ReturnValue) == 0x0002D8, "Member 'GA_TGF_FunctionLibrary_C_SearchTarget::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_SearchTarget, CallFunc_Add_VectorVector_ReturnValue) == 0x0002F0, "Member 'GA_TGF_FunctionLibrary_C_SearchTarget::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_SearchTarget, CallFunc_BoxTraceMultiForObjects_OutHits) == 0x000308, "Member 'GA_TGF_FunctionLibrary_C_SearchTarget::CallFunc_BoxTraceMultiForObjects_OutHits' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_SearchTarget, CallFunc_BoxTraceMultiForObjects_ReturnValue) == 0x000318, "Member 'GA_TGF_FunctionLibrary_C_SearchTarget::CallFunc_BoxTraceMultiForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_SearchTarget, CallFunc_Array_Length_ReturnValue_1) == 0x00031C, "Member 'GA_TGF_FunctionLibrary_C_SearchTarget::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_SearchTarget, CallFunc_Less_IntInt_ReturnValue) == 0x000320, "Member 'GA_TGF_FunctionLibrary_C_SearchTarget::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_SearchTarget, CallFunc_Array_Get_Item) == 0x000328, "Member 'GA_TGF_FunctionLibrary_C_SearchTarget::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_SearchTarget, CallFunc_BreakHitResult_bBlockingHit) == 0x000410, "Member 'GA_TGF_FunctionLibrary_C_SearchTarget::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_SearchTarget, CallFunc_BreakHitResult_bInitialOverlap) == 0x000411, "Member 'GA_TGF_FunctionLibrary_C_SearchTarget::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_SearchTarget, CallFunc_BreakHitResult_Time) == 0x000414, "Member 'GA_TGF_FunctionLibrary_C_SearchTarget::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_SearchTarget, CallFunc_BreakHitResult_Distance) == 0x000418, "Member 'GA_TGF_FunctionLibrary_C_SearchTarget::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_SearchTarget, CallFunc_BreakHitResult_Location) == 0x000420, "Member 'GA_TGF_FunctionLibrary_C_SearchTarget::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_SearchTarget, CallFunc_BreakHitResult_ImpactPoint) == 0x000438, "Member 'GA_TGF_FunctionLibrary_C_SearchTarget::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_SearchTarget, CallFunc_BreakHitResult_Normal) == 0x000450, "Member 'GA_TGF_FunctionLibrary_C_SearchTarget::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_SearchTarget, CallFunc_BreakHitResult_ImpactNormal) == 0x000468, "Member 'GA_TGF_FunctionLibrary_C_SearchTarget::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_SearchTarget, CallFunc_BreakHitResult_PhysMat) == 0x000480, "Member 'GA_TGF_FunctionLibrary_C_SearchTarget::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_SearchTarget, CallFunc_BreakHitResult_HitActor) == 0x000488, "Member 'GA_TGF_FunctionLibrary_C_SearchTarget::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_SearchTarget, CallFunc_BreakHitResult_HitComponent) == 0x000490, "Member 'GA_TGF_FunctionLibrary_C_SearchTarget::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_SearchTarget, CallFunc_BreakHitResult_HitBoneName) == 0x000498, "Member 'GA_TGF_FunctionLibrary_C_SearchTarget::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_SearchTarget, CallFunc_BreakHitResult_BoneName) == 0x0004A0, "Member 'GA_TGF_FunctionLibrary_C_SearchTarget::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_SearchTarget, CallFunc_BreakHitResult_HitItem) == 0x0004A8, "Member 'GA_TGF_FunctionLibrary_C_SearchTarget::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_SearchTarget, CallFunc_BreakHitResult_ElementIndex) == 0x0004AC, "Member 'GA_TGF_FunctionLibrary_C_SearchTarget::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_SearchTarget, CallFunc_BreakHitResult_FaceIndex) == 0x0004B0, "Member 'GA_TGF_FunctionLibrary_C_SearchTarget::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_SearchTarget, CallFunc_BreakHitResult_TraceStart) == 0x0004B8, "Member 'GA_TGF_FunctionLibrary_C_SearchTarget::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_SearchTarget, CallFunc_BreakHitResult_TraceEnd) == 0x0004D0, "Member 'GA_TGF_FunctionLibrary_C_SearchTarget::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_SearchTarget, K2Node_DynamicCast_AsLyra_Character) == 0x0004E8, "Member 'GA_TGF_FunctionLibrary_C_SearchTarget::K2Node_DynamicCast_AsLyra_Character' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_SearchTarget, K2Node_DynamicCast_bSuccess) == 0x0004F0, "Member 'GA_TGF_FunctionLibrary_C_SearchTarget::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_SearchTarget, CallFunc_Less_DoubleDouble_A_ImplicitCast) == 0x0004F8, "Member 'GA_TGF_FunctionLibrary_C_SearchTarget::CallFunc_Less_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function GA_TGF_FunctionLibrary.GA_TGF_FunctionLibrary_C.VerifyServerSpanwProjectilePos
// 0x0338 (0x0338 - 0x0000)
struct GA_TGF_FunctionLibrary_C_VerifyServerSpanwProjectilePos final
{
public:
	struct FVector                                CurViewPos;                                        // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaxVerticalOffset;                                 // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaxHorizontalOffset;                               // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ALyraCharacter*                         Target;                                            // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          bValid;                                            // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_VectorToString_ReturnValue;          // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0050(0x0018)()
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0080(0x0050)(HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorUpVector_ReturnValue;             // 0x00E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0108(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_VectorToString_ReturnValue_1;        // 0x0120(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0130(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0148(0x0018)()
	struct FVector                                CallFunc_ProjectVectorOnToPlane_ReturnValue;       // 0x0160(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0178(0x0050)(HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_ProjectVectorOnToVector_ReturnValue;      // 0x01D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E9[0x7];                                      // 0x01E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_VSize_ReturnValue_1;                      // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x01F8(0x0050)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0248(0x0050)(HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1;  // 0x0298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0299(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29A[0x6];                                      // 0x029A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_BoolToText_ReturnValue;              // 0x02A0(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_4;            // 0x02B8(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0308(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0318(0x0018)()
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast;          // 0x0330(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_TGF_FunctionLibrary_C_VerifyServerSpanwProjectilePos) == 0x000008, "Wrong alignment on GA_TGF_FunctionLibrary_C_VerifyServerSpanwProjectilePos");
static_assert(sizeof(GA_TGF_FunctionLibrary_C_VerifyServerSpanwProjectilePos) == 0x000338, "Wrong size on GA_TGF_FunctionLibrary_C_VerifyServerSpanwProjectilePos");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_VerifyServerSpanwProjectilePos, CurViewPos) == 0x000000, "Member 'GA_TGF_FunctionLibrary_C_VerifyServerSpanwProjectilePos::CurViewPos' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_VerifyServerSpanwProjectilePos, MaxVerticalOffset) == 0x000018, "Member 'GA_TGF_FunctionLibrary_C_VerifyServerSpanwProjectilePos::MaxVerticalOffset' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_VerifyServerSpanwProjectilePos, MaxHorizontalOffset) == 0x000020, "Member 'GA_TGF_FunctionLibrary_C_VerifyServerSpanwProjectilePos::MaxHorizontalOffset' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_VerifyServerSpanwProjectilePos, Target) == 0x000028, "Member 'GA_TGF_FunctionLibrary_C_VerifyServerSpanwProjectilePos::Target' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_VerifyServerSpanwProjectilePos, __WorldContext) == 0x000030, "Member 'GA_TGF_FunctionLibrary_C_VerifyServerSpanwProjectilePos::__WorldContext' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_VerifyServerSpanwProjectilePos, bValid) == 0x000038, "Member 'GA_TGF_FunctionLibrary_C_VerifyServerSpanwProjectilePos::bValid' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_VerifyServerSpanwProjectilePos, CallFunc_Conv_VectorToString_ReturnValue) == 0x000040, "Member 'GA_TGF_FunctionLibrary_C_VerifyServerSpanwProjectilePos::CallFunc_Conv_VectorToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_VerifyServerSpanwProjectilePos, CallFunc_Conv_StringToText_ReturnValue) == 0x000050, "Member 'GA_TGF_FunctionLibrary_C_VerifyServerSpanwProjectilePos::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_VerifyServerSpanwProjectilePos, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000068, "Member 'GA_TGF_FunctionLibrary_C_VerifyServerSpanwProjectilePos::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_VerifyServerSpanwProjectilePos, K2Node_MakeStruct_FormatArgumentData) == 0x000080, "Member 'GA_TGF_FunctionLibrary_C_VerifyServerSpanwProjectilePos::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_VerifyServerSpanwProjectilePos, CallFunc_BreakVector_X) == 0x0000D0, "Member 'GA_TGF_FunctionLibrary_C_VerifyServerSpanwProjectilePos::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_VerifyServerSpanwProjectilePos, CallFunc_BreakVector_Y) == 0x0000D8, "Member 'GA_TGF_FunctionLibrary_C_VerifyServerSpanwProjectilePos::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_VerifyServerSpanwProjectilePos, CallFunc_BreakVector_Z) == 0x0000E0, "Member 'GA_TGF_FunctionLibrary_C_VerifyServerSpanwProjectilePos::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_VerifyServerSpanwProjectilePos, CallFunc_GetActorUpVector_ReturnValue) == 0x0000E8, "Member 'GA_TGF_FunctionLibrary_C_VerifyServerSpanwProjectilePos::CallFunc_GetActorUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_VerifyServerSpanwProjectilePos, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000100, "Member 'GA_TGF_FunctionLibrary_C_VerifyServerSpanwProjectilePos::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_VerifyServerSpanwProjectilePos, CallFunc_MakeVector_ReturnValue) == 0x000108, "Member 'GA_TGF_FunctionLibrary_C_VerifyServerSpanwProjectilePos::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_VerifyServerSpanwProjectilePos, CallFunc_Conv_VectorToString_ReturnValue_1) == 0x000120, "Member 'GA_TGF_FunctionLibrary_C_VerifyServerSpanwProjectilePos::CallFunc_Conv_VectorToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_VerifyServerSpanwProjectilePos, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000130, "Member 'GA_TGF_FunctionLibrary_C_VerifyServerSpanwProjectilePos::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_VerifyServerSpanwProjectilePos, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000148, "Member 'GA_TGF_FunctionLibrary_C_VerifyServerSpanwProjectilePos::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_VerifyServerSpanwProjectilePos, CallFunc_ProjectVectorOnToPlane_ReturnValue) == 0x000160, "Member 'GA_TGF_FunctionLibrary_C_VerifyServerSpanwProjectilePos::CallFunc_ProjectVectorOnToPlane_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_VerifyServerSpanwProjectilePos, K2Node_MakeStruct_FormatArgumentData_1) == 0x000178, "Member 'GA_TGF_FunctionLibrary_C_VerifyServerSpanwProjectilePos::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_VerifyServerSpanwProjectilePos, CallFunc_VSize_ReturnValue) == 0x0001C8, "Member 'GA_TGF_FunctionLibrary_C_VerifyServerSpanwProjectilePos::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_VerifyServerSpanwProjectilePos, CallFunc_ProjectVectorOnToVector_ReturnValue) == 0x0001D0, "Member 'GA_TGF_FunctionLibrary_C_VerifyServerSpanwProjectilePos::CallFunc_ProjectVectorOnToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_VerifyServerSpanwProjectilePos, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x0001E8, "Member 'GA_TGF_FunctionLibrary_C_VerifyServerSpanwProjectilePos::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_VerifyServerSpanwProjectilePos, CallFunc_VSize_ReturnValue_1) == 0x0001F0, "Member 'GA_TGF_FunctionLibrary_C_VerifyServerSpanwProjectilePos::CallFunc_VSize_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_VerifyServerSpanwProjectilePos, K2Node_MakeStruct_FormatArgumentData_2) == 0x0001F8, "Member 'GA_TGF_FunctionLibrary_C_VerifyServerSpanwProjectilePos::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_VerifyServerSpanwProjectilePos, K2Node_MakeStruct_FormatArgumentData_3) == 0x000248, "Member 'GA_TGF_FunctionLibrary_C_VerifyServerSpanwProjectilePos::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_VerifyServerSpanwProjectilePos, CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1) == 0x000298, "Member 'GA_TGF_FunctionLibrary_C_VerifyServerSpanwProjectilePos::CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_VerifyServerSpanwProjectilePos, CallFunc_BooleanAND_ReturnValue) == 0x000299, "Member 'GA_TGF_FunctionLibrary_C_VerifyServerSpanwProjectilePos::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_VerifyServerSpanwProjectilePos, CallFunc_Conv_BoolToText_ReturnValue) == 0x0002A0, "Member 'GA_TGF_FunctionLibrary_C_VerifyServerSpanwProjectilePos::CallFunc_Conv_BoolToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_VerifyServerSpanwProjectilePos, K2Node_MakeStruct_FormatArgumentData_4) == 0x0002B8, "Member 'GA_TGF_FunctionLibrary_C_VerifyServerSpanwProjectilePos::K2Node_MakeStruct_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_VerifyServerSpanwProjectilePos, K2Node_MakeArray_Array) == 0x000308, "Member 'GA_TGF_FunctionLibrary_C_VerifyServerSpanwProjectilePos::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_VerifyServerSpanwProjectilePos, CallFunc_Format_ReturnValue) == 0x000318, "Member 'GA_TGF_FunctionLibrary_C_VerifyServerSpanwProjectilePos::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_VerifyServerSpanwProjectilePos, CallFunc_Add_DoubleDouble_B_ImplicitCast) == 0x000330, "Member 'GA_TGF_FunctionLibrary_C_VerifyServerSpanwProjectilePos::CallFunc_Add_DoubleDouble_B_ImplicitCast' has a wrong offset!");

// Function GA_TGF_FunctionLibrary.GA_TGF_FunctionLibrary_C.GetRandomGEWithHandler
// 0x0180 (0x0180 - 0x0000)
struct GA_TGF_FunctionLibrary_C_GetRandomGEWithHandler final
{
public:
	TArray<class AActor*>                         Targets;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FGameplayTag                           BuffTag;                                           // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  HighPriorityTags;                                  // 0x0018(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm)
	int32                                         Num;                                               // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          bSucceed;                                          // 0x0048(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FTgfGameplayEffectHandleData>   Res;                                               // 0x0050(0x0010)(Parm, OutParm, ContainsInstancedReference)
	bool                                          bHasGE;                                            // 0x0060(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FTgfGameplayEffectHandleData>   Result;                                            // 0x0068(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	class ULyraAbilitySystemComponent*            TargetACS;                                         // 0x0078(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         LeftNum;                                           // 0x0080(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9D[0x3];                                       // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ALyraCharacter*                         K2Node_DynamicCast_AsLyra_Character;               // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULyraAbilitySystemComponent*            CallFunc_GetLyraAbilitySystemComponent_ReturnValue; // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x00D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D3[0x1];                                       // 0x00D3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_MakeGameplayTagContainerFromTag_ReturnValue; // 0x00E0(0x0020)()
	TArray<struct FActiveGameplayEffectHandle>    CallFunc_GetRandomActiveEffects_ReturnValue;       // 0x0100(0x0010)(ReferenceParm)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_2;             // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_111[0x3];                                      // 0x0111(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FActiveGameplayEffectHandle            CallFunc_Array_Get_Item_1;                         // 0x0114(0x0008)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11C[0x4];                                      // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTgfGameplayEffectHandleData           K2Node_MakeStruct_TgfGameplayEffectHandleData;     // 0x0120(0x0010)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_139[0x3];                                      // 0x0139(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FActiveGameplayEffectHandle>    CallFunc_GetRandomActiveEffects_ReturnValue_1;     // 0x0140(0x0010)(ReferenceParm)
	struct FActiveGameplayEffectHandle            CallFunc_Array_Get_Item_2;                         // 0x0150(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15C[0x4];                                      // 0x015C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTgfGameplayEffectHandleData           K2Node_MakeStruct_TgfGameplayEffectHandleData_1;   // 0x0160(0x0010)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_171[0x3];                                      // 0x0171(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue_1;            // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0179(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_TGF_FunctionLibrary_C_GetRandomGEWithHandler) == 0x000008, "Wrong alignment on GA_TGF_FunctionLibrary_C_GetRandomGEWithHandler");
static_assert(sizeof(GA_TGF_FunctionLibrary_C_GetRandomGEWithHandler) == 0x000180, "Wrong size on GA_TGF_FunctionLibrary_C_GetRandomGEWithHandler");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_GetRandomGEWithHandler, Targets) == 0x000000, "Member 'GA_TGF_FunctionLibrary_C_GetRandomGEWithHandler::Targets' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_GetRandomGEWithHandler, BuffTag) == 0x000010, "Member 'GA_TGF_FunctionLibrary_C_GetRandomGEWithHandler::BuffTag' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_GetRandomGEWithHandler, HighPriorityTags) == 0x000018, "Member 'GA_TGF_FunctionLibrary_C_GetRandomGEWithHandler::HighPriorityTags' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_GetRandomGEWithHandler, Num) == 0x000038, "Member 'GA_TGF_FunctionLibrary_C_GetRandomGEWithHandler::Num' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_GetRandomGEWithHandler, __WorldContext) == 0x000040, "Member 'GA_TGF_FunctionLibrary_C_GetRandomGEWithHandler::__WorldContext' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_GetRandomGEWithHandler, bSucceed) == 0x000048, "Member 'GA_TGF_FunctionLibrary_C_GetRandomGEWithHandler::bSucceed' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_GetRandomGEWithHandler, Res) == 0x000050, "Member 'GA_TGF_FunctionLibrary_C_GetRandomGEWithHandler::Res' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_GetRandomGEWithHandler, bHasGE) == 0x000060, "Member 'GA_TGF_FunctionLibrary_C_GetRandomGEWithHandler::bHasGE' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_GetRandomGEWithHandler, Result) == 0x000068, "Member 'GA_TGF_FunctionLibrary_C_GetRandomGEWithHandler::Result' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_GetRandomGEWithHandler, TargetACS) == 0x000078, "Member 'GA_TGF_FunctionLibrary_C_GetRandomGEWithHandler::TargetACS' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_GetRandomGEWithHandler, LeftNum) == 0x000080, "Member 'GA_TGF_FunctionLibrary_C_GetRandomGEWithHandler::LeftNum' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_GetRandomGEWithHandler, CallFunc_Array_Length_ReturnValue) == 0x000084, "Member 'GA_TGF_FunctionLibrary_C_GetRandomGEWithHandler::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_GetRandomGEWithHandler, Temp_int_Array_Index_Variable) == 0x000088, "Member 'GA_TGF_FunctionLibrary_C_GetRandomGEWithHandler::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_GetRandomGEWithHandler, Temp_int_Loop_Counter_Variable) == 0x00008C, "Member 'GA_TGF_FunctionLibrary_C_GetRandomGEWithHandler::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_GetRandomGEWithHandler, CallFunc_Add_IntInt_ReturnValue) == 0x000090, "Member 'GA_TGF_FunctionLibrary_C_GetRandomGEWithHandler::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_GetRandomGEWithHandler, Temp_int_Array_Index_Variable_1) == 0x000094, "Member 'GA_TGF_FunctionLibrary_C_GetRandomGEWithHandler::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_GetRandomGEWithHandler, Temp_int_Loop_Counter_Variable_1) == 0x000098, "Member 'GA_TGF_FunctionLibrary_C_GetRandomGEWithHandler::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_GetRandomGEWithHandler, CallFunc_Less_IntInt_ReturnValue) == 0x00009C, "Member 'GA_TGF_FunctionLibrary_C_GetRandomGEWithHandler::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_GetRandomGEWithHandler, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000A0, "Member 'GA_TGF_FunctionLibrary_C_GetRandomGEWithHandler::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_GetRandomGEWithHandler, Temp_int_Array_Index_Variable_2) == 0x0000A4, "Member 'GA_TGF_FunctionLibrary_C_GetRandomGEWithHandler::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_GetRandomGEWithHandler, Temp_int_Loop_Counter_Variable_2) == 0x0000A8, "Member 'GA_TGF_FunctionLibrary_C_GetRandomGEWithHandler::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_GetRandomGEWithHandler, CallFunc_Array_Get_Item) == 0x0000B0, "Member 'GA_TGF_FunctionLibrary_C_GetRandomGEWithHandler::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_GetRandomGEWithHandler, K2Node_DynamicCast_AsLyra_Character) == 0x0000B8, "Member 'GA_TGF_FunctionLibrary_C_GetRandomGEWithHandler::K2Node_DynamicCast_AsLyra_Character' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_GetRandomGEWithHandler, K2Node_DynamicCast_bSuccess) == 0x0000C0, "Member 'GA_TGF_FunctionLibrary_C_GetRandomGEWithHandler::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_GetRandomGEWithHandler, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000C4, "Member 'GA_TGF_FunctionLibrary_C_GetRandomGEWithHandler::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_GetRandomGEWithHandler, CallFunc_GetLyraAbilitySystemComponent_ReturnValue) == 0x0000C8, "Member 'GA_TGF_FunctionLibrary_C_GetRandomGEWithHandler::CallFunc_GetLyraAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_GetRandomGEWithHandler, CallFunc_IsValid_ReturnValue) == 0x0000D0, "Member 'GA_TGF_FunctionLibrary_C_GetRandomGEWithHandler::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_GetRandomGEWithHandler, CallFunc_Greater_IntInt_ReturnValue) == 0x0000D1, "Member 'GA_TGF_FunctionLibrary_C_GetRandomGEWithHandler::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_GetRandomGEWithHandler, CallFunc_Greater_IntInt_ReturnValue_1) == 0x0000D2, "Member 'GA_TGF_FunctionLibrary_C_GetRandomGEWithHandler::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_GetRandomGEWithHandler, CallFunc_Subtract_IntInt_ReturnValue) == 0x0000D4, "Member 'GA_TGF_FunctionLibrary_C_GetRandomGEWithHandler::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_GetRandomGEWithHandler, CallFunc_BooleanOR_ReturnValue) == 0x0000D8, "Member 'GA_TGF_FunctionLibrary_C_GetRandomGEWithHandler::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_GetRandomGEWithHandler, CallFunc_MakeGameplayTagContainerFromTag_ReturnValue) == 0x0000E0, "Member 'GA_TGF_FunctionLibrary_C_GetRandomGEWithHandler::CallFunc_MakeGameplayTagContainerFromTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_GetRandomGEWithHandler, CallFunc_GetRandomActiveEffects_ReturnValue) == 0x000100, "Member 'GA_TGF_FunctionLibrary_C_GetRandomGEWithHandler::CallFunc_GetRandomActiveEffects_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_GetRandomGEWithHandler, CallFunc_Greater_IntInt_ReturnValue_2) == 0x000110, "Member 'GA_TGF_FunctionLibrary_C_GetRandomGEWithHandler::CallFunc_Greater_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_GetRandomGEWithHandler, CallFunc_Array_Get_Item_1) == 0x000114, "Member 'GA_TGF_FunctionLibrary_C_GetRandomGEWithHandler::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_GetRandomGEWithHandler, K2Node_MakeStruct_TgfGameplayEffectHandleData) == 0x000120, "Member 'GA_TGF_FunctionLibrary_C_GetRandomGEWithHandler::K2Node_MakeStruct_TgfGameplayEffectHandleData' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_GetRandomGEWithHandler, CallFunc_Array_Length_ReturnValue_1) == 0x000130, "Member 'GA_TGF_FunctionLibrary_C_GetRandomGEWithHandler::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_GetRandomGEWithHandler, CallFunc_Array_AddUnique_ReturnValue) == 0x000134, "Member 'GA_TGF_FunctionLibrary_C_GetRandomGEWithHandler::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_GetRandomGEWithHandler, CallFunc_Less_IntInt_ReturnValue_1) == 0x000138, "Member 'GA_TGF_FunctionLibrary_C_GetRandomGEWithHandler::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_GetRandomGEWithHandler, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x00013C, "Member 'GA_TGF_FunctionLibrary_C_GetRandomGEWithHandler::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_GetRandomGEWithHandler, CallFunc_GetRandomActiveEffects_ReturnValue_1) == 0x000140, "Member 'GA_TGF_FunctionLibrary_C_GetRandomGEWithHandler::CallFunc_GetRandomActiveEffects_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_GetRandomGEWithHandler, CallFunc_Array_Get_Item_2) == 0x000150, "Member 'GA_TGF_FunctionLibrary_C_GetRandomGEWithHandler::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_GetRandomGEWithHandler, CallFunc_Array_Length_ReturnValue_2) == 0x000158, "Member 'GA_TGF_FunctionLibrary_C_GetRandomGEWithHandler::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_GetRandomGEWithHandler, K2Node_MakeStruct_TgfGameplayEffectHandleData_1) == 0x000160, "Member 'GA_TGF_FunctionLibrary_C_GetRandomGEWithHandler::K2Node_MakeStruct_TgfGameplayEffectHandleData_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_GetRandomGEWithHandler, CallFunc_Less_IntInt_ReturnValue_2) == 0x000170, "Member 'GA_TGF_FunctionLibrary_C_GetRandomGEWithHandler::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_GetRandomGEWithHandler, CallFunc_Array_AddUnique_ReturnValue_1) == 0x000174, "Member 'GA_TGF_FunctionLibrary_C_GetRandomGEWithHandler::CallFunc_Array_AddUnique_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_GetRandomGEWithHandler, CallFunc_IsValid_ReturnValue_1) == 0x000178, "Member 'GA_TGF_FunctionLibrary_C_GetRandomGEWithHandler::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_FunctionLibrary_C_GetRandomGEWithHandler, CallFunc_BooleanAND_ReturnValue) == 0x000179, "Member 'GA_TGF_FunctionLibrary_C_GetRandomGEWithHandler::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

}

