#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WwiseResourceLoader

#include "Basic.hpp"

#include "Engine_classes.hpp"
#include "WwiseResourceLoader_structs.hpp"


namespace SDK
{

// Class WwiseResourceLoader.WwiseEventInfoLibrary
// 0x0000 (0x0028 - 0x0028)
class UWwiseEventInfoLibrary final : public UBlueprintFunctionLibrary
{
public:
	static void BreakStruct(const struct FWwiseEventInfo& Ref, struct FGuid* OutWwiseGuid, int32* OutWwiseShortId, class FString* OutWwiseName, EWwiseEventSwitchContainerLoading* OutSwitchContainerLoading, EWwiseEventDestroyOptions* OutDestroyOptions, int32* OutHardCodedSoundBankShortId);
	static EWwiseEventDestroyOptions GetDestroyOptions(const struct FWwiseEventInfo& Ref);
	static int32 GetHardCodedSoundBankShortId(const struct FWwiseEventInfo& Ref);
	static EWwiseEventSwitchContainerLoading GetSwitchContainerLoading(const struct FWwiseEventInfo& Ref);
	static struct FGuid GetWwiseGuid(const struct FWwiseEventInfo& Ref);
	static class FString GetWwiseName(const struct FWwiseEventInfo& Ref);
	static int32 GetWwiseShortID(const struct FWwiseEventInfo& Ref);
	static struct FWwiseEventInfo MakeStruct(const struct FGuid& WwiseGuid, int32 WwiseShortId, const class FString& WwiseName, EWwiseEventSwitchContainerLoading SwitchContainerLoading, EWwiseEventDestroyOptions DestroyOptions, int32 HardCodedSoundBankShortId);
	static struct FWwiseEventInfo SetDestroyOptions(const struct FWwiseEventInfo& Ref, const EWwiseEventDestroyOptions& DestroyOptions);
	static struct FWwiseEventInfo SetHardCodedSoundBankShortId(const struct FWwiseEventInfo& Ref, int32 HardCodedSoundBankShortId);
	static struct FWwiseEventInfo SetSwitchContainerLoading(const struct FWwiseEventInfo& Ref, const EWwiseEventSwitchContainerLoading& SwitchContainerLoading);
	static struct FWwiseEventInfo SetWwiseGuid(const struct FWwiseEventInfo& Ref, const struct FGuid& WwiseGuid);
	static struct FWwiseEventInfo SetWwiseName(const struct FWwiseEventInfo& Ref, const class FString& WwiseName);
	static struct FWwiseEventInfo SetWwiseShortId(const struct FWwiseEventInfo& Ref, int32 WwiseShortId);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"WwiseEventInfoLibrary">();
	}
	static class UWwiseEventInfoLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWwiseEventInfoLibrary>();
	}
};
static_assert(alignof(UWwiseEventInfoLibrary) == 0x000008, "Wrong alignment on UWwiseEventInfoLibrary");
static_assert(sizeof(UWwiseEventInfoLibrary) == 0x000028, "Wrong size on UWwiseEventInfoLibrary");

// Class WwiseResourceLoader.WwiseGroupValueInfoLibrary
// 0x0000 (0x0028 - 0x0028)
class UWwiseGroupValueInfoLibrary final : public UBlueprintFunctionLibrary
{
public:
	static void BreakStruct(const struct FWwiseGroupValueInfo& Ref, struct FGuid* OutAssetGuid, int32* OutGroupShortId, int32* OutWwiseShortId, class FString* OutWwiseName);
	static struct FGuid GetAssetGuid(const struct FWwiseGroupValueInfo& Ref);
	static int32 GetGroupShortId(const struct FWwiseGroupValueInfo& Ref);
	static class FString GetWwiseName(const struct FWwiseGroupValueInfo& Ref);
	static int32 GetWwiseShortID(const struct FWwiseGroupValueInfo& Ref);
	static struct FWwiseGroupValueInfo MakeStruct(const struct FGuid& AssetGuid, int32 GroupShortId, int32 WwiseShortId, const class FString& WwiseName);
	static struct FWwiseGroupValueInfo SetAssetGuid(const struct FWwiseGroupValueInfo& Ref, const struct FGuid& AssetGuid);
	static struct FWwiseGroupValueInfo SetGroupShortId(const struct FWwiseGroupValueInfo& Ref, int32 GroupShortId);
	static struct FWwiseGroupValueInfo SetWwiseName(const struct FWwiseGroupValueInfo& Ref, const class FString& WwiseName);
	static struct FWwiseGroupValueInfo SetWwiseShortId(const struct FWwiseGroupValueInfo& Ref, int32 WwiseShortId);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"WwiseGroupValueInfoLibrary">();
	}
	static class UWwiseGroupValueInfoLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWwiseGroupValueInfoLibrary>();
	}
};
static_assert(alignof(UWwiseGroupValueInfoLibrary) == 0x000008, "Wrong alignment on UWwiseGroupValueInfoLibrary");
static_assert(sizeof(UWwiseGroupValueInfoLibrary) == 0x000028, "Wrong size on UWwiseGroupValueInfoLibrary");

// Class WwiseResourceLoader.WwiseObjectInfoLibrary
// 0x0000 (0x0028 - 0x0028)
class UWwiseObjectInfoLibrary final : public UBlueprintFunctionLibrary
{
public:
	static void BreakStruct(const struct FWwiseObjectInfo& Ref, struct FGuid* OutWwiseGuid, int32* OutWwiseShortId, class FString* OutWwiseName, int32* OutHardCodedSoundBankShortId);
	static int32 GetHardCodedSoundBankShortId(const struct FWwiseObjectInfo& Ref);
	static struct FGuid GetWwiseGuid(const struct FWwiseObjectInfo& Ref);
	static class FString GetWwiseName(const struct FWwiseObjectInfo& Ref);
	static int32 GetWwiseShortID(const struct FWwiseObjectInfo& Ref);
	static struct FWwiseObjectInfo MakeStruct(const struct FGuid& WwiseGuid, int32 WwiseShortId, const class FString& WwiseName, int32 HardCodedSoundBankShortId);
	static struct FWwiseObjectInfo SetHardCodedSoundBankShortId(const struct FWwiseObjectInfo& Ref, int32 HardCodedSoundBankShortId);
	static struct FWwiseObjectInfo SetWwiseGuid(const struct FWwiseObjectInfo& Ref, const struct FGuid& WwiseGuid);
	static struct FWwiseObjectInfo SetWwiseName(const struct FWwiseObjectInfo& Ref, const class FString& WwiseName);
	static struct FWwiseObjectInfo SetWwiseShortId(const struct FWwiseObjectInfo& Ref, int32 WwiseShortId);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"WwiseObjectInfoLibrary">();
	}
	static class UWwiseObjectInfoLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWwiseObjectInfoLibrary>();
	}
};
static_assert(alignof(UWwiseObjectInfoLibrary) == 0x000008, "Wrong alignment on UWwiseObjectInfoLibrary");
static_assert(sizeof(UWwiseObjectInfoLibrary) == 0x000028, "Wrong size on UWwiseObjectInfoLibrary");

}

