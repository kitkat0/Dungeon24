#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: KantanChartsDatasource

#include "Basic.hpp"

#include "CoreUObject_classes.hpp"


namespace SDK
{

// Class KantanChartsDatasource.KantanCartesianDatasourceInterface
// 0x0000 (0x0028 - 0x0028)
class IKantanCartesianDatasourceInterface final : public IInterface
{
public:
	int32 GetNumSeries() const;
	TArray<struct FKantanCartesianDatapoint> GetSeriesDatapoints(int32 SeriesIdx) const;
	class FName GetSeriesId(int32 CatIdx) const;
	class FText GetSeriesName(int32 SeriesIdx) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"KantanCartesianDatasourceInterface">();
	}
	static class IKantanCartesianDatasourceInterface* GetDefaultObj()
	{
		return GetDefaultObjImpl<IKantanCartesianDatasourceInterface>();
	}
};
static_assert(alignof(IKantanCartesianDatasourceInterface) == 0x000008, "Wrong alignment on IKantanCartesianDatasourceInterface");
static_assert(sizeof(IKantanCartesianDatasourceInterface) == 0x000028, "Wrong size on IKantanCartesianDatasourceInterface");

// Class KantanChartsDatasource.KantanCategoryDatasourceInterface
// 0x0000 (0x0028 - 0x0028)
class IKantanCategoryDatasourceInterface final : public IInterface
{
public:
	class FName GetCategoryId(int32 CatIdx) const;
	class FText GetCategoryName(int32 CatIdx) const;
	float GetCategoryValue(int32 CatIdx) const;
	int32 GetNumCategories() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"KantanCategoryDatasourceInterface">();
	}
	static class IKantanCategoryDatasourceInterface* GetDefaultObj()
	{
		return GetDefaultObjImpl<IKantanCategoryDatasourceInterface>();
	}
};
static_assert(alignof(IKantanCategoryDatasourceInterface) == 0x000008, "Wrong alignment on IKantanCategoryDatasourceInterface");
static_assert(sizeof(IKantanCategoryDatasourceInterface) == 0x000028, "Wrong size on IKantanCategoryDatasourceInterface");

// Class KantanChartsDatasource.KantanSimpleCartesianDatasource
// 0x0020 (0x0048 - 0x0028)
class UKantanSimpleCartesianDatasource final : public UObject
{
public:
	uint8                                         Pad_28[0x20];                                      // 0x0028(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UKantanSimpleCartesianDatasource* NewSimpleCartesianDatasource(int32 MaxDatapoints);

	void BP_AddDatapoint(class FName SeriesId, const struct FVector2D& Point, bool* bSuccess);
	void BP_AddSeries(const class FText& Param_Name, class FName* SeriesId);
	void BP_AddSeriesWithId(class FName ID, const class FText& Param_Name, bool* bSuccess);
	void BP_RemoveAllSeries();
	void BP_RemoveSeries(class FName ID, bool* bSuccess);
	void BP_SetDatapointLimit(int32 Limit);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"KantanSimpleCartesianDatasource">();
	}
	static class UKantanSimpleCartesianDatasource* GetDefaultObj()
	{
		return GetDefaultObjImpl<UKantanSimpleCartesianDatasource>();
	}
};
static_assert(alignof(UKantanSimpleCartesianDatasource) == 0x000008, "Wrong alignment on UKantanSimpleCartesianDatasource");
static_assert(sizeof(UKantanSimpleCartesianDatasource) == 0x000048, "Wrong size on UKantanSimpleCartesianDatasource");

// Class KantanChartsDatasource.KantanSimpleCategoryDatasource
// 0x0018 (0x0040 - 0x0028)
class UKantanSimpleCategoryDatasource final : public UObject
{
public:
	uint8                                         Pad_28[0x18];                                      // 0x0028(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UKantanSimpleCategoryDatasource* NewSimpleCategoryDatasource();

	void BP_AddCategory(const class FText& Param_Name, class FName* CatId);
	void BP_AddCategoryWithId(class FName ID, const class FText& Param_Name, bool* bSuccess);
	void BP_RemoveAllCategories();
	void BP_RemoveCategory(class FName ID, bool* bSuccess);
	void BP_UpdateCategoryValue(class FName ID, float Value, bool* bSuccess);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"KantanSimpleCategoryDatasource">();
	}
	static class UKantanSimpleCategoryDatasource* GetDefaultObj()
	{
		return GetDefaultObjImpl<UKantanSimpleCategoryDatasource>();
	}
};
static_assert(alignof(UKantanSimpleCategoryDatasource) == 0x000008, "Wrong alignment on UKantanSimpleCategoryDatasource");
static_assert(sizeof(UKantanSimpleCategoryDatasource) == 0x000040, "Wrong size on UKantanSimpleCategoryDatasource");

}

