#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Mechanism

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_InteractableBase_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "AkAudio_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Mechanism.BP_Mechanism_C
// 0x0150 (0x04A0 - 0x0350)
class ABP_Mechanism_C final : public ABP_InteractableBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_Mechanism_C;                     // 0x0350(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBoxComponent*                          ForbiddenArea;                                     // 0x0358(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        MoveBase;                                          // 0x0360(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAkComponent*                           Ak;                                                // 0x0368(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         MoveObject_Value_7FC7CB8B43A53F0FBB5C6BB7C7F7556A; // 0x0370(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            MoveObject__Direction_7FC7CB8B43A53F0FBB5C6BB7C7F7556A; // 0x0374(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_375[0x3];                                      // 0x0375(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     MoveObject;                                        // 0x0378(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsOn;                                             // 0x0380(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_381[0xF];                                      // 0x0381(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             InitialTransform;                                  // 0x0390(0x0060)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Movement;                                          // 0x03F0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Rotation;                                          // 0x0408(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_Mechanism_C*>                BoundMechanisms;                                   // 0x0420(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	class UAkAudioEvent*                          TurnOnSound;                                       // 0x0430(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          TurnOffSound;                                      // 0x0438(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          TurnOnLoopSound;                                   // 0x0440(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          TurnOffLoopSound;                                  // 0x0448(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          TurnOnStopSound;                                   // 0x0450(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          TurnOffStopSound;                                  // 0x0458(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         AudioFadeTime;                                     // 0x0460(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_464[0x4];                                      // 0x0464(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        MoveDuration;                                      // 0x0468(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ResetPushVector;                                   // 0x0470(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           EventTag;                                          // 0x0488(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	bool                                          TriggerByEvent;                                    // 0x0490(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void EventReceived_24799FE74150B1BAEAE14382488C328F(const struct FGameplayTag& ReceivedTag, const struct FGameplayEventData& Payload);
	void ExecuteUbergraph_BP_Mechanism(int32 EntryPoint);
	void GetTriggerEventActor(class AActor** Actor);
	void Move();
	void MoveObject__FinishedFunc();
	void MoveObject__UpdateFunc();
	void On_Triggered(int32 IntParam);
	void OnReady_61F5532F4A367EC6417B458ED2268FC0();
	void OnRep_bIsOn();
	void PlayTurnOffAudio();
	void PlayTurnOffStopAudio();
	void PlayTurnOnAudio();
	void PlayTurnOnStopAudio();
	void ReceiveBeginPlay();
	void Reset();
	void Stop();
	void StopLoopAudio();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Mechanism_C">();
	}
	static class ABP_Mechanism_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Mechanism_C>();
	}
};
static_assert(alignof(ABP_Mechanism_C) == 0x000010, "Wrong alignment on ABP_Mechanism_C");
static_assert(sizeof(ABP_Mechanism_C) == 0x0004A0, "Wrong size on ABP_Mechanism_C");
static_assert(offsetof(ABP_Mechanism_C, UberGraphFrame_BP_Mechanism_C) == 0x000350, "Member 'ABP_Mechanism_C::UberGraphFrame_BP_Mechanism_C' has a wrong offset!");
static_assert(offsetof(ABP_Mechanism_C, ForbiddenArea) == 0x000358, "Member 'ABP_Mechanism_C::ForbiddenArea' has a wrong offset!");
static_assert(offsetof(ABP_Mechanism_C, MoveBase) == 0x000360, "Member 'ABP_Mechanism_C::MoveBase' has a wrong offset!");
static_assert(offsetof(ABP_Mechanism_C, Ak) == 0x000368, "Member 'ABP_Mechanism_C::Ak' has a wrong offset!");
static_assert(offsetof(ABP_Mechanism_C, MoveObject_Value_7FC7CB8B43A53F0FBB5C6BB7C7F7556A) == 0x000370, "Member 'ABP_Mechanism_C::MoveObject_Value_7FC7CB8B43A53F0FBB5C6BB7C7F7556A' has a wrong offset!");
static_assert(offsetof(ABP_Mechanism_C, MoveObject__Direction_7FC7CB8B43A53F0FBB5C6BB7C7F7556A) == 0x000374, "Member 'ABP_Mechanism_C::MoveObject__Direction_7FC7CB8B43A53F0FBB5C6BB7C7F7556A' has a wrong offset!");
static_assert(offsetof(ABP_Mechanism_C, MoveObject) == 0x000378, "Member 'ABP_Mechanism_C::MoveObject' has a wrong offset!");
static_assert(offsetof(ABP_Mechanism_C, bIsOn) == 0x000380, "Member 'ABP_Mechanism_C::bIsOn' has a wrong offset!");
static_assert(offsetof(ABP_Mechanism_C, InitialTransform) == 0x000390, "Member 'ABP_Mechanism_C::InitialTransform' has a wrong offset!");
static_assert(offsetof(ABP_Mechanism_C, Movement) == 0x0003F0, "Member 'ABP_Mechanism_C::Movement' has a wrong offset!");
static_assert(offsetof(ABP_Mechanism_C, Rotation) == 0x000408, "Member 'ABP_Mechanism_C::Rotation' has a wrong offset!");
static_assert(offsetof(ABP_Mechanism_C, BoundMechanisms) == 0x000420, "Member 'ABP_Mechanism_C::BoundMechanisms' has a wrong offset!");
static_assert(offsetof(ABP_Mechanism_C, TurnOnSound) == 0x000430, "Member 'ABP_Mechanism_C::TurnOnSound' has a wrong offset!");
static_assert(offsetof(ABP_Mechanism_C, TurnOffSound) == 0x000438, "Member 'ABP_Mechanism_C::TurnOffSound' has a wrong offset!");
static_assert(offsetof(ABP_Mechanism_C, TurnOnLoopSound) == 0x000440, "Member 'ABP_Mechanism_C::TurnOnLoopSound' has a wrong offset!");
static_assert(offsetof(ABP_Mechanism_C, TurnOffLoopSound) == 0x000448, "Member 'ABP_Mechanism_C::TurnOffLoopSound' has a wrong offset!");
static_assert(offsetof(ABP_Mechanism_C, TurnOnStopSound) == 0x000450, "Member 'ABP_Mechanism_C::TurnOnStopSound' has a wrong offset!");
static_assert(offsetof(ABP_Mechanism_C, TurnOffStopSound) == 0x000458, "Member 'ABP_Mechanism_C::TurnOffStopSound' has a wrong offset!");
static_assert(offsetof(ABP_Mechanism_C, AudioFadeTime) == 0x000460, "Member 'ABP_Mechanism_C::AudioFadeTime' has a wrong offset!");
static_assert(offsetof(ABP_Mechanism_C, MoveDuration) == 0x000468, "Member 'ABP_Mechanism_C::MoveDuration' has a wrong offset!");
static_assert(offsetof(ABP_Mechanism_C, ResetPushVector) == 0x000470, "Member 'ABP_Mechanism_C::ResetPushVector' has a wrong offset!");
static_assert(offsetof(ABP_Mechanism_C, EventTag) == 0x000488, "Member 'ABP_Mechanism_C::EventTag' has a wrong offset!");
static_assert(offsetof(ABP_Mechanism_C, TriggerByEvent) == 0x000490, "Member 'ABP_Mechanism_C::TriggerByEvent' has a wrong offset!");

}

