#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AN_Tgf_Footstep

#include "Basic.hpp"

#include "AN_Tgf_Footstep_classes.hpp"
#include "AN_Tgf_Footstep_parameters.hpp"


namespace SDK
{

// Function AN_Tgf_Footstep.AN_Tgf_Footstep_C.Get Shoe Name
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FString                           ShoeName                                               (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void UAN_Tgf_Footstep_C::Get_Shoe_Name(class AActor* Actor, class FString* ShoeName) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AN_Tgf_Footstep_C", "Get Shoe Name");

	Params::AN_Tgf_Footstep_C_Get_Shoe_Name Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);

	if (ShoeName != nullptr)
		*ShoeName = std::move(Parms.ShoeName);
}


// Function AN_Tgf_Footstep.AN_Tgf_Footstep_C.GetChestName
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FString                           SurfaceName                                            (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void UAN_Tgf_Footstep_C::GetChestName(class AActor* Actor, class FString* SurfaceName) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AN_Tgf_Footstep_C", "GetChestName");

	Params::AN_Tgf_Footstep_C_GetChestName Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);

	if (SurfaceName != nullptr)
		*SurfaceName = std::move(Parms.SurfaceName);
}


// Function AN_Tgf_Footstep.AN_Tgf_Footstep_C.GetSurfaceName
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FHitResult                       SurfaceType                                            (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// class FString                           SurfaceName                                            (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void UAN_Tgf_Footstep_C::GetSurfaceName(const struct FHitResult& SurfaceType, class FString* SurfaceName) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AN_Tgf_Footstep_C", "GetSurfaceName");

	Params::AN_Tgf_Footstep_C_GetSurfaceName Parms{};

	Parms.SurfaceType = std::move(SurfaceType);

	UObject::ProcessEvent(Func, &Parms);

	if (SurfaceName != nullptr)
		*SurfaceName = std::move(Parms.SurfaceName);
}


// Function AN_Tgf_Footstep.AN_Tgf_Footstep_C.Received_Notify
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class USkeletalMeshComponent*           MeshComp                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UAnimSequenceBase*                Animation                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FAnimNotifyEventReference        EventReference                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UAN_Tgf_Footstep_C::Received_Notify(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation, const struct FAnimNotifyEventReference& EventReference) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AN_Tgf_Footstep_C", "Received_Notify");

	Params::AN_Tgf_Footstep_C_Received_Notify Parms{};

	Parms.MeshComp = MeshComp;
	Parms.Animation = Animation;
	Parms.EventReference = std::move(EventReference);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

