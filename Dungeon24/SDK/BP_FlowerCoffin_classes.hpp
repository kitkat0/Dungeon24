#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FlowerCoffin

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "BP_AltarBase_classes.hpp"
#include "AkAudio_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_FlowerCoffin.BP_FlowerCoffin_C
// 0x0190 (0x0598 - 0x0408)
class ABP_FlowerCoffin_C final : public ABP_AltarBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_FlowerCoffin_C;                  // 0x0408(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UPointLightComponent*                   FX_PointLight2;                                    // 0x0410(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   FX_PointLight1;                                    // 0x0418(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_FlowerVine_02b;                                 // 0x0420(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_FlowerVine_02a;                                 // 0x0428(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_FlowerVine_01c_01;                              // 0x0430(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_FlowerVine_01b_01;                              // 0x0438(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          BoxCollision;                                      // 0x0440(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        SpawnedItemNode;                                   // 0x0448(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        SpawnedItemTranslateNode;                          // 0x0450(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   FX_PointLight;                                     // 0x0458(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_HolyCoffin_03;                                  // 0x0460(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        RotateNode;                                        // 0x0468(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        TranslateNode;                                     // 0x0470(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_HolyCoffin_02;                                  // 0x0478(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       SphereRange;                                       // 0x0480(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      VFX0;                                              // 0x0488(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      VFX1;                                              // 0x0490(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UTgfNpcStateManagerComponent*           TgfNpcStateManager;                                // 0x0498(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Effect1_Vine_E184439043B8AEBCE934FDA9E21CB1C3;     // 0x04A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Effect1_Flower_E184439043B8AEBCE934FDA9E21CB1C3;   // 0x04A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Effect1_FX_E184439043B8AEBCE934FDA9E21CB1C3;       // 0x04A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Effect1__Direction_E184439043B8AEBCE934FDA9E21CB1C3; // 0x04AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4AD[0x3];                                      // 0x04AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Effect1;                                           // 0x04B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         Effect0_Vine_6DE956954909F61507D698847A90F757;     // 0x04B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Effect0_Flower_6DE956954909F61507D698847A90F757;   // 0x04BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Effect0_FX_6DE956954909F61507D698847A90F757;       // 0x04C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Effect0__Direction_6DE956954909F61507D698847A90F757; // 0x04C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C5[0x3];                                      // 0x04C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Effect0;                                           // 0x04C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        DetectionRange;                                    // 0x04D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<TSubclassOf<class ULyraInventoryItemDefinition>> RequiredItems;                                     // 0x04D8(0x0010)(Edit, BlueprintVisible)
	TArray<int32>                                 ItemNumbers;                                       // 0x04E8(0x0010)(Edit, BlueprintVisible, Transient, DisableEditOnInstance)
	bool                                          EffectActive0;                                     // 0x04F8(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	bool                                          EffectActive1;                                     // 0x04F9(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	bool                                          Opened;                                            // 0x04FA(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FB[0x5];                                      // 0x04FB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                LidTranslation;                                    // 0x0500(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LidRotation;                                       // 0x0518(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LidMoveDuration;                                   // 0x0530(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SpawnedItemTranslation;                            // 0x0538(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SpawnedItemRotation;                               // 0x0550(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        SpawnedItemMoveDuration;                           // 0x0568(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  Interacting_Pawn;                                  // 0x0570(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SpawnedItemLocation;                               // 0x0578(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Enter;                                             // 0x0590(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void CanPlayerInteract(class ALyraCharacter* Param_Player, bool* bCanInteract);
	void CheckItemRequiements(class ALyraCharacter* Param_Player, bool* MeetAllRequiements);
	void ConsumeItems(class APawn* Param_Player);
	void Effect0__FinishedFunc();
	void Effect0__UpdateFunc();
	void Effect1__FinishedFunc();
	void Effect1__UpdateFunc();
	void ExecuteUbergraph_BP_FlowerCoffin(int32 EntryPoint);
	void OnCoffinOpened();
	void OnPlayerApproaching(class ALyraCharacter* Param_Player);
	void OnPlayerLeaving(class ALyraCharacter* Param_Player);
	void OnReady_0445F0C245E2E074285705B6AA1ED4D1();
	void OnRep_EffectActive0();
	void OnRep_EffectActive1();
	void OnRep_Opened();
	void PerformInteraction_on_Server(class APawn* InteractingPawn);
	void ReadyToPerformNextInteraction();
	void ReceiveBeginPlay();
	void Refresh();
	void ResetItemNumbers();
	void SpawnCollectable(const struct FTransform& SpawnTransform, class AActor* Param_Owner, int32 ItemId, class ABP_CollectableBase_C** SpawnedItem);
	void UpdateFlowerStates();
	void UpdateItemNumberByCollectable(class ABP_CollectableBase_C* Collectable);
	void UpdateItemNumbersByPlayer(class ALyraCharacter* Param_Player, bool Increase);
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_FlowerCoffin_C">();
	}
	static class ABP_FlowerCoffin_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_FlowerCoffin_C>();
	}
};
static_assert(alignof(ABP_FlowerCoffin_C) == 0x000008, "Wrong alignment on ABP_FlowerCoffin_C");
static_assert(sizeof(ABP_FlowerCoffin_C) == 0x000598, "Wrong size on ABP_FlowerCoffin_C");
static_assert(offsetof(ABP_FlowerCoffin_C, UberGraphFrame_BP_FlowerCoffin_C) == 0x000408, "Member 'ABP_FlowerCoffin_C::UberGraphFrame_BP_FlowerCoffin_C' has a wrong offset!");
static_assert(offsetof(ABP_FlowerCoffin_C, FX_PointLight2) == 0x000410, "Member 'ABP_FlowerCoffin_C::FX_PointLight2' has a wrong offset!");
static_assert(offsetof(ABP_FlowerCoffin_C, FX_PointLight1) == 0x000418, "Member 'ABP_FlowerCoffin_C::FX_PointLight1' has a wrong offset!");
static_assert(offsetof(ABP_FlowerCoffin_C, SM_FlowerVine_02b) == 0x000420, "Member 'ABP_FlowerCoffin_C::SM_FlowerVine_02b' has a wrong offset!");
static_assert(offsetof(ABP_FlowerCoffin_C, SM_FlowerVine_02a) == 0x000428, "Member 'ABP_FlowerCoffin_C::SM_FlowerVine_02a' has a wrong offset!");
static_assert(offsetof(ABP_FlowerCoffin_C, SM_FlowerVine_01c_01) == 0x000430, "Member 'ABP_FlowerCoffin_C::SM_FlowerVine_01c_01' has a wrong offset!");
static_assert(offsetof(ABP_FlowerCoffin_C, SM_FlowerVine_01b_01) == 0x000438, "Member 'ABP_FlowerCoffin_C::SM_FlowerVine_01b_01' has a wrong offset!");
static_assert(offsetof(ABP_FlowerCoffin_C, BoxCollision) == 0x000440, "Member 'ABP_FlowerCoffin_C::BoxCollision' has a wrong offset!");
static_assert(offsetof(ABP_FlowerCoffin_C, SpawnedItemNode) == 0x000448, "Member 'ABP_FlowerCoffin_C::SpawnedItemNode' has a wrong offset!");
static_assert(offsetof(ABP_FlowerCoffin_C, SpawnedItemTranslateNode) == 0x000450, "Member 'ABP_FlowerCoffin_C::SpawnedItemTranslateNode' has a wrong offset!");
static_assert(offsetof(ABP_FlowerCoffin_C, FX_PointLight) == 0x000458, "Member 'ABP_FlowerCoffin_C::FX_PointLight' has a wrong offset!");
static_assert(offsetof(ABP_FlowerCoffin_C, SM_HolyCoffin_03) == 0x000460, "Member 'ABP_FlowerCoffin_C::SM_HolyCoffin_03' has a wrong offset!");
static_assert(offsetof(ABP_FlowerCoffin_C, RotateNode) == 0x000468, "Member 'ABP_FlowerCoffin_C::RotateNode' has a wrong offset!");
static_assert(offsetof(ABP_FlowerCoffin_C, TranslateNode) == 0x000470, "Member 'ABP_FlowerCoffin_C::TranslateNode' has a wrong offset!");
static_assert(offsetof(ABP_FlowerCoffin_C, SM_HolyCoffin_02) == 0x000478, "Member 'ABP_FlowerCoffin_C::SM_HolyCoffin_02' has a wrong offset!");
static_assert(offsetof(ABP_FlowerCoffin_C, SphereRange) == 0x000480, "Member 'ABP_FlowerCoffin_C::SphereRange' has a wrong offset!");
static_assert(offsetof(ABP_FlowerCoffin_C, VFX0) == 0x000488, "Member 'ABP_FlowerCoffin_C::VFX0' has a wrong offset!");
static_assert(offsetof(ABP_FlowerCoffin_C, VFX1) == 0x000490, "Member 'ABP_FlowerCoffin_C::VFX1' has a wrong offset!");
static_assert(offsetof(ABP_FlowerCoffin_C, TgfNpcStateManager) == 0x000498, "Member 'ABP_FlowerCoffin_C::TgfNpcStateManager' has a wrong offset!");
static_assert(offsetof(ABP_FlowerCoffin_C, Effect1_Vine_E184439043B8AEBCE934FDA9E21CB1C3) == 0x0004A0, "Member 'ABP_FlowerCoffin_C::Effect1_Vine_E184439043B8AEBCE934FDA9E21CB1C3' has a wrong offset!");
static_assert(offsetof(ABP_FlowerCoffin_C, Effect1_Flower_E184439043B8AEBCE934FDA9E21CB1C3) == 0x0004A4, "Member 'ABP_FlowerCoffin_C::Effect1_Flower_E184439043B8AEBCE934FDA9E21CB1C3' has a wrong offset!");
static_assert(offsetof(ABP_FlowerCoffin_C, Effect1_FX_E184439043B8AEBCE934FDA9E21CB1C3) == 0x0004A8, "Member 'ABP_FlowerCoffin_C::Effect1_FX_E184439043B8AEBCE934FDA9E21CB1C3' has a wrong offset!");
static_assert(offsetof(ABP_FlowerCoffin_C, Effect1__Direction_E184439043B8AEBCE934FDA9E21CB1C3) == 0x0004AC, "Member 'ABP_FlowerCoffin_C::Effect1__Direction_E184439043B8AEBCE934FDA9E21CB1C3' has a wrong offset!");
static_assert(offsetof(ABP_FlowerCoffin_C, Effect1) == 0x0004B0, "Member 'ABP_FlowerCoffin_C::Effect1' has a wrong offset!");
static_assert(offsetof(ABP_FlowerCoffin_C, Effect0_Vine_6DE956954909F61507D698847A90F757) == 0x0004B8, "Member 'ABP_FlowerCoffin_C::Effect0_Vine_6DE956954909F61507D698847A90F757' has a wrong offset!");
static_assert(offsetof(ABP_FlowerCoffin_C, Effect0_Flower_6DE956954909F61507D698847A90F757) == 0x0004BC, "Member 'ABP_FlowerCoffin_C::Effect0_Flower_6DE956954909F61507D698847A90F757' has a wrong offset!");
static_assert(offsetof(ABP_FlowerCoffin_C, Effect0_FX_6DE956954909F61507D698847A90F757) == 0x0004C0, "Member 'ABP_FlowerCoffin_C::Effect0_FX_6DE956954909F61507D698847A90F757' has a wrong offset!");
static_assert(offsetof(ABP_FlowerCoffin_C, Effect0__Direction_6DE956954909F61507D698847A90F757) == 0x0004C4, "Member 'ABP_FlowerCoffin_C::Effect0__Direction_6DE956954909F61507D698847A90F757' has a wrong offset!");
static_assert(offsetof(ABP_FlowerCoffin_C, Effect0) == 0x0004C8, "Member 'ABP_FlowerCoffin_C::Effect0' has a wrong offset!");
static_assert(offsetof(ABP_FlowerCoffin_C, DetectionRange) == 0x0004D0, "Member 'ABP_FlowerCoffin_C::DetectionRange' has a wrong offset!");
static_assert(offsetof(ABP_FlowerCoffin_C, RequiredItems) == 0x0004D8, "Member 'ABP_FlowerCoffin_C::RequiredItems' has a wrong offset!");
static_assert(offsetof(ABP_FlowerCoffin_C, ItemNumbers) == 0x0004E8, "Member 'ABP_FlowerCoffin_C::ItemNumbers' has a wrong offset!");
static_assert(offsetof(ABP_FlowerCoffin_C, EffectActive0) == 0x0004F8, "Member 'ABP_FlowerCoffin_C::EffectActive0' has a wrong offset!");
static_assert(offsetof(ABP_FlowerCoffin_C, EffectActive1) == 0x0004F9, "Member 'ABP_FlowerCoffin_C::EffectActive1' has a wrong offset!");
static_assert(offsetof(ABP_FlowerCoffin_C, Opened) == 0x0004FA, "Member 'ABP_FlowerCoffin_C::Opened' has a wrong offset!");
static_assert(offsetof(ABP_FlowerCoffin_C, LidTranslation) == 0x000500, "Member 'ABP_FlowerCoffin_C::LidTranslation' has a wrong offset!");
static_assert(offsetof(ABP_FlowerCoffin_C, LidRotation) == 0x000518, "Member 'ABP_FlowerCoffin_C::LidRotation' has a wrong offset!");
static_assert(offsetof(ABP_FlowerCoffin_C, LidMoveDuration) == 0x000530, "Member 'ABP_FlowerCoffin_C::LidMoveDuration' has a wrong offset!");
static_assert(offsetof(ABP_FlowerCoffin_C, SpawnedItemTranslation) == 0x000538, "Member 'ABP_FlowerCoffin_C::SpawnedItemTranslation' has a wrong offset!");
static_assert(offsetof(ABP_FlowerCoffin_C, SpawnedItemRotation) == 0x000550, "Member 'ABP_FlowerCoffin_C::SpawnedItemRotation' has a wrong offset!");
static_assert(offsetof(ABP_FlowerCoffin_C, SpawnedItemMoveDuration) == 0x000568, "Member 'ABP_FlowerCoffin_C::SpawnedItemMoveDuration' has a wrong offset!");
static_assert(offsetof(ABP_FlowerCoffin_C, Interacting_Pawn) == 0x000570, "Member 'ABP_FlowerCoffin_C::Interacting_Pawn' has a wrong offset!");
static_assert(offsetof(ABP_FlowerCoffin_C, SpawnedItemLocation) == 0x000578, "Member 'ABP_FlowerCoffin_C::SpawnedItemLocation' has a wrong offset!");
static_assert(offsetof(ABP_FlowerCoffin_C, Enter) == 0x000590, "Member 'ABP_FlowerCoffin_C::Enter' has a wrong offset!");

}

