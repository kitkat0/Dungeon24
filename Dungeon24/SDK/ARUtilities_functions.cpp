#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ARUtilities

#include "Basic.hpp"

#include "ARUtilities_classes.hpp"
#include "ARUtilities_parameters.hpp"


namespace SDK
{

// Function ARUtilities.ARPassthroughManager.GetPassthroughMaterialUpdateComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UPassthroughMaterialUpdateComponent*ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPassthroughMaterialUpdateComponent* AARPassthroughManager::GetPassthroughMaterialUpdateComponent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ARPassthroughManager", "GetPassthroughMaterialUpdateComponent");

	Params::ARPassthroughManager_GetPassthroughMaterialUpdateComponent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ARUtilities.ARUtilitiesFunctionLibrary.UpdateCameraTextureParam
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UMaterialInstanceDynamic*         MaterialInstance                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTexture*                         CameraTexture                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ColorScale                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UARUtilitiesFunctionLibrary::UpdateCameraTextureParam(class UMaterialInstanceDynamic* MaterialInstance, class UTexture* CameraTexture, float ColorScale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ARUtilitiesFunctionLibrary", "UpdateCameraTextureParam");

	Params::ARUtilitiesFunctionLibrary_UpdateCameraTextureParam Parms{};

	Parms.MaterialInstance = MaterialInstance;
	Parms.CameraTexture = CameraTexture;
	Parms.ColorScale = ColorScale;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ARUtilities.ARUtilitiesFunctionLibrary.UpdateSceneDepthTexture
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UMaterialInstanceDynamic*         MaterialInstance                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTexture*                         SceneDepthTexture                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DepthToMeterScale                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UARUtilitiesFunctionLibrary::UpdateSceneDepthTexture(class UMaterialInstanceDynamic* MaterialInstance, class UTexture* SceneDepthTexture, float DepthToMeterScale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ARUtilitiesFunctionLibrary", "UpdateSceneDepthTexture");

	Params::ARUtilitiesFunctionLibrary_UpdateSceneDepthTexture Parms{};

	Parms.MaterialInstance = MaterialInstance;
	Parms.SceneDepthTexture = SceneDepthTexture;
	Parms.DepthToMeterScale = DepthToMeterScale;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ARUtilities.ARUtilitiesFunctionLibrary.UpdateWorldToMeterScale
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UMaterialInstanceDynamic*         MaterialInstance                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   WorldToMeterScale                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UARUtilitiesFunctionLibrary::UpdateWorldToMeterScale(class UMaterialInstanceDynamic* MaterialInstance, float WorldToMeterScale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ARUtilitiesFunctionLibrary", "UpdateWorldToMeterScale");

	Params::ARUtilitiesFunctionLibrary_UpdateWorldToMeterScale Parms{};

	Parms.MaterialInstance = MaterialInstance;
	Parms.WorldToMeterScale = WorldToMeterScale;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ARUtilities.PassthroughMaterialUpdateComponent.AddAffectedComponent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UPrimitiveComponent*              InComponent                                            (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPassthroughMaterialUpdateComponent::AddAffectedComponent(class UPrimitiveComponent* InComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PassthroughMaterialUpdateComponent", "AddAffectedComponent");

	Params::PassthroughMaterialUpdateComponent_AddAffectedComponent Parms{};

	Parms.InComponent = InComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ARUtilities.PassthroughMaterialUpdateComponent.RemoveAffectedComponent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UPrimitiveComponent*              InComponent                                            (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPassthroughMaterialUpdateComponent::RemoveAffectedComponent(class UPrimitiveComponent* InComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PassthroughMaterialUpdateComponent", "RemoveAffectedComponent");

	Params::PassthroughMaterialUpdateComponent_RemoveAffectedComponent Parms{};

	Parms.InComponent = InComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ARUtilities.PassthroughMaterialUpdateComponent.SetPassthroughDebugColor
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FLinearColor                     NewDebugColor                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPassthroughMaterialUpdateComponent::SetPassthroughDebugColor(const struct FLinearColor& NewDebugColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PassthroughMaterialUpdateComponent", "SetPassthroughDebugColor");

	Params::PassthroughMaterialUpdateComponent_SetPassthroughDebugColor Parms{};

	Parms.NewDebugColor = std::move(NewDebugColor);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}

}

