#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Tgf_Monster

#include "Basic.hpp"

#include "TGF_FRetreatEntry_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "LyraGame_structs.hpp"
#include "AkAudio_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "TGF_FDormantEntry_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "AGRPRO_structs.hpp"


namespace SDK::Params
{

// Function BP_Tgf_Monster.BP_Tgf_Monster_C.AddThreatWithForceTargetable
// 0x0030 (0x0030 - 0x0000)
struct BP_Tgf_Monster_C_AddThreatWithForceTargetable final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Threat;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_AddThreat_ReturnValue;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AAIC_Monster_Default_C*                 K2Node_DynamicCast_AsAIC_Monster_Default;          // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_AddThreat_Threat_ImplicitCast;            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Tgf_Monster_C_AddThreatWithForceTargetable) == 0x000008, "Wrong alignment on BP_Tgf_Monster_C_AddThreatWithForceTargetable");
static_assert(sizeof(BP_Tgf_Monster_C_AddThreatWithForceTargetable) == 0x000030, "Wrong size on BP_Tgf_Monster_C_AddThreatWithForceTargetable");
static_assert(offsetof(BP_Tgf_Monster_C_AddThreatWithForceTargetable, Actor) == 0x000000, "Member 'BP_Tgf_Monster_C_AddThreatWithForceTargetable::Actor' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_AddThreatWithForceTargetable, Threat) == 0x000008, "Member 'BP_Tgf_Monster_C_AddThreatWithForceTargetable::Threat' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_AddThreatWithForceTargetable, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_Tgf_Monster_C_AddThreatWithForceTargetable::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_AddThreatWithForceTargetable, CallFunc_AddThreat_ReturnValue) == 0x000014, "Member 'BP_Tgf_Monster_C_AddThreatWithForceTargetable::CallFunc_AddThreat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_AddThreatWithForceTargetable, CallFunc_GetController_ReturnValue) == 0x000018, "Member 'BP_Tgf_Monster_C_AddThreatWithForceTargetable::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_AddThreatWithForceTargetable, K2Node_DynamicCast_AsAIC_Monster_Default) == 0x000020, "Member 'BP_Tgf_Monster_C_AddThreatWithForceTargetable::K2Node_DynamicCast_AsAIC_Monster_Default' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_AddThreatWithForceTargetable, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_Tgf_Monster_C_AddThreatWithForceTargetable::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_AddThreatWithForceTargetable, CallFunc_AddThreat_Threat_ImplicitCast) == 0x00002C, "Member 'BP_Tgf_Monster_C_AddThreatWithForceTargetable::CallFunc_AddThreat_Threat_ImplicitCast' has a wrong offset!");

// Function BP_Tgf_Monster.BP_Tgf_Monster_C.AddTraceMesh
// 0x00D0 (0x00D0 - 0x0000)
struct BP_Tgf_Monster_C_AddTraceMesh final
{
public:
	class FName                                   StartSocketTraceName;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   EndSocketTraceName;                                // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAGR_CombatColliderType                       CollisionHandling;                                 // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         TraceMeshInsId;                                    // 0x0014(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ResultTraceMeshInsId;                              // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0028(0x0050)(HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0080(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0090(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FHitResult& Hit, class UPrimitiveComponent* Mesh)> K2Node_CreateDelegate_OutputDelegate;              // 0x00BC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddTraceMesh_ReturnValue;                 // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Tgf_Monster_C_AddTraceMesh) == 0x000008, "Wrong alignment on BP_Tgf_Monster_C_AddTraceMesh");
static_assert(sizeof(BP_Tgf_Monster_C_AddTraceMesh) == 0x0000D0, "Wrong size on BP_Tgf_Monster_C_AddTraceMesh");
static_assert(offsetof(BP_Tgf_Monster_C_AddTraceMesh, StartSocketTraceName) == 0x000000, "Member 'BP_Tgf_Monster_C_AddTraceMesh::StartSocketTraceName' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_AddTraceMesh, EndSocketTraceName) == 0x000008, "Member 'BP_Tgf_Monster_C_AddTraceMesh::EndSocketTraceName' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_AddTraceMesh, CollisionHandling) == 0x000010, "Member 'BP_Tgf_Monster_C_AddTraceMesh::CollisionHandling' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_AddTraceMesh, TraceMeshInsId) == 0x000014, "Member 'BP_Tgf_Monster_C_AddTraceMesh::TraceMeshInsId' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_AddTraceMesh, ResultTraceMeshInsId) == 0x000018, "Member 'BP_Tgf_Monster_C_AddTraceMesh::ResultTraceMeshInsId' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_AddTraceMesh, Temp_int_Variable) == 0x00001C, "Member 'BP_Tgf_Monster_C_AddTraceMesh::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_AddTraceMesh, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000020, "Member 'BP_Tgf_Monster_C_AddTraceMesh::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_AddTraceMesh, K2Node_MakeStruct_FormatArgumentData) == 0x000028, "Member 'BP_Tgf_Monster_C_AddTraceMesh::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_AddTraceMesh, CallFunc_Greater_IntInt_ReturnValue) == 0x000078, "Member 'BP_Tgf_Monster_C_AddTraceMesh::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_AddTraceMesh, K2Node_MakeArray_Array) == 0x000080, "Member 'BP_Tgf_Monster_C_AddTraceMesh::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_AddTraceMesh, CallFunc_Format_ReturnValue) == 0x000090, "Member 'BP_Tgf_Monster_C_AddTraceMesh::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_AddTraceMesh, CallFunc_Conv_TextToString_ReturnValue) == 0x0000A8, "Member 'BP_Tgf_Monster_C_AddTraceMesh::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_AddTraceMesh, CallFunc_Add_IntInt_ReturnValue) == 0x0000B8, "Member 'BP_Tgf_Monster_C_AddTraceMesh::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_AddTraceMesh, K2Node_CreateDelegate_OutputDelegate) == 0x0000BC, "Member 'BP_Tgf_Monster_C_AddTraceMesh::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_AddTraceMesh, CallFunc_AddTraceMesh_ReturnValue) == 0x0000CC, "Member 'BP_Tgf_Monster_C_AddTraceMesh::CallFunc_AddTraceMesh_ReturnValue' has a wrong offset!");

// Function BP_Tgf_Monster.BP_Tgf_Monster_C.ApplyDormantGravity
// 0x0018 (0x0018 - 0x0000)
struct BP_Tgf_Monster_C_ApplyDormantGravity final
{
public:
	bool                                          Apply;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDormantable_Result;                     // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDormantWithGravity_ReturnValue;         // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetGravityScale_Gravity_ImplicitCast;     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Tgf_Monster_C_ApplyDormantGravity) == 0x000008, "Wrong alignment on BP_Tgf_Monster_C_ApplyDormantGravity");
static_assert(sizeof(BP_Tgf_Monster_C_ApplyDormantGravity) == 0x000018, "Wrong size on BP_Tgf_Monster_C_ApplyDormantGravity");
static_assert(offsetof(BP_Tgf_Monster_C_ApplyDormantGravity, Apply) == 0x000000, "Member 'BP_Tgf_Monster_C_ApplyDormantGravity::Apply' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ApplyDormantGravity, CallFunc_IsDormantable_Result) == 0x000001, "Member 'BP_Tgf_Monster_C_ApplyDormantGravity::CallFunc_IsDormantable_Result' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ApplyDormantGravity, CallFunc_SelectFloat_ReturnValue) == 0x000008, "Member 'BP_Tgf_Monster_C_ApplyDormantGravity::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ApplyDormantGravity, CallFunc_IsDormantWithGravity_ReturnValue) == 0x000010, "Member 'BP_Tgf_Monster_C_ApplyDormantGravity::CallFunc_IsDormantWithGravity_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ApplyDormantGravity, CallFunc_SetGravityScale_Gravity_ImplicitCast) == 0x000014, "Member 'BP_Tgf_Monster_C_ApplyDormantGravity::CallFunc_SetGravityScale_Gravity_ImplicitCast' has a wrong offset!");

// Function BP_Tgf_Monster.BP_Tgf_Monster_C.ApplySpeedMod
// 0x0058 (0x0058 - 0x0000)
struct BP_Tgf_Monster_C_ApplySpeedMod final
{
public:
	struct FGameplayTag                           Tag;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	bool                                          Apply;                                             // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAnySpeedMod_Result;                    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveGameplayTag_ReturnValue;            // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	const class UAttributeSet*                    CallFunc_GetAttributeSet_ReturnValue;              // 0x0020(0x0008)(ConstParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UTgfSpeedAttributeSet*                  K2Node_DynamicCast_AsTgf_Speed_Attribute_Set;      // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasTag_ReturnValue;                       // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Map_Find_Value;                           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue;        // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_ApplySpeedBaseMod_Mod_ImplicitCast;       // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Tgf_Monster_C_ApplySpeedMod) == 0x000008, "Wrong alignment on BP_Tgf_Monster_C_ApplySpeedMod");
static_assert(sizeof(BP_Tgf_Monster_C_ApplySpeedMod) == 0x000058, "Wrong size on BP_Tgf_Monster_C_ApplySpeedMod");
static_assert(offsetof(BP_Tgf_Monster_C_ApplySpeedMod, Tag) == 0x000000, "Member 'BP_Tgf_Monster_C_ApplySpeedMod::Tag' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ApplySpeedMod, Apply) == 0x000008, "Member 'BP_Tgf_Monster_C_ApplySpeedMod::Apply' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ApplySpeedMod, CallFunc_HasAnySpeedMod_Result) == 0x000009, "Member 'BP_Tgf_Monster_C_ApplySpeedMod::CallFunc_HasAnySpeedMod_Result' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ApplySpeedMod, CallFunc_SelectFloat_ReturnValue) == 0x000010, "Member 'BP_Tgf_Monster_C_ApplySpeedMod::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ApplySpeedMod, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_Tgf_Monster_C_ApplySpeedMod::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ApplySpeedMod, CallFunc_RemoveGameplayTag_ReturnValue) == 0x000019, "Member 'BP_Tgf_Monster_C_ApplySpeedMod::CallFunc_RemoveGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ApplySpeedMod, CallFunc_GetAttributeSet_ReturnValue) == 0x000020, "Member 'BP_Tgf_Monster_C_ApplySpeedMod::CallFunc_GetAttributeSet_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ApplySpeedMod, K2Node_DynamicCast_AsTgf_Speed_Attribute_Set) == 0x000028, "Member 'BP_Tgf_Monster_C_ApplySpeedMod::K2Node_DynamicCast_AsTgf_Speed_Attribute_Set' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ApplySpeedMod, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_Tgf_Monster_C_ApplySpeedMod::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ApplySpeedMod, CallFunc_HasTag_ReturnValue) == 0x000031, "Member 'BP_Tgf_Monster_C_ApplySpeedMod::CallFunc_HasTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ApplySpeedMod, CallFunc_Map_Find_Value) == 0x000038, "Member 'BP_Tgf_Monster_C_ApplySpeedMod::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ApplySpeedMod, CallFunc_Map_Find_ReturnValue) == 0x000040, "Member 'BP_Tgf_Monster_C_ApplySpeedMod::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ApplySpeedMod, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000048, "Member 'BP_Tgf_Monster_C_ApplySpeedMod::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ApplySpeedMod, CallFunc_NotEqual_DoubleDouble_ReturnValue) == 0x000050, "Member 'BP_Tgf_Monster_C_ApplySpeedMod::CallFunc_NotEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ApplySpeedMod, CallFunc_ApplySpeedBaseMod_Mod_ImplicitCast) == 0x000054, "Member 'BP_Tgf_Monster_C_ApplySpeedMod::CallFunc_ApplySpeedBaseMod_Mod_ImplicitCast' has a wrong offset!");

// Function BP_Tgf_Monster.BP_Tgf_Monster_C.ApplyTurnSpeedMod
// 0x0050 (0x0050 - 0x0000)
struct BP_Tgf_Monster_C_ApplyTurnSpeedMod final
{
public:
	struct FGameplayTag                           Tag;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	bool                                          Apply;                                             // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAnyTurnSpeedMod_Result;                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Map_Find_Value;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue;        // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveGameplayTag_ReturnValue;            // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasTag_ReturnValue;                       // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UAttributeSet*                    CallFunc_GetAttributeSet_ReturnValue;              // 0x0038(0x0008)(ConstParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UTgfAIAttributeSet*                     K2Node_DynamicCast_AsTgf_AIAttribute_Set;          // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_ApplyAngleSpeedBaseMod_Mod_ImplicitCast;  // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Tgf_Monster_C_ApplyTurnSpeedMod) == 0x000008, "Wrong alignment on BP_Tgf_Monster_C_ApplyTurnSpeedMod");
static_assert(sizeof(BP_Tgf_Monster_C_ApplyTurnSpeedMod) == 0x000050, "Wrong size on BP_Tgf_Monster_C_ApplyTurnSpeedMod");
static_assert(offsetof(BP_Tgf_Monster_C_ApplyTurnSpeedMod, Tag) == 0x000000, "Member 'BP_Tgf_Monster_C_ApplyTurnSpeedMod::Tag' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ApplyTurnSpeedMod, Apply) == 0x000008, "Member 'BP_Tgf_Monster_C_ApplyTurnSpeedMod::Apply' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ApplyTurnSpeedMod, CallFunc_HasAnyTurnSpeedMod_Result) == 0x000009, "Member 'BP_Tgf_Monster_C_ApplyTurnSpeedMod::CallFunc_HasAnyTurnSpeedMod_Result' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ApplyTurnSpeedMod, CallFunc_SelectFloat_ReturnValue) == 0x000010, "Member 'BP_Tgf_Monster_C_ApplyTurnSpeedMod::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ApplyTurnSpeedMod, CallFunc_Map_Find_Value) == 0x000018, "Member 'BP_Tgf_Monster_C_ApplyTurnSpeedMod::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ApplyTurnSpeedMod, CallFunc_Map_Find_ReturnValue) == 0x000020, "Member 'BP_Tgf_Monster_C_ApplyTurnSpeedMod::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ApplyTurnSpeedMod, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000028, "Member 'BP_Tgf_Monster_C_ApplyTurnSpeedMod::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ApplyTurnSpeedMod, CallFunc_NotEqual_DoubleDouble_ReturnValue) == 0x000030, "Member 'BP_Tgf_Monster_C_ApplyTurnSpeedMod::CallFunc_NotEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ApplyTurnSpeedMod, CallFunc_RemoveGameplayTag_ReturnValue) == 0x000031, "Member 'BP_Tgf_Monster_C_ApplyTurnSpeedMod::CallFunc_RemoveGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ApplyTurnSpeedMod, CallFunc_HasTag_ReturnValue) == 0x000032, "Member 'BP_Tgf_Monster_C_ApplyTurnSpeedMod::CallFunc_HasTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ApplyTurnSpeedMod, CallFunc_IsValid_ReturnValue) == 0x000033, "Member 'BP_Tgf_Monster_C_ApplyTurnSpeedMod::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ApplyTurnSpeedMod, CallFunc_GetAttributeSet_ReturnValue) == 0x000038, "Member 'BP_Tgf_Monster_C_ApplyTurnSpeedMod::CallFunc_GetAttributeSet_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ApplyTurnSpeedMod, K2Node_DynamicCast_AsTgf_AIAttribute_Set) == 0x000040, "Member 'BP_Tgf_Monster_C_ApplyTurnSpeedMod::K2Node_DynamicCast_AsTgf_AIAttribute_Set' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ApplyTurnSpeedMod, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'BP_Tgf_Monster_C_ApplyTurnSpeedMod::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ApplyTurnSpeedMod, CallFunc_ApplyAngleSpeedBaseMod_Mod_ImplicitCast) == 0x00004C, "Member 'BP_Tgf_Monster_C_ApplyTurnSpeedMod::CallFunc_ApplyAngleSpeedBaseMod_Mod_ImplicitCast' has a wrong offset!");

// Function BP_Tgf_Monster.BP_Tgf_Monster_C.AttackHitEventHandle
// 0x0940 (0x0940 - 0x0000)
struct BP_Tgf_Monster_C_AttackHitEventHandle final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x00E8)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UPrimitiveComponent*                    Param_Mesh;                                        // 0x00E8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue;            // 0x00F8(0x0018)()
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue_1;          // 0x0110(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0128(0x0050)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0178(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x01C8(0x0010)(ReferenceParm)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x01D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DA[0x2];                                      // 0x01DA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E4[0x4];                                      // 0x01E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x01E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0200(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0218(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0230(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0248(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0250(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0258(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0274(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_27C[0x4];                                      // 0x027C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0280(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0298(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x02B0(0x0018)()
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue_2;          // 0x02C8(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x02E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x02F0(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0340(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0350(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x0368(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0378(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_379[0x7];                                      // 0x0379(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEffectContextHandle           CallFunc_MakeEffectContextSimple_ReturnValue;      // 0x0380(0x0018)()
	class UTgfInteractorBattleComponent*          CallFunc_GetComponentByClass_ReturnValue;          // 0x0398(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x03A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A1[0x7];                                      // 0x03A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue_3;          // 0x03A8(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x03C0(0x0050)(HasGetValueTypeHash)
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x0410(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0418(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_419[0x7];                                      // 0x0419(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayAbilityTargetDataHandle       CallFunc_AbilityTargetDataFromActor_ReturnValue;   // 0x0420(0x0028)()
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue_4;          // 0x0448(0x0018)()
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue_5;          // 0x0460(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_4;            // 0x0478(0x0050)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_5;            // 0x04C8(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x0518(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x0528(0x0018)()
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue_6;          // 0x0540(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_2;          // 0x0558(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_6;            // 0x0568(0x0050)(HasGetValueTypeHash)
	class ALyraCharacter*                         K2Node_DynamicCast_AsLyra_Character;               // 0x05B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x05C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C1[0x3];                                      // 0x05C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x05C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDeadOrDying_ReturnValue;                // 0x05C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_1;            // 0x05C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_1;         // 0x05CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5CB[0x1];                                      // 0x05CB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_1;                    // 0x05CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_1;                // 0x05D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D4[0x4];                                      // 0x05D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location_1;                // 0x05D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_1;             // 0x05F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_1;                  // 0x0608(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_1;            // 0x0620(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_1;                 // 0x0638(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_1;                // 0x0640(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_1;            // 0x0648(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_1;             // 0x0650(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName_1;                // 0x0658(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_1;                 // 0x0660(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_1;            // 0x0664(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_1;               // 0x0668(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_66C[0x4];                                      // 0x066C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart_1;              // 0x0670(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_1;                // 0x0688(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x06A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A1[0x7];                                      // 0x06A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue_7;          // 0x06A8(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_7;            // 0x06C0(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_3;                          // 0x0710(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_3;                     // 0x0720(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_3;          // 0x0738(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FGameplayEventData                     K2Node_MakeStruct_GameplayEventData;               // 0x0748(0x00B0)()
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue_8;          // 0x07F8(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_8;            // 0x0810(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_4;                          // 0x0860(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue_9;          // 0x0870(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue_4;                     // 0x0888(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_9;            // 0x08A0(0x0050)(HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_4;          // 0x08F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_5;                          // 0x0900(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_5;                     // 0x0910(0x0018)()
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0928(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_929[0x7];                                      // 0x0929(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_5;          // 0x0930(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Tgf_Monster_C_AttackHitEventHandle) == 0x000008, "Wrong alignment on BP_Tgf_Monster_C_AttackHitEventHandle");
static_assert(sizeof(BP_Tgf_Monster_C_AttackHitEventHandle) == 0x000940, "Wrong size on BP_Tgf_Monster_C_AttackHitEventHandle");
static_assert(offsetof(BP_Tgf_Monster_C_AttackHitEventHandle, Hit) == 0x000000, "Member 'BP_Tgf_Monster_C_AttackHitEventHandle::Hit' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_AttackHitEventHandle, Param_Mesh) == 0x0000E8, "Member 'BP_Tgf_Monster_C_AttackHitEventHandle::Param_Mesh' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_AttackHitEventHandle, CallFunc_GetOwner_ReturnValue) == 0x0000F0, "Member 'BP_Tgf_Monster_C_AttackHitEventHandle::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_AttackHitEventHandle, CallFunc_Conv_ObjectToText_ReturnValue) == 0x0000F8, "Member 'BP_Tgf_Monster_C_AttackHitEventHandle::CallFunc_Conv_ObjectToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_AttackHitEventHandle, CallFunc_Conv_ObjectToText_ReturnValue_1) == 0x000110, "Member 'BP_Tgf_Monster_C_AttackHitEventHandle::CallFunc_Conv_ObjectToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_AttackHitEventHandle, K2Node_MakeStruct_FormatArgumentData) == 0x000128, "Member 'BP_Tgf_Monster_C_AttackHitEventHandle::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_AttackHitEventHandle, K2Node_MakeStruct_FormatArgumentData_1) == 0x000178, "Member 'BP_Tgf_Monster_C_AttackHitEventHandle::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_AttackHitEventHandle, K2Node_MakeArray_Array) == 0x0001C8, "Member 'BP_Tgf_Monster_C_AttackHitEventHandle::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_AttackHitEventHandle, CallFunc_BreakHitResult_bBlockingHit) == 0x0001D8, "Member 'BP_Tgf_Monster_C_AttackHitEventHandle::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_AttackHitEventHandle, CallFunc_BreakHitResult_bInitialOverlap) == 0x0001D9, "Member 'BP_Tgf_Monster_C_AttackHitEventHandle::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_AttackHitEventHandle, CallFunc_BreakHitResult_Time) == 0x0001DC, "Member 'BP_Tgf_Monster_C_AttackHitEventHandle::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_AttackHitEventHandle, CallFunc_BreakHitResult_Distance) == 0x0001E0, "Member 'BP_Tgf_Monster_C_AttackHitEventHandle::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_AttackHitEventHandle, CallFunc_BreakHitResult_Location) == 0x0001E8, "Member 'BP_Tgf_Monster_C_AttackHitEventHandle::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_AttackHitEventHandle, CallFunc_BreakHitResult_ImpactPoint) == 0x000200, "Member 'BP_Tgf_Monster_C_AttackHitEventHandle::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_AttackHitEventHandle, CallFunc_BreakHitResult_Normal) == 0x000218, "Member 'BP_Tgf_Monster_C_AttackHitEventHandle::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_AttackHitEventHandle, CallFunc_BreakHitResult_ImpactNormal) == 0x000230, "Member 'BP_Tgf_Monster_C_AttackHitEventHandle::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_AttackHitEventHandle, CallFunc_BreakHitResult_PhysMat) == 0x000248, "Member 'BP_Tgf_Monster_C_AttackHitEventHandle::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_AttackHitEventHandle, CallFunc_BreakHitResult_HitActor) == 0x000250, "Member 'BP_Tgf_Monster_C_AttackHitEventHandle::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_AttackHitEventHandle, CallFunc_BreakHitResult_HitComponent) == 0x000258, "Member 'BP_Tgf_Monster_C_AttackHitEventHandle::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_AttackHitEventHandle, CallFunc_BreakHitResult_HitBoneName) == 0x000260, "Member 'BP_Tgf_Monster_C_AttackHitEventHandle::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_AttackHitEventHandle, CallFunc_BreakHitResult_BoneName) == 0x000268, "Member 'BP_Tgf_Monster_C_AttackHitEventHandle::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_AttackHitEventHandle, CallFunc_BreakHitResult_HitItem) == 0x000270, "Member 'BP_Tgf_Monster_C_AttackHitEventHandle::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_AttackHitEventHandle, CallFunc_BreakHitResult_ElementIndex) == 0x000274, "Member 'BP_Tgf_Monster_C_AttackHitEventHandle::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_AttackHitEventHandle, CallFunc_BreakHitResult_FaceIndex) == 0x000278, "Member 'BP_Tgf_Monster_C_AttackHitEventHandle::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_AttackHitEventHandle, CallFunc_BreakHitResult_TraceStart) == 0x000280, "Member 'BP_Tgf_Monster_C_AttackHitEventHandle::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_AttackHitEventHandle, CallFunc_BreakHitResult_TraceEnd) == 0x000298, "Member 'BP_Tgf_Monster_C_AttackHitEventHandle::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_AttackHitEventHandle, CallFunc_Format_ReturnValue) == 0x0002B0, "Member 'BP_Tgf_Monster_C_AttackHitEventHandle::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_AttackHitEventHandle, CallFunc_Conv_ObjectToText_ReturnValue_2) == 0x0002C8, "Member 'BP_Tgf_Monster_C_AttackHitEventHandle::CallFunc_Conv_ObjectToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_AttackHitEventHandle, CallFunc_Conv_TextToString_ReturnValue) == 0x0002E0, "Member 'BP_Tgf_Monster_C_AttackHitEventHandle::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_AttackHitEventHandle, K2Node_MakeStruct_FormatArgumentData_2) == 0x0002F0, "Member 'BP_Tgf_Monster_C_AttackHitEventHandle::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_AttackHitEventHandle, K2Node_MakeArray_Array_1) == 0x000340, "Member 'BP_Tgf_Monster_C_AttackHitEventHandle::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_AttackHitEventHandle, CallFunc_Format_ReturnValue_1) == 0x000350, "Member 'BP_Tgf_Monster_C_AttackHitEventHandle::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_AttackHitEventHandle, CallFunc_Conv_TextToString_ReturnValue_1) == 0x000368, "Member 'BP_Tgf_Monster_C_AttackHitEventHandle::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_AttackHitEventHandle, CallFunc_IsValid_ReturnValue) == 0x000378, "Member 'BP_Tgf_Monster_C_AttackHitEventHandle::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_AttackHitEventHandle, CallFunc_MakeEffectContextSimple_ReturnValue) == 0x000380, "Member 'BP_Tgf_Monster_C_AttackHitEventHandle::CallFunc_MakeEffectContextSimple_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_AttackHitEventHandle, CallFunc_GetComponentByClass_ReturnValue) == 0x000398, "Member 'BP_Tgf_Monster_C_AttackHitEventHandle::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_AttackHitEventHandle, CallFunc_IsValid_ReturnValue_1) == 0x0003A0, "Member 'BP_Tgf_Monster_C_AttackHitEventHandle::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_AttackHitEventHandle, CallFunc_Conv_ObjectToText_ReturnValue_3) == 0x0003A8, "Member 'BP_Tgf_Monster_C_AttackHitEventHandle::CallFunc_Conv_ObjectToText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_AttackHitEventHandle, K2Node_MakeStruct_FormatArgumentData_3) == 0x0003C0, "Member 'BP_Tgf_Monster_C_AttackHitEventHandle::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_AttackHitEventHandle, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x000410, "Member 'BP_Tgf_Monster_C_AttackHitEventHandle::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_AttackHitEventHandle, CallFunc_IsValid_ReturnValue_2) == 0x000418, "Member 'BP_Tgf_Monster_C_AttackHitEventHandle::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_AttackHitEventHandle, CallFunc_AbilityTargetDataFromActor_ReturnValue) == 0x000420, "Member 'BP_Tgf_Monster_C_AttackHitEventHandle::CallFunc_AbilityTargetDataFromActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_AttackHitEventHandle, CallFunc_Conv_ObjectToText_ReturnValue_4) == 0x000448, "Member 'BP_Tgf_Monster_C_AttackHitEventHandle::CallFunc_Conv_ObjectToText_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_AttackHitEventHandle, CallFunc_Conv_ObjectToText_ReturnValue_5) == 0x000460, "Member 'BP_Tgf_Monster_C_AttackHitEventHandle::CallFunc_Conv_ObjectToText_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_AttackHitEventHandle, K2Node_MakeStruct_FormatArgumentData_4) == 0x000478, "Member 'BP_Tgf_Monster_C_AttackHitEventHandle::K2Node_MakeStruct_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_AttackHitEventHandle, K2Node_MakeStruct_FormatArgumentData_5) == 0x0004C8, "Member 'BP_Tgf_Monster_C_AttackHitEventHandle::K2Node_MakeStruct_FormatArgumentData_5' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_AttackHitEventHandle, K2Node_MakeArray_Array_2) == 0x000518, "Member 'BP_Tgf_Monster_C_AttackHitEventHandle::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_AttackHitEventHandle, CallFunc_Format_ReturnValue_2) == 0x000528, "Member 'BP_Tgf_Monster_C_AttackHitEventHandle::CallFunc_Format_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_AttackHitEventHandle, CallFunc_Conv_ObjectToText_ReturnValue_6) == 0x000540, "Member 'BP_Tgf_Monster_C_AttackHitEventHandle::CallFunc_Conv_ObjectToText_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_AttackHitEventHandle, CallFunc_Conv_TextToString_ReturnValue_2) == 0x000558, "Member 'BP_Tgf_Monster_C_AttackHitEventHandle::CallFunc_Conv_TextToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_AttackHitEventHandle, K2Node_MakeStruct_FormatArgumentData_6) == 0x000568, "Member 'BP_Tgf_Monster_C_AttackHitEventHandle::K2Node_MakeStruct_FormatArgumentData_6' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_AttackHitEventHandle, K2Node_DynamicCast_AsLyra_Character) == 0x0005B8, "Member 'BP_Tgf_Monster_C_AttackHitEventHandle::K2Node_DynamicCast_AsLyra_Character' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_AttackHitEventHandle, K2Node_DynamicCast_bSuccess) == 0x0005C0, "Member 'BP_Tgf_Monster_C_AttackHitEventHandle::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_AttackHitEventHandle, CallFunc_Array_AddUnique_ReturnValue) == 0x0005C4, "Member 'BP_Tgf_Monster_C_AttackHitEventHandle::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_AttackHitEventHandle, CallFunc_IsDeadOrDying_ReturnValue) == 0x0005C8, "Member 'BP_Tgf_Monster_C_AttackHitEventHandle::CallFunc_IsDeadOrDying_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_AttackHitEventHandle, CallFunc_BreakHitResult_bBlockingHit_1) == 0x0005C9, "Member 'BP_Tgf_Monster_C_AttackHitEventHandle::CallFunc_BreakHitResult_bBlockingHit_1' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_AttackHitEventHandle, CallFunc_BreakHitResult_bInitialOverlap_1) == 0x0005CA, "Member 'BP_Tgf_Monster_C_AttackHitEventHandle::CallFunc_BreakHitResult_bInitialOverlap_1' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_AttackHitEventHandle, CallFunc_BreakHitResult_Time_1) == 0x0005CC, "Member 'BP_Tgf_Monster_C_AttackHitEventHandle::CallFunc_BreakHitResult_Time_1' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_AttackHitEventHandle, CallFunc_BreakHitResult_Distance_1) == 0x0005D0, "Member 'BP_Tgf_Monster_C_AttackHitEventHandle::CallFunc_BreakHitResult_Distance_1' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_AttackHitEventHandle, CallFunc_BreakHitResult_Location_1) == 0x0005D8, "Member 'BP_Tgf_Monster_C_AttackHitEventHandle::CallFunc_BreakHitResult_Location_1' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_AttackHitEventHandle, CallFunc_BreakHitResult_ImpactPoint_1) == 0x0005F0, "Member 'BP_Tgf_Monster_C_AttackHitEventHandle::CallFunc_BreakHitResult_ImpactPoint_1' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_AttackHitEventHandle, CallFunc_BreakHitResult_Normal_1) == 0x000608, "Member 'BP_Tgf_Monster_C_AttackHitEventHandle::CallFunc_BreakHitResult_Normal_1' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_AttackHitEventHandle, CallFunc_BreakHitResult_ImpactNormal_1) == 0x000620, "Member 'BP_Tgf_Monster_C_AttackHitEventHandle::CallFunc_BreakHitResult_ImpactNormal_1' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_AttackHitEventHandle, CallFunc_BreakHitResult_PhysMat_1) == 0x000638, "Member 'BP_Tgf_Monster_C_AttackHitEventHandle::CallFunc_BreakHitResult_PhysMat_1' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_AttackHitEventHandle, CallFunc_BreakHitResult_HitActor_1) == 0x000640, "Member 'BP_Tgf_Monster_C_AttackHitEventHandle::CallFunc_BreakHitResult_HitActor_1' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_AttackHitEventHandle, CallFunc_BreakHitResult_HitComponent_1) == 0x000648, "Member 'BP_Tgf_Monster_C_AttackHitEventHandle::CallFunc_BreakHitResult_HitComponent_1' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_AttackHitEventHandle, CallFunc_BreakHitResult_HitBoneName_1) == 0x000650, "Member 'BP_Tgf_Monster_C_AttackHitEventHandle::CallFunc_BreakHitResult_HitBoneName_1' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_AttackHitEventHandle, CallFunc_BreakHitResult_BoneName_1) == 0x000658, "Member 'BP_Tgf_Monster_C_AttackHitEventHandle::CallFunc_BreakHitResult_BoneName_1' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_AttackHitEventHandle, CallFunc_BreakHitResult_HitItem_1) == 0x000660, "Member 'BP_Tgf_Monster_C_AttackHitEventHandle::CallFunc_BreakHitResult_HitItem_1' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_AttackHitEventHandle, CallFunc_BreakHitResult_ElementIndex_1) == 0x000664, "Member 'BP_Tgf_Monster_C_AttackHitEventHandle::CallFunc_BreakHitResult_ElementIndex_1' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_AttackHitEventHandle, CallFunc_BreakHitResult_FaceIndex_1) == 0x000668, "Member 'BP_Tgf_Monster_C_AttackHitEventHandle::CallFunc_BreakHitResult_FaceIndex_1' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_AttackHitEventHandle, CallFunc_BreakHitResult_TraceStart_1) == 0x000670, "Member 'BP_Tgf_Monster_C_AttackHitEventHandle::CallFunc_BreakHitResult_TraceStart_1' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_AttackHitEventHandle, CallFunc_BreakHitResult_TraceEnd_1) == 0x000688, "Member 'BP_Tgf_Monster_C_AttackHitEventHandle::CallFunc_BreakHitResult_TraceEnd_1' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_AttackHitEventHandle, CallFunc_Array_Contains_ReturnValue) == 0x0006A0, "Member 'BP_Tgf_Monster_C_AttackHitEventHandle::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_AttackHitEventHandle, CallFunc_Conv_ObjectToText_ReturnValue_7) == 0x0006A8, "Member 'BP_Tgf_Monster_C_AttackHitEventHandle::CallFunc_Conv_ObjectToText_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_AttackHitEventHandle, K2Node_MakeStruct_FormatArgumentData_7) == 0x0006C0, "Member 'BP_Tgf_Monster_C_AttackHitEventHandle::K2Node_MakeStruct_FormatArgumentData_7' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_AttackHitEventHandle, K2Node_MakeArray_Array_3) == 0x000710, "Member 'BP_Tgf_Monster_C_AttackHitEventHandle::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_AttackHitEventHandle, CallFunc_Format_ReturnValue_3) == 0x000720, "Member 'BP_Tgf_Monster_C_AttackHitEventHandle::CallFunc_Format_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_AttackHitEventHandle, CallFunc_Conv_TextToString_ReturnValue_3) == 0x000738, "Member 'BP_Tgf_Monster_C_AttackHitEventHandle::CallFunc_Conv_TextToString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_AttackHitEventHandle, K2Node_MakeStruct_GameplayEventData) == 0x000748, "Member 'BP_Tgf_Monster_C_AttackHitEventHandle::K2Node_MakeStruct_GameplayEventData' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_AttackHitEventHandle, CallFunc_Conv_ObjectToText_ReturnValue_8) == 0x0007F8, "Member 'BP_Tgf_Monster_C_AttackHitEventHandle::CallFunc_Conv_ObjectToText_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_AttackHitEventHandle, K2Node_MakeStruct_FormatArgumentData_8) == 0x000810, "Member 'BP_Tgf_Monster_C_AttackHitEventHandle::K2Node_MakeStruct_FormatArgumentData_8' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_AttackHitEventHandle, K2Node_MakeArray_Array_4) == 0x000860, "Member 'BP_Tgf_Monster_C_AttackHitEventHandle::K2Node_MakeArray_Array_4' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_AttackHitEventHandle, CallFunc_Conv_ObjectToText_ReturnValue_9) == 0x000870, "Member 'BP_Tgf_Monster_C_AttackHitEventHandle::CallFunc_Conv_ObjectToText_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_AttackHitEventHandle, CallFunc_Format_ReturnValue_4) == 0x000888, "Member 'BP_Tgf_Monster_C_AttackHitEventHandle::CallFunc_Format_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_AttackHitEventHandle, K2Node_MakeStruct_FormatArgumentData_9) == 0x0008A0, "Member 'BP_Tgf_Monster_C_AttackHitEventHandle::K2Node_MakeStruct_FormatArgumentData_9' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_AttackHitEventHandle, CallFunc_Conv_TextToString_ReturnValue_4) == 0x0008F0, "Member 'BP_Tgf_Monster_C_AttackHitEventHandle::CallFunc_Conv_TextToString_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_AttackHitEventHandle, K2Node_MakeArray_Array_5) == 0x000900, "Member 'BP_Tgf_Monster_C_AttackHitEventHandle::K2Node_MakeArray_Array_5' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_AttackHitEventHandle, CallFunc_Format_ReturnValue_5) == 0x000910, "Member 'BP_Tgf_Monster_C_AttackHitEventHandle::CallFunc_Format_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_AttackHitEventHandle, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000928, "Member 'BP_Tgf_Monster_C_AttackHitEventHandle::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_AttackHitEventHandle, CallFunc_Conv_TextToString_ReturnValue_5) == 0x000930, "Member 'BP_Tgf_Monster_C_AttackHitEventHandle::CallFunc_Conv_TextToString_ReturnValue_5' has a wrong offset!");

// Function BP_Tgf_Monster.BP_Tgf_Monster_C.BeginDormant
// 0x0058 (0x0058 - 0x0000)
struct BP_Tgf_Monster_C_BeginDormant final
{
public:
	bool                                          Param_Dormant;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          PlayMontage;                                       // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGameplayTag>                   K2Node_MakeArray_Array;                            // 0x0008(0x0010)(ConstParm, ReferenceParm)
	struct FGameplayTagContainer                  CallFunc_MakeGameplayTagContainerFromArray_ReturnValue; // 0x0018(0x0020)()
	bool                                          CallFunc_IsDormantSpecialAttackable_ReturnValue;   // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveLooseGameplayTags_ReturnValue;      // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDormantCollisionEnabled_ReturnValue;    // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDormantInvisible_ReturnValue;           // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDormantAttackable_ReturnValue;          // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetDormantWakeUpAbility_ReturnValue;      // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetDormantAbility_ReturnValue;            // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryActivateAbilityByClass_ReturnValue;    // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryActivateAbilityByClass_ReturnValue_1;  // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Tgf_Monster_C_BeginDormant) == 0x000008, "Wrong alignment on BP_Tgf_Monster_C_BeginDormant");
static_assert(sizeof(BP_Tgf_Monster_C_BeginDormant) == 0x000058, "Wrong size on BP_Tgf_Monster_C_BeginDormant");
static_assert(offsetof(BP_Tgf_Monster_C_BeginDormant, Param_Dormant) == 0x000000, "Member 'BP_Tgf_Monster_C_BeginDormant::Param_Dormant' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_BeginDormant, PlayMontage) == 0x000001, "Member 'BP_Tgf_Monster_C_BeginDormant::PlayMontage' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_BeginDormant, K2Node_MakeArray_Array) == 0x000008, "Member 'BP_Tgf_Monster_C_BeginDormant::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_BeginDormant, CallFunc_MakeGameplayTagContainerFromArray_ReturnValue) == 0x000018, "Member 'BP_Tgf_Monster_C_BeginDormant::CallFunc_MakeGameplayTagContainerFromArray_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_BeginDormant, CallFunc_IsDormantSpecialAttackable_ReturnValue) == 0x000038, "Member 'BP_Tgf_Monster_C_BeginDormant::CallFunc_IsDormantSpecialAttackable_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_BeginDormant, CallFunc_RemoveLooseGameplayTags_ReturnValue) == 0x000039, "Member 'BP_Tgf_Monster_C_BeginDormant::CallFunc_RemoveLooseGameplayTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_BeginDormant, CallFunc_IsDormantCollisionEnabled_ReturnValue) == 0x00003A, "Member 'BP_Tgf_Monster_C_BeginDormant::CallFunc_IsDormantCollisionEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_BeginDormant, CallFunc_IsDormantInvisible_ReturnValue) == 0x00003B, "Member 'BP_Tgf_Monster_C_BeginDormant::CallFunc_IsDormantInvisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_BeginDormant, CallFunc_IsDormantAttackable_ReturnValue) == 0x00003C, "Member 'BP_Tgf_Monster_C_BeginDormant::CallFunc_IsDormantAttackable_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_BeginDormant, CallFunc_GetDormantWakeUpAbility_ReturnValue) == 0x000040, "Member 'BP_Tgf_Monster_C_BeginDormant::CallFunc_GetDormantWakeUpAbility_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_BeginDormant, CallFunc_GetDormantAbility_ReturnValue) == 0x000048, "Member 'BP_Tgf_Monster_C_BeginDormant::CallFunc_GetDormantAbility_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_BeginDormant, CallFunc_TryActivateAbilityByClass_ReturnValue) == 0x000050, "Member 'BP_Tgf_Monster_C_BeginDormant::CallFunc_TryActivateAbilityByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_BeginDormant, CallFunc_TryActivateAbilityByClass_ReturnValue_1) == 0x000051, "Member 'BP_Tgf_Monster_C_BeginDormant::CallFunc_TryActivateAbilityByClass_ReturnValue_1' has a wrong offset!");

// Function BP_Tgf_Monster.BP_Tgf_Monster_C.BlockUpdateSpeedOnDistance
// 0x0030 (0x0030 - 0x0000)
struct BP_Tgf_Monster_C_BlockUpdateSpeedOnDistance final
{
public:
	bool                                          Block;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_MakeGameplayTagContainerFromTag_ReturnValue; // 0x0008(0x0020)()
	bool                                          CallFunc_RemoveLooseGameplayTags_ReturnValue;      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddLooseGameplayTags_ReturnValue;         // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Tgf_Monster_C_BlockUpdateSpeedOnDistance) == 0x000008, "Wrong alignment on BP_Tgf_Monster_C_BlockUpdateSpeedOnDistance");
static_assert(sizeof(BP_Tgf_Monster_C_BlockUpdateSpeedOnDistance) == 0x000030, "Wrong size on BP_Tgf_Monster_C_BlockUpdateSpeedOnDistance");
static_assert(offsetof(BP_Tgf_Monster_C_BlockUpdateSpeedOnDistance, Block) == 0x000000, "Member 'BP_Tgf_Monster_C_BlockUpdateSpeedOnDistance::Block' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_BlockUpdateSpeedOnDistance, CallFunc_MakeGameplayTagContainerFromTag_ReturnValue) == 0x000008, "Member 'BP_Tgf_Monster_C_BlockUpdateSpeedOnDistance::CallFunc_MakeGameplayTagContainerFromTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_BlockUpdateSpeedOnDistance, CallFunc_RemoveLooseGameplayTags_ReturnValue) == 0x000028, "Member 'BP_Tgf_Monster_C_BlockUpdateSpeedOnDistance::CallFunc_RemoveLooseGameplayTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_BlockUpdateSpeedOnDistance, CallFunc_AddLooseGameplayTags_ReturnValue) == 0x000029, "Member 'BP_Tgf_Monster_C_BlockUpdateSpeedOnDistance::CallFunc_AddLooseGameplayTags_ReturnValue' has a wrong offset!");

// Function BP_Tgf_Monster.BP_Tgf_Monster_C.BndEvt__BP_Tgf_Monster_AttributeComponent_K2Node_ComponentBoundEvent_0_TgfAttribute_DeathEvent__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_Tgf_Monster_C_BndEvt__BP_Tgf_Monster_AttributeComponent_K2Node_ComponentBoundEvent_0_TgfAttribute_DeathEvent__DelegateSignature final
{
public:
	class AActor*                                 OwningActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Tgf_Monster_C_BndEvt__BP_Tgf_Monster_AttributeComponent_K2Node_ComponentBoundEvent_0_TgfAttribute_DeathEvent__DelegateSignature) == 0x000008, "Wrong alignment on BP_Tgf_Monster_C_BndEvt__BP_Tgf_Monster_AttributeComponent_K2Node_ComponentBoundEvent_0_TgfAttribute_DeathEvent__DelegateSignature");
static_assert(sizeof(BP_Tgf_Monster_C_BndEvt__BP_Tgf_Monster_AttributeComponent_K2Node_ComponentBoundEvent_0_TgfAttribute_DeathEvent__DelegateSignature) == 0x000008, "Wrong size on BP_Tgf_Monster_C_BndEvt__BP_Tgf_Monster_AttributeComponent_K2Node_ComponentBoundEvent_0_TgfAttribute_DeathEvent__DelegateSignature");
static_assert(offsetof(BP_Tgf_Monster_C_BndEvt__BP_Tgf_Monster_AttributeComponent_K2Node_ComponentBoundEvent_0_TgfAttribute_DeathEvent__DelegateSignature, OwningActor) == 0x000000, "Member 'BP_Tgf_Monster_C_BndEvt__BP_Tgf_Monster_AttributeComponent_K2Node_ComponentBoundEvent_0_TgfAttribute_DeathEvent__DelegateSignature::OwningActor' has a wrong offset!");

// Function BP_Tgf_Monster.BP_Tgf_Monster_C.BndEvt__BP_Tgf_Monster_AttributeComponent_K2Node_ComponentBoundEvent_1_TgfAttribute_DamageEvent__DelegateSignature
// 0x02E8 (0x02E8 - 0x0000)
struct BP_Tgf_Monster_C_BndEvt__BP_Tgf_Monster_AttributeComponent_K2Node_ComponentBoundEvent_1_TgfAttribute_DamageEvent__DelegateSignature final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  InstigatorTags;                                    // 0x0008(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FGameplayTagContainer                  TargetTags;                                        // 0x0028(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm)
	float                                         Damage;                                            // 0x0048(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEffectSpec                    Spec;                                              // 0x0050(0x0298)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_Tgf_Monster_C_BndEvt__BP_Tgf_Monster_AttributeComponent_K2Node_ComponentBoundEvent_1_TgfAttribute_DamageEvent__DelegateSignature) == 0x000008, "Wrong alignment on BP_Tgf_Monster_C_BndEvt__BP_Tgf_Monster_AttributeComponent_K2Node_ComponentBoundEvent_1_TgfAttribute_DamageEvent__DelegateSignature");
static_assert(sizeof(BP_Tgf_Monster_C_BndEvt__BP_Tgf_Monster_AttributeComponent_K2Node_ComponentBoundEvent_1_TgfAttribute_DamageEvent__DelegateSignature) == 0x0002E8, "Wrong size on BP_Tgf_Monster_C_BndEvt__BP_Tgf_Monster_AttributeComponent_K2Node_ComponentBoundEvent_1_TgfAttribute_DamageEvent__DelegateSignature");
static_assert(offsetof(BP_Tgf_Monster_C_BndEvt__BP_Tgf_Monster_AttributeComponent_K2Node_ComponentBoundEvent_1_TgfAttribute_DamageEvent__DelegateSignature, Actor) == 0x000000, "Member 'BP_Tgf_Monster_C_BndEvt__BP_Tgf_Monster_AttributeComponent_K2Node_ComponentBoundEvent_1_TgfAttribute_DamageEvent__DelegateSignature::Actor' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_BndEvt__BP_Tgf_Monster_AttributeComponent_K2Node_ComponentBoundEvent_1_TgfAttribute_DamageEvent__DelegateSignature, InstigatorTags) == 0x000008, "Member 'BP_Tgf_Monster_C_BndEvt__BP_Tgf_Monster_AttributeComponent_K2Node_ComponentBoundEvent_1_TgfAttribute_DamageEvent__DelegateSignature::InstigatorTags' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_BndEvt__BP_Tgf_Monster_AttributeComponent_K2Node_ComponentBoundEvent_1_TgfAttribute_DamageEvent__DelegateSignature, TargetTags) == 0x000028, "Member 'BP_Tgf_Monster_C_BndEvt__BP_Tgf_Monster_AttributeComponent_K2Node_ComponentBoundEvent_1_TgfAttribute_DamageEvent__DelegateSignature::TargetTags' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_BndEvt__BP_Tgf_Monster_AttributeComponent_K2Node_ComponentBoundEvent_1_TgfAttribute_DamageEvent__DelegateSignature, Damage) == 0x000048, "Member 'BP_Tgf_Monster_C_BndEvt__BP_Tgf_Monster_AttributeComponent_K2Node_ComponentBoundEvent_1_TgfAttribute_DamageEvent__DelegateSignature::Damage' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_BndEvt__BP_Tgf_Monster_AttributeComponent_K2Node_ComponentBoundEvent_1_TgfAttribute_DamageEvent__DelegateSignature, Spec) == 0x000050, "Member 'BP_Tgf_Monster_C_BndEvt__BP_Tgf_Monster_AttributeComponent_K2Node_ComponentBoundEvent_1_TgfAttribute_DamageEvent__DelegateSignature::Spec' has a wrong offset!");

// Function BP_Tgf_Monster.BP_Tgf_Monster_C.BndEvt__BP_Tgf_Monster_AttributeComponent_K2Node_ComponentBoundEvent_2_TgfAttribute_DeathEvent__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_Tgf_Monster_C_BndEvt__BP_Tgf_Monster_AttributeComponent_K2Node_ComponentBoundEvent_2_TgfAttribute_DeathEvent__DelegateSignature final
{
public:
	class AActor*                                 OwningActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Tgf_Monster_C_BndEvt__BP_Tgf_Monster_AttributeComponent_K2Node_ComponentBoundEvent_2_TgfAttribute_DeathEvent__DelegateSignature) == 0x000008, "Wrong alignment on BP_Tgf_Monster_C_BndEvt__BP_Tgf_Monster_AttributeComponent_K2Node_ComponentBoundEvent_2_TgfAttribute_DeathEvent__DelegateSignature");
static_assert(sizeof(BP_Tgf_Monster_C_BndEvt__BP_Tgf_Monster_AttributeComponent_K2Node_ComponentBoundEvent_2_TgfAttribute_DeathEvent__DelegateSignature) == 0x000008, "Wrong size on BP_Tgf_Monster_C_BndEvt__BP_Tgf_Monster_AttributeComponent_K2Node_ComponentBoundEvent_2_TgfAttribute_DeathEvent__DelegateSignature");
static_assert(offsetof(BP_Tgf_Monster_C_BndEvt__BP_Tgf_Monster_AttributeComponent_K2Node_ComponentBoundEvent_2_TgfAttribute_DeathEvent__DelegateSignature, OwningActor) == 0x000000, "Member 'BP_Tgf_Monster_C_BndEvt__BP_Tgf_Monster_AttributeComponent_K2Node_ComponentBoundEvent_2_TgfAttribute_DeathEvent__DelegateSignature::OwningActor' has a wrong offset!");

// Function BP_Tgf_Monster.BP_Tgf_Monster_C.BndEvt__BP_Tgf_Monster_AttributeComponent_K2Node_ComponentBoundEvent_3_TgfAttribute_DamageEvent__DelegateSignature
// 0x02E8 (0x02E8 - 0x0000)
struct BP_Tgf_Monster_C_BndEvt__BP_Tgf_Monster_AttributeComponent_K2Node_ComponentBoundEvent_3_TgfAttribute_DamageEvent__DelegateSignature final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  InstigatorTags;                                    // 0x0008(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FGameplayTagContainer                  TargetTags;                                        // 0x0028(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm)
	float                                         Damage;                                            // 0x0048(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEffectSpec                    Spec;                                              // 0x0050(0x0298)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_Tgf_Monster_C_BndEvt__BP_Tgf_Monster_AttributeComponent_K2Node_ComponentBoundEvent_3_TgfAttribute_DamageEvent__DelegateSignature) == 0x000008, "Wrong alignment on BP_Tgf_Monster_C_BndEvt__BP_Tgf_Monster_AttributeComponent_K2Node_ComponentBoundEvent_3_TgfAttribute_DamageEvent__DelegateSignature");
static_assert(sizeof(BP_Tgf_Monster_C_BndEvt__BP_Tgf_Monster_AttributeComponent_K2Node_ComponentBoundEvent_3_TgfAttribute_DamageEvent__DelegateSignature) == 0x0002E8, "Wrong size on BP_Tgf_Monster_C_BndEvt__BP_Tgf_Monster_AttributeComponent_K2Node_ComponentBoundEvent_3_TgfAttribute_DamageEvent__DelegateSignature");
static_assert(offsetof(BP_Tgf_Monster_C_BndEvt__BP_Tgf_Monster_AttributeComponent_K2Node_ComponentBoundEvent_3_TgfAttribute_DamageEvent__DelegateSignature, Actor) == 0x000000, "Member 'BP_Tgf_Monster_C_BndEvt__BP_Tgf_Monster_AttributeComponent_K2Node_ComponentBoundEvent_3_TgfAttribute_DamageEvent__DelegateSignature::Actor' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_BndEvt__BP_Tgf_Monster_AttributeComponent_K2Node_ComponentBoundEvent_3_TgfAttribute_DamageEvent__DelegateSignature, InstigatorTags) == 0x000008, "Member 'BP_Tgf_Monster_C_BndEvt__BP_Tgf_Monster_AttributeComponent_K2Node_ComponentBoundEvent_3_TgfAttribute_DamageEvent__DelegateSignature::InstigatorTags' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_BndEvt__BP_Tgf_Monster_AttributeComponent_K2Node_ComponentBoundEvent_3_TgfAttribute_DamageEvent__DelegateSignature, TargetTags) == 0x000028, "Member 'BP_Tgf_Monster_C_BndEvt__BP_Tgf_Monster_AttributeComponent_K2Node_ComponentBoundEvent_3_TgfAttribute_DamageEvent__DelegateSignature::TargetTags' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_BndEvt__BP_Tgf_Monster_AttributeComponent_K2Node_ComponentBoundEvent_3_TgfAttribute_DamageEvent__DelegateSignature, Damage) == 0x000048, "Member 'BP_Tgf_Monster_C_BndEvt__BP_Tgf_Monster_AttributeComponent_K2Node_ComponentBoundEvent_3_TgfAttribute_DamageEvent__DelegateSignature::Damage' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_BndEvt__BP_Tgf_Monster_AttributeComponent_K2Node_ComponentBoundEvent_3_TgfAttribute_DamageEvent__DelegateSignature, Spec) == 0x000050, "Member 'BP_Tgf_Monster_C_BndEvt__BP_Tgf_Monster_AttributeComponent_K2Node_ComponentBoundEvent_3_TgfAttribute_DamageEvent__DelegateSignature::Spec' has a wrong offset!");

// Function BP_Tgf_Monster.BP_Tgf_Monster_C.BndEvt__BP_Tgf_Monster_TgfMonsterMaterialManagerComponent_K2Node_ComponentBoundEvent_1_TgfCharaMatStateTypeEvent__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct BP_Tgf_Monster_C_BndEvt__BP_Tgf_Monster_TgfMonsterMaterialManagerComponent_K2Node_ComponentBoundEvent_1_TgfCharaMatStateTypeEvent__DelegateSignature final
{
public:
	ETgfCharaMatStateType                         MatStateType;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Tgf_Monster_C_BndEvt__BP_Tgf_Monster_TgfMonsterMaterialManagerComponent_K2Node_ComponentBoundEvent_1_TgfCharaMatStateTypeEvent__DelegateSignature) == 0x000001, "Wrong alignment on BP_Tgf_Monster_C_BndEvt__BP_Tgf_Monster_TgfMonsterMaterialManagerComponent_K2Node_ComponentBoundEvent_1_TgfCharaMatStateTypeEvent__DelegateSignature");
static_assert(sizeof(BP_Tgf_Monster_C_BndEvt__BP_Tgf_Monster_TgfMonsterMaterialManagerComponent_K2Node_ComponentBoundEvent_1_TgfCharaMatStateTypeEvent__DelegateSignature) == 0x000001, "Wrong size on BP_Tgf_Monster_C_BndEvt__BP_Tgf_Monster_TgfMonsterMaterialManagerComponent_K2Node_ComponentBoundEvent_1_TgfCharaMatStateTypeEvent__DelegateSignature");
static_assert(offsetof(BP_Tgf_Monster_C_BndEvt__BP_Tgf_Monster_TgfMonsterMaterialManagerComponent_K2Node_ComponentBoundEvent_1_TgfCharaMatStateTypeEvent__DelegateSignature, MatStateType) == 0x000000, "Member 'BP_Tgf_Monster_C_BndEvt__BP_Tgf_Monster_TgfMonsterMaterialManagerComponent_K2Node_ComponentBoundEvent_1_TgfCharaMatStateTypeEvent__DelegateSignature::MatStateType' has a wrong offset!");

// Function BP_Tgf_Monster.BP_Tgf_Monster_C.BndEvt__BP_Tgf_Monster_TgfMonsterReaction_K2Node_ComponentBoundEvent_1_TgfMonsterReactionEvent__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_Tgf_Monster_C_BndEvt__BP_Tgf_Monster_TgfMonsterReaction_K2Node_ComponentBoundEvent_1_TgfMonsterReactionEvent__DelegateSignature final
{
public:
	class AActor*                                 FirstChara;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Tgf_Monster_C_BndEvt__BP_Tgf_Monster_TgfMonsterReaction_K2Node_ComponentBoundEvent_1_TgfMonsterReactionEvent__DelegateSignature) == 0x000008, "Wrong alignment on BP_Tgf_Monster_C_BndEvt__BP_Tgf_Monster_TgfMonsterReaction_K2Node_ComponentBoundEvent_1_TgfMonsterReactionEvent__DelegateSignature");
static_assert(sizeof(BP_Tgf_Monster_C_BndEvt__BP_Tgf_Monster_TgfMonsterReaction_K2Node_ComponentBoundEvent_1_TgfMonsterReactionEvent__DelegateSignature) == 0x000008, "Wrong size on BP_Tgf_Monster_C_BndEvt__BP_Tgf_Monster_TgfMonsterReaction_K2Node_ComponentBoundEvent_1_TgfMonsterReactionEvent__DelegateSignature");
static_assert(offsetof(BP_Tgf_Monster_C_BndEvt__BP_Tgf_Monster_TgfMonsterReaction_K2Node_ComponentBoundEvent_1_TgfMonsterReactionEvent__DelegateSignature, FirstChara) == 0x000000, "Member 'BP_Tgf_Monster_C_BndEvt__BP_Tgf_Monster_TgfMonsterReaction_K2Node_ComponentBoundEvent_1_TgfMonsterReactionEvent__DelegateSignature::FirstChara' has a wrong offset!");

// Function BP_Tgf_Monster.BP_Tgf_Monster_C.CalcSpeedMod
// 0x0050 (0x0050 - 0x0000)
struct BP_Tgf_Monster_C_CalcSpeedMod final
{
public:
	struct FGameplayTag                           Mod;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	double                                        Value;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ModValue;                                          // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	const class UAttributeSet*                    CallFunc_GetAttributeSet_ReturnValue;              // 0x0020(0x0008)(ConstParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTgfSpeedAttributeSet*                  K2Node_DynamicCast_AsTgf_Speed_Attribute_Set;      // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_B_ImplicitCast;     // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Tgf_Monster_C_CalcSpeedMod) == 0x000008, "Wrong alignment on BP_Tgf_Monster_C_CalcSpeedMod");
static_assert(sizeof(BP_Tgf_Monster_C_CalcSpeedMod) == 0x000050, "Wrong size on BP_Tgf_Monster_C_CalcSpeedMod");
static_assert(offsetof(BP_Tgf_Monster_C_CalcSpeedMod, Mod) == 0x000000, "Member 'BP_Tgf_Monster_C_CalcSpeedMod::Mod' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_CalcSpeedMod, Value) == 0x000008, "Member 'BP_Tgf_Monster_C_CalcSpeedMod::Value' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_CalcSpeedMod, ModValue) == 0x000010, "Member 'BP_Tgf_Monster_C_CalcSpeedMod::ModValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_CalcSpeedMod, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000018, "Member 'BP_Tgf_Monster_C_CalcSpeedMod::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_CalcSpeedMod, CallFunc_GetAttributeSet_ReturnValue) == 0x000020, "Member 'BP_Tgf_Monster_C_CalcSpeedMod::CallFunc_GetAttributeSet_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_CalcSpeedMod, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BP_Tgf_Monster_C_CalcSpeedMod::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_CalcSpeedMod, K2Node_DynamicCast_AsTgf_Speed_Attribute_Set) == 0x000030, "Member 'BP_Tgf_Monster_C_CalcSpeedMod::K2Node_DynamicCast_AsTgf_Speed_Attribute_Set' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_CalcSpeedMod, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_Tgf_Monster_C_CalcSpeedMod::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_CalcSpeedMod, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000040, "Member 'BP_Tgf_Monster_C_CalcSpeedMod::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_CalcSpeedMod, CallFunc_Subtract_DoubleDouble_B_ImplicitCast) == 0x000048, "Member 'BP_Tgf_Monster_C_CalcSpeedMod::CallFunc_Subtract_DoubleDouble_B_ImplicitCast' has a wrong offset!");

// Function BP_Tgf_Monster.BP_Tgf_Monster_C.CalcSpeedMods
// 0x0040 (0x0040 - 0x0000)
struct BP_Tgf_Monster_C_CalcSpeedMods final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_GetGameplayTagFromString_ReturnValue;     // 0x0034(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Tgf_Monster_C_CalcSpeedMods) == 0x000008, "Wrong alignment on BP_Tgf_Monster_C_CalcSpeedMods");
static_assert(sizeof(BP_Tgf_Monster_C_CalcSpeedMods) == 0x000040, "Wrong size on BP_Tgf_Monster_C_CalcSpeedMods");
static_assert(offsetof(BP_Tgf_Monster_C_CalcSpeedMods, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_Tgf_Monster_C_CalcSpeedMods::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_CalcSpeedMods, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_Tgf_Monster_C_CalcSpeedMods::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_CalcSpeedMods, CallFunc_Conv_IntToString_ReturnValue) == 0x000008, "Member 'BP_Tgf_Monster_C_CalcSpeedMods::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_CalcSpeedMods, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_Tgf_Monster_C_CalcSpeedMods::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_CalcSpeedMods, CallFunc_Concat_StrStr_ReturnValue) == 0x000020, "Member 'BP_Tgf_Monster_C_CalcSpeedMods::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_CalcSpeedMods, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BP_Tgf_Monster_C_CalcSpeedMods::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_CalcSpeedMods, CallFunc_GetGameplayTagFromString_ReturnValue) == 0x000034, "Member 'BP_Tgf_Monster_C_CalcSpeedMods::CallFunc_GetGameplayTagFromString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_CalcSpeedMods, CallFunc_Less_IntInt_ReturnValue) == 0x00003C, "Member 'BP_Tgf_Monster_C_CalcSpeedMods::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_Tgf_Monster.BP_Tgf_Monster_C.CalcTurnSpeedMod
// 0x0050 (0x0050 - 0x0000)
struct BP_Tgf_Monster_C_CalcTurnSpeedMod final
{
public:
	struct FGameplayTag                           Mod;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	double                                        Value;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ModValue;                                          // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	const class UAttributeSet*                    CallFunc_GetAttributeSet_ReturnValue;              // 0x0020(0x0008)(ConstParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTgfAIAttributeSet*                     K2Node_DynamicCast_AsTgf_AIAttribute_Set;          // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_B_ImplicitCast;     // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Tgf_Monster_C_CalcTurnSpeedMod) == 0x000008, "Wrong alignment on BP_Tgf_Monster_C_CalcTurnSpeedMod");
static_assert(sizeof(BP_Tgf_Monster_C_CalcTurnSpeedMod) == 0x000050, "Wrong size on BP_Tgf_Monster_C_CalcTurnSpeedMod");
static_assert(offsetof(BP_Tgf_Monster_C_CalcTurnSpeedMod, Mod) == 0x000000, "Member 'BP_Tgf_Monster_C_CalcTurnSpeedMod::Mod' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_CalcTurnSpeedMod, Value) == 0x000008, "Member 'BP_Tgf_Monster_C_CalcTurnSpeedMod::Value' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_CalcTurnSpeedMod, ModValue) == 0x000010, "Member 'BP_Tgf_Monster_C_CalcTurnSpeedMod::ModValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_CalcTurnSpeedMod, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000018, "Member 'BP_Tgf_Monster_C_CalcTurnSpeedMod::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_CalcTurnSpeedMod, CallFunc_GetAttributeSet_ReturnValue) == 0x000020, "Member 'BP_Tgf_Monster_C_CalcTurnSpeedMod::CallFunc_GetAttributeSet_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_CalcTurnSpeedMod, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BP_Tgf_Monster_C_CalcTurnSpeedMod::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_CalcTurnSpeedMod, K2Node_DynamicCast_AsTgf_AIAttribute_Set) == 0x000030, "Member 'BP_Tgf_Monster_C_CalcTurnSpeedMod::K2Node_DynamicCast_AsTgf_AIAttribute_Set' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_CalcTurnSpeedMod, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_Tgf_Monster_C_CalcTurnSpeedMod::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_CalcTurnSpeedMod, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000040, "Member 'BP_Tgf_Monster_C_CalcTurnSpeedMod::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_CalcTurnSpeedMod, CallFunc_Subtract_DoubleDouble_B_ImplicitCast) == 0x000048, "Member 'BP_Tgf_Monster_C_CalcTurnSpeedMod::CallFunc_Subtract_DoubleDouble_B_ImplicitCast' has a wrong offset!");

// Function BP_Tgf_Monster.BP_Tgf_Monster_C.DeInitCurGA
// 0x0018 (0x0018 - 0x0000)
struct BP_Tgf_Monster_C_DeInitCurGA final
{
public:
	int32                                         InputIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Remove_ReturnValue;                   // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTgfGameplayAbility*                    CallFunc_Map_Find_Value;                           // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Tgf_Monster_C_DeInitCurGA) == 0x000008, "Wrong alignment on BP_Tgf_Monster_C_DeInitCurGA");
static_assert(sizeof(BP_Tgf_Monster_C_DeInitCurGA) == 0x000018, "Wrong size on BP_Tgf_Monster_C_DeInitCurGA");
static_assert(offsetof(BP_Tgf_Monster_C_DeInitCurGA, InputIndex) == 0x000000, "Member 'BP_Tgf_Monster_C_DeInitCurGA::InputIndex' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_DeInitCurGA, CallFunc_Map_Remove_ReturnValue) == 0x000004, "Member 'BP_Tgf_Monster_C_DeInitCurGA::CallFunc_Map_Remove_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_DeInitCurGA, CallFunc_Map_Find_Value) == 0x000008, "Member 'BP_Tgf_Monster_C_DeInitCurGA::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_DeInitCurGA, CallFunc_Map_Find_ReturnValue) == 0x000010, "Member 'BP_Tgf_Monster_C_DeInitCurGA::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_DeInitCurGA, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000011, "Member 'BP_Tgf_Monster_C_DeInitCurGA::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function BP_Tgf_Monster.BP_Tgf_Monster_C.EnableProjectileBlocker
// 0x0001 (0x0001 - 0x0000)
struct BP_Tgf_Monster_C_EnableProjectileBlocker final
{
public:
	bool                                          bEnable;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Tgf_Monster_C_EnableProjectileBlocker) == 0x000001, "Wrong alignment on BP_Tgf_Monster_C_EnableProjectileBlocker");
static_assert(sizeof(BP_Tgf_Monster_C_EnableProjectileBlocker) == 0x000001, "Wrong size on BP_Tgf_Monster_C_EnableProjectileBlocker");
static_assert(offsetof(BP_Tgf_Monster_C_EnableProjectileBlocker, bEnable) == 0x000000, "Member 'BP_Tgf_Monster_C_EnableProjectileBlocker::bEnable' has a wrong offset!");

// Function BP_Tgf_Monster.BP_Tgf_Monster_C.EndDormant
// 0x00D8 (0x00D8 - 0x0000)
struct BP_Tgf_Monster_C_EndDormant final
{
public:
	bool                                          Param_Dormant;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGameplayTag>                   K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_IsDormantSpecialAttackable_ReturnValue;   // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_MakeGameplayTagContainerFromArray_ReturnValue; // 0x0028(0x0020)()
	bool                                          CallFunc_AddLooseGameplayTags_ReturnValue;         // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDormantCollisionEnabled_ReturnValue;    // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDormantInvisible_ReturnValue;           // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B[0x5];                                       // 0x004B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetDormantSightPeripheralVisionAngleDegrees_Result; // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetDormantWakeUpAbility_ReturnValue;      // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetDormantAbility_ReturnValue;            // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDormantSensesEnabled_ReturnValue;       // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDormantAttackable_ReturnValue;          // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7A[0x6];                                       // 0x007A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetDormantSightRadius_ReturnValue;        // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AAIC_Monster_Default_C*                 K2Node_DynamicCast_AsAIC_Monster_Default;          // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue_1;              // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue_2;              // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AAIController*                          K2Node_DynamicCast_AsAIController;                 // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_DynamicCast_AsAIController_1;               // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x3];                                       // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetAISenseSightPeripheralVisionAngleDegrees_Degrees_ImplicitCast; // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetAISenseSightRadius_Radius_ImplicitCast; // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Tgf_Monster_C_EndDormant) == 0x000008, "Wrong alignment on BP_Tgf_Monster_C_EndDormant");
static_assert(sizeof(BP_Tgf_Monster_C_EndDormant) == 0x0000D8, "Wrong size on BP_Tgf_Monster_C_EndDormant");
static_assert(offsetof(BP_Tgf_Monster_C_EndDormant, Param_Dormant) == 0x000000, "Member 'BP_Tgf_Monster_C_EndDormant::Param_Dormant' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_EndDormant, Temp_int_Variable) == 0x000004, "Member 'BP_Tgf_Monster_C_EndDormant::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_EndDormant, CallFunc_Not_PreBool_ReturnValue) == 0x000008, "Member 'BP_Tgf_Monster_C_EndDormant::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_EndDormant, K2Node_MakeArray_Array) == 0x000010, "Member 'BP_Tgf_Monster_C_EndDormant::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_EndDormant, CallFunc_IsDormantSpecialAttackable_ReturnValue) == 0x000020, "Member 'BP_Tgf_Monster_C_EndDormant::CallFunc_IsDormantSpecialAttackable_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_EndDormant, CallFunc_MakeGameplayTagContainerFromArray_ReturnValue) == 0x000028, "Member 'BP_Tgf_Monster_C_EndDormant::CallFunc_MakeGameplayTagContainerFromArray_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_EndDormant, CallFunc_AddLooseGameplayTags_ReturnValue) == 0x000048, "Member 'BP_Tgf_Monster_C_EndDormant::CallFunc_AddLooseGameplayTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_EndDormant, CallFunc_IsDormantCollisionEnabled_ReturnValue) == 0x000049, "Member 'BP_Tgf_Monster_C_EndDormant::CallFunc_IsDormantCollisionEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_EndDormant, CallFunc_IsDormantInvisible_ReturnValue) == 0x00004A, "Member 'BP_Tgf_Monster_C_EndDormant::CallFunc_IsDormantInvisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_EndDormant, CallFunc_GetDormantSightPeripheralVisionAngleDegrees_Result) == 0x000050, "Member 'BP_Tgf_Monster_C_EndDormant::CallFunc_GetDormantSightPeripheralVisionAngleDegrees_Result' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_EndDormant, CallFunc_SelectFloat_ReturnValue) == 0x000058, "Member 'BP_Tgf_Monster_C_EndDormant::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_EndDormant, CallFunc_GetDormantWakeUpAbility_ReturnValue) == 0x000060, "Member 'BP_Tgf_Monster_C_EndDormant::CallFunc_GetDormantWakeUpAbility_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_EndDormant, CallFunc_GetDormantAbility_ReturnValue) == 0x000068, "Member 'BP_Tgf_Monster_C_EndDormant::CallFunc_GetDormantAbility_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_EndDormant, CallFunc_IsValid_ReturnValue) == 0x000070, "Member 'BP_Tgf_Monster_C_EndDormant::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_EndDormant, CallFunc_Add_IntInt_ReturnValue) == 0x000074, "Member 'BP_Tgf_Monster_C_EndDormant::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_EndDormant, CallFunc_IsDormantSensesEnabled_ReturnValue) == 0x000078, "Member 'BP_Tgf_Monster_C_EndDormant::CallFunc_IsDormantSensesEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_EndDormant, CallFunc_IsDormantAttackable_ReturnValue) == 0x000079, "Member 'BP_Tgf_Monster_C_EndDormant::CallFunc_IsDormantAttackable_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_EndDormant, CallFunc_GetDormantSightRadius_ReturnValue) == 0x000080, "Member 'BP_Tgf_Monster_C_EndDormant::CallFunc_GetDormantSightRadius_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_EndDormant, CallFunc_GetController_ReturnValue) == 0x000088, "Member 'BP_Tgf_Monster_C_EndDormant::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_EndDormant, K2Node_DynamicCast_AsAIC_Monster_Default) == 0x000090, "Member 'BP_Tgf_Monster_C_EndDormant::K2Node_DynamicCast_AsAIC_Monster_Default' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_EndDormant, K2Node_DynamicCast_bSuccess) == 0x000098, "Member 'BP_Tgf_Monster_C_EndDormant::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_EndDormant, CallFunc_GetController_ReturnValue_1) == 0x0000A0, "Member 'BP_Tgf_Monster_C_EndDormant::CallFunc_GetController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_EndDormant, CallFunc_GetController_ReturnValue_2) == 0x0000A8, "Member 'BP_Tgf_Monster_C_EndDormant::CallFunc_GetController_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_EndDormant, K2Node_DynamicCast_AsAIController) == 0x0000B0, "Member 'BP_Tgf_Monster_C_EndDormant::K2Node_DynamicCast_AsAIController' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_EndDormant, K2Node_DynamicCast_bSuccess_1) == 0x0000B8, "Member 'BP_Tgf_Monster_C_EndDormant::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_EndDormant, K2Node_DynamicCast_AsAIController_1) == 0x0000C0, "Member 'BP_Tgf_Monster_C_EndDormant::K2Node_DynamicCast_AsAIController_1' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_EndDormant, K2Node_DynamicCast_bSuccess_2) == 0x0000C8, "Member 'BP_Tgf_Monster_C_EndDormant::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_EndDormant, CallFunc_SetAISenseSightPeripheralVisionAngleDegrees_Degrees_ImplicitCast) == 0x0000CC, "Member 'BP_Tgf_Monster_C_EndDormant::CallFunc_SetAISenseSightPeripheralVisionAngleDegrees_Degrees_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_EndDormant, CallFunc_SetAISenseSightRadius_Radius_ImplicitCast) == 0x0000D0, "Member 'BP_Tgf_Monster_C_EndDormant::CallFunc_SetAISenseSightRadius_Radius_ImplicitCast' has a wrong offset!");

// Function BP_Tgf_Monster.BP_Tgf_Monster_C.EnterCombat
// 0x0020 (0x0020 - 0x0000)
struct BP_Tgf_Monster_C_EnterCombat final
{
public:
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetTimeSeconds_ReturnValue;               // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_RemoveActiveEffectsByClass_ReturnValue;   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Tgf_Monster_C_EnterCombat) == 0x000008, "Wrong alignment on BP_Tgf_Monster_C_EnterCombat");
static_assert(sizeof(BP_Tgf_Monster_C_EnterCombat) == 0x000020, "Wrong size on BP_Tgf_Monster_C_EnterCombat");
static_assert(offsetof(BP_Tgf_Monster_C_EnterCombat, CallFunc_IsValidClass_ReturnValue) == 0x000000, "Member 'BP_Tgf_Monster_C_EnterCombat::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_EnterCombat, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x000008, "Member 'BP_Tgf_Monster_C_EnterCombat::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_EnterCombat, CallFunc_GetTimeSeconds_ReturnValue) == 0x000010, "Member 'BP_Tgf_Monster_C_EnterCombat::CallFunc_GetTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_EnterCombat, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_Tgf_Monster_C_EnterCombat::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_EnterCombat, CallFunc_RemoveActiveEffectsByClass_ReturnValue) == 0x00001C, "Member 'BP_Tgf_Monster_C_EnterCombat::CallFunc_RemoveActiveEffectsByClass_ReturnValue' has a wrong offset!");

// Function BP_Tgf_Monster.BP_Tgf_Monster_C.ExecuteUbergraph_BP_Tgf_Monster
// 0x0AE0 (0x0AE0 - 0x0000)
struct BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWaypointPath*                          CallFunc_SpawnObject_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable;                            // 0x0020(0x0010)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0034(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0044(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AActor* NewThreatTarget)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x0054(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ULyraTeamSubsystem*                     CallFunc_GetWorldSubsystem_ReturnValue;            // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_1;                          // 0x0070(0x0010)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_93[0x5];                                       // 0x0093(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UTgfMonsterPostAnim*                    CallFunc_GetPostProcessAnim_ReturnValue;           // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_2;               // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A2[0x6];                                       // 0x00A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_ComponentBoundEvent_FirstChara;             // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_3;               // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_4;               // 0x00D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D3[0x5];                                       // 0x00D3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_ComponentBoundEvent_OwningActor_1;          // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OwningActor;            // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_FloatToVector_ReturnValue;           // 0x00E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0100(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0118(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_Actor_1;                // 0x0130(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  K2Node_ComponentBoundEvent_InstigatorTags_1;       // 0x0138(0x0020)()
	struct FGameplayTagContainer                  K2Node_ComponentBoundEvent_TargetTags_1;           // 0x0158(0x0020)()
	float                                         K2Node_ComponentBoundEvent_Damage_1;               // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17C[0x4];                                      // 0x017C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEffectSpec                    K2Node_ComponentBoundEvent_Spec_1;                 // 0x0180(0x0298)(ConstParm)
	int32                                         CallFunc_ExecuteActionImp_ReturnValue;             // 0x0418(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41C[0x4];                                      // 0x041C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_ComponentBoundEvent_Actor;                  // 0x0420(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  K2Node_ComponentBoundEvent_InstigatorTags;         // 0x0428(0x0020)()
	struct FGameplayTagContainer                  K2Node_ComponentBoundEvent_TargetTags;             // 0x0448(0x0020)()
	float                                         K2Node_ComponentBoundEvent_Damage;                 // 0x0468(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46C[0x4];                                      // 0x046C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEffectSpec                    K2Node_ComponentBoundEvent_Spec;                   // 0x0470(0x0298)(ConstParm)
	bool                                          CallFunc_HasTag_ReturnValue;                       // 0x0708(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasTag_ReturnValue_1;                     // 0x0709(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x070A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_70B[0x5];                                      // 0x070B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Tgf_Hero_Default_C*                 K2Node_DynamicCast_AsBP_Tgf_Hero_Default;          // 0x0710(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0718(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_719[0x7];                                      // 0x0719(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	const class UAttributeSet*                    CallFunc_GetAttributeSet_ReturnValue;              // 0x0720(0x0008)(ConstParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UTgfDefendAttributeSet*                 K2Node_DynamicCast_AsTgf_Defend_Attribute_Set;     // 0x0728(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0730(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_731[0x7];                                      // 0x0731(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0738(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMaxHealthFinal_ReturnValue;            // 0x0740(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_744[0x4];                                      // 0x0744(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0748(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0750(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0758(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_CompareTeams_TeamIdA;                     // 0x0770(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_CompareTeams_TeamIdB;                     // 0x0774(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELyraTeamComparison                           CallFunc_CompareTeams_ReturnValue;                 // 0x0778(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0779(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsWeak_ReturnValue;                       // 0x077A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFleeing_Result;                         // 0x077B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x077C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x077D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFleed_Result;                           // 0x077E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x077F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomInteger_ReturnValue;                // 0x0780(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0784(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_785[0x3];                                      // 0x0785(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0788(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0790(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x0791(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0792(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_793[0x5];                                      // 0x0793(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	const class UAttributeSet*                    CallFunc_GetAttributeSet_ReturnValue_1;            // 0x0798(0x0008)(ConstParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UTgfDefendAttributeSet*                 K2Node_DynamicCast_AsTgf_Defend_Attribute_Set_1;   // 0x07A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x07A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_5;               // 0x07A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7AA[0x2];                                      // 0x07AA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetMaxHealthFinal_ReturnValue_1;          // 0x07AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x07B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_1;          // 0x07B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7B9[0x3];                                      // 0x07B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_AddThreat_ReturnValue;                    // 0x07BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULyraTeamSubsystem*                     CallFunc_GetWorldSubsystem_ReturnValue_1;          // 0x07C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x07C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C9[0x7];                                      // 0x07C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ALyraPlayerController*                  CallFunc_GetOwnPlayer_ReturnValue;                 // 0x07D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x07D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7D9[0x7];                                      // 0x07D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetViewTarget_ReturnValue;                // 0x07E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x07E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x07E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7EA[0x6];                                      // 0x07EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameplayMessageSubsystem*              CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x07F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FLyraVerbMessage                       K2Node_MakeStruct_LyraVerbMessage;                 // 0x07F8(0x0080)()
	ETgfActorType                                 CallFunc_GetActorType_ReturnValue;                 // 0x0878(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSummonActor_ReturnValue;                // 0x0879(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_87A[0x6];                                      // 0x087A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_MakeGameplayTagContainerFromTag_ReturnValue; // 0x0880(0x0020)()
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue;   // 0x08A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddLooseGameplayTags_ReturnValue;         // 0x08A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_9;                    // 0x08A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_10;                   // 0x08A3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETgfCharaMatStateType                         K2Node_ComponentBoundEvent_MatStateType;           // 0x08A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x08A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8A6[0x2];                                      // 0x08A6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x08A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_6;               // 0x08B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8B1[0x7];                                      // 0x08B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraComponent*                      CallFunc_SpawnSystemAttached_ReturnValue;          // 0x08B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_11;                   // 0x08C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C1[0x7];                                      // 0x08C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	const class UAttributeSet*                    CallFunc_GetAttributeSet_ReturnValue_2;            // 0x08C8(0x0008)(ConstParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UTgfSpeedAttributeSet*                  K2Node_DynamicCast_AsTgf_Speed_Attribute_Set;      // 0x08D0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x08D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D9[0x3];                                      // 0x08D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetMoveSpeedFinal_ReturnValue;            // 0x08DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTgfInventoryManagerComponent*          CallFunc_GetComponentByClass_ReturnValue;          // 0x08E0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_12;                   // 0x08E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8E9[0x3];                                      // 0x08E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FIntPoint                              CallFunc_GetDefaultInventorySize_ReturnValue;      // 0x08EC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_GameplayCue;                    // 0x08F4(0x0008)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8FC[0x4];                                      // 0x08FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_CustomEvent_Position;                       // 0x0900(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0918(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 CallFunc_MakeGameplayCueParameters_ReturnValue;    // 0x0920(0x00E0)(ContainsInstancedReference)
	bool                                          K2Node_Event_Enabled;                              // 0x0A00(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A01[0x7];                                      // 0x0A01(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_ActorSpawnPoint_C*                  K2Node_CustomEvent_ActorSpawnPoint;                // 0x0A08(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_13;                   // 0x0A10(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x0A11(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBlueprintExposedNetMode                      CallFunc_SwitchOnNetMode_ReturnValue;              // 0x0A12(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_3;                    // 0x0A13(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ActorHasTag_ReturnValue;                  // 0x0A14(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0A15(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A16[0x2];                                      // 0x0A16(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_PostAkEvent_ReturnValue;                  // 0x0A18(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0A1C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1D[0x3];                                      // 0x0A1D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_ExecuteActionImp_ReturnValue_1;           // 0x0A20(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDormantable_Result;                     // 0x0A24(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A25[0x3];                                      // 0x0A25(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0A28(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0A2C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A2D[0x3];                                      // 0x0A2D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_PostAkEvent_ReturnValue_1;                // 0x0A30(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDeadOrDying_ReturnValue;                // 0x0A34(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Enable;                         // 0x0A35(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddLooseGameplayTags_ReturnValue_1;       // 0x0A36(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_7;               // 0x0A37(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveLooseGameplayTags_ReturnValue;      // 0x0A38(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A39[0x7];                                      // 0x0A39(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTGFCombatZoneComponent*                CallFunc_GetComponentByClass_ReturnValue_1;        // 0x0A40(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_14;                   // 0x0A48(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_15;                   // 0x0A49(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_16;                   // 0x0A4A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4B[0x5];                                      // 0x0A4B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_NewThreatTarget;                // 0x0A50(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_17;                   // 0x0A58(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A59[0x3];                                      // 0x0A59(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_AddThreat_ReturnValue_1;                  // 0x0A5C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0A60(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AAIController*                          K2Node_DynamicCast_AsAIController;                 // 0x0A68(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0A70(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Enabled;                        // 0x0A71(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bEnable;                        // 0x0A72(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A73[0x5];                                      // 0x0A73(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UTgfProjectileBlockerComponent*> CallFunc_K2_GetComponentsByClass_ReturnValue;      // 0x0A78(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UTgfProjectileBlockerComponent*         CallFunc_Array_Get_Item;                           // 0x0A88(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0A90(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0A94(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A95[0x3];                                      // 0x0A95(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_A_ImplicitCast;       // 0x0A98(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_B_ImplicitCast;       // 0x0AA0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_AddThreat_Threat_ImplicitCast;            // 0x0AA8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AAC[0x4];                                      // 0x0AAC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_A_ImplicitCast_1;     // 0x0AB0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_B_ImplicitCast_1;     // 0x0AB8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetPlayRate_NewRate_ImplicitCast;         // 0x0AC0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC4[0x4];                                      // 0x0AC4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet_BaseMoveSpeed_ImplicitCast;     // 0x0AC8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Delay_Duration_ImplicitCast;              // 0x0AD0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Delay_Duration_ImplicitCast_1;            // 0x0AD4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_AddThreat_Threat_ImplicitCast_1;          // 0x0AD8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetAISenseSightPeripheralVisionAngleDegrees_Degrees_ImplicitCast; // 0x0ADC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster) == 0x000008, "Wrong alignment on BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster");
static_assert(sizeof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster) == 0x000AE0, "Wrong size on BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, EntryPoint) == 0x000000, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, CallFunc_SpawnObject_ReturnValue) == 0x000008, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, Temp_delegate_Variable) == 0x000020, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, K2Node_CreateDelegate_OutputDelegate_1) == 0x000034, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, K2Node_CreateDelegate_OutputDelegate_2) == 0x000044, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, K2Node_CreateDelegate_OutputDelegate_3) == 0x000054, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, CallFunc_GetWorldSubsystem_ReturnValue) == 0x000068, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::CallFunc_GetWorldSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, Temp_delegate_Variable_1) == 0x000070, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::Temp_delegate_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, Temp_int_Array_Index_Variable) == 0x000080, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, Temp_int_Loop_Counter_Variable) == 0x000084, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, CallFunc_HasAuthority_ReturnValue) == 0x000088, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, CallFunc_Add_IntInt_ReturnValue) == 0x00008C, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, CallFunc_HasAuthority_ReturnValue_1) == 0x000090, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, CallFunc_IsValid_ReturnValue_1) == 0x000091, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, CallFunc_IsValid_ReturnValue_2) == 0x000092, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, CallFunc_GetPostProcessAnim_ReturnValue) == 0x000098, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::CallFunc_GetPostProcessAnim_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, CallFunc_IsValid_ReturnValue_3) == 0x0000A0, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, CallFunc_HasAuthority_ReturnValue_2) == 0x0000A1, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::CallFunc_HasAuthority_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, K2Node_ComponentBoundEvent_FirstChara) == 0x0000A8, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::K2Node_ComponentBoundEvent_FirstChara' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, CallFunc_IsValid_ReturnValue_4) == 0x0000B0, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000B8, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, CallFunc_HasAuthority_ReturnValue_3) == 0x0000D0, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::CallFunc_HasAuthority_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, CallFunc_IsValid_ReturnValue_5) == 0x0000D1, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, CallFunc_HasAuthority_ReturnValue_4) == 0x0000D2, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::CallFunc_HasAuthority_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, K2Node_ComponentBoundEvent_OwningActor_1) == 0x0000D8, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::K2Node_ComponentBoundEvent_OwningActor_1' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, K2Node_ComponentBoundEvent_OwningActor) == 0x0000E0, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::K2Node_ComponentBoundEvent_OwningActor' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, CallFunc_Conv_FloatToVector_ReturnValue) == 0x0000E8, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::CallFunc_Conv_FloatToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000100, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, CallFunc_Add_VectorVector_ReturnValue) == 0x000118, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, K2Node_ComponentBoundEvent_Actor_1) == 0x000130, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::K2Node_ComponentBoundEvent_Actor_1' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, K2Node_ComponentBoundEvent_InstigatorTags_1) == 0x000138, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::K2Node_ComponentBoundEvent_InstigatorTags_1' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, K2Node_ComponentBoundEvent_TargetTags_1) == 0x000158, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::K2Node_ComponentBoundEvent_TargetTags_1' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, K2Node_ComponentBoundEvent_Damage_1) == 0x000178, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::K2Node_ComponentBoundEvent_Damage_1' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, K2Node_ComponentBoundEvent_Spec_1) == 0x000180, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::K2Node_ComponentBoundEvent_Spec_1' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, CallFunc_ExecuteActionImp_ReturnValue) == 0x000418, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::CallFunc_ExecuteActionImp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, K2Node_ComponentBoundEvent_Actor) == 0x000420, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::K2Node_ComponentBoundEvent_Actor' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, K2Node_ComponentBoundEvent_InstigatorTags) == 0x000428, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::K2Node_ComponentBoundEvent_InstigatorTags' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, K2Node_ComponentBoundEvent_TargetTags) == 0x000448, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::K2Node_ComponentBoundEvent_TargetTags' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, K2Node_ComponentBoundEvent_Damage) == 0x000468, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::K2Node_ComponentBoundEvent_Damage' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, K2Node_ComponentBoundEvent_Spec) == 0x000470, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::K2Node_ComponentBoundEvent_Spec' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, CallFunc_HasTag_ReturnValue) == 0x000708, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::CallFunc_HasTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, CallFunc_HasTag_ReturnValue_1) == 0x000709, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::CallFunc_HasTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, CallFunc_Not_PreBool_ReturnValue) == 0x00070A, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, K2Node_DynamicCast_AsBP_Tgf_Hero_Default) == 0x000710, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::K2Node_DynamicCast_AsBP_Tgf_Hero_Default' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, K2Node_DynamicCast_bSuccess) == 0x000718, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, CallFunc_GetAttributeSet_ReturnValue) == 0x000720, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::CallFunc_GetAttributeSet_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, K2Node_DynamicCast_AsTgf_Defend_Attribute_Set) == 0x000728, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::K2Node_DynamicCast_AsTgf_Defend_Attribute_Set' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, K2Node_DynamicCast_bSuccess_1) == 0x000730, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, CallFunc_SelectFloat_ReturnValue) == 0x000738, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, CallFunc_GetMaxHealthFinal_ReturnValue) == 0x000740, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::CallFunc_GetMaxHealthFinal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000748, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000750, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000758, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, CallFunc_CompareTeams_TeamIdA) == 0x000770, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::CallFunc_CompareTeams_TeamIdA' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, CallFunc_CompareTeams_TeamIdB) == 0x000774, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::CallFunc_CompareTeams_TeamIdB' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, CallFunc_CompareTeams_ReturnValue) == 0x000778, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::CallFunc_CompareTeams_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, K2Node_SwitchEnum_CmpSuccess) == 0x000779, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, CallFunc_IsWeak_ReturnValue) == 0x00077A, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::CallFunc_IsWeak_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, CallFunc_IsFleeing_Result) == 0x00077B, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::CallFunc_IsFleeing_Result' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, CallFunc_Not_PreBool_ReturnValue_1) == 0x00077C, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, CallFunc_Not_PreBool_ReturnValue_2) == 0x00077D, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, CallFunc_IsFleed_Result) == 0x00077E, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::CallFunc_IsFleed_Result' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, CallFunc_Not_PreBool_ReturnValue_3) == 0x00077F, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, CallFunc_RandomInteger_ReturnValue) == 0x000780, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::CallFunc_RandomInteger_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, CallFunc_BooleanAND_ReturnValue) == 0x000784, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000788, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, CallFunc_BooleanAND_ReturnValue_1) == 0x000790, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, CallFunc_IsValid_ReturnValue_6) == 0x000791, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000792, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, CallFunc_GetAttributeSet_ReturnValue_1) == 0x000798, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::CallFunc_GetAttributeSet_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, K2Node_DynamicCast_AsTgf_Defend_Attribute_Set_1) == 0x0007A0, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::K2Node_DynamicCast_AsTgf_Defend_Attribute_Set_1' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, K2Node_DynamicCast_bSuccess_2) == 0x0007A8, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, CallFunc_HasAuthority_ReturnValue_5) == 0x0007A9, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::CallFunc_HasAuthority_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, CallFunc_GetMaxHealthFinal_ReturnValue_1) == 0x0007AC, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::CallFunc_GetMaxHealthFinal_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x0007B0, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, CallFunc_Less_DoubleDouble_ReturnValue_1) == 0x0007B8, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::CallFunc_Less_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, CallFunc_AddThreat_ReturnValue) == 0x0007BC, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::CallFunc_AddThreat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, CallFunc_GetWorldSubsystem_ReturnValue_1) == 0x0007C0, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::CallFunc_GetWorldSubsystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, CallFunc_IsDedicatedServer_ReturnValue) == 0x0007C8, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, CallFunc_GetOwnPlayer_ReturnValue) == 0x0007D0, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::CallFunc_GetOwnPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, CallFunc_IsValid_ReturnValue_7) == 0x0007D8, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, CallFunc_GetViewTarget_ReturnValue) == 0x0007E0, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::CallFunc_GetViewTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0007E8, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, CallFunc_IsValid_ReturnValue_8) == 0x0007E9, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x0007F0, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, K2Node_MakeStruct_LyraVerbMessage) == 0x0007F8, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::K2Node_MakeStruct_LyraVerbMessage' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, CallFunc_GetActorType_ReturnValue) == 0x000878, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::CallFunc_GetActorType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, CallFunc_IsSummonActor_ReturnValue) == 0x000879, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::CallFunc_IsSummonActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, CallFunc_MakeGameplayTagContainerFromTag_ReturnValue) == 0x000880, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::CallFunc_MakeGameplayTagContainerFromTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, CallFunc_HasAnyMatchingGameplayTags_ReturnValue) == 0x0008A0, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::CallFunc_HasAnyMatchingGameplayTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, CallFunc_AddLooseGameplayTags_ReturnValue) == 0x0008A1, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::CallFunc_AddLooseGameplayTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, CallFunc_IsValid_ReturnValue_9) == 0x0008A2, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::CallFunc_IsValid_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, CallFunc_IsValid_ReturnValue_10) == 0x0008A3, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::CallFunc_IsValid_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, K2Node_ComponentBoundEvent_MatStateType) == 0x0008A4, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::K2Node_ComponentBoundEvent_MatStateType' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, K2Node_SwitchEnum_CmpSuccess_1) == 0x0008A5, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x0008A8, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, CallFunc_HasAuthority_ReturnValue_6) == 0x0008B0, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::CallFunc_HasAuthority_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, CallFunc_SpawnSystemAttached_ReturnValue) == 0x0008B8, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::CallFunc_SpawnSystemAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, CallFunc_IsValid_ReturnValue_11) == 0x0008C0, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::CallFunc_IsValid_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, CallFunc_GetAttributeSet_ReturnValue_2) == 0x0008C8, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::CallFunc_GetAttributeSet_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, K2Node_DynamicCast_AsTgf_Speed_Attribute_Set) == 0x0008D0, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::K2Node_DynamicCast_AsTgf_Speed_Attribute_Set' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, K2Node_DynamicCast_bSuccess_3) == 0x0008D8, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, CallFunc_GetMoveSpeedFinal_ReturnValue) == 0x0008DC, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::CallFunc_GetMoveSpeedFinal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, CallFunc_GetComponentByClass_ReturnValue) == 0x0008E0, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, CallFunc_IsValid_ReturnValue_12) == 0x0008E8, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::CallFunc_IsValid_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, CallFunc_GetDefaultInventorySize_ReturnValue) == 0x0008EC, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::CallFunc_GetDefaultInventorySize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, K2Node_CustomEvent_GameplayCue) == 0x0008F4, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::K2Node_CustomEvent_GameplayCue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, K2Node_CustomEvent_Position) == 0x000900, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::K2Node_CustomEvent_Position' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, CallFunc_GetAnimInstance_ReturnValue) == 0x000918, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, CallFunc_MakeGameplayCueParameters_ReturnValue) == 0x000920, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::CallFunc_MakeGameplayCueParameters_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, K2Node_Event_Enabled) == 0x000A00, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::K2Node_Event_Enabled' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, K2Node_CustomEvent_ActorSpawnPoint) == 0x000A08, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::K2Node_CustomEvent_ActorSpawnPoint' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, CallFunc_IsValid_ReturnValue_13) == 0x000A10, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::CallFunc_IsValid_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, K2Node_SwitchEnum_CmpSuccess_2) == 0x000A11, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, CallFunc_SwitchOnNetMode_ReturnValue) == 0x000A12, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::CallFunc_SwitchOnNetMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, K2Node_SwitchEnum_CmpSuccess_3) == 0x000A13, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::K2Node_SwitchEnum_CmpSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, CallFunc_ActorHasTag_ReturnValue) == 0x000A14, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::CallFunc_ActorHasTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000A15, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, CallFunc_PostAkEvent_ReturnValue) == 0x000A18, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::CallFunc_PostAkEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, K2Node_Event_EndPlayReason) == 0x000A1C, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, CallFunc_ExecuteActionImp_ReturnValue_1) == 0x000A20, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::CallFunc_ExecuteActionImp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, CallFunc_IsDormantable_Result) == 0x000A24, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::CallFunc_IsDormantable_Result' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, CallFunc_Array_Length_ReturnValue) == 0x000A28, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, CallFunc_Less_IntInt_ReturnValue) == 0x000A2C, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, CallFunc_PostAkEvent_ReturnValue_1) == 0x000A30, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::CallFunc_PostAkEvent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, CallFunc_IsDeadOrDying_ReturnValue) == 0x000A34, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::CallFunc_IsDeadOrDying_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, K2Node_CustomEvent_Enable) == 0x000A35, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::K2Node_CustomEvent_Enable' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, CallFunc_AddLooseGameplayTags_ReturnValue_1) == 0x000A36, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::CallFunc_AddLooseGameplayTags_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, CallFunc_HasAuthority_ReturnValue_7) == 0x000A37, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::CallFunc_HasAuthority_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, CallFunc_RemoveLooseGameplayTags_ReturnValue) == 0x000A38, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::CallFunc_RemoveLooseGameplayTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, CallFunc_GetComponentByClass_ReturnValue_1) == 0x000A40, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::CallFunc_GetComponentByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, CallFunc_IsValid_ReturnValue_14) == 0x000A48, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::CallFunc_IsValid_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, CallFunc_IsValid_ReturnValue_15) == 0x000A49, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::CallFunc_IsValid_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, CallFunc_IsValid_ReturnValue_16) == 0x000A4A, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::CallFunc_IsValid_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, K2Node_CustomEvent_NewThreatTarget) == 0x000A50, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::K2Node_CustomEvent_NewThreatTarget' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, CallFunc_IsValid_ReturnValue_17) == 0x000A58, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::CallFunc_IsValid_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, CallFunc_AddThreat_ReturnValue_1) == 0x000A5C, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::CallFunc_AddThreat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, CallFunc_GetController_ReturnValue) == 0x000A60, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, K2Node_DynamicCast_AsAIController) == 0x000A68, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::K2Node_DynamicCast_AsAIController' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, K2Node_DynamicCast_bSuccess_4) == 0x000A70, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, K2Node_CustomEvent_Enabled) == 0x000A71, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::K2Node_CustomEvent_Enabled' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, K2Node_CustomEvent_bEnable) == 0x000A72, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::K2Node_CustomEvent_bEnable' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x000A78, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, CallFunc_Array_Get_Item) == 0x000A88, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, CallFunc_Array_Length_ReturnValue_1) == 0x000A90, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, CallFunc_Less_IntInt_ReturnValue_1) == 0x000A94, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, CallFunc_Divide_DoubleDouble_A_ImplicitCast) == 0x000A98, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::CallFunc_Divide_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, CallFunc_Divide_DoubleDouble_B_ImplicitCast) == 0x000AA0, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::CallFunc_Divide_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, CallFunc_AddThreat_Threat_ImplicitCast) == 0x000AA8, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::CallFunc_AddThreat_Threat_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, CallFunc_Divide_DoubleDouble_A_ImplicitCast_1) == 0x000AB0, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::CallFunc_Divide_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, CallFunc_Divide_DoubleDouble_B_ImplicitCast_1) == 0x000AB8, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::CallFunc_Divide_DoubleDouble_B_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, CallFunc_SetPlayRate_NewRate_ImplicitCast) == 0x000AC0, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::CallFunc_SetPlayRate_NewRate_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, K2Node_VariableSet_BaseMoveSpeed_ImplicitCast) == 0x000AC8, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::K2Node_VariableSet_BaseMoveSpeed_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, CallFunc_Delay_Duration_ImplicitCast) == 0x000AD0, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::CallFunc_Delay_Duration_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, CallFunc_Delay_Duration_ImplicitCast_1) == 0x000AD4, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::CallFunc_Delay_Duration_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, CallFunc_AddThreat_Threat_ImplicitCast_1) == 0x000AD8, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::CallFunc_AddThreat_Threat_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster, CallFunc_SetAISenseSightPeripheralVisionAngleDegrees_Degrees_ImplicitCast) == 0x000ADC, "Member 'BP_Tgf_Monster_C_ExecuteUbergraph_BP_Tgf_Monster::CallFunc_SetAISenseSightPeripheralVisionAngleDegrees_Degrees_ImplicitCast' has a wrong offset!");

// Function BP_Tgf_Monster.BP_Tgf_Monster_C.GenerateLoot
// 0x01D0 (0x01D0 - 0x0000)
struct BP_Tgf_Monster_C_GenerateLoot final
{
public:
	class AActor*                                 Param_Instigator;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 RealLoot;                                          // 0x0008(0x0010)(Edit, BlueprintVisible)
	class APlayerState*                           CallFunc_GetPlayerStateFromObject_ReturnValue;     // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetClassDisplayName_ReturnValue;          // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0050(0x0018)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0068(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0080(0x0050)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00D0(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0120(0x0010)(ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_134[0x4];                                      // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0138(0x0018)()
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_154[0x4];                                      // 0x0154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ULyraTeamSubsystem*                     CallFunc_GetWorldSubsystem_ReturnValue;            // 0x0158(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_164[0x4];                                      // 0x0164(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ALyraPlayerState*>               CallFunc_GetPlayerStatesWithSameTeam_ReturnValue;  // 0x0168(0x0010)(ReferenceParm)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_179[0x7];                                      // 0x0179(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UTgfInventoryItemInstance*>      CallFunc_Loot_ReturnValue;                         // 0x0180(0x0010)(ReferenceParm)
	class UTgfInventoryManagerComponent*          CallFunc_GetComponentByClass_ReturnValue;          // 0x0190(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UTgfInventoryItemInstance*              CallFunc_Array_Get_Item;                           // 0x0198(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A1[0x7];                                      // 0x01A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class ULyraInventoryItemDefinition> CallFunc_GetItemDef_ReturnValue;                   // 0x01A8(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	const class UInventoryFragment_InventoryIcon* CallFunc_FindFragmentByClass_ReturnValue;          // 0x01B0(0x0008)(ConstParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsTgf_Inventory_Item_Definition; // 0x01B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_ByteByte_ReturnValue;             // 0x01C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x01C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C3[0x1];                                      // 0x01C3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Tgf_Monster_C_GenerateLoot) == 0x000008, "Wrong alignment on BP_Tgf_Monster_C_GenerateLoot");
static_assert(sizeof(BP_Tgf_Monster_C_GenerateLoot) == 0x0001D0, "Wrong size on BP_Tgf_Monster_C_GenerateLoot");
static_assert(offsetof(BP_Tgf_Monster_C_GenerateLoot, Param_Instigator) == 0x000000, "Member 'BP_Tgf_Monster_C_GenerateLoot::Param_Instigator' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_GenerateLoot, RealLoot) == 0x000008, "Member 'BP_Tgf_Monster_C_GenerateLoot::RealLoot' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_GenerateLoot, CallFunc_GetPlayerStateFromObject_ReturnValue) == 0x000018, "Member 'BP_Tgf_Monster_C_GenerateLoot::CallFunc_GetPlayerStateFromObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_GenerateLoot, Temp_int_Array_Index_Variable) == 0x000020, "Member 'BP_Tgf_Monster_C_GenerateLoot::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_GenerateLoot, CallFunc_GetObjectClass_ReturnValue) == 0x000028, "Member 'BP_Tgf_Monster_C_GenerateLoot::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_GenerateLoot, CallFunc_GetClassDisplayName_ReturnValue) == 0x000030, "Member 'BP_Tgf_Monster_C_GenerateLoot::CallFunc_GetClassDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_GenerateLoot, CallFunc_GetDisplayName_ReturnValue) == 0x000040, "Member 'BP_Tgf_Monster_C_GenerateLoot::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_GenerateLoot, CallFunc_Conv_StringToText_ReturnValue) == 0x000050, "Member 'BP_Tgf_Monster_C_GenerateLoot::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_GenerateLoot, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000068, "Member 'BP_Tgf_Monster_C_GenerateLoot::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_GenerateLoot, K2Node_MakeStruct_FormatArgumentData) == 0x000080, "Member 'BP_Tgf_Monster_C_GenerateLoot::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_GenerateLoot, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000D0, "Member 'BP_Tgf_Monster_C_GenerateLoot::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_GenerateLoot, K2Node_MakeArray_Array) == 0x000120, "Member 'BP_Tgf_Monster_C_GenerateLoot::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_GenerateLoot, Temp_int_Loop_Counter_Variable) == 0x000130, "Member 'BP_Tgf_Monster_C_GenerateLoot::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_GenerateLoot, CallFunc_Format_ReturnValue) == 0x000138, "Member 'BP_Tgf_Monster_C_GenerateLoot::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_GenerateLoot, CallFunc_Add_IntInt_ReturnValue) == 0x000150, "Member 'BP_Tgf_Monster_C_GenerateLoot::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_GenerateLoot, CallFunc_GetWorldSubsystem_ReturnValue) == 0x000158, "Member 'BP_Tgf_Monster_C_GenerateLoot::CallFunc_GetWorldSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_GenerateLoot, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000160, "Member 'BP_Tgf_Monster_C_GenerateLoot::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_GenerateLoot, CallFunc_GetPlayerStatesWithSameTeam_ReturnValue) == 0x000168, "Member 'BP_Tgf_Monster_C_GenerateLoot::CallFunc_GetPlayerStatesWithSameTeam_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_GenerateLoot, CallFunc_Conv_IntToByte_ReturnValue) == 0x000178, "Member 'BP_Tgf_Monster_C_GenerateLoot::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_GenerateLoot, CallFunc_Loot_ReturnValue) == 0x000180, "Member 'BP_Tgf_Monster_C_GenerateLoot::CallFunc_Loot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_GenerateLoot, CallFunc_GetComponentByClass_ReturnValue) == 0x000190, "Member 'BP_Tgf_Monster_C_GenerateLoot::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_GenerateLoot, CallFunc_Array_Get_Item) == 0x000198, "Member 'BP_Tgf_Monster_C_GenerateLoot::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_GenerateLoot, CallFunc_IsValid_ReturnValue) == 0x0001A0, "Member 'BP_Tgf_Monster_C_GenerateLoot::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_GenerateLoot, CallFunc_GetItemDef_ReturnValue) == 0x0001A8, "Member 'BP_Tgf_Monster_C_GenerateLoot::CallFunc_GetItemDef_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_GenerateLoot, CallFunc_FindFragmentByClass_ReturnValue) == 0x0001B0, "Member 'BP_Tgf_Monster_C_GenerateLoot::CallFunc_FindFragmentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_GenerateLoot, K2Node_ClassDynamicCast_AsTgf_Inventory_Item_Definition) == 0x0001B8, "Member 'BP_Tgf_Monster_C_GenerateLoot::K2Node_ClassDynamicCast_AsTgf_Inventory_Item_Definition' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_GenerateLoot, K2Node_ClassDynamicCast_bSuccess) == 0x0001C0, "Member 'BP_Tgf_Monster_C_GenerateLoot::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_GenerateLoot, CallFunc_Greater_ByteByte_ReturnValue) == 0x0001C1, "Member 'BP_Tgf_Monster_C_GenerateLoot::CallFunc_Greater_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_GenerateLoot, CallFunc_Array_Contains_ReturnValue) == 0x0001C2, "Member 'BP_Tgf_Monster_C_GenerateLoot::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_GenerateLoot, CallFunc_Array_Length_ReturnValue) == 0x0001C4, "Member 'BP_Tgf_Monster_C_GenerateLoot::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_GenerateLoot, CallFunc_Less_IntInt_ReturnValue) == 0x0001C8, "Member 'BP_Tgf_Monster_C_GenerateLoot::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_Tgf_Monster.BP_Tgf_Monster_C.Get Location by Spawn Offset
// 0x0060 (0x0060 - 0x0000)
struct BP_Tgf_Monster_C_Get_Location_by_Spawn_Offset final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Result;                                            // 0x0018(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Tgf_Monster_C_Get_Location_by_Spawn_Offset) == 0x000008, "Wrong alignment on BP_Tgf_Monster_C_Get_Location_by_Spawn_Offset");
static_assert(sizeof(BP_Tgf_Monster_C_Get_Location_by_Spawn_Offset) == 0x000060, "Wrong size on BP_Tgf_Monster_C_Get_Location_by_Spawn_Offset");
static_assert(offsetof(BP_Tgf_Monster_C_Get_Location_by_Spawn_Offset, Location) == 0x000000, "Member 'BP_Tgf_Monster_C_Get_Location_by_Spawn_Offset::Location' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_Get_Location_by_Spawn_Offset, Result) == 0x000018, "Member 'BP_Tgf_Monster_C_Get_Location_by_Spawn_Offset::Result' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_Get_Location_by_Spawn_Offset, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000030, "Member 'BP_Tgf_Monster_C_Get_Location_by_Spawn_Offset::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_Get_Location_by_Spawn_Offset, CallFunc_Add_VectorVector_ReturnValue) == 0x000048, "Member 'BP_Tgf_Monster_C_Get_Location_by_Spawn_Offset::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");

// Function BP_Tgf_Monster.BP_Tgf_Monster_C.GetAbilityActivateRange
// 0x0038 (0x0038 - 0x0000)
struct BP_Tgf_Monster_C_GetAbilityActivateRange final
{
public:
	class UClass*                                 Ability;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Result;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsTgf_Gameplay_Ability;    // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTgfGameplayAbility*                    CallFunc_GetClassDefaultObject_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_FunctionResult_Result_ImplicitCast;         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Tgf_Monster_C_GetAbilityActivateRange) == 0x000008, "Wrong alignment on BP_Tgf_Monster_C_GetAbilityActivateRange");
static_assert(sizeof(BP_Tgf_Monster_C_GetAbilityActivateRange) == 0x000038, "Wrong size on BP_Tgf_Monster_C_GetAbilityActivateRange");
static_assert(offsetof(BP_Tgf_Monster_C_GetAbilityActivateRange, Ability) == 0x000000, "Member 'BP_Tgf_Monster_C_GetAbilityActivateRange::Ability' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_GetAbilityActivateRange, Result) == 0x000008, "Member 'BP_Tgf_Monster_C_GetAbilityActivateRange::Result' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_GetAbilityActivateRange, K2Node_ClassDynamicCast_AsTgf_Gameplay_Ability) == 0x000010, "Member 'BP_Tgf_Monster_C_GetAbilityActivateRange::K2Node_ClassDynamicCast_AsTgf_Gameplay_Ability' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_GetAbilityActivateRange, K2Node_ClassDynamicCast_bSuccess) == 0x000018, "Member 'BP_Tgf_Monster_C_GetAbilityActivateRange::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_GetAbilityActivateRange, CallFunc_GetClassDefaultObject_ReturnValue) == 0x000020, "Member 'BP_Tgf_Monster_C_GetAbilityActivateRange::CallFunc_GetClassDefaultObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_GetAbilityActivateRange, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BP_Tgf_Monster_C_GetAbilityActivateRange::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_GetAbilityActivateRange, K2Node_FunctionResult_Result_ImplicitCast) == 0x000030, "Member 'BP_Tgf_Monster_C_GetAbilityActivateRange::K2Node_FunctionResult_Result_ImplicitCast' has a wrong offset!");

// Function BP_Tgf_Monster.BP_Tgf_Monster_C.GetCombatTime
// 0x0018 (0x0018 - 0x0000)
struct BP_Tgf_Monster_C_GetCombatTime final
{
public:
	double                                        Result;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetTimeSeconds_ReturnValue;               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Tgf_Monster_C_GetCombatTime) == 0x000008, "Wrong alignment on BP_Tgf_Monster_C_GetCombatTime");
static_assert(sizeof(BP_Tgf_Monster_C_GetCombatTime) == 0x000018, "Wrong size on BP_Tgf_Monster_C_GetCombatTime");
static_assert(offsetof(BP_Tgf_Monster_C_GetCombatTime, Result) == 0x000000, "Member 'BP_Tgf_Monster_C_GetCombatTime::Result' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_GetCombatTime, CallFunc_GetTimeSeconds_ReturnValue) == 0x000008, "Member 'BP_Tgf_Monster_C_GetCombatTime::CallFunc_GetTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_GetCombatTime, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000010, "Member 'BP_Tgf_Monster_C_GetCombatTime::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");

// Function BP_Tgf_Monster.BP_Tgf_Monster_C.GetDebugInfoString
// 0x0330 (0x0330 - 0x0000)
struct BP_Tgf_Monster_C_GetDebugInfoString final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
	class FString                                 TeamThreatList;                                    // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 ThreatList;                                        // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0040(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0058(0x0050)(HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x00B0(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00C8(0x0050)(HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11C[0x4];                                      // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0120(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0130(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0148(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TMap<class AActor*, float>                    CallFunc_GetTeamThreatList_ReturnValue;            // 0x0158(0x0050)()
	TMap<class AActor*, float>                    CallFunc_GetThreatList_ReturnValue;                // 0x01A8(0x0050)()
	TArray<class AActor*>                         CallFunc_Map_Keys_Keys;                            // 0x01F8(0x0010)(ReferenceParm)
	TArray<class AActor*>                         CallFunc_Map_Keys_Keys_1;                          // 0x0208(0x0010)(ReferenceParm)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0218(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item_1;                         // 0x0220(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Map_Find_Value;                           // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x022C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22D[0x3];                                      // 0x022D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Map_Find_Value_1;                         // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x0234(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_235[0x3];                                      // 0x0235(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue;          // 0x0238(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue_1;        // 0x0248(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0258(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue_1;             // 0x0268(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0278(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0288(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0298(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x02A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x02B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x02C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x02D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2DC[0x4];                                      // 0x02DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_6;              // 0x02E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x02F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F1[0x3];                                      // 0x02F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x02F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x02F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F9[0x7];                                      // 0x02F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_7;              // 0x0300(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDebugInfoString_ReturnValue;           // 0x0310(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_DoubleToString_InDouble_ImplicitCast; // 0x0320(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_DoubleToString_InDouble_ImplicitCast_1; // 0x0328(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Tgf_Monster_C_GetDebugInfoString) == 0x000008, "Wrong alignment on BP_Tgf_Monster_C_GetDebugInfoString");
static_assert(sizeof(BP_Tgf_Monster_C_GetDebugInfoString) == 0x000330, "Wrong size on BP_Tgf_Monster_C_GetDebugInfoString");
static_assert(offsetof(BP_Tgf_Monster_C_GetDebugInfoString, ReturnValue) == 0x000000, "Member 'BP_Tgf_Monster_C_GetDebugInfoString::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_GetDebugInfoString, TeamThreatList) == 0x000010, "Member 'BP_Tgf_Monster_C_GetDebugInfoString::TeamThreatList' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_GetDebugInfoString, ThreatList) == 0x000020, "Member 'BP_Tgf_Monster_C_GetDebugInfoString::ThreatList' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_GetDebugInfoString, Temp_int_Array_Index_Variable) == 0x000030, "Member 'BP_Tgf_Monster_C_GetDebugInfoString::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_GetDebugInfoString, Temp_int_Loop_Counter_Variable) == 0x000034, "Member 'BP_Tgf_Monster_C_GetDebugInfoString::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_GetDebugInfoString, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'BP_Tgf_Monster_C_GetDebugInfoString::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_GetDebugInfoString, Temp_int_Array_Index_Variable_1) == 0x00003C, "Member 'BP_Tgf_Monster_C_GetDebugInfoString::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_GetDebugInfoString, CallFunc_Conv_StringToText_ReturnValue) == 0x000040, "Member 'BP_Tgf_Monster_C_GetDebugInfoString::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_GetDebugInfoString, K2Node_MakeStruct_FormatArgumentData) == 0x000058, "Member 'BP_Tgf_Monster_C_GetDebugInfoString::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_GetDebugInfoString, Temp_int_Loop_Counter_Variable_1) == 0x0000A8, "Member 'BP_Tgf_Monster_C_GetDebugInfoString::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_GetDebugInfoString, CallFunc_Conv_StringToText_ReturnValue_1) == 0x0000B0, "Member 'BP_Tgf_Monster_C_GetDebugInfoString::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_GetDebugInfoString, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000C8, "Member 'BP_Tgf_Monster_C_GetDebugInfoString::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_GetDebugInfoString, CallFunc_Add_IntInt_ReturnValue_1) == 0x000118, "Member 'BP_Tgf_Monster_C_GetDebugInfoString::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_GetDebugInfoString, K2Node_MakeArray_Array) == 0x000120, "Member 'BP_Tgf_Monster_C_GetDebugInfoString::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_GetDebugInfoString, CallFunc_Format_ReturnValue) == 0x000130, "Member 'BP_Tgf_Monster_C_GetDebugInfoString::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_GetDebugInfoString, CallFunc_Conv_TextToString_ReturnValue) == 0x000148, "Member 'BP_Tgf_Monster_C_GetDebugInfoString::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_GetDebugInfoString, CallFunc_GetTeamThreatList_ReturnValue) == 0x000158, "Member 'BP_Tgf_Monster_C_GetDebugInfoString::CallFunc_GetTeamThreatList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_GetDebugInfoString, CallFunc_GetThreatList_ReturnValue) == 0x0001A8, "Member 'BP_Tgf_Monster_C_GetDebugInfoString::CallFunc_GetThreatList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_GetDebugInfoString, CallFunc_Map_Keys_Keys) == 0x0001F8, "Member 'BP_Tgf_Monster_C_GetDebugInfoString::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_GetDebugInfoString, CallFunc_Map_Keys_Keys_1) == 0x000208, "Member 'BP_Tgf_Monster_C_GetDebugInfoString::CallFunc_Map_Keys_Keys_1' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_GetDebugInfoString, CallFunc_Array_Get_Item) == 0x000218, "Member 'BP_Tgf_Monster_C_GetDebugInfoString::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_GetDebugInfoString, CallFunc_Array_Get_Item_1) == 0x000220, "Member 'BP_Tgf_Monster_C_GetDebugInfoString::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_GetDebugInfoString, CallFunc_Map_Find_Value) == 0x000228, "Member 'BP_Tgf_Monster_C_GetDebugInfoString::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_GetDebugInfoString, CallFunc_Map_Find_ReturnValue) == 0x00022C, "Member 'BP_Tgf_Monster_C_GetDebugInfoString::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_GetDebugInfoString, CallFunc_Map_Find_Value_1) == 0x000230, "Member 'BP_Tgf_Monster_C_GetDebugInfoString::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_GetDebugInfoString, CallFunc_Map_Find_ReturnValue_1) == 0x000234, "Member 'BP_Tgf_Monster_C_GetDebugInfoString::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_GetDebugInfoString, CallFunc_Conv_DoubleToString_ReturnValue) == 0x000238, "Member 'BP_Tgf_Monster_C_GetDebugInfoString::CallFunc_Conv_DoubleToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_GetDebugInfoString, CallFunc_Conv_DoubleToString_ReturnValue_1) == 0x000248, "Member 'BP_Tgf_Monster_C_GetDebugInfoString::CallFunc_Conv_DoubleToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_GetDebugInfoString, CallFunc_GetDisplayName_ReturnValue) == 0x000258, "Member 'BP_Tgf_Monster_C_GetDebugInfoString::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_GetDebugInfoString, CallFunc_GetDisplayName_ReturnValue_1) == 0x000268, "Member 'BP_Tgf_Monster_C_GetDebugInfoString::CallFunc_GetDisplayName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_GetDebugInfoString, CallFunc_Concat_StrStr_ReturnValue) == 0x000278, "Member 'BP_Tgf_Monster_C_GetDebugInfoString::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_GetDebugInfoString, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000288, "Member 'BP_Tgf_Monster_C_GetDebugInfoString::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_GetDebugInfoString, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000298, "Member 'BP_Tgf_Monster_C_GetDebugInfoString::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_GetDebugInfoString, CallFunc_Concat_StrStr_ReturnValue_3) == 0x0002A8, "Member 'BP_Tgf_Monster_C_GetDebugInfoString::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_GetDebugInfoString, CallFunc_Concat_StrStr_ReturnValue_4) == 0x0002B8, "Member 'BP_Tgf_Monster_C_GetDebugInfoString::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_GetDebugInfoString, CallFunc_Concat_StrStr_ReturnValue_5) == 0x0002C8, "Member 'BP_Tgf_Monster_C_GetDebugInfoString::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_GetDebugInfoString, CallFunc_Array_Length_ReturnValue) == 0x0002D8, "Member 'BP_Tgf_Monster_C_GetDebugInfoString::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_GetDebugInfoString, CallFunc_Concat_StrStr_ReturnValue_6) == 0x0002E0, "Member 'BP_Tgf_Monster_C_GetDebugInfoString::CallFunc_Concat_StrStr_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_GetDebugInfoString, CallFunc_Less_IntInt_ReturnValue) == 0x0002F0, "Member 'BP_Tgf_Monster_C_GetDebugInfoString::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_GetDebugInfoString, CallFunc_Array_Length_ReturnValue_1) == 0x0002F4, "Member 'BP_Tgf_Monster_C_GetDebugInfoString::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_GetDebugInfoString, CallFunc_Less_IntInt_ReturnValue_1) == 0x0002F8, "Member 'BP_Tgf_Monster_C_GetDebugInfoString::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_GetDebugInfoString, CallFunc_Concat_StrStr_ReturnValue_7) == 0x000300, "Member 'BP_Tgf_Monster_C_GetDebugInfoString::CallFunc_Concat_StrStr_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_GetDebugInfoString, CallFunc_GetDebugInfoString_ReturnValue) == 0x000310, "Member 'BP_Tgf_Monster_C_GetDebugInfoString::CallFunc_GetDebugInfoString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_GetDebugInfoString, CallFunc_Conv_DoubleToString_InDouble_ImplicitCast) == 0x000320, "Member 'BP_Tgf_Monster_C_GetDebugInfoString::CallFunc_Conv_DoubleToString_InDouble_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_GetDebugInfoString, CallFunc_Conv_DoubleToString_InDouble_ImplicitCast_1) == 0x000328, "Member 'BP_Tgf_Monster_C_GetDebugInfoString::CallFunc_Conv_DoubleToString_InDouble_ImplicitCast_1' has a wrong offset!");

// Function BP_Tgf_Monster.BP_Tgf_Monster_C.GetDormantAbility
// 0x0040 (0x0040 - 0x0000)
struct BP_Tgf_Monster_C_GetDormantAbility final
{
public:
	class UClass*                                 ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
	struct FTGF_FDormantEntry                     K2Node_MakeStruct_TGF_FDormantEntry;               // 0x0008(0x0030)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDormantIndexValid_ReturnValue;          // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Tgf_Monster_C_GetDormantAbility) == 0x000008, "Wrong alignment on BP_Tgf_Monster_C_GetDormantAbility");
static_assert(sizeof(BP_Tgf_Monster_C_GetDormantAbility) == 0x000040, "Wrong size on BP_Tgf_Monster_C_GetDormantAbility");
static_assert(offsetof(BP_Tgf_Monster_C_GetDormantAbility, ReturnValue) == 0x000000, "Member 'BP_Tgf_Monster_C_GetDormantAbility::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_GetDormantAbility, K2Node_MakeStruct_TGF_FDormantEntry) == 0x000008, "Member 'BP_Tgf_Monster_C_GetDormantAbility::K2Node_MakeStruct_TGF_FDormantEntry' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_GetDormantAbility, CallFunc_IsDormantIndexValid_ReturnValue) == 0x000038, "Member 'BP_Tgf_Monster_C_GetDormantAbility::CallFunc_IsDormantIndexValid_ReturnValue' has a wrong offset!");

// Function BP_Tgf_Monster.BP_Tgf_Monster_C.GetDormantIndex
// 0x0004 (0x0004 - 0x0000)
struct BP_Tgf_Monster_C_GetDormantIndex final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Tgf_Monster_C_GetDormantIndex) == 0x000004, "Wrong alignment on BP_Tgf_Monster_C_GetDormantIndex");
static_assert(sizeof(BP_Tgf_Monster_C_GetDormantIndex) == 0x000004, "Wrong size on BP_Tgf_Monster_C_GetDormantIndex");
static_assert(offsetof(BP_Tgf_Monster_C_GetDormantIndex, ReturnValue) == 0x000000, "Member 'BP_Tgf_Monster_C_GetDormantIndex::ReturnValue' has a wrong offset!");

// Function BP_Tgf_Monster.BP_Tgf_Monster_C.GetDormantSightPeripheralVisionAngleDegrees
// 0x0040 (0x0040 - 0x0000)
struct BP_Tgf_Monster_C_GetDormantSightPeripheralVisionAngleDegrees final
{
public:
	double                                        Result;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDormantIndexValid_ReturnValue;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTGF_FDormantEntry                     K2Node_MakeStruct_TGF_FDormantEntry;               // 0x0010(0x0030)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Tgf_Monster_C_GetDormantSightPeripheralVisionAngleDegrees) == 0x000008, "Wrong alignment on BP_Tgf_Monster_C_GetDormantSightPeripheralVisionAngleDegrees");
static_assert(sizeof(BP_Tgf_Monster_C_GetDormantSightPeripheralVisionAngleDegrees) == 0x000040, "Wrong size on BP_Tgf_Monster_C_GetDormantSightPeripheralVisionAngleDegrees");
static_assert(offsetof(BP_Tgf_Monster_C_GetDormantSightPeripheralVisionAngleDegrees, Result) == 0x000000, "Member 'BP_Tgf_Monster_C_GetDormantSightPeripheralVisionAngleDegrees::Result' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_GetDormantSightPeripheralVisionAngleDegrees, CallFunc_IsDormantIndexValid_ReturnValue) == 0x000008, "Member 'BP_Tgf_Monster_C_GetDormantSightPeripheralVisionAngleDegrees::CallFunc_IsDormantIndexValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_GetDormantSightPeripheralVisionAngleDegrees, K2Node_MakeStruct_TGF_FDormantEntry) == 0x000010, "Member 'BP_Tgf_Monster_C_GetDormantSightPeripheralVisionAngleDegrees::K2Node_MakeStruct_TGF_FDormantEntry' has a wrong offset!");

// Function BP_Tgf_Monster.BP_Tgf_Monster_C.GetDormantSightRadius
// 0x0050 (0x0050 - 0x0000)
struct BP_Tgf_Monster_C_GetDormantSightRadius final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        SightRadius;                                       // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDormantIndexValid_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTGF_FDormantEntry                     K2Node_MakeStruct_TGF_FDormantEntry;               // 0x0018(0x0030)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Tgf_Monster_C_GetDormantSightRadius) == 0x000008, "Wrong alignment on BP_Tgf_Monster_C_GetDormantSightRadius");
static_assert(sizeof(BP_Tgf_Monster_C_GetDormantSightRadius) == 0x000050, "Wrong size on BP_Tgf_Monster_C_GetDormantSightRadius");
static_assert(offsetof(BP_Tgf_Monster_C_GetDormantSightRadius, ReturnValue) == 0x000000, "Member 'BP_Tgf_Monster_C_GetDormantSightRadius::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_GetDormantSightRadius, SightRadius) == 0x000008, "Member 'BP_Tgf_Monster_C_GetDormantSightRadius::SightRadius' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_GetDormantSightRadius, CallFunc_IsDormantIndexValid_ReturnValue) == 0x000010, "Member 'BP_Tgf_Monster_C_GetDormantSightRadius::CallFunc_IsDormantIndexValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_GetDormantSightRadius, K2Node_MakeStruct_TGF_FDormantEntry) == 0x000018, "Member 'BP_Tgf_Monster_C_GetDormantSightRadius::K2Node_MakeStruct_TGF_FDormantEntry' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_GetDormantSightRadius, CallFunc_IsValid_ReturnValue) == 0x000048, "Member 'BP_Tgf_Monster_C_GetDormantSightRadius::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_GetDormantSightRadius, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000049, "Member 'BP_Tgf_Monster_C_GetDormantSightRadius::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");

// Function BP_Tgf_Monster.BP_Tgf_Monster_C.GetDormantWakeUpAbility
// 0x0040 (0x0040 - 0x0000)
struct BP_Tgf_Monster_C_GetDormantWakeUpAbility final
{
public:
	class UClass*                                 ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
	struct FTGF_FDormantEntry                     K2Node_MakeStruct_TGF_FDormantEntry;               // 0x0008(0x0030)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDormantIndexValid_ReturnValue;          // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Tgf_Monster_C_GetDormantWakeUpAbility) == 0x000008, "Wrong alignment on BP_Tgf_Monster_C_GetDormantWakeUpAbility");
static_assert(sizeof(BP_Tgf_Monster_C_GetDormantWakeUpAbility) == 0x000040, "Wrong size on BP_Tgf_Monster_C_GetDormantWakeUpAbility");
static_assert(offsetof(BP_Tgf_Monster_C_GetDormantWakeUpAbility, ReturnValue) == 0x000000, "Member 'BP_Tgf_Monster_C_GetDormantWakeUpAbility::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_GetDormantWakeUpAbility, K2Node_MakeStruct_TGF_FDormantEntry) == 0x000008, "Member 'BP_Tgf_Monster_C_GetDormantWakeUpAbility::K2Node_MakeStruct_TGF_FDormantEntry' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_GetDormantWakeUpAbility, CallFunc_IsDormantIndexValid_ReturnValue) == 0x000038, "Member 'BP_Tgf_Monster_C_GetDormantWakeUpAbility::CallFunc_IsDormantIndexValid_ReturnValue' has a wrong offset!");

// Function BP_Tgf_Monster.BP_Tgf_Monster_C.GetTargetActor
// 0x0048 (0x0048 - 0x0000)
struct BP_Tgf_Monster_C_GetTargetActor final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   AbilityTarget;                                     // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AAIController*                          K2Node_DynamicCast_AsAIController;                 // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_GetValueAsObject_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_DynamicCast_AsActor;                        // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Tgf_Monster_C_GetTargetActor) == 0x000008, "Wrong alignment on BP_Tgf_Monster_C_GetTargetActor");
static_assert(sizeof(BP_Tgf_Monster_C_GetTargetActor) == 0x000048, "Wrong size on BP_Tgf_Monster_C_GetTargetActor");
static_assert(offsetof(BP_Tgf_Monster_C_GetTargetActor, Actor) == 0x000000, "Member 'BP_Tgf_Monster_C_GetTargetActor::Actor' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_GetTargetActor, AbilityTarget) == 0x000008, "Member 'BP_Tgf_Monster_C_GetTargetActor::AbilityTarget' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_GetTargetActor, CallFunc_GetController_ReturnValue) == 0x000010, "Member 'BP_Tgf_Monster_C_GetTargetActor::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_GetTargetActor, K2Node_DynamicCast_AsAIController) == 0x000018, "Member 'BP_Tgf_Monster_C_GetTargetActor::K2Node_DynamicCast_AsAIController' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_GetTargetActor, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_Tgf_Monster_C_GetTargetActor::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_GetTargetActor, CallFunc_GetValueAsObject_ReturnValue) == 0x000028, "Member 'BP_Tgf_Monster_C_GetTargetActor::CallFunc_GetValueAsObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_GetTargetActor, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BP_Tgf_Monster_C_GetTargetActor::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_GetTargetActor, K2Node_DynamicCast_AsActor) == 0x000038, "Member 'BP_Tgf_Monster_C_GetTargetActor::K2Node_DynamicCast_AsActor' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_GetTargetActor, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'BP_Tgf_Monster_C_GetTargetActor::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function BP_Tgf_Monster.BP_Tgf_Monster_C.GetTargetLocation
// 0x0058 (0x0058 - 0x0000)
struct BP_Tgf_Monster_C_GetTargetLocation final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   AbilityTargetLocation;                             // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AAIController*                          K2Node_DynamicCast_AsAIController;                 // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetValueAsVector_ReturnValue;             // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Tgf_Monster_C_GetTargetLocation) == 0x000008, "Wrong alignment on BP_Tgf_Monster_C_GetTargetLocation");
static_assert(sizeof(BP_Tgf_Monster_C_GetTargetLocation) == 0x000058, "Wrong size on BP_Tgf_Monster_C_GetTargetLocation");
static_assert(offsetof(BP_Tgf_Monster_C_GetTargetLocation, Location) == 0x000000, "Member 'BP_Tgf_Monster_C_GetTargetLocation::Location' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_GetTargetLocation, AbilityTargetLocation) == 0x000018, "Member 'BP_Tgf_Monster_C_GetTargetLocation::AbilityTargetLocation' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_GetTargetLocation, CallFunc_GetController_ReturnValue) == 0x000020, "Member 'BP_Tgf_Monster_C_GetTargetLocation::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_GetTargetLocation, K2Node_DynamicCast_AsAIController) == 0x000028, "Member 'BP_Tgf_Monster_C_GetTargetLocation::K2Node_DynamicCast_AsAIController' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_GetTargetLocation, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_Tgf_Monster_C_GetTargetLocation::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_GetTargetLocation, CallFunc_GetValueAsVector_ReturnValue) == 0x000038, "Member 'BP_Tgf_Monster_C_GetTargetLocation::CallFunc_GetValueAsVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_GetTargetLocation, CallFunc_IsValid_ReturnValue) == 0x000050, "Member 'BP_Tgf_Monster_C_GetTargetLocation::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_Tgf_Monster.BP_Tgf_Monster_C.GetTargetLocationClient
// 0x0040 (0x0040 - 0x0000)
struct BP_Tgf_Monster_C_GetTargetLocationClient final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bHasTarget;                                        // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Tgf_Monster_C_GetTargetLocationClient) == 0x000008, "Wrong alignment on BP_Tgf_Monster_C_GetTargetLocationClient");
static_assert(sizeof(BP_Tgf_Monster_C_GetTargetLocationClient) == 0x000040, "Wrong size on BP_Tgf_Monster_C_GetTargetLocationClient");
static_assert(offsetof(BP_Tgf_Monster_C_GetTargetLocationClient, Location) == 0x000000, "Member 'BP_Tgf_Monster_C_GetTargetLocationClient::Location' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_GetTargetLocationClient, bHasTarget) == 0x000018, "Member 'BP_Tgf_Monster_C_GetTargetLocationClient::bHasTarget' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_GetTargetLocationClient, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000020, "Member 'BP_Tgf_Monster_C_GetTargetLocationClient::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_GetTargetLocationClient, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'BP_Tgf_Monster_C_GetTargetLocationClient::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_Tgf_Monster.BP_Tgf_Monster_C.GetWanderRadius
// 0x0010 (0x0010 - 0x0000)
struct BP_Tgf_Monster_C_GetWanderRadius final
{
public:
	double                                        Result;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Tgf_Monster_C_GetWanderRadius) == 0x000008, "Wrong alignment on BP_Tgf_Monster_C_GetWanderRadius");
static_assert(sizeof(BP_Tgf_Monster_C_GetWanderRadius) == 0x000010, "Wrong size on BP_Tgf_Monster_C_GetWanderRadius");
static_assert(offsetof(BP_Tgf_Monster_C_GetWanderRadius, Result) == 0x000000, "Member 'BP_Tgf_Monster_C_GetWanderRadius::Result' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_GetWanderRadius, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_Tgf_Monster_C_GetWanderRadius::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_GetWanderRadius, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000009, "Member 'BP_Tgf_Monster_C_GetWanderRadius::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");

// Function BP_Tgf_Monster.BP_Tgf_Monster_C.HasAnySpeedMod
// 0x0002 (0x0002 - 0x0000)
struct BP_Tgf_Monster_C_HasAnySpeedMod final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Tgf_Monster_C_HasAnySpeedMod) == 0x000001, "Wrong alignment on BP_Tgf_Monster_C_HasAnySpeedMod");
static_assert(sizeof(BP_Tgf_Monster_C_HasAnySpeedMod) == 0x000002, "Wrong size on BP_Tgf_Monster_C_HasAnySpeedMod");
static_assert(offsetof(BP_Tgf_Monster_C_HasAnySpeedMod, Result) == 0x000000, "Member 'BP_Tgf_Monster_C_HasAnySpeedMod::Result' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_HasAnySpeedMod, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'BP_Tgf_Monster_C_HasAnySpeedMod::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_Tgf_Monster.BP_Tgf_Monster_C.HasAnyTurnSpeedMod
// 0x0002 (0x0002 - 0x0000)
struct BP_Tgf_Monster_C_HasAnyTurnSpeedMod final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Tgf_Monster_C_HasAnyTurnSpeedMod) == 0x000001, "Wrong alignment on BP_Tgf_Monster_C_HasAnyTurnSpeedMod");
static_assert(sizeof(BP_Tgf_Monster_C_HasAnyTurnSpeedMod) == 0x000002, "Wrong size on BP_Tgf_Monster_C_HasAnyTurnSpeedMod");
static_assert(offsetof(BP_Tgf_Monster_C_HasAnyTurnSpeedMod, Result) == 0x000000, "Member 'BP_Tgf_Monster_C_HasAnyTurnSpeedMod::Result' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_HasAnyTurnSpeedMod, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'BP_Tgf_Monster_C_HasAnyTurnSpeedMod::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_Tgf_Monster.BP_Tgf_Monster_C.HasSpeedMod
// 0x000C (0x000C - 0x0000)
struct BP_Tgf_Monster_C_HasSpeedMod final
{
public:
	struct FGameplayTag                           Tag;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasTag_ReturnValue;                       // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Tgf_Monster_C_HasSpeedMod) == 0x000004, "Wrong alignment on BP_Tgf_Monster_C_HasSpeedMod");
static_assert(sizeof(BP_Tgf_Monster_C_HasSpeedMod) == 0x00000C, "Wrong size on BP_Tgf_Monster_C_HasSpeedMod");
static_assert(offsetof(BP_Tgf_Monster_C_HasSpeedMod, Tag) == 0x000000, "Member 'BP_Tgf_Monster_C_HasSpeedMod::Tag' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_HasSpeedMod, Result) == 0x000008, "Member 'BP_Tgf_Monster_C_HasSpeedMod::Result' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_HasSpeedMod, CallFunc_HasTag_ReturnValue) == 0x000009, "Member 'BP_Tgf_Monster_C_HasSpeedMod::CallFunc_HasTag_ReturnValue' has a wrong offset!");

// Function BP_Tgf_Monster.BP_Tgf_Monster_C.HasTurnSpeedMod
// 0x000C (0x000C - 0x0000)
struct BP_Tgf_Monster_C_HasTurnSpeedMod final
{
public:
	struct FGameplayTag                           Tag;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasTag_ReturnValue;                       // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Tgf_Monster_C_HasTurnSpeedMod) == 0x000004, "Wrong alignment on BP_Tgf_Monster_C_HasTurnSpeedMod");
static_assert(sizeof(BP_Tgf_Monster_C_HasTurnSpeedMod) == 0x00000C, "Wrong size on BP_Tgf_Monster_C_HasTurnSpeedMod");
static_assert(offsetof(BP_Tgf_Monster_C_HasTurnSpeedMod, Tag) == 0x000000, "Member 'BP_Tgf_Monster_C_HasTurnSpeedMod::Tag' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_HasTurnSpeedMod, Result) == 0x000008, "Member 'BP_Tgf_Monster_C_HasTurnSpeedMod::Result' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_HasTurnSpeedMod, CallFunc_HasTag_ReturnValue) == 0x000009, "Member 'BP_Tgf_Monster_C_HasTurnSpeedMod::CallFunc_HasTag_ReturnValue' has a wrong offset!");

// Function BP_Tgf_Monster.BP_Tgf_Monster_C.InitCurGA
// 0x0018 (0x0018 - 0x0000)
struct BP_Tgf_Monster_C_InitCurGA final
{
public:
	class UTgfGameplayAbility*                    InputGA;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         ResultIndex;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Remove_ReturnValue;                   // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Contains_ReturnValue;                 // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F[0x1];                                        // 0x000F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Tgf_Monster_C_InitCurGA) == 0x000008, "Wrong alignment on BP_Tgf_Monster_C_InitCurGA");
static_assert(sizeof(BP_Tgf_Monster_C_InitCurGA) == 0x000018, "Wrong size on BP_Tgf_Monster_C_InitCurGA");
static_assert(offsetof(BP_Tgf_Monster_C_InitCurGA, InputGA) == 0x000000, "Member 'BP_Tgf_Monster_C_InitCurGA::InputGA' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_InitCurGA, ResultIndex) == 0x000008, "Member 'BP_Tgf_Monster_C_InitCurGA::ResultIndex' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_InitCurGA, CallFunc_Map_Remove_ReturnValue) == 0x00000C, "Member 'BP_Tgf_Monster_C_InitCurGA::CallFunc_Map_Remove_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_InitCurGA, CallFunc_Map_Contains_ReturnValue) == 0x00000D, "Member 'BP_Tgf_Monster_C_InitCurGA::CallFunc_Map_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_InitCurGA, CallFunc_Greater_IntInt_ReturnValue) == 0x00000E, "Member 'BP_Tgf_Monster_C_InitCurGA::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_InitCurGA, Temp_int_Variable) == 0x000010, "Member 'BP_Tgf_Monster_C_InitCurGA::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_InitCurGA, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_Tgf_Monster_C_InitCurGA::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_Tgf_Monster.BP_Tgf_Monster_C.IsActivatingAbility
// 0x0002 (0x0002 - 0x0000)
struct BP_Tgf_Monster_C_IsActivatingAbility final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Tgf_Monster_C_IsActivatingAbility) == 0x000001, "Wrong alignment on BP_Tgf_Monster_C_IsActivatingAbility");
static_assert(sizeof(BP_Tgf_Monster_C_IsActivatingAbility) == 0x000002, "Wrong size on BP_Tgf_Monster_C_IsActivatingAbility");
static_assert(offsetof(BP_Tgf_Monster_C_IsActivatingAbility, ReturnValue) == 0x000000, "Member 'BP_Tgf_Monster_C_IsActivatingAbility::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_IsActivatingAbility, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x000001, "Member 'BP_Tgf_Monster_C_IsActivatingAbility::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");

// Function BP_Tgf_Monster.BP_Tgf_Monster_C.IsDamaged
// 0x0030 (0x0030 - 0x0000)
struct BP_Tgf_Monster_C_IsDamaged final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_MakeGameplayTagContainerFromTag_ReturnValue; // 0x0008(0x0020)()
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue;   // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Tgf_Monster_C_IsDamaged) == 0x000008, "Wrong alignment on BP_Tgf_Monster_C_IsDamaged");
static_assert(sizeof(BP_Tgf_Monster_C_IsDamaged) == 0x000030, "Wrong size on BP_Tgf_Monster_C_IsDamaged");
static_assert(offsetof(BP_Tgf_Monster_C_IsDamaged, Result) == 0x000000, "Member 'BP_Tgf_Monster_C_IsDamaged::Result' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_IsDamaged, CallFunc_MakeGameplayTagContainerFromTag_ReturnValue) == 0x000008, "Member 'BP_Tgf_Monster_C_IsDamaged::CallFunc_MakeGameplayTagContainerFromTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_IsDamaged, CallFunc_HasAnyMatchingGameplayTags_ReturnValue) == 0x000028, "Member 'BP_Tgf_Monster_C_IsDamaged::CallFunc_HasAnyMatchingGameplayTags_ReturnValue' has a wrong offset!");

// Function BP_Tgf_Monster.BP_Tgf_Monster_C.IsDormant
// 0x0001 (0x0001 - 0x0000)
struct BP_Tgf_Monster_C_IsDormant final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Tgf_Monster_C_IsDormant) == 0x000001, "Wrong alignment on BP_Tgf_Monster_C_IsDormant");
static_assert(sizeof(BP_Tgf_Monster_C_IsDormant) == 0x000001, "Wrong size on BP_Tgf_Monster_C_IsDormant");
static_assert(offsetof(BP_Tgf_Monster_C_IsDormant, ReturnValue) == 0x000000, "Member 'BP_Tgf_Monster_C_IsDormant::ReturnValue' has a wrong offset!");

// Function BP_Tgf_Monster.BP_Tgf_Monster_C.IsDormantable
// 0x0005 (0x0005 - 0x0000)
struct BP_Tgf_Monster_C_IsDormantable final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDormantIndexValid_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Tgf_Monster_C_IsDormantable) == 0x000001, "Wrong alignment on BP_Tgf_Monster_C_IsDormantable");
static_assert(sizeof(BP_Tgf_Monster_C_IsDormantable) == 0x000005, "Wrong size on BP_Tgf_Monster_C_IsDormantable");
static_assert(offsetof(BP_Tgf_Monster_C_IsDormantable, Result) == 0x000000, "Member 'BP_Tgf_Monster_C_IsDormantable::Result' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_IsDormantable, CallFunc_IsDormantIndexValid_ReturnValue) == 0x000001, "Member 'BP_Tgf_Monster_C_IsDormantable::CallFunc_IsDormantIndexValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_IsDormantable, CallFunc_Greater_IntInt_ReturnValue) == 0x000002, "Member 'BP_Tgf_Monster_C_IsDormantable::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_IsDormantable, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000003, "Member 'BP_Tgf_Monster_C_IsDormantable::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_IsDormantable, CallFunc_BooleanOR_ReturnValue) == 0x000004, "Member 'BP_Tgf_Monster_C_IsDormantable::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_Tgf_Monster.BP_Tgf_Monster_C.IsDormantAnimationUsePose
// 0x0040 (0x0040 - 0x0000)
struct BP_Tgf_Monster_C_IsDormantAnimationUsePose final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTGF_FDormantEntry                     K2Node_MakeStruct_TGF_FDormantEntry;               // 0x0008(0x0030)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDormantIndexValid_ReturnValue;          // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Tgf_Monster_C_IsDormantAnimationUsePose) == 0x000008, "Wrong alignment on BP_Tgf_Monster_C_IsDormantAnimationUsePose");
static_assert(sizeof(BP_Tgf_Monster_C_IsDormantAnimationUsePose) == 0x000040, "Wrong size on BP_Tgf_Monster_C_IsDormantAnimationUsePose");
static_assert(offsetof(BP_Tgf_Monster_C_IsDormantAnimationUsePose, ReturnValue) == 0x000000, "Member 'BP_Tgf_Monster_C_IsDormantAnimationUsePose::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_IsDormantAnimationUsePose, K2Node_MakeStruct_TGF_FDormantEntry) == 0x000008, "Member 'BP_Tgf_Monster_C_IsDormantAnimationUsePose::K2Node_MakeStruct_TGF_FDormantEntry' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_IsDormantAnimationUsePose, CallFunc_IsDormantIndexValid_ReturnValue) == 0x000038, "Member 'BP_Tgf_Monster_C_IsDormantAnimationUsePose::CallFunc_IsDormantIndexValid_ReturnValue' has a wrong offset!");

// Function BP_Tgf_Monster.BP_Tgf_Monster_C.IsDormantAttackable
// 0x0040 (0x0040 - 0x0000)
struct BP_Tgf_Monster_C_IsDormantAttackable final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTGF_FDormantEntry                     K2Node_MakeStruct_TGF_FDormantEntry;               // 0x0008(0x0030)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDormantIndexValid_ReturnValue;          // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Tgf_Monster_C_IsDormantAttackable) == 0x000008, "Wrong alignment on BP_Tgf_Monster_C_IsDormantAttackable");
static_assert(sizeof(BP_Tgf_Monster_C_IsDormantAttackable) == 0x000040, "Wrong size on BP_Tgf_Monster_C_IsDormantAttackable");
static_assert(offsetof(BP_Tgf_Monster_C_IsDormantAttackable, ReturnValue) == 0x000000, "Member 'BP_Tgf_Monster_C_IsDormantAttackable::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_IsDormantAttackable, K2Node_MakeStruct_TGF_FDormantEntry) == 0x000008, "Member 'BP_Tgf_Monster_C_IsDormantAttackable::K2Node_MakeStruct_TGF_FDormantEntry' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_IsDormantAttackable, CallFunc_IsDormantIndexValid_ReturnValue) == 0x000038, "Member 'BP_Tgf_Monster_C_IsDormantAttackable::CallFunc_IsDormantIndexValid_ReturnValue' has a wrong offset!");

// Function BP_Tgf_Monster.BP_Tgf_Monster_C.IsDormantCollisionEnabled
// 0x0040 (0x0040 - 0x0000)
struct BP_Tgf_Monster_C_IsDormantCollisionEnabled final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTGF_FDormantEntry                     K2Node_MakeStruct_TGF_FDormantEntry;               // 0x0008(0x0030)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDormantIndexValid_ReturnValue;          // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Tgf_Monster_C_IsDormantCollisionEnabled) == 0x000008, "Wrong alignment on BP_Tgf_Monster_C_IsDormantCollisionEnabled");
static_assert(sizeof(BP_Tgf_Monster_C_IsDormantCollisionEnabled) == 0x000040, "Wrong size on BP_Tgf_Monster_C_IsDormantCollisionEnabled");
static_assert(offsetof(BP_Tgf_Monster_C_IsDormantCollisionEnabled, ReturnValue) == 0x000000, "Member 'BP_Tgf_Monster_C_IsDormantCollisionEnabled::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_IsDormantCollisionEnabled, K2Node_MakeStruct_TGF_FDormantEntry) == 0x000008, "Member 'BP_Tgf_Monster_C_IsDormantCollisionEnabled::K2Node_MakeStruct_TGF_FDormantEntry' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_IsDormantCollisionEnabled, CallFunc_IsDormantIndexValid_ReturnValue) == 0x000038, "Member 'BP_Tgf_Monster_C_IsDormantCollisionEnabled::CallFunc_IsDormantIndexValid_ReturnValue' has a wrong offset!");

// Function BP_Tgf_Monster.BP_Tgf_Monster_C.IsDormantIndexValid
// 0x000C (0x000C - 0x0000)
struct BP_Tgf_Monster_C_IsDormantIndexValid final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Tgf_Monster_C_IsDormantIndexValid) == 0x000004, "Wrong alignment on BP_Tgf_Monster_C_IsDormantIndexValid");
static_assert(sizeof(BP_Tgf_Monster_C_IsDormantIndexValid) == 0x00000C, "Wrong size on BP_Tgf_Monster_C_IsDormantIndexValid");
static_assert(offsetof(BP_Tgf_Monster_C_IsDormantIndexValid, ReturnValue) == 0x000000, "Member 'BP_Tgf_Monster_C_IsDormantIndexValid::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_IsDormantIndexValid, CallFunc_Array_Length_ReturnValue) == 0x000004, "Member 'BP_Tgf_Monster_C_IsDormantIndexValid::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_IsDormantIndexValid, CallFunc_Less_IntInt_ReturnValue) == 0x000008, "Member 'BP_Tgf_Monster_C_IsDormantIndexValid::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_Tgf_Monster.BP_Tgf_Monster_C.IsDormantInvisible
// 0x0040 (0x0040 - 0x0000)
struct BP_Tgf_Monster_C_IsDormantInvisible final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTGF_FDormantEntry                     K2Node_MakeStruct_TGF_FDormantEntry;               // 0x0008(0x0030)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDormantIndexValid_ReturnValue;          // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Tgf_Monster_C_IsDormantInvisible) == 0x000008, "Wrong alignment on BP_Tgf_Monster_C_IsDormantInvisible");
static_assert(sizeof(BP_Tgf_Monster_C_IsDormantInvisible) == 0x000040, "Wrong size on BP_Tgf_Monster_C_IsDormantInvisible");
static_assert(offsetof(BP_Tgf_Monster_C_IsDormantInvisible, ReturnValue) == 0x000000, "Member 'BP_Tgf_Monster_C_IsDormantInvisible::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_IsDormantInvisible, K2Node_MakeStruct_TGF_FDormantEntry) == 0x000008, "Member 'BP_Tgf_Monster_C_IsDormantInvisible::K2Node_MakeStruct_TGF_FDormantEntry' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_IsDormantInvisible, CallFunc_IsDormantIndexValid_ReturnValue) == 0x000038, "Member 'BP_Tgf_Monster_C_IsDormantInvisible::CallFunc_IsDormantIndexValid_ReturnValue' has a wrong offset!");

// Function BP_Tgf_Monster.BP_Tgf_Monster_C.IsDormantSensesEnabled
// 0x0040 (0x0040 - 0x0000)
struct BP_Tgf_Monster_C_IsDormantSensesEnabled final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTGF_FDormantEntry                     K2Node_MakeStruct_TGF_FDormantEntry;               // 0x0008(0x0030)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDormantIndexValid_ReturnValue;          // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Tgf_Monster_C_IsDormantSensesEnabled) == 0x000008, "Wrong alignment on BP_Tgf_Monster_C_IsDormantSensesEnabled");
static_assert(sizeof(BP_Tgf_Monster_C_IsDormantSensesEnabled) == 0x000040, "Wrong size on BP_Tgf_Monster_C_IsDormantSensesEnabled");
static_assert(offsetof(BP_Tgf_Monster_C_IsDormantSensesEnabled, ReturnValue) == 0x000000, "Member 'BP_Tgf_Monster_C_IsDormantSensesEnabled::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_IsDormantSensesEnabled, K2Node_MakeStruct_TGF_FDormantEntry) == 0x000008, "Member 'BP_Tgf_Monster_C_IsDormantSensesEnabled::K2Node_MakeStruct_TGF_FDormantEntry' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_IsDormantSensesEnabled, CallFunc_IsDormantIndexValid_ReturnValue) == 0x000038, "Member 'BP_Tgf_Monster_C_IsDormantSensesEnabled::CallFunc_IsDormantIndexValid_ReturnValue' has a wrong offset!");

// Function BP_Tgf_Monster.BP_Tgf_Monster_C.IsDormantSpecialAttackable
// 0x0040 (0x0040 - 0x0000)
struct BP_Tgf_Monster_C_IsDormantSpecialAttackable final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTGF_FDormantEntry                     K2Node_MakeStruct_TGF_FDormantEntry;               // 0x0008(0x0030)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDormantIndexValid_ReturnValue;          // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Tgf_Monster_C_IsDormantSpecialAttackable) == 0x000008, "Wrong alignment on BP_Tgf_Monster_C_IsDormantSpecialAttackable");
static_assert(sizeof(BP_Tgf_Monster_C_IsDormantSpecialAttackable) == 0x000040, "Wrong size on BP_Tgf_Monster_C_IsDormantSpecialAttackable");
static_assert(offsetof(BP_Tgf_Monster_C_IsDormantSpecialAttackable, ReturnValue) == 0x000000, "Member 'BP_Tgf_Monster_C_IsDormantSpecialAttackable::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_IsDormantSpecialAttackable, K2Node_MakeStruct_TGF_FDormantEntry) == 0x000008, "Member 'BP_Tgf_Monster_C_IsDormantSpecialAttackable::K2Node_MakeStruct_TGF_FDormantEntry' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_IsDormantSpecialAttackable, CallFunc_IsDormantIndexValid_ReturnValue) == 0x000038, "Member 'BP_Tgf_Monster_C_IsDormantSpecialAttackable::CallFunc_IsDormantIndexValid_ReturnValue' has a wrong offset!");

// Function BP_Tgf_Monster.BP_Tgf_Monster_C.IsDormantWithGravity
// 0x0040 (0x0040 - 0x0000)
struct BP_Tgf_Monster_C_IsDormantWithGravity final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Gravity;                                           // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTGF_FDormantEntry                     K2Node_MakeStruct_TGF_FDormantEntry;               // 0x0008(0x0030)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDormantIndexValid_ReturnValue;          // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Tgf_Monster_C_IsDormantWithGravity) == 0x000008, "Wrong alignment on BP_Tgf_Monster_C_IsDormantWithGravity");
static_assert(sizeof(BP_Tgf_Monster_C_IsDormantWithGravity) == 0x000040, "Wrong size on BP_Tgf_Monster_C_IsDormantWithGravity");
static_assert(offsetof(BP_Tgf_Monster_C_IsDormantWithGravity, ReturnValue) == 0x000000, "Member 'BP_Tgf_Monster_C_IsDormantWithGravity::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_IsDormantWithGravity, Gravity) == 0x000001, "Member 'BP_Tgf_Monster_C_IsDormantWithGravity::Gravity' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_IsDormantWithGravity, K2Node_MakeStruct_TGF_FDormantEntry) == 0x000008, "Member 'BP_Tgf_Monster_C_IsDormantWithGravity::K2Node_MakeStruct_TGF_FDormantEntry' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_IsDormantWithGravity, CallFunc_IsDormantIndexValid_ReturnValue) == 0x000038, "Member 'BP_Tgf_Monster_C_IsDormantWithGravity::CallFunc_IsDormantIndexValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_IsDormantWithGravity, CallFunc_BooleanAND_ReturnValue) == 0x000039, "Member 'BP_Tgf_Monster_C_IsDormantWithGravity::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_IsDormantWithGravity, CallFunc_IsValid_ReturnValue) == 0x00003A, "Member 'BP_Tgf_Monster_C_IsDormantWithGravity::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_Tgf_Monster.BP_Tgf_Monster_C.IsEvadable
// 0x0003 (0x0003 - 0x0000)
struct BP_Tgf_Monster_C_IsEvadable final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETgfActorType                                 CallFunc_GetActorType_ReturnValue;                 // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Tgf_Monster_C_IsEvadable) == 0x000001, "Wrong alignment on BP_Tgf_Monster_C_IsEvadable");
static_assert(sizeof(BP_Tgf_Monster_C_IsEvadable) == 0x000003, "Wrong size on BP_Tgf_Monster_C_IsEvadable");
static_assert(offsetof(BP_Tgf_Monster_C_IsEvadable, Result) == 0x000000, "Member 'BP_Tgf_Monster_C_IsEvadable::Result' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_IsEvadable, CallFunc_GetActorType_ReturnValue) == 0x000001, "Member 'BP_Tgf_Monster_C_IsEvadable::CallFunc_GetActorType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_IsEvadable, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000002, "Member 'BP_Tgf_Monster_C_IsEvadable::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_Tgf_Monster.BP_Tgf_Monster_C.IsEvade
// 0x0001 (0x0001 - 0x0000)
struct BP_Tgf_Monster_C_IsEvade final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Tgf_Monster_C_IsEvade) == 0x000001, "Wrong alignment on BP_Tgf_Monster_C_IsEvade");
static_assert(sizeof(BP_Tgf_Monster_C_IsEvade) == 0x000001, "Wrong size on BP_Tgf_Monster_C_IsEvade");
static_assert(offsetof(BP_Tgf_Monster_C_IsEvade, Result) == 0x000000, "Member 'BP_Tgf_Monster_C_IsEvade::Result' has a wrong offset!");

// Function BP_Tgf_Monster.BP_Tgf_Monster_C.IsFleed
// 0x0002 (0x0002 - 0x0000)
struct BP_Tgf_Monster_C_IsFleed final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Tgf_Monster_C_IsFleed) == 0x000001, "Wrong alignment on BP_Tgf_Monster_C_IsFleed");
static_assert(sizeof(BP_Tgf_Monster_C_IsFleed) == 0x000002, "Wrong size on BP_Tgf_Monster_C_IsFleed");
static_assert(offsetof(BP_Tgf_Monster_C_IsFleed, Result) == 0x000000, "Member 'BP_Tgf_Monster_C_IsFleed::Result' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_IsFleed, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'BP_Tgf_Monster_C_IsFleed::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_Tgf_Monster.BP_Tgf_Monster_C.IsFleeing
// 0x0002 (0x0002 - 0x0000)
struct BP_Tgf_Monster_C_IsFleeing final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Tgf_Monster_C_IsFleeing) == 0x000001, "Wrong alignment on BP_Tgf_Monster_C_IsFleeing");
static_assert(sizeof(BP_Tgf_Monster_C_IsFleeing) == 0x000002, "Wrong size on BP_Tgf_Monster_C_IsFleeing");
static_assert(offsetof(BP_Tgf_Monster_C_IsFleeing, Result) == 0x000000, "Member 'BP_Tgf_Monster_C_IsFleeing::Result' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_IsFleeing, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'BP_Tgf_Monster_C_IsFleeing::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_Tgf_Monster.BP_Tgf_Monster_C.IsInCombat
// 0x0001 (0x0001 - 0x0000)
struct BP_Tgf_Monster_C_IsInCombat final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Tgf_Monster_C_IsInCombat) == 0x000001, "Wrong alignment on BP_Tgf_Monster_C_IsInCombat");
static_assert(sizeof(BP_Tgf_Monster_C_IsInCombat) == 0x000001, "Wrong size on BP_Tgf_Monster_C_IsInCombat");
static_assert(offsetof(BP_Tgf_Monster_C_IsInCombat, Result) == 0x000000, "Member 'BP_Tgf_Monster_C_IsInCombat::Result' has a wrong offset!");

// Function BP_Tgf_Monster.BP_Tgf_Monster_C.IsPatrolable
// 0x0028 (0x0028 - 0x0000)
struct BP_Tgf_Monster_C_IsPatrolable final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PatrolPoint_C*                      CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Tgf_Monster_C_IsPatrolable) == 0x000008, "Wrong alignment on BP_Tgf_Monster_C_IsPatrolable");
static_assert(sizeof(BP_Tgf_Monster_C_IsPatrolable) == 0x000028, "Wrong size on BP_Tgf_Monster_C_IsPatrolable");
static_assert(offsetof(BP_Tgf_Monster_C_IsPatrolable, ReturnValue) == 0x000000, "Member 'BP_Tgf_Monster_C_IsPatrolable::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_IsPatrolable, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_Tgf_Monster_C_IsPatrolable::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_IsPatrolable, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_Tgf_Monster_C_IsPatrolable::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_IsPatrolable, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_Tgf_Monster_C_IsPatrolable::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_IsPatrolable, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_Tgf_Monster_C_IsPatrolable::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_IsPatrolable, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_Tgf_Monster_C_IsPatrolable::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_IsPatrolable, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_Tgf_Monster_C_IsPatrolable::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_IsPatrolable, CallFunc_IsValid_ReturnValue_1) == 0x000024, "Member 'BP_Tgf_Monster_C_IsPatrolable::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_IsPatrolable, CallFunc_Less_IntInt_ReturnValue) == 0x000025, "Member 'BP_Tgf_Monster_C_IsPatrolable::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_IsPatrolable, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x000026, "Member 'BP_Tgf_Monster_C_IsPatrolable::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_IsPatrolable, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000027, "Member 'BP_Tgf_Monster_C_IsPatrolable::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_Tgf_Monster.BP_Tgf_Monster_C.IsStareEnabled
// 0x0003 (0x0003 - 0x0000)
struct BP_Tgf_Monster_C_IsStareEnabled final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Tgf_Monster_C_IsStareEnabled) == 0x000001, "Wrong alignment on BP_Tgf_Monster_C_IsStareEnabled");
static_assert(sizeof(BP_Tgf_Monster_C_IsStareEnabled) == 0x000003, "Wrong size on BP_Tgf_Monster_C_IsStareEnabled");
static_assert(offsetof(BP_Tgf_Monster_C_IsStareEnabled, Result) == 0x000000, "Member 'BP_Tgf_Monster_C_IsStareEnabled::Result' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_IsStareEnabled, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000001, "Member 'BP_Tgf_Monster_C_IsStareEnabled::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_IsStareEnabled, CallFunc_IsValid_ReturnValue) == 0x000002, "Member 'BP_Tgf_Monster_C_IsStareEnabled::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_Tgf_Monster.BP_Tgf_Monster_C.IsWanderable
// 0x0002 (0x0002 - 0x0000)
struct BP_Tgf_Monster_C_IsWanderable final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Tgf_Monster_C_IsWanderable) == 0x000001, "Wrong alignment on BP_Tgf_Monster_C_IsWanderable");
static_assert(sizeof(BP_Tgf_Monster_C_IsWanderable) == 0x000002, "Wrong size on BP_Tgf_Monster_C_IsWanderable");
static_assert(offsetof(BP_Tgf_Monster_C_IsWanderable, Result) == 0x000000, "Member 'BP_Tgf_Monster_C_IsWanderable::Result' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_IsWanderable, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'BP_Tgf_Monster_C_IsWanderable::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_Tgf_Monster.BP_Tgf_Monster_C.IsWeak
// 0x0002 (0x0002 - 0x0000)
struct BP_Tgf_Monster_C_IsWeak final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Tgf_Monster_C_IsWeak) == 0x000001, "Wrong alignment on BP_Tgf_Monster_C_IsWeak");
static_assert(sizeof(BP_Tgf_Monster_C_IsWeak) == 0x000002, "Wrong size on BP_Tgf_Monster_C_IsWeak");
static_assert(offsetof(BP_Tgf_Monster_C_IsWeak, ReturnValue) == 0x000000, "Member 'BP_Tgf_Monster_C_IsWeak::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_IsWeak, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000001, "Member 'BP_Tgf_Monster_C_IsWeak::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_Tgf_Monster.BP_Tgf_Monster_C.IsWeakening
// 0x0004 (0x0004 - 0x0000)
struct BP_Tgf_Monster_C_IsWeakening final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Tgf_Monster_C_IsWeakening) == 0x000001, "Wrong alignment on BP_Tgf_Monster_C_IsWeakening");
static_assert(sizeof(BP_Tgf_Monster_C_IsWeakening) == 0x000004, "Wrong size on BP_Tgf_Monster_C_IsWeakening");
static_assert(offsetof(BP_Tgf_Monster_C_IsWeakening, ReturnValue) == 0x000000, "Member 'BP_Tgf_Monster_C_IsWeakening::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_IsWeakening, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'BP_Tgf_Monster_C_IsWeakening::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_IsWeakening, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000002, "Member 'BP_Tgf_Monster_C_IsWeakening::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_IsWeakening, CallFunc_BooleanOR_ReturnValue) == 0x000003, "Member 'BP_Tgf_Monster_C_IsWeakening::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_Tgf_Monster.BP_Tgf_Monster_C.LeaveCombat
// 0x0058 (0x0058 - 0x0000)
struct BP_Tgf_Monster_C_LeaveCombat final
{
public:
	struct FGameplayTagContainer                  CallFunc_MakeGameplayTagContainerFromTag_ReturnValue; // 0x0000(0x0020)()
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveLooseGameplayTags_ReturnValue;      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue;   // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDeadOrDying_ReturnValue;                // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue_1;               // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32[0x2];                                       // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue; // 0x0034(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDeadOrDying_ReturnValue_1;              // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue_1;  // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue_1; // 0x004C(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEvade_Result;                           // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Tgf_Monster_C_LeaveCombat) == 0x000008, "Wrong alignment on BP_Tgf_Monster_C_LeaveCombat");
static_assert(sizeof(BP_Tgf_Monster_C_LeaveCombat) == 0x000058, "Wrong size on BP_Tgf_Monster_C_LeaveCombat");
static_assert(offsetof(BP_Tgf_Monster_C_LeaveCombat, CallFunc_MakeGameplayTagContainerFromTag_ReturnValue) == 0x000000, "Member 'BP_Tgf_Monster_C_LeaveCombat::CallFunc_MakeGameplayTagContainerFromTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_LeaveCombat, CallFunc_HasAuthority_ReturnValue) == 0x000020, "Member 'BP_Tgf_Monster_C_LeaveCombat::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_LeaveCombat, CallFunc_RemoveLooseGameplayTags_ReturnValue) == 0x000021, "Member 'BP_Tgf_Monster_C_LeaveCombat::CallFunc_RemoveLooseGameplayTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_LeaveCombat, CallFunc_HasAnyMatchingGameplayTags_ReturnValue) == 0x000022, "Member 'BP_Tgf_Monster_C_LeaveCombat::CallFunc_HasAnyMatchingGameplayTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_LeaveCombat, CallFunc_IsValidClass_ReturnValue) == 0x000023, "Member 'BP_Tgf_Monster_C_LeaveCombat::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_LeaveCombat, CallFunc_IsDeadOrDying_ReturnValue) == 0x000024, "Member 'BP_Tgf_Monster_C_LeaveCombat::CallFunc_IsDeadOrDying_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_LeaveCombat, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x000028, "Member 'BP_Tgf_Monster_C_LeaveCombat::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_LeaveCombat, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BP_Tgf_Monster_C_LeaveCombat::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_LeaveCombat, CallFunc_IsValidClass_ReturnValue_1) == 0x000031, "Member 'BP_Tgf_Monster_C_LeaveCombat::CallFunc_IsValidClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_LeaveCombat, CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue) == 0x000034, "Member 'BP_Tgf_Monster_C_LeaveCombat::CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_LeaveCombat, CallFunc_IsDeadOrDying_ReturnValue_1) == 0x00003C, "Member 'BP_Tgf_Monster_C_LeaveCombat::CallFunc_IsDeadOrDying_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_LeaveCombat, CallFunc_GetAbilitySystemComponent_ReturnValue_1) == 0x000040, "Member 'BP_Tgf_Monster_C_LeaveCombat::CallFunc_GetAbilitySystemComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_LeaveCombat, CallFunc_IsValid_ReturnValue_1) == 0x000048, "Member 'BP_Tgf_Monster_C_LeaveCombat::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_LeaveCombat, CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue_1) == 0x00004C, "Member 'BP_Tgf_Monster_C_LeaveCombat::CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_LeaveCombat, CallFunc_IsEvade_Result) == 0x000054, "Member 'BP_Tgf_Monster_C_LeaveCombat::CallFunc_IsEvade_Result' has a wrong offset!");

// Function BP_Tgf_Monster.BP_Tgf_Monster_C.OnChaseFailed
// 0x0020 (0x0020 - 0x0000)
struct BP_Tgf_Monster_C_OnChaseFailed final
{
public:
	bool                                          CallFunc_IsEvade_Result;                           // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetTimeSeconds_ReturnValue;               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Tgf_Monster_C_OnChaseFailed) == 0x000008, "Wrong alignment on BP_Tgf_Monster_C_OnChaseFailed");
static_assert(sizeof(BP_Tgf_Monster_C_OnChaseFailed) == 0x000020, "Wrong size on BP_Tgf_Monster_C_OnChaseFailed");
static_assert(offsetof(BP_Tgf_Monster_C_OnChaseFailed, CallFunc_IsEvade_Result) == 0x000000, "Member 'BP_Tgf_Monster_C_OnChaseFailed::CallFunc_IsEvade_Result' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_OnChaseFailed, CallFunc_GetTimeSeconds_ReturnValue) == 0x000008, "Member 'BP_Tgf_Monster_C_OnChaseFailed::CallFunc_GetTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_OnChaseFailed, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000010, "Member 'BP_Tgf_Monster_C_OnChaseFailed::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_OnChaseFailed, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000018, "Member 'BP_Tgf_Monster_C_OnChaseFailed::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");

// Function BP_Tgf_Monster.BP_Tgf_Monster_C.OnChaseSuccessed
// 0x0001 (0x0001 - 0x0000)
struct BP_Tgf_Monster_C_OnChaseSuccessed final
{
public:
	bool                                          CallFunc_IsEvade_Result;                           // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Tgf_Monster_C_OnChaseSuccessed) == 0x000001, "Wrong alignment on BP_Tgf_Monster_C_OnChaseSuccessed");
static_assert(sizeof(BP_Tgf_Monster_C_OnChaseSuccessed) == 0x000001, "Wrong size on BP_Tgf_Monster_C_OnChaseSuccessed");
static_assert(offsetof(BP_Tgf_Monster_C_OnChaseSuccessed, CallFunc_IsEvade_Result) == 0x000000, "Member 'BP_Tgf_Monster_C_OnChaseSuccessed::CallFunc_IsEvade_Result' has a wrong offset!");

// Function BP_Tgf_Monster.BP_Tgf_Monster_C.OnRep_Dormant
// 0x001C (0x001C - 0x0000)
struct BP_Tgf_Monster_C_OnRep_Dormant final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDeadOrDying_ReturnValue;                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable;                            // 0x0004(0x0010)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_ExecuteActionImp_ReturnValue;             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostAkEvent_ReturnValue;                  // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Tgf_Monster_C_OnRep_Dormant) == 0x000004, "Wrong alignment on BP_Tgf_Monster_C_OnRep_Dormant");
static_assert(sizeof(BP_Tgf_Monster_C_OnRep_Dormant) == 0x00001C, "Wrong size on BP_Tgf_Monster_C_OnRep_Dormant");
static_assert(offsetof(BP_Tgf_Monster_C_OnRep_Dormant, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_Tgf_Monster_C_OnRep_Dormant::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_OnRep_Dormant, CallFunc_IsValid_ReturnValue_1) == 0x000001, "Member 'BP_Tgf_Monster_C_OnRep_Dormant::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_OnRep_Dormant, CallFunc_IsDeadOrDying_ReturnValue) == 0x000002, "Member 'BP_Tgf_Monster_C_OnRep_Dormant::CallFunc_IsDeadOrDying_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_OnRep_Dormant, Temp_delegate_Variable) == 0x000004, "Member 'BP_Tgf_Monster_C_OnRep_Dormant::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_OnRep_Dormant, CallFunc_ExecuteActionImp_ReturnValue) == 0x000014, "Member 'BP_Tgf_Monster_C_OnRep_Dormant::CallFunc_ExecuteActionImp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_OnRep_Dormant, CallFunc_PostAkEvent_ReturnValue) == 0x000018, "Member 'BP_Tgf_Monster_C_OnRep_Dormant::CallFunc_PostAkEvent_ReturnValue' has a wrong offset!");

// Function BP_Tgf_Monster.BP_Tgf_Monster_C.OnSpawned
// 0x0008 (0x0008 - 0x0000)
struct BP_Tgf_Monster_C_OnSpawned final
{
public:
	class ABP_ActorSpawnPoint_C*                  Param_ActorSpawnPoint;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Tgf_Monster_C_OnSpawned) == 0x000008, "Wrong alignment on BP_Tgf_Monster_C_OnSpawned");
static_assert(sizeof(BP_Tgf_Monster_C_OnSpawned) == 0x000008, "Wrong size on BP_Tgf_Monster_C_OnSpawned");
static_assert(offsetof(BP_Tgf_Monster_C_OnSpawned, Param_ActorSpawnPoint) == 0x000000, "Member 'BP_Tgf_Monster_C_OnSpawned::Param_ActorSpawnPoint' has a wrong offset!");

// Function BP_Tgf_Monster.BP_Tgf_Monster_C.OnThreatTarget
// 0x0008 (0x0008 - 0x0000)
struct BP_Tgf_Monster_C_OnThreatTarget final
{
public:
	class AActor*                                 NewThreatTarget;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Tgf_Monster_C_OnThreatTarget) == 0x000008, "Wrong alignment on BP_Tgf_Monster_C_OnThreatTarget");
static_assert(sizeof(BP_Tgf_Monster_C_OnThreatTarget) == 0x000008, "Wrong size on BP_Tgf_Monster_C_OnThreatTarget");
static_assert(offsetof(BP_Tgf_Monster_C_OnThreatTarget, NewThreatTarget) == 0x000000, "Member 'BP_Tgf_Monster_C_OnThreatTarget::NewThreatTarget' has a wrong offset!");

// Function BP_Tgf_Monster.BP_Tgf_Monster_C.OnThreatTargetChanged__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_Tgf_Monster_C_OnThreatTargetChanged__DelegateSignature final
{
public:
	class AActor*                                 Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Tgf_Monster_C_OnThreatTargetChanged__DelegateSignature) == 0x000008, "Wrong alignment on BP_Tgf_Monster_C_OnThreatTargetChanged__DelegateSignature");
static_assert(sizeof(BP_Tgf_Monster_C_OnThreatTargetChanged__DelegateSignature) == 0x000008, "Wrong size on BP_Tgf_Monster_C_OnThreatTargetChanged__DelegateSignature");
static_assert(offsetof(BP_Tgf_Monster_C_OnThreatTargetChanged__DelegateSignature, Target) == 0x000000, "Member 'BP_Tgf_Monster_C_OnThreatTargetChanged__DelegateSignature::Target' has a wrong offset!");

// Function BP_Tgf_Monster.BP_Tgf_Monster_C.PickRetreat
// 0x0148 (0x0148 - 0x0000)
struct BP_Tgf_Monster_C_PickRetreat final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Param_Index;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        TotalChance;                                       // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Roll;                                              // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTGF_FRetreatEntry                     CallFunc_Array_Get_Item;                           // 0x0030(0x0068)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9D[0x3];                                       // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_RandomFloat_ReturnValue;                  // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTGF_FRetreatEntry                     CallFunc_Array_Get_Item_1;                         // 0x00C8(0x0068)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0134(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_135[0x3];                                      // 0x0135(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Tgf_Monster_C_PickRetreat) == 0x000008, "Wrong alignment on BP_Tgf_Monster_C_PickRetreat");
static_assert(sizeof(BP_Tgf_Monster_C_PickRetreat) == 0x000148, "Wrong size on BP_Tgf_Monster_C_PickRetreat");
static_assert(offsetof(BP_Tgf_Monster_C_PickRetreat, Result) == 0x000000, "Member 'BP_Tgf_Monster_C_PickRetreat::Result' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_PickRetreat, Param_Index) == 0x000004, "Member 'BP_Tgf_Monster_C_PickRetreat::Param_Index' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_PickRetreat, TotalChance) == 0x000008, "Member 'BP_Tgf_Monster_C_PickRetreat::TotalChance' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_PickRetreat, Roll) == 0x000010, "Member 'BP_Tgf_Monster_C_PickRetreat::Roll' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_PickRetreat, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BP_Tgf_Monster_C_PickRetreat::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_PickRetreat, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'BP_Tgf_Monster_C_PickRetreat::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_PickRetreat, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BP_Tgf_Monster_C_PickRetreat::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_PickRetreat, Temp_int_Array_Index_Variable_1) == 0x000024, "Member 'BP_Tgf_Monster_C_PickRetreat::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_PickRetreat, Temp_int_Loop_Counter_Variable_1) == 0x000028, "Member 'BP_Tgf_Monster_C_PickRetreat::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_PickRetreat, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_Tgf_Monster_C_PickRetreat::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_PickRetreat, CallFunc_Array_Length_ReturnValue) == 0x000098, "Member 'BP_Tgf_Monster_C_PickRetreat::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_PickRetreat, CallFunc_Less_IntInt_ReturnValue) == 0x00009C, "Member 'BP_Tgf_Monster_C_PickRetreat::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_PickRetreat, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0000A0, "Member 'BP_Tgf_Monster_C_PickRetreat::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_PickRetreat, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000A8, "Member 'BP_Tgf_Monster_C_PickRetreat::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_PickRetreat, CallFunc_RandomFloat_ReturnValue) == 0x0000B0, "Member 'BP_Tgf_Monster_C_PickRetreat::CallFunc_RandomFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_PickRetreat, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x0000B8, "Member 'BP_Tgf_Monster_C_PickRetreat::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_PickRetreat, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0000C0, "Member 'BP_Tgf_Monster_C_PickRetreat::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_PickRetreat, CallFunc_Array_Get_Item_1) == 0x0000C8, "Member 'BP_Tgf_Monster_C_PickRetreat::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_PickRetreat, CallFunc_Array_Length_ReturnValue_1) == 0x000130, "Member 'BP_Tgf_Monster_C_PickRetreat::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_PickRetreat, CallFunc_Less_IntInt_ReturnValue_1) == 0x000134, "Member 'BP_Tgf_Monster_C_PickRetreat::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_PickRetreat, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000138, "Member 'BP_Tgf_Monster_C_PickRetreat::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_PickRetreat, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x000140, "Member 'BP_Tgf_Monster_C_PickRetreat::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");

// Function BP_Tgf_Monster.BP_Tgf_Monster_C.PlayGameplayCue
// 0x0020 (0x0020 - 0x0000)
struct BP_Tgf_Monster_C_PlayGameplayCue final
{
public:
	struct FGameplayTag                           GameplayCue;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Position;                                          // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Tgf_Monster_C_PlayGameplayCue) == 0x000008, "Wrong alignment on BP_Tgf_Monster_C_PlayGameplayCue");
static_assert(sizeof(BP_Tgf_Monster_C_PlayGameplayCue) == 0x000020, "Wrong size on BP_Tgf_Monster_C_PlayGameplayCue");
static_assert(offsetof(BP_Tgf_Monster_C_PlayGameplayCue, GameplayCue) == 0x000000, "Member 'BP_Tgf_Monster_C_PlayGameplayCue::GameplayCue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_PlayGameplayCue, Position) == 0x000008, "Member 'BP_Tgf_Monster_C_PlayGameplayCue::Position' has a wrong offset!");

// Function BP_Tgf_Monster.BP_Tgf_Monster_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_Tgf_Monster_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Tgf_Monster_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BP_Tgf_Monster_C_ReceiveEndPlay");
static_assert(sizeof(BP_Tgf_Monster_C_ReceiveEndPlay) == 0x000001, "Wrong size on BP_Tgf_Monster_C_ReceiveEndPlay");
static_assert(offsetof(BP_Tgf_Monster_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BP_Tgf_Monster_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BP_Tgf_Monster.BP_Tgf_Monster_C.RemoveTraceMesh
// 0x0148 (0x0148 - 0x0000)
struct BP_Tgf_Monster_C_RemoveTraceMesh final
{
public:
	int32                                         TraceMeshInsId;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RemoveResult;                                      // 0x0005(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_1;            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0020(0x0050)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0070(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00C0(0x0010)(ReferenceParm)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x00D0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00E0(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x00F8(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0110(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x0120(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveTraceMesh_ReturnValue;              // 0x0132(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_133[0x1];                                      // 0x0133(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct FHitResult& Hit, class UPrimitiveComponent* Mesh)> K2Node_CreateDelegate_OutputDelegate;              // 0x0134(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Tgf_Monster_C_RemoveTraceMesh) == 0x000008, "Wrong alignment on BP_Tgf_Monster_C_RemoveTraceMesh");
static_assert(sizeof(BP_Tgf_Monster_C_RemoveTraceMesh) == 0x000148, "Wrong size on BP_Tgf_Monster_C_RemoveTraceMesh");
static_assert(offsetof(BP_Tgf_Monster_C_RemoveTraceMesh, TraceMeshInsId) == 0x000000, "Member 'BP_Tgf_Monster_C_RemoveTraceMesh::TraceMeshInsId' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_RemoveTraceMesh, Result) == 0x000004, "Member 'BP_Tgf_Monster_C_RemoveTraceMesh::Result' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_RemoveTraceMesh, RemoveResult) == 0x000005, "Member 'BP_Tgf_Monster_C_RemoveTraceMesh::RemoveResult' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_RemoveTraceMesh, Temp_int_Variable) == 0x000008, "Member 'BP_Tgf_Monster_C_RemoveTraceMesh::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_RemoveTraceMesh, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000010, "Member 'BP_Tgf_Monster_C_RemoveTraceMesh::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_RemoveTraceMesh, CallFunc_Conv_IntToInt64_ReturnValue_1) == 0x000018, "Member 'BP_Tgf_Monster_C_RemoveTraceMesh::CallFunc_Conv_IntToInt64_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_RemoveTraceMesh, K2Node_MakeStruct_FormatArgumentData) == 0x000020, "Member 'BP_Tgf_Monster_C_RemoveTraceMesh::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_RemoveTraceMesh, K2Node_MakeStruct_FormatArgumentData_1) == 0x000070, "Member 'BP_Tgf_Monster_C_RemoveTraceMesh::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_RemoveTraceMesh, K2Node_MakeArray_Array) == 0x0000C0, "Member 'BP_Tgf_Monster_C_RemoveTraceMesh::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_RemoveTraceMesh, K2Node_MakeArray_Array_1) == 0x0000D0, "Member 'BP_Tgf_Monster_C_RemoveTraceMesh::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_RemoveTraceMesh, CallFunc_Format_ReturnValue) == 0x0000E0, "Member 'BP_Tgf_Monster_C_RemoveTraceMesh::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_RemoveTraceMesh, CallFunc_Format_ReturnValue_1) == 0x0000F8, "Member 'BP_Tgf_Monster_C_RemoveTraceMesh::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_RemoveTraceMesh, CallFunc_Conv_TextToString_ReturnValue) == 0x000110, "Member 'BP_Tgf_Monster_C_RemoveTraceMesh::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_RemoveTraceMesh, CallFunc_Conv_TextToString_ReturnValue_1) == 0x000120, "Member 'BP_Tgf_Monster_C_RemoveTraceMesh::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_RemoveTraceMesh, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000130, "Member 'BP_Tgf_Monster_C_RemoveTraceMesh::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_RemoveTraceMesh, CallFunc_Greater_IntInt_ReturnValue) == 0x000131, "Member 'BP_Tgf_Monster_C_RemoveTraceMesh::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_RemoveTraceMesh, CallFunc_RemoveTraceMesh_ReturnValue) == 0x000132, "Member 'BP_Tgf_Monster_C_RemoveTraceMesh::CallFunc_RemoveTraceMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_RemoveTraceMesh, K2Node_CreateDelegate_OutputDelegate) == 0x000134, "Member 'BP_Tgf_Monster_C_RemoveTraceMesh::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_RemoveTraceMesh, CallFunc_Subtract_IntInt_ReturnValue) == 0x000144, "Member 'BP_Tgf_Monster_C_RemoveTraceMesh::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");

// Function BP_Tgf_Monster.BP_Tgf_Monster_C.SetComponentTick_BP
// 0x0001 (0x0001 - 0x0000)
struct BP_Tgf_Monster_C_SetComponentTick_BP final
{
public:
	bool                                          Enabled;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Tgf_Monster_C_SetComponentTick_BP) == 0x000001, "Wrong alignment on BP_Tgf_Monster_C_SetComponentTick_BP");
static_assert(sizeof(BP_Tgf_Monster_C_SetComponentTick_BP) == 0x000001, "Wrong size on BP_Tgf_Monster_C_SetComponentTick_BP");
static_assert(offsetof(BP_Tgf_Monster_C_SetComponentTick_BP, Enabled) == 0x000000, "Member 'BP_Tgf_Monster_C_SetComponentTick_BP::Enabled' has a wrong offset!");

// Function BP_Tgf_Monster.BP_Tgf_Monster_C.SetDormantAttackable
// 0x0001 (0x0001 - 0x0000)
struct BP_Tgf_Monster_C_SetDormantAttackable final
{
public:
	bool                                          Enable;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Tgf_Monster_C_SetDormantAttackable) == 0x000001, "Wrong alignment on BP_Tgf_Monster_C_SetDormantAttackable");
static_assert(sizeof(BP_Tgf_Monster_C_SetDormantAttackable) == 0x000001, "Wrong size on BP_Tgf_Monster_C_SetDormantAttackable");
static_assert(offsetof(BP_Tgf_Monster_C_SetDormantAttackable, Enable) == 0x000000, "Member 'BP_Tgf_Monster_C_SetDormantAttackable::Enable' has a wrong offset!");

// Function BP_Tgf_Monster.BP_Tgf_Monster_C.SetDormantCollisionEnabled
// 0x0001 (0x0001 - 0x0000)
struct BP_Tgf_Monster_C_SetDormantCollisionEnabled final
{
public:
	bool                                          Enabled;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Tgf_Monster_C_SetDormantCollisionEnabled) == 0x000001, "Wrong alignment on BP_Tgf_Monster_C_SetDormantCollisionEnabled");
static_assert(sizeof(BP_Tgf_Monster_C_SetDormantCollisionEnabled) == 0x000001, "Wrong size on BP_Tgf_Monster_C_SetDormantCollisionEnabled");
static_assert(offsetof(BP_Tgf_Monster_C_SetDormantCollisionEnabled, Enabled) == 0x000000, "Member 'BP_Tgf_Monster_C_SetDormantCollisionEnabled::Enabled' has a wrong offset!");

// Function BP_Tgf_Monster.BP_Tgf_Monster_C.SetEvade
// 0x0002 (0x0002 - 0x0000)
struct BP_Tgf_Monster_C_SetEvade final
{
public:
	bool                                          Value;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEvadable_Result;                        // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Tgf_Monster_C_SetEvade) == 0x000001, "Wrong alignment on BP_Tgf_Monster_C_SetEvade");
static_assert(sizeof(BP_Tgf_Monster_C_SetEvade) == 0x000002, "Wrong size on BP_Tgf_Monster_C_SetEvade");
static_assert(offsetof(BP_Tgf_Monster_C_SetEvade, Value) == 0x000000, "Member 'BP_Tgf_Monster_C_SetEvade::Value' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_SetEvade, CallFunc_IsEvadable_Result) == 0x000001, "Member 'BP_Tgf_Monster_C_SetEvade::CallFunc_IsEvadable_Result' has a wrong offset!");

// Function BP_Tgf_Monster.BP_Tgf_Monster_C.SetFlyable
// 0x0038 (0x0038 - 0x0000)
struct BP_Tgf_Monster_C_SetFlyable final
{
public:
	struct FNavAgentProperties                    K2Node_MakeStruct_NavAgentProperties;              // 0x0000(0x0038)(HasGetValueTypeHash)
};
static_assert(alignof(BP_Tgf_Monster_C_SetFlyable) == 0x000008, "Wrong alignment on BP_Tgf_Monster_C_SetFlyable");
static_assert(sizeof(BP_Tgf_Monster_C_SetFlyable) == 0x000038, "Wrong size on BP_Tgf_Monster_C_SetFlyable");
static_assert(offsetof(BP_Tgf_Monster_C_SetFlyable, K2Node_MakeStruct_NavAgentProperties) == 0x000000, "Member 'BP_Tgf_Monster_C_SetFlyable::K2Node_MakeStruct_NavAgentProperties' has a wrong offset!");

// Function BP_Tgf_Monster.BP_Tgf_Monster_C.SetHold
// 0x0010 (0x0010 - 0x0000)
struct BP_Tgf_Monster_C_SetHold final
{
public:
	bool                                          Hold;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetGravityScale_Gravity_ImplicitCast;     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_HoldGravityReserved_ImplicitCast; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Tgf_Monster_C_SetHold) == 0x000008, "Wrong alignment on BP_Tgf_Monster_C_SetHold");
static_assert(sizeof(BP_Tgf_Monster_C_SetHold) == 0x000010, "Wrong size on BP_Tgf_Monster_C_SetHold");
static_assert(offsetof(BP_Tgf_Monster_C_SetHold, Hold) == 0x000000, "Member 'BP_Tgf_Monster_C_SetHold::Hold' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_SetHold, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'BP_Tgf_Monster_C_SetHold::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_SetHold, CallFunc_SetGravityScale_Gravity_ImplicitCast) == 0x000004, "Member 'BP_Tgf_Monster_C_SetHold::CallFunc_SetGravityScale_Gravity_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_SetHold, K2Node_VariableSet_HoldGravityReserved_ImplicitCast) == 0x000008, "Member 'BP_Tgf_Monster_C_SetHold::K2Node_VariableSet_HoldGravityReserved_ImplicitCast' has a wrong offset!");

// Function BP_Tgf_Monster.BP_Tgf_Monster_C.ShouldCheckAbilitySightRange
// 0x0003 (0x0003 - 0x0000)
struct BP_Tgf_Monster_C_ShouldCheckAbilitySightRange final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETgfActorType                                 CallFunc_GetActorType_ReturnValue;                 // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Tgf_Monster_C_ShouldCheckAbilitySightRange) == 0x000001, "Wrong alignment on BP_Tgf_Monster_C_ShouldCheckAbilitySightRange");
static_assert(sizeof(BP_Tgf_Monster_C_ShouldCheckAbilitySightRange) == 0x000003, "Wrong size on BP_Tgf_Monster_C_ShouldCheckAbilitySightRange");
static_assert(offsetof(BP_Tgf_Monster_C_ShouldCheckAbilitySightRange, Result) == 0x000000, "Member 'BP_Tgf_Monster_C_ShouldCheckAbilitySightRange::Result' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ShouldCheckAbilitySightRange, CallFunc_GetActorType_ReturnValue) == 0x000001, "Member 'BP_Tgf_Monster_C_ShouldCheckAbilitySightRange::CallFunc_GetActorType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ShouldCheckAbilitySightRange, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000002, "Member 'BP_Tgf_Monster_C_ShouldCheckAbilitySightRange::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_Tgf_Monster.BP_Tgf_Monster_C.UpdateSpeedOnDistance
// 0x0010 (0x0010 - 0x0000)
struct BP_Tgf_Monster_C_UpdateSpeedOnDistance final
{
public:
	double                                        Distance;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDamaged_Result;                         // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasSpeedMod_Result;                       // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_1;          // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Tgf_Monster_C_UpdateSpeedOnDistance) == 0x000008, "Wrong alignment on BP_Tgf_Monster_C_UpdateSpeedOnDistance");
static_assert(sizeof(BP_Tgf_Monster_C_UpdateSpeedOnDistance) == 0x000010, "Wrong size on BP_Tgf_Monster_C_UpdateSpeedOnDistance");
static_assert(offsetof(BP_Tgf_Monster_C_UpdateSpeedOnDistance, Distance) == 0x000000, "Member 'BP_Tgf_Monster_C_UpdateSpeedOnDistance::Distance' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_UpdateSpeedOnDistance, CallFunc_IsDamaged_Result) == 0x000008, "Member 'BP_Tgf_Monster_C_UpdateSpeedOnDistance::CallFunc_IsDamaged_Result' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_UpdateSpeedOnDistance, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x000009, "Member 'BP_Tgf_Monster_C_UpdateSpeedOnDistance::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_UpdateSpeedOnDistance, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x00000A, "Member 'BP_Tgf_Monster_C_UpdateSpeedOnDistance::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_UpdateSpeedOnDistance, CallFunc_HasSpeedMod_Result) == 0x00000B, "Member 'BP_Tgf_Monster_C_UpdateSpeedOnDistance::CallFunc_HasSpeedMod_Result' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_UpdateSpeedOnDistance, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x00000C, "Member 'BP_Tgf_Monster_C_UpdateSpeedOnDistance::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_UpdateSpeedOnDistance, CallFunc_Less_DoubleDouble_ReturnValue) == 0x00000D, "Member 'BP_Tgf_Monster_C_UpdateSpeedOnDistance::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_UpdateSpeedOnDistance, CallFunc_Less_DoubleDouble_ReturnValue_1) == 0x00000E, "Member 'BP_Tgf_Monster_C_UpdateSpeedOnDistance::CallFunc_Less_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_UpdateSpeedOnDistance, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x00000F, "Member 'BP_Tgf_Monster_C_UpdateSpeedOnDistance::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");

// Function BP_Tgf_Monster.BP_Tgf_Monster_C.ValidateFlyable
// 0x0130 (0x0130 - 0x0000)
struct BP_Tgf_Monster_C_ValidateFlyable final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_BoolToText_ReturnValue;              // 0x0008(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0020(0x0050)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_BoolBool_ReturnValue;          // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0090(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00A8(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00F8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0108(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0120(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Tgf_Monster_C_ValidateFlyable) == 0x000008, "Wrong alignment on BP_Tgf_Monster_C_ValidateFlyable");
static_assert(sizeof(BP_Tgf_Monster_C_ValidateFlyable) == 0x000130, "Wrong size on BP_Tgf_Monster_C_ValidateFlyable");
static_assert(offsetof(BP_Tgf_Monster_C_ValidateFlyable, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_Tgf_Monster_C_ValidateFlyable::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ValidateFlyable, CallFunc_Conv_BoolToText_ReturnValue) == 0x000008, "Member 'BP_Tgf_Monster_C_ValidateFlyable::CallFunc_Conv_BoolToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ValidateFlyable, K2Node_MakeStruct_FormatArgumentData) == 0x000020, "Member 'BP_Tgf_Monster_C_ValidateFlyable::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ValidateFlyable, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000070, "Member 'BP_Tgf_Monster_C_ValidateFlyable::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ValidateFlyable, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000078, "Member 'BP_Tgf_Monster_C_ValidateFlyable::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ValidateFlyable, CallFunc_EqualEqual_BoolBool_ReturnValue) == 0x000088, "Member 'BP_Tgf_Monster_C_ValidateFlyable::CallFunc_EqualEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ValidateFlyable, CallFunc_Conv_StringToText_ReturnValue) == 0x000090, "Member 'BP_Tgf_Monster_C_ValidateFlyable::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ValidateFlyable, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000A8, "Member 'BP_Tgf_Monster_C_ValidateFlyable::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ValidateFlyable, K2Node_MakeArray_Array) == 0x0000F8, "Member 'BP_Tgf_Monster_C_ValidateFlyable::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ValidateFlyable, CallFunc_Format_ReturnValue) == 0x000108, "Member 'BP_Tgf_Monster_C_ValidateFlyable::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tgf_Monster_C_ValidateFlyable, CallFunc_Conv_TextToString_ReturnValue) == 0x000120, "Member 'BP_Tgf_Monster_C_ValidateFlyable::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");

}

