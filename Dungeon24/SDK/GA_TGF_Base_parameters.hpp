#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_TGF_Base

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "LyraGame_structs.hpp"
#include "PhysicsCore_structs.hpp"
#include "AGRPRO_structs.hpp"


namespace SDK::Params
{

// Function GA_TGF_Base.GA_TGF_Base_C.AddWeaponElement
// 0x00C0 (0x00C0 - 0x0000)
struct GA_TGF_Base_C_AddWeaponElement final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTgfEquipmentManagerComponent*          CallFunc_GetComponentByClass_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetCurrentWeaponFirstActor_ReturnValue;   // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ETgfBattleElement                             CallFunc_GetWeaponElement_ReturnValue;             // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_ParseBattleElementTagFromEnum_ReturnValue; // 0x0034(0x0008)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_MakeGameplayTagContainerFromTag_ReturnValue; // 0x0040(0x0020)()
	bool                                          CallFunc_AddLooseGameplayTags_ReturnValue;         // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTgfEquipmentManagerComponent*          CallFunc_GetComponentByClass_ReturnValue_1;        // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	ETgfBattleElement                             CallFunc_GetWeaponElement_ReturnValue_1;           // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddLooseGameplayTags_ReturnValue_1;       // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_72[0x6];                                       // 0x0072(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1; // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_ParseBattleElementTagFromEnum_ReturnValue_1; // 0x0088(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  CallFunc_MakeGameplayTagContainerFromTag_ReturnValue_1; // 0x0090(0x0020)()
	class AActor*                                 CallFunc_GetCurrentWeaponFirstActor_ReturnValue_1; // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_TGF_Base_C_AddWeaponElement) == 0x000008, "Wrong alignment on GA_TGF_Base_C_AddWeaponElement");
static_assert(sizeof(GA_TGF_Base_C_AddWeaponElement) == 0x0000C0, "Wrong size on GA_TGF_Base_C_AddWeaponElement");
static_assert(offsetof(GA_TGF_Base_C_AddWeaponElement, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'GA_TGF_Base_C_AddWeaponElement::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_AddWeaponElement, CallFunc_GetComponentByClass_ReturnValue) == 0x000008, "Member 'GA_TGF_Base_C_AddWeaponElement::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_AddWeaponElement, CallFunc_GetCurrentWeaponFirstActor_ReturnValue) == 0x000010, "Member 'GA_TGF_Base_C_AddWeaponElement::CallFunc_GetCurrentWeaponFirstActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_AddWeaponElement, CallFunc_GetWeaponElement_ReturnValue) == 0x000018, "Member 'GA_TGF_Base_C_AddWeaponElement::CallFunc_GetWeaponElement_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_AddWeaponElement, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000020, "Member 'GA_TGF_Base_C_AddWeaponElement::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_AddWeaponElement, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000030, "Member 'GA_TGF_Base_C_AddWeaponElement::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_AddWeaponElement, CallFunc_ParseBattleElementTagFromEnum_ReturnValue) == 0x000034, "Member 'GA_TGF_Base_C_AddWeaponElement::CallFunc_ParseBattleElementTagFromEnum_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_AddWeaponElement, CallFunc_MakeGameplayTagContainerFromTag_ReturnValue) == 0x000040, "Member 'GA_TGF_Base_C_AddWeaponElement::CallFunc_MakeGameplayTagContainerFromTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_AddWeaponElement, CallFunc_AddLooseGameplayTags_ReturnValue) == 0x000060, "Member 'GA_TGF_Base_C_AddWeaponElement::CallFunc_AddLooseGameplayTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_AddWeaponElement, CallFunc_GetComponentByClass_ReturnValue_1) == 0x000068, "Member 'GA_TGF_Base_C_AddWeaponElement::CallFunc_GetComponentByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_AddWeaponElement, CallFunc_GetWeaponElement_ReturnValue_1) == 0x000070, "Member 'GA_TGF_Base_C_AddWeaponElement::CallFunc_GetWeaponElement_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_AddWeaponElement, CallFunc_AddLooseGameplayTags_ReturnValue_1) == 0x000071, "Member 'GA_TGF_Base_C_AddWeaponElement::CallFunc_AddLooseGameplayTags_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_AddWeaponElement, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1) == 0x000078, "Member 'GA_TGF_Base_C_AddWeaponElement::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_AddWeaponElement, CallFunc_ParseBattleElementTagFromEnum_ReturnValue_1) == 0x000088, "Member 'GA_TGF_Base_C_AddWeaponElement::CallFunc_ParseBattleElementTagFromEnum_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_AddWeaponElement, CallFunc_MakeGameplayTagContainerFromTag_ReturnValue_1) == 0x000090, "Member 'GA_TGF_Base_C_AddWeaponElement::CallFunc_MakeGameplayTagContainerFromTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_AddWeaponElement, CallFunc_GetCurrentWeaponFirstActor_ReturnValue_1) == 0x0000B0, "Member 'GA_TGF_Base_C_AddWeaponElement::CallFunc_GetCurrentWeaponFirstActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_AddWeaponElement, CallFunc_IsValid_ReturnValue_1) == 0x0000B8, "Member 'GA_TGF_Base_C_AddWeaponElement::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_AddWeaponElement, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x0000B9, "Member 'GA_TGF_Base_C_AddWeaponElement::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_AddWeaponElement, CallFunc_BooleanAND_ReturnValue) == 0x0000BA, "Member 'GA_TGF_Base_C_AddWeaponElement::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function GA_TGF_Base.GA_TGF_Base_C.Apply Counter
// 0x0050 (0x0050 - 0x0000)
struct GA_TGF_Base_C_Apply_Counter final
{
public:
	bool                                          CallFunc_K2_HasAuthority_ReturnValue;              // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ALyraCharacter*                         K2Node_DynamicCast_AsLyra_Character;               // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETgfActorType                                 CallFunc_GetActorType_ReturnValue;                 // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMonster_ReturnValue;                    // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponentFromActorInfo_ReturnValue; // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue; // 0x0028(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue_1;               // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponentFromActorInfo_ReturnValue_1; // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue_1;  // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue_1; // 0x0048(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_TGF_Base_C_Apply_Counter) == 0x000008, "Wrong alignment on GA_TGF_Base_C_Apply_Counter");
static_assert(sizeof(GA_TGF_Base_C_Apply_Counter) == 0x000050, "Wrong size on GA_TGF_Base_C_Apply_Counter");
static_assert(offsetof(GA_TGF_Base_C_Apply_Counter, CallFunc_K2_HasAuthority_ReturnValue) == 0x000000, "Member 'GA_TGF_Base_C_Apply_Counter::CallFunc_K2_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_Apply_Counter, K2Node_DynamicCast_AsLyra_Character) == 0x000008, "Member 'GA_TGF_Base_C_Apply_Counter::K2Node_DynamicCast_AsLyra_Character' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_Apply_Counter, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'GA_TGF_Base_C_Apply_Counter::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_Apply_Counter, CallFunc_GetActorType_ReturnValue) == 0x000011, "Member 'GA_TGF_Base_C_Apply_Counter::CallFunc_GetActorType_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_Apply_Counter, CallFunc_IsMonster_ReturnValue) == 0x000012, "Member 'GA_TGF_Base_C_Apply_Counter::CallFunc_IsMonster_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_Apply_Counter, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x000013, "Member 'GA_TGF_Base_C_Apply_Counter::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_Apply_Counter, CallFunc_GetAbilitySystemComponentFromActorInfo_ReturnValue) == 0x000018, "Member 'GA_TGF_Base_C_Apply_Counter::CallFunc_GetAbilitySystemComponentFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_Apply_Counter, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x000020, "Member 'GA_TGF_Base_C_Apply_Counter::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_Apply_Counter, CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue) == 0x000028, "Member 'GA_TGF_Base_C_Apply_Counter::CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_Apply_Counter, CallFunc_IsValidClass_ReturnValue) == 0x000030, "Member 'GA_TGF_Base_C_Apply_Counter::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_Apply_Counter, CallFunc_IsValidClass_ReturnValue_1) == 0x000031, "Member 'GA_TGF_Base_C_Apply_Counter::CallFunc_IsValidClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_Apply_Counter, CallFunc_GetAbilitySystemComponentFromActorInfo_ReturnValue_1) == 0x000038, "Member 'GA_TGF_Base_C_Apply_Counter::CallFunc_GetAbilitySystemComponentFromActorInfo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_Apply_Counter, CallFunc_GetAbilitySystemComponent_ReturnValue_1) == 0x000040, "Member 'GA_TGF_Base_C_Apply_Counter::CallFunc_GetAbilitySystemComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_Apply_Counter, CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue_1) == 0x000048, "Member 'GA_TGF_Base_C_Apply_Counter::CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue_1' has a wrong offset!");

// Function GA_TGF_Base.GA_TGF_Base_C.ApplyAbilityHurtType
// 0x0001 (0x0001 - 0x0000)
struct GA_TGF_Base_C_ApplyAbilityHurtType final
{
public:
	bool                                          CallFunc_AddLooseGameplayTags_ReturnValue;         // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_TGF_Base_C_ApplyAbilityHurtType) == 0x000001, "Wrong alignment on GA_TGF_Base_C_ApplyAbilityHurtType");
static_assert(sizeof(GA_TGF_Base_C_ApplyAbilityHurtType) == 0x000001, "Wrong size on GA_TGF_Base_C_ApplyAbilityHurtType");
static_assert(offsetof(GA_TGF_Base_C_ApplyAbilityHurtType, CallFunc_AddLooseGameplayTags_ReturnValue) == 0x000000, "Member 'GA_TGF_Base_C_ApplyAbilityHurtType::CallFunc_AddLooseGameplayTags_ReturnValue' has a wrong offset!");

// Function GA_TGF_Base.GA_TGF_Base_C.ApplyGuarded
// 0x0110 (0x0110 - 0x0000)
struct GA_TGF_Base_C_ApplyGuarded final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ALyraCharacter*                         CallFunc_GetLyraCharacterFromActorInfo_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     K2Node_MakeStruct_GameplayEventData;               // 0x0010(0x00B0)()
	struct FGameplayTagContainer                  CallFunc_MakeGameplayTagContainerFromTag_ReturnValue; // 0x00C0(0x0020)()
	bool                                          CallFunc_AddLooseGameplayTags_ReturnValue;         // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E2[0x6];                                       // 0x00E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_MakeGameplayTagContainerFromTag_ReturnValue_1; // 0x00E8(0x0020)()
	bool                                          CallFunc_AddLooseGameplayTags_ReturnValue_1;       // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue_1;     // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_TGF_Base_C_ApplyGuarded) == 0x000008, "Wrong alignment on GA_TGF_Base_C_ApplyGuarded");
static_assert(sizeof(GA_TGF_Base_C_ApplyGuarded) == 0x000110, "Wrong size on GA_TGF_Base_C_ApplyGuarded");
static_assert(offsetof(GA_TGF_Base_C_ApplyGuarded, Result) == 0x000000, "Member 'GA_TGF_Base_C_ApplyGuarded::Result' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ApplyGuarded, CallFunc_GetLyraCharacterFromActorInfo_ReturnValue) == 0x000008, "Member 'GA_TGF_Base_C_ApplyGuarded::CallFunc_GetLyraCharacterFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ApplyGuarded, K2Node_MakeStruct_GameplayEventData) == 0x000010, "Member 'GA_TGF_Base_C_ApplyGuarded::K2Node_MakeStruct_GameplayEventData' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ApplyGuarded, CallFunc_MakeGameplayTagContainerFromTag_ReturnValue) == 0x0000C0, "Member 'GA_TGF_Base_C_ApplyGuarded::CallFunc_MakeGameplayTagContainerFromTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ApplyGuarded, CallFunc_AddLooseGameplayTags_ReturnValue) == 0x0000E0, "Member 'GA_TGF_Base_C_ApplyGuarded::CallFunc_AddLooseGameplayTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ApplyGuarded, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x0000E1, "Member 'GA_TGF_Base_C_ApplyGuarded::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ApplyGuarded, CallFunc_MakeGameplayTagContainerFromTag_ReturnValue_1) == 0x0000E8, "Member 'GA_TGF_Base_C_ApplyGuarded::CallFunc_MakeGameplayTagContainerFromTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ApplyGuarded, CallFunc_AddLooseGameplayTags_ReturnValue_1) == 0x000108, "Member 'GA_TGF_Base_C_ApplyGuarded::CallFunc_AddLooseGameplayTags_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ApplyGuarded, CallFunc_HasMatchingGameplayTag_ReturnValue_1) == 0x000109, "Member 'GA_TGF_Base_C_ApplyGuarded::CallFunc_HasMatchingGameplayTag_ReturnValue_1' has a wrong offset!");

// Function GA_TGF_Base.GA_TGF_Base_C.ApplyHitPartTag
// 0x0310 (0x0310 - 0x0000)
struct GA_TGF_Base_C_ApplyHitPartTag final
{
public:
	bool                                          CallFunc_AddLooseGameplayTags_ReturnValue;         // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_EffectContextGetHitResult_ReturnValue;    // 0x0008(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F2[0x2];                                       // 0x00F2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FC[0x4];                                       // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0100(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0118(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0130(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0148(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0160(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0168(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0170(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_194[0x4];                                      // 0x0194(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0198(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDebugStringFromGameplayTagContainer_ReturnValue; // 0x01C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x01D8(0x0018)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x01F0(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0208(0x0050)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0258(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x02A8(0x0010)(ReferenceParm)
	class UTgfCharacterAnimationHelperComponent*  CallFunc_GetComponentByClass_ReturnValue;          // 0x02B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x02C0(0x0018)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x02D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D9[0x7];                                      // 0x02D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x02E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  CallFunc_GetTagFromBoneName_ReturnValue;           // 0x02F0(0x0020)(ConstParm)
};
static_assert(alignof(GA_TGF_Base_C_ApplyHitPartTag) == 0x000008, "Wrong alignment on GA_TGF_Base_C_ApplyHitPartTag");
static_assert(sizeof(GA_TGF_Base_C_ApplyHitPartTag) == 0x000310, "Wrong size on GA_TGF_Base_C_ApplyHitPartTag");
static_assert(offsetof(GA_TGF_Base_C_ApplyHitPartTag, CallFunc_AddLooseGameplayTags_ReturnValue) == 0x000000, "Member 'GA_TGF_Base_C_ApplyHitPartTag::CallFunc_AddLooseGameplayTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ApplyHitPartTag, CallFunc_EffectContextGetHitResult_ReturnValue) == 0x000008, "Member 'GA_TGF_Base_C_ApplyHitPartTag::CallFunc_EffectContextGetHitResult_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ApplyHitPartTag, CallFunc_BreakHitResult_bBlockingHit) == 0x0000F0, "Member 'GA_TGF_Base_C_ApplyHitPartTag::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ApplyHitPartTag, CallFunc_BreakHitResult_bInitialOverlap) == 0x0000F1, "Member 'GA_TGF_Base_C_ApplyHitPartTag::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ApplyHitPartTag, CallFunc_BreakHitResult_Time) == 0x0000F4, "Member 'GA_TGF_Base_C_ApplyHitPartTag::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ApplyHitPartTag, CallFunc_BreakHitResult_Distance) == 0x0000F8, "Member 'GA_TGF_Base_C_ApplyHitPartTag::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ApplyHitPartTag, CallFunc_BreakHitResult_Location) == 0x000100, "Member 'GA_TGF_Base_C_ApplyHitPartTag::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ApplyHitPartTag, CallFunc_BreakHitResult_ImpactPoint) == 0x000118, "Member 'GA_TGF_Base_C_ApplyHitPartTag::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ApplyHitPartTag, CallFunc_BreakHitResult_Normal) == 0x000130, "Member 'GA_TGF_Base_C_ApplyHitPartTag::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ApplyHitPartTag, CallFunc_BreakHitResult_ImpactNormal) == 0x000148, "Member 'GA_TGF_Base_C_ApplyHitPartTag::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ApplyHitPartTag, CallFunc_BreakHitResult_PhysMat) == 0x000160, "Member 'GA_TGF_Base_C_ApplyHitPartTag::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ApplyHitPartTag, CallFunc_BreakHitResult_HitActor) == 0x000168, "Member 'GA_TGF_Base_C_ApplyHitPartTag::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ApplyHitPartTag, CallFunc_BreakHitResult_HitComponent) == 0x000170, "Member 'GA_TGF_Base_C_ApplyHitPartTag::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ApplyHitPartTag, CallFunc_BreakHitResult_HitBoneName) == 0x000178, "Member 'GA_TGF_Base_C_ApplyHitPartTag::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ApplyHitPartTag, CallFunc_BreakHitResult_BoneName) == 0x000180, "Member 'GA_TGF_Base_C_ApplyHitPartTag::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ApplyHitPartTag, CallFunc_BreakHitResult_HitItem) == 0x000188, "Member 'GA_TGF_Base_C_ApplyHitPartTag::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ApplyHitPartTag, CallFunc_BreakHitResult_ElementIndex) == 0x00018C, "Member 'GA_TGF_Base_C_ApplyHitPartTag::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ApplyHitPartTag, CallFunc_BreakHitResult_FaceIndex) == 0x000190, "Member 'GA_TGF_Base_C_ApplyHitPartTag::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ApplyHitPartTag, CallFunc_BreakHitResult_TraceStart) == 0x000198, "Member 'GA_TGF_Base_C_ApplyHitPartTag::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ApplyHitPartTag, CallFunc_BreakHitResult_TraceEnd) == 0x0001B0, "Member 'GA_TGF_Base_C_ApplyHitPartTag::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ApplyHitPartTag, CallFunc_GetDebugStringFromGameplayTagContainer_ReturnValue) == 0x0001C8, "Member 'GA_TGF_Base_C_ApplyHitPartTag::CallFunc_GetDebugStringFromGameplayTagContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ApplyHitPartTag, CallFunc_Conv_NameToText_ReturnValue) == 0x0001D8, "Member 'GA_TGF_Base_C_ApplyHitPartTag::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ApplyHitPartTag, CallFunc_Conv_StringToText_ReturnValue) == 0x0001F0, "Member 'GA_TGF_Base_C_ApplyHitPartTag::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ApplyHitPartTag, K2Node_MakeStruct_FormatArgumentData) == 0x000208, "Member 'GA_TGF_Base_C_ApplyHitPartTag::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ApplyHitPartTag, K2Node_MakeStruct_FormatArgumentData_1) == 0x000258, "Member 'GA_TGF_Base_C_ApplyHitPartTag::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ApplyHitPartTag, K2Node_MakeArray_Array) == 0x0002A8, "Member 'GA_TGF_Base_C_ApplyHitPartTag::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ApplyHitPartTag, CallFunc_GetComponentByClass_ReturnValue) == 0x0002B8, "Member 'GA_TGF_Base_C_ApplyHitPartTag::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ApplyHitPartTag, CallFunc_Format_ReturnValue) == 0x0002C0, "Member 'GA_TGF_Base_C_ApplyHitPartTag::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ApplyHitPartTag, CallFunc_IsValid_ReturnValue) == 0x0002D8, "Member 'GA_TGF_Base_C_ApplyHitPartTag::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ApplyHitPartTag, CallFunc_Conv_TextToString_ReturnValue) == 0x0002E0, "Member 'GA_TGF_Base_C_ApplyHitPartTag::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ApplyHitPartTag, CallFunc_GetTagFromBoneName_ReturnValue) == 0x0002F0, "Member 'GA_TGF_Base_C_ApplyHitPartTag::CallFunc_GetTagFromBoneName_ReturnValue' has a wrong offset!");

// Function GA_TGF_Base.GA_TGF_Base_C.ApplyMeleeWeaponEffect
// 0x0710 (0x0710 - 0x0000)
struct GA_TGF_Base_C_ApplyMeleeWeaponEffect final
{
public:
	struct FGameplayEventData                     MeleeWeaponEffectInputData;                        // 0x0000(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          CallFunc_EffectContextHasExtraParam_ReturnValue;   // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULyraTeamSubsystem*                     CallFunc_GetWorldSubsystem_ReturnValue;            // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_DynamicCast_AsActor;                        // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x3];                                       // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UClass*>                         CallFunc_DecideGEsToUse_ResultGEs;                 // 0x00D0(0x0010)(ReferenceParm)
	TArray<class UClass*>                         CallFunc_DecideGEsToUse_ResultGEs_1;               // 0x00E0(0x0010)(ReferenceParm)
	TArray<class UClass*>                         CallFunc_DecideGEsToUse_ResultGEs_2;               // 0x00F0(0x0010)(ReferenceParm)
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x0100(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue_1;  // 0x0108(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue_2;  // 0x0110(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsWhichHandWeapon_ReturnValue;            // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsWhichHandWeapon_ReturnValue_1;          // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x011A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11B[0x1];                                      // 0x011B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ApplyGuarded_Result;                      // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_125[0x3];                                      // 0x0125(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_Array_Get_Item;                           // 0x0128(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckHitIneractorEnviorment_Result;       // 0x0134(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0135(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckHitInteractorBattle_Result;          // 0x0136(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_137[0x1];                                      // 0x0137(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue;            // 0x0138(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0150(0x0050)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue_1;          // 0x01A0(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x01B8(0x0050)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue_2;          // 0x0208(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0220(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0270(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0280(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0298(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FTgfGameplayEffectExtraParam           K2Node_MakeStruct_TgfGameplayEffectExtraParam;     // 0x02A8(0x0018)()
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue_3;  // 0x02C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_GetOwnedGameplayTags_self_CastInput;      // 0x02C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  CallFunc_GetOwnedGameplayTags_TagContainer;        // 0x02D8(0x0020)()
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue_4;  // 0x02F8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_GetOwnedGameplayTags_self_CastInput_1;    // 0x0300(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  CallFunc_GetOwnedGameplayTags_TagContainer_1;      // 0x0310(0x0020)()
	struct FGameplayTagContainer                  CallFunc_GetSourceTags_Tags;                       // 0x0330(0x0020)()
	struct FHitResult                             CallFunc_EffectContextGetHitResult_ReturnValue;    // 0x0350(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FGameplayCueParameters                 CallFunc_MakeGameplayCueParametersFromHitResult_ReturnValue; // 0x0438(0x00E0)(ContainsInstancedReference)
	float                                         CallFunc_BreakGameplayCueParameters_NormalizedMagnitude; // 0x0518(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakGameplayCueParameters_RawMagnitude;  // 0x051C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectContextHandle           CallFunc_BreakGameplayCueParameters_EffectContext; // 0x0520(0x0018)()
	struct FGameplayTag                           CallFunc_BreakGameplayCueParameters_MatchedTagName; // 0x0538(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_BreakGameplayCueParameters_OriginalTag;   // 0x0540(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  CallFunc_BreakGameplayCueParameters_AggregatedSourceTags; // 0x0548(0x0020)()
	struct FGameplayTagContainer                  CallFunc_BreakGameplayCueParameters_AggregatedTargetTags; // 0x0568(0x0020)()
	struct FVector                                CallFunc_BreakGameplayCueParameters_Location;      // 0x0588(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakGameplayCueParameters_Normal;        // 0x05A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakGameplayCueParameters_Instigator;    // 0x05B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakGameplayCueParameters_EffectCauser;  // 0x05C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_BreakGameplayCueParameters_SourceObject;  // 0x05C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakGameplayCueParameters_PhysicalMaterial; // 0x05D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGameplayEffect*                        CallFunc_BreakGameplayCueParameters_GameplayEffect; // 0x05D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakGameplayCueParameters_GameplayEffectLevel; // 0x05E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakGameplayCueParameters_AbilityLevel;  // 0x05E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_BreakGameplayCueParameters_TargetAttachComponent; // 0x05E8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakGameplayCueParameters_bReplicateLocationWhenUsingMinimalRepProxy; // 0x05F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_HasAuthority_ReturnValue;              // 0x05F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F2[0x6];                                      // 0x05F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayCueParameters                 CallFunc_MakeGameplayCueParameters_ReturnValue;    // 0x05F8(0x00E0)(ContainsInstancedReference)
	bool                                          CallFunc_CheckGuarded_Result;                      // 0x06D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D9[0x7];                                      // 0x06D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ALyraCharacter*                         CallFunc_GetLyraCharacterFromActorInfo_ReturnValue; // 0x06E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_CompareTeams_TeamIdA;                     // 0x06E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_CompareTeams_TeamIdB;                     // 0x06EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELyraTeamComparison                           CallFunc_CompareTeams_ReturnValue;                 // 0x06F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x06F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6F2[0x2];                                      // 0x06F2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_ApplyGE_WeaponAttack_ImplicitCast;        // 0x06F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_ApplyGE_WeaponAttack_ImplicitCast_1;      // 0x06F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_ApplyGE_WeaponAttack_ImplicitCast_2;      // 0x06FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_EffectContextSetDirectionWeight_InTangentWeight_ImplicitCast; // 0x0700(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_EffectContextSetDirectionWeight_InNormalWeight_ImplicitCast; // 0x0704(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_TangentWeight_ImplicitCast;      // 0x0708(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_NormalWeight_ImplicitCast;       // 0x070C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_TGF_Base_C_ApplyMeleeWeaponEffect) == 0x000008, "Wrong alignment on GA_TGF_Base_C_ApplyMeleeWeaponEffect");
static_assert(sizeof(GA_TGF_Base_C_ApplyMeleeWeaponEffect) == 0x000710, "Wrong size on GA_TGF_Base_C_ApplyMeleeWeaponEffect");
static_assert(offsetof(GA_TGF_Base_C_ApplyMeleeWeaponEffect, MeleeWeaponEffectInputData) == 0x000000, "Member 'GA_TGF_Base_C_ApplyMeleeWeaponEffect::MeleeWeaponEffectInputData' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ApplyMeleeWeaponEffect, CallFunc_EffectContextHasExtraParam_ReturnValue) == 0x0000B0, "Member 'GA_TGF_Base_C_ApplyMeleeWeaponEffect::CallFunc_EffectContextHasExtraParam_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ApplyMeleeWeaponEffect, CallFunc_GetWorldSubsystem_ReturnValue) == 0x0000B8, "Member 'GA_TGF_Base_C_ApplyMeleeWeaponEffect::CallFunc_GetWorldSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ApplyMeleeWeaponEffect, K2Node_DynamicCast_AsActor) == 0x0000C0, "Member 'GA_TGF_Base_C_ApplyMeleeWeaponEffect::K2Node_DynamicCast_AsActor' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ApplyMeleeWeaponEffect, K2Node_DynamicCast_bSuccess) == 0x0000C8, "Member 'GA_TGF_Base_C_ApplyMeleeWeaponEffect::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ApplyMeleeWeaponEffect, Temp_int_Array_Index_Variable) == 0x0000CC, "Member 'GA_TGF_Base_C_ApplyMeleeWeaponEffect::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ApplyMeleeWeaponEffect, CallFunc_DecideGEsToUse_ResultGEs) == 0x0000D0, "Member 'GA_TGF_Base_C_ApplyMeleeWeaponEffect::CallFunc_DecideGEsToUse_ResultGEs' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ApplyMeleeWeaponEffect, CallFunc_DecideGEsToUse_ResultGEs_1) == 0x0000E0, "Member 'GA_TGF_Base_C_ApplyMeleeWeaponEffect::CallFunc_DecideGEsToUse_ResultGEs_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ApplyMeleeWeaponEffect, CallFunc_DecideGEsToUse_ResultGEs_2) == 0x0000F0, "Member 'GA_TGF_Base_C_ApplyMeleeWeaponEffect::CallFunc_DecideGEsToUse_ResultGEs_2' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ApplyMeleeWeaponEffect, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x000100, "Member 'GA_TGF_Base_C_ApplyMeleeWeaponEffect::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ApplyMeleeWeaponEffect, CallFunc_GetAbilitySystemComponent_ReturnValue_1) == 0x000108, "Member 'GA_TGF_Base_C_ApplyMeleeWeaponEffect::CallFunc_GetAbilitySystemComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ApplyMeleeWeaponEffect, CallFunc_GetAbilitySystemComponent_ReturnValue_2) == 0x000110, "Member 'GA_TGF_Base_C_ApplyMeleeWeaponEffect::CallFunc_GetAbilitySystemComponent_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ApplyMeleeWeaponEffect, CallFunc_IsWhichHandWeapon_ReturnValue) == 0x000118, "Member 'GA_TGF_Base_C_ApplyMeleeWeaponEffect::CallFunc_IsWhichHandWeapon_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ApplyMeleeWeaponEffect, CallFunc_IsWhichHandWeapon_ReturnValue_1) == 0x000119, "Member 'GA_TGF_Base_C_ApplyMeleeWeaponEffect::CallFunc_IsWhichHandWeapon_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ApplyMeleeWeaponEffect, CallFunc_IsValid_ReturnValue) == 0x00011A, "Member 'GA_TGF_Base_C_ApplyMeleeWeaponEffect::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ApplyMeleeWeaponEffect, Temp_int_Loop_Counter_Variable) == 0x00011C, "Member 'GA_TGF_Base_C_ApplyMeleeWeaponEffect::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ApplyMeleeWeaponEffect, CallFunc_Add_IntInt_ReturnValue) == 0x000120, "Member 'GA_TGF_Base_C_ApplyMeleeWeaponEffect::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ApplyMeleeWeaponEffect, CallFunc_ApplyGuarded_Result) == 0x000124, "Member 'GA_TGF_Base_C_ApplyMeleeWeaponEffect::CallFunc_ApplyGuarded_Result' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ApplyMeleeWeaponEffect, CallFunc_Array_Get_Item) == 0x000128, "Member 'GA_TGF_Base_C_ApplyMeleeWeaponEffect::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ApplyMeleeWeaponEffect, CallFunc_Array_Length_ReturnValue) == 0x000130, "Member 'GA_TGF_Base_C_ApplyMeleeWeaponEffect::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ApplyMeleeWeaponEffect, CallFunc_CheckHitIneractorEnviorment_Result) == 0x000134, "Member 'GA_TGF_Base_C_ApplyMeleeWeaponEffect::CallFunc_CheckHitIneractorEnviorment_Result' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ApplyMeleeWeaponEffect, CallFunc_Less_IntInt_ReturnValue) == 0x000135, "Member 'GA_TGF_Base_C_ApplyMeleeWeaponEffect::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ApplyMeleeWeaponEffect, CallFunc_CheckHitInteractorBattle_Result) == 0x000136, "Member 'GA_TGF_Base_C_ApplyMeleeWeaponEffect::CallFunc_CheckHitInteractorBattle_Result' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ApplyMeleeWeaponEffect, CallFunc_Conv_ObjectToText_ReturnValue) == 0x000138, "Member 'GA_TGF_Base_C_ApplyMeleeWeaponEffect::CallFunc_Conv_ObjectToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ApplyMeleeWeaponEffect, K2Node_MakeStruct_FormatArgumentData) == 0x000150, "Member 'GA_TGF_Base_C_ApplyMeleeWeaponEffect::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ApplyMeleeWeaponEffect, CallFunc_Conv_ObjectToText_ReturnValue_1) == 0x0001A0, "Member 'GA_TGF_Base_C_ApplyMeleeWeaponEffect::CallFunc_Conv_ObjectToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ApplyMeleeWeaponEffect, K2Node_MakeStruct_FormatArgumentData_1) == 0x0001B8, "Member 'GA_TGF_Base_C_ApplyMeleeWeaponEffect::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ApplyMeleeWeaponEffect, CallFunc_Conv_ObjectToText_ReturnValue_2) == 0x000208, "Member 'GA_TGF_Base_C_ApplyMeleeWeaponEffect::CallFunc_Conv_ObjectToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ApplyMeleeWeaponEffect, K2Node_MakeStruct_FormatArgumentData_2) == 0x000220, "Member 'GA_TGF_Base_C_ApplyMeleeWeaponEffect::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ApplyMeleeWeaponEffect, K2Node_MakeArray_Array) == 0x000270, "Member 'GA_TGF_Base_C_ApplyMeleeWeaponEffect::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ApplyMeleeWeaponEffect, CallFunc_Format_ReturnValue) == 0x000280, "Member 'GA_TGF_Base_C_ApplyMeleeWeaponEffect::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ApplyMeleeWeaponEffect, CallFunc_Conv_TextToString_ReturnValue) == 0x000298, "Member 'GA_TGF_Base_C_ApplyMeleeWeaponEffect::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ApplyMeleeWeaponEffect, K2Node_MakeStruct_TgfGameplayEffectExtraParam) == 0x0002A8, "Member 'GA_TGF_Base_C_ApplyMeleeWeaponEffect::K2Node_MakeStruct_TgfGameplayEffectExtraParam' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ApplyMeleeWeaponEffect, CallFunc_GetAbilitySystemComponent_ReturnValue_3) == 0x0002C0, "Member 'GA_TGF_Base_C_ApplyMeleeWeaponEffect::CallFunc_GetAbilitySystemComponent_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ApplyMeleeWeaponEffect, CallFunc_GetOwnedGameplayTags_self_CastInput) == 0x0002C8, "Member 'GA_TGF_Base_C_ApplyMeleeWeaponEffect::CallFunc_GetOwnedGameplayTags_self_CastInput' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ApplyMeleeWeaponEffect, CallFunc_GetOwnedGameplayTags_TagContainer) == 0x0002D8, "Member 'GA_TGF_Base_C_ApplyMeleeWeaponEffect::CallFunc_GetOwnedGameplayTags_TagContainer' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ApplyMeleeWeaponEffect, CallFunc_GetAbilitySystemComponent_ReturnValue_4) == 0x0002F8, "Member 'GA_TGF_Base_C_ApplyMeleeWeaponEffect::CallFunc_GetAbilitySystemComponent_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ApplyMeleeWeaponEffect, CallFunc_GetOwnedGameplayTags_self_CastInput_1) == 0x000300, "Member 'GA_TGF_Base_C_ApplyMeleeWeaponEffect::CallFunc_GetOwnedGameplayTags_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ApplyMeleeWeaponEffect, CallFunc_GetOwnedGameplayTags_TagContainer_1) == 0x000310, "Member 'GA_TGF_Base_C_ApplyMeleeWeaponEffect::CallFunc_GetOwnedGameplayTags_TagContainer_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ApplyMeleeWeaponEffect, CallFunc_GetSourceTags_Tags) == 0x000330, "Member 'GA_TGF_Base_C_ApplyMeleeWeaponEffect::CallFunc_GetSourceTags_Tags' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ApplyMeleeWeaponEffect, CallFunc_EffectContextGetHitResult_ReturnValue) == 0x000350, "Member 'GA_TGF_Base_C_ApplyMeleeWeaponEffect::CallFunc_EffectContextGetHitResult_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ApplyMeleeWeaponEffect, CallFunc_MakeGameplayCueParametersFromHitResult_ReturnValue) == 0x000438, "Member 'GA_TGF_Base_C_ApplyMeleeWeaponEffect::CallFunc_MakeGameplayCueParametersFromHitResult_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ApplyMeleeWeaponEffect, CallFunc_BreakGameplayCueParameters_NormalizedMagnitude) == 0x000518, "Member 'GA_TGF_Base_C_ApplyMeleeWeaponEffect::CallFunc_BreakGameplayCueParameters_NormalizedMagnitude' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ApplyMeleeWeaponEffect, CallFunc_BreakGameplayCueParameters_RawMagnitude) == 0x00051C, "Member 'GA_TGF_Base_C_ApplyMeleeWeaponEffect::CallFunc_BreakGameplayCueParameters_RawMagnitude' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ApplyMeleeWeaponEffect, CallFunc_BreakGameplayCueParameters_EffectContext) == 0x000520, "Member 'GA_TGF_Base_C_ApplyMeleeWeaponEffect::CallFunc_BreakGameplayCueParameters_EffectContext' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ApplyMeleeWeaponEffect, CallFunc_BreakGameplayCueParameters_MatchedTagName) == 0x000538, "Member 'GA_TGF_Base_C_ApplyMeleeWeaponEffect::CallFunc_BreakGameplayCueParameters_MatchedTagName' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ApplyMeleeWeaponEffect, CallFunc_BreakGameplayCueParameters_OriginalTag) == 0x000540, "Member 'GA_TGF_Base_C_ApplyMeleeWeaponEffect::CallFunc_BreakGameplayCueParameters_OriginalTag' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ApplyMeleeWeaponEffect, CallFunc_BreakGameplayCueParameters_AggregatedSourceTags) == 0x000548, "Member 'GA_TGF_Base_C_ApplyMeleeWeaponEffect::CallFunc_BreakGameplayCueParameters_AggregatedSourceTags' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ApplyMeleeWeaponEffect, CallFunc_BreakGameplayCueParameters_AggregatedTargetTags) == 0x000568, "Member 'GA_TGF_Base_C_ApplyMeleeWeaponEffect::CallFunc_BreakGameplayCueParameters_AggregatedTargetTags' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ApplyMeleeWeaponEffect, CallFunc_BreakGameplayCueParameters_Location) == 0x000588, "Member 'GA_TGF_Base_C_ApplyMeleeWeaponEffect::CallFunc_BreakGameplayCueParameters_Location' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ApplyMeleeWeaponEffect, CallFunc_BreakGameplayCueParameters_Normal) == 0x0005A0, "Member 'GA_TGF_Base_C_ApplyMeleeWeaponEffect::CallFunc_BreakGameplayCueParameters_Normal' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ApplyMeleeWeaponEffect, CallFunc_BreakGameplayCueParameters_Instigator) == 0x0005B8, "Member 'GA_TGF_Base_C_ApplyMeleeWeaponEffect::CallFunc_BreakGameplayCueParameters_Instigator' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ApplyMeleeWeaponEffect, CallFunc_BreakGameplayCueParameters_EffectCauser) == 0x0005C0, "Member 'GA_TGF_Base_C_ApplyMeleeWeaponEffect::CallFunc_BreakGameplayCueParameters_EffectCauser' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ApplyMeleeWeaponEffect, CallFunc_BreakGameplayCueParameters_SourceObject) == 0x0005C8, "Member 'GA_TGF_Base_C_ApplyMeleeWeaponEffect::CallFunc_BreakGameplayCueParameters_SourceObject' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ApplyMeleeWeaponEffect, CallFunc_BreakGameplayCueParameters_PhysicalMaterial) == 0x0005D0, "Member 'GA_TGF_Base_C_ApplyMeleeWeaponEffect::CallFunc_BreakGameplayCueParameters_PhysicalMaterial' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ApplyMeleeWeaponEffect, CallFunc_BreakGameplayCueParameters_GameplayEffect) == 0x0005D8, "Member 'GA_TGF_Base_C_ApplyMeleeWeaponEffect::CallFunc_BreakGameplayCueParameters_GameplayEffect' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ApplyMeleeWeaponEffect, CallFunc_BreakGameplayCueParameters_GameplayEffectLevel) == 0x0005E0, "Member 'GA_TGF_Base_C_ApplyMeleeWeaponEffect::CallFunc_BreakGameplayCueParameters_GameplayEffectLevel' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ApplyMeleeWeaponEffect, CallFunc_BreakGameplayCueParameters_AbilityLevel) == 0x0005E4, "Member 'GA_TGF_Base_C_ApplyMeleeWeaponEffect::CallFunc_BreakGameplayCueParameters_AbilityLevel' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ApplyMeleeWeaponEffect, CallFunc_BreakGameplayCueParameters_TargetAttachComponent) == 0x0005E8, "Member 'GA_TGF_Base_C_ApplyMeleeWeaponEffect::CallFunc_BreakGameplayCueParameters_TargetAttachComponent' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ApplyMeleeWeaponEffect, CallFunc_BreakGameplayCueParameters_bReplicateLocationWhenUsingMinimalRepProxy) == 0x0005F0, "Member 'GA_TGF_Base_C_ApplyMeleeWeaponEffect::CallFunc_BreakGameplayCueParameters_bReplicateLocationWhenUsingMinimalRepProxy' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ApplyMeleeWeaponEffect, CallFunc_K2_HasAuthority_ReturnValue) == 0x0005F1, "Member 'GA_TGF_Base_C_ApplyMeleeWeaponEffect::CallFunc_K2_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ApplyMeleeWeaponEffect, CallFunc_MakeGameplayCueParameters_ReturnValue) == 0x0005F8, "Member 'GA_TGF_Base_C_ApplyMeleeWeaponEffect::CallFunc_MakeGameplayCueParameters_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ApplyMeleeWeaponEffect, CallFunc_CheckGuarded_Result) == 0x0006D8, "Member 'GA_TGF_Base_C_ApplyMeleeWeaponEffect::CallFunc_CheckGuarded_Result' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ApplyMeleeWeaponEffect, CallFunc_GetLyraCharacterFromActorInfo_ReturnValue) == 0x0006E0, "Member 'GA_TGF_Base_C_ApplyMeleeWeaponEffect::CallFunc_GetLyraCharacterFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ApplyMeleeWeaponEffect, CallFunc_CompareTeams_TeamIdA) == 0x0006E8, "Member 'GA_TGF_Base_C_ApplyMeleeWeaponEffect::CallFunc_CompareTeams_TeamIdA' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ApplyMeleeWeaponEffect, CallFunc_CompareTeams_TeamIdB) == 0x0006EC, "Member 'GA_TGF_Base_C_ApplyMeleeWeaponEffect::CallFunc_CompareTeams_TeamIdB' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ApplyMeleeWeaponEffect, CallFunc_CompareTeams_ReturnValue) == 0x0006F0, "Member 'GA_TGF_Base_C_ApplyMeleeWeaponEffect::CallFunc_CompareTeams_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ApplyMeleeWeaponEffect, K2Node_SwitchEnum_CmpSuccess) == 0x0006F1, "Member 'GA_TGF_Base_C_ApplyMeleeWeaponEffect::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ApplyMeleeWeaponEffect, CallFunc_ApplyGE_WeaponAttack_ImplicitCast) == 0x0006F4, "Member 'GA_TGF_Base_C_ApplyMeleeWeaponEffect::CallFunc_ApplyGE_WeaponAttack_ImplicitCast' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ApplyMeleeWeaponEffect, CallFunc_ApplyGE_WeaponAttack_ImplicitCast_1) == 0x0006F8, "Member 'GA_TGF_Base_C_ApplyMeleeWeaponEffect::CallFunc_ApplyGE_WeaponAttack_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ApplyMeleeWeaponEffect, CallFunc_ApplyGE_WeaponAttack_ImplicitCast_2) == 0x0006FC, "Member 'GA_TGF_Base_C_ApplyMeleeWeaponEffect::CallFunc_ApplyGE_WeaponAttack_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ApplyMeleeWeaponEffect, CallFunc_EffectContextSetDirectionWeight_InTangentWeight_ImplicitCast) == 0x000700, "Member 'GA_TGF_Base_C_ApplyMeleeWeaponEffect::CallFunc_EffectContextSetDirectionWeight_InTangentWeight_ImplicitCast' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ApplyMeleeWeaponEffect, CallFunc_EffectContextSetDirectionWeight_InNormalWeight_ImplicitCast) == 0x000704, "Member 'GA_TGF_Base_C_ApplyMeleeWeaponEffect::CallFunc_EffectContextSetDirectionWeight_InNormalWeight_ImplicitCast' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ApplyMeleeWeaponEffect, K2Node_MakeStruct_TangentWeight_ImplicitCast) == 0x000708, "Member 'GA_TGF_Base_C_ApplyMeleeWeaponEffect::K2Node_MakeStruct_TangentWeight_ImplicitCast' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ApplyMeleeWeaponEffect, K2Node_MakeStruct_NormalWeight_ImplicitCast) == 0x00070C, "Member 'GA_TGF_Base_C_ApplyMeleeWeaponEffect::K2Node_MakeStruct_NormalWeight_ImplicitCast' has a wrong offset!");

// Function GA_TGF_Base.GA_TGF_Base_C.ApplyMoveSpeedDebuff
// 0x000C (0x000C - 0x0000)
struct GA_TGF_Base_C_ApplyMoveSpeedDebuff final
{
public:
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue; // 0x0000(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_TGF_Base_C_ApplyMoveSpeedDebuff) == 0x000004, "Wrong alignment on GA_TGF_Base_C_ApplyMoveSpeedDebuff");
static_assert(sizeof(GA_TGF_Base_C_ApplyMoveSpeedDebuff) == 0x00000C, "Wrong size on GA_TGF_Base_C_ApplyMoveSpeedDebuff");
static_assert(offsetof(GA_TGF_Base_C_ApplyMoveSpeedDebuff, CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue) == 0x000000, "Member 'GA_TGF_Base_C_ApplyMoveSpeedDebuff::CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ApplyMoveSpeedDebuff, CallFunc_IsValidClass_ReturnValue) == 0x000008, "Member 'GA_TGF_Base_C_ApplyMoveSpeedDebuff::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");

// Function GA_TGF_Base.GA_TGF_Base_C.ApplyPerfectGuarded
// 0x0068 (0x0068 - 0x0000)
struct GA_TGF_Base_C_ApplyPerfectGuarded final
{
public:
	struct FGameplayTagContainer                  DamageHandTags;                                    // 0x0000(0x0020)(Edit, BlueprintVisible)
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue; // 0x0020(0x0020)()
	bool                                          CallFunc_AddLooseGameplayTags_ReturnValue;         // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42[0x6];                                       // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_MakeGameplayTagContainerFromTag_ReturnValue; // 0x0048(0x0020)()
};
static_assert(alignof(GA_TGF_Base_C_ApplyPerfectGuarded) == 0x000008, "Wrong alignment on GA_TGF_Base_C_ApplyPerfectGuarded");
static_assert(sizeof(GA_TGF_Base_C_ApplyPerfectGuarded) == 0x000068, "Wrong size on GA_TGF_Base_C_ApplyPerfectGuarded");
static_assert(offsetof(GA_TGF_Base_C_ApplyPerfectGuarded, DamageHandTags) == 0x000000, "Member 'GA_TGF_Base_C_ApplyPerfectGuarded::DamageHandTags' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ApplyPerfectGuarded, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue) == 0x000020, "Member 'GA_TGF_Base_C_ApplyPerfectGuarded::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ApplyPerfectGuarded, CallFunc_AddLooseGameplayTags_ReturnValue) == 0x000040, "Member 'GA_TGF_Base_C_ApplyPerfectGuarded::CallFunc_AddLooseGameplayTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ApplyPerfectGuarded, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x000041, "Member 'GA_TGF_Base_C_ApplyPerfectGuarded::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ApplyPerfectGuarded, CallFunc_MakeGameplayTagContainerFromTag_ReturnValue) == 0x000048, "Member 'GA_TGF_Base_C_ApplyPerfectGuarded::CallFunc_MakeGameplayTagContainerFromTag_ReturnValue' has a wrong offset!");

// Function GA_TGF_Base.GA_TGF_Base_C.CheckAttrBoostTags
// 0x0001 (0x0001 - 0x0000)
struct GA_TGF_Base_C_CheckAttrBoostTags final
{
public:
	bool                                          CallFunc_AddLooseGameplayTags_ReturnValue;         // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_TGF_Base_C_CheckAttrBoostTags) == 0x000001, "Wrong alignment on GA_TGF_Base_C_CheckAttrBoostTags");
static_assert(sizeof(GA_TGF_Base_C_CheckAttrBoostTags) == 0x000001, "Wrong size on GA_TGF_Base_C_CheckAttrBoostTags");
static_assert(offsetof(GA_TGF_Base_C_CheckAttrBoostTags, CallFunc_AddLooseGameplayTags_ReturnValue) == 0x000000, "Member 'GA_TGF_Base_C_CheckAttrBoostTags::CallFunc_AddLooseGameplayTags_ReturnValue' has a wrong offset!");

// Function GA_TGF_Base.GA_TGF_Base_C.CheckCritical
// 0x0048 (0x0048 - 0x0000)
struct GA_TGF_Base_C_CheckCritical final
{
public:
	struct FGameplayTagContainer                  CallFunc_MakeGameplayTagContainerFromTag_ReturnValue; // 0x0000(0x0020)()
	float                                         CallFunc_EffectContextGetCriticalRandomValue_ReturnValue; // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddLooseGameplayTags_ReturnValue;         // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue_1;  // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCritical_ReturnValue;                   // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_TGF_Base_C_CheckCritical) == 0x000008, "Wrong alignment on GA_TGF_Base_C_CheckCritical");
static_assert(sizeof(GA_TGF_Base_C_CheckCritical) == 0x000048, "Wrong size on GA_TGF_Base_C_CheckCritical");
static_assert(offsetof(GA_TGF_Base_C_CheckCritical, CallFunc_MakeGameplayTagContainerFromTag_ReturnValue) == 0x000000, "Member 'GA_TGF_Base_C_CheckCritical::CallFunc_MakeGameplayTagContainerFromTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_CheckCritical, CallFunc_EffectContextGetCriticalRandomValue_ReturnValue) == 0x000020, "Member 'GA_TGF_Base_C_CheckCritical::CallFunc_EffectContextGetCriticalRandomValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_CheckCritical, CallFunc_AddLooseGameplayTags_ReturnValue) == 0x000024, "Member 'GA_TGF_Base_C_CheckCritical::CallFunc_AddLooseGameplayTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_CheckCritical, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x000028, "Member 'GA_TGF_Base_C_CheckCritical::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_CheckCritical, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'GA_TGF_Base_C_CheckCritical::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_CheckCritical, CallFunc_GetAbilitySystemComponent_ReturnValue_1) == 0x000038, "Member 'GA_TGF_Base_C_CheckCritical::CallFunc_GetAbilitySystemComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_CheckCritical, CallFunc_IsValid_ReturnValue_1) == 0x000040, "Member 'GA_TGF_Base_C_CheckCritical::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_CheckCritical, CallFunc_IsCritical_ReturnValue) == 0x000041, "Member 'GA_TGF_Base_C_CheckCritical::CallFunc_IsCritical_ReturnValue' has a wrong offset!");

// Function GA_TGF_Base.GA_TGF_Base_C.CheckGEAttributeTag
// 0x0001 (0x0001 - 0x0000)
struct GA_TGF_Base_C_CheckGEAttributeTag final
{
public:
	bool                                          CallFunc_AddLooseGameplayTags_ReturnValue;         // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_TGF_Base_C_CheckGEAttributeTag) == 0x000001, "Wrong alignment on GA_TGF_Base_C_CheckGEAttributeTag");
static_assert(sizeof(GA_TGF_Base_C_CheckGEAttributeTag) == 0x000001, "Wrong size on GA_TGF_Base_C_CheckGEAttributeTag");
static_assert(offsetof(GA_TGF_Base_C_CheckGEAttributeTag, CallFunc_AddLooseGameplayTags_ReturnValue) == 0x000000, "Member 'GA_TGF_Base_C_CheckGEAttributeTag::CallFunc_AddLooseGameplayTags_ReturnValue' has a wrong offset!");

// Function GA_TGF_Base.GA_TGF_Base_C.CheckGuarded
// 0x0438 (0x0438 - 0x0000)
struct GA_TGF_Base_C_CheckGuarded final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Param_MaxGuardedDegreeRight;                       // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Param_MaxGuardedDegreeLeft;                        // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Angle;                                             // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                HitActorForward;                                   // 0x0020(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitActorPos;                                       // 0x0038(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ImpactPoint;                                       // 0x0050(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ALyraCharacter*                         K2Node_DynamicCast_AsLyra_Character;               // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_BoolToText_ReturnValue;              // 0x0078(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0090(0x0050)(HasGetValueTypeHash)
	class ULyraAbilitySystemComponent*            CallFunc_GetLyraAbilitySystemComponent_ReturnValue; // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00E8(0x0010)(ReferenceParm)
	const class UAttributeSet*                    CallFunc_GetAttributeSet_ReturnValue;              // 0x00F8(0x0008)(ConstParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0100(0x0018)()
	class UTgfDefendAttributeSet*                 K2Node_DynamicCast_AsTgf_Defend_Attribute_Set;     // 0x0118(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_121[0x7];                                      // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0128(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_1;     // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0142(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_143[0x5];                                      // 0x0143(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0148(0x0050)(HasGetValueTypeHash)
	class ALyraCharacter*                         CallFunc_GetLyraCharacterFromActorInfo_ReturnValue; // 0x0198(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x01A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B9[0x7];                                      // 0x01B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X;                            // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x01D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x01F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_VectorToString_ReturnValue;          // 0x0208(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0230(0x0018)()
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0248(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0260(0x0050)(HasGetValueTypeHash)
	float                                         CallFunc_GetAngleBetweenTwoVectors_ReturnValue;    // 0x02B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B4[0x4];                                      // 0x02B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_VectorToString_ReturnValue_1;        // 0x02B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x02C8(0x0018)()
	class FString                                 CallFunc_Conv_VectorToString_ReturnValue_2;        // 0x02E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x02F0(0x0050)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_2;          // 0x0340(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_4;            // 0x0358(0x0050)(HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x03A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x03C0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x03D0(0x0018)()
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x03E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x0400(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_MaxGuardedDegreeRight_ImplicitCast; // 0x0410(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_MaxGuardedDegreeLeft_ImplicitCast; // 0x0418(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0420(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_A_ImplicitCast;    // 0x0428(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x0430(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_TGF_Base_C_CheckGuarded) == 0x000008, "Wrong alignment on GA_TGF_Base_C_CheckGuarded");
static_assert(sizeof(GA_TGF_Base_C_CheckGuarded) == 0x000438, "Wrong size on GA_TGF_Base_C_CheckGuarded");
static_assert(offsetof(GA_TGF_Base_C_CheckGuarded, Result) == 0x000000, "Member 'GA_TGF_Base_C_CheckGuarded::Result' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_CheckGuarded, Param_MaxGuardedDegreeRight) == 0x000008, "Member 'GA_TGF_Base_C_CheckGuarded::Param_MaxGuardedDegreeRight' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_CheckGuarded, Param_MaxGuardedDegreeLeft) == 0x000010, "Member 'GA_TGF_Base_C_CheckGuarded::Param_MaxGuardedDegreeLeft' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_CheckGuarded, Angle) == 0x000018, "Member 'GA_TGF_Base_C_CheckGuarded::Angle' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_CheckGuarded, HitActorForward) == 0x000020, "Member 'GA_TGF_Base_C_CheckGuarded::HitActorForward' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_CheckGuarded, HitActorPos) == 0x000038, "Member 'GA_TGF_Base_C_CheckGuarded::HitActorPos' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_CheckGuarded, ImpactPoint) == 0x000050, "Member 'GA_TGF_Base_C_CheckGuarded::ImpactPoint' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_CheckGuarded, K2Node_DynamicCast_AsLyra_Character) == 0x000068, "Member 'GA_TGF_Base_C_CheckGuarded::K2Node_DynamicCast_AsLyra_Character' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_CheckGuarded, K2Node_DynamicCast_bSuccess) == 0x000070, "Member 'GA_TGF_Base_C_CheckGuarded::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_CheckGuarded, CallFunc_Conv_BoolToText_ReturnValue) == 0x000078, "Member 'GA_TGF_Base_C_CheckGuarded::CallFunc_Conv_BoolToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_CheckGuarded, K2Node_MakeStruct_FormatArgumentData) == 0x000090, "Member 'GA_TGF_Base_C_CheckGuarded::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_CheckGuarded, CallFunc_GetLyraAbilitySystemComponent_ReturnValue) == 0x0000E0, "Member 'GA_TGF_Base_C_CheckGuarded::CallFunc_GetLyraAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_CheckGuarded, K2Node_MakeArray_Array) == 0x0000E8, "Member 'GA_TGF_Base_C_CheckGuarded::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_CheckGuarded, CallFunc_GetAttributeSet_ReturnValue) == 0x0000F8, "Member 'GA_TGF_Base_C_CheckGuarded::CallFunc_GetAttributeSet_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_CheckGuarded, CallFunc_Format_ReturnValue) == 0x000100, "Member 'GA_TGF_Base_C_CheckGuarded::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_CheckGuarded, K2Node_DynamicCast_AsTgf_Defend_Attribute_Set) == 0x000118, "Member 'GA_TGF_Base_C_CheckGuarded::K2Node_DynamicCast_AsTgf_Defend_Attribute_Set' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_CheckGuarded, K2Node_DynamicCast_bSuccess_1) == 0x000120, "Member 'GA_TGF_Base_C_CheckGuarded::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_CheckGuarded, CallFunc_Conv_TextToString_ReturnValue) == 0x000128, "Member 'GA_TGF_Base_C_CheckGuarded::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_CheckGuarded, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000138, "Member 'GA_TGF_Base_C_CheckGuarded::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_CheckGuarded, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000140, "Member 'GA_TGF_Base_C_CheckGuarded::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_CheckGuarded, CallFunc_LessEqual_DoubleDouble_ReturnValue_1) == 0x000141, "Member 'GA_TGF_Base_C_CheckGuarded::CallFunc_LessEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_CheckGuarded, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000142, "Member 'GA_TGF_Base_C_CheckGuarded::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_CheckGuarded, K2Node_MakeStruct_FormatArgumentData_1) == 0x000148, "Member 'GA_TGF_Base_C_CheckGuarded::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_CheckGuarded, CallFunc_GetLyraCharacterFromActorInfo_ReturnValue) == 0x000198, "Member 'GA_TGF_Base_C_CheckGuarded::CallFunc_GetLyraCharacterFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_CheckGuarded, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0001A0, "Member 'GA_TGF_Base_C_CheckGuarded::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_CheckGuarded, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x0001B8, "Member 'GA_TGF_Base_C_CheckGuarded::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_CheckGuarded, CallFunc_BreakVector_X) == 0x0001C0, "Member 'GA_TGF_Base_C_CheckGuarded::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_CheckGuarded, CallFunc_BreakVector_Y) == 0x0001C8, "Member 'GA_TGF_Base_C_CheckGuarded::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_CheckGuarded, CallFunc_BreakVector_Z) == 0x0001D0, "Member 'GA_TGF_Base_C_CheckGuarded::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_CheckGuarded, CallFunc_MakeVector_ReturnValue) == 0x0001D8, "Member 'GA_TGF_Base_C_CheckGuarded::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_CheckGuarded, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0001F0, "Member 'GA_TGF_Base_C_CheckGuarded::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_CheckGuarded, CallFunc_Conv_VectorToString_ReturnValue) == 0x000208, "Member 'GA_TGF_Base_C_CheckGuarded::CallFunc_Conv_VectorToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_CheckGuarded, CallFunc_BreakVector_X_1) == 0x000218, "Member 'GA_TGF_Base_C_CheckGuarded::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_CheckGuarded, CallFunc_BreakVector_Y_1) == 0x000220, "Member 'GA_TGF_Base_C_CheckGuarded::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_CheckGuarded, CallFunc_BreakVector_Z_1) == 0x000228, "Member 'GA_TGF_Base_C_CheckGuarded::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_CheckGuarded, CallFunc_Conv_StringToText_ReturnValue) == 0x000230, "Member 'GA_TGF_Base_C_CheckGuarded::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_CheckGuarded, CallFunc_MakeVector_ReturnValue_1) == 0x000248, "Member 'GA_TGF_Base_C_CheckGuarded::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_CheckGuarded, K2Node_MakeStruct_FormatArgumentData_2) == 0x000260, "Member 'GA_TGF_Base_C_CheckGuarded::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_CheckGuarded, CallFunc_GetAngleBetweenTwoVectors_ReturnValue) == 0x0002B0, "Member 'GA_TGF_Base_C_CheckGuarded::CallFunc_GetAngleBetweenTwoVectors_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_CheckGuarded, CallFunc_Conv_VectorToString_ReturnValue_1) == 0x0002B8, "Member 'GA_TGF_Base_C_CheckGuarded::CallFunc_Conv_VectorToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_CheckGuarded, CallFunc_Conv_StringToText_ReturnValue_1) == 0x0002C8, "Member 'GA_TGF_Base_C_CheckGuarded::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_CheckGuarded, CallFunc_Conv_VectorToString_ReturnValue_2) == 0x0002E0, "Member 'GA_TGF_Base_C_CheckGuarded::CallFunc_Conv_VectorToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_CheckGuarded, K2Node_MakeStruct_FormatArgumentData_3) == 0x0002F0, "Member 'GA_TGF_Base_C_CheckGuarded::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_CheckGuarded, CallFunc_Conv_StringToText_ReturnValue_2) == 0x000340, "Member 'GA_TGF_Base_C_CheckGuarded::CallFunc_Conv_StringToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_CheckGuarded, K2Node_MakeStruct_FormatArgumentData_4) == 0x000358, "Member 'GA_TGF_Base_C_CheckGuarded::K2Node_MakeStruct_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_CheckGuarded, CallFunc_GetActorForwardVector_ReturnValue) == 0x0003A8, "Member 'GA_TGF_Base_C_CheckGuarded::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_CheckGuarded, K2Node_MakeArray_Array_1) == 0x0003C0, "Member 'GA_TGF_Base_C_CheckGuarded::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_CheckGuarded, CallFunc_Format_ReturnValue_1) == 0x0003D0, "Member 'GA_TGF_Base_C_CheckGuarded::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_CheckGuarded, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x0003E8, "Member 'GA_TGF_Base_C_CheckGuarded::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_CheckGuarded, CallFunc_Conv_TextToString_ReturnValue_1) == 0x000400, "Member 'GA_TGF_Base_C_CheckGuarded::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_CheckGuarded, K2Node_VariableSet_MaxGuardedDegreeRight_ImplicitCast) == 0x000410, "Member 'GA_TGF_Base_C_CheckGuarded::K2Node_VariableSet_MaxGuardedDegreeRight_ImplicitCast' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_CheckGuarded, K2Node_VariableSet_MaxGuardedDegreeLeft_ImplicitCast) == 0x000418, "Member 'GA_TGF_Base_C_CheckGuarded::K2Node_VariableSet_MaxGuardedDegreeLeft_ImplicitCast' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_CheckGuarded, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000420, "Member 'GA_TGF_Base_C_CheckGuarded::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_CheckGuarded, CallFunc_LessEqual_DoubleDouble_A_ImplicitCast) == 0x000428, "Member 'GA_TGF_Base_C_CheckGuarded::CallFunc_LessEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_CheckGuarded, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x000430, "Member 'GA_TGF_Base_C_CheckGuarded::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function GA_TGF_Base.GA_TGF_Base_C.CheckHeavyHitAndInterrupt
// 0x00E8 (0x00E8 - 0x0000)
struct GA_TGF_Base_C_CheckHeavyHitAndInterrupt final
{
public:
	bool                                          TargetIsPlayer;                                    // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_MakeGameplayTagContainerFromTag_ReturnValue; // 0x0008(0x0020)()
	bool                                          CallFunc_AddLooseGameplayTags_ReturnValue;         // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ALyraCharacter*                         K2Node_DynamicCast_AsLyra_Character;               // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayer_ReturnValue;                     // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponentFromActorInfo_ReturnValue; // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ALyraCharacter*                         CallFunc_GetLyraCharacterFromActorInfo_ReturnValue; // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CalcHitValue_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ApplyHitValueAndInterrupt_ReturnValue;    // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0060(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00B0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00C0(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x00D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_TGF_Base_C_CheckHeavyHitAndInterrupt) == 0x000008, "Wrong alignment on GA_TGF_Base_C_CheckHeavyHitAndInterrupt");
static_assert(sizeof(GA_TGF_Base_C_CheckHeavyHitAndInterrupt) == 0x0000E8, "Wrong size on GA_TGF_Base_C_CheckHeavyHitAndInterrupt");
static_assert(offsetof(GA_TGF_Base_C_CheckHeavyHitAndInterrupt, TargetIsPlayer) == 0x000000, "Member 'GA_TGF_Base_C_CheckHeavyHitAndInterrupt::TargetIsPlayer' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_CheckHeavyHitAndInterrupt, CallFunc_MakeGameplayTagContainerFromTag_ReturnValue) == 0x000008, "Member 'GA_TGF_Base_C_CheckHeavyHitAndInterrupt::CallFunc_MakeGameplayTagContainerFromTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_CheckHeavyHitAndInterrupt, CallFunc_AddLooseGameplayTags_ReturnValue) == 0x000028, "Member 'GA_TGF_Base_C_CheckHeavyHitAndInterrupt::CallFunc_AddLooseGameplayTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_CheckHeavyHitAndInterrupt, K2Node_DynamicCast_AsLyra_Character) == 0x000030, "Member 'GA_TGF_Base_C_CheckHeavyHitAndInterrupt::K2Node_DynamicCast_AsLyra_Character' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_CheckHeavyHitAndInterrupt, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'GA_TGF_Base_C_CheckHeavyHitAndInterrupt::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_CheckHeavyHitAndInterrupt, CallFunc_IsPlayer_ReturnValue) == 0x000039, "Member 'GA_TGF_Base_C_CheckHeavyHitAndInterrupt::CallFunc_IsPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_CheckHeavyHitAndInterrupt, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x000040, "Member 'GA_TGF_Base_C_CheckHeavyHitAndInterrupt::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_CheckHeavyHitAndInterrupt, CallFunc_GetAbilitySystemComponentFromActorInfo_ReturnValue) == 0x000048, "Member 'GA_TGF_Base_C_CheckHeavyHitAndInterrupt::CallFunc_GetAbilitySystemComponentFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_CheckHeavyHitAndInterrupt, CallFunc_GetLyraCharacterFromActorInfo_ReturnValue) == 0x000050, "Member 'GA_TGF_Base_C_CheckHeavyHitAndInterrupt::CallFunc_GetLyraCharacterFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_CheckHeavyHitAndInterrupt, CallFunc_CalcHitValue_ReturnValue) == 0x000058, "Member 'GA_TGF_Base_C_CheckHeavyHitAndInterrupt::CallFunc_CalcHitValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_CheckHeavyHitAndInterrupt, CallFunc_ApplyHitValueAndInterrupt_ReturnValue) == 0x00005C, "Member 'GA_TGF_Base_C_CheckHeavyHitAndInterrupt::CallFunc_ApplyHitValueAndInterrupt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_CheckHeavyHitAndInterrupt, K2Node_MakeStruct_FormatArgumentData) == 0x000060, "Member 'GA_TGF_Base_C_CheckHeavyHitAndInterrupt::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_CheckHeavyHitAndInterrupt, K2Node_MakeArray_Array) == 0x0000B0, "Member 'GA_TGF_Base_C_CheckHeavyHitAndInterrupt::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_CheckHeavyHitAndInterrupt, CallFunc_Format_ReturnValue) == 0x0000C0, "Member 'GA_TGF_Base_C_CheckHeavyHitAndInterrupt::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_CheckHeavyHitAndInterrupt, CallFunc_Conv_TextToString_ReturnValue) == 0x0000D8, "Member 'GA_TGF_Base_C_CheckHeavyHitAndInterrupt::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");

// Function GA_TGF_Base.GA_TGF_Base_C.CheckHitIneractorEnviorment
// 0x0100 (0x0100 - 0x0000)
struct GA_TGF_Base_C_CheckHitIneractorEnviorment final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTgfEnvSurfaceTypeDataAsset*            AllowedSurfaceTypes;                               // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_EffectContextGetHitResult_ReturnValue;    // 0x0010(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	EPhysicalSurface                              CallFunc_GetSurfaceType_ReturnValue;               // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_TGF_Base_C_CheckHitIneractorEnviorment) == 0x000008, "Wrong alignment on GA_TGF_Base_C_CheckHitIneractorEnviorment");
static_assert(sizeof(GA_TGF_Base_C_CheckHitIneractorEnviorment) == 0x000100, "Wrong size on GA_TGF_Base_C_CheckHitIneractorEnviorment");
static_assert(offsetof(GA_TGF_Base_C_CheckHitIneractorEnviorment, Result) == 0x000000, "Member 'GA_TGF_Base_C_CheckHitIneractorEnviorment::Result' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_CheckHitIneractorEnviorment, AllowedSurfaceTypes) == 0x000008, "Member 'GA_TGF_Base_C_CheckHitIneractorEnviorment::AllowedSurfaceTypes' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_CheckHitIneractorEnviorment, CallFunc_EffectContextGetHitResult_ReturnValue) == 0x000010, "Member 'GA_TGF_Base_C_CheckHitIneractorEnviorment::CallFunc_EffectContextGetHitResult_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_CheckHitIneractorEnviorment, CallFunc_GetSurfaceType_ReturnValue) == 0x0000F8, "Member 'GA_TGF_Base_C_CheckHitIneractorEnviorment::CallFunc_GetSurfaceType_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_CheckHitIneractorEnviorment, CallFunc_Array_Contains_ReturnValue) == 0x0000F9, "Member 'GA_TGF_Base_C_CheckHitIneractorEnviorment::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");

// Function GA_TGF_Base.GA_TGF_Base_C.CheckHitInteractorBattle
// 0x0100 (0x0100 - 0x0000)
struct GA_TGF_Base_C_CheckHitInteractorBattle final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_EffectContextGetHitResult_ReturnValue;    // 0x0008(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UTgfInteractorBattleComponent*          CallFunc_GetComponentByClass_ReturnValue;          // 0x00F0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_TGF_Base_C_CheckHitInteractorBattle) == 0x000008, "Wrong alignment on GA_TGF_Base_C_CheckHitInteractorBattle");
static_assert(sizeof(GA_TGF_Base_C_CheckHitInteractorBattle) == 0x000100, "Wrong size on GA_TGF_Base_C_CheckHitInteractorBattle");
static_assert(offsetof(GA_TGF_Base_C_CheckHitInteractorBattle, Result) == 0x000000, "Member 'GA_TGF_Base_C_CheckHitInteractorBattle::Result' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_CheckHitInteractorBattle, CallFunc_EffectContextGetHitResult_ReturnValue) == 0x000008, "Member 'GA_TGF_Base_C_CheckHitInteractorBattle::CallFunc_EffectContextGetHitResult_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_CheckHitInteractorBattle, CallFunc_GetComponentByClass_ReturnValue) == 0x0000F0, "Member 'GA_TGF_Base_C_CheckHitInteractorBattle::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_CheckHitInteractorBattle, CallFunc_IsValid_ReturnValue) == 0x0000F8, "Member 'GA_TGF_Base_C_CheckHitInteractorBattle::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function GA_TGF_Base.GA_TGF_Base_C.CheckProjectileSecurity
// 0x03F0 (0x03F0 - 0x0000)
struct GA_TGF_Base_C_CheckProjectileSecurity final
{
public:
	struct FTransform                             BornTrans;                                         // 0x0000(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 SrcActor;                                          // 0x0060(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CheckResult;                                       // 0x0068(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 InputSrcActor;                                     // 0x0070(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	double                                        Dist;                                              // 0x0078(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SrcLocation;                                       // 0x0080(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                BornLocation;                                      // 0x0098(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FB[0x5];                                       // 0x00FB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0100(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue_1;     // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_119[0x7];                                      // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X;                            // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13A[0x6];                                      // 0x013A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_ProjectVectorOnToPlane_ReturnValue;       // 0x0140(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_159[0x7];                                      // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_VSize_ReturnValue;                        // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0169(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16A[0x6];                                      // 0x016A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ALyraPlayerController*                  CallFunc_GetLyraPlayerControllerFromActorInfo_ReturnValue; // 0x0170(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_179[0x7];                                      // 0x0179(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue;            // 0x0180(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0198(0x0050)(HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x01E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0200(0x0050)(HasGetValueTypeHash)
	double                                        CallFunc_Vector_Distance_ReturnValue;              // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0258(0x0050)(HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_Vector3fToString_ReturnValue;        // 0x02A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_Vector3fToString_ReturnValue_1;      // 0x02B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x02C8(0x0018)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x02E0(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x02F8(0x0050)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_4;            // 0x0348(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0398(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x03A8(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x03C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_2;       // 0x03D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x03D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x03D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D3[0x1];                                      // 0x03D3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector3f                              CallFunc_Conv_Vector3fToString_InVec_ImplicitCast; // 0x03D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector3f                              CallFunc_Conv_Vector3fToString_InVec_ImplicitCast_1; // 0x03E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_TGF_Base_C_CheckProjectileSecurity) == 0x000010, "Wrong alignment on GA_TGF_Base_C_CheckProjectileSecurity");
static_assert(sizeof(GA_TGF_Base_C_CheckProjectileSecurity) == 0x0003F0, "Wrong size on GA_TGF_Base_C_CheckProjectileSecurity");
static_assert(offsetof(GA_TGF_Base_C_CheckProjectileSecurity, BornTrans) == 0x000000, "Member 'GA_TGF_Base_C_CheckProjectileSecurity::BornTrans' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_CheckProjectileSecurity, SrcActor) == 0x000060, "Member 'GA_TGF_Base_C_CheckProjectileSecurity::SrcActor' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_CheckProjectileSecurity, CheckResult) == 0x000068, "Member 'GA_TGF_Base_C_CheckProjectileSecurity::CheckResult' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_CheckProjectileSecurity, InputSrcActor) == 0x000070, "Member 'GA_TGF_Base_C_CheckProjectileSecurity::InputSrcActor' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_CheckProjectileSecurity, Dist) == 0x000078, "Member 'GA_TGF_Base_C_CheckProjectileSecurity::Dist' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_CheckProjectileSecurity, SrcLocation) == 0x000080, "Member 'GA_TGF_Base_C_CheckProjectileSecurity::SrcLocation' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_CheckProjectileSecurity, BornLocation) == 0x000098, "Member 'GA_TGF_Base_C_CheckProjectileSecurity::BornLocation' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_CheckProjectileSecurity, CallFunc_BreakTransform_Location) == 0x0000B0, "Member 'GA_TGF_Base_C_CheckProjectileSecurity::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_CheckProjectileSecurity, CallFunc_BreakTransform_Rotation) == 0x0000C8, "Member 'GA_TGF_Base_C_CheckProjectileSecurity::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_CheckProjectileSecurity, CallFunc_BreakTransform_Scale) == 0x0000E0, "Member 'GA_TGF_Base_C_CheckProjectileSecurity::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_CheckProjectileSecurity, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x0000F8, "Member 'GA_TGF_Base_C_CheckProjectileSecurity::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_CheckProjectileSecurity, CallFunc_IsValid_ReturnValue) == 0x0000F9, "Member 'GA_TGF_Base_C_CheckProjectileSecurity::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_CheckProjectileSecurity, CallFunc_Not_PreBool_ReturnValue) == 0x0000FA, "Member 'GA_TGF_Base_C_CheckProjectileSecurity::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_CheckProjectileSecurity, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000100, "Member 'GA_TGF_Base_C_CheckProjectileSecurity::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_CheckProjectileSecurity, CallFunc_NearlyEqual_FloatFloat_ReturnValue_1) == 0x000118, "Member 'GA_TGF_Base_C_CheckProjectileSecurity::CallFunc_NearlyEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_CheckProjectileSecurity, CallFunc_BreakVector_X) == 0x000120, "Member 'GA_TGF_Base_C_CheckProjectileSecurity::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_CheckProjectileSecurity, CallFunc_BreakVector_Y) == 0x000128, "Member 'GA_TGF_Base_C_CheckProjectileSecurity::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_CheckProjectileSecurity, CallFunc_BreakVector_Z) == 0x000130, "Member 'GA_TGF_Base_C_CheckProjectileSecurity::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_CheckProjectileSecurity, CallFunc_Not_PreBool_ReturnValue_1) == 0x000138, "Member 'GA_TGF_Base_C_CheckProjectileSecurity::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_CheckProjectileSecurity, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000139, "Member 'GA_TGF_Base_C_CheckProjectileSecurity::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_CheckProjectileSecurity, CallFunc_ProjectVectorOnToPlane_ReturnValue) == 0x000140, "Member 'GA_TGF_Base_C_CheckProjectileSecurity::CallFunc_ProjectVectorOnToPlane_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_CheckProjectileSecurity, CallFunc_BooleanAND_ReturnValue) == 0x000158, "Member 'GA_TGF_Base_C_CheckProjectileSecurity::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_CheckProjectileSecurity, CallFunc_VSize_ReturnValue) == 0x000160, "Member 'GA_TGF_Base_C_CheckProjectileSecurity::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_CheckProjectileSecurity, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000168, "Member 'GA_TGF_Base_C_CheckProjectileSecurity::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_CheckProjectileSecurity, CallFunc_BooleanAND_ReturnValue_1) == 0x000169, "Member 'GA_TGF_Base_C_CheckProjectileSecurity::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_CheckProjectileSecurity, CallFunc_GetLyraPlayerControllerFromActorInfo_ReturnValue) == 0x000170, "Member 'GA_TGF_Base_C_CheckProjectileSecurity::CallFunc_GetLyraPlayerControllerFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_CheckProjectileSecurity, CallFunc_IsValid_ReturnValue_1) == 0x000178, "Member 'GA_TGF_Base_C_CheckProjectileSecurity::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_CheckProjectileSecurity, CallFunc_Conv_ObjectToText_ReturnValue) == 0x000180, "Member 'GA_TGF_Base_C_CheckProjectileSecurity::CallFunc_Conv_ObjectToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_CheckProjectileSecurity, K2Node_MakeStruct_FormatArgumentData) == 0x000198, "Member 'GA_TGF_Base_C_CheckProjectileSecurity::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_CheckProjectileSecurity, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0001E8, "Member 'GA_TGF_Base_C_CheckProjectileSecurity::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_CheckProjectileSecurity, K2Node_MakeStruct_FormatArgumentData_1) == 0x000200, "Member 'GA_TGF_Base_C_CheckProjectileSecurity::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_CheckProjectileSecurity, CallFunc_Vector_Distance_ReturnValue) == 0x000250, "Member 'GA_TGF_Base_C_CheckProjectileSecurity::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_CheckProjectileSecurity, K2Node_MakeStruct_FormatArgumentData_2) == 0x000258, "Member 'GA_TGF_Base_C_CheckProjectileSecurity::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_CheckProjectileSecurity, CallFunc_Conv_Vector3fToString_ReturnValue) == 0x0002A8, "Member 'GA_TGF_Base_C_CheckProjectileSecurity::CallFunc_Conv_Vector3fToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_CheckProjectileSecurity, CallFunc_Conv_Vector3fToString_ReturnValue_1) == 0x0002B8, "Member 'GA_TGF_Base_C_CheckProjectileSecurity::CallFunc_Conv_Vector3fToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_CheckProjectileSecurity, CallFunc_Conv_StringToText_ReturnValue) == 0x0002C8, "Member 'GA_TGF_Base_C_CheckProjectileSecurity::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_CheckProjectileSecurity, CallFunc_Conv_StringToText_ReturnValue_1) == 0x0002E0, "Member 'GA_TGF_Base_C_CheckProjectileSecurity::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_CheckProjectileSecurity, K2Node_MakeStruct_FormatArgumentData_3) == 0x0002F8, "Member 'GA_TGF_Base_C_CheckProjectileSecurity::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_CheckProjectileSecurity, K2Node_MakeStruct_FormatArgumentData_4) == 0x000348, "Member 'GA_TGF_Base_C_CheckProjectileSecurity::K2Node_MakeStruct_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_CheckProjectileSecurity, K2Node_MakeArray_Array) == 0x000398, "Member 'GA_TGF_Base_C_CheckProjectileSecurity::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_CheckProjectileSecurity, CallFunc_Format_ReturnValue) == 0x0003A8, "Member 'GA_TGF_Base_C_CheckProjectileSecurity::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_CheckProjectileSecurity, CallFunc_Conv_TextToString_ReturnValue) == 0x0003C0, "Member 'GA_TGF_Base_C_CheckProjectileSecurity::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_CheckProjectileSecurity, CallFunc_Greater_DoubleDouble_ReturnValue_2) == 0x0003D0, "Member 'GA_TGF_Base_C_CheckProjectileSecurity::CallFunc_Greater_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_CheckProjectileSecurity, CallFunc_BooleanOR_ReturnValue) == 0x0003D1, "Member 'GA_TGF_Base_C_CheckProjectileSecurity::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_CheckProjectileSecurity, CallFunc_BooleanOR_ReturnValue_1) == 0x0003D2, "Member 'GA_TGF_Base_C_CheckProjectileSecurity::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_CheckProjectileSecurity, CallFunc_Conv_Vector3fToString_InVec_ImplicitCast) == 0x0003D4, "Member 'GA_TGF_Base_C_CheckProjectileSecurity::CallFunc_Conv_Vector3fToString_InVec_ImplicitCast' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_CheckProjectileSecurity, CallFunc_Conv_Vector3fToString_InVec_ImplicitCast_1) == 0x0003E0, "Member 'GA_TGF_Base_C_CheckProjectileSecurity::CallFunc_Conv_Vector3fToString_InVec_ImplicitCast_1' has a wrong offset!");

// Function GA_TGF_Base.GA_TGF_Base_C.CheckReboundFromTargetTag
// 0x0001 (0x0001 - 0x0000)
struct GA_TGF_Base_C_CheckReboundFromTargetTag final
{
public:
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_TGF_Base_C_CheckReboundFromTargetTag) == 0x000001, "Wrong alignment on GA_TGF_Base_C_CheckReboundFromTargetTag");
static_assert(sizeof(GA_TGF_Base_C_CheckReboundFromTargetTag) == 0x000001, "Wrong size on GA_TGF_Base_C_CheckReboundFromTargetTag");
static_assert(offsetof(GA_TGF_Base_C_CheckReboundFromTargetTag, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x000000, "Member 'GA_TGF_Base_C_CheckReboundFromTargetTag::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");

// Function GA_TGF_Base.GA_TGF_Base_C.CheckTeamTag
// 0x0058 (0x0058 - 0x0000)
struct GA_TGF_Base_C_CheckTeamTag final
{
public:
	bool                                          bAddFriendly;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_MakeGameplayTagContainerFromTag_ReturnValue; // 0x0008(0x0020)()
	bool                                          CallFunc_AddLooseGameplayTags_ReturnValue;         // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_MakeGameplayTagContainerFromTag_ReturnValue_1; // 0x0030(0x0020)()
	bool                                          CallFunc_AddLooseGameplayTags_ReturnValue_1;       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_TGF_Base_C_CheckTeamTag) == 0x000008, "Wrong alignment on GA_TGF_Base_C_CheckTeamTag");
static_assert(sizeof(GA_TGF_Base_C_CheckTeamTag) == 0x000058, "Wrong size on GA_TGF_Base_C_CheckTeamTag");
static_assert(offsetof(GA_TGF_Base_C_CheckTeamTag, bAddFriendly) == 0x000000, "Member 'GA_TGF_Base_C_CheckTeamTag::bAddFriendly' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_CheckTeamTag, CallFunc_MakeGameplayTagContainerFromTag_ReturnValue) == 0x000008, "Member 'GA_TGF_Base_C_CheckTeamTag::CallFunc_MakeGameplayTagContainerFromTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_CheckTeamTag, CallFunc_AddLooseGameplayTags_ReturnValue) == 0x000028, "Member 'GA_TGF_Base_C_CheckTeamTag::CallFunc_AddLooseGameplayTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_CheckTeamTag, CallFunc_MakeGameplayTagContainerFromTag_ReturnValue_1) == 0x000030, "Member 'GA_TGF_Base_C_CheckTeamTag::CallFunc_MakeGameplayTagContainerFromTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_CheckTeamTag, CallFunc_AddLooseGameplayTags_ReturnValue_1) == 0x000050, "Member 'GA_TGF_Base_C_CheckTeamTag::CallFunc_AddLooseGameplayTags_ReturnValue_1' has a wrong offset!");

// Function GA_TGF_Base.GA_TGF_Base_C.DecideGEsToUse
// 0x0058 (0x0058 - 0x0000)
struct GA_TGF_Base_C_DecideGEsToUse final
{
public:
	int32                                         DecideType;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UClass*>                         ResultGEs;                                         // 0x0008(0x0010)(Parm, OutParm)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Map_Find_Value;                           // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Map_Find_Value_1;                         // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Map_Find_Value_2;                         // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_2;                   // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_2;        // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4E[0x2];                                       // 0x004E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_TGF_Base_C_DecideGEsToUse) == 0x000008, "Wrong alignment on GA_TGF_Base_C_DecideGEsToUse");
static_assert(sizeof(GA_TGF_Base_C_DecideGEsToUse) == 0x000058, "Wrong size on GA_TGF_Base_C_DecideGEsToUse");
static_assert(offsetof(GA_TGF_Base_C_DecideGEsToUse, DecideType) == 0x000000, "Member 'GA_TGF_Base_C_DecideGEsToUse::DecideType' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DecideGEsToUse, ResultGEs) == 0x000008, "Member 'GA_TGF_Base_C_DecideGEsToUse::ResultGEs' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DecideGEsToUse, K2Node_SwitchInteger_CmpSuccess) == 0x000018, "Member 'GA_TGF_Base_C_DecideGEsToUse::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DecideGEsToUse, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'GA_TGF_Base_C_DecideGEsToUse::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DecideGEsToUse, CallFunc_Map_Find_Value) == 0x000020, "Member 'GA_TGF_Base_C_DecideGEsToUse::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DecideGEsToUse, CallFunc_Map_Find_ReturnValue) == 0x000024, "Member 'GA_TGF_Base_C_DecideGEsToUse::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DecideGEsToUse, CallFunc_Array_Length_ReturnValue_1) == 0x000028, "Member 'GA_TGF_Base_C_DecideGEsToUse::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DecideGEsToUse, CallFunc_Subtract_IntInt_ReturnValue) == 0x00002C, "Member 'GA_TGF_Base_C_DecideGEsToUse::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DecideGEsToUse, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000030, "Member 'GA_TGF_Base_C_DecideGEsToUse::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DecideGEsToUse, CallFunc_Map_Find_Value_1) == 0x000034, "Member 'GA_TGF_Base_C_DecideGEsToUse::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DecideGEsToUse, CallFunc_Map_Find_ReturnValue_1) == 0x000038, "Member 'GA_TGF_Base_C_DecideGEsToUse::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DecideGEsToUse, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x00003C, "Member 'GA_TGF_Base_C_DecideGEsToUse::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DecideGEsToUse, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x000040, "Member 'GA_TGF_Base_C_DecideGEsToUse::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DecideGEsToUse, CallFunc_Array_Length_ReturnValue_2) == 0x000044, "Member 'GA_TGF_Base_C_DecideGEsToUse::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DecideGEsToUse, CallFunc_Map_Find_Value_2) == 0x000048, "Member 'GA_TGF_Base_C_DecideGEsToUse::CallFunc_Map_Find_Value_2' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DecideGEsToUse, CallFunc_Map_Find_ReturnValue_2) == 0x00004C, "Member 'GA_TGF_Base_C_DecideGEsToUse::CallFunc_Map_Find_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DecideGEsToUse, CallFunc_GreaterEqual_IntInt_ReturnValue_2) == 0x00004D, "Member 'GA_TGF_Base_C_DecideGEsToUse::CallFunc_GreaterEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DecideGEsToUse, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x000050, "Member 'GA_TGF_Base_C_DecideGEsToUse::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");

// Function GA_TGF_Base.GA_TGF_Base_C.DecideInstigatorASCWeaponAttack
// 0x0038 (0x0038 - 0x0000)
struct GA_TGF_Base_C_DecideInstigatorASCWeaponAttack final
{
public:
	class AActor*                                 InputActor;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTgfCharacterSummonComponent*           CallFunc_GetComponentByClass_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetSummonSource_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayersSummon_Result;                   // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponentFromActorInfo_ReturnValue; // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_OverrideWeaponAttack_ImplicitCast; // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_TGF_Base_C_DecideInstigatorASCWeaponAttack) == 0x000008, "Wrong alignment on GA_TGF_Base_C_DecideInstigatorASCWeaponAttack");
static_assert(sizeof(GA_TGF_Base_C_DecideInstigatorASCWeaponAttack) == 0x000038, "Wrong size on GA_TGF_Base_C_DecideInstigatorASCWeaponAttack");
static_assert(offsetof(GA_TGF_Base_C_DecideInstigatorASCWeaponAttack, InputActor) == 0x000000, "Member 'GA_TGF_Base_C_DecideInstigatorASCWeaponAttack::InputActor' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DecideInstigatorASCWeaponAttack, CallFunc_GetComponentByClass_ReturnValue) == 0x000008, "Member 'GA_TGF_Base_C_DecideInstigatorASCWeaponAttack::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DecideInstigatorASCWeaponAttack, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x000010, "Member 'GA_TGF_Base_C_DecideInstigatorASCWeaponAttack::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DecideInstigatorASCWeaponAttack, CallFunc_GetSummonSource_ReturnValue) == 0x000018, "Member 'GA_TGF_Base_C_DecideInstigatorASCWeaponAttack::CallFunc_GetSummonSource_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DecideInstigatorASCWeaponAttack, CallFunc_IsPlayersSummon_Result) == 0x000020, "Member 'GA_TGF_Base_C_DecideInstigatorASCWeaponAttack::CallFunc_IsPlayersSummon_Result' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DecideInstigatorASCWeaponAttack, CallFunc_GetAbilitySystemComponentFromActorInfo_ReturnValue) == 0x000028, "Member 'GA_TGF_Base_C_DecideInstigatorASCWeaponAttack::CallFunc_GetAbilitySystemComponentFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DecideInstigatorASCWeaponAttack, K2Node_VariableSet_OverrideWeaponAttack_ImplicitCast) == 0x000030, "Member 'GA_TGF_Base_C_DecideInstigatorASCWeaponAttack::K2Node_VariableSet_OverrideWeaponAttack_ImplicitCast' has a wrong offset!");

// Function GA_TGF_Base.GA_TGF_Base_C.DeInitShieldConfig
// 0x0010 (0x0010 - 0x0000)
struct GA_TGF_Base_C_DeInitShieldConfig final
{
public:
	class AActor*                                 WeaponActor;                                       // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_HasAuthority_ReturnValue;              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_TGF_Base_C_DeInitShieldConfig) == 0x000008, "Wrong alignment on GA_TGF_Base_C_DeInitShieldConfig");
static_assert(sizeof(GA_TGF_Base_C_DeInitShieldConfig) == 0x000010, "Wrong size on GA_TGF_Base_C_DeInitShieldConfig");
static_assert(offsetof(GA_TGF_Base_C_DeInitShieldConfig, WeaponActor) == 0x000000, "Member 'GA_TGF_Base_C_DeInitShieldConfig::WeaponActor' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DeInitShieldConfig, CallFunc_IsValidClass_ReturnValue) == 0x000008, "Member 'GA_TGF_Base_C_DeInitShieldConfig::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DeInitShieldConfig, CallFunc_K2_HasAuthority_ReturnValue) == 0x000009, "Member 'GA_TGF_Base_C_DeInitShieldConfig::CallFunc_K2_HasAuthority_ReturnValue' has a wrong offset!");

// Function GA_TGF_Base.GA_TGF_Base_C.DeInitWeaponMesh
// 0x0098 (0x0098 - 0x0000)
struct GA_TGF_Base_C_DeInitWeaponMesh final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_2;        // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_3;            // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_3;        // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Get_Item;                           // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveTraceMesh_Result;                   // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46[0x2];                                       // 0x0046(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_4;            // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_1;                         // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveTraceMesh_Result_1;                 // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_5;            // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue_1;                        // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_2;                         // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveTraceMesh_Result_2;                 // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_6;            // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue_2;                        // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_3;                         // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveTraceMesh_Result_3;                 // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_82[0x2];                                       // 0x0082(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_7;            // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D[0x3];                                       // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Max_ReturnValue_3;                        // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_TGF_Base_C_DeInitWeaponMesh) == 0x000004, "Wrong alignment on GA_TGF_Base_C_DeInitWeaponMesh");
static_assert(sizeof(GA_TGF_Base_C_DeInitWeaponMesh) == 0x000098, "Wrong size on GA_TGF_Base_C_DeInitWeaponMesh");
static_assert(offsetof(GA_TGF_Base_C_DeInitWeaponMesh, Temp_int_Array_Index_Variable) == 0x000000, "Member 'GA_TGF_Base_C_DeInitWeaponMesh::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DeInitWeaponMesh, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'GA_TGF_Base_C_DeInitWeaponMesh::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DeInitWeaponMesh, CallFunc_Subtract_IntInt_ReturnValue) == 0x000008, "Member 'GA_TGF_Base_C_DeInitWeaponMesh::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DeInitWeaponMesh, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00000C, "Member 'GA_TGF_Base_C_DeInitWeaponMesh::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DeInitWeaponMesh, Temp_int_Array_Index_Variable_1) == 0x000010, "Member 'GA_TGF_Base_C_DeInitWeaponMesh::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DeInitWeaponMesh, Temp_int_Loop_Counter_Variable_1) == 0x000014, "Member 'GA_TGF_Base_C_DeInitWeaponMesh::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DeInitWeaponMesh, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000018, "Member 'GA_TGF_Base_C_DeInitWeaponMesh::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DeInitWeaponMesh, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x00001C, "Member 'GA_TGF_Base_C_DeInitWeaponMesh::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DeInitWeaponMesh, Temp_int_Array_Index_Variable_2) == 0x000020, "Member 'GA_TGF_Base_C_DeInitWeaponMesh::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DeInitWeaponMesh, Temp_int_Loop_Counter_Variable_2) == 0x000024, "Member 'GA_TGF_Base_C_DeInitWeaponMesh::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DeInitWeaponMesh, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x000028, "Member 'GA_TGF_Base_C_DeInitWeaponMesh::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DeInitWeaponMesh, CallFunc_GreaterEqual_IntInt_ReturnValue_2) == 0x00002C, "Member 'GA_TGF_Base_C_DeInitWeaponMesh::CallFunc_GreaterEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DeInitWeaponMesh, Temp_int_Array_Index_Variable_3) == 0x000030, "Member 'GA_TGF_Base_C_DeInitWeaponMesh::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DeInitWeaponMesh, Temp_int_Loop_Counter_Variable_3) == 0x000034, "Member 'GA_TGF_Base_C_DeInitWeaponMesh::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DeInitWeaponMesh, CallFunc_Subtract_IntInt_ReturnValue_3) == 0x000038, "Member 'GA_TGF_Base_C_DeInitWeaponMesh::CallFunc_Subtract_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DeInitWeaponMesh, CallFunc_GreaterEqual_IntInt_ReturnValue_3) == 0x00003C, "Member 'GA_TGF_Base_C_DeInitWeaponMesh::CallFunc_GreaterEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DeInitWeaponMesh, CallFunc_Array_Get_Item) == 0x000040, "Member 'GA_TGF_Base_C_DeInitWeaponMesh::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DeInitWeaponMesh, CallFunc_IsValid_ReturnValue) == 0x000044, "Member 'GA_TGF_Base_C_DeInitWeaponMesh::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DeInitWeaponMesh, CallFunc_RemoveTraceMesh_Result) == 0x000045, "Member 'GA_TGF_Base_C_DeInitWeaponMesh::CallFunc_RemoveTraceMesh_Result' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DeInitWeaponMesh, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'GA_TGF_Base_C_DeInitWeaponMesh::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DeInitWeaponMesh, CallFunc_Subtract_IntInt_ReturnValue_4) == 0x00004C, "Member 'GA_TGF_Base_C_DeInitWeaponMesh::CallFunc_Subtract_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DeInitWeaponMesh, CallFunc_Max_ReturnValue) == 0x000050, "Member 'GA_TGF_Base_C_DeInitWeaponMesh::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DeInitWeaponMesh, CallFunc_Array_Get_Item_1) == 0x000054, "Member 'GA_TGF_Base_C_DeInitWeaponMesh::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DeInitWeaponMesh, CallFunc_Array_Length_ReturnValue_1) == 0x000058, "Member 'GA_TGF_Base_C_DeInitWeaponMesh::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DeInitWeaponMesh, CallFunc_RemoveTraceMesh_Result_1) == 0x00005C, "Member 'GA_TGF_Base_C_DeInitWeaponMesh::CallFunc_RemoveTraceMesh_Result_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DeInitWeaponMesh, CallFunc_Subtract_IntInt_ReturnValue_5) == 0x000060, "Member 'GA_TGF_Base_C_DeInitWeaponMesh::CallFunc_Subtract_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DeInitWeaponMesh, CallFunc_Max_ReturnValue_1) == 0x000064, "Member 'GA_TGF_Base_C_DeInitWeaponMesh::CallFunc_Max_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DeInitWeaponMesh, CallFunc_Array_Get_Item_2) == 0x000068, "Member 'GA_TGF_Base_C_DeInitWeaponMesh::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DeInitWeaponMesh, CallFunc_Array_Length_ReturnValue_2) == 0x00006C, "Member 'GA_TGF_Base_C_DeInitWeaponMesh::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DeInitWeaponMesh, CallFunc_RemoveTraceMesh_Result_2) == 0x000070, "Member 'GA_TGF_Base_C_DeInitWeaponMesh::CallFunc_RemoveTraceMesh_Result_2' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DeInitWeaponMesh, CallFunc_Subtract_IntInt_ReturnValue_6) == 0x000074, "Member 'GA_TGF_Base_C_DeInitWeaponMesh::CallFunc_Subtract_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DeInitWeaponMesh, CallFunc_Max_ReturnValue_2) == 0x000078, "Member 'GA_TGF_Base_C_DeInitWeaponMesh::CallFunc_Max_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DeInitWeaponMesh, CallFunc_Array_Get_Item_3) == 0x00007C, "Member 'GA_TGF_Base_C_DeInitWeaponMesh::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DeInitWeaponMesh, CallFunc_IsValid_ReturnValue_1) == 0x000080, "Member 'GA_TGF_Base_C_DeInitWeaponMesh::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DeInitWeaponMesh, CallFunc_RemoveTraceMesh_Result_3) == 0x000081, "Member 'GA_TGF_Base_C_DeInitWeaponMesh::CallFunc_RemoveTraceMesh_Result_3' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DeInitWeaponMesh, CallFunc_Array_Length_ReturnValue_3) == 0x000084, "Member 'GA_TGF_Base_C_DeInitWeaponMesh::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DeInitWeaponMesh, CallFunc_Subtract_IntInt_ReturnValue_7) == 0x000088, "Member 'GA_TGF_Base_C_DeInitWeaponMesh::CallFunc_Subtract_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DeInitWeaponMesh, CallFunc_IsValid_ReturnValue_2) == 0x00008C, "Member 'GA_TGF_Base_C_DeInitWeaponMesh::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DeInitWeaponMesh, CallFunc_Max_ReturnValue_3) == 0x000090, "Member 'GA_TGF_Base_C_DeInitWeaponMesh::CallFunc_Max_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DeInitWeaponMesh, CallFunc_IsValid_ReturnValue_3) == 0x000094, "Member 'GA_TGF_Base_C_DeInitWeaponMesh::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");

// Function GA_TGF_Base.GA_TGF_Base_C.DisperseBuffDispatcher__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct GA_TGF_Base_C_DisperseBuffDispatcher__DelegateSignature final
{
public:
	struct FActiveGameplayEffectHandle            ActiveGameplayEffectHandle;                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_TGF_Base_C_DisperseBuffDispatcher__DelegateSignature) == 0x000004, "Wrong alignment on GA_TGF_Base_C_DisperseBuffDispatcher__DelegateSignature");
static_assert(sizeof(GA_TGF_Base_C_DisperseBuffDispatcher__DelegateSignature) == 0x000008, "Wrong size on GA_TGF_Base_C_DisperseBuffDispatcher__DelegateSignature");
static_assert(offsetof(GA_TGF_Base_C_DisperseBuffDispatcher__DelegateSignature, ActiveGameplayEffectHandle) == 0x000000, "Member 'GA_TGF_Base_C_DisperseBuffDispatcher__DelegateSignature::ActiveGameplayEffectHandle' has a wrong offset!");

// Function GA_TGF_Base.GA_TGF_Base_C.DisperseBuffWithHandler
// 0x0110 (0x0110 - 0x0000)
struct GA_TGF_Base_C_DisperseBuffWithHandler final
{
public:
	TArray<class AActor*>                         Targets;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FGameplayTag                           BuffTag;                                           // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  HighPriorityTags;                                  // 0x0018(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm)
	int32                                         Num;                                               // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDisperseSucceed;                                  // 0x003C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ULyraAbilitySystemComponent*            TargetACS;                                         // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         LeftNum;                                           // 0x0048(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSucceed;                                          // 0x004C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ALyraCharacter*                         K2Node_DynamicCast_AsLyra_Character;               // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULyraAbilitySystemComponent*            CallFunc_GetLyraAbilitySystemComponent_ReturnValue; // 0x0090(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x009B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  CallFunc_MakeGameplayTagContainerFromTag_ReturnValue; // 0x00A0(0x0020)()
	TArray<struct FActiveGameplayEffectHandle>    CallFunc_GetRandomActiveEffects_ReturnValue;       // 0x00C0(0x0010)(ReferenceParm)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_2;             // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D1[0x3];                                       // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FActiveGameplayEffectHandle            CallFunc_Array_Get_Item_1;                         // 0x00D4(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveActiveEffectByHandle_ReturnValue;   // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DD[0x3];                                       // 0x00DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E5[0x3];                                       // 0x00E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FActiveGameplayEffectHandle>    CallFunc_GetRandomActiveEffects_ReturnValue_1;     // 0x00F0(0x0010)(ReferenceParm)
	struct FActiveGameplayEffectHandle            CallFunc_Array_Get_Item_2;                         // 0x0100(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveActiveEffectByHandle_ReturnValue_1; // 0x010D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x010E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x010F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_TGF_Base_C_DisperseBuffWithHandler) == 0x000008, "Wrong alignment on GA_TGF_Base_C_DisperseBuffWithHandler");
static_assert(sizeof(GA_TGF_Base_C_DisperseBuffWithHandler) == 0x000110, "Wrong size on GA_TGF_Base_C_DisperseBuffWithHandler");
static_assert(offsetof(GA_TGF_Base_C_DisperseBuffWithHandler, Targets) == 0x000000, "Member 'GA_TGF_Base_C_DisperseBuffWithHandler::Targets' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DisperseBuffWithHandler, BuffTag) == 0x000010, "Member 'GA_TGF_Base_C_DisperseBuffWithHandler::BuffTag' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DisperseBuffWithHandler, HighPriorityTags) == 0x000018, "Member 'GA_TGF_Base_C_DisperseBuffWithHandler::HighPriorityTags' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DisperseBuffWithHandler, Num) == 0x000038, "Member 'GA_TGF_Base_C_DisperseBuffWithHandler::Num' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DisperseBuffWithHandler, bDisperseSucceed) == 0x00003C, "Member 'GA_TGF_Base_C_DisperseBuffWithHandler::bDisperseSucceed' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DisperseBuffWithHandler, TargetACS) == 0x000040, "Member 'GA_TGF_Base_C_DisperseBuffWithHandler::TargetACS' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DisperseBuffWithHandler, LeftNum) == 0x000048, "Member 'GA_TGF_Base_C_DisperseBuffWithHandler::LeftNum' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DisperseBuffWithHandler, bSucceed) == 0x00004C, "Member 'GA_TGF_Base_C_DisperseBuffWithHandler::bSucceed' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DisperseBuffWithHandler, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'GA_TGF_Base_C_DisperseBuffWithHandler::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DisperseBuffWithHandler, Temp_int_Array_Index_Variable) == 0x000054, "Member 'GA_TGF_Base_C_DisperseBuffWithHandler::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DisperseBuffWithHandler, Temp_int_Loop_Counter_Variable) == 0x000058, "Member 'GA_TGF_Base_C_DisperseBuffWithHandler::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DisperseBuffWithHandler, CallFunc_Add_IntInt_ReturnValue) == 0x00005C, "Member 'GA_TGF_Base_C_DisperseBuffWithHandler::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DisperseBuffWithHandler, Temp_int_Array_Index_Variable_1) == 0x000060, "Member 'GA_TGF_Base_C_DisperseBuffWithHandler::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DisperseBuffWithHandler, Temp_int_Loop_Counter_Variable_1) == 0x000064, "Member 'GA_TGF_Base_C_DisperseBuffWithHandler::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DisperseBuffWithHandler, CallFunc_Less_IntInt_ReturnValue) == 0x000068, "Member 'GA_TGF_Base_C_DisperseBuffWithHandler::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DisperseBuffWithHandler, CallFunc_Add_IntInt_ReturnValue_1) == 0x00006C, "Member 'GA_TGF_Base_C_DisperseBuffWithHandler::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DisperseBuffWithHandler, Temp_int_Array_Index_Variable_2) == 0x000070, "Member 'GA_TGF_Base_C_DisperseBuffWithHandler::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DisperseBuffWithHandler, Temp_int_Loop_Counter_Variable_2) == 0x000074, "Member 'GA_TGF_Base_C_DisperseBuffWithHandler::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DisperseBuffWithHandler, CallFunc_Array_Get_Item) == 0x000078, "Member 'GA_TGF_Base_C_DisperseBuffWithHandler::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DisperseBuffWithHandler, K2Node_DynamicCast_AsLyra_Character) == 0x000080, "Member 'GA_TGF_Base_C_DisperseBuffWithHandler::K2Node_DynamicCast_AsLyra_Character' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DisperseBuffWithHandler, K2Node_DynamicCast_bSuccess) == 0x000088, "Member 'GA_TGF_Base_C_DisperseBuffWithHandler::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DisperseBuffWithHandler, CallFunc_Add_IntInt_ReturnValue_2) == 0x00008C, "Member 'GA_TGF_Base_C_DisperseBuffWithHandler::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DisperseBuffWithHandler, CallFunc_GetLyraAbilitySystemComponent_ReturnValue) == 0x000090, "Member 'GA_TGF_Base_C_DisperseBuffWithHandler::CallFunc_GetLyraAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DisperseBuffWithHandler, CallFunc_IsValid_ReturnValue) == 0x000098, "Member 'GA_TGF_Base_C_DisperseBuffWithHandler::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DisperseBuffWithHandler, CallFunc_Greater_IntInt_ReturnValue) == 0x000099, "Member 'GA_TGF_Base_C_DisperseBuffWithHandler::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DisperseBuffWithHandler, CallFunc_Greater_IntInt_ReturnValue_1) == 0x00009A, "Member 'GA_TGF_Base_C_DisperseBuffWithHandler::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DisperseBuffWithHandler, CallFunc_BooleanOR_ReturnValue) == 0x00009B, "Member 'GA_TGF_Base_C_DisperseBuffWithHandler::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DisperseBuffWithHandler, CallFunc_Subtract_IntInt_ReturnValue) == 0x00009C, "Member 'GA_TGF_Base_C_DisperseBuffWithHandler::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DisperseBuffWithHandler, CallFunc_MakeGameplayTagContainerFromTag_ReturnValue) == 0x0000A0, "Member 'GA_TGF_Base_C_DisperseBuffWithHandler::CallFunc_MakeGameplayTagContainerFromTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DisperseBuffWithHandler, CallFunc_GetRandomActiveEffects_ReturnValue) == 0x0000C0, "Member 'GA_TGF_Base_C_DisperseBuffWithHandler::CallFunc_GetRandomActiveEffects_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DisperseBuffWithHandler, CallFunc_Greater_IntInt_ReturnValue_2) == 0x0000D0, "Member 'GA_TGF_Base_C_DisperseBuffWithHandler::CallFunc_Greater_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DisperseBuffWithHandler, CallFunc_Array_Get_Item_1) == 0x0000D4, "Member 'GA_TGF_Base_C_DisperseBuffWithHandler::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DisperseBuffWithHandler, CallFunc_RemoveActiveEffectByHandle_ReturnValue) == 0x0000DC, "Member 'GA_TGF_Base_C_DisperseBuffWithHandler::CallFunc_RemoveActiveEffectByHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DisperseBuffWithHandler, CallFunc_Array_Length_ReturnValue_1) == 0x0000E0, "Member 'GA_TGF_Base_C_DisperseBuffWithHandler::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DisperseBuffWithHandler, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000E4, "Member 'GA_TGF_Base_C_DisperseBuffWithHandler::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DisperseBuffWithHandler, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x0000E8, "Member 'GA_TGF_Base_C_DisperseBuffWithHandler::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DisperseBuffWithHandler, CallFunc_GetRandomActiveEffects_ReturnValue_1) == 0x0000F0, "Member 'GA_TGF_Base_C_DisperseBuffWithHandler::CallFunc_GetRandomActiveEffects_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DisperseBuffWithHandler, CallFunc_Array_Get_Item_2) == 0x000100, "Member 'GA_TGF_Base_C_DisperseBuffWithHandler::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DisperseBuffWithHandler, CallFunc_Array_Length_ReturnValue_2) == 0x000108, "Member 'GA_TGF_Base_C_DisperseBuffWithHandler::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DisperseBuffWithHandler, CallFunc_Less_IntInt_ReturnValue_2) == 0x00010C, "Member 'GA_TGF_Base_C_DisperseBuffWithHandler::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DisperseBuffWithHandler, CallFunc_RemoveActiveEffectByHandle_ReturnValue_1) == 0x00010D, "Member 'GA_TGF_Base_C_DisperseBuffWithHandler::CallFunc_RemoveActiveEffectByHandle_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DisperseBuffWithHandler, CallFunc_IsValid_ReturnValue_1) == 0x00010E, "Member 'GA_TGF_Base_C_DisperseBuffWithHandler::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DisperseBuffWithHandler, CallFunc_BooleanAND_ReturnValue) == 0x00010F, "Member 'GA_TGF_Base_C_DisperseBuffWithHandler::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function GA_TGF_Base.GA_TGF_Base_C.DoInteractorBattleGE
// 0x04F0 (0x04F0 - 0x0000)
struct GA_TGF_Base_C_DoInteractorBattleGE final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FGameplayEffectCue>             Temp_struct_Variable;                              // 0x0020(0x0010)(ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEffectCue                     CallFunc_Array_Get_Item_1;                         // 0x0050(0x0068)()
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BD[0x3];                                       // 0x00BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGameplayTag>                   CallFunc_BreakGameplayTagContainer_GameplayTags;   // 0x00C0(0x0010)(ReferenceParm)
	struct FGameplayTag                           CallFunc_Array_Get_Item_2;                         // 0x00D0(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DD[0x3];                                       // 0x00DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_EffectContextGetHitResult_ReturnValue;    // 0x00E0(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x01C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 CallFunc_MakeGameplayCueParametersFromHitResult_ReturnValue; // 0x01D0(0x00E0)(ContainsInstancedReference)
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_GetOwnedGameplayTags_self_CastInput;      // 0x02B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  CallFunc_GetOwnedGameplayTags_TagContainer;        // 0x02C0(0x0020)()
	float                                         CallFunc_BreakGameplayCueParameters_NormalizedMagnitude; // 0x02E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakGameplayCueParameters_RawMagnitude;  // 0x02E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectContextHandle           CallFunc_BreakGameplayCueParameters_EffectContext; // 0x02E8(0x0018)()
	struct FGameplayTag                           CallFunc_BreakGameplayCueParameters_MatchedTagName; // 0x0300(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_BreakGameplayCueParameters_OriginalTag;   // 0x0308(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  CallFunc_BreakGameplayCueParameters_AggregatedSourceTags; // 0x0310(0x0020)()
	struct FGameplayTagContainer                  CallFunc_BreakGameplayCueParameters_AggregatedTargetTags; // 0x0330(0x0020)()
	struct FVector                                CallFunc_BreakGameplayCueParameters_Location;      // 0x0350(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakGameplayCueParameters_Normal;        // 0x0368(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakGameplayCueParameters_Instigator;    // 0x0380(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakGameplayCueParameters_EffectCauser;  // 0x0388(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_BreakGameplayCueParameters_SourceObject;  // 0x0390(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakGameplayCueParameters_PhysicalMaterial; // 0x0398(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGameplayEffect*                        CallFunc_BreakGameplayCueParameters_GameplayEffect; // 0x03A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakGameplayCueParameters_GameplayEffectLevel; // 0x03A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakGameplayCueParameters_AbilityLevel;  // 0x03AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_BreakGameplayCueParameters_TargetAttachComponent; // 0x03B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakGameplayCueParameters_bReplicateLocationWhenUsingMinimalRepProxy; // 0x03B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B9[0x7];                                      // 0x03B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_GetSourceTags_Tags;                       // 0x03C0(0x0020)()
	class UClass*                                 CallFunc_Array_Get_Item_3;                         // 0x03E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x03E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3EC[0x4];                                      // 0x03EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayCueParameters                 CallFunc_MakeGameplayCueParameters_ReturnValue;    // 0x03F0(0x00E0)(ContainsInstancedReference)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x04D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D1[0x7];                                      // 0x04D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponentFromActorInfo_ReturnValue; // 0x04D8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_HasAuthority_ReturnValue;              // 0x04E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4E1[0x3];                                      // 0x04E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue; // 0x04E4(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_TGF_Base_C_DoInteractorBattleGE) == 0x000008, "Wrong alignment on GA_TGF_Base_C_DoInteractorBattleGE");
static_assert(sizeof(GA_TGF_Base_C_DoInteractorBattleGE) == 0x0004F0, "Wrong size on GA_TGF_Base_C_DoInteractorBattleGE");
static_assert(offsetof(GA_TGF_Base_C_DoInteractorBattleGE, Temp_int_Array_Index_Variable) == 0x000000, "Member 'GA_TGF_Base_C_DoInteractorBattleGE::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DoInteractorBattleGE, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'GA_TGF_Base_C_DoInteractorBattleGE::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DoInteractorBattleGE, Temp_int_Loop_Counter_Variable_1) == 0x000008, "Member 'GA_TGF_Base_C_DoInteractorBattleGE::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DoInteractorBattleGE, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'GA_TGF_Base_C_DoInteractorBattleGE::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DoInteractorBattleGE, CallFunc_Add_IntInt_ReturnValue_1) == 0x000010, "Member 'GA_TGF_Base_C_DoInteractorBattleGE::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DoInteractorBattleGE, Temp_int_Loop_Counter_Variable_2) == 0x000014, "Member 'GA_TGF_Base_C_DoInteractorBattleGE::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DoInteractorBattleGE, CallFunc_Add_IntInt_ReturnValue_2) == 0x000018, "Member 'GA_TGF_Base_C_DoInteractorBattleGE::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DoInteractorBattleGE, Temp_int_Array_Index_Variable_1) == 0x00001C, "Member 'GA_TGF_Base_C_DoInteractorBattleGE::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DoInteractorBattleGE, Temp_struct_Variable) == 0x000020, "Member 'GA_TGF_Base_C_DoInteractorBattleGE::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DoInteractorBattleGE, Temp_int_Array_Index_Variable_2) == 0x000030, "Member 'GA_TGF_Base_C_DoInteractorBattleGE::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DoInteractorBattleGE, Temp_int_Loop_Counter_Variable_3) == 0x000034, "Member 'GA_TGF_Base_C_DoInteractorBattleGE::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DoInteractorBattleGE, CallFunc_Add_IntInt_ReturnValue_3) == 0x000038, "Member 'GA_TGF_Base_C_DoInteractorBattleGE::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DoInteractorBattleGE, Temp_int_Array_Index_Variable_3) == 0x00003C, "Member 'GA_TGF_Base_C_DoInteractorBattleGE::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DoInteractorBattleGE, CallFunc_Array_Get_Item) == 0x000040, "Member 'GA_TGF_Base_C_DoInteractorBattleGE::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DoInteractorBattleGE, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'GA_TGF_Base_C_DoInteractorBattleGE::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DoInteractorBattleGE, CallFunc_Less_IntInt_ReturnValue) == 0x00004C, "Member 'GA_TGF_Base_C_DoInteractorBattleGE::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DoInteractorBattleGE, CallFunc_Array_Get_Item_1) == 0x000050, "Member 'GA_TGF_Base_C_DoInteractorBattleGE::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DoInteractorBattleGE, CallFunc_Array_Length_ReturnValue_1) == 0x0000B8, "Member 'GA_TGF_Base_C_DoInteractorBattleGE::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DoInteractorBattleGE, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000BC, "Member 'GA_TGF_Base_C_DoInteractorBattleGE::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DoInteractorBattleGE, CallFunc_BreakGameplayTagContainer_GameplayTags) == 0x0000C0, "Member 'GA_TGF_Base_C_DoInteractorBattleGE::CallFunc_BreakGameplayTagContainer_GameplayTags' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DoInteractorBattleGE, CallFunc_Array_Get_Item_2) == 0x0000D0, "Member 'GA_TGF_Base_C_DoInteractorBattleGE::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DoInteractorBattleGE, CallFunc_Array_Length_ReturnValue_2) == 0x0000D8, "Member 'GA_TGF_Base_C_DoInteractorBattleGE::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DoInteractorBattleGE, CallFunc_Less_IntInt_ReturnValue_2) == 0x0000DC, "Member 'GA_TGF_Base_C_DoInteractorBattleGE::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DoInteractorBattleGE, CallFunc_EffectContextGetHitResult_ReturnValue) == 0x0000E0, "Member 'GA_TGF_Base_C_DoInteractorBattleGE::CallFunc_EffectContextGetHitResult_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DoInteractorBattleGE, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x0001C8, "Member 'GA_TGF_Base_C_DoInteractorBattleGE::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DoInteractorBattleGE, CallFunc_MakeGameplayCueParametersFromHitResult_ReturnValue) == 0x0001D0, "Member 'GA_TGF_Base_C_DoInteractorBattleGE::CallFunc_MakeGameplayCueParametersFromHitResult_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DoInteractorBattleGE, CallFunc_GetOwnedGameplayTags_self_CastInput) == 0x0002B0, "Member 'GA_TGF_Base_C_DoInteractorBattleGE::CallFunc_GetOwnedGameplayTags_self_CastInput' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DoInteractorBattleGE, CallFunc_GetOwnedGameplayTags_TagContainer) == 0x0002C0, "Member 'GA_TGF_Base_C_DoInteractorBattleGE::CallFunc_GetOwnedGameplayTags_TagContainer' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DoInteractorBattleGE, CallFunc_BreakGameplayCueParameters_NormalizedMagnitude) == 0x0002E0, "Member 'GA_TGF_Base_C_DoInteractorBattleGE::CallFunc_BreakGameplayCueParameters_NormalizedMagnitude' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DoInteractorBattleGE, CallFunc_BreakGameplayCueParameters_RawMagnitude) == 0x0002E4, "Member 'GA_TGF_Base_C_DoInteractorBattleGE::CallFunc_BreakGameplayCueParameters_RawMagnitude' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DoInteractorBattleGE, CallFunc_BreakGameplayCueParameters_EffectContext) == 0x0002E8, "Member 'GA_TGF_Base_C_DoInteractorBattleGE::CallFunc_BreakGameplayCueParameters_EffectContext' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DoInteractorBattleGE, CallFunc_BreakGameplayCueParameters_MatchedTagName) == 0x000300, "Member 'GA_TGF_Base_C_DoInteractorBattleGE::CallFunc_BreakGameplayCueParameters_MatchedTagName' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DoInteractorBattleGE, CallFunc_BreakGameplayCueParameters_OriginalTag) == 0x000308, "Member 'GA_TGF_Base_C_DoInteractorBattleGE::CallFunc_BreakGameplayCueParameters_OriginalTag' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DoInteractorBattleGE, CallFunc_BreakGameplayCueParameters_AggregatedSourceTags) == 0x000310, "Member 'GA_TGF_Base_C_DoInteractorBattleGE::CallFunc_BreakGameplayCueParameters_AggregatedSourceTags' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DoInteractorBattleGE, CallFunc_BreakGameplayCueParameters_AggregatedTargetTags) == 0x000330, "Member 'GA_TGF_Base_C_DoInteractorBattleGE::CallFunc_BreakGameplayCueParameters_AggregatedTargetTags' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DoInteractorBattleGE, CallFunc_BreakGameplayCueParameters_Location) == 0x000350, "Member 'GA_TGF_Base_C_DoInteractorBattleGE::CallFunc_BreakGameplayCueParameters_Location' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DoInteractorBattleGE, CallFunc_BreakGameplayCueParameters_Normal) == 0x000368, "Member 'GA_TGF_Base_C_DoInteractorBattleGE::CallFunc_BreakGameplayCueParameters_Normal' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DoInteractorBattleGE, CallFunc_BreakGameplayCueParameters_Instigator) == 0x000380, "Member 'GA_TGF_Base_C_DoInteractorBattleGE::CallFunc_BreakGameplayCueParameters_Instigator' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DoInteractorBattleGE, CallFunc_BreakGameplayCueParameters_EffectCauser) == 0x000388, "Member 'GA_TGF_Base_C_DoInteractorBattleGE::CallFunc_BreakGameplayCueParameters_EffectCauser' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DoInteractorBattleGE, CallFunc_BreakGameplayCueParameters_SourceObject) == 0x000390, "Member 'GA_TGF_Base_C_DoInteractorBattleGE::CallFunc_BreakGameplayCueParameters_SourceObject' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DoInteractorBattleGE, CallFunc_BreakGameplayCueParameters_PhysicalMaterial) == 0x000398, "Member 'GA_TGF_Base_C_DoInteractorBattleGE::CallFunc_BreakGameplayCueParameters_PhysicalMaterial' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DoInteractorBattleGE, CallFunc_BreakGameplayCueParameters_GameplayEffect) == 0x0003A0, "Member 'GA_TGF_Base_C_DoInteractorBattleGE::CallFunc_BreakGameplayCueParameters_GameplayEffect' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DoInteractorBattleGE, CallFunc_BreakGameplayCueParameters_GameplayEffectLevel) == 0x0003A8, "Member 'GA_TGF_Base_C_DoInteractorBattleGE::CallFunc_BreakGameplayCueParameters_GameplayEffectLevel' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DoInteractorBattleGE, CallFunc_BreakGameplayCueParameters_AbilityLevel) == 0x0003AC, "Member 'GA_TGF_Base_C_DoInteractorBattleGE::CallFunc_BreakGameplayCueParameters_AbilityLevel' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DoInteractorBattleGE, CallFunc_BreakGameplayCueParameters_TargetAttachComponent) == 0x0003B0, "Member 'GA_TGF_Base_C_DoInteractorBattleGE::CallFunc_BreakGameplayCueParameters_TargetAttachComponent' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DoInteractorBattleGE, CallFunc_BreakGameplayCueParameters_bReplicateLocationWhenUsingMinimalRepProxy) == 0x0003B8, "Member 'GA_TGF_Base_C_DoInteractorBattleGE::CallFunc_BreakGameplayCueParameters_bReplicateLocationWhenUsingMinimalRepProxy' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DoInteractorBattleGE, CallFunc_GetSourceTags_Tags) == 0x0003C0, "Member 'GA_TGF_Base_C_DoInteractorBattleGE::CallFunc_GetSourceTags_Tags' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DoInteractorBattleGE, CallFunc_Array_Get_Item_3) == 0x0003E0, "Member 'GA_TGF_Base_C_DoInteractorBattleGE::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DoInteractorBattleGE, CallFunc_Array_Length_ReturnValue_3) == 0x0003E8, "Member 'GA_TGF_Base_C_DoInteractorBattleGE::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DoInteractorBattleGE, CallFunc_MakeGameplayCueParameters_ReturnValue) == 0x0003F0, "Member 'GA_TGF_Base_C_DoInteractorBattleGE::CallFunc_MakeGameplayCueParameters_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DoInteractorBattleGE, CallFunc_Less_IntInt_ReturnValue_3) == 0x0004D0, "Member 'GA_TGF_Base_C_DoInteractorBattleGE::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DoInteractorBattleGE, CallFunc_GetAbilitySystemComponentFromActorInfo_ReturnValue) == 0x0004D8, "Member 'GA_TGF_Base_C_DoInteractorBattleGE::CallFunc_GetAbilitySystemComponentFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DoInteractorBattleGE, CallFunc_K2_HasAuthority_ReturnValue) == 0x0004E0, "Member 'GA_TGF_Base_C_DoInteractorBattleGE::CallFunc_K2_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DoInteractorBattleGE, CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue) == 0x0004E4, "Member 'GA_TGF_Base_C_DoInteractorBattleGE::CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue' has a wrong offset!");

// Function GA_TGF_Base.GA_TGF_Base_C.DoInteractorEnvironment
// 0x04F0 (0x04F0 - 0x0000)
struct GA_TGF_Base_C_DoInteractorEnvironment final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FGameplayEffectCue>             Temp_struct_Variable;                              // 0x0020(0x0010)(ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsStandalone_ReturnValue;                 // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_Array_Get_Item_1;                         // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEffectCue                     CallFunc_Array_Get_Item_2;                         // 0x0060(0x0068)()
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGameplayTag>                   CallFunc_BreakGameplayTagContainer_GameplayTags;   // 0x00D0(0x0010)(ReferenceParm)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1[0x3];                                       // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_Array_Get_Item_3;                         // 0x00E4(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x00F5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F6[0x2];                                       // 0x00F6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponentFromActorInfo_ReturnValue; // 0x00F8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_HasAuthority_ReturnValue;              // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_101[0x3];                                      // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue; // 0x0104(0x0008)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10C[0x4];                                      // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_EffectContextGetHitResult_ReturnValue;    // 0x0110(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x01F8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 CallFunc_MakeGameplayCueParametersFromHitResult_ReturnValue; // 0x0200(0x00E0)(ContainsInstancedReference)
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_GetOwnedGameplayTags_self_CastInput;      // 0x02E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  CallFunc_GetOwnedGameplayTags_TagContainer;        // 0x02F0(0x0020)()
	float                                         CallFunc_BreakGameplayCueParameters_NormalizedMagnitude; // 0x0310(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakGameplayCueParameters_RawMagnitude;  // 0x0314(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectContextHandle           CallFunc_BreakGameplayCueParameters_EffectContext; // 0x0318(0x0018)()
	struct FGameplayTag                           CallFunc_BreakGameplayCueParameters_MatchedTagName; // 0x0330(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_BreakGameplayCueParameters_OriginalTag;   // 0x0338(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  CallFunc_BreakGameplayCueParameters_AggregatedSourceTags; // 0x0340(0x0020)()
	struct FGameplayTagContainer                  CallFunc_BreakGameplayCueParameters_AggregatedTargetTags; // 0x0360(0x0020)()
	struct FVector                                CallFunc_BreakGameplayCueParameters_Location;      // 0x0380(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakGameplayCueParameters_Normal;        // 0x0398(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakGameplayCueParameters_Instigator;    // 0x03B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakGameplayCueParameters_EffectCauser;  // 0x03B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_BreakGameplayCueParameters_SourceObject;  // 0x03C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakGameplayCueParameters_PhysicalMaterial; // 0x03C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGameplayEffect*                        CallFunc_BreakGameplayCueParameters_GameplayEffect; // 0x03D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakGameplayCueParameters_GameplayEffectLevel; // 0x03D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakGameplayCueParameters_AbilityLevel;  // 0x03DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_BreakGameplayCueParameters_TargetAttachComponent; // 0x03E0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakGameplayCueParameters_bReplicateLocationWhenUsingMinimalRepProxy; // 0x03E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E9[0x7];                                      // 0x03E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_GetSourceTags_Tags;                       // 0x03F0(0x0020)()
	struct FGameplayCueParameters                 CallFunc_MakeGameplayCueParameters_ReturnValue;    // 0x0410(0x00E0)(ContainsInstancedReference)
};
static_assert(alignof(GA_TGF_Base_C_DoInteractorEnvironment) == 0x000008, "Wrong alignment on GA_TGF_Base_C_DoInteractorEnvironment");
static_assert(sizeof(GA_TGF_Base_C_DoInteractorEnvironment) == 0x0004F0, "Wrong size on GA_TGF_Base_C_DoInteractorEnvironment");
static_assert(offsetof(GA_TGF_Base_C_DoInteractorEnvironment, Temp_int_Array_Index_Variable) == 0x000000, "Member 'GA_TGF_Base_C_DoInteractorEnvironment::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DoInteractorEnvironment, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'GA_TGF_Base_C_DoInteractorEnvironment::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DoInteractorEnvironment, Temp_int_Loop_Counter_Variable_1) == 0x000008, "Member 'GA_TGF_Base_C_DoInteractorEnvironment::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DoInteractorEnvironment, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'GA_TGF_Base_C_DoInteractorEnvironment::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DoInteractorEnvironment, CallFunc_Add_IntInt_ReturnValue_1) == 0x000010, "Member 'GA_TGF_Base_C_DoInteractorEnvironment::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DoInteractorEnvironment, Temp_int_Loop_Counter_Variable_2) == 0x000014, "Member 'GA_TGF_Base_C_DoInteractorEnvironment::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DoInteractorEnvironment, CallFunc_Add_IntInt_ReturnValue_2) == 0x000018, "Member 'GA_TGF_Base_C_DoInteractorEnvironment::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DoInteractorEnvironment, Temp_int_Array_Index_Variable_1) == 0x00001C, "Member 'GA_TGF_Base_C_DoInteractorEnvironment::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DoInteractorEnvironment, Temp_struct_Variable) == 0x000020, "Member 'GA_TGF_Base_C_DoInteractorEnvironment::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DoInteractorEnvironment, Temp_int_Array_Index_Variable_2) == 0x000030, "Member 'GA_TGF_Base_C_DoInteractorEnvironment::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DoInteractorEnvironment, Temp_int_Loop_Counter_Variable_3) == 0x000034, "Member 'GA_TGF_Base_C_DoInteractorEnvironment::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DoInteractorEnvironment, CallFunc_Add_IntInt_ReturnValue_3) == 0x000038, "Member 'GA_TGF_Base_C_DoInteractorEnvironment::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DoInteractorEnvironment, Temp_int_Array_Index_Variable_3) == 0x00003C, "Member 'GA_TGF_Base_C_DoInteractorEnvironment::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DoInteractorEnvironment, CallFunc_IsStandalone_ReturnValue) == 0x000040, "Member 'GA_TGF_Base_C_DoInteractorEnvironment::CallFunc_IsStandalone_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DoInteractorEnvironment, CallFunc_Array_Get_Item) == 0x000048, "Member 'GA_TGF_Base_C_DoInteractorEnvironment::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DoInteractorEnvironment, CallFunc_Array_Get_Item_1) == 0x000050, "Member 'GA_TGF_Base_C_DoInteractorEnvironment::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DoInteractorEnvironment, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'GA_TGF_Base_C_DoInteractorEnvironment::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DoInteractorEnvironment, CallFunc_Less_IntInt_ReturnValue) == 0x00005C, "Member 'GA_TGF_Base_C_DoInteractorEnvironment::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DoInteractorEnvironment, CallFunc_Array_Get_Item_2) == 0x000060, "Member 'GA_TGF_Base_C_DoInteractorEnvironment::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DoInteractorEnvironment, CallFunc_Array_Length_ReturnValue_1) == 0x0000C8, "Member 'GA_TGF_Base_C_DoInteractorEnvironment::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DoInteractorEnvironment, CallFunc_BreakGameplayTagContainer_GameplayTags) == 0x0000D0, "Member 'GA_TGF_Base_C_DoInteractorEnvironment::CallFunc_BreakGameplayTagContainer_GameplayTags' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DoInteractorEnvironment, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000E0, "Member 'GA_TGF_Base_C_DoInteractorEnvironment::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DoInteractorEnvironment, CallFunc_Array_Get_Item_3) == 0x0000E4, "Member 'GA_TGF_Base_C_DoInteractorEnvironment::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DoInteractorEnvironment, CallFunc_Array_Length_ReturnValue_2) == 0x0000EC, "Member 'GA_TGF_Base_C_DoInteractorEnvironment::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DoInteractorEnvironment, CallFunc_Array_Length_ReturnValue_3) == 0x0000F0, "Member 'GA_TGF_Base_C_DoInteractorEnvironment::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DoInteractorEnvironment, CallFunc_Less_IntInt_ReturnValue_2) == 0x0000F4, "Member 'GA_TGF_Base_C_DoInteractorEnvironment::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DoInteractorEnvironment, CallFunc_Less_IntInt_ReturnValue_3) == 0x0000F5, "Member 'GA_TGF_Base_C_DoInteractorEnvironment::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DoInteractorEnvironment, CallFunc_GetAbilitySystemComponentFromActorInfo_ReturnValue) == 0x0000F8, "Member 'GA_TGF_Base_C_DoInteractorEnvironment::CallFunc_GetAbilitySystemComponentFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DoInteractorEnvironment, CallFunc_K2_HasAuthority_ReturnValue) == 0x000100, "Member 'GA_TGF_Base_C_DoInteractorEnvironment::CallFunc_K2_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DoInteractorEnvironment, CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue) == 0x000104, "Member 'GA_TGF_Base_C_DoInteractorEnvironment::CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DoInteractorEnvironment, CallFunc_EffectContextGetHitResult_ReturnValue) == 0x000110, "Member 'GA_TGF_Base_C_DoInteractorEnvironment::CallFunc_EffectContextGetHitResult_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DoInteractorEnvironment, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x0001F8, "Member 'GA_TGF_Base_C_DoInteractorEnvironment::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DoInteractorEnvironment, CallFunc_MakeGameplayCueParametersFromHitResult_ReturnValue) == 0x000200, "Member 'GA_TGF_Base_C_DoInteractorEnvironment::CallFunc_MakeGameplayCueParametersFromHitResult_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DoInteractorEnvironment, CallFunc_GetOwnedGameplayTags_self_CastInput) == 0x0002E0, "Member 'GA_TGF_Base_C_DoInteractorEnvironment::CallFunc_GetOwnedGameplayTags_self_CastInput' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DoInteractorEnvironment, CallFunc_GetOwnedGameplayTags_TagContainer) == 0x0002F0, "Member 'GA_TGF_Base_C_DoInteractorEnvironment::CallFunc_GetOwnedGameplayTags_TagContainer' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DoInteractorEnvironment, CallFunc_BreakGameplayCueParameters_NormalizedMagnitude) == 0x000310, "Member 'GA_TGF_Base_C_DoInteractorEnvironment::CallFunc_BreakGameplayCueParameters_NormalizedMagnitude' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DoInteractorEnvironment, CallFunc_BreakGameplayCueParameters_RawMagnitude) == 0x000314, "Member 'GA_TGF_Base_C_DoInteractorEnvironment::CallFunc_BreakGameplayCueParameters_RawMagnitude' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DoInteractorEnvironment, CallFunc_BreakGameplayCueParameters_EffectContext) == 0x000318, "Member 'GA_TGF_Base_C_DoInteractorEnvironment::CallFunc_BreakGameplayCueParameters_EffectContext' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DoInteractorEnvironment, CallFunc_BreakGameplayCueParameters_MatchedTagName) == 0x000330, "Member 'GA_TGF_Base_C_DoInteractorEnvironment::CallFunc_BreakGameplayCueParameters_MatchedTagName' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DoInteractorEnvironment, CallFunc_BreakGameplayCueParameters_OriginalTag) == 0x000338, "Member 'GA_TGF_Base_C_DoInteractorEnvironment::CallFunc_BreakGameplayCueParameters_OriginalTag' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DoInteractorEnvironment, CallFunc_BreakGameplayCueParameters_AggregatedSourceTags) == 0x000340, "Member 'GA_TGF_Base_C_DoInteractorEnvironment::CallFunc_BreakGameplayCueParameters_AggregatedSourceTags' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DoInteractorEnvironment, CallFunc_BreakGameplayCueParameters_AggregatedTargetTags) == 0x000360, "Member 'GA_TGF_Base_C_DoInteractorEnvironment::CallFunc_BreakGameplayCueParameters_AggregatedTargetTags' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DoInteractorEnvironment, CallFunc_BreakGameplayCueParameters_Location) == 0x000380, "Member 'GA_TGF_Base_C_DoInteractorEnvironment::CallFunc_BreakGameplayCueParameters_Location' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DoInteractorEnvironment, CallFunc_BreakGameplayCueParameters_Normal) == 0x000398, "Member 'GA_TGF_Base_C_DoInteractorEnvironment::CallFunc_BreakGameplayCueParameters_Normal' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DoInteractorEnvironment, CallFunc_BreakGameplayCueParameters_Instigator) == 0x0003B0, "Member 'GA_TGF_Base_C_DoInteractorEnvironment::CallFunc_BreakGameplayCueParameters_Instigator' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DoInteractorEnvironment, CallFunc_BreakGameplayCueParameters_EffectCauser) == 0x0003B8, "Member 'GA_TGF_Base_C_DoInteractorEnvironment::CallFunc_BreakGameplayCueParameters_EffectCauser' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DoInteractorEnvironment, CallFunc_BreakGameplayCueParameters_SourceObject) == 0x0003C0, "Member 'GA_TGF_Base_C_DoInteractorEnvironment::CallFunc_BreakGameplayCueParameters_SourceObject' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DoInteractorEnvironment, CallFunc_BreakGameplayCueParameters_PhysicalMaterial) == 0x0003C8, "Member 'GA_TGF_Base_C_DoInteractorEnvironment::CallFunc_BreakGameplayCueParameters_PhysicalMaterial' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DoInteractorEnvironment, CallFunc_BreakGameplayCueParameters_GameplayEffect) == 0x0003D0, "Member 'GA_TGF_Base_C_DoInteractorEnvironment::CallFunc_BreakGameplayCueParameters_GameplayEffect' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DoInteractorEnvironment, CallFunc_BreakGameplayCueParameters_GameplayEffectLevel) == 0x0003D8, "Member 'GA_TGF_Base_C_DoInteractorEnvironment::CallFunc_BreakGameplayCueParameters_GameplayEffectLevel' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DoInteractorEnvironment, CallFunc_BreakGameplayCueParameters_AbilityLevel) == 0x0003DC, "Member 'GA_TGF_Base_C_DoInteractorEnvironment::CallFunc_BreakGameplayCueParameters_AbilityLevel' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DoInteractorEnvironment, CallFunc_BreakGameplayCueParameters_TargetAttachComponent) == 0x0003E0, "Member 'GA_TGF_Base_C_DoInteractorEnvironment::CallFunc_BreakGameplayCueParameters_TargetAttachComponent' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DoInteractorEnvironment, CallFunc_BreakGameplayCueParameters_bReplicateLocationWhenUsingMinimalRepProxy) == 0x0003E8, "Member 'GA_TGF_Base_C_DoInteractorEnvironment::CallFunc_BreakGameplayCueParameters_bReplicateLocationWhenUsingMinimalRepProxy' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DoInteractorEnvironment, CallFunc_GetSourceTags_Tags) == 0x0003F0, "Member 'GA_TGF_Base_C_DoInteractorEnvironment::CallFunc_GetSourceTags_Tags' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_DoInteractorEnvironment, CallFunc_MakeGameplayCueParameters_ReturnValue) == 0x000410, "Member 'GA_TGF_Base_C_DoInteractorEnvironment::CallFunc_MakeGameplayCueParameters_ReturnValue' has a wrong offset!");

// Function GA_TGF_Base.GA_TGF_Base_C.EnableProjectileBlocker
// 0x0060 (0x0060 - 0x0000)
struct GA_TGF_Base_C_EnableProjectileBlocker final
{
public:
	bool                                          Enable;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 WeaponActor;                                       // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class ALyraCharacter*                         CallFunc_GetLyraCharacterFromActorInfo_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ALyraCharacter*                         CallFunc_GetLyraCharacterFromActorInfo_ReturnValue_1; // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_Tgf_Monster_C*                      K2Node_DynamicCast_AsBP_Tgf_Monster;               // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMonster_ReturnValue;                    // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_TGF_MeleeWeaponBase_C*               K2Node_DynamicCast_AsB_TGF_Melee_Weapon_Base;      // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_HasAuthority_ReturnValue;              // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ALyraCharacter*                         CallFunc_GetLyraCharacterFromActorInfo_ReturnValue_2; // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetCurrentWeaponFirstActor_ReturnValue;   // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ALyraCharacter*                         CallFunc_GetLyraCharacterFromActorInfo_ReturnValue_3; // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetCurrentWeaponFirstActor_ReturnValue_1; // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_TGF_Base_C_EnableProjectileBlocker) == 0x000008, "Wrong alignment on GA_TGF_Base_C_EnableProjectileBlocker");
static_assert(sizeof(GA_TGF_Base_C_EnableProjectileBlocker) == 0x000060, "Wrong size on GA_TGF_Base_C_EnableProjectileBlocker");
static_assert(offsetof(GA_TGF_Base_C_EnableProjectileBlocker, Enable) == 0x000000, "Member 'GA_TGF_Base_C_EnableProjectileBlocker::Enable' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_EnableProjectileBlocker, WeaponActor) == 0x000008, "Member 'GA_TGF_Base_C_EnableProjectileBlocker::WeaponActor' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_EnableProjectileBlocker, CallFunc_GetLyraCharacterFromActorInfo_ReturnValue) == 0x000010, "Member 'GA_TGF_Base_C_EnableProjectileBlocker::CallFunc_GetLyraCharacterFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_EnableProjectileBlocker, CallFunc_GetLyraCharacterFromActorInfo_ReturnValue_1) == 0x000018, "Member 'GA_TGF_Base_C_EnableProjectileBlocker::CallFunc_GetLyraCharacterFromActorInfo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_EnableProjectileBlocker, K2Node_DynamicCast_AsBP_Tgf_Monster) == 0x000020, "Member 'GA_TGF_Base_C_EnableProjectileBlocker::K2Node_DynamicCast_AsBP_Tgf_Monster' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_EnableProjectileBlocker, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'GA_TGF_Base_C_EnableProjectileBlocker::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_EnableProjectileBlocker, CallFunc_IsMonster_ReturnValue) == 0x000029, "Member 'GA_TGF_Base_C_EnableProjectileBlocker::CallFunc_IsMonster_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_EnableProjectileBlocker, K2Node_DynamicCast_AsB_TGF_Melee_Weapon_Base) == 0x000030, "Member 'GA_TGF_Base_C_EnableProjectileBlocker::K2Node_DynamicCast_AsB_TGF_Melee_Weapon_Base' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_EnableProjectileBlocker, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'GA_TGF_Base_C_EnableProjectileBlocker::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_EnableProjectileBlocker, CallFunc_K2_HasAuthority_ReturnValue) == 0x000039, "Member 'GA_TGF_Base_C_EnableProjectileBlocker::CallFunc_K2_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_EnableProjectileBlocker, CallFunc_GetLyraCharacterFromActorInfo_ReturnValue_2) == 0x000040, "Member 'GA_TGF_Base_C_EnableProjectileBlocker::CallFunc_GetLyraCharacterFromActorInfo_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_EnableProjectileBlocker, CallFunc_GetCurrentWeaponFirstActor_ReturnValue) == 0x000048, "Member 'GA_TGF_Base_C_EnableProjectileBlocker::CallFunc_GetCurrentWeaponFirstActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_EnableProjectileBlocker, CallFunc_GetLyraCharacterFromActorInfo_ReturnValue_3) == 0x000050, "Member 'GA_TGF_Base_C_EnableProjectileBlocker::CallFunc_GetLyraCharacterFromActorInfo_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_EnableProjectileBlocker, CallFunc_GetCurrentWeaponFirstActor_ReturnValue_1) == 0x000058, "Member 'GA_TGF_Base_C_EnableProjectileBlocker::CallFunc_GetCurrentWeaponFirstActor_ReturnValue_1' has a wrong offset!");

// Function GA_TGF_Base.GA_TGF_Base_C.GatherNearbyActors
// 0x0070 (0x0070 - 0x0000)
struct GA_TGF_Base_C_GatherNearbyActors final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Radius;                                            // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Actors;                                            // 0x0020(0x0010)(Parm, OutParm)
	bool                                          Res;                                               // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0038(0x0010)(ConstParm, ReferenceParm)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0048(0x0010)(ConstParm, ReferenceParm)
	TArray<class AActor*>                         CallFunc_SphereOverlapActors_OutActors;            // 0x0058(0x0010)(ReferenceParm)
	bool                                          CallFunc_SphereOverlapActors_ReturnValue;          // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SphereOverlapActors_SphereRadius_ImplicitCast; // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_TGF_Base_C_GatherNearbyActors) == 0x000008, "Wrong alignment on GA_TGF_Base_C_GatherNearbyActors");
static_assert(sizeof(GA_TGF_Base_C_GatherNearbyActors) == 0x000070, "Wrong size on GA_TGF_Base_C_GatherNearbyActors");
static_assert(offsetof(GA_TGF_Base_C_GatherNearbyActors, Location) == 0x000000, "Member 'GA_TGF_Base_C_GatherNearbyActors::Location' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_GatherNearbyActors, Radius) == 0x000018, "Member 'GA_TGF_Base_C_GatherNearbyActors::Radius' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_GatherNearbyActors, Actors) == 0x000020, "Member 'GA_TGF_Base_C_GatherNearbyActors::Actors' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_GatherNearbyActors, Res) == 0x000030, "Member 'GA_TGF_Base_C_GatherNearbyActors::Res' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_GatherNearbyActors, Temp_object_Variable) == 0x000038, "Member 'GA_TGF_Base_C_GatherNearbyActors::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_GatherNearbyActors, K2Node_MakeArray_Array) == 0x000048, "Member 'GA_TGF_Base_C_GatherNearbyActors::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_GatherNearbyActors, CallFunc_SphereOverlapActors_OutActors) == 0x000058, "Member 'GA_TGF_Base_C_GatherNearbyActors::CallFunc_SphereOverlapActors_OutActors' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_GatherNearbyActors, CallFunc_SphereOverlapActors_ReturnValue) == 0x000068, "Member 'GA_TGF_Base_C_GatherNearbyActors::CallFunc_SphereOverlapActors_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_GatherNearbyActors, CallFunc_SphereOverlapActors_SphereRadius_ImplicitCast) == 0x00006C, "Member 'GA_TGF_Base_C_GatherNearbyActors::CallFunc_SphereOverlapActors_SphereRadius_ImplicitCast' has a wrong offset!");

// Function GA_TGF_Base.GA_TGF_Base_C.GetHandMeleeWeaponActor
// 0x0098 (0x0098 - 0x0000)
struct GA_TGF_Base_C_GetHandMeleeWeaponActor final
{
public:
	bool                                          LeftHand;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_TGF_MeleeWeaponBase_C*               ResultActor;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_TGF_MeleeWeaponBase_C*               MeleeWeaponActor;                                  // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 WeaponActor;                                       // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         WeaponActors;                                      // 0x0020(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	class ULyraEquipmentInstance*                 EquipmentInstance;                                 // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_TGF_WeaponInstance_Base_C*           K2Node_DynamicCast_AsB_TGF_Weapon_Instance_Base;   // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_TGF_MeleeWeaponBase_C*               K2Node_DynamicCast_AsB_TGF_Melee_Weapon_Base;      // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetSpawnedActors_ReturnValue;             // 0x0058(0x0010)(ReferenceParm)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ALyraCharacter*                         CallFunc_GetLyraCharacterFromActorInfo_ReturnValue; // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTgfEquipmentManagerComponent*          CallFunc_GetComponentByClass_ReturnValue;          // 0x0080(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ULyraEquipmentInstance*                 CallFunc_GetCurrentWeaponInstances_OutRightWeapon; // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ULyraEquipmentInstance*                 CallFunc_GetCurrentWeaponInstances_OutLeftWeapon;  // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_TGF_Base_C_GetHandMeleeWeaponActor) == 0x000008, "Wrong alignment on GA_TGF_Base_C_GetHandMeleeWeaponActor");
static_assert(sizeof(GA_TGF_Base_C_GetHandMeleeWeaponActor) == 0x000098, "Wrong size on GA_TGF_Base_C_GetHandMeleeWeaponActor");
static_assert(offsetof(GA_TGF_Base_C_GetHandMeleeWeaponActor, LeftHand) == 0x000000, "Member 'GA_TGF_Base_C_GetHandMeleeWeaponActor::LeftHand' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_GetHandMeleeWeaponActor, ResultActor) == 0x000008, "Member 'GA_TGF_Base_C_GetHandMeleeWeaponActor::ResultActor' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_GetHandMeleeWeaponActor, MeleeWeaponActor) == 0x000010, "Member 'GA_TGF_Base_C_GetHandMeleeWeaponActor::MeleeWeaponActor' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_GetHandMeleeWeaponActor, WeaponActor) == 0x000018, "Member 'GA_TGF_Base_C_GetHandMeleeWeaponActor::WeaponActor' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_GetHandMeleeWeaponActor, WeaponActors) == 0x000020, "Member 'GA_TGF_Base_C_GetHandMeleeWeaponActor::WeaponActors' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_GetHandMeleeWeaponActor, EquipmentInstance) == 0x000030, "Member 'GA_TGF_Base_C_GetHandMeleeWeaponActor::EquipmentInstance' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_GetHandMeleeWeaponActor, K2Node_DynamicCast_AsB_TGF_Weapon_Instance_Base) == 0x000038, "Member 'GA_TGF_Base_C_GetHandMeleeWeaponActor::K2Node_DynamicCast_AsB_TGF_Weapon_Instance_Base' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_GetHandMeleeWeaponActor, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'GA_TGF_Base_C_GetHandMeleeWeaponActor::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_GetHandMeleeWeaponActor, K2Node_DynamicCast_AsB_TGF_Melee_Weapon_Base) == 0x000048, "Member 'GA_TGF_Base_C_GetHandMeleeWeaponActor::K2Node_DynamicCast_AsB_TGF_Melee_Weapon_Base' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_GetHandMeleeWeaponActor, K2Node_DynamicCast_bSuccess_1) == 0x000050, "Member 'GA_TGF_Base_C_GetHandMeleeWeaponActor::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_GetHandMeleeWeaponActor, CallFunc_GetSpawnedActors_ReturnValue) == 0x000058, "Member 'GA_TGF_Base_C_GetHandMeleeWeaponActor::CallFunc_GetSpawnedActors_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_GetHandMeleeWeaponActor, CallFunc_Array_Get_Item) == 0x000068, "Member 'GA_TGF_Base_C_GetHandMeleeWeaponActor::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_GetHandMeleeWeaponActor, CallFunc_Array_Length_ReturnValue) == 0x000070, "Member 'GA_TGF_Base_C_GetHandMeleeWeaponActor::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_GetHandMeleeWeaponActor, CallFunc_Greater_IntInt_ReturnValue) == 0x000074, "Member 'GA_TGF_Base_C_GetHandMeleeWeaponActor::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_GetHandMeleeWeaponActor, CallFunc_GetLyraCharacterFromActorInfo_ReturnValue) == 0x000078, "Member 'GA_TGF_Base_C_GetHandMeleeWeaponActor::CallFunc_GetLyraCharacterFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_GetHandMeleeWeaponActor, CallFunc_GetComponentByClass_ReturnValue) == 0x000080, "Member 'GA_TGF_Base_C_GetHandMeleeWeaponActor::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_GetHandMeleeWeaponActor, CallFunc_GetCurrentWeaponInstances_OutRightWeapon) == 0x000088, "Member 'GA_TGF_Base_C_GetHandMeleeWeaponActor::CallFunc_GetCurrentWeaponInstances_OutRightWeapon' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_GetHandMeleeWeaponActor, CallFunc_GetCurrentWeaponInstances_OutLeftWeapon) == 0x000090, "Member 'GA_TGF_Base_C_GetHandMeleeWeaponActor::CallFunc_GetCurrentWeaponInstances_OutLeftWeapon' has a wrong offset!");

// Function GA_TGF_Base.GA_TGF_Base_C.GetLeftHandMeleeWeaponActor
// 0x0010 (0x0010 - 0x0000)
struct GA_TGF_Base_C_GetLeftHandMeleeWeaponActor final
{
public:
	class AB_TGF_MeleeWeaponBase_C*               ResultActor;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_TGF_MeleeWeaponBase_C*               CallFunc_GetHandMeleeWeaponActor_ResultActor;      // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_TGF_Base_C_GetLeftHandMeleeWeaponActor) == 0x000008, "Wrong alignment on GA_TGF_Base_C_GetLeftHandMeleeWeaponActor");
static_assert(sizeof(GA_TGF_Base_C_GetLeftHandMeleeWeaponActor) == 0x000010, "Wrong size on GA_TGF_Base_C_GetLeftHandMeleeWeaponActor");
static_assert(offsetof(GA_TGF_Base_C_GetLeftHandMeleeWeaponActor, ResultActor) == 0x000000, "Member 'GA_TGF_Base_C_GetLeftHandMeleeWeaponActor::ResultActor' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_GetLeftHandMeleeWeaponActor, CallFunc_GetHandMeleeWeaponActor_ResultActor) == 0x000008, "Member 'GA_TGF_Base_C_GetLeftHandMeleeWeaponActor::CallFunc_GetHandMeleeWeaponActor_ResultActor' has a wrong offset!");

// Function GA_TGF_Base.GA_TGF_Base_C.GetMonsterBodyMeleeWeaponActor
// 0x00C8 (0x00C8 - 0x0000)
struct GA_TGF_Base_C_GetMonsterBodyMeleeWeaponActor final
{
public:
	class ABP_Tgf_Monster_C*                      ResultActor;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_Tgf_Monster_C*                      MonsterActor;                                      // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class ALyraCharacter*                         CallFunc_GetLyraCharacterFromActorInfo_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue;            // 0x0018(0x0018)()
	class ABP_Tgf_Monster_C*                      K2Node_DynamicCast_AsBP_Tgf_Monster;               // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0040(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0090(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00A0(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_TGF_Base_C_GetMonsterBodyMeleeWeaponActor) == 0x000008, "Wrong alignment on GA_TGF_Base_C_GetMonsterBodyMeleeWeaponActor");
static_assert(sizeof(GA_TGF_Base_C_GetMonsterBodyMeleeWeaponActor) == 0x0000C8, "Wrong size on GA_TGF_Base_C_GetMonsterBodyMeleeWeaponActor");
static_assert(offsetof(GA_TGF_Base_C_GetMonsterBodyMeleeWeaponActor, ResultActor) == 0x000000, "Member 'GA_TGF_Base_C_GetMonsterBodyMeleeWeaponActor::ResultActor' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_GetMonsterBodyMeleeWeaponActor, MonsterActor) == 0x000008, "Member 'GA_TGF_Base_C_GetMonsterBodyMeleeWeaponActor::MonsterActor' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_GetMonsterBodyMeleeWeaponActor, CallFunc_GetLyraCharacterFromActorInfo_ReturnValue) == 0x000010, "Member 'GA_TGF_Base_C_GetMonsterBodyMeleeWeaponActor::CallFunc_GetLyraCharacterFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_GetMonsterBodyMeleeWeaponActor, CallFunc_Conv_ObjectToText_ReturnValue) == 0x000018, "Member 'GA_TGF_Base_C_GetMonsterBodyMeleeWeaponActor::CallFunc_Conv_ObjectToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_GetMonsterBodyMeleeWeaponActor, K2Node_DynamicCast_AsBP_Tgf_Monster) == 0x000030, "Member 'GA_TGF_Base_C_GetMonsterBodyMeleeWeaponActor::K2Node_DynamicCast_AsBP_Tgf_Monster' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_GetMonsterBodyMeleeWeaponActor, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'GA_TGF_Base_C_GetMonsterBodyMeleeWeaponActor::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_GetMonsterBodyMeleeWeaponActor, K2Node_MakeStruct_FormatArgumentData) == 0x000040, "Member 'GA_TGF_Base_C_GetMonsterBodyMeleeWeaponActor::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_GetMonsterBodyMeleeWeaponActor, K2Node_MakeArray_Array) == 0x000090, "Member 'GA_TGF_Base_C_GetMonsterBodyMeleeWeaponActor::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_GetMonsterBodyMeleeWeaponActor, CallFunc_Format_ReturnValue) == 0x0000A0, "Member 'GA_TGF_Base_C_GetMonsterBodyMeleeWeaponActor::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_GetMonsterBodyMeleeWeaponActor, CallFunc_Conv_TextToString_ReturnValue) == 0x0000B8, "Member 'GA_TGF_Base_C_GetMonsterBodyMeleeWeaponActor::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");

// Function GA_TGF_Base.GA_TGF_Base_C.GetPlayerBodyMeleeWeaponActor
// 0x0020 (0x0020 - 0x0000)
struct GA_TGF_Base_C_GetPlayerBodyMeleeWeaponActor final
{
public:
	class ABP_Fighter_HeroSample_C*               Result;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ALyraCharacter*                         CallFunc_GetLyraCharacterFromActorInfo_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_Fighter_HeroSample_C*               K2Node_DynamicCast_AsBP_Fighter_Hero_Sample;       // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_TGF_Base_C_GetPlayerBodyMeleeWeaponActor) == 0x000008, "Wrong alignment on GA_TGF_Base_C_GetPlayerBodyMeleeWeaponActor");
static_assert(sizeof(GA_TGF_Base_C_GetPlayerBodyMeleeWeaponActor) == 0x000020, "Wrong size on GA_TGF_Base_C_GetPlayerBodyMeleeWeaponActor");
static_assert(offsetof(GA_TGF_Base_C_GetPlayerBodyMeleeWeaponActor, Result) == 0x000000, "Member 'GA_TGF_Base_C_GetPlayerBodyMeleeWeaponActor::Result' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_GetPlayerBodyMeleeWeaponActor, CallFunc_GetLyraCharacterFromActorInfo_ReturnValue) == 0x000008, "Member 'GA_TGF_Base_C_GetPlayerBodyMeleeWeaponActor::CallFunc_GetLyraCharacterFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_GetPlayerBodyMeleeWeaponActor, K2Node_DynamicCast_AsBP_Fighter_Hero_Sample) == 0x000010, "Member 'GA_TGF_Base_C_GetPlayerBodyMeleeWeaponActor::K2Node_DynamicCast_AsBP_Fighter_Hero_Sample' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_GetPlayerBodyMeleeWeaponActor, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'GA_TGF_Base_C_GetPlayerBodyMeleeWeaponActor::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function GA_TGF_Base.GA_TGF_Base_C.GetRightHandMeleeWeaponActor
// 0x0010 (0x0010 - 0x0000)
struct GA_TGF_Base_C_GetRightHandMeleeWeaponActor final
{
public:
	class AB_TGF_MeleeWeaponBase_C*               ResultActor;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_TGF_MeleeWeaponBase_C*               CallFunc_GetHandMeleeWeaponActor_ResultActor;      // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_TGF_Base_C_GetRightHandMeleeWeaponActor) == 0x000008, "Wrong alignment on GA_TGF_Base_C_GetRightHandMeleeWeaponActor");
static_assert(sizeof(GA_TGF_Base_C_GetRightHandMeleeWeaponActor) == 0x000010, "Wrong size on GA_TGF_Base_C_GetRightHandMeleeWeaponActor");
static_assert(offsetof(GA_TGF_Base_C_GetRightHandMeleeWeaponActor, ResultActor) == 0x000000, "Member 'GA_TGF_Base_C_GetRightHandMeleeWeaponActor::ResultActor' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_GetRightHandMeleeWeaponActor, CallFunc_GetHandMeleeWeaponActor_ResultActor) == 0x000008, "Member 'GA_TGF_Base_C_GetRightHandMeleeWeaponActor::CallFunc_GetHandMeleeWeaponActor_ResultActor' has a wrong offset!");

// Function GA_TGF_Base.GA_TGF_Base_C.GetSourceTags
// 0x0080 (0x0080 - 0x0000)
struct GA_TGF_Base_C_GetSourceTags final
{
public:
	struct FGameplayTagContainer                  InstigatorTags;                                    // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FGameplayTagContainer                  Tags;                                              // 0x0020(0x0020)(Parm, OutParm)
	class ALyraCharacter*                         K2Node_DynamicCast_AsLyra_Character;               // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A[0x6];                                       // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_GetOwnedGameplayTags_self_CastInput;      // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  CallFunc_GetOwnedGameplayTags_TagContainer;        // 0x0060(0x0020)()
};
static_assert(alignof(GA_TGF_Base_C_GetSourceTags) == 0x000008, "Wrong alignment on GA_TGF_Base_C_GetSourceTags");
static_assert(sizeof(GA_TGF_Base_C_GetSourceTags) == 0x000080, "Wrong size on GA_TGF_Base_C_GetSourceTags");
static_assert(offsetof(GA_TGF_Base_C_GetSourceTags, InstigatorTags) == 0x000000, "Member 'GA_TGF_Base_C_GetSourceTags::InstigatorTags' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_GetSourceTags, Tags) == 0x000020, "Member 'GA_TGF_Base_C_GetSourceTags::Tags' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_GetSourceTags, K2Node_DynamicCast_AsLyra_Character) == 0x000040, "Member 'GA_TGF_Base_C_GetSourceTags::K2Node_DynamicCast_AsLyra_Character' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_GetSourceTags, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'GA_TGF_Base_C_GetSourceTags::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_GetSourceTags, CallFunc_IsValid_ReturnValue) == 0x000049, "Member 'GA_TGF_Base_C_GetSourceTags::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_GetSourceTags, CallFunc_GetOwnedGameplayTags_self_CastInput) == 0x000050, "Member 'GA_TGF_Base_C_GetSourceTags::CallFunc_GetOwnedGameplayTags_self_CastInput' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_GetSourceTags, CallFunc_GetOwnedGameplayTags_TagContainer) == 0x000060, "Member 'GA_TGF_Base_C_GetSourceTags::CallFunc_GetOwnedGameplayTags_TagContainer' has a wrong offset!");

// Function GA_TGF_Base.GA_TGF_Base_C.InitShieldConfig
// 0x0010 (0x0010 - 0x0000)
struct GA_TGF_Base_C_InitShieldConfig final
{
public:
	bool                                          CallFunc_K2_HasAuthority_ReturnValue;              // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue; // 0x0004(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_TGF_Base_C_InitShieldConfig) == 0x000004, "Wrong alignment on GA_TGF_Base_C_InitShieldConfig");
static_assert(sizeof(GA_TGF_Base_C_InitShieldConfig) == 0x000010, "Wrong size on GA_TGF_Base_C_InitShieldConfig");
static_assert(offsetof(GA_TGF_Base_C_InitShieldConfig, CallFunc_K2_HasAuthority_ReturnValue) == 0x000000, "Member 'GA_TGF_Base_C_InitShieldConfig::CallFunc_K2_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_InitShieldConfig, CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue) == 0x000004, "Member 'GA_TGF_Base_C_InitShieldConfig::CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_InitShieldConfig, CallFunc_IsValidClass_ReturnValue) == 0x00000C, "Member 'GA_TGF_Base_C_InitShieldConfig::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");

// Function GA_TGF_Base.GA_TGF_Base_C.InitWeaponMesh
// 0x0340 (0x0340 - 0x0000)
struct GA_TGF_Base_C_InitWeaponMesh final
{
public:
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_InitCurGA_ResultIndex;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAGRTraceData                          CallFunc_Array_Get_Item;                           // 0x0020(0x0140)()
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_161[0x3];                                      // 0x0161(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_AddTraceMesh_TraceMeshInsId;              // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16C[0x4];                                      // 0x016C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Fighter_HeroSample_C*               CallFunc_GetPlayerBodyMeleeWeaponActor_Result;     // 0x0170(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_179[0x3];                                      // 0x0179(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_InitCurGA_ResultIndex_1;                  // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0184(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_185[0x3];                                      // 0x0185(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_AddTraceMesh_TraceMeshInsId_1;            // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x018C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18D[0x3];                                      // 0x018D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_InitCurGA_ResultIndex_2;                  // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddTraceMesh_TraceMeshInsId_2;            // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_2;             // 0x019C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19D[0x3];                                      // 0x019D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A4[0x4];                                      // 0x01A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Tgf_Monster_C*                      CallFunc_GetMonsterBodyMeleeWeaponActor_ResultActor; // 0x01A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B1[0x3];                                      // 0x01B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_InitCurGA_ResultIndex_3;                  // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BC[0x4];                                      // 0x01BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAGRTraceData                          CallFunc_Array_Get_Item_1;                         // 0x01C0(0x0140)()
	bool                                          CallFunc_Greater_IntInt_ReturnValue_3;             // 0x0300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_301[0x3];                                      // 0x0301(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_AddTraceMesh_TraceMeshInsId_3;            // 0x0304(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x0308(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x030C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0310(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_311[0x7];                                      // 0x0311(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_TGF_MeleeWeaponBase_C*               CallFunc_GetRightHandMeleeWeaponActor_ResultActor; // 0x0318(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0320(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_321[0x7];                                      // 0x0321(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_TGF_MeleeWeaponBase_C*               CallFunc_GetLeftHandMeleeWeaponActor_ResultActor;  // 0x0328(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0330(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_TGF_Base_C_InitWeaponMesh) == 0x000010, "Wrong alignment on GA_TGF_Base_C_InitWeaponMesh");
static_assert(sizeof(GA_TGF_Base_C_InitWeaponMesh) == 0x000340, "Wrong size on GA_TGF_Base_C_InitWeaponMesh");
static_assert(offsetof(GA_TGF_Base_C_InitWeaponMesh, Temp_int_Loop_Counter_Variable) == 0x000000, "Member 'GA_TGF_Base_C_InitWeaponMesh::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_InitWeaponMesh, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'GA_TGF_Base_C_InitWeaponMesh::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_InitWeaponMesh, Temp_int_Array_Index_Variable) == 0x000008, "Member 'GA_TGF_Base_C_InitWeaponMesh::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_InitWeaponMesh, Temp_int_Loop_Counter_Variable_1) == 0x00000C, "Member 'GA_TGF_Base_C_InitWeaponMesh::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_InitWeaponMesh, CallFunc_Add_IntInt_ReturnValue_1) == 0x000010, "Member 'GA_TGF_Base_C_InitWeaponMesh::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_InitWeaponMesh, CallFunc_InitCurGA_ResultIndex) == 0x000014, "Member 'GA_TGF_Base_C_InitWeaponMesh::CallFunc_InitCurGA_ResultIndex' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_InitWeaponMesh, Temp_int_Array_Index_Variable_1) == 0x000018, "Member 'GA_TGF_Base_C_InitWeaponMesh::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_InitWeaponMesh, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'GA_TGF_Base_C_InitWeaponMesh::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_InitWeaponMesh, CallFunc_Array_Get_Item) == 0x000020, "Member 'GA_TGF_Base_C_InitWeaponMesh::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_InitWeaponMesh, CallFunc_Less_IntInt_ReturnValue) == 0x000160, "Member 'GA_TGF_Base_C_InitWeaponMesh::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_InitWeaponMesh, CallFunc_AddTraceMesh_TraceMeshInsId) == 0x000164, "Member 'GA_TGF_Base_C_InitWeaponMesh::CallFunc_AddTraceMesh_TraceMeshInsId' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_InitWeaponMesh, CallFunc_Array_Add_ReturnValue) == 0x000168, "Member 'GA_TGF_Base_C_InitWeaponMesh::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_InitWeaponMesh, CallFunc_GetPlayerBodyMeleeWeaponActor_Result) == 0x000170, "Member 'GA_TGF_Base_C_InitWeaponMesh::CallFunc_GetPlayerBodyMeleeWeaponActor_Result' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_InitWeaponMesh, CallFunc_IsValid_ReturnValue) == 0x000178, "Member 'GA_TGF_Base_C_InitWeaponMesh::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_InitWeaponMesh, CallFunc_InitCurGA_ResultIndex_1) == 0x00017C, "Member 'GA_TGF_Base_C_InitWeaponMesh::CallFunc_InitCurGA_ResultIndex_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_InitWeaponMesh, CallFunc_Array_Length_ReturnValue_1) == 0x000180, "Member 'GA_TGF_Base_C_InitWeaponMesh::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_InitWeaponMesh, CallFunc_Greater_IntInt_ReturnValue) == 0x000184, "Member 'GA_TGF_Base_C_InitWeaponMesh::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_InitWeaponMesh, CallFunc_AddTraceMesh_TraceMeshInsId_1) == 0x000188, "Member 'GA_TGF_Base_C_InitWeaponMesh::CallFunc_AddTraceMesh_TraceMeshInsId_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_InitWeaponMesh, CallFunc_Greater_IntInt_ReturnValue_1) == 0x00018C, "Member 'GA_TGF_Base_C_InitWeaponMesh::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_InitWeaponMesh, CallFunc_InitCurGA_ResultIndex_2) == 0x000190, "Member 'GA_TGF_Base_C_InitWeaponMesh::CallFunc_InitCurGA_ResultIndex_2' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_InitWeaponMesh, CallFunc_Array_Add_ReturnValue_1) == 0x000194, "Member 'GA_TGF_Base_C_InitWeaponMesh::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_InitWeaponMesh, CallFunc_AddTraceMesh_TraceMeshInsId_2) == 0x000198, "Member 'GA_TGF_Base_C_InitWeaponMesh::CallFunc_AddTraceMesh_TraceMeshInsId_2' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_InitWeaponMesh, CallFunc_Greater_IntInt_ReturnValue_2) == 0x00019C, "Member 'GA_TGF_Base_C_InitWeaponMesh::CallFunc_Greater_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_InitWeaponMesh, CallFunc_Array_Add_ReturnValue_2) == 0x0001A0, "Member 'GA_TGF_Base_C_InitWeaponMesh::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_InitWeaponMesh, CallFunc_GetMonsterBodyMeleeWeaponActor_ResultActor) == 0x0001A8, "Member 'GA_TGF_Base_C_InitWeaponMesh::CallFunc_GetMonsterBodyMeleeWeaponActor_ResultActor' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_InitWeaponMesh, CallFunc_IsValid_ReturnValue_1) == 0x0001B0, "Member 'GA_TGF_Base_C_InitWeaponMesh::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_InitWeaponMesh, CallFunc_InitCurGA_ResultIndex_3) == 0x0001B4, "Member 'GA_TGF_Base_C_InitWeaponMesh::CallFunc_InitCurGA_ResultIndex_3' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_InitWeaponMesh, CallFunc_Array_Length_ReturnValue_2) == 0x0001B8, "Member 'GA_TGF_Base_C_InitWeaponMesh::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_InitWeaponMesh, CallFunc_Array_Get_Item_1) == 0x0001C0, "Member 'GA_TGF_Base_C_InitWeaponMesh::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_InitWeaponMesh, CallFunc_Greater_IntInt_ReturnValue_3) == 0x000300, "Member 'GA_TGF_Base_C_InitWeaponMesh::CallFunc_Greater_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_InitWeaponMesh, CallFunc_AddTraceMesh_TraceMeshInsId_3) == 0x000304, "Member 'GA_TGF_Base_C_InitWeaponMesh::CallFunc_AddTraceMesh_TraceMeshInsId_3' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_InitWeaponMesh, CallFunc_Array_Add_ReturnValue_3) == 0x000308, "Member 'GA_TGF_Base_C_InitWeaponMesh::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_InitWeaponMesh, CallFunc_Array_Length_ReturnValue_3) == 0x00030C, "Member 'GA_TGF_Base_C_InitWeaponMesh::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_InitWeaponMesh, CallFunc_Less_IntInt_ReturnValue_1) == 0x000310, "Member 'GA_TGF_Base_C_InitWeaponMesh::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_InitWeaponMesh, CallFunc_GetRightHandMeleeWeaponActor_ResultActor) == 0x000318, "Member 'GA_TGF_Base_C_InitWeaponMesh::CallFunc_GetRightHandMeleeWeaponActor_ResultActor' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_InitWeaponMesh, CallFunc_IsValid_ReturnValue_2) == 0x000320, "Member 'GA_TGF_Base_C_InitWeaponMesh::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_InitWeaponMesh, CallFunc_GetLeftHandMeleeWeaponActor_ResultActor) == 0x000328, "Member 'GA_TGF_Base_C_InitWeaponMesh::CallFunc_GetLeftHandMeleeWeaponActor_ResultActor' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_InitWeaponMesh, CallFunc_IsValid_ReturnValue_3) == 0x000330, "Member 'GA_TGF_Base_C_InitWeaponMesh::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");

// Function GA_TGF_Base.GA_TGF_Base_C.InterruptAbility
// 0x00B0 (0x00B0 - 0x0000)
struct GA_TGF_Base_C_InterruptAbility final
{
public:
	struct FGameplayEventData                     InterruptData;                                     // 0x0000(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_TGF_Base_C_InterruptAbility) == 0x000008, "Wrong alignment on GA_TGF_Base_C_InterruptAbility");
static_assert(sizeof(GA_TGF_Base_C_InterruptAbility) == 0x0000B0, "Wrong size on GA_TGF_Base_C_InterruptAbility");
static_assert(offsetof(GA_TGF_Base_C_InterruptAbility, InterruptData) == 0x000000, "Member 'GA_TGF_Base_C_InterruptAbility::InterruptData' has a wrong offset!");

// Function GA_TGF_Base.GA_TGF_Base_C.NotifyRebound
// 0x01E0 (0x01E0 - 0x0000)
struct GA_TGF_Base_C_NotifyRebound final
{
public:
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue;            // 0x0000(0x0018)()
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue_1;          // 0x0018(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0030(0x0050)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0080(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00D0(0x0010)(ReferenceParm)
	struct FGameplayAbilityTargetDataHandle       CallFunc_AbilityTargetDataFromActor_ReturnValue;   // 0x00E0(0x0028)()
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0108(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0120(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FGameplayEventData                     K2Node_MakeStruct_GameplayEventData;               // 0x0130(0x00B0)()
};
static_assert(alignof(GA_TGF_Base_C_NotifyRebound) == 0x000008, "Wrong alignment on GA_TGF_Base_C_NotifyRebound");
static_assert(sizeof(GA_TGF_Base_C_NotifyRebound) == 0x0001E0, "Wrong size on GA_TGF_Base_C_NotifyRebound");
static_assert(offsetof(GA_TGF_Base_C_NotifyRebound, CallFunc_Conv_ObjectToText_ReturnValue) == 0x000000, "Member 'GA_TGF_Base_C_NotifyRebound::CallFunc_Conv_ObjectToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_NotifyRebound, CallFunc_Conv_ObjectToText_ReturnValue_1) == 0x000018, "Member 'GA_TGF_Base_C_NotifyRebound::CallFunc_Conv_ObjectToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_NotifyRebound, K2Node_MakeStruct_FormatArgumentData) == 0x000030, "Member 'GA_TGF_Base_C_NotifyRebound::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_NotifyRebound, K2Node_MakeStruct_FormatArgumentData_1) == 0x000080, "Member 'GA_TGF_Base_C_NotifyRebound::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_NotifyRebound, K2Node_MakeArray_Array) == 0x0000D0, "Member 'GA_TGF_Base_C_NotifyRebound::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_NotifyRebound, CallFunc_AbilityTargetDataFromActor_ReturnValue) == 0x0000E0, "Member 'GA_TGF_Base_C_NotifyRebound::CallFunc_AbilityTargetDataFromActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_NotifyRebound, CallFunc_Format_ReturnValue) == 0x000108, "Member 'GA_TGF_Base_C_NotifyRebound::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_NotifyRebound, CallFunc_Conv_TextToString_ReturnValue) == 0x000120, "Member 'GA_TGF_Base_C_NotifyRebound::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_NotifyRebound, K2Node_MakeStruct_GameplayEventData) == 0x000130, "Member 'GA_TGF_Base_C_NotifyRebound::K2Node_MakeStruct_GameplayEventData' has a wrong offset!");

// Function GA_TGF_Base.GA_TGF_Base_C.ProcessNormalIgnoreStaticCollision
// 0x0380 (0x0380 - 0x0000)
struct GA_TGF_Base_C_ProcessNormalIgnoreStaticCollision final
{
public:
	class AB_TGF_Normal_ProjectileBase_C*         SpawnedProjectile;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             SpawnTrans;                                        // 0x0010(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Instigator;                                        // 0x0070(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0090(0x0010)(ConstParm, ReferenceParm)
	class APlayerController*                      CallFunc_GetPlayerControllerFromObject_ReturnValue; // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x00F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x0110(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x0128(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetCameraRotation_ReturnValue;            // 0x0140(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetCameraLocation_ReturnValue;            // 0x0158(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue;         // 0x0170(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0188(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x01A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x01B8(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x02A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x02A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A3[0x1];                                      // 0x02A3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x02A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x02A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2AC[0x4];                                      // 0x02AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x02B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x02C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x02E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x02F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0310(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0318(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0320(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0328(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0330(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0338(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x033C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0340(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_344[0x4];                                      // 0x0344(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0348(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0360(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_IgnoreStaticCollision_DistanceFromCameraToTarget_ImplicitCast; // 0x0378(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_TGF_Base_C_ProcessNormalIgnoreStaticCollision) == 0x000010, "Wrong alignment on GA_TGF_Base_C_ProcessNormalIgnoreStaticCollision");
static_assert(sizeof(GA_TGF_Base_C_ProcessNormalIgnoreStaticCollision) == 0x000380, "Wrong size on GA_TGF_Base_C_ProcessNormalIgnoreStaticCollision");
static_assert(offsetof(GA_TGF_Base_C_ProcessNormalIgnoreStaticCollision, SpawnedProjectile) == 0x000000, "Member 'GA_TGF_Base_C_ProcessNormalIgnoreStaticCollision::SpawnedProjectile' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ProcessNormalIgnoreStaticCollision, SpawnTrans) == 0x000010, "Member 'GA_TGF_Base_C_ProcessNormalIgnoreStaticCollision::SpawnTrans' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ProcessNormalIgnoreStaticCollision, Instigator) == 0x000070, "Member 'GA_TGF_Base_C_ProcessNormalIgnoreStaticCollision::Instigator' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ProcessNormalIgnoreStaticCollision, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000078, "Member 'GA_TGF_Base_C_ProcessNormalIgnoreStaticCollision::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ProcessNormalIgnoreStaticCollision, K2Node_MakeArray_Array) == 0x000090, "Member 'GA_TGF_Base_C_ProcessNormalIgnoreStaticCollision::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ProcessNormalIgnoreStaticCollision, CallFunc_GetPlayerControllerFromObject_ReturnValue) == 0x0000A0, "Member 'GA_TGF_Base_C_ProcessNormalIgnoreStaticCollision::CallFunc_GetPlayerControllerFromObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ProcessNormalIgnoreStaticCollision, CallFunc_BreakTransform_Location) == 0x0000A8, "Member 'GA_TGF_Base_C_ProcessNormalIgnoreStaticCollision::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ProcessNormalIgnoreStaticCollision, CallFunc_BreakTransform_Rotation) == 0x0000C0, "Member 'GA_TGF_Base_C_ProcessNormalIgnoreStaticCollision::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ProcessNormalIgnoreStaticCollision, CallFunc_BreakTransform_Scale) == 0x0000D8, "Member 'GA_TGF_Base_C_ProcessNormalIgnoreStaticCollision::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ProcessNormalIgnoreStaticCollision, CallFunc_IsValid_ReturnValue) == 0x0000F0, "Member 'GA_TGF_Base_C_ProcessNormalIgnoreStaticCollision::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ProcessNormalIgnoreStaticCollision, CallFunc_BreakTransform_Location_1) == 0x0000F8, "Member 'GA_TGF_Base_C_ProcessNormalIgnoreStaticCollision::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ProcessNormalIgnoreStaticCollision, CallFunc_BreakTransform_Rotation_1) == 0x000110, "Member 'GA_TGF_Base_C_ProcessNormalIgnoreStaticCollision::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ProcessNormalIgnoreStaticCollision, CallFunc_BreakTransform_Scale_1) == 0x000128, "Member 'GA_TGF_Base_C_ProcessNormalIgnoreStaticCollision::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ProcessNormalIgnoreStaticCollision, CallFunc_GetCameraRotation_ReturnValue) == 0x000140, "Member 'GA_TGF_Base_C_ProcessNormalIgnoreStaticCollision::CallFunc_GetCameraRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ProcessNormalIgnoreStaticCollision, CallFunc_GetCameraLocation_ReturnValue) == 0x000158, "Member 'GA_TGF_Base_C_ProcessNormalIgnoreStaticCollision::CallFunc_GetCameraLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ProcessNormalIgnoreStaticCollision, CallFunc_Conv_RotatorToVector_ReturnValue) == 0x000170, "Member 'GA_TGF_Base_C_ProcessNormalIgnoreStaticCollision::CallFunc_Conv_RotatorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ProcessNormalIgnoreStaticCollision, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000188, "Member 'GA_TGF_Base_C_ProcessNormalIgnoreStaticCollision::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ProcessNormalIgnoreStaticCollision, CallFunc_Add_VectorVector_ReturnValue) == 0x0001A0, "Member 'GA_TGF_Base_C_ProcessNormalIgnoreStaticCollision::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ProcessNormalIgnoreStaticCollision, CallFunc_LineTraceSingle_OutHit) == 0x0001B8, "Member 'GA_TGF_Base_C_ProcessNormalIgnoreStaticCollision::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ProcessNormalIgnoreStaticCollision, CallFunc_LineTraceSingle_ReturnValue) == 0x0002A0, "Member 'GA_TGF_Base_C_ProcessNormalIgnoreStaticCollision::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ProcessNormalIgnoreStaticCollision, CallFunc_BreakHitResult_bBlockingHit) == 0x0002A1, "Member 'GA_TGF_Base_C_ProcessNormalIgnoreStaticCollision::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ProcessNormalIgnoreStaticCollision, CallFunc_BreakHitResult_bInitialOverlap) == 0x0002A2, "Member 'GA_TGF_Base_C_ProcessNormalIgnoreStaticCollision::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ProcessNormalIgnoreStaticCollision, CallFunc_BreakHitResult_Time) == 0x0002A4, "Member 'GA_TGF_Base_C_ProcessNormalIgnoreStaticCollision::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ProcessNormalIgnoreStaticCollision, CallFunc_BreakHitResult_Distance) == 0x0002A8, "Member 'GA_TGF_Base_C_ProcessNormalIgnoreStaticCollision::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ProcessNormalIgnoreStaticCollision, CallFunc_BreakHitResult_Location) == 0x0002B0, "Member 'GA_TGF_Base_C_ProcessNormalIgnoreStaticCollision::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ProcessNormalIgnoreStaticCollision, CallFunc_BreakHitResult_ImpactPoint) == 0x0002C8, "Member 'GA_TGF_Base_C_ProcessNormalIgnoreStaticCollision::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ProcessNormalIgnoreStaticCollision, CallFunc_BreakHitResult_Normal) == 0x0002E0, "Member 'GA_TGF_Base_C_ProcessNormalIgnoreStaticCollision::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ProcessNormalIgnoreStaticCollision, CallFunc_BreakHitResult_ImpactNormal) == 0x0002F8, "Member 'GA_TGF_Base_C_ProcessNormalIgnoreStaticCollision::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ProcessNormalIgnoreStaticCollision, CallFunc_BreakHitResult_PhysMat) == 0x000310, "Member 'GA_TGF_Base_C_ProcessNormalIgnoreStaticCollision::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ProcessNormalIgnoreStaticCollision, CallFunc_BreakHitResult_HitActor) == 0x000318, "Member 'GA_TGF_Base_C_ProcessNormalIgnoreStaticCollision::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ProcessNormalIgnoreStaticCollision, CallFunc_BreakHitResult_HitComponent) == 0x000320, "Member 'GA_TGF_Base_C_ProcessNormalIgnoreStaticCollision::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ProcessNormalIgnoreStaticCollision, CallFunc_BreakHitResult_HitBoneName) == 0x000328, "Member 'GA_TGF_Base_C_ProcessNormalIgnoreStaticCollision::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ProcessNormalIgnoreStaticCollision, CallFunc_BreakHitResult_BoneName) == 0x000330, "Member 'GA_TGF_Base_C_ProcessNormalIgnoreStaticCollision::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ProcessNormalIgnoreStaticCollision, CallFunc_BreakHitResult_HitItem) == 0x000338, "Member 'GA_TGF_Base_C_ProcessNormalIgnoreStaticCollision::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ProcessNormalIgnoreStaticCollision, CallFunc_BreakHitResult_ElementIndex) == 0x00033C, "Member 'GA_TGF_Base_C_ProcessNormalIgnoreStaticCollision::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ProcessNormalIgnoreStaticCollision, CallFunc_BreakHitResult_FaceIndex) == 0x000340, "Member 'GA_TGF_Base_C_ProcessNormalIgnoreStaticCollision::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ProcessNormalIgnoreStaticCollision, CallFunc_BreakHitResult_TraceStart) == 0x000348, "Member 'GA_TGF_Base_C_ProcessNormalIgnoreStaticCollision::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ProcessNormalIgnoreStaticCollision, CallFunc_BreakHitResult_TraceEnd) == 0x000360, "Member 'GA_TGF_Base_C_ProcessNormalIgnoreStaticCollision::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ProcessNormalIgnoreStaticCollision, CallFunc_IgnoreStaticCollision_DistanceFromCameraToTarget_ImplicitCast) == 0x000378, "Member 'GA_TGF_Base_C_ProcessNormalIgnoreStaticCollision::CallFunc_IgnoreStaticCollision_DistanceFromCameraToTarget_ImplicitCast' has a wrong offset!");

// Function GA_TGF_Base.GA_TGF_Base_C.ProcessTrackIgnoreStaticCollistion
// 0x03F0 (0x03F0 - 0x0000)
struct GA_TGF_Base_C_ProcessTrackIgnoreStaticCollistion final
{
public:
	class AB_TGF_Track_ProjectileBase_C*          SpawnedProjectile;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             SpawnTrans;                                        // 0x0010(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Instigator;                                        // 0x0070(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 TrackActor;                                        // 0x0078(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_TGF_Track_ProjectileBase_C*          Projectile;                                        // 0x0080(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x00A8(0x0010)(ConstParm, ReferenceParm)
	class APlayerController*                      CallFunc_GetPlayerControllerFromObject_ReturnValue; // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_GetCameraRotation_ReturnValue;            // 0x0110(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetCameraLocation_ReturnValue;            // 0x0128(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue;         // 0x0140(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x0158(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x0170(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x0188(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x01A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_2;                // 0x01B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_2;                // 0x01D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_2;                   // 0x01E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0200(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_219[0x7];                                      // 0x0219(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0220(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x0308(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0309(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x030A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30B[0x1];                                      // 0x030B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x030C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0310(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_314[0x4];                                      // 0x0314(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0318(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0330(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0348(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0360(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0378(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0380(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0388(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0390(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0398(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x03A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x03A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x03A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AC[0x4];                                      // 0x03AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x03B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x03C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_IgnoreStaticCollision_DistanceFromCameraToTarget_ImplicitCast; // 0x03E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_TGF_Base_C_ProcessTrackIgnoreStaticCollistion) == 0x000010, "Wrong alignment on GA_TGF_Base_C_ProcessTrackIgnoreStaticCollistion");
static_assert(sizeof(GA_TGF_Base_C_ProcessTrackIgnoreStaticCollistion) == 0x0003F0, "Wrong size on GA_TGF_Base_C_ProcessTrackIgnoreStaticCollistion");
static_assert(offsetof(GA_TGF_Base_C_ProcessTrackIgnoreStaticCollistion, SpawnedProjectile) == 0x000000, "Member 'GA_TGF_Base_C_ProcessTrackIgnoreStaticCollistion::SpawnedProjectile' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ProcessTrackIgnoreStaticCollistion, SpawnTrans) == 0x000010, "Member 'GA_TGF_Base_C_ProcessTrackIgnoreStaticCollistion::SpawnTrans' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ProcessTrackIgnoreStaticCollistion, Instigator) == 0x000070, "Member 'GA_TGF_Base_C_ProcessTrackIgnoreStaticCollistion::Instigator' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ProcessTrackIgnoreStaticCollistion, TrackActor) == 0x000078, "Member 'GA_TGF_Base_C_ProcessTrackIgnoreStaticCollistion::TrackActor' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ProcessTrackIgnoreStaticCollistion, Projectile) == 0x000080, "Member 'GA_TGF_Base_C_ProcessTrackIgnoreStaticCollistion::Projectile' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ProcessTrackIgnoreStaticCollistion, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000088, "Member 'GA_TGF_Base_C_ProcessTrackIgnoreStaticCollistion::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ProcessTrackIgnoreStaticCollistion, CallFunc_IsValid_ReturnValue) == 0x0000A0, "Member 'GA_TGF_Base_C_ProcessTrackIgnoreStaticCollistion::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ProcessTrackIgnoreStaticCollistion, K2Node_MakeArray_Array) == 0x0000A8, "Member 'GA_TGF_Base_C_ProcessTrackIgnoreStaticCollistion::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ProcessTrackIgnoreStaticCollistion, CallFunc_GetPlayerControllerFromObject_ReturnValue) == 0x0000B8, "Member 'GA_TGF_Base_C_ProcessTrackIgnoreStaticCollistion::CallFunc_GetPlayerControllerFromObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ProcessTrackIgnoreStaticCollistion, CallFunc_BreakTransform_Location) == 0x0000C0, "Member 'GA_TGF_Base_C_ProcessTrackIgnoreStaticCollistion::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ProcessTrackIgnoreStaticCollistion, CallFunc_BreakTransform_Rotation) == 0x0000D8, "Member 'GA_TGF_Base_C_ProcessTrackIgnoreStaticCollistion::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ProcessTrackIgnoreStaticCollistion, CallFunc_BreakTransform_Scale) == 0x0000F0, "Member 'GA_TGF_Base_C_ProcessTrackIgnoreStaticCollistion::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ProcessTrackIgnoreStaticCollistion, CallFunc_IsValid_ReturnValue_1) == 0x000108, "Member 'GA_TGF_Base_C_ProcessTrackIgnoreStaticCollistion::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ProcessTrackIgnoreStaticCollistion, CallFunc_GetCameraRotation_ReturnValue) == 0x000110, "Member 'GA_TGF_Base_C_ProcessTrackIgnoreStaticCollistion::CallFunc_GetCameraRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ProcessTrackIgnoreStaticCollistion, CallFunc_GetCameraLocation_ReturnValue) == 0x000128, "Member 'GA_TGF_Base_C_ProcessTrackIgnoreStaticCollistion::CallFunc_GetCameraLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ProcessTrackIgnoreStaticCollistion, CallFunc_Conv_RotatorToVector_ReturnValue) == 0x000140, "Member 'GA_TGF_Base_C_ProcessTrackIgnoreStaticCollistion::CallFunc_Conv_RotatorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ProcessTrackIgnoreStaticCollistion, CallFunc_BreakTransform_Location_1) == 0x000158, "Member 'GA_TGF_Base_C_ProcessTrackIgnoreStaticCollistion::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ProcessTrackIgnoreStaticCollistion, CallFunc_BreakTransform_Rotation_1) == 0x000170, "Member 'GA_TGF_Base_C_ProcessTrackIgnoreStaticCollistion::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ProcessTrackIgnoreStaticCollistion, CallFunc_BreakTransform_Scale_1) == 0x000188, "Member 'GA_TGF_Base_C_ProcessTrackIgnoreStaticCollistion::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ProcessTrackIgnoreStaticCollistion, CallFunc_Multiply_VectorVector_ReturnValue) == 0x0001A0, "Member 'GA_TGF_Base_C_ProcessTrackIgnoreStaticCollistion::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ProcessTrackIgnoreStaticCollistion, CallFunc_BreakTransform_Location_2) == 0x0001B8, "Member 'GA_TGF_Base_C_ProcessTrackIgnoreStaticCollistion::CallFunc_BreakTransform_Location_2' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ProcessTrackIgnoreStaticCollistion, CallFunc_BreakTransform_Rotation_2) == 0x0001D0, "Member 'GA_TGF_Base_C_ProcessTrackIgnoreStaticCollistion::CallFunc_BreakTransform_Rotation_2' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ProcessTrackIgnoreStaticCollistion, CallFunc_BreakTransform_Scale_2) == 0x0001E8, "Member 'GA_TGF_Base_C_ProcessTrackIgnoreStaticCollistion::CallFunc_BreakTransform_Scale_2' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ProcessTrackIgnoreStaticCollistion, CallFunc_Add_VectorVector_ReturnValue) == 0x000200, "Member 'GA_TGF_Base_C_ProcessTrackIgnoreStaticCollistion::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ProcessTrackIgnoreStaticCollistion, CallFunc_IsValid_ReturnValue_2) == 0x000218, "Member 'GA_TGF_Base_C_ProcessTrackIgnoreStaticCollistion::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ProcessTrackIgnoreStaticCollistion, CallFunc_LineTraceSingle_OutHit) == 0x000220, "Member 'GA_TGF_Base_C_ProcessTrackIgnoreStaticCollistion::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ProcessTrackIgnoreStaticCollistion, CallFunc_LineTraceSingle_ReturnValue) == 0x000308, "Member 'GA_TGF_Base_C_ProcessTrackIgnoreStaticCollistion::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ProcessTrackIgnoreStaticCollistion, CallFunc_BreakHitResult_bBlockingHit) == 0x000309, "Member 'GA_TGF_Base_C_ProcessTrackIgnoreStaticCollistion::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ProcessTrackIgnoreStaticCollistion, CallFunc_BreakHitResult_bInitialOverlap) == 0x00030A, "Member 'GA_TGF_Base_C_ProcessTrackIgnoreStaticCollistion::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ProcessTrackIgnoreStaticCollistion, CallFunc_BreakHitResult_Time) == 0x00030C, "Member 'GA_TGF_Base_C_ProcessTrackIgnoreStaticCollistion::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ProcessTrackIgnoreStaticCollistion, CallFunc_BreakHitResult_Distance) == 0x000310, "Member 'GA_TGF_Base_C_ProcessTrackIgnoreStaticCollistion::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ProcessTrackIgnoreStaticCollistion, CallFunc_BreakHitResult_Location) == 0x000318, "Member 'GA_TGF_Base_C_ProcessTrackIgnoreStaticCollistion::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ProcessTrackIgnoreStaticCollistion, CallFunc_BreakHitResult_ImpactPoint) == 0x000330, "Member 'GA_TGF_Base_C_ProcessTrackIgnoreStaticCollistion::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ProcessTrackIgnoreStaticCollistion, CallFunc_BreakHitResult_Normal) == 0x000348, "Member 'GA_TGF_Base_C_ProcessTrackIgnoreStaticCollistion::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ProcessTrackIgnoreStaticCollistion, CallFunc_BreakHitResult_ImpactNormal) == 0x000360, "Member 'GA_TGF_Base_C_ProcessTrackIgnoreStaticCollistion::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ProcessTrackIgnoreStaticCollistion, CallFunc_BreakHitResult_PhysMat) == 0x000378, "Member 'GA_TGF_Base_C_ProcessTrackIgnoreStaticCollistion::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ProcessTrackIgnoreStaticCollistion, CallFunc_BreakHitResult_HitActor) == 0x000380, "Member 'GA_TGF_Base_C_ProcessTrackIgnoreStaticCollistion::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ProcessTrackIgnoreStaticCollistion, CallFunc_BreakHitResult_HitComponent) == 0x000388, "Member 'GA_TGF_Base_C_ProcessTrackIgnoreStaticCollistion::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ProcessTrackIgnoreStaticCollistion, CallFunc_BreakHitResult_HitBoneName) == 0x000390, "Member 'GA_TGF_Base_C_ProcessTrackIgnoreStaticCollistion::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ProcessTrackIgnoreStaticCollistion, CallFunc_BreakHitResult_BoneName) == 0x000398, "Member 'GA_TGF_Base_C_ProcessTrackIgnoreStaticCollistion::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ProcessTrackIgnoreStaticCollistion, CallFunc_BreakHitResult_HitItem) == 0x0003A0, "Member 'GA_TGF_Base_C_ProcessTrackIgnoreStaticCollistion::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ProcessTrackIgnoreStaticCollistion, CallFunc_BreakHitResult_ElementIndex) == 0x0003A4, "Member 'GA_TGF_Base_C_ProcessTrackIgnoreStaticCollistion::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ProcessTrackIgnoreStaticCollistion, CallFunc_BreakHitResult_FaceIndex) == 0x0003A8, "Member 'GA_TGF_Base_C_ProcessTrackIgnoreStaticCollistion::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ProcessTrackIgnoreStaticCollistion, CallFunc_BreakHitResult_TraceStart) == 0x0003B0, "Member 'GA_TGF_Base_C_ProcessTrackIgnoreStaticCollistion::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ProcessTrackIgnoreStaticCollistion, CallFunc_BreakHitResult_TraceEnd) == 0x0003C8, "Member 'GA_TGF_Base_C_ProcessTrackIgnoreStaticCollistion::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ProcessTrackIgnoreStaticCollistion, CallFunc_IgnoreStaticCollision_DistanceFromCameraToTarget_ImplicitCast) == 0x0003E0, "Member 'GA_TGF_Base_C_ProcessTrackIgnoreStaticCollistion::CallFunc_IgnoreStaticCollision_DistanceFromCameraToTarget_ImplicitCast' has a wrong offset!");

// Function GA_TGF_Base.GA_TGF_Base_C.RefreshActorHitInfo
// 0x0014 (0x0014 - 0x0000)
struct GA_TGF_Base_C_RefreshActorHitInfo final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Map_Find_Value;                           // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_TGF_Base_C_RefreshActorHitInfo) == 0x000004, "Wrong alignment on GA_TGF_Base_C_RefreshActorHitInfo");
static_assert(sizeof(GA_TGF_Base_C_RefreshActorHitInfo) == 0x000014, "Wrong size on GA_TGF_Base_C_RefreshActorHitInfo");
static_assert(offsetof(GA_TGF_Base_C_RefreshActorHitInfo, Temp_int_Variable) == 0x000000, "Member 'GA_TGF_Base_C_RefreshActorHitInfo::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_RefreshActorHitInfo, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'GA_TGF_Base_C_RefreshActorHitInfo::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_RefreshActorHitInfo, CallFunc_Map_Find_Value) == 0x000008, "Member 'GA_TGF_Base_C_RefreshActorHitInfo::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_RefreshActorHitInfo, CallFunc_Map_Find_ReturnValue) == 0x00000C, "Member 'GA_TGF_Base_C_RefreshActorHitInfo::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_RefreshActorHitInfo, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'GA_TGF_Base_C_RefreshActorHitInfo::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function GA_TGF_Base.GA_TGF_Base_C.ResetAbilityHurtType
// 0x0001 (0x0001 - 0x0000)
struct GA_TGF_Base_C_ResetAbilityHurtType final
{
public:
	bool                                          CallFunc_RemoveLooseGameplayTags_ReturnValue;      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_TGF_Base_C_ResetAbilityHurtType) == 0x000001, "Wrong alignment on GA_TGF_Base_C_ResetAbilityHurtType");
static_assert(sizeof(GA_TGF_Base_C_ResetAbilityHurtType) == 0x000001, "Wrong size on GA_TGF_Base_C_ResetAbilityHurtType");
static_assert(offsetof(GA_TGF_Base_C_ResetAbilityHurtType, CallFunc_RemoveLooseGameplayTags_ReturnValue) == 0x000000, "Member 'GA_TGF_Base_C_ResetAbilityHurtType::CallFunc_RemoveLooseGameplayTags_ReturnValue' has a wrong offset!");

// Function GA_TGF_Base.GA_TGF_Base_C.ResetAttrBoostTags
// 0x0001 (0x0001 - 0x0000)
struct GA_TGF_Base_C_ResetAttrBoostTags final
{
public:
	bool                                          CallFunc_RemoveLooseGameplayTags_ReturnValue;      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_TGF_Base_C_ResetAttrBoostTags) == 0x000001, "Wrong alignment on GA_TGF_Base_C_ResetAttrBoostTags");
static_assert(sizeof(GA_TGF_Base_C_ResetAttrBoostTags) == 0x000001, "Wrong size on GA_TGF_Base_C_ResetAttrBoostTags");
static_assert(offsetof(GA_TGF_Base_C_ResetAttrBoostTags, CallFunc_RemoveLooseGameplayTags_ReturnValue) == 0x000000, "Member 'GA_TGF_Base_C_ResetAttrBoostTags::CallFunc_RemoveLooseGameplayTags_ReturnValue' has a wrong offset!");

// Function GA_TGF_Base.GA_TGF_Base_C.ResetCanWalkOffLedges
// 0x0014 (0x0014 - 0x0000)
struct GA_TGF_Base_C_ResetCanWalkOffLedges final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Abs_Int_ReturnValue;                      // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_TGF_Base_C_ResetCanWalkOffLedges) == 0x000004, "Wrong alignment on GA_TGF_Base_C_ResetCanWalkOffLedges");
static_assert(sizeof(GA_TGF_Base_C_ResetCanWalkOffLedges) == 0x000014, "Wrong size on GA_TGF_Base_C_ResetCanWalkOffLedges");
static_assert(offsetof(GA_TGF_Base_C_ResetCanWalkOffLedges, Temp_int_Variable) == 0x000000, "Member 'GA_TGF_Base_C_ResetCanWalkOffLedges::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ResetCanWalkOffLedges, CallFunc_Less_IntInt_ReturnValue) == 0x000004, "Member 'GA_TGF_Base_C_ResetCanWalkOffLedges::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ResetCanWalkOffLedges, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000005, "Member 'GA_TGF_Base_C_ResetCanWalkOffLedges::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ResetCanWalkOffLedges, CallFunc_Not_PreBool_ReturnValue) == 0x000006, "Member 'GA_TGF_Base_C_ResetCanWalkOffLedges::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ResetCanWalkOffLedges, CallFunc_Abs_Int_ReturnValue) == 0x000008, "Member 'GA_TGF_Base_C_ResetCanWalkOffLedges::CallFunc_Abs_Int_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ResetCanWalkOffLedges, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00000C, "Member 'GA_TGF_Base_C_ResetCanWalkOffLedges::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ResetCanWalkOffLedges, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'GA_TGF_Base_C_ResetCanWalkOffLedges::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function GA_TGF_Base.GA_TGF_Base_C.ResetCritical
// 0x0028 (0x0028 - 0x0000)
struct GA_TGF_Base_C_ResetCritical final
{
public:
	struct FGameplayTagContainer                  CallFunc_MakeGameplayTagContainerFromTag_ReturnValue; // 0x0000(0x0020)()
	bool                                          CallFunc_RemoveLooseGameplayTags_ReturnValue;      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_TGF_Base_C_ResetCritical) == 0x000008, "Wrong alignment on GA_TGF_Base_C_ResetCritical");
static_assert(sizeof(GA_TGF_Base_C_ResetCritical) == 0x000028, "Wrong size on GA_TGF_Base_C_ResetCritical");
static_assert(offsetof(GA_TGF_Base_C_ResetCritical, CallFunc_MakeGameplayTagContainerFromTag_ReturnValue) == 0x000000, "Member 'GA_TGF_Base_C_ResetCritical::CallFunc_MakeGameplayTagContainerFromTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ResetCritical, CallFunc_RemoveLooseGameplayTags_ReturnValue) == 0x000020, "Member 'GA_TGF_Base_C_ResetCritical::CallFunc_RemoveLooseGameplayTags_ReturnValue' has a wrong offset!");

// Function GA_TGF_Base.GA_TGF_Base_C.ResetGEAttributeTag
// 0x0001 (0x0001 - 0x0000)
struct GA_TGF_Base_C_ResetGEAttributeTag final
{
public:
	bool                                          CallFunc_RemoveLooseGameplayTags_ReturnValue;      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_TGF_Base_C_ResetGEAttributeTag) == 0x000001, "Wrong alignment on GA_TGF_Base_C_ResetGEAttributeTag");
static_assert(sizeof(GA_TGF_Base_C_ResetGEAttributeTag) == 0x000001, "Wrong size on GA_TGF_Base_C_ResetGEAttributeTag");
static_assert(offsetof(GA_TGF_Base_C_ResetGEAttributeTag, CallFunc_RemoveLooseGameplayTags_ReturnValue) == 0x000000, "Member 'GA_TGF_Base_C_ResetGEAttributeTag::CallFunc_RemoveLooseGameplayTags_ReturnValue' has a wrong offset!");

// Function GA_TGF_Base.GA_TGF_Base_C.ResetGuarded
// 0x0050 (0x0050 - 0x0000)
struct GA_TGF_Base_C_ResetGuarded final
{
public:
	struct FGameplayTagContainer                  CallFunc_MakeGameplayTagContainerFromTag_ReturnValue; // 0x0000(0x0020)()
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveLooseGameplayTags_ReturnValue;      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_MakeGameplayTagContainerFromTag_ReturnValue_1; // 0x0028(0x0020)()
	bool                                          CallFunc_RemoveLooseGameplayTags_ReturnValue_1;    // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_TGF_Base_C_ResetGuarded) == 0x000008, "Wrong alignment on GA_TGF_Base_C_ResetGuarded");
static_assert(sizeof(GA_TGF_Base_C_ResetGuarded) == 0x000050, "Wrong size on GA_TGF_Base_C_ResetGuarded");
static_assert(offsetof(GA_TGF_Base_C_ResetGuarded, CallFunc_MakeGameplayTagContainerFromTag_ReturnValue) == 0x000000, "Member 'GA_TGF_Base_C_ResetGuarded::CallFunc_MakeGameplayTagContainerFromTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ResetGuarded, CallFunc_Not_PreBool_ReturnValue) == 0x000020, "Member 'GA_TGF_Base_C_ResetGuarded::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ResetGuarded, CallFunc_RemoveLooseGameplayTags_ReturnValue) == 0x000021, "Member 'GA_TGF_Base_C_ResetGuarded::CallFunc_RemoveLooseGameplayTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ResetGuarded, CallFunc_MakeGameplayTagContainerFromTag_ReturnValue_1) == 0x000028, "Member 'GA_TGF_Base_C_ResetGuarded::CallFunc_MakeGameplayTagContainerFromTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ResetGuarded, CallFunc_RemoveLooseGameplayTags_ReturnValue_1) == 0x000048, "Member 'GA_TGF_Base_C_ResetGuarded::CallFunc_RemoveLooseGameplayTags_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ResetGuarded, CallFunc_BooleanAND_ReturnValue) == 0x000049, "Member 'GA_TGF_Base_C_ResetGuarded::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function GA_TGF_Base.GA_TGF_Base_C.ResetHitPartTag
// 0x0001 (0x0001 - 0x0000)
struct GA_TGF_Base_C_ResetHitPartTag final
{
public:
	bool                                          CallFunc_RemoveLooseGameplayTags_ReturnValue;      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_TGF_Base_C_ResetHitPartTag) == 0x000001, "Wrong alignment on GA_TGF_Base_C_ResetHitPartTag");
static_assert(sizeof(GA_TGF_Base_C_ResetHitPartTag) == 0x000001, "Wrong size on GA_TGF_Base_C_ResetHitPartTag");
static_assert(offsetof(GA_TGF_Base_C_ResetHitPartTag, CallFunc_RemoveLooseGameplayTags_ReturnValue) == 0x000000, "Member 'GA_TGF_Base_C_ResetHitPartTag::CallFunc_RemoveLooseGameplayTags_ReturnValue' has a wrong offset!");

// Function GA_TGF_Base.GA_TGF_Base_C.ResetInterrupt
// 0x0028 (0x0028 - 0x0000)
struct GA_TGF_Base_C_ResetInterrupt final
{
public:
	struct FGameplayTagContainer                  CallFunc_MakeGameplayTagContainerFromTag_ReturnValue; // 0x0000(0x0020)()
	bool                                          CallFunc_RemoveLooseGameplayTags_ReturnValue;      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_TGF_Base_C_ResetInterrupt) == 0x000008, "Wrong alignment on GA_TGF_Base_C_ResetInterrupt");
static_assert(sizeof(GA_TGF_Base_C_ResetInterrupt) == 0x000028, "Wrong size on GA_TGF_Base_C_ResetInterrupt");
static_assert(offsetof(GA_TGF_Base_C_ResetInterrupt, CallFunc_MakeGameplayTagContainerFromTag_ReturnValue) == 0x000000, "Member 'GA_TGF_Base_C_ResetInterrupt::CallFunc_MakeGameplayTagContainerFromTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ResetInterrupt, CallFunc_RemoveLooseGameplayTags_ReturnValue) == 0x000020, "Member 'GA_TGF_Base_C_ResetInterrupt::CallFunc_RemoveLooseGameplayTags_ReturnValue' has a wrong offset!");

// Function GA_TGF_Base.GA_TGF_Base_C.ResetNormalProjectile
// 0x00A0 (0x00A0 - 0x0000)
struct GA_TGF_Base_C_ResetNormalProjectile final
{
public:
	class AActor*                                 Projectile;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Transform;                                         // 0x0010(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ALyraCharacter*                         CallFunc_GetLyraCharacterFromActorInfo_ReturnValue; // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_TGF_Normal_ProjectileBase_C*         K2Node_DynamicCast_AsB_TGF_Normal_Projectile_Base; // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ALyraCharacter*                         CallFunc_GetLyraCharacterFromActorInfo_ReturnValue_1; // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckProjectileSecurity_CheckResult;      // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_TGF_Base_C_ResetNormalProjectile) == 0x000010, "Wrong alignment on GA_TGF_Base_C_ResetNormalProjectile");
static_assert(sizeof(GA_TGF_Base_C_ResetNormalProjectile) == 0x0000A0, "Wrong size on GA_TGF_Base_C_ResetNormalProjectile");
static_assert(offsetof(GA_TGF_Base_C_ResetNormalProjectile, Projectile) == 0x000000, "Member 'GA_TGF_Base_C_ResetNormalProjectile::Projectile' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ResetNormalProjectile, Transform) == 0x000010, "Member 'GA_TGF_Base_C_ResetNormalProjectile::Transform' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ResetNormalProjectile, CallFunc_GetLyraCharacterFromActorInfo_ReturnValue) == 0x000070, "Member 'GA_TGF_Base_C_ResetNormalProjectile::CallFunc_GetLyraCharacterFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ResetNormalProjectile, K2Node_DynamicCast_AsB_TGF_Normal_Projectile_Base) == 0x000078, "Member 'GA_TGF_Base_C_ResetNormalProjectile::K2Node_DynamicCast_AsB_TGF_Normal_Projectile_Base' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ResetNormalProjectile, K2Node_DynamicCast_bSuccess) == 0x000080, "Member 'GA_TGF_Base_C_ResetNormalProjectile::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ResetNormalProjectile, CallFunc_GetLyraCharacterFromActorInfo_ReturnValue_1) == 0x000088, "Member 'GA_TGF_Base_C_ResetNormalProjectile::CallFunc_GetLyraCharacterFromActorInfo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ResetNormalProjectile, CallFunc_CheckProjectileSecurity_CheckResult) == 0x000090, "Member 'GA_TGF_Base_C_ResetNormalProjectile::CallFunc_CheckProjectileSecurity_CheckResult' has a wrong offset!");

// Function GA_TGF_Base.GA_TGF_Base_C.ResetPerfectGuarded
// 0x0028 (0x0028 - 0x0000)
struct GA_TGF_Base_C_ResetPerfectGuarded final
{
public:
	struct FGameplayTagContainer                  CallFunc_MakeGameplayTagContainerFromTag_ReturnValue; // 0x0000(0x0020)()
	bool                                          CallFunc_RemoveLooseGameplayTags_ReturnValue;      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_TGF_Base_C_ResetPerfectGuarded) == 0x000008, "Wrong alignment on GA_TGF_Base_C_ResetPerfectGuarded");
static_assert(sizeof(GA_TGF_Base_C_ResetPerfectGuarded) == 0x000028, "Wrong size on GA_TGF_Base_C_ResetPerfectGuarded");
static_assert(offsetof(GA_TGF_Base_C_ResetPerfectGuarded, CallFunc_MakeGameplayTagContainerFromTag_ReturnValue) == 0x000000, "Member 'GA_TGF_Base_C_ResetPerfectGuarded::CallFunc_MakeGameplayTagContainerFromTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ResetPerfectGuarded, CallFunc_RemoveLooseGameplayTags_ReturnValue) == 0x000020, "Member 'GA_TGF_Base_C_ResetPerfectGuarded::CallFunc_RemoveLooseGameplayTags_ReturnValue' has a wrong offset!");

// Function GA_TGF_Base.GA_TGF_Base_C.ResetTeamTag
// 0x0050 (0x0050 - 0x0000)
struct GA_TGF_Base_C_ResetTeamTag final
{
public:
	struct FGameplayTagContainer                  CallFunc_MakeGameplayTagContainerFromTag_ReturnValue; // 0x0000(0x0020)()
	bool                                          CallFunc_RemoveLooseGameplayTags_ReturnValue;      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_MakeGameplayTagContainerFromTag_ReturnValue_1; // 0x0028(0x0020)()
	bool                                          CallFunc_RemoveLooseGameplayTags_ReturnValue_1;    // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_TGF_Base_C_ResetTeamTag) == 0x000008, "Wrong alignment on GA_TGF_Base_C_ResetTeamTag");
static_assert(sizeof(GA_TGF_Base_C_ResetTeamTag) == 0x000050, "Wrong size on GA_TGF_Base_C_ResetTeamTag");
static_assert(offsetof(GA_TGF_Base_C_ResetTeamTag, CallFunc_MakeGameplayTagContainerFromTag_ReturnValue) == 0x000000, "Member 'GA_TGF_Base_C_ResetTeamTag::CallFunc_MakeGameplayTagContainerFromTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ResetTeamTag, CallFunc_RemoveLooseGameplayTags_ReturnValue) == 0x000020, "Member 'GA_TGF_Base_C_ResetTeamTag::CallFunc_RemoveLooseGameplayTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ResetTeamTag, CallFunc_MakeGameplayTagContainerFromTag_ReturnValue_1) == 0x000028, "Member 'GA_TGF_Base_C_ResetTeamTag::CallFunc_MakeGameplayTagContainerFromTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ResetTeamTag, CallFunc_RemoveLooseGameplayTags_ReturnValue_1) == 0x000048, "Member 'GA_TGF_Base_C_ResetTeamTag::CallFunc_RemoveLooseGameplayTags_ReturnValue_1' has a wrong offset!");

// Function GA_TGF_Base.GA_TGF_Base_C.ResetTrackProjectile
// 0x00C0 (0x00C0 - 0x0000)
struct GA_TGF_Base_C_ResetTrackProjectile final
{
public:
	class AActor*                                 Projectile;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Transform;                                         // 0x0010(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 TrackTarget;                                       // 0x0070(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   TrackSocketName;                                   // 0x0078(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TargetPos;                                         // 0x0080(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ALyraCharacter*                         CallFunc_GetLyraCharacterFromActorInfo_ReturnValue; // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_TGF_Track_ProjectileBase_C*          K2Node_DynamicCast_AsB_TGF_Track_Projectile_Base;  // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ALyraCharacter*                         CallFunc_GetLyraCharacterFromActorInfo_ReturnValue_1; // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckProjectileSecurity_CheckResult;      // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_TGF_Base_C_ResetTrackProjectile) == 0x000010, "Wrong alignment on GA_TGF_Base_C_ResetTrackProjectile");
static_assert(sizeof(GA_TGF_Base_C_ResetTrackProjectile) == 0x0000C0, "Wrong size on GA_TGF_Base_C_ResetTrackProjectile");
static_assert(offsetof(GA_TGF_Base_C_ResetTrackProjectile, Projectile) == 0x000000, "Member 'GA_TGF_Base_C_ResetTrackProjectile::Projectile' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ResetTrackProjectile, Transform) == 0x000010, "Member 'GA_TGF_Base_C_ResetTrackProjectile::Transform' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ResetTrackProjectile, TrackTarget) == 0x000070, "Member 'GA_TGF_Base_C_ResetTrackProjectile::TrackTarget' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ResetTrackProjectile, TrackSocketName) == 0x000078, "Member 'GA_TGF_Base_C_ResetTrackProjectile::TrackSocketName' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ResetTrackProjectile, TargetPos) == 0x000080, "Member 'GA_TGF_Base_C_ResetTrackProjectile::TargetPos' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ResetTrackProjectile, CallFunc_GetLyraCharacterFromActorInfo_ReturnValue) == 0x000098, "Member 'GA_TGF_Base_C_ResetTrackProjectile::CallFunc_GetLyraCharacterFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ResetTrackProjectile, K2Node_DynamicCast_AsB_TGF_Track_Projectile_Base) == 0x0000A0, "Member 'GA_TGF_Base_C_ResetTrackProjectile::K2Node_DynamicCast_AsB_TGF_Track_Projectile_Base' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ResetTrackProjectile, K2Node_DynamicCast_bSuccess) == 0x0000A8, "Member 'GA_TGF_Base_C_ResetTrackProjectile::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ResetTrackProjectile, CallFunc_GetLyraCharacterFromActorInfo_ReturnValue_1) == 0x0000B0, "Member 'GA_TGF_Base_C_ResetTrackProjectile::CallFunc_GetLyraCharacterFromActorInfo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_ResetTrackProjectile, CallFunc_CheckProjectileSecurity_CheckResult) == 0x0000B8, "Member 'GA_TGF_Base_C_ResetTrackProjectile::CallFunc_CheckProjectileSecurity_CheckResult' has a wrong offset!");

// Function GA_TGF_Base.GA_TGF_Base_C.ResetWeaponElement
// 0x0001 (0x0001 - 0x0000)
struct GA_TGF_Base_C_ResetWeaponElement final
{
public:
	bool                                          CallFunc_RemoveLooseGameplayTags_ReturnValue;      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_TGF_Base_C_ResetWeaponElement) == 0x000001, "Wrong alignment on GA_TGF_Base_C_ResetWeaponElement");
static_assert(sizeof(GA_TGF_Base_C_ResetWeaponElement) == 0x000001, "Wrong size on GA_TGF_Base_C_ResetWeaponElement");
static_assert(offsetof(GA_TGF_Base_C_ResetWeaponElement, CallFunc_RemoveLooseGameplayTags_ReturnValue) == 0x000000, "Member 'GA_TGF_Base_C_ResetWeaponElement::CallFunc_RemoveLooseGameplayTags_ReturnValue' has a wrong offset!");

// Function GA_TGF_Base.GA_TGF_Base_C.SetCanWalkOffLedges
// 0x0038 (0x0038 - 0x0000)
struct GA_TGF_Base_C_SetCanWalkOffLedges final
{
public:
	bool                                          bEnabled;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ALyraCharacter*                         CallFunc_GetLyraCharacterFromActorInfo_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ULyraCharacterMovementComponent*        K2Node_DynamicCast_AsLyra_Character_Movement_Component; // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_TGF_Base_C_SetCanWalkOffLedges) == 0x000008, "Wrong alignment on GA_TGF_Base_C_SetCanWalkOffLedges");
static_assert(sizeof(GA_TGF_Base_C_SetCanWalkOffLedges) == 0x000038, "Wrong size on GA_TGF_Base_C_SetCanWalkOffLedges");
static_assert(offsetof(GA_TGF_Base_C_SetCanWalkOffLedges, bEnabled) == 0x000000, "Member 'GA_TGF_Base_C_SetCanWalkOffLedges::bEnabled' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_SetCanWalkOffLedges, Temp_int_Variable) == 0x000004, "Member 'GA_TGF_Base_C_SetCanWalkOffLedges::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_SetCanWalkOffLedges, Temp_int_Variable_1) == 0x000008, "Member 'GA_TGF_Base_C_SetCanWalkOffLedges::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_SetCanWalkOffLedges, Temp_bool_Variable) == 0x00000C, "Member 'GA_TGF_Base_C_SetCanWalkOffLedges::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_SetCanWalkOffLedges, CallFunc_GetLyraCharacterFromActorInfo_ReturnValue) == 0x000010, "Member 'GA_TGF_Base_C_SetCanWalkOffLedges::CallFunc_GetLyraCharacterFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_SetCanWalkOffLedges, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'GA_TGF_Base_C_SetCanWalkOffLedges::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_SetCanWalkOffLedges, K2Node_Select_Default) == 0x00001C, "Member 'GA_TGF_Base_C_SetCanWalkOffLedges::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_SetCanWalkOffLedges, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'GA_TGF_Base_C_SetCanWalkOffLedges::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_SetCanWalkOffLedges, K2Node_DynamicCast_AsLyra_Character_Movement_Component) == 0x000028, "Member 'GA_TGF_Base_C_SetCanWalkOffLedges::K2Node_DynamicCast_AsLyra_Character_Movement_Component' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_SetCanWalkOffLedges, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'GA_TGF_Base_C_SetCanWalkOffLedges::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function GA_TGF_Base.GA_TGF_Base_C.SpawnNormalProjectile
// 0x01B0 (0x01B0 - 0x0000)
struct GA_TGF_Base_C_SpawnNormalProjectile final
{
public:
	class UClass*                                 SpawnActor;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             SpawnTransform;                                    // 0x0010(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESpawnActorCollisionHandlingMethod            CollisionHandling;                                 // 0x0070(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Owner;                                             // 0x0078(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  Instigator;                                        // 0x0080(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ETgfUseAttackType                             UseAttackType;                                     // 0x0088(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETgfEquipSlot                                 ConsumeItemSlotType;                               // 0x0089(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ConsumeItem;                                       // 0x008A(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NeedChangeMesh;                                    // 0x008B(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            DamageRate;                                        // 0x0090(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_TGF_Normal_ProjectileBase_C*         Projectile;                                        // 0x0098(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_TGF_Normal_ProjectileBase_C*         SpawnedProjectile;                                 // 0x00A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGameplayAbility*                       CallFunc_GetSpecGA_ReturnValue;                    // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ATgfProjectileBase*                     CallFunc_FinishSpawningActor_ReturnValue;          // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectContextHandle           CallFunc_MakeEffectContextSimple_ReturnValue;      // 0x00C0(0x0018)()
	class AB_TGF_Normal_ProjectileBase_C*         K2Node_DynamicCast_AsB_TGF_Normal_Projectile_Base; // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ALyraCharacter*                         CallFunc_GetLyraCharacterFromActorInfo_ReturnValue; // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckProjectileSecurity_CheckResult;      // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ALyraCharacter*                         CallFunc_GetLyraCharacterFromActorInfo_ReturnValue_1; // 0x00F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FProjectileInitParams                  K2Node_MakeStruct_ProjectileInitParams;            // 0x0100(0x0080)()
	class UTgfEquipmentManagerComponent*          CallFunc_GetComponentByClass_ReturnValue;          // 0x0180(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_189[0x7];                                      // 0x0189(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULyraEquipmentInstance*                 CallFunc_GetEquipBySlot_ReturnValue;               // 0x0190(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_199[0x7];                                      // 0x0199(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMesh*                          CallFunc_GetEquipSkeletalMesh_ReturnValue;         // 0x01A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_TGF_Base_C_SpawnNormalProjectile) == 0x000010, "Wrong alignment on GA_TGF_Base_C_SpawnNormalProjectile");
static_assert(sizeof(GA_TGF_Base_C_SpawnNormalProjectile) == 0x0001B0, "Wrong size on GA_TGF_Base_C_SpawnNormalProjectile");
static_assert(offsetof(GA_TGF_Base_C_SpawnNormalProjectile, SpawnActor) == 0x000000, "Member 'GA_TGF_Base_C_SpawnNormalProjectile::SpawnActor' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_SpawnNormalProjectile, SpawnTransform) == 0x000010, "Member 'GA_TGF_Base_C_SpawnNormalProjectile::SpawnTransform' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_SpawnNormalProjectile, CollisionHandling) == 0x000070, "Member 'GA_TGF_Base_C_SpawnNormalProjectile::CollisionHandling' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_SpawnNormalProjectile, Owner) == 0x000078, "Member 'GA_TGF_Base_C_SpawnNormalProjectile::Owner' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_SpawnNormalProjectile, Instigator) == 0x000080, "Member 'GA_TGF_Base_C_SpawnNormalProjectile::Instigator' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_SpawnNormalProjectile, UseAttackType) == 0x000088, "Member 'GA_TGF_Base_C_SpawnNormalProjectile::UseAttackType' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_SpawnNormalProjectile, ConsumeItemSlotType) == 0x000089, "Member 'GA_TGF_Base_C_SpawnNormalProjectile::ConsumeItemSlotType' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_SpawnNormalProjectile, ConsumeItem) == 0x00008A, "Member 'GA_TGF_Base_C_SpawnNormalProjectile::ConsumeItem' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_SpawnNormalProjectile, NeedChangeMesh) == 0x00008B, "Member 'GA_TGF_Base_C_SpawnNormalProjectile::NeedChangeMesh' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_SpawnNormalProjectile, DamageRate) == 0x000090, "Member 'GA_TGF_Base_C_SpawnNormalProjectile::DamageRate' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_SpawnNormalProjectile, Projectile) == 0x000098, "Member 'GA_TGF_Base_C_SpawnNormalProjectile::Projectile' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_SpawnNormalProjectile, SpawnedProjectile) == 0x0000A0, "Member 'GA_TGF_Base_C_SpawnNormalProjectile::SpawnedProjectile' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_SpawnNormalProjectile, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0000A8, "Member 'GA_TGF_Base_C_SpawnNormalProjectile::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_SpawnNormalProjectile, CallFunc_GetSpecGA_ReturnValue) == 0x0000B0, "Member 'GA_TGF_Base_C_SpawnNormalProjectile::CallFunc_GetSpecGA_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_SpawnNormalProjectile, CallFunc_FinishSpawningActor_ReturnValue) == 0x0000B8, "Member 'GA_TGF_Base_C_SpawnNormalProjectile::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_SpawnNormalProjectile, CallFunc_MakeEffectContextSimple_ReturnValue) == 0x0000C0, "Member 'GA_TGF_Base_C_SpawnNormalProjectile::CallFunc_MakeEffectContextSimple_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_SpawnNormalProjectile, K2Node_DynamicCast_AsB_TGF_Normal_Projectile_Base) == 0x0000D8, "Member 'GA_TGF_Base_C_SpawnNormalProjectile::K2Node_DynamicCast_AsB_TGF_Normal_Projectile_Base' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_SpawnNormalProjectile, K2Node_DynamicCast_bSuccess) == 0x0000E0, "Member 'GA_TGF_Base_C_SpawnNormalProjectile::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_SpawnNormalProjectile, CallFunc_GetLyraCharacterFromActorInfo_ReturnValue) == 0x0000E8, "Member 'GA_TGF_Base_C_SpawnNormalProjectile::CallFunc_GetLyraCharacterFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_SpawnNormalProjectile, CallFunc_CheckProjectileSecurity_CheckResult) == 0x0000F0, "Member 'GA_TGF_Base_C_SpawnNormalProjectile::CallFunc_CheckProjectileSecurity_CheckResult' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_SpawnNormalProjectile, CallFunc_GetLyraCharacterFromActorInfo_ReturnValue_1) == 0x0000F8, "Member 'GA_TGF_Base_C_SpawnNormalProjectile::CallFunc_GetLyraCharacterFromActorInfo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_SpawnNormalProjectile, K2Node_MakeStruct_ProjectileInitParams) == 0x000100, "Member 'GA_TGF_Base_C_SpawnNormalProjectile::K2Node_MakeStruct_ProjectileInitParams' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_SpawnNormalProjectile, CallFunc_GetComponentByClass_ReturnValue) == 0x000180, "Member 'GA_TGF_Base_C_SpawnNormalProjectile::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_SpawnNormalProjectile, CallFunc_IsValid_ReturnValue) == 0x000188, "Member 'GA_TGF_Base_C_SpawnNormalProjectile::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_SpawnNormalProjectile, CallFunc_GetEquipBySlot_ReturnValue) == 0x000190, "Member 'GA_TGF_Base_C_SpawnNormalProjectile::CallFunc_GetEquipBySlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_SpawnNormalProjectile, CallFunc_IsValid_ReturnValue_1) == 0x000198, "Member 'GA_TGF_Base_C_SpawnNormalProjectile::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_SpawnNormalProjectile, CallFunc_GetEquipSkeletalMesh_ReturnValue) == 0x0001A0, "Member 'GA_TGF_Base_C_SpawnNormalProjectile::CallFunc_GetEquipSkeletalMesh_ReturnValue' has a wrong offset!");

// Function GA_TGF_Base.GA_TGF_Base_C.SpawnStaticOverlapProjectile
// 0x0170 (0x0170 - 0x0000)
struct GA_TGF_Base_C_SpawnStaticOverlapProjectile final
{
public:
	class UClass*                                 SpawnActor;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             SpawnTransform;                                    // 0x0010(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESpawnActorCollisionHandlingMethod            CollisionHandling;                                 // 0x0070(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Owner;                                             // 0x0078(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  Instigator;                                        // 0x0080(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ETgfUseAttackType                             UseAttackType;                                     // 0x0088(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETgfEquipSlot                                 ConsumeItemSlotType;                               // 0x0089(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ConsumeItem;                                       // 0x008A(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8B[0x5];                                       // 0x008B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            DamageRate;                                        // 0x0090(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_TGF_Static_OverlapCheck_ProjectileBase_C* Projectile;                                        // 0x0098(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_TGF_Static_OverlapCheck_ProjectileBase_C* SpawnedProjectile;                                 // 0x00A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class UGameplayAbility*                       CallFunc_GetSpecGA_ReturnValue;                    // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectContextHandle           CallFunc_MakeEffectContextSimple_ReturnValue;      // 0x00B8(0x0018)()
	class ATgfProjectileBase*                     CallFunc_FinishSpawningActor_ReturnValue;          // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ALyraCharacter*                         CallFunc_GetLyraCharacterFromActorInfo_ReturnValue; // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_TGF_Static_OverlapCheck_ProjectileBase_C* K2Node_DynamicCast_AsB_TGF_Static_Overlap_Check_Projectile_Base; // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckProjectileSecurity_CheckResult;      // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EA[0x6];                                       // 0x00EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FProjectileInitParams                  K2Node_MakeStruct_ProjectileInitParams;            // 0x00F0(0x0080)()
};
static_assert(alignof(GA_TGF_Base_C_SpawnStaticOverlapProjectile) == 0x000010, "Wrong alignment on GA_TGF_Base_C_SpawnStaticOverlapProjectile");
static_assert(sizeof(GA_TGF_Base_C_SpawnStaticOverlapProjectile) == 0x000170, "Wrong size on GA_TGF_Base_C_SpawnStaticOverlapProjectile");
static_assert(offsetof(GA_TGF_Base_C_SpawnStaticOverlapProjectile, SpawnActor) == 0x000000, "Member 'GA_TGF_Base_C_SpawnStaticOverlapProjectile::SpawnActor' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_SpawnStaticOverlapProjectile, SpawnTransform) == 0x000010, "Member 'GA_TGF_Base_C_SpawnStaticOverlapProjectile::SpawnTransform' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_SpawnStaticOverlapProjectile, CollisionHandling) == 0x000070, "Member 'GA_TGF_Base_C_SpawnStaticOverlapProjectile::CollisionHandling' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_SpawnStaticOverlapProjectile, Owner) == 0x000078, "Member 'GA_TGF_Base_C_SpawnStaticOverlapProjectile::Owner' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_SpawnStaticOverlapProjectile, Instigator) == 0x000080, "Member 'GA_TGF_Base_C_SpawnStaticOverlapProjectile::Instigator' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_SpawnStaticOverlapProjectile, UseAttackType) == 0x000088, "Member 'GA_TGF_Base_C_SpawnStaticOverlapProjectile::UseAttackType' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_SpawnStaticOverlapProjectile, ConsumeItemSlotType) == 0x000089, "Member 'GA_TGF_Base_C_SpawnStaticOverlapProjectile::ConsumeItemSlotType' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_SpawnStaticOverlapProjectile, ConsumeItem) == 0x00008A, "Member 'GA_TGF_Base_C_SpawnStaticOverlapProjectile::ConsumeItem' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_SpawnStaticOverlapProjectile, DamageRate) == 0x000090, "Member 'GA_TGF_Base_C_SpawnStaticOverlapProjectile::DamageRate' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_SpawnStaticOverlapProjectile, Projectile) == 0x000098, "Member 'GA_TGF_Base_C_SpawnStaticOverlapProjectile::Projectile' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_SpawnStaticOverlapProjectile, SpawnedProjectile) == 0x0000A0, "Member 'GA_TGF_Base_C_SpawnStaticOverlapProjectile::SpawnedProjectile' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_SpawnStaticOverlapProjectile, CallFunc_GetSpecGA_ReturnValue) == 0x0000A8, "Member 'GA_TGF_Base_C_SpawnStaticOverlapProjectile::CallFunc_GetSpecGA_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_SpawnStaticOverlapProjectile, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0000B0, "Member 'GA_TGF_Base_C_SpawnStaticOverlapProjectile::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_SpawnStaticOverlapProjectile, CallFunc_MakeEffectContextSimple_ReturnValue) == 0x0000B8, "Member 'GA_TGF_Base_C_SpawnStaticOverlapProjectile::CallFunc_MakeEffectContextSimple_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_SpawnStaticOverlapProjectile, CallFunc_FinishSpawningActor_ReturnValue) == 0x0000D0, "Member 'GA_TGF_Base_C_SpawnStaticOverlapProjectile::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_SpawnStaticOverlapProjectile, CallFunc_GetLyraCharacterFromActorInfo_ReturnValue) == 0x0000D8, "Member 'GA_TGF_Base_C_SpawnStaticOverlapProjectile::CallFunc_GetLyraCharacterFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_SpawnStaticOverlapProjectile, K2Node_DynamicCast_AsB_TGF_Static_Overlap_Check_Projectile_Base) == 0x0000E0, "Member 'GA_TGF_Base_C_SpawnStaticOverlapProjectile::K2Node_DynamicCast_AsB_TGF_Static_Overlap_Check_Projectile_Base' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_SpawnStaticOverlapProjectile, K2Node_DynamicCast_bSuccess) == 0x0000E8, "Member 'GA_TGF_Base_C_SpawnStaticOverlapProjectile::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_SpawnStaticOverlapProjectile, CallFunc_CheckProjectileSecurity_CheckResult) == 0x0000E9, "Member 'GA_TGF_Base_C_SpawnStaticOverlapProjectile::CallFunc_CheckProjectileSecurity_CheckResult' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_SpawnStaticOverlapProjectile, K2Node_MakeStruct_ProjectileInitParams) == 0x0000F0, "Member 'GA_TGF_Base_C_SpawnStaticOverlapProjectile::K2Node_MakeStruct_ProjectileInitParams' has a wrong offset!");

// Function GA_TGF_Base.GA_TGF_Base_C.SpawnTrackProjectile
// 0x01C0 (0x01C0 - 0x0000)
struct GA_TGF_Base_C_SpawnTrackProjectile final
{
public:
	class UClass*                                 SpawnActor;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             SpawnTransform;                                    // 0x0010(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESpawnActorCollisionHandlingMethod            CollisionHandling;                                 // 0x0070(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Owner;                                             // 0x0078(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  Instigator;                                        // 0x0080(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ETgfUseAttackType                             UseAttackType;                                     // 0x0088(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETgfEquipSlot                                 ConsumeItemSlotType;                               // 0x0089(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8A[0x6];                                       // 0x008A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 TrackTarget;                                       // 0x0090(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ConsumeItem;                                       // 0x0098(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NeedChangeMesh;                                    // 0x0099(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9A[0x6];                                       // 0x009A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            DamageRate;                                        // 0x00A0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   TrackSocketName;                                   // 0x00A8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AB_TGF_Track_ProjectileBase_C*          Projectile;                                        // 0x00B0(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_TGF_Track_ProjectileBase_C*          SpawnedProjectile;                                 // 0x00B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGameplayAbility*                       CallFunc_GetSpecGA_ReturnValue;                    // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ATgfProjectileBase*                     CallFunc_FinishSpawningActor_ReturnValue;          // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectContextHandle           CallFunc_MakeEffectContextSimple_ReturnValue;      // 0x00D8(0x0018)()
	class AB_TGF_Track_ProjectileBase_C*          K2Node_DynamicCast_AsB_TGF_Track_Projectile_Base;  // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ALyraCharacter*                         CallFunc_GetLyraCharacterFromActorInfo_ReturnValue; // 0x0100(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckProjectileSecurity_CheckResult;      // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FProjectileInitParams                  K2Node_MakeStruct_ProjectileInitParams;            // 0x0110(0x0080)()
	class ALyraCharacter*                         CallFunc_GetLyraCharacterFromActorInfo_ReturnValue_1; // 0x0190(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTgfEquipmentManagerComponent*          CallFunc_GetComponentByClass_ReturnValue;          // 0x0198(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ULyraEquipmentInstance*                 CallFunc_GetEquipBySlot_ReturnValue;               // 0x01A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x01A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AA[0x6];                                      // 0x01AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMesh*                          CallFunc_GetEquipSkeletalMesh_ReturnValue;         // 0x01B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_TGF_Base_C_SpawnTrackProjectile) == 0x000010, "Wrong alignment on GA_TGF_Base_C_SpawnTrackProjectile");
static_assert(sizeof(GA_TGF_Base_C_SpawnTrackProjectile) == 0x0001C0, "Wrong size on GA_TGF_Base_C_SpawnTrackProjectile");
static_assert(offsetof(GA_TGF_Base_C_SpawnTrackProjectile, SpawnActor) == 0x000000, "Member 'GA_TGF_Base_C_SpawnTrackProjectile::SpawnActor' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_SpawnTrackProjectile, SpawnTransform) == 0x000010, "Member 'GA_TGF_Base_C_SpawnTrackProjectile::SpawnTransform' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_SpawnTrackProjectile, CollisionHandling) == 0x000070, "Member 'GA_TGF_Base_C_SpawnTrackProjectile::CollisionHandling' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_SpawnTrackProjectile, Owner) == 0x000078, "Member 'GA_TGF_Base_C_SpawnTrackProjectile::Owner' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_SpawnTrackProjectile, Instigator) == 0x000080, "Member 'GA_TGF_Base_C_SpawnTrackProjectile::Instigator' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_SpawnTrackProjectile, UseAttackType) == 0x000088, "Member 'GA_TGF_Base_C_SpawnTrackProjectile::UseAttackType' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_SpawnTrackProjectile, ConsumeItemSlotType) == 0x000089, "Member 'GA_TGF_Base_C_SpawnTrackProjectile::ConsumeItemSlotType' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_SpawnTrackProjectile, TrackTarget) == 0x000090, "Member 'GA_TGF_Base_C_SpawnTrackProjectile::TrackTarget' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_SpawnTrackProjectile, ConsumeItem) == 0x000098, "Member 'GA_TGF_Base_C_SpawnTrackProjectile::ConsumeItem' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_SpawnTrackProjectile, NeedChangeMesh) == 0x000099, "Member 'GA_TGF_Base_C_SpawnTrackProjectile::NeedChangeMesh' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_SpawnTrackProjectile, DamageRate) == 0x0000A0, "Member 'GA_TGF_Base_C_SpawnTrackProjectile::DamageRate' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_SpawnTrackProjectile, TrackSocketName) == 0x0000A8, "Member 'GA_TGF_Base_C_SpawnTrackProjectile::TrackSocketName' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_SpawnTrackProjectile, Projectile) == 0x0000B0, "Member 'GA_TGF_Base_C_SpawnTrackProjectile::Projectile' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_SpawnTrackProjectile, SpawnedProjectile) == 0x0000B8, "Member 'GA_TGF_Base_C_SpawnTrackProjectile::SpawnedProjectile' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_SpawnTrackProjectile, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0000C0, "Member 'GA_TGF_Base_C_SpawnTrackProjectile::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_SpawnTrackProjectile, CallFunc_GetSpecGA_ReturnValue) == 0x0000C8, "Member 'GA_TGF_Base_C_SpawnTrackProjectile::CallFunc_GetSpecGA_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_SpawnTrackProjectile, CallFunc_FinishSpawningActor_ReturnValue) == 0x0000D0, "Member 'GA_TGF_Base_C_SpawnTrackProjectile::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_SpawnTrackProjectile, CallFunc_MakeEffectContextSimple_ReturnValue) == 0x0000D8, "Member 'GA_TGF_Base_C_SpawnTrackProjectile::CallFunc_MakeEffectContextSimple_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_SpawnTrackProjectile, K2Node_DynamicCast_AsB_TGF_Track_Projectile_Base) == 0x0000F0, "Member 'GA_TGF_Base_C_SpawnTrackProjectile::K2Node_DynamicCast_AsB_TGF_Track_Projectile_Base' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_SpawnTrackProjectile, K2Node_DynamicCast_bSuccess) == 0x0000F8, "Member 'GA_TGF_Base_C_SpawnTrackProjectile::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_SpawnTrackProjectile, CallFunc_GetLyraCharacterFromActorInfo_ReturnValue) == 0x000100, "Member 'GA_TGF_Base_C_SpawnTrackProjectile::CallFunc_GetLyraCharacterFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_SpawnTrackProjectile, CallFunc_CheckProjectileSecurity_CheckResult) == 0x000108, "Member 'GA_TGF_Base_C_SpawnTrackProjectile::CallFunc_CheckProjectileSecurity_CheckResult' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_SpawnTrackProjectile, K2Node_MakeStruct_ProjectileInitParams) == 0x000110, "Member 'GA_TGF_Base_C_SpawnTrackProjectile::K2Node_MakeStruct_ProjectileInitParams' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_SpawnTrackProjectile, CallFunc_GetLyraCharacterFromActorInfo_ReturnValue_1) == 0x000190, "Member 'GA_TGF_Base_C_SpawnTrackProjectile::CallFunc_GetLyraCharacterFromActorInfo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_SpawnTrackProjectile, CallFunc_GetComponentByClass_ReturnValue) == 0x000198, "Member 'GA_TGF_Base_C_SpawnTrackProjectile::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_SpawnTrackProjectile, CallFunc_GetEquipBySlot_ReturnValue) == 0x0001A0, "Member 'GA_TGF_Base_C_SpawnTrackProjectile::CallFunc_GetEquipBySlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_SpawnTrackProjectile, CallFunc_IsValid_ReturnValue) == 0x0001A8, "Member 'GA_TGF_Base_C_SpawnTrackProjectile::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_SpawnTrackProjectile, CallFunc_IsValid_ReturnValue_1) == 0x0001A9, "Member 'GA_TGF_Base_C_SpawnTrackProjectile::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_TGF_Base_C_SpawnTrackProjectile, CallFunc_GetEquipSkeletalMesh_ReturnValue) == 0x0001B0, "Member 'GA_TGF_Base_C_SpawnTrackProjectile::CallFunc_GetEquipSkeletalMesh_ReturnValue' has a wrong offset!");

}

