#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Common_ItemTooltip_Detail

#include "Basic.hpp"

#include "WBP_Common_ItemTooltip_Detail_classes.hpp"
#include "WBP_Common_ItemTooltip_Detail_parameters.hpp"


namespace SDK
{

// Function WBP_Common_ItemTooltip_Detail.WBP_Common_ItemTooltip_Detail_C.AttributeValueToText
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FAffixDisplayConfig              RefAffix                                               (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    bHideSign                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    EnableRange                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           Color                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UWBP_Common_ItemTooltip_Detail_C::AttributeValueToText(struct FAffixDisplayConfig& RefAffix, bool bHideSign, bool EnableRange, const class FString& Color)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Common_ItemTooltip_Detail_C", "AttributeValueToText");

	Params::WBP_Common_ItemTooltip_Detail_C_AttributeValueToText Parms{};

	Parms.RefAffix = std::move(RefAffix);
	Parms.bHideSign = bHideSign;
	Parms.EnableRange = EnableRange;
	Parms.Color = std::move(Color);

	UObject::ProcessEvent(Func, &Parms);

	RefAffix = std::move(Parms.RefAffix);
}


// Function WBP_Common_ItemTooltip_Detail.WBP_Common_ItemTooltip_Detail_C.InitConfigs
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_Common_ItemTooltip_Detail_C::InitConfigs()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Common_ItemTooltip_Detail_C", "InitConfigs");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_Common_ItemTooltip_Detail.WBP_Common_ItemTooltip_Detail_C.Is Positive Affix
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FAffixDisplayConfig              Ref_Affix                                              (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    bIsPositive                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Common_ItemTooltip_Detail_C::Is_Positive_Affix(struct FAffixDisplayConfig& Ref_Affix, bool* bIsPositive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Common_ItemTooltip_Detail_C", "Is Positive Affix");

	Params::WBP_Common_ItemTooltip_Detail_C_Is_Positive_Affix Parms{};

	Parms.Ref_Affix = std::move(Ref_Affix);

	UObject::ProcessEvent(Func, &Parms);

	Ref_Affix = std::move(Parms.Ref_Affix);

	if (bIsPositive != nullptr)
		*bIsPositive = Parms.bIsPositive;
}


// Function WBP_Common_ItemTooltip_Detail.WBP_Common_ItemTooltip_Detail_C.OverrideInputPrompt
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FInputChord                      Default_Keyboard_Input                                 (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// bool                                    bEnable                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             Text                                                   (BlueprintVisible, BlueprintReadOnly, Parm)

void UWBP_Common_ItemTooltip_Detail_C::OverrideInputPrompt(const struct FInputChord& Default_Keyboard_Input, bool bEnable, const class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Common_ItemTooltip_Detail_C", "OverrideInputPrompt");

	Params::WBP_Common_ItemTooltip_Detail_C_OverrideInputPrompt Parms{};

	Parms.Default_Keyboard_Input = std::move(Default_Keyboard_Input);
	Parms.bEnable = bEnable;
	Parms.Text = std::move(Text);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Common_ItemTooltip_Detail.WBP_Common_ItemTooltip_Detail_C.TradeShowLeft
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWBP_Common_ItemTooltip_Detail_C::TradeShowLeft()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Common_ItemTooltip_Detail_C", "TradeShowLeft");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_Common_ItemTooltip_Detail.WBP_Common_ItemTooltip_Detail_C.TradeShowRight
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWBP_Common_ItemTooltip_Detail_C::TradeShowRight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Common_ItemTooltip_Detail_C", "TradeShowRight");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_Common_ItemTooltip_Detail.WBP_Common_ItemTooltip_Detail_C.UpdateAttackLevel
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FAffixDisplayConfig>      Attrs                                                  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UWBP_Common_ItemTooltip_Detail_C::UpdateAttackLevel(TArray<struct FAffixDisplayConfig>& Attrs)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Common_ItemTooltip_Detail_C", "UpdateAttackLevel");

	Params::WBP_Common_ItemTooltip_Detail_C_UpdateAttackLevel Parms{};

	Parms.Attrs = std::move(Attrs);

	UObject::ProcessEvent(Func, &Parms);

	Attrs = std::move(Parms.Attrs);
}


// Function WBP_Common_ItemTooltip_Detail.WBP_Common_ItemTooltip_Detail_C.UpdateAttrsBase
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FAffixDisplayConfig>      Attrs                                                  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UWBP_Common_ItemTooltip_Detail_C::UpdateAttrsBase(TArray<struct FAffixDisplayConfig>& Attrs)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Common_ItemTooltip_Detail_C", "UpdateAttrsBase");

	Params::WBP_Common_ItemTooltip_Detail_C_UpdateAttrsBase Parms{};

	Parms.Attrs = std::move(Attrs);

	UObject::ProcessEvent(Func, &Parms);

	Attrs = std::move(Parms.Attrs);
}


// Function WBP_Common_ItemTooltip_Detail.WBP_Common_ItemTooltip_Detail_C.UpdateDurability
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Common_ItemTooltip_Detail_C::UpdateDurability(bool* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Common_ItemTooltip_Detail_C", "UpdateDurability");

	Params::WBP_Common_ItemTooltip_Detail_C_UpdateDurability Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function WBP_Common_ItemTooltip_Detail.WBP_Common_ItemTooltip_Detail_C.UpdateOtherInfo
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWBP_Common_ItemTooltip_Detail_C::UpdateOtherInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Common_ItemTooltip_Detail_C", "UpdateOtherInfo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_Common_ItemTooltip_Detail.WBP_Common_ItemTooltip_Detail_C.UpdateTopAffixes
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FAffixDisplayConfig>      Attrs                                                  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UWBP_Common_ItemTooltip_Detail_C::UpdateTopAffixes(TArray<struct FAffixDisplayConfig>& Attrs)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Common_ItemTooltip_Detail_C", "UpdateTopAffixes");

	Params::WBP_Common_ItemTooltip_Detail_C_UpdateTopAffixes Parms{};

	Parms.Attrs = std::move(Attrs);

	UObject::ProcessEvent(Func, &Parms);

	Attrs = std::move(Parms.Attrs);
}


// Function WBP_Common_ItemTooltip_Detail.WBP_Common_ItemTooltip_Detail_C.GetModuleName
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)

class FString UWBP_Common_ItemTooltip_Detail_C::GetModuleName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Common_ItemTooltip_Detail_C", "GetModuleName");

	Params::WBP_Common_ItemTooltip_Detail_C_GetModuleName Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

