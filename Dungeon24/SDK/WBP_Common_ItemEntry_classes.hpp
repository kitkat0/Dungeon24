#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Common_ItemEntry

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "Engine_structs.hpp"
#include "AkAudio_structs.hpp"
#include "LyraGame_structs.hpp"
#include "LyraGame_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_Common_ItemEntry.WBP_Common_ItemEntry_C
// 0x0218 (0x0508 - 0x02F0)
class UWBP_Common_ItemEntry_C final : public UTgfItemWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02F0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       End;                                               // 0x02F8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Start;                                             // 0x0300(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Broken;                                            // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               CountDownPanel;                                    // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Cross;                                             // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               DivinationOverlay;                                 // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Frame;                                             // 0x0328(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpacer*                                GearSpace;                                         // 0x0330(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Common_Item_Gem_C*                 Gem1;                                              // 0x0338(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Common_Item_Gem_C*                 Gem2;                                              // 0x0340(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           GemBox;                                            // 0x0348(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               HeirOverlay;                                       // 0x0350(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Icon;                                              // 0x0358(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScaleBox*                              IconScaler;                                        // 0x0360(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_130;                                         // 0x0368(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Mask;                                              // 0x0370(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               MyDivineOverlay;                                   // 0x0378(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UNiagaraSystemWidget*                   NiagaraSystemWidget_307;                           // 0x0380(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               OverlayTeammate;                                   // 0x0388(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Rarity;                                            // 0x0390(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 RarityCorruption;                                  // 0x0398(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 RarityCorruption_FX;                               // 0x03A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               RarityGroup;                                       // 0x03A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Repair;                                            // 0x03B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 RoundMask;                                         // 0x03B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox;                                           // 0x03C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       StackNumber;                                       // 0x03C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       TextCountDown;                                     // 0x03D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Trade;                                             // 0x03D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          bShowRarity;                                       // 0x03E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          bIsEquipment;                                      // 0x03E1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	ETgfEquipSlot                                 EquipmentSlot;                                     // 0x03E2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_3E3[0x5];                                      // 0x03E3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnQuickEquipOrUnequip;                             // 0x03E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnQuickDiscard;                                    // 0x03F8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	double                                        MouseDownTime;                                     // 0x0408(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTgfInventoryItemWrapper*               CachedItem;                                        // 0x0410(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UTgfEquipmentWrapper*                   Equipment;                                         // 0x0418(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          bUseTipsIcon;                                      // 0x0420(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          bUseSpecificScale;                                 // 0x0421(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          bHideNumber;                                       // 0x0422(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETgfEquipQuality                              PreviewRarity;                                     // 0x0423(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bShowFrame;                                        // 0x0424(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bOverrideSize;                                     // 0x0425(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_426[0x2];                                      // 0x0426(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        WidthOverride;                                     // 0x0428(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        HeightOverride;                                    // 0x0430(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   StackNumberMinusTextStyle;                         // 0x0438(0x0030)(Edit, BlueprintVisible, ExposeOnSpawn, HasGetValueTypeHash)
	double                                        StackNumber_PaddingRight;                          // 0x0468(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	double                                        StackNumber_PaddingBottom;                         // 0x0470(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CDBar;                                             // 0x0478(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          bShowCDNum;                                        // 0x0480(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          bShowGem;                                          // 0x0481(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_482[0x6];                                      // 0x0482(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnUseItem;                                         // 0x0488(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class UMaterialInstanceDynamic*               IconGrayMaterial;                                  // 0x0498(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               CDTexture;                                         // 0x04A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               CDAlphaTexture;                                    // 0x04A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          bGearSet;                                          // 0x04B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B1[0x7];                                      // 0x04B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTgfWidgetGamepadWrapper*               GamepadWrapper;                                    // 0x04B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           ColorUnCommon;                                     // 0x04C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           ColorEnhanced;                                     // 0x04D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           ColorEpic;                                         // 0x04E0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           ColorLegendary;                                    // 0x04F0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bShowTopLeftIcon;                                  // 0x0500(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BP_OnCooldownStart();
	void CreateCDBar();
	class UBP_Inventory_DragDrop_Base_C* Detect_Drag();
	void ExecuteUbergraph_WBP_Common_ItemEntry(int32 EntryPoint);
	void GetCDGE(class UTgfInventoryItemWrapper* Item);
	void OnLoaded_0EBC6A99492E0C96121AF4AF58DF2B6C(TSubclassOf<class UObject> Loaded);
	void OnQuickDiscard__DelegateSignature(class UWBP_Common_ItemEntry_C* Item_Entry);
	void OnQuickEquipOrUnequip__DelegateSignature(class UWBP_Common_ItemEntry_C* ItemEntry);
	void OnUseItem__DelegateSignature(class UWBP_Common_ItemEntry_C* Item_Entry);
	void PreConstruct(bool IsDesignTime);
	struct FEventReply ProcessMouseButtonDown(class UWidget* DetectingDragOnWidget, const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	struct FEventReply ProcessMouseButtonUp(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void SequenceEvent();
	void SequenceEvent__ENTRYPOINTWBP_Common_ItemEntry();
	void Set_Cool_Down();
	void SetBackgroundWithQuality(ETgfEquipQuality Quality);
	void SetIconImage(class UTexture2D* Texture, bool Gray, bool MatchSize);
	void SetIconScale(double Scale);
	void SetQuality(ETgfEquipQuality Quality);
	void Setup_With_Item(class UTgfInventoryItemWrapper* Item);
	void SetupWithItem(class UTgfInventoryItemWrapper* Item, class UTgfInventoryWrapper* Context, bool IsEquipment);

	class FString GetModuleName() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_Common_ItemEntry_C">();
	}
	static class UWBP_Common_ItemEntry_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_Common_ItemEntry_C>();
	}
};
static_assert(alignof(UWBP_Common_ItemEntry_C) == 0x000008, "Wrong alignment on UWBP_Common_ItemEntry_C");
static_assert(sizeof(UWBP_Common_ItemEntry_C) == 0x000508, "Wrong size on UWBP_Common_ItemEntry_C");
static_assert(offsetof(UWBP_Common_ItemEntry_C, UberGraphFrame) == 0x0002F0, "Member 'UWBP_Common_ItemEntry_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemEntry_C, End) == 0x0002F8, "Member 'UWBP_Common_ItemEntry_C::End' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemEntry_C, Start) == 0x000300, "Member 'UWBP_Common_ItemEntry_C::Start' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemEntry_C, Broken) == 0x000308, "Member 'UWBP_Common_ItemEntry_C::Broken' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemEntry_C, CountDownPanel) == 0x000310, "Member 'UWBP_Common_ItemEntry_C::CountDownPanel' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemEntry_C, Cross) == 0x000318, "Member 'UWBP_Common_ItemEntry_C::Cross' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemEntry_C, DivinationOverlay) == 0x000320, "Member 'UWBP_Common_ItemEntry_C::DivinationOverlay' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemEntry_C, Frame) == 0x000328, "Member 'UWBP_Common_ItemEntry_C::Frame' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemEntry_C, GearSpace) == 0x000330, "Member 'UWBP_Common_ItemEntry_C::GearSpace' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemEntry_C, Gem1) == 0x000338, "Member 'UWBP_Common_ItemEntry_C::Gem1' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemEntry_C, Gem2) == 0x000340, "Member 'UWBP_Common_ItemEntry_C::Gem2' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemEntry_C, GemBox) == 0x000348, "Member 'UWBP_Common_ItemEntry_C::GemBox' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemEntry_C, HeirOverlay) == 0x000350, "Member 'UWBP_Common_ItemEntry_C::HeirOverlay' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemEntry_C, Icon) == 0x000358, "Member 'UWBP_Common_ItemEntry_C::Icon' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemEntry_C, IconScaler) == 0x000360, "Member 'UWBP_Common_ItemEntry_C::IconScaler' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemEntry_C, Image_130) == 0x000368, "Member 'UWBP_Common_ItemEntry_C::Image_130' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemEntry_C, Mask) == 0x000370, "Member 'UWBP_Common_ItemEntry_C::Mask' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemEntry_C, MyDivineOverlay) == 0x000378, "Member 'UWBP_Common_ItemEntry_C::MyDivineOverlay' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemEntry_C, NiagaraSystemWidget_307) == 0x000380, "Member 'UWBP_Common_ItemEntry_C::NiagaraSystemWidget_307' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemEntry_C, OverlayTeammate) == 0x000388, "Member 'UWBP_Common_ItemEntry_C::OverlayTeammate' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemEntry_C, Rarity) == 0x000390, "Member 'UWBP_Common_ItemEntry_C::Rarity' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemEntry_C, RarityCorruption) == 0x000398, "Member 'UWBP_Common_ItemEntry_C::RarityCorruption' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemEntry_C, RarityCorruption_FX) == 0x0003A0, "Member 'UWBP_Common_ItemEntry_C::RarityCorruption_FX' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemEntry_C, RarityGroup) == 0x0003A8, "Member 'UWBP_Common_ItemEntry_C::RarityGroup' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemEntry_C, Repair) == 0x0003B0, "Member 'UWBP_Common_ItemEntry_C::Repair' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemEntry_C, RoundMask) == 0x0003B8, "Member 'UWBP_Common_ItemEntry_C::RoundMask' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemEntry_C, SizeBox) == 0x0003C0, "Member 'UWBP_Common_ItemEntry_C::SizeBox' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemEntry_C, StackNumber) == 0x0003C8, "Member 'UWBP_Common_ItemEntry_C::StackNumber' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemEntry_C, TextCountDown) == 0x0003D0, "Member 'UWBP_Common_ItemEntry_C::TextCountDown' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemEntry_C, Trade) == 0x0003D8, "Member 'UWBP_Common_ItemEntry_C::Trade' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemEntry_C, bShowRarity) == 0x0003E0, "Member 'UWBP_Common_ItemEntry_C::bShowRarity' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemEntry_C, bIsEquipment) == 0x0003E1, "Member 'UWBP_Common_ItemEntry_C::bIsEquipment' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemEntry_C, EquipmentSlot) == 0x0003E2, "Member 'UWBP_Common_ItemEntry_C::EquipmentSlot' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemEntry_C, OnQuickEquipOrUnequip) == 0x0003E8, "Member 'UWBP_Common_ItemEntry_C::OnQuickEquipOrUnequip' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemEntry_C, OnQuickDiscard) == 0x0003F8, "Member 'UWBP_Common_ItemEntry_C::OnQuickDiscard' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemEntry_C, MouseDownTime) == 0x000408, "Member 'UWBP_Common_ItemEntry_C::MouseDownTime' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemEntry_C, CachedItem) == 0x000410, "Member 'UWBP_Common_ItemEntry_C::CachedItem' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemEntry_C, Equipment) == 0x000418, "Member 'UWBP_Common_ItemEntry_C::Equipment' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemEntry_C, bUseTipsIcon) == 0x000420, "Member 'UWBP_Common_ItemEntry_C::bUseTipsIcon' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemEntry_C, bUseSpecificScale) == 0x000421, "Member 'UWBP_Common_ItemEntry_C::bUseSpecificScale' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemEntry_C, bHideNumber) == 0x000422, "Member 'UWBP_Common_ItemEntry_C::bHideNumber' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemEntry_C, PreviewRarity) == 0x000423, "Member 'UWBP_Common_ItemEntry_C::PreviewRarity' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemEntry_C, bShowFrame) == 0x000424, "Member 'UWBP_Common_ItemEntry_C::bShowFrame' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemEntry_C, bOverrideSize) == 0x000425, "Member 'UWBP_Common_ItemEntry_C::bOverrideSize' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemEntry_C, WidthOverride) == 0x000428, "Member 'UWBP_Common_ItemEntry_C::WidthOverride' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemEntry_C, HeightOverride) == 0x000430, "Member 'UWBP_Common_ItemEntry_C::HeightOverride' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemEntry_C, StackNumberMinusTextStyle) == 0x000438, "Member 'UWBP_Common_ItemEntry_C::StackNumberMinusTextStyle' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemEntry_C, StackNumber_PaddingRight) == 0x000468, "Member 'UWBP_Common_ItemEntry_C::StackNumber_PaddingRight' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemEntry_C, StackNumber_PaddingBottom) == 0x000470, "Member 'UWBP_Common_ItemEntry_C::StackNumber_PaddingBottom' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemEntry_C, CDBar) == 0x000478, "Member 'UWBP_Common_ItemEntry_C::CDBar' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemEntry_C, bShowCDNum) == 0x000480, "Member 'UWBP_Common_ItemEntry_C::bShowCDNum' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemEntry_C, bShowGem) == 0x000481, "Member 'UWBP_Common_ItemEntry_C::bShowGem' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemEntry_C, OnUseItem) == 0x000488, "Member 'UWBP_Common_ItemEntry_C::OnUseItem' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemEntry_C, IconGrayMaterial) == 0x000498, "Member 'UWBP_Common_ItemEntry_C::IconGrayMaterial' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemEntry_C, CDTexture) == 0x0004A0, "Member 'UWBP_Common_ItemEntry_C::CDTexture' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemEntry_C, CDAlphaTexture) == 0x0004A8, "Member 'UWBP_Common_ItemEntry_C::CDAlphaTexture' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemEntry_C, bGearSet) == 0x0004B0, "Member 'UWBP_Common_ItemEntry_C::bGearSet' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemEntry_C, GamepadWrapper) == 0x0004B8, "Member 'UWBP_Common_ItemEntry_C::GamepadWrapper' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemEntry_C, ColorUnCommon) == 0x0004C0, "Member 'UWBP_Common_ItemEntry_C::ColorUnCommon' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemEntry_C, ColorEnhanced) == 0x0004D0, "Member 'UWBP_Common_ItemEntry_C::ColorEnhanced' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemEntry_C, ColorEpic) == 0x0004E0, "Member 'UWBP_Common_ItemEntry_C::ColorEpic' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemEntry_C, ColorLegendary) == 0x0004F0, "Member 'UWBP_Common_ItemEntry_C::ColorLegendary' has a wrong offset!");
static_assert(offsetof(UWBP_Common_ItemEntry_C, bShowTopLeftIcon) == 0x000500, "Member 'UWBP_Common_ItemEntry_C::bShowTopLeftIcon' has a wrong offset!");

}

