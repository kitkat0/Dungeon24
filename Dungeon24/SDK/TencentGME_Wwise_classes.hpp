#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TencentGME_Wwise

#include "Basic.hpp"

#include "Engine_classes.hpp"
#include "TencentGME_Wwise_structs.hpp"


namespace SDK
{

// Class TencentGME_Wwise.TencentGMEBlueprintLibrary
// 0x0000 (0x0028 - 0x0028)
class UTencentGMEBlueprintLibrary final : public UBlueprintFunctionLibrary
{
public:
	static void AddAudioBlockList(const class FString& TargetId);
	static void EnableBluetoothMic(bool Enable);
	static int32 GetAudioRecvStreamLevel(const class FString& TargetId);
	static int32 GetAudioSendStreamLevel();
	static class FString GetGMEVersion();
	static int32 GetMessage(struct FTencentGmeMessage* TencentGmeMessage);
	static int32 GetVoiceFileDuration(const class FString& Fileid);
	static void GMEPause();
	static void GMEResume();
	static int32 PlayRecordFile(const class FString& Fileid);
	static void ReceivePlugin_GetReceiveOpenIDWithActor(class AActor* Actor, class FString* UserId);
	static void ReceivePlugin_GetReceiveOpenIDWithAkComponent(class UAkComponent* AkComponent, class FString* UserId);
	static void ReceivePlugin_SetReceiveOpenIDWithActor(class AActor* Actor, const class FString& UserId);
	static void ReceivePlugin_SetReceiveOpenIDWithAkComponent(class UAkComponent* AkComponent, const class FString& UserId);
	static void RemoveAudioBlockList(const class FString& TargetId);
	static void SendPlugin_EnableLoopbackWithActor(class AActor* Actor, bool EnableLoopback);
	static void SendPlugin_EnableLoopbackWithAkComponent(class UAkComponent* AkComponent, bool EnableLoopback);
	static bool SendPlugin_GetEnableLoopbackWithActor(class AActor* Actor);
	static bool SendPlugin_GetEnableLoopbackWithAkComponent(class UAkComponent* AkComponent);
	static void SetAudioStreamProfile(EUTencentGME_StreamProfile Profile);
	static void SetLogLevel(EUTencentGME_LogLevel LogLevelWrite, EUTencentGME_LogLevel LogLevelPrint);
	static void SetRangeAudioRecvRange(int32 Range);
	static void SetRangeAudioTeamID(int32 TeamId);
	static void SetRangeAudioTeamMode(EUTencentGME_TeamMode TeamMode);
	static void SetRegion(EUTencentGME_Region Region);
	static int32 SetRoomID(const class FString& RoomId);
	static void SetSelfPosition(int32 PositionX, int32 PositionY, int32 PositionZ);
	static int32 SetUserID(const class FString& UserId);
	static int32 SpeechToText(const class FString& Fileid, const class FString& SpeechLanguage, const class FString& TranslateLanguage);
	static int32 StartRecording(const class FString& Fileid);
	static int32 StopPlayFile();
	static int32 StopRecording();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"TencentGMEBlueprintLibrary">();
	}
	static class UTencentGMEBlueprintLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTencentGMEBlueprintLibrary>();
	}
};
static_assert(alignof(UTencentGMEBlueprintLibrary) == 0x000008, "Wrong alignment on UTencentGMEBlueprintLibrary");
static_assert(sizeof(UTencentGMEBlueprintLibrary) == 0x000028, "Wrong size on UTencentGMEBlueprintLibrary");

// Class TencentGME_Wwise.TencentGMESelfPositioner
// 0x0020 (0x02C0 - 0x02A0)
class UTencentGMESelfPositioner final : public USceneComponent
{
public:
	int32                                         MinimumDeltaPosition;                              // 0x02A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2A4[0x1C];                                     // 0x02A4(0x001C)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	struct FVector GetPosition() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"TencentGMESelfPositioner">();
	}
	static class UTencentGMESelfPositioner* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTencentGMESelfPositioner>();
	}
};
static_assert(alignof(UTencentGMESelfPositioner) == 0x000010, "Wrong alignment on UTencentGMESelfPositioner");
static_assert(sizeof(UTencentGMESelfPositioner) == 0x0002C0, "Wrong size on UTencentGMESelfPositioner");
static_assert(offsetof(UTencentGMESelfPositioner, MinimumDeltaPosition) == 0x0002A0, "Member 'UTencentGMESelfPositioner::MinimumDeltaPosition' has a wrong offset!");

}

