#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_TGF_SwitchWeaponSlot_Base

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "LyraGame_structs.hpp"
#include "LyraGame_classes.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_TGF_SwitchWeaponSlot_Base.GA_TGF_SwitchWeaponSlot_Base_C
// 0x0030 (0x09B0 - 0x0980)
class UGA_TGF_SwitchWeaponSlot_Base_C : public UTgfGameplayAbility
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0980(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	ETgfWeaponChangeSlot                          ChangeSlot;                                        // 0x0988(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_989[0x3];                                      // 0x0989(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           SlotActionTag;                                     // 0x098C(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_994[0x4];                                      // 0x0994(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<ETgfWeaponChangeSlot>                  QuickSlotList;                                     // 0x0998(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	float                                         SwitchWeaponDuration;                              // 0x09A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_GA_TGF_SwitchWeaponSlot_Base(int32 EntryPoint);
	void K2_ActivateAbility();

	void GetSlot(ETgfWeaponChangeSlot* Slot) const;
	void Is_Valid_Slot(bool* Ret) const;
	bool K2_CanActivateAbility(const struct FGameplayAbilityActorInfo& ActorInfo, const struct FGameplayAbilitySpecHandle& Handle, struct FGameplayTagContainer* RelevantTags) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_TGF_SwitchWeaponSlot_Base_C">();
	}
	static class UGA_TGF_SwitchWeaponSlot_Base_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_TGF_SwitchWeaponSlot_Base_C>();
	}
};
static_assert(alignof(UGA_TGF_SwitchWeaponSlot_Base_C) == 0x000010, "Wrong alignment on UGA_TGF_SwitchWeaponSlot_Base_C");
static_assert(sizeof(UGA_TGF_SwitchWeaponSlot_Base_C) == 0x0009B0, "Wrong size on UGA_TGF_SwitchWeaponSlot_Base_C");
static_assert(offsetof(UGA_TGF_SwitchWeaponSlot_Base_C, UberGraphFrame) == 0x000980, "Member 'UGA_TGF_SwitchWeaponSlot_Base_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGA_TGF_SwitchWeaponSlot_Base_C, ChangeSlot) == 0x000988, "Member 'UGA_TGF_SwitchWeaponSlot_Base_C::ChangeSlot' has a wrong offset!");
static_assert(offsetof(UGA_TGF_SwitchWeaponSlot_Base_C, SlotActionTag) == 0x00098C, "Member 'UGA_TGF_SwitchWeaponSlot_Base_C::SlotActionTag' has a wrong offset!");
static_assert(offsetof(UGA_TGF_SwitchWeaponSlot_Base_C, QuickSlotList) == 0x000998, "Member 'UGA_TGF_SwitchWeaponSlot_Base_C::QuickSlotList' has a wrong offset!");
static_assert(offsetof(UGA_TGF_SwitchWeaponSlot_Base_C, SwitchWeaponDuration) == 0x0009A8, "Member 'UGA_TGF_SwitchWeaponSlot_Base_C::SwitchWeaponDuration' has a wrong offset!");

}

