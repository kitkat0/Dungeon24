#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTS_Chase

#include "Basic.hpp"


namespace SDK::Params
{

// Function BTS_Chase.BTS_Chase_C.ExecuteUbergraph_BTS_Chase
// 0x0068 (0x0068 - 0x0000)
struct BTS_Chase_C_ExecuteUbergraph_BTS_Chase final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetBlackboardValueAsActor_ReturnValue;    // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AAIController*                          K2Node_Event_OwnerController_1;                    // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn_1;                     // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Tgf_Monster_C*                      K2Node_DynamicCast_AsBP_Tgf_Monster;               // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_Event_OwnerController;                      // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn;                       // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Tgf_Monster_C*                      K2Node_DynamicCast_AsBP_Tgf_Monster_1;             // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetDistanceTo_ReturnValue;                // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_UpdateSpeedOnDistance_Distance_ImplicitCast; // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTS_Chase_C_ExecuteUbergraph_BTS_Chase) == 0x000008, "Wrong alignment on BTS_Chase_C_ExecuteUbergraph_BTS_Chase");
static_assert(sizeof(BTS_Chase_C_ExecuteUbergraph_BTS_Chase) == 0x000068, "Wrong size on BTS_Chase_C_ExecuteUbergraph_BTS_Chase");
static_assert(offsetof(BTS_Chase_C_ExecuteUbergraph_BTS_Chase, EntryPoint) == 0x000000, "Member 'BTS_Chase_C_ExecuteUbergraph_BTS_Chase::EntryPoint' has a wrong offset!");
static_assert(offsetof(BTS_Chase_C_ExecuteUbergraph_BTS_Chase, CallFunc_GetBlackboardValueAsActor_ReturnValue) == 0x000008, "Member 'BTS_Chase_C_ExecuteUbergraph_BTS_Chase::CallFunc_GetBlackboardValueAsActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_Chase_C_ExecuteUbergraph_BTS_Chase, K2Node_Event_OwnerController_1) == 0x000010, "Member 'BTS_Chase_C_ExecuteUbergraph_BTS_Chase::K2Node_Event_OwnerController_1' has a wrong offset!");
static_assert(offsetof(BTS_Chase_C_ExecuteUbergraph_BTS_Chase, K2Node_Event_ControlledPawn_1) == 0x000018, "Member 'BTS_Chase_C_ExecuteUbergraph_BTS_Chase::K2Node_Event_ControlledPawn_1' has a wrong offset!");
static_assert(offsetof(BTS_Chase_C_ExecuteUbergraph_BTS_Chase, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BTS_Chase_C_ExecuteUbergraph_BTS_Chase::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_Chase_C_ExecuteUbergraph_BTS_Chase, K2Node_DynamicCast_AsBP_Tgf_Monster) == 0x000028, "Member 'BTS_Chase_C_ExecuteUbergraph_BTS_Chase::K2Node_DynamicCast_AsBP_Tgf_Monster' has a wrong offset!");
static_assert(offsetof(BTS_Chase_C_ExecuteUbergraph_BTS_Chase, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BTS_Chase_C_ExecuteUbergraph_BTS_Chase::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BTS_Chase_C_ExecuteUbergraph_BTS_Chase, K2Node_Event_OwnerController) == 0x000038, "Member 'BTS_Chase_C_ExecuteUbergraph_BTS_Chase::K2Node_Event_OwnerController' has a wrong offset!");
static_assert(offsetof(BTS_Chase_C_ExecuteUbergraph_BTS_Chase, K2Node_Event_ControlledPawn) == 0x000040, "Member 'BTS_Chase_C_ExecuteUbergraph_BTS_Chase::K2Node_Event_ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTS_Chase_C_ExecuteUbergraph_BTS_Chase, K2Node_Event_DeltaSeconds) == 0x000048, "Member 'BTS_Chase_C_ExecuteUbergraph_BTS_Chase::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BTS_Chase_C_ExecuteUbergraph_BTS_Chase, K2Node_DynamicCast_AsBP_Tgf_Monster_1) == 0x000050, "Member 'BTS_Chase_C_ExecuteUbergraph_BTS_Chase::K2Node_DynamicCast_AsBP_Tgf_Monster_1' has a wrong offset!");
static_assert(offsetof(BTS_Chase_C_ExecuteUbergraph_BTS_Chase, K2Node_DynamicCast_bSuccess_1) == 0x000058, "Member 'BTS_Chase_C_ExecuteUbergraph_BTS_Chase::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BTS_Chase_C_ExecuteUbergraph_BTS_Chase, CallFunc_GetDistanceTo_ReturnValue) == 0x00005C, "Member 'BTS_Chase_C_ExecuteUbergraph_BTS_Chase::CallFunc_GetDistanceTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_Chase_C_ExecuteUbergraph_BTS_Chase, CallFunc_UpdateSpeedOnDistance_Distance_ImplicitCast) == 0x000060, "Member 'BTS_Chase_C_ExecuteUbergraph_BTS_Chase::CallFunc_UpdateSpeedOnDistance_Distance_ImplicitCast' has a wrong offset!");

// Function BTS_Chase.BTS_Chase_C.ReceiveDeactivationAI
// 0x0010 (0x0010 - 0x0000)
struct BTS_Chase_C_ReceiveDeactivationAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTS_Chase_C_ReceiveDeactivationAI) == 0x000008, "Wrong alignment on BTS_Chase_C_ReceiveDeactivationAI");
static_assert(sizeof(BTS_Chase_C_ReceiveDeactivationAI) == 0x000010, "Wrong size on BTS_Chase_C_ReceiveDeactivationAI");
static_assert(offsetof(BTS_Chase_C_ReceiveDeactivationAI, OwnerController) == 0x000000, "Member 'BTS_Chase_C_ReceiveDeactivationAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTS_Chase_C_ReceiveDeactivationAI, ControlledPawn) == 0x000008, "Member 'BTS_Chase_C_ReceiveDeactivationAI::ControlledPawn' has a wrong offset!");

// Function BTS_Chase.BTS_Chase_C.ReceiveTickAI
// 0x0018 (0x0018 - 0x0000)
struct BTS_Chase_C_ReceiveTickAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaSeconds;                                      // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTS_Chase_C_ReceiveTickAI) == 0x000008, "Wrong alignment on BTS_Chase_C_ReceiveTickAI");
static_assert(sizeof(BTS_Chase_C_ReceiveTickAI) == 0x000018, "Wrong size on BTS_Chase_C_ReceiveTickAI");
static_assert(offsetof(BTS_Chase_C_ReceiveTickAI, OwnerController) == 0x000000, "Member 'BTS_Chase_C_ReceiveTickAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTS_Chase_C_ReceiveTickAI, ControlledPawn) == 0x000008, "Member 'BTS_Chase_C_ReceiveTickAI::ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTS_Chase_C_ReceiveTickAI, DeltaSeconds) == 0x000010, "Member 'BTS_Chase_C_ReceiveTickAI::DeltaSeconds' has a wrong offset!");

}

