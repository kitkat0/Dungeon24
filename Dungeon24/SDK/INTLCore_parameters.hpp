#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: INTLCore

#include "Basic.hpp"

#include "INTLCore_structs.hpp"


namespace SDK::Params
{

// Function INTLCore.INTLOutputUtility.FormatAuthRet
// 0x0190 (0x0190 - 0x0000)
struct INTLOutputUtility_FormatAuthRet final
{
public:
	struct FINTLAuthResult                        Ret;                                               // 0x0000(0x0170)(ConstParm, Parm, NativeAccessSpecifierPublic)
	bool                                          IsSuccess;                                         // 0x0170(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_171[0x7];                                      // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   ErrorMsg;                                          // 0x0178(0x0018)(Parm, OutParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLOutputUtility_FormatAuthRet) == 0x000008, "Wrong alignment on INTLOutputUtility_FormatAuthRet");
static_assert(sizeof(INTLOutputUtility_FormatAuthRet) == 0x000190, "Wrong size on INTLOutputUtility_FormatAuthRet");
static_assert(offsetof(INTLOutputUtility_FormatAuthRet, Ret) == 0x000000, "Member 'INTLOutputUtility_FormatAuthRet::Ret' has a wrong offset!");
static_assert(offsetof(INTLOutputUtility_FormatAuthRet, IsSuccess) == 0x000170, "Member 'INTLOutputUtility_FormatAuthRet::IsSuccess' has a wrong offset!");
static_assert(offsetof(INTLOutputUtility_FormatAuthRet, ErrorMsg) == 0x000178, "Member 'INTLOutputUtility_FormatAuthRet::ErrorMsg' has a wrong offset!");

// Function INTLCore.INTLOutputUtility.FormatBaseRet
// 0x0060 (0x0060 - 0x0000)
struct INTLOutputUtility_FormatBaseRet final
{
public:
	struct FINTLBaseResult                        Ret;                                               // 0x0000(0x0040)(ConstParm, Parm, NativeAccessSpecifierPublic)
	bool                                          IsSuccess;                                         // 0x0040(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   ErrorMsg;                                          // 0x0048(0x0018)(Parm, OutParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLOutputUtility_FormatBaseRet) == 0x000008, "Wrong alignment on INTLOutputUtility_FormatBaseRet");
static_assert(sizeof(INTLOutputUtility_FormatBaseRet) == 0x000060, "Wrong size on INTLOutputUtility_FormatBaseRet");
static_assert(offsetof(INTLOutputUtility_FormatBaseRet, Ret) == 0x000000, "Member 'INTLOutputUtility_FormatBaseRet::Ret' has a wrong offset!");
static_assert(offsetof(INTLOutputUtility_FormatBaseRet, IsSuccess) == 0x000040, "Member 'INTLOutputUtility_FormatBaseRet::IsSuccess' has a wrong offset!");
static_assert(offsetof(INTLOutputUtility_FormatBaseRet, ErrorMsg) == 0x000048, "Member 'INTLOutputUtility_FormatBaseRet::ErrorMsg' has a wrong offset!");

// Function INTLCore.INTLOutputUtility.FormatNoticeRet
// 0x0080 (0x0080 - 0x0000)
struct INTLOutputUtility_FormatNoticeRet final
{
public:
	struct FINTLNoticeResult                      Ret;                                               // 0x0000(0x0060)(ConstParm, Parm, NativeAccessSpecifierPublic)
	bool                                          IsSuccess;                                         // 0x0060(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   ErrorMsg;                                          // 0x0068(0x0018)(Parm, OutParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLOutputUtility_FormatNoticeRet) == 0x000008, "Wrong alignment on INTLOutputUtility_FormatNoticeRet");
static_assert(sizeof(INTLOutputUtility_FormatNoticeRet) == 0x000080, "Wrong size on INTLOutputUtility_FormatNoticeRet");
static_assert(offsetof(INTLOutputUtility_FormatNoticeRet, Ret) == 0x000000, "Member 'INTLOutputUtility_FormatNoticeRet::Ret' has a wrong offset!");
static_assert(offsetof(INTLOutputUtility_FormatNoticeRet, IsSuccess) == 0x000060, "Member 'INTLOutputUtility_FormatNoticeRet::IsSuccess' has a wrong offset!");
static_assert(offsetof(INTLOutputUtility_FormatNoticeRet, ErrorMsg) == 0x000068, "Member 'INTLOutputUtility_FormatNoticeRet::ErrorMsg' has a wrong offset!");

// Function INTLCore.INTLPluginObserver.OnAccountResult
// 0x0278 (0x0278 - 0x0000)
struct INTLPluginObserver_OnAccountResult final
{
public:
	struct FINTLAccountResult                     Ret;                                               // 0x0000(0x0278)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLPluginObserver_OnAccountResult) == 0x000008, "Wrong alignment on INTLPluginObserver_OnAccountResult");
static_assert(sizeof(INTLPluginObserver_OnAccountResult) == 0x000278, "Wrong size on INTLPluginObserver_OnAccountResult");
static_assert(offsetof(INTLPluginObserver_OnAccountResult, Ret) == 0x000000, "Member 'INTLPluginObserver_OnAccountResult::Ret' has a wrong offset!");

// Function INTLCore.INTLPluginObserver.OnAdjustAttrsChangedResult
// 0x0050 (0x0050 - 0x0000)
struct INTLPluginObserver_OnAdjustAttrsChangedResult final
{
public:
	struct FINTLAdjustAttrsChangedResult          Ret;                                               // 0x0000(0x0050)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLPluginObserver_OnAdjustAttrsChangedResult) == 0x000008, "Wrong alignment on INTLPluginObserver_OnAdjustAttrsChangedResult");
static_assert(sizeof(INTLPluginObserver_OnAdjustAttrsChangedResult) == 0x000050, "Wrong size on INTLPluginObserver_OnAdjustAttrsChangedResult");
static_assert(offsetof(INTLPluginObserver_OnAdjustAttrsChangedResult, Ret) == 0x000000, "Member 'INTLPluginObserver_OnAdjustAttrsChangedResult::Ret' has a wrong offset!");

// Function INTLCore.INTLPluginObserver.OnAuthBaseResult
// 0x0040 (0x0040 - 0x0000)
struct INTLPluginObserver_OnAuthBaseResult final
{
public:
	struct FINTLBaseResult                        Ret;                                               // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLPluginObserver_OnAuthBaseResult) == 0x000008, "Wrong alignment on INTLPluginObserver_OnAuthBaseResult");
static_assert(sizeof(INTLPluginObserver_OnAuthBaseResult) == 0x000040, "Wrong size on INTLPluginObserver_OnAuthBaseResult");
static_assert(offsetof(INTLPluginObserver_OnAuthBaseResult, Ret) == 0x000000, "Member 'INTLPluginObserver_OnAuthBaseResult::Ret' has a wrong offset!");

// Function INTLCore.INTLPluginObserver.OnAuthResult
// 0x0170 (0x0170 - 0x0000)
struct INTLPluginObserver_OnAuthResult final
{
public:
	struct FINTLAuthResult                        Ret;                                               // 0x0000(0x0170)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLPluginObserver_OnAuthResult) == 0x000008, "Wrong alignment on INTLPluginObserver_OnAuthResult");
static_assert(sizeof(INTLPluginObserver_OnAuthResult) == 0x000170, "Wrong size on INTLPluginObserver_OnAuthResult");
static_assert(offsetof(INTLPluginObserver_OnAuthResult, Ret) == 0x000000, "Member 'INTLPluginObserver_OnAuthResult::Ret' has a wrong offset!");

// Function INTLCore.INTLPluginObserver.OnComplianceResult
// 0x00F8 (0x00F8 - 0x0000)
struct INTLPluginObserver_OnComplianceResult final
{
public:
	struct FINTLComplianceResult                  Ret;                                               // 0x0000(0x00F8)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLPluginObserver_OnComplianceResult) == 0x000008, "Wrong alignment on INTLPluginObserver_OnComplianceResult");
static_assert(sizeof(INTLPluginObserver_OnComplianceResult) == 0x0000F8, "Wrong size on INTLPluginObserver_OnComplianceResult");
static_assert(offsetof(INTLPluginObserver_OnComplianceResult, Ret) == 0x000000, "Member 'INTLPluginObserver_OnComplianceResult::Ret' has a wrong offset!");

// Function INTLCore.INTLPluginObserver.OnCustomerResult
// 0x0048 (0x0048 - 0x0000)
struct INTLPluginObserver_OnCustomerResult final
{
public:
	struct FINTLCustomerResult                    Ret;                                               // 0x0000(0x0048)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLPluginObserver_OnCustomerResult) == 0x000008, "Wrong alignment on INTLPluginObserver_OnCustomerResult");
static_assert(sizeof(INTLPluginObserver_OnCustomerResult) == 0x000048, "Wrong size on INTLPluginObserver_OnCustomerResult");
static_assert(offsetof(INTLPluginObserver_OnCustomerResult, Ret) == 0x000000, "Member 'INTLPluginObserver_OnCustomerResult::Ret' has a wrong offset!");

// Function INTLCore.INTLPluginObserver.OnCutoutResult
// 0x0070 (0x0070 - 0x0000)
struct INTLPluginObserver_OnCutoutResult final
{
public:
	struct FCutoutInfoResult                      Ret;                                               // 0x0000(0x0070)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLPluginObserver_OnCutoutResult) == 0x000008, "Wrong alignment on INTLPluginObserver_OnCutoutResult");
static_assert(sizeof(INTLPluginObserver_OnCutoutResult) == 0x000070, "Wrong size on INTLPluginObserver_OnCutoutResult");
static_assert(offsetof(INTLPluginObserver_OnCutoutResult, Ret) == 0x000000, "Member 'INTLPluginObserver_OnCutoutResult::Ret' has a wrong offset!");

// Function INTLCore.INTLPluginObserver.OnDeepLinkResult
// 0x0040 (0x0040 - 0x0000)
struct INTLPluginObserver_OnDeepLinkResult final
{
public:
	struct FINTLBaseResult                        Ret;                                               // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLPluginObserver_OnDeepLinkResult) == 0x000008, "Wrong alignment on INTLPluginObserver_OnDeepLinkResult");
static_assert(sizeof(INTLPluginObserver_OnDeepLinkResult) == 0x000040, "Wrong size on INTLPluginObserver_OnDeepLinkResult");
static_assert(offsetof(INTLPluginObserver_OnDeepLinkResult, Ret) == 0x000000, "Member 'INTLPluginObserver_OnDeepLinkResult::Ret' has a wrong offset!");

// Function INTLCore.INTLPluginObserver.OnDetectNetworkResult
// 0x0050 (0x0050 - 0x0000)
struct INTLPluginObserver_OnDetectNetworkResult final
{
public:
	struct FINTLDetectNetworkResult               Ret;                                               // 0x0000(0x0050)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLPluginObserver_OnDetectNetworkResult) == 0x000008, "Wrong alignment on INTLPluginObserver_OnDetectNetworkResult");
static_assert(sizeof(INTLPluginObserver_OnDetectNetworkResult) == 0x000050, "Wrong size on INTLPluginObserver_OnDetectNetworkResult");
static_assert(offsetof(INTLPluginObserver_OnDetectNetworkResult, Ret) == 0x000000, "Member 'INTLPluginObserver_OnDetectNetworkResult::Ret' has a wrong offset!");

// Function INTLCore.INTLPluginObserver.OnDeviceLevelResult
// 0x0048 (0x0048 - 0x0000)
struct INTLPluginObserver_OnDeviceLevelResult final
{
public:
	struct FINTLDeviceLevelResult                 Ret;                                               // 0x0000(0x0048)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLPluginObserver_OnDeviceLevelResult) == 0x000008, "Wrong alignment on INTLPluginObserver_OnDeviceLevelResult");
static_assert(sizeof(INTLPluginObserver_OnDeviceLevelResult) == 0x000048, "Wrong size on INTLPluginObserver_OnDeviceLevelResult");
static_assert(offsetof(INTLPluginObserver_OnDeviceLevelResult, Ret) == 0x000000, "Member 'INTLPluginObserver_OnDeviceLevelResult::Ret' has a wrong offset!");

// Function INTLCore.INTLPluginObserver.OnDirTreeResult
// 0x0070 (0x0070 - 0x0000)
struct INTLPluginObserver_OnDirTreeResult final
{
public:
	struct FINTLDirTreeResult                     Ret;                                               // 0x0000(0x0070)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLPluginObserver_OnDirTreeResult) == 0x000008, "Wrong alignment on INTLPluginObserver_OnDirTreeResult");
static_assert(sizeof(INTLPluginObserver_OnDirTreeResult) == 0x000070, "Wrong size on INTLPluginObserver_OnDirTreeResult");
static_assert(offsetof(INTLPluginObserver_OnDirTreeResult, Ret) == 0x000000, "Member 'INTLPluginObserver_OnDirTreeResult::Ret' has a wrong offset!");

// Function INTLCore.INTLPluginObserver.OnDismissLoginUI
// 0x0001 (0x0001 - 0x0000)
struct INTLPluginObserver_OnDismissLoginUI final
{
public:
	bool                                          Canceled;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLPluginObserver_OnDismissLoginUI) == 0x000001, "Wrong alignment on INTLPluginObserver_OnDismissLoginUI");
static_assert(sizeof(INTLPluginObserver_OnDismissLoginUI) == 0x000001, "Wrong size on INTLPluginObserver_OnDismissLoginUI");
static_assert(offsetof(INTLPluginObserver_OnDismissLoginUI, Canceled) == 0x000000, "Member 'INTLPluginObserver_OnDismissLoginUI::Canceled' has a wrong offset!");

// Function INTLCore.INTLPluginObserver.OnDNSResult
// 0x0070 (0x0070 - 0x0000)
struct INTLPluginObserver_OnDNSResult final
{
public:
	struct FINTLDNSResult                         Ret;                                               // 0x0000(0x0070)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLPluginObserver_OnDNSResult) == 0x000008, "Wrong alignment on INTLPluginObserver_OnDNSResult");
static_assert(sizeof(INTLPluginObserver_OnDNSResult) == 0x000070, "Wrong size on INTLPluginObserver_OnDNSResult");
static_assert(offsetof(INTLPluginObserver_OnDNSResult, Ret) == 0x000000, "Member 'INTLPluginObserver_OnDNSResult::Ret' has a wrong offset!");

// Function INTLCore.INTLPluginObserver.OnExtendResult
// 0x0058 (0x0058 - 0x0000)
struct INTLPluginObserver_OnExtendResult final
{
public:
	struct FINTLExtendResult                      Ret;                                               // 0x0000(0x0058)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLPluginObserver_OnExtendResult) == 0x000008, "Wrong alignment on INTLPluginObserver_OnExtendResult");
static_assert(sizeof(INTLPluginObserver_OnExtendResult) == 0x000058, "Wrong size on INTLPluginObserver_OnExtendResult");
static_assert(offsetof(INTLPluginObserver_OnExtendResult, Ret) == 0x000000, "Member 'INTLPluginObserver_OnExtendResult::Ret' has a wrong offset!");

// Function INTLCore.INTLPluginObserver.OnFriendBaseResult
// 0x0040 (0x0040 - 0x0000)
struct INTLPluginObserver_OnFriendBaseResult final
{
public:
	struct FINTLBaseResult                        Ret;                                               // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLPluginObserver_OnFriendBaseResult) == 0x000008, "Wrong alignment on INTLPluginObserver_OnFriendBaseResult");
static_assert(sizeof(INTLPluginObserver_OnFriendBaseResult) == 0x000040, "Wrong size on INTLPluginObserver_OnFriendBaseResult");
static_assert(offsetof(INTLPluginObserver_OnFriendBaseResult, Ret) == 0x000000, "Member 'INTLPluginObserver_OnFriendBaseResult::Ret' has a wrong offset!");

// Function INTLCore.INTLPluginObserver.OnFriendResult
// 0x0050 (0x0050 - 0x0000)
struct INTLPluginObserver_OnFriendResult final
{
public:
	struct FINTLFriendResult                      Ret;                                               // 0x0000(0x0050)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLPluginObserver_OnFriendResult) == 0x000008, "Wrong alignment on INTLPluginObserver_OnFriendResult");
static_assert(sizeof(INTLPluginObserver_OnFriendResult) == 0x000050, "Wrong size on INTLPluginObserver_OnFriendResult");
static_assert(offsetof(INTLPluginObserver_OnFriendResult, Ret) == 0x000000, "Member 'INTLPluginObserver_OnFriendResult::Ret' has a wrong offset!");

// Function INTLCore.INTLPluginObserver.OnGroupReqInfoResult
// 0x0040 (0x0040 - 0x0000)
struct INTLPluginObserver_OnGroupReqInfoResult final
{
public:
	struct FINTLBaseResult                        Ret;                                               // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLPluginObserver_OnGroupReqInfoResult) == 0x000008, "Wrong alignment on INTLPluginObserver_OnGroupReqInfoResult");
static_assert(sizeof(INTLPluginObserver_OnGroupReqInfoResult) == 0x000040, "Wrong size on INTLPluginObserver_OnGroupReqInfoResult");
static_assert(offsetof(INTLPluginObserver_OnGroupReqInfoResult, Ret) == 0x000000, "Member 'INTLPluginObserver_OnGroupReqInfoResult::Ret' has a wrong offset!");

// Function INTLCore.INTLPluginObserver.OnIDTokenResult
// 0x0050 (0x0050 - 0x0000)
struct INTLPluginObserver_OnIDTokenResult final
{
public:
	struct FINTLIDTokenResult                     Ret;                                               // 0x0000(0x0050)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLPluginObserver_OnIDTokenResult) == 0x000008, "Wrong alignment on INTLPluginObserver_OnIDTokenResult");
static_assert(sizeof(INTLPluginObserver_OnIDTokenResult) == 0x000050, "Wrong size on INTLPluginObserver_OnIDTokenResult");
static_assert(offsetof(INTLPluginObserver_OnIDTokenResult, Ret) == 0x000000, "Member 'INTLPluginObserver_OnIDTokenResult::Ret' has a wrong offset!");

// Function INTLCore.INTLPluginObserver.OnIPInfoResult
// 0x0068 (0x0068 - 0x0000)
struct INTLPluginObserver_OnIPInfoResult final
{
public:
	struct FINTLLBSIPInfoResult                   Ret;                                               // 0x0000(0x0068)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLPluginObserver_OnIPInfoResult) == 0x000008, "Wrong alignment on INTLPluginObserver_OnIPInfoResult");
static_assert(sizeof(INTLPluginObserver_OnIPInfoResult) == 0x000068, "Wrong size on INTLPluginObserver_OnIPInfoResult");
static_assert(offsetof(INTLPluginObserver_OnIPInfoResult, Ret) == 0x000000, "Member 'INTLPluginObserver_OnIPInfoResult::Ret' has a wrong offset!");

// Function INTLCore.INTLPluginObserver.OnLIBindRewardReult
// 0x0080 (0x0080 - 0x0000)
struct INTLPluginObserver_OnLIBindRewardReult final
{
public:
	struct FINTLLIBindRewardResult                Ret;                                               // 0x0000(0x0080)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLPluginObserver_OnLIBindRewardReult) == 0x000008, "Wrong alignment on INTLPluginObserver_OnLIBindRewardReult");
static_assert(sizeof(INTLPluginObserver_OnLIBindRewardReult) == 0x000080, "Wrong size on INTLPluginObserver_OnLIBindRewardReult");
static_assert(offsetof(INTLPluginObserver_OnLIBindRewardReult, Ret) == 0x000000, "Member 'INTLPluginObserver_OnLIBindRewardReult::Ret' has a wrong offset!");

// Function INTLCore.INTLPluginObserver.OnNoticeRequestData
// 0x0060 (0x0060 - 0x0000)
struct INTLPluginObserver_OnNoticeRequestData final
{
public:
	struct FINTLNoticeResult                      Ret;                                               // 0x0000(0x0060)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLPluginObserver_OnNoticeRequestData) == 0x000008, "Wrong alignment on INTLPluginObserver_OnNoticeRequestData");
static_assert(sizeof(INTLPluginObserver_OnNoticeRequestData) == 0x000060, "Wrong size on INTLPluginObserver_OnNoticeRequestData");
static_assert(offsetof(INTLPluginObserver_OnNoticeRequestData, Ret) == 0x000000, "Member 'INTLPluginObserver_OnNoticeRequestData::Ret' has a wrong offset!");

// Function INTLCore.INTLPluginObserver.OnPermissionResult
// 0x0050 (0x0050 - 0x0000)
struct INTLPluginObserver_OnPermissionResult final
{
public:
	struct FINTLPermissionResult                  Ret;                                               // 0x0000(0x0050)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLPluginObserver_OnPermissionResult) == 0x000008, "Wrong alignment on INTLPluginObserver_OnPermissionResult");
static_assert(sizeof(INTLPluginObserver_OnPermissionResult) == 0x000050, "Wrong size on INTLPluginObserver_OnPermissionResult");
static_assert(offsetof(INTLPluginObserver_OnPermissionResult, Ret) == 0x000000, "Member 'INTLPluginObserver_OnPermissionResult::Ret' has a wrong offset!");

// Function INTLCore.INTLPluginObserver.OnPushBaseResult
// 0x0040 (0x0040 - 0x0000)
struct INTLPluginObserver_OnPushBaseResult final
{
public:
	struct FINTLBaseResult                        Ret;                                               // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLPluginObserver_OnPushBaseResult) == 0x000008, "Wrong alignment on INTLPluginObserver_OnPushBaseResult");
static_assert(sizeof(INTLPluginObserver_OnPushBaseResult) == 0x000040, "Wrong size on INTLPluginObserver_OnPushBaseResult");
static_assert(offsetof(INTLPluginObserver_OnPushBaseResult, Ret) == 0x000000, "Member 'INTLPluginObserver_OnPushBaseResult::Ret' has a wrong offset!");

// Function INTLCore.INTLPluginObserver.OnPushResult
// 0x0058 (0x0058 - 0x0000)
struct INTLPluginObserver_OnPushResult final
{
public:
	struct FINTLPushResult                        Ret;                                               // 0x0000(0x0058)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLPluginObserver_OnPushResult) == 0x000008, "Wrong alignment on INTLPluginObserver_OnPushResult");
static_assert(sizeof(INTLPluginObserver_OnPushResult) == 0x000058, "Wrong size on INTLPluginObserver_OnPushResult");
static_assert(offsetof(INTLPluginObserver_OnPushResult, Ret) == 0x000000, "Member 'INTLPluginObserver_OnPushResult::Ret' has a wrong offset!");

// Function INTLCore.INTLPluginObserver.OnStartUdpSocketResult
// 0x0058 (0x0058 - 0x0000)
struct INTLPluginObserver_OnStartUdpSocketResult final
{
public:
	struct FINTLStartUdpSocketResult              Ret;                                               // 0x0000(0x0058)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLPluginObserver_OnStartUdpSocketResult) == 0x000008, "Wrong alignment on INTLPluginObserver_OnStartUdpSocketResult");
static_assert(sizeof(INTLPluginObserver_OnStartUdpSocketResult) == 0x000058, "Wrong size on INTLPluginObserver_OnStartUdpSocketResult");
static_assert(offsetof(INTLPluginObserver_OnStartUdpSocketResult, Ret) == 0x000000, "Member 'INTLPluginObserver_OnStartUdpSocketResult::Ret' has a wrong offset!");

// Function INTLCore.INTLPluginObserver.OnUpdateOptionalRepoInitResult
// 0x0048 (0x0048 - 0x0000)
struct INTLPluginObserver_OnUpdateOptionalRepoInitResult final
{
public:
	struct FINTLUpdateOptionalRepoInitResult      Ret;                                               // 0x0000(0x0048)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLPluginObserver_OnUpdateOptionalRepoInitResult) == 0x000008, "Wrong alignment on INTLPluginObserver_OnUpdateOptionalRepoInitResult");
static_assert(sizeof(INTLPluginObserver_OnUpdateOptionalRepoInitResult) == 0x000048, "Wrong size on INTLPluginObserver_OnUpdateOptionalRepoInitResult");
static_assert(offsetof(INTLPluginObserver_OnUpdateOptionalRepoInitResult, Ret) == 0x000000, "Member 'INTLPluginObserver_OnUpdateOptionalRepoInitResult::Ret' has a wrong offset!");

// Function INTLCore.INTLPluginObserver.OnUpdateProgressResult
// 0x0068 (0x0068 - 0x0000)
struct INTLPluginObserver_OnUpdateProgressResult final
{
public:
	struct FINTLUpdateProgress                    Ret;                                               // 0x0000(0x0068)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLPluginObserver_OnUpdateProgressResult) == 0x000008, "Wrong alignment on INTLPluginObserver_OnUpdateProgressResult");
static_assert(sizeof(INTLPluginObserver_OnUpdateProgressResult) == 0x000068, "Wrong size on INTLPluginObserver_OnUpdateProgressResult");
static_assert(offsetof(INTLPluginObserver_OnUpdateProgressResult, Ret) == 0x000000, "Member 'INTLPluginObserver_OnUpdateProgressResult::Ret' has a wrong offset!");

// Function INTLCore.INTLPluginObserver.OnUpdateResult
// 0x0050 (0x0050 - 0x0000)
struct INTLPluginObserver_OnUpdateResult final
{
public:
	struct FINTLUpdateResult                      Ret;                                               // 0x0000(0x0050)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLPluginObserver_OnUpdateResult) == 0x000008, "Wrong alignment on INTLPluginObserver_OnUpdateResult");
static_assert(sizeof(INTLPluginObserver_OnUpdateResult) == 0x000050, "Wrong size on INTLPluginObserver_OnUpdateResult");
static_assert(offsetof(INTLPluginObserver_OnUpdateResult, Ret) == 0x000000, "Member 'INTLPluginObserver_OnUpdateResult::Ret' has a wrong offset!");

// Function INTLCore.INTLPluginObserver.OnUpdateStartRepoNewVersionInfoResult
// 0x0040 (0x0040 - 0x0000)
struct INTLPluginObserver_OnUpdateStartRepoNewVersionInfoResult final
{
public:
	struct FINTLUpdateStartRepoNewVersionInfo     Ret;                                               // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLPluginObserver_OnUpdateStartRepoNewVersionInfoResult) == 0x000008, "Wrong alignment on INTLPluginObserver_OnUpdateStartRepoNewVersionInfoResult");
static_assert(sizeof(INTLPluginObserver_OnUpdateStartRepoNewVersionInfoResult) == 0x000040, "Wrong size on INTLPluginObserver_OnUpdateStartRepoNewVersionInfoResult");
static_assert(offsetof(INTLPluginObserver_OnUpdateStartRepoNewVersionInfoResult, Ret) == 0x000000, "Member 'INTLPluginObserver_OnUpdateStartRepoNewVersionInfoResult::Ret' has a wrong offset!");

// Function INTLCore.INTLPluginObserver.OnWebSocketResult
// 0x0080 (0x0080 - 0x0000)
struct INTLPluginObserver_OnWebSocketResult final
{
public:
	struct FINTLWebSocketResult                   Ret;                                               // 0x0000(0x0080)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLPluginObserver_OnWebSocketResult) == 0x000008, "Wrong alignment on INTLPluginObserver_OnWebSocketResult");
static_assert(sizeof(INTLPluginObserver_OnWebSocketResult) == 0x000080, "Wrong size on INTLPluginObserver_OnWebSocketResult");
static_assert(offsetof(INTLPluginObserver_OnWebSocketResult, Ret) == 0x000000, "Member 'INTLPluginObserver_OnWebSocketResult::Ret' has a wrong offset!");

// Function INTLCore.INTLPluginObserver.OnWebViewResult
// 0x0058 (0x0058 - 0x0000)
struct INTLPluginObserver_OnWebViewResult final
{
public:
	struct FINTLWebViewResult                     Ret;                                               // 0x0000(0x0058)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLPluginObserver_OnWebViewResult) == 0x000008, "Wrong alignment on INTLPluginObserver_OnWebViewResult");
static_assert(sizeof(INTLPluginObserver_OnWebViewResult) == 0x000058, "Wrong size on INTLPluginObserver_OnWebViewResult");
static_assert(offsetof(INTLPluginObserver_OnWebViewResult, Ret) == 0x000000, "Member 'INTLPluginObserver_OnWebViewResult::Ret' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.AccountLoginWithLIPASS
// 0x0028 (0x0028 - 0x0000)
struct INTLSDKAPI_AccountLoginWithLIPASS final
{
public:
	EINTLLoginChannel                             Channel;                                           // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Permissions;                                       // 0x0008(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ExtraJson;                                         // 0x0018(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLSDKAPI_AccountLoginWithLIPASS) == 0x000008, "Wrong alignment on INTLSDKAPI_AccountLoginWithLIPASS");
static_assert(sizeof(INTLSDKAPI_AccountLoginWithLIPASS) == 0x000028, "Wrong size on INTLSDKAPI_AccountLoginWithLIPASS");
static_assert(offsetof(INTLSDKAPI_AccountLoginWithLIPASS, Channel) == 0x000000, "Member 'INTLSDKAPI_AccountLoginWithLIPASS::Channel' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_AccountLoginWithLIPASS, Permissions) == 0x000008, "Member 'INTLSDKAPI_AccountLoginWithLIPASS::Permissions' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_AccountLoginWithLIPASS, ExtraJson) == 0x000018, "Member 'INTLSDKAPI_AccountLoginWithLIPASS::ExtraJson' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.AddLocalNotification
// 0x0088 (0x0088 - 0x0000)
struct INTLSDKAPI_AddLocalNotification final
{
public:
	class FString                                 Channel;                                           // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FINTLLocalNotification                 LocalNotification;                                 // 0x0010(0x0078)(ConstParm, Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLSDKAPI_AddLocalNotification) == 0x000008, "Wrong alignment on INTLSDKAPI_AddLocalNotification");
static_assert(sizeof(INTLSDKAPI_AddLocalNotification) == 0x000088, "Wrong size on INTLSDKAPI_AddLocalNotification");
static_assert(offsetof(INTLSDKAPI_AddLocalNotification, Channel) == 0x000000, "Member 'INTLSDKAPI_AddLocalNotification::Channel' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_AddLocalNotification, LocalNotification) == 0x000010, "Member 'INTLSDKAPI_AddLocalNotification::LocalNotification' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.AddLocalNotificationIOS
// 0x00B0 (0x00B0 - 0x0000)
struct INTLSDKAPI_AddLocalNotificationIOS final
{
public:
	class FString                                 Channel;                                           // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FINTLLocalNotificationIOS              LocalNotification;                                 // 0x0010(0x00A0)(ConstParm, Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLSDKAPI_AddLocalNotificationIOS) == 0x000008, "Wrong alignment on INTLSDKAPI_AddLocalNotificationIOS");
static_assert(sizeof(INTLSDKAPI_AddLocalNotificationIOS) == 0x0000B0, "Wrong size on INTLSDKAPI_AddLocalNotificationIOS");
static_assert(offsetof(INTLSDKAPI_AddLocalNotificationIOS, Channel) == 0x000000, "Member 'INTLSDKAPI_AddLocalNotificationIOS::Channel' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_AddLocalNotificationIOS, LocalNotification) == 0x000010, "Member 'INTLSDKAPI_AddLocalNotificationIOS::LocalNotification' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.AddObserver
// 0x0010 (0x0010 - 0x0000)
struct INTLSDKAPI_AddObserver final
{
public:
	TScriptInterface<class IINTLPluginObserver>   Observer;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLSDKAPI_AddObserver) == 0x000008, "Wrong alignment on INTLSDKAPI_AddObserver");
static_assert(sizeof(INTLSDKAPI_AddObserver) == 0x000010, "Wrong size on INTLSDKAPI_AddObserver");
static_assert(offsetof(INTLSDKAPI_AddObserver, Observer) == 0x000000, "Member 'INTLSDKAPI_AddObserver::Observer' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.AutoLogin
// 0x0001 (0x0001 - 0x0000)
struct INTLSDKAPI_AutoLogin final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLSDKAPI_AutoLogin) == 0x000001, "Wrong alignment on INTLSDKAPI_AutoLogin");
static_assert(sizeof(INTLSDKAPI_AutoLogin) == 0x000001, "Wrong size on INTLSDKAPI_AutoLogin");
static_assert(offsetof(INTLSDKAPI_AutoLogin, ReturnValue) == 0x000000, "Member 'INTLSDKAPI_AutoLogin::ReturnValue' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.AutoLoginForLI
// 0x0001 (0x0001 - 0x0000)
struct INTLSDKAPI_AutoLoginForLI final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLSDKAPI_AutoLoginForLI) == 0x000001, "Wrong alignment on INTLSDKAPI_AutoLoginForLI");
static_assert(sizeof(INTLSDKAPI_AutoLoginForLI) == 0x000001, "Wrong size on INTLSDKAPI_AutoLoginForLI");
static_assert(offsetof(INTLSDKAPI_AutoLoginForLI, ReturnValue) == 0x000000, "Member 'INTLSDKAPI_AutoLoginForLI::ReturnValue' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.Bind
// 0x0030 (0x0030 - 0x0000)
struct INTLSDKAPI_Bind final
{
public:
	EINTLLoginChannel                             Channel;                                           // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Permissions;                                       // 0x0008(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ExtraJson;                                         // 0x0018(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0028(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(INTLSDKAPI_Bind) == 0x000008, "Wrong alignment on INTLSDKAPI_Bind");
static_assert(sizeof(INTLSDKAPI_Bind) == 0x000030, "Wrong size on INTLSDKAPI_Bind");
static_assert(offsetof(INTLSDKAPI_Bind, Channel) == 0x000000, "Member 'INTLSDKAPI_Bind::Channel' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_Bind, Permissions) == 0x000008, "Member 'INTLSDKAPI_Bind::Permissions' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_Bind, ExtraJson) == 0x000018, "Member 'INTLSDKAPI_Bind::ExtraJson' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_Bind, ReturnValue) == 0x000028, "Member 'INTLSDKAPI_Bind::ReturnValue' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.BindWithLoggedinChannel
// 0x0001 (0x0001 - 0x0000)
struct INTLSDKAPI_BindWithLoggedinChannel final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLSDKAPI_BindWithLoggedinChannel) == 0x000001, "Wrong alignment on INTLSDKAPI_BindWithLoggedinChannel");
static_assert(sizeof(INTLSDKAPI_BindWithLoggedinChannel) == 0x000001, "Wrong size on INTLSDKAPI_BindWithLoggedinChannel");
static_assert(offsetof(INTLSDKAPI_BindWithLoggedinChannel, ReturnValue) == 0x000000, "Member 'INTLSDKAPI_BindWithLoggedinChannel::ReturnValue' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.BuildMapWithLoggedinChannel
// 0x0001 (0x0001 - 0x0000)
struct INTLSDKAPI_BuildMapWithLoggedinChannel final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLSDKAPI_BuildMapWithLoggedinChannel) == 0x000001, "Wrong alignment on INTLSDKAPI_BuildMapWithLoggedinChannel");
static_assert(sizeof(INTLSDKAPI_BuildMapWithLoggedinChannel) == 0x000001, "Wrong size on INTLSDKAPI_BuildMapWithLoggedinChannel");
static_assert(offsetof(INTLSDKAPI_BuildMapWithLoggedinChannel, ReturnValue) == 0x000000, "Member 'INTLSDKAPI_BuildMapWithLoggedinChannel::ReturnValue' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.CallJS
// 0x0010 (0x0010 - 0x0000)
struct INTLSDKAPI_CallJS final
{
public:
	class FString                                 JsonJsParam;                                       // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLSDKAPI_CallJS) == 0x000008, "Wrong alignment on INTLSDKAPI_CallJS");
static_assert(sizeof(INTLSDKAPI_CallJS) == 0x000010, "Wrong size on INTLSDKAPI_CallJS");
static_assert(offsetof(INTLSDKAPI_CallJS, JsonJsParam) == 0x000000, "Member 'INTLSDKAPI_CallJS::JsonJsParam' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.CancelLogin
// 0x0020 (0x0020 - 0x0000)
struct INTLSDKAPI_CancelLogin final
{
public:
	class FString                                 Channel;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Extra_json;                                        // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLSDKAPI_CancelLogin) == 0x000008, "Wrong alignment on INTLSDKAPI_CancelLogin");
static_assert(sizeof(INTLSDKAPI_CancelLogin) == 0x000020, "Wrong size on INTLSDKAPI_CancelLogin");
static_assert(offsetof(INTLSDKAPI_CancelLogin, Channel) == 0x000000, "Member 'INTLSDKAPI_CancelLogin::Channel' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_CancelLogin, Extra_json) == 0x000010, "Member 'INTLSDKAPI_CancelLogin::Extra_json' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.ChangeIsReceiveEmail
// 0x0008 (0x0008 - 0x0000)
struct INTLSDKAPI_ChangeIsReceiveEmail final
{
public:
	int32                                         Recv_email;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(INTLSDKAPI_ChangeIsReceiveEmail) == 0x000004, "Wrong alignment on INTLSDKAPI_ChangeIsReceiveEmail");
static_assert(sizeof(INTLSDKAPI_ChangeIsReceiveEmail) == 0x000008, "Wrong size on INTLSDKAPI_ChangeIsReceiveEmail");
static_assert(offsetof(INTLSDKAPI_ChangeIsReceiveEmail, Recv_email) == 0x000000, "Member 'INTLSDKAPI_ChangeIsReceiveEmail::Recv_email' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_ChangeIsReceiveEmail, ReturnValue) == 0x000004, "Member 'INTLSDKAPI_ChangeIsReceiveEmail::ReturnValue' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.CheckActiveUser
// 0x0001 (0x0001 - 0x0000)
struct INTLSDKAPI_CheckActiveUser final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLSDKAPI_CheckActiveUser) == 0x000001, "Wrong alignment on INTLSDKAPI_CheckActiveUser");
static_assert(sizeof(INTLSDKAPI_CheckActiveUser) == 0x000001, "Wrong size on INTLSDKAPI_CheckActiveUser");
static_assert(offsetof(INTLSDKAPI_CheckActiveUser, ReturnValue) == 0x000000, "Member 'INTLSDKAPI_CheckActiveUser::ReturnValue' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.CheckOptionalRepoFiles
// 0x0028 (0x0028 - 0x0000)
struct INTLSDKAPI_CheckOptionalRepoFiles final
{
public:
	int32                                         RepoID;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         FilesPath;                                         // 0x0008(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	TArray<struct FINTLUpdateOptionalRepoFilesStatus> ReturnValue;                                       // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLSDKAPI_CheckOptionalRepoFiles) == 0x000008, "Wrong alignment on INTLSDKAPI_CheckOptionalRepoFiles");
static_assert(sizeof(INTLSDKAPI_CheckOptionalRepoFiles) == 0x000028, "Wrong size on INTLSDKAPI_CheckOptionalRepoFiles");
static_assert(offsetof(INTLSDKAPI_CheckOptionalRepoFiles, RepoID) == 0x000000, "Member 'INTLSDKAPI_CheckOptionalRepoFiles::RepoID' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_CheckOptionalRepoFiles, FilesPath) == 0x000008, "Member 'INTLSDKAPI_CheckOptionalRepoFiles::FilesPath' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_CheckOptionalRepoFiles, ReturnValue) == 0x000018, "Member 'INTLSDKAPI_CheckOptionalRepoFiles::ReturnValue' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.CheckPermissionStatus
// 0x0010 (0x0010 - 0x0000)
struct INTLSDKAPI_CheckPermissionStatus final
{
public:
	TArray<EPermissionType>                       PermissionTypeArray;                               // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLSDKAPI_CheckPermissionStatus) == 0x000008, "Wrong alignment on INTLSDKAPI_CheckPermissionStatus");
static_assert(sizeof(INTLSDKAPI_CheckPermissionStatus) == 0x000010, "Wrong size on INTLSDKAPI_CheckPermissionStatus");
static_assert(offsetof(INTLSDKAPI_CheckPermissionStatus, PermissionTypeArray) == 0x000000, "Member 'INTLSDKAPI_CheckPermissionStatus::PermissionTypeArray' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.CheckTwoFALoginForLI
// 0x0030 (0x0030 - 0x0000)
struct INTLSDKAPI_CheckTwoFALoginForLI final
{
public:
	class FString                                 Two_fa_confirm_code;                               // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Two_fa_verify_code;                                // 0x0010(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Two_fa_li_email;                                   // 0x0020(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLSDKAPI_CheckTwoFALoginForLI) == 0x000008, "Wrong alignment on INTLSDKAPI_CheckTwoFALoginForLI");
static_assert(sizeof(INTLSDKAPI_CheckTwoFALoginForLI) == 0x000030, "Wrong size on INTLSDKAPI_CheckTwoFALoginForLI");
static_assert(offsetof(INTLSDKAPI_CheckTwoFALoginForLI, Two_fa_confirm_code) == 0x000000, "Member 'INTLSDKAPI_CheckTwoFALoginForLI::Two_fa_confirm_code' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_CheckTwoFALoginForLI, Two_fa_verify_code) == 0x000010, "Member 'INTLSDKAPI_CheckTwoFALoginForLI::Two_fa_verify_code' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_CheckTwoFALoginForLI, Two_fa_li_email) == 0x000020, "Member 'INTLSDKAPI_CheckTwoFALoginForLI::Two_fa_li_email' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.ClearLocalNotifications
// 0x0010 (0x0010 - 0x0000)
struct INTLSDKAPI_ClearLocalNotifications final
{
public:
	class FString                                 Channel;                                           // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLSDKAPI_ClearLocalNotifications) == 0x000008, "Wrong alignment on INTLSDKAPI_ClearLocalNotifications");
static_assert(sizeof(INTLSDKAPI_ClearLocalNotifications) == 0x000010, "Wrong size on INTLSDKAPI_ClearLocalNotifications");
static_assert(offsetof(INTLSDKAPI_ClearLocalNotifications, Channel) == 0x000000, "Member 'INTLSDKAPI_ClearLocalNotifications::Channel' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.ClearUserStorage
// 0x0018 (0x0018 - 0x0000)
struct INTLSDKAPI_ClearUserStorage final
{
public:
	class FString                                 Sub_dir;                                           // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(INTLSDKAPI_ClearUserStorage) == 0x000008, "Wrong alignment on INTLSDKAPI_ClearUserStorage");
static_assert(sizeof(INTLSDKAPI_ClearUserStorage) == 0x000018, "Wrong size on INTLSDKAPI_ClearUserStorage");
static_assert(offsetof(INTLSDKAPI_ClearUserStorage, Sub_dir) == 0x000000, "Member 'INTLSDKAPI_ClearUserStorage::Sub_dir' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_ClearUserStorage, ReturnValue) == 0x000010, "Member 'INTLSDKAPI_ClearUserStorage::ReturnValue' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.ClosePlayStationErrorDialog
// 0x0004 (0x0004 - 0x0000)
struct INTLSDKAPI_ClosePlayStationErrorDialog final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLSDKAPI_ClosePlayStationErrorDialog) == 0x000004, "Wrong alignment on INTLSDKAPI_ClosePlayStationErrorDialog");
static_assert(sizeof(INTLSDKAPI_ClosePlayStationErrorDialog) == 0x000004, "Wrong size on INTLSDKAPI_ClosePlayStationErrorDialog");
static_assert(offsetof(INTLSDKAPI_ClosePlayStationErrorDialog, ReturnValue) == 0x000000, "Member 'INTLSDKAPI_ClosePlayStationErrorDialog::ReturnValue' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.CloseWebSocket
// 0x0010 (0x0010 - 0x0000)
struct INTLSDKAPI_CloseWebSocket final
{
public:
	class FString                                 URL;                                               // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLSDKAPI_CloseWebSocket) == 0x000008, "Wrong alignment on INTLSDKAPI_CloseWebSocket");
static_assert(sizeof(INTLSDKAPI_CloseWebSocket) == 0x000010, "Wrong size on INTLSDKAPI_CloseWebSocket");
static_assert(offsetof(INTLSDKAPI_CloseWebSocket, URL) == 0x000000, "Member 'INTLSDKAPI_CloseWebSocket::URL' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.ComplianceCommitBirthday
// 0x000C (0x000C - 0x0000)
struct INTLSDKAPI_ComplianceCommitBirthday final
{
public:
	int32                                         BirthdayYear;                                      // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         BirthdayMonth;                                     // 0x0004(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         BirthdayDay;                                       // 0x0008(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLSDKAPI_ComplianceCommitBirthday) == 0x000004, "Wrong alignment on INTLSDKAPI_ComplianceCommitBirthday");
static_assert(sizeof(INTLSDKAPI_ComplianceCommitBirthday) == 0x00000C, "Wrong size on INTLSDKAPI_ComplianceCommitBirthday");
static_assert(offsetof(INTLSDKAPI_ComplianceCommitBirthday, BirthdayYear) == 0x000000, "Member 'INTLSDKAPI_ComplianceCommitBirthday::BirthdayYear' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_ComplianceCommitBirthday, BirthdayMonth) == 0x000004, "Member 'INTLSDKAPI_ComplianceCommitBirthday::BirthdayMonth' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_ComplianceCommitBirthday, BirthdayDay) == 0x000008, "Member 'INTLSDKAPI_ComplianceCommitBirthday::BirthdayDay' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.ComplianceGetConsoleCreditCardVerifyUrl
// 0x0010 (0x0010 - 0x0000)
struct INTLSDKAPI_ComplianceGetConsoleCreditCardVerifyUrl final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLSDKAPI_ComplianceGetConsoleCreditCardVerifyUrl) == 0x000008, "Wrong alignment on INTLSDKAPI_ComplianceGetConsoleCreditCardVerifyUrl");
static_assert(sizeof(INTLSDKAPI_ComplianceGetConsoleCreditCardVerifyUrl) == 0x000010, "Wrong size on INTLSDKAPI_ComplianceGetConsoleCreditCardVerifyUrl");
static_assert(offsetof(INTLSDKAPI_ComplianceGetConsoleCreditCardVerifyUrl, ReturnValue) == 0x000000, "Member 'INTLSDKAPI_ComplianceGetConsoleCreditCardVerifyUrl::ReturnValue' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.ComplianceGetConsoleRealNameVerifyUrl
// 0x0020 (0x0020 - 0x0000)
struct INTLSDKAPI_ComplianceGetConsoleRealNameVerifyUrl final
{
public:
	class FString                                 Region;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLSDKAPI_ComplianceGetConsoleRealNameVerifyUrl) == 0x000008, "Wrong alignment on INTLSDKAPI_ComplianceGetConsoleRealNameVerifyUrl");
static_assert(sizeof(INTLSDKAPI_ComplianceGetConsoleRealNameVerifyUrl) == 0x000020, "Wrong size on INTLSDKAPI_ComplianceGetConsoleRealNameVerifyUrl");
static_assert(offsetof(INTLSDKAPI_ComplianceGetConsoleRealNameVerifyUrl, Region) == 0x000000, "Member 'INTLSDKAPI_ComplianceGetConsoleRealNameVerifyUrl::Region' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_ComplianceGetConsoleRealNameVerifyUrl, ReturnValue) == 0x000010, "Member 'INTLSDKAPI_ComplianceGetConsoleRealNameVerifyUrl::ReturnValue' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.ComplianceInit
// 0x0001 (0x0001 - 0x0000)
struct INTLSDKAPI_ComplianceInit final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLSDKAPI_ComplianceInit) == 0x000001, "Wrong alignment on INTLSDKAPI_ComplianceInit");
static_assert(sizeof(INTLSDKAPI_ComplianceInit) == 0x000001, "Wrong size on INTLSDKAPI_ComplianceInit");
static_assert(offsetof(INTLSDKAPI_ComplianceInit, ReturnValue) == 0x000000, "Member 'INTLSDKAPI_ComplianceInit::ReturnValue' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.ComplianceInitWithParams
// 0x0038 (0x0038 - 0x0000)
struct INTLSDKAPI_ComplianceInitWithParams final
{
public:
	class FString                                 GameId;                                            // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 OpenID;                                            // 0x0010(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Token;                                             // 0x0020(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ChannelID;                                         // 0x0030(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0034(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(INTLSDKAPI_ComplianceInitWithParams) == 0x000008, "Wrong alignment on INTLSDKAPI_ComplianceInitWithParams");
static_assert(sizeof(INTLSDKAPI_ComplianceInitWithParams) == 0x000038, "Wrong size on INTLSDKAPI_ComplianceInitWithParams");
static_assert(offsetof(INTLSDKAPI_ComplianceInitWithParams, GameId) == 0x000000, "Member 'INTLSDKAPI_ComplianceInitWithParams::GameId' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_ComplianceInitWithParams, OpenID) == 0x000010, "Member 'INTLSDKAPI_ComplianceInitWithParams::OpenID' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_ComplianceInitWithParams, Token) == 0x000020, "Member 'INTLSDKAPI_ComplianceInitWithParams::Token' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_ComplianceInitWithParams, ChannelID) == 0x000030, "Member 'INTLSDKAPI_ComplianceInitWithParams::ChannelID' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_ComplianceInitWithParams, ReturnValue) == 0x000034, "Member 'INTLSDKAPI_ComplianceInitWithParams::ReturnValue' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.ComplianceMultiSetStatusWithAdultCheckStatus
// 0x0058 (0x0058 - 0x0000)
struct INTLSDKAPI_ComplianceMultiSetStatusWithAdultCheckStatus final
{
public:
	class FString                                 OpenID;                                            // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Otoken;                                            // 0x0010(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Region;                                            // 0x0020(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         AdultCheckStatus;                                  // 0x0030(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         CompareAge;                                        // 0x0034(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         CertificateType;                                   // 0x0038(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ExtraJson;                                         // 0x0040(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ChannelID;                                         // 0x0050(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(INTLSDKAPI_ComplianceMultiSetStatusWithAdultCheckStatus) == 0x000008, "Wrong alignment on INTLSDKAPI_ComplianceMultiSetStatusWithAdultCheckStatus");
static_assert(sizeof(INTLSDKAPI_ComplianceMultiSetStatusWithAdultCheckStatus) == 0x000058, "Wrong size on INTLSDKAPI_ComplianceMultiSetStatusWithAdultCheckStatus");
static_assert(offsetof(INTLSDKAPI_ComplianceMultiSetStatusWithAdultCheckStatus, OpenID) == 0x000000, "Member 'INTLSDKAPI_ComplianceMultiSetStatusWithAdultCheckStatus::OpenID' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_ComplianceMultiSetStatusWithAdultCheckStatus, Otoken) == 0x000010, "Member 'INTLSDKAPI_ComplianceMultiSetStatusWithAdultCheckStatus::Otoken' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_ComplianceMultiSetStatusWithAdultCheckStatus, Region) == 0x000020, "Member 'INTLSDKAPI_ComplianceMultiSetStatusWithAdultCheckStatus::Region' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_ComplianceMultiSetStatusWithAdultCheckStatus, AdultCheckStatus) == 0x000030, "Member 'INTLSDKAPI_ComplianceMultiSetStatusWithAdultCheckStatus::AdultCheckStatus' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_ComplianceMultiSetStatusWithAdultCheckStatus, CompareAge) == 0x000034, "Member 'INTLSDKAPI_ComplianceMultiSetStatusWithAdultCheckStatus::CompareAge' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_ComplianceMultiSetStatusWithAdultCheckStatus, CertificateType) == 0x000038, "Member 'INTLSDKAPI_ComplianceMultiSetStatusWithAdultCheckStatus::CertificateType' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_ComplianceMultiSetStatusWithAdultCheckStatus, ExtraJson) == 0x000040, "Member 'INTLSDKAPI_ComplianceMultiSetStatusWithAdultCheckStatus::ExtraJson' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_ComplianceMultiSetStatusWithAdultCheckStatus, ChannelID) == 0x000050, "Member 'INTLSDKAPI_ComplianceMultiSetStatusWithAdultCheckStatus::ChannelID' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.ComplianceMultiSetStatusWithAge
// 0x0050 (0x0050 - 0x0000)
struct INTLSDKAPI_ComplianceMultiSetStatusWithAge final
{
public:
	class FString                                 OpenID;                                            // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Otoken;                                            // 0x0010(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Region;                                            // 0x0020(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Age;                                               // 0x0030(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         CertificateType;                                   // 0x0034(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ExtraJson;                                         // 0x0038(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ChannelID;                                         // 0x0048(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(INTLSDKAPI_ComplianceMultiSetStatusWithAge) == 0x000008, "Wrong alignment on INTLSDKAPI_ComplianceMultiSetStatusWithAge");
static_assert(sizeof(INTLSDKAPI_ComplianceMultiSetStatusWithAge) == 0x000050, "Wrong size on INTLSDKAPI_ComplianceMultiSetStatusWithAge");
static_assert(offsetof(INTLSDKAPI_ComplianceMultiSetStatusWithAge, OpenID) == 0x000000, "Member 'INTLSDKAPI_ComplianceMultiSetStatusWithAge::OpenID' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_ComplianceMultiSetStatusWithAge, Otoken) == 0x000010, "Member 'INTLSDKAPI_ComplianceMultiSetStatusWithAge::Otoken' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_ComplianceMultiSetStatusWithAge, Region) == 0x000020, "Member 'INTLSDKAPI_ComplianceMultiSetStatusWithAge::Region' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_ComplianceMultiSetStatusWithAge, Age) == 0x000030, "Member 'INTLSDKAPI_ComplianceMultiSetStatusWithAge::Age' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_ComplianceMultiSetStatusWithAge, CertificateType) == 0x000034, "Member 'INTLSDKAPI_ComplianceMultiSetStatusWithAge::CertificateType' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_ComplianceMultiSetStatusWithAge, ExtraJson) == 0x000038, "Member 'INTLSDKAPI_ComplianceMultiSetStatusWithAge::ExtraJson' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_ComplianceMultiSetStatusWithAge, ChannelID) == 0x000048, "Member 'INTLSDKAPI_ComplianceMultiSetStatusWithAge::ChannelID' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.ComplianceMultiSetStatusWithBirthday
// 0x0060 (0x0060 - 0x0000)
struct INTLSDKAPI_ComplianceMultiSetStatusWithBirthday final
{
public:
	class FString                                 OpenID;                                            // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Otoken;                                            // 0x0010(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Region;                                            // 0x0020(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Birthday;                                          // 0x0030(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         CertificateType;                                   // 0x0040(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ExtraJson;                                         // 0x0048(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ChannelID;                                         // 0x0058(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(INTLSDKAPI_ComplianceMultiSetStatusWithBirthday) == 0x000008, "Wrong alignment on INTLSDKAPI_ComplianceMultiSetStatusWithBirthday");
static_assert(sizeof(INTLSDKAPI_ComplianceMultiSetStatusWithBirthday) == 0x000060, "Wrong size on INTLSDKAPI_ComplianceMultiSetStatusWithBirthday");
static_assert(offsetof(INTLSDKAPI_ComplianceMultiSetStatusWithBirthday, OpenID) == 0x000000, "Member 'INTLSDKAPI_ComplianceMultiSetStatusWithBirthday::OpenID' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_ComplianceMultiSetStatusWithBirthday, Otoken) == 0x000010, "Member 'INTLSDKAPI_ComplianceMultiSetStatusWithBirthday::Otoken' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_ComplianceMultiSetStatusWithBirthday, Region) == 0x000020, "Member 'INTLSDKAPI_ComplianceMultiSetStatusWithBirthday::Region' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_ComplianceMultiSetStatusWithBirthday, Birthday) == 0x000030, "Member 'INTLSDKAPI_ComplianceMultiSetStatusWithBirthday::Birthday' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_ComplianceMultiSetStatusWithBirthday, CertificateType) == 0x000040, "Member 'INTLSDKAPI_ComplianceMultiSetStatusWithBirthday::CertificateType' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_ComplianceMultiSetStatusWithBirthday, ExtraJson) == 0x000048, "Member 'INTLSDKAPI_ComplianceMultiSetStatusWithBirthday::ExtraJson' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_ComplianceMultiSetStatusWithBirthday, ChannelID) == 0x000058, "Member 'INTLSDKAPI_ComplianceMultiSetStatusWithBirthday::ChannelID' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.ComplianceQueryCountryConfig
// 0x0018 (0x0018 - 0x0000)
struct INTLSDKAPI_ComplianceQueryCountryConfig final
{
public:
	class FString                                 Region;                                            // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ChannelID;                                         // 0x0010(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(INTLSDKAPI_ComplianceQueryCountryConfig) == 0x000008, "Wrong alignment on INTLSDKAPI_ComplianceQueryCountryConfig");
static_assert(sizeof(INTLSDKAPI_ComplianceQueryCountryConfig) == 0x000018, "Wrong size on INTLSDKAPI_ComplianceQueryCountryConfig");
static_assert(offsetof(INTLSDKAPI_ComplianceQueryCountryConfig, Region) == 0x000000, "Member 'INTLSDKAPI_ComplianceQueryCountryConfig::Region' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_ComplianceQueryCountryConfig, ChannelID) == 0x000010, "Member 'INTLSDKAPI_ComplianceQueryCountryConfig::ChannelID' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.ComplianceQueryStrategy
// 0x0010 (0x0010 - 0x0000)
struct INTLSDKAPI_ComplianceQueryStrategy final
{
public:
	class FString                                 Region;                                            // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLSDKAPI_ComplianceQueryStrategy) == 0x000008, "Wrong alignment on INTLSDKAPI_ComplianceQueryStrategy");
static_assert(sizeof(INTLSDKAPI_ComplianceQueryStrategy) == 0x000010, "Wrong size on INTLSDKAPI_ComplianceQueryStrategy");
static_assert(offsetof(INTLSDKAPI_ComplianceQueryStrategy, Region) == 0x000000, "Member 'INTLSDKAPI_ComplianceQueryStrategy::Region' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.ComplianceSendConsoleEmail
// 0x0038 (0x0038 - 0x0000)
struct INTLSDKAPI_ComplianceSendConsoleEmail final
{
public:
	class FString                                 Email;                                             // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Scene;                                             // 0x0010(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 URL;                                               // 0x0018(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 UserName;                                          // 0x0028(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLSDKAPI_ComplianceSendConsoleEmail) == 0x000008, "Wrong alignment on INTLSDKAPI_ComplianceSendConsoleEmail");
static_assert(sizeof(INTLSDKAPI_ComplianceSendConsoleEmail) == 0x000038, "Wrong size on INTLSDKAPI_ComplianceSendConsoleEmail");
static_assert(offsetof(INTLSDKAPI_ComplianceSendConsoleEmail, Email) == 0x000000, "Member 'INTLSDKAPI_ComplianceSendConsoleEmail::Email' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_ComplianceSendConsoleEmail, Scene) == 0x000010, "Member 'INTLSDKAPI_ComplianceSendConsoleEmail::Scene' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_ComplianceSendConsoleEmail, URL) == 0x000018, "Member 'INTLSDKAPI_ComplianceSendConsoleEmail::URL' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_ComplianceSendConsoleEmail, UserName) == 0x000028, "Member 'INTLSDKAPI_ComplianceSendConsoleEmail::UserName' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.ComplianceSendEmail
// 0x0020 (0x0020 - 0x0000)
struct INTLSDKAPI_ComplianceSendEmail final
{
public:
	class FString                                 Email;                                             // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 UserName;                                          // 0x0010(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLSDKAPI_ComplianceSendEmail) == 0x000008, "Wrong alignment on INTLSDKAPI_ComplianceSendEmail");
static_assert(sizeof(INTLSDKAPI_ComplianceSendEmail) == 0x000020, "Wrong size on INTLSDKAPI_ComplianceSendEmail");
static_assert(offsetof(INTLSDKAPI_ComplianceSendEmail, Email) == 0x000000, "Member 'INTLSDKAPI_ComplianceSendEmail::Email' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_ComplianceSendEmail, UserName) == 0x000010, "Member 'INTLSDKAPI_ComplianceSendEmail::UserName' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.ComplianceSetAdulthood
// 0x0001 (0x0001 - 0x0000)
struct INTLSDKAPI_ComplianceSetAdulthood final
{
public:
	EComplianceAgeStatus                          Status;                                            // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLSDKAPI_ComplianceSetAdulthood) == 0x000001, "Wrong alignment on INTLSDKAPI_ComplianceSetAdulthood");
static_assert(sizeof(INTLSDKAPI_ComplianceSetAdulthood) == 0x000001, "Wrong size on INTLSDKAPI_ComplianceSetAdulthood");
static_assert(offsetof(INTLSDKAPI_ComplianceSetAdulthood, Status) == 0x000000, "Member 'INTLSDKAPI_ComplianceSetAdulthood::Status' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.ComplianceSetEUAgreeStatus
// 0x0001 (0x0001 - 0x0000)
struct INTLSDKAPI_ComplianceSetEUAgreeStatus final
{
public:
	EComplianceAgreeStatus                        Status;                                            // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLSDKAPI_ComplianceSetEUAgreeStatus) == 0x000001, "Wrong alignment on INTLSDKAPI_ComplianceSetEUAgreeStatus");
static_assert(sizeof(INTLSDKAPI_ComplianceSetEUAgreeStatus) == 0x000001, "Wrong size on INTLSDKAPI_ComplianceSetEUAgreeStatus");
static_assert(offsetof(INTLSDKAPI_ComplianceSetEUAgreeStatus, Status) == 0x000000, "Member 'INTLSDKAPI_ComplianceSetEUAgreeStatus::Status' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.ComplianceSetParentCertificateStatus
// 0x0001 (0x0001 - 0x0000)
struct INTLSDKAPI_ComplianceSetParentCertificateStatus final
{
public:
	EComplianceParentCertificateStatus            Status;                                            // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLSDKAPI_ComplianceSetParentCertificateStatus) == 0x000001, "Wrong alignment on INTLSDKAPI_ComplianceSetParentCertificateStatus");
static_assert(sizeof(INTLSDKAPI_ComplianceSetParentCertificateStatus) == 0x000001, "Wrong size on INTLSDKAPI_ComplianceSetParentCertificateStatus");
static_assert(offsetof(INTLSDKAPI_ComplianceSetParentCertificateStatus, Status) == 0x000000, "Member 'INTLSDKAPI_ComplianceSetParentCertificateStatus::Status' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.ComplianceSetUserInfoWithAgeStatus
// 0x0018 (0x0018 - 0x0000)
struct INTLSDKAPI_ComplianceSetUserInfoWithAgeStatus final
{
public:
	class FString                                 Region;                                            // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EComplianceAgeStatus                          Status;                                            // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(INTLSDKAPI_ComplianceSetUserInfoWithAgeStatus) == 0x000008, "Wrong alignment on INTLSDKAPI_ComplianceSetUserInfoWithAgeStatus");
static_assert(sizeof(INTLSDKAPI_ComplianceSetUserInfoWithAgeStatus) == 0x000018, "Wrong size on INTLSDKAPI_ComplianceSetUserInfoWithAgeStatus");
static_assert(offsetof(INTLSDKAPI_ComplianceSetUserInfoWithAgeStatus, Region) == 0x000000, "Member 'INTLSDKAPI_ComplianceSetUserInfoWithAgeStatus::Region' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_ComplianceSetUserInfoWithAgeStatus, Status) == 0x000010, "Member 'INTLSDKAPI_ComplianceSetUserInfoWithAgeStatus::Status' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.ComplianceSetUserInfoWithBirthAge
// 0x0018 (0x0018 - 0x0000)
struct INTLSDKAPI_ComplianceSetUserInfoWithBirthAge final
{
public:
	class FString                                 Region;                                            // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         BirthAge;                                          // 0x0010(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(INTLSDKAPI_ComplianceSetUserInfoWithBirthAge) == 0x000008, "Wrong alignment on INTLSDKAPI_ComplianceSetUserInfoWithBirthAge");
static_assert(sizeof(INTLSDKAPI_ComplianceSetUserInfoWithBirthAge) == 0x000018, "Wrong size on INTLSDKAPI_ComplianceSetUserInfoWithBirthAge");
static_assert(offsetof(INTLSDKAPI_ComplianceSetUserInfoWithBirthAge, Region) == 0x000000, "Member 'INTLSDKAPI_ComplianceSetUserInfoWithBirthAge::Region' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_ComplianceSetUserInfoWithBirthAge, BirthAge) == 0x000010, "Member 'INTLSDKAPI_ComplianceSetUserInfoWithBirthAge::BirthAge' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.ComplianceSetUserInfoWithBirthday
// 0x0020 (0x0020 - 0x0000)
struct INTLSDKAPI_ComplianceSetUserInfoWithBirthday final
{
public:
	class FString                                 Region;                                            // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         BirthdayYear;                                      // 0x0010(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         BirthdayMonth;                                     // 0x0014(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         BirthdayDay;                                       // 0x0018(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(INTLSDKAPI_ComplianceSetUserInfoWithBirthday) == 0x000008, "Wrong alignment on INTLSDKAPI_ComplianceSetUserInfoWithBirthday");
static_assert(sizeof(INTLSDKAPI_ComplianceSetUserInfoWithBirthday) == 0x000020, "Wrong size on INTLSDKAPI_ComplianceSetUserInfoWithBirthday");
static_assert(offsetof(INTLSDKAPI_ComplianceSetUserInfoWithBirthday, Region) == 0x000000, "Member 'INTLSDKAPI_ComplianceSetUserInfoWithBirthday::Region' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_ComplianceSetUserInfoWithBirthday, BirthdayYear) == 0x000010, "Member 'INTLSDKAPI_ComplianceSetUserInfoWithBirthday::BirthdayYear' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_ComplianceSetUserInfoWithBirthday, BirthdayMonth) == 0x000014, "Member 'INTLSDKAPI_ComplianceSetUserInfoWithBirthday::BirthdayMonth' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_ComplianceSetUserInfoWithBirthday, BirthdayDay) == 0x000018, "Member 'INTLSDKAPI_ComplianceSetUserInfoWithBirthday::BirthdayDay' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.ComplianceSetUserProfile
// 0x0050 (0x0050 - 0x0000)
struct INTLSDKAPI_ComplianceSetUserProfile final
{
public:
	class FString                                 GameId;                                            // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 OpenID;                                            // 0x0010(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Token;                                             // 0x0020(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ChannelID;                                         // 0x0030(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Region;                                            // 0x0038(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0048(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(INTLSDKAPI_ComplianceSetUserProfile) == 0x000008, "Wrong alignment on INTLSDKAPI_ComplianceSetUserProfile");
static_assert(sizeof(INTLSDKAPI_ComplianceSetUserProfile) == 0x000050, "Wrong size on INTLSDKAPI_ComplianceSetUserProfile");
static_assert(offsetof(INTLSDKAPI_ComplianceSetUserProfile, GameId) == 0x000000, "Member 'INTLSDKAPI_ComplianceSetUserProfile::GameId' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_ComplianceSetUserProfile, OpenID) == 0x000010, "Member 'INTLSDKAPI_ComplianceSetUserProfile::OpenID' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_ComplianceSetUserProfile, Token) == 0x000020, "Member 'INTLSDKAPI_ComplianceSetUserProfile::Token' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_ComplianceSetUserProfile, ChannelID) == 0x000030, "Member 'INTLSDKAPI_ComplianceSetUserProfile::ChannelID' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_ComplianceSetUserProfile, Region) == 0x000038, "Member 'INTLSDKAPI_ComplianceSetUserProfile::Region' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_ComplianceSetUserProfile, ReturnValue) == 0x000048, "Member 'INTLSDKAPI_ComplianceSetUserProfile::ReturnValue' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.CreateWebSocket
// 0x0030 (0x0030 - 0x0000)
struct INTLSDKAPI_CreateWebSocket final
{
public:
	class FString                                 URL;                                               // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 QueryJson;                                         // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 HeaderJson;                                        // 0x0020(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLSDKAPI_CreateWebSocket) == 0x000008, "Wrong alignment on INTLSDKAPI_CreateWebSocket");
static_assert(sizeof(INTLSDKAPI_CreateWebSocket) == 0x000030, "Wrong size on INTLSDKAPI_CreateWebSocket");
static_assert(offsetof(INTLSDKAPI_CreateWebSocket, URL) == 0x000000, "Member 'INTLSDKAPI_CreateWebSocket::URL' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_CreateWebSocket, QueryJson) == 0x000010, "Member 'INTLSDKAPI_CreateWebSocket::QueryJson' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_CreateWebSocket, HeaderJson) == 0x000020, "Member 'INTLSDKAPI_CreateWebSocket::HeaderJson' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.DeleteLocalNotifications
// 0x0010 (0x0010 - 0x0000)
struct INTLSDKAPI_DeleteLocalNotifications final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLSDKAPI_DeleteLocalNotifications) == 0x000008, "Wrong alignment on INTLSDKAPI_DeleteLocalNotifications");
static_assert(sizeof(INTLSDKAPI_DeleteLocalNotifications) == 0x000010, "Wrong size on INTLSDKAPI_DeleteLocalNotifications");
static_assert(offsetof(INTLSDKAPI_DeleteLocalNotifications, Key) == 0x000000, "Member 'INTLSDKAPI_DeleteLocalNotifications::Key' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.DeleteTag
// 0x0020 (0x0020 - 0x0000)
struct INTLSDKAPI_DeleteTag final
{
public:
	class FString                                 Channel;                                           // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Tag;                                               // 0x0010(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLSDKAPI_DeleteTag) == 0x000008, "Wrong alignment on INTLSDKAPI_DeleteTag");
static_assert(sizeof(INTLSDKAPI_DeleteTag) == 0x000020, "Wrong size on INTLSDKAPI_DeleteTag");
static_assert(offsetof(INTLSDKAPI_DeleteTag, Channel) == 0x000000, "Member 'INTLSDKAPI_DeleteTag::Channel' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_DeleteTag, Tag) == 0x000010, "Member 'INTLSDKAPI_DeleteTag::Tag' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.DismissLoginUI
// 0x0001 (0x0001 - 0x0000)
struct INTLSDKAPI_DismissLoginUI final
{
public:
	bool                                          Canceled;                                          // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLSDKAPI_DismissLoginUI) == 0x000001, "Wrong alignment on INTLSDKAPI_DismissLoginUI");
static_assert(sizeof(INTLSDKAPI_DismissLoginUI) == 0x000001, "Wrong size on INTLSDKAPI_DismissLoginUI");
static_assert(offsetof(INTLSDKAPI_DismissLoginUI, Canceled) == 0x000000, "Member 'INTLSDKAPI_DismissLoginUI::Canceled' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.DownloadOptionalRepoFiles
// 0x0020 (0x0020 - 0x0000)
struct INTLSDKAPI_DownloadOptionalRepoFiles final
{
public:
	int32                                         RepoID;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         DownloadPriority;                                  // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                         FilesPath;                                         // 0x0008(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          Isbig;                                             // 0x0018(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ReturnValue;                                       // 0x001C(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLSDKAPI_DownloadOptionalRepoFiles) == 0x000008, "Wrong alignment on INTLSDKAPI_DownloadOptionalRepoFiles");
static_assert(sizeof(INTLSDKAPI_DownloadOptionalRepoFiles) == 0x000020, "Wrong size on INTLSDKAPI_DownloadOptionalRepoFiles");
static_assert(offsetof(INTLSDKAPI_DownloadOptionalRepoFiles, RepoID) == 0x000000, "Member 'INTLSDKAPI_DownloadOptionalRepoFiles::RepoID' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_DownloadOptionalRepoFiles, DownloadPriority) == 0x000004, "Member 'INTLSDKAPI_DownloadOptionalRepoFiles::DownloadPriority' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_DownloadOptionalRepoFiles, FilesPath) == 0x000008, "Member 'INTLSDKAPI_DownloadOptionalRepoFiles::FilesPath' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_DownloadOptionalRepoFiles, Isbig) == 0x000018, "Member 'INTLSDKAPI_DownloadOptionalRepoFiles::Isbig' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_DownloadOptionalRepoFiles, ReturnValue) == 0x00001C, "Member 'INTLSDKAPI_DownloadOptionalRepoFiles::ReturnValue' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.EnterGameFailed
// 0x0170 (0x0170 - 0x0000)
struct INTLSDKAPI_EnterGameFailed final
{
public:
	struct FINTLAuthResult                        Ret;                                               // 0x0000(0x0170)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLSDKAPI_EnterGameFailed) == 0x000008, "Wrong alignment on INTLSDKAPI_EnterGameFailed");
static_assert(sizeof(INTLSDKAPI_EnterGameFailed) == 0x000170, "Wrong size on INTLSDKAPI_EnterGameFailed");
static_assert(offsetof(INTLSDKAPI_EnterGameFailed, Ret) == 0x000000, "Member 'INTLSDKAPI_EnterGameFailed::Ret' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.ExtendInvoke
// 0x0038 (0x0038 - 0x0000)
struct INTLSDKAPI_ExtendInvoke final
{
public:
	EINTLLoginChannel                             Channel;                                           // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ExtendMethodName;                                  // 0x0008(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ParamsJson;                                        // 0x0018(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0028(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLSDKAPI_ExtendInvoke) == 0x000008, "Wrong alignment on INTLSDKAPI_ExtendInvoke");
static_assert(sizeof(INTLSDKAPI_ExtendInvoke) == 0x000038, "Wrong size on INTLSDKAPI_ExtendInvoke");
static_assert(offsetof(INTLSDKAPI_ExtendInvoke, Channel) == 0x000000, "Member 'INTLSDKAPI_ExtendInvoke::Channel' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_ExtendInvoke, ExtendMethodName) == 0x000008, "Member 'INTLSDKAPI_ExtendInvoke::ExtendMethodName' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_ExtendInvoke, ParamsJson) == 0x000018, "Member 'INTLSDKAPI_ExtendInvoke::ParamsJson' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_ExtendInvoke, ReturnValue) == 0x000028, "Member 'INTLSDKAPI_ExtendInvoke::ReturnValue' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.Fetch
// 0x0010 (0x0010 - 0x0000)
struct INTLSDKAPI_Fetch final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLSDKAPI_Fetch) == 0x000008, "Wrong alignment on INTLSDKAPI_Fetch");
static_assert(sizeof(INTLSDKAPI_Fetch) == 0x000010, "Wrong size on INTLSDKAPI_Fetch");
static_assert(offsetof(INTLSDKAPI_Fetch, ReturnValue) == 0x000000, "Member 'INTLSDKAPI_Fetch::ReturnValue' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.GenerateTransferCode
// 0x0010 (0x0010 - 0x0000)
struct INTLSDKAPI_GenerateTransferCode final
{
public:
	class FString                                 Password;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLSDKAPI_GenerateTransferCode) == 0x000008, "Wrong alignment on INTLSDKAPI_GenerateTransferCode");
static_assert(sizeof(INTLSDKAPI_GenerateTransferCode) == 0x000010, "Wrong size on INTLSDKAPI_GenerateTransferCode");
static_assert(offsetof(INTLSDKAPI_GenerateTransferCode, Password) == 0x000000, "Member 'INTLSDKAPI_GenerateTransferCode::Password' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.GetAuthDeviceInfo
// 0x0010 (0x0010 - 0x0000)
struct INTLSDKAPI_GetAuthDeviceInfo final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLSDKAPI_GetAuthDeviceInfo) == 0x000008, "Wrong alignment on INTLSDKAPI_GetAuthDeviceInfo");
static_assert(sizeof(INTLSDKAPI_GetAuthDeviceInfo) == 0x000010, "Wrong size on INTLSDKAPI_GetAuthDeviceInfo");
static_assert(offsetof(INTLSDKAPI_GetAuthDeviceInfo, ReturnValue) == 0x000000, "Member 'INTLSDKAPI_GetAuthDeviceInfo::ReturnValue' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.GetAuthEncryptData
// 0x0010 (0x0010 - 0x0000)
struct INTLSDKAPI_GetAuthEncryptData final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLSDKAPI_GetAuthEncryptData) == 0x000008, "Wrong alignment on INTLSDKAPI_GetAuthEncryptData");
static_assert(sizeof(INTLSDKAPI_GetAuthEncryptData) == 0x000010, "Wrong size on INTLSDKAPI_GetAuthEncryptData");
static_assert(offsetof(INTLSDKAPI_GetAuthEncryptData, ReturnValue) == 0x000000, "Member 'INTLSDKAPI_GetAuthEncryptData::ReturnValue' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.GetAuthResult
// 0x0178 (0x0178 - 0x0000)
struct INTLSDKAPI_GetAuthResult final
{
public:
	struct FINTLAuthResult                        LoginRet;                                          // 0x0000(0x0170)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0170(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_171[0x7];                                      // 0x0171(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(INTLSDKAPI_GetAuthResult) == 0x000008, "Wrong alignment on INTLSDKAPI_GetAuthResult");
static_assert(sizeof(INTLSDKAPI_GetAuthResult) == 0x000178, "Wrong size on INTLSDKAPI_GetAuthResult");
static_assert(offsetof(INTLSDKAPI_GetAuthResult, LoginRet) == 0x000000, "Member 'INTLSDKAPI_GetAuthResult::LoginRet' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_GetAuthResult, ReturnValue) == 0x000170, "Member 'INTLSDKAPI_GetAuthResult::ReturnValue' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.GetChannelVersion
// 0x0020 (0x0020 - 0x0000)
struct INTLSDKAPI_GetChannelVersion final
{
public:
	class FString                                 Channel;                                           // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLSDKAPI_GetChannelVersion) == 0x000008, "Wrong alignment on INTLSDKAPI_GetChannelVersion");
static_assert(sizeof(INTLSDKAPI_GetChannelVersion) == 0x000020, "Wrong size on INTLSDKAPI_GetChannelVersion");
static_assert(offsetof(INTLSDKAPI_GetChannelVersion, Channel) == 0x000000, "Member 'INTLSDKAPI_GetChannelVersion::Channel' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_GetChannelVersion, ReturnValue) == 0x000010, "Member 'INTLSDKAPI_GetChannelVersion::ReturnValue' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.GetConfig
// 0x0040 (0x0040 - 0x0000)
struct INTLSDKAPI_GetConfig final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 DefaultVal;                                        // 0x0010(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Project;                                           // 0x0020(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0030(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLSDKAPI_GetConfig) == 0x000008, "Wrong alignment on INTLSDKAPI_GetConfig");
static_assert(sizeof(INTLSDKAPI_GetConfig) == 0x000040, "Wrong size on INTLSDKAPI_GetConfig");
static_assert(offsetof(INTLSDKAPI_GetConfig, Key) == 0x000000, "Member 'INTLSDKAPI_GetConfig::Key' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_GetConfig, DefaultVal) == 0x000010, "Member 'INTLSDKAPI_GetConfig::DefaultVal' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_GetConfig, Project) == 0x000020, "Member 'INTLSDKAPI_GetConfig::Project' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_GetConfig, ReturnValue) == 0x000030, "Member 'INTLSDKAPI_GetConfig::ReturnValue' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.GetCurrentAppVersion
// 0x0010 (0x0010 - 0x0000)
struct INTLSDKAPI_GetCurrentAppVersion final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLSDKAPI_GetCurrentAppVersion) == 0x000008, "Wrong alignment on INTLSDKAPI_GetCurrentAppVersion");
static_assert(sizeof(INTLSDKAPI_GetCurrentAppVersion) == 0x000010, "Wrong size on INTLSDKAPI_GetCurrentAppVersion");
static_assert(offsetof(INTLSDKAPI_GetCurrentAppVersion, ReturnValue) == 0x000000, "Member 'INTLSDKAPI_GetCurrentAppVersion::ReturnValue' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.GetCurrentResourceVersion
// 0x0010 (0x0010 - 0x0000)
struct INTLSDKAPI_GetCurrentResourceVersion final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLSDKAPI_GetCurrentResourceVersion) == 0x000008, "Wrong alignment on INTLSDKAPI_GetCurrentResourceVersion");
static_assert(sizeof(INTLSDKAPI_GetCurrentResourceVersion) == 0x000010, "Wrong size on INTLSDKAPI_GetCurrentResourceVersion");
static_assert(offsetof(INTLSDKAPI_GetCurrentResourceVersion, ReturnValue) == 0x000000, "Member 'INTLSDKAPI_GetCurrentResourceVersion::ReturnValue' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.GetDeviceInfo
// 0x0020 (0x0020 - 0x0000)
struct INTLSDKAPI_GetDeviceInfo final
{
public:
	class FString                                 Extra_json;                                        // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLSDKAPI_GetDeviceInfo) == 0x000008, "Wrong alignment on INTLSDKAPI_GetDeviceInfo");
static_assert(sizeof(INTLSDKAPI_GetDeviceInfo) == 0x000020, "Wrong size on INTLSDKAPI_GetDeviceInfo");
static_assert(offsetof(INTLSDKAPI_GetDeviceInfo, Extra_json) == 0x000000, "Member 'INTLSDKAPI_GetDeviceInfo::Extra_json' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_GetDeviceInfo, ReturnValue) == 0x000010, "Member 'INTLSDKAPI_GetDeviceInfo::ReturnValue' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.GetDeviceLevel
// 0x0004 (0x0004 - 0x0000)
struct INTLSDKAPI_GetDeviceLevel final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLSDKAPI_GetDeviceLevel) == 0x000004, "Wrong alignment on INTLSDKAPI_GetDeviceLevel");
static_assert(sizeof(INTLSDKAPI_GetDeviceLevel) == 0x000004, "Wrong size on INTLSDKAPI_GetDeviceLevel");
static_assert(offsetof(INTLSDKAPI_GetDeviceLevel, ReturnValue) == 0x000000, "Member 'INTLSDKAPI_GetDeviceLevel::ReturnValue' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.GetEncryptUrl
// 0x0020 (0x0020 - 0x0000)
struct INTLSDKAPI_GetEncryptUrl final
{
public:
	class FString                                 URL;                                               // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLSDKAPI_GetEncryptUrl) == 0x000008, "Wrong alignment on INTLSDKAPI_GetEncryptUrl");
static_assert(sizeof(INTLSDKAPI_GetEncryptUrl) == 0x000020, "Wrong size on INTLSDKAPI_GetEncryptUrl");
static_assert(offsetof(INTLSDKAPI_GetEncryptUrl, URL) == 0x000000, "Member 'INTLSDKAPI_GetEncryptUrl::URL' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_GetEncryptUrl, ReturnValue) == 0x000010, "Member 'INTLSDKAPI_GetEncryptUrl::ReturnValue' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.GetFINTLAuthResult
// 0x0170 (0x0170 - 0x0000)
struct INTLSDKAPI_GetFINTLAuthResult final
{
public:
	struct FINTLAuthResult                        ReturnValue;                                       // 0x0000(0x0170)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLSDKAPI_GetFINTLAuthResult) == 0x000008, "Wrong alignment on INTLSDKAPI_GetFINTLAuthResult");
static_assert(sizeof(INTLSDKAPI_GetFINTLAuthResult) == 0x000170, "Wrong size on INTLSDKAPI_GetFINTLAuthResult");
static_assert(offsetof(INTLSDKAPI_GetFINTLAuthResult, ReturnValue) == 0x000000, "Member 'INTLSDKAPI_GetFINTLAuthResult::ReturnValue' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.GetIDTokenResult
// 0x0058 (0x0058 - 0x0000)
struct INTLSDKAPI_GetIDTokenResult final
{
public:
	struct FINTLIDTokenResult                     JwtRet;                                            // 0x0000(0x0050)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0050(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(INTLSDKAPI_GetIDTokenResult) == 0x000008, "Wrong alignment on INTLSDKAPI_GetIDTokenResult");
static_assert(sizeof(INTLSDKAPI_GetIDTokenResult) == 0x000058, "Wrong size on INTLSDKAPI_GetIDTokenResult");
static_assert(offsetof(INTLSDKAPI_GetIDTokenResult, JwtRet) == 0x000000, "Member 'INTLSDKAPI_GetIDTokenResult::JwtRet' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_GetIDTokenResult, ReturnValue) == 0x000050, "Member 'INTLSDKAPI_GetIDTokenResult::ReturnValue' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.GetInstanceID
// 0x0020 (0x0020 - 0x0000)
struct INTLSDKAPI_GetInstanceID final
{
public:
	class FString                                 Channel;                                           // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLSDKAPI_GetInstanceID) == 0x000008, "Wrong alignment on INTLSDKAPI_GetInstanceID");
static_assert(sizeof(INTLSDKAPI_GetInstanceID) == 0x000020, "Wrong size on INTLSDKAPI_GetInstanceID");
static_assert(offsetof(INTLSDKAPI_GetInstanceID, Channel) == 0x000000, "Member 'INTLSDKAPI_GetInstanceID::Channel' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_GetInstanceID, ReturnValue) == 0x000010, "Member 'INTLSDKAPI_GetInstanceID::ReturnValue' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.GetInstanceIDAsync
// 0x0020 (0x0020 - 0x0000)
struct INTLSDKAPI_GetInstanceIDAsync final
{
public:
	class FString                                 Channel;                                           // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLSDKAPI_GetInstanceIDAsync) == 0x000008, "Wrong alignment on INTLSDKAPI_GetInstanceIDAsync");
static_assert(sizeof(INTLSDKAPI_GetInstanceIDAsync) == 0x000020, "Wrong size on INTLSDKAPI_GetInstanceIDAsync");
static_assert(offsetof(INTLSDKAPI_GetInstanceIDAsync, Channel) == 0x000000, "Member 'INTLSDKAPI_GetInstanceIDAsync::Channel' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_GetInstanceIDAsync, ReturnValue) == 0x000010, "Member 'INTLSDKAPI_GetInstanceIDAsync::ReturnValue' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.GetIpByHost
// 0x0020 (0x0020 - 0x0000)
struct INTLSDKAPI_GetIpByHost final
{
public:
	class FString                                 Host;                                              // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLSDKAPI_GetIpByHost) == 0x000008, "Wrong alignment on INTLSDKAPI_GetIpByHost");
static_assert(sizeof(INTLSDKAPI_GetIpByHost) == 0x000020, "Wrong size on INTLSDKAPI_GetIpByHost");
static_assert(offsetof(INTLSDKAPI_GetIpByHost, Host) == 0x000000, "Member 'INTLSDKAPI_GetIpByHost::Host' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_GetIpByHost, ReturnValue) == 0x000010, "Member 'INTLSDKAPI_GetIpByHost::ReturnValue' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.GetRewardExtraJson
// 0x0010 (0x0010 - 0x0000)
struct INTLSDKAPI_GetRewardExtraJson final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLSDKAPI_GetRewardExtraJson) == 0x000008, "Wrong alignment on INTLSDKAPI_GetRewardExtraJson");
static_assert(sizeof(INTLSDKAPI_GetRewardExtraJson) == 0x000010, "Wrong size on INTLSDKAPI_GetRewardExtraJson");
static_assert(offsetof(INTLSDKAPI_GetRewardExtraJson, ReturnValue) == 0x000000, "Member 'INTLSDKAPI_GetRewardExtraJson::ReturnValue' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.GetSDKVersion
// 0x0010 (0x0010 - 0x0000)
struct INTLSDKAPI_GetSDKVersion final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLSDKAPI_GetSDKVersion) == 0x000008, "Wrong alignment on INTLSDKAPI_GetSDKVersion");
static_assert(sizeof(INTLSDKAPI_GetSDKVersion) == 0x000010, "Wrong size on INTLSDKAPI_GetSDKVersion");
static_assert(offsetof(INTLSDKAPI_GetSDKVersion, ReturnValue) == 0x000000, "Member 'INTLSDKAPI_GetSDKVersion::ReturnValue' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.GetStoreChannel
// 0x0004 (0x0004 - 0x0000)
struct INTLSDKAPI_GetStoreChannel final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLSDKAPI_GetStoreChannel) == 0x000004, "Wrong alignment on INTLSDKAPI_GetStoreChannel");
static_assert(sizeof(INTLSDKAPI_GetStoreChannel) == 0x000004, "Wrong size on INTLSDKAPI_GetStoreChannel");
static_assert(offsetof(INTLSDKAPI_GetStoreChannel, ReturnValue) == 0x000000, "Member 'INTLSDKAPI_GetStoreChannel::ReturnValue' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.GetUserStorage
// 0x0010 (0x0010 - 0x0000)
struct INTLSDKAPI_GetUserStorage final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLSDKAPI_GetUserStorage) == 0x000008, "Wrong alignment on INTLSDKAPI_GetUserStorage");
static_assert(sizeof(INTLSDKAPI_GetUserStorage) == 0x000010, "Wrong size on INTLSDKAPI_GetUserStorage");
static_assert(offsetof(INTLSDKAPI_GetUserStorage, ReturnValue) == 0x000000, "Member 'INTLSDKAPI_GetUserStorage::ReturnValue' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.GotoSystemSetting
// 0x0010 (0x0010 - 0x0000)
struct INTLSDKAPI_GotoSystemSetting final
{
public:
	TArray<EPermissionType>                       PermissionTypeArray;                               // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLSDKAPI_GotoSystemSetting) == 0x000008, "Wrong alignment on INTLSDKAPI_GotoSystemSetting");
static_assert(sizeof(INTLSDKAPI_GotoSystemSetting) == 0x000010, "Wrong size on INTLSDKAPI_GotoSystemSetting");
static_assert(offsetof(INTLSDKAPI_GotoSystemSetting, PermissionTypeArray) == 0x000000, "Member 'INTLSDKAPI_GotoSystemSetting::PermissionTypeArray' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.InitCustomer
// 0x0100 (0x0100 - 0x0000)
struct INTLSDKAPI_InitCustomer final
{
public:
	struct FINTLCustomerUserProfile               UserProfile;                                       // 0x0000(0x0100)(Parm, OutParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLSDKAPI_InitCustomer) == 0x000008, "Wrong alignment on INTLSDKAPI_InitCustomer");
static_assert(sizeof(INTLSDKAPI_InitCustomer) == 0x000100, "Wrong size on INTLSDKAPI_InitCustomer");
static_assert(offsetof(INTLSDKAPI_InitCustomer, UserProfile) == 0x000000, "Member 'INTLSDKAPI_InitCustomer::UserProfile' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.IsAppInstalled
// 0x0028 (0x0028 - 0x0000)
struct INTLSDKAPI_IsAppInstalled final
{
public:
	class FString                                 Channel;                                           // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ExtraJson;                                         // 0x0010(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(INTLSDKAPI_IsAppInstalled) == 0x000008, "Wrong alignment on INTLSDKAPI_IsAppInstalled");
static_assert(sizeof(INTLSDKAPI_IsAppInstalled) == 0x000028, "Wrong size on INTLSDKAPI_IsAppInstalled");
static_assert(offsetof(INTLSDKAPI_IsAppInstalled, Channel) == 0x000000, "Member 'INTLSDKAPI_IsAppInstalled::Channel' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_IsAppInstalled, ExtraJson) == 0x000010, "Member 'INTLSDKAPI_IsAppInstalled::ExtraJson' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_IsAppInstalled, ReturnValue) == 0x000020, "Member 'INTLSDKAPI_IsAppInstalled::ReturnValue' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.LaunchAccountUI
// 0x0020 (0x0020 - 0x0000)
struct INTLSDKAPI_LaunchAccountUI final
{
public:
	int32                                         Type;                                              // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ExtraJson;                                         // 0x0008(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(INTLSDKAPI_LaunchAccountUI) == 0x000008, "Wrong alignment on INTLSDKAPI_LaunchAccountUI");
static_assert(sizeof(INTLSDKAPI_LaunchAccountUI) == 0x000020, "Wrong size on INTLSDKAPI_LaunchAccountUI");
static_assert(offsetof(INTLSDKAPI_LaunchAccountUI, Type) == 0x000000, "Member 'INTLSDKAPI_LaunchAccountUI::Type' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_LaunchAccountUI, ExtraJson) == 0x000008, "Member 'INTLSDKAPI_LaunchAccountUI::ExtraJson' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_LaunchAccountUI, ReturnValue) == 0x000018, "Member 'INTLSDKAPI_LaunchAccountUI::ReturnValue' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.LogCrashInfo
// 0x0028 (0x0028 - 0x0000)
struct INTLSDKAPI_LogCrashInfo final
{
public:
	EINTLCrashLevel                               Level;                                             // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Tag;                                               // 0x0008(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Log;                                               // 0x0018(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLSDKAPI_LogCrashInfo) == 0x000008, "Wrong alignment on INTLSDKAPI_LogCrashInfo");
static_assert(sizeof(INTLSDKAPI_LogCrashInfo) == 0x000028, "Wrong size on INTLSDKAPI_LogCrashInfo");
static_assert(offsetof(INTLSDKAPI_LogCrashInfo, Level) == 0x000000, "Member 'INTLSDKAPI_LogCrashInfo::Level' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_LogCrashInfo, Tag) == 0x000008, "Member 'INTLSDKAPI_LogCrashInfo::Tag' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_LogCrashInfo, Log) == 0x000018, "Member 'INTLSDKAPI_LogCrashInfo::Log' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.Login
// 0x0030 (0x0030 - 0x0000)
struct INTLSDKAPI_Login final
{
public:
	EINTLLoginChannel                             Channel;                                           // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Permissions;                                       // 0x0008(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ExtraJson;                                         // 0x0018(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0028(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(INTLSDKAPI_Login) == 0x000008, "Wrong alignment on INTLSDKAPI_Login");
static_assert(sizeof(INTLSDKAPI_Login) == 0x000030, "Wrong size on INTLSDKAPI_Login");
static_assert(offsetof(INTLSDKAPI_Login, Channel) == 0x000000, "Member 'INTLSDKAPI_Login::Channel' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_Login, Permissions) == 0x000008, "Member 'INTLSDKAPI_Login::Permissions' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_Login, ExtraJson) == 0x000018, "Member 'INTLSDKAPI_Login::ExtraJson' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_Login, ReturnValue) == 0x000028, "Member 'INTLSDKAPI_Login::ReturnValue' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.LoginChannelOnly
// 0x0028 (0x0028 - 0x0000)
struct INTLSDKAPI_LoginChannelOnly final
{
public:
	EINTLLoginChannel                             Channel;                                           // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Permissions;                                       // 0x0008(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ExtraJson;                                         // 0x0018(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLSDKAPI_LoginChannelOnly) == 0x000008, "Wrong alignment on INTLSDKAPI_LoginChannelOnly");
static_assert(sizeof(INTLSDKAPI_LoginChannelOnly) == 0x000028, "Wrong size on INTLSDKAPI_LoginChannelOnly");
static_assert(offsetof(INTLSDKAPI_LoginChannelOnly, Channel) == 0x000000, "Member 'INTLSDKAPI_LoginChannelOnly::Channel' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_LoginChannelOnly, Permissions) == 0x000008, "Member 'INTLSDKAPI_LoginChannelOnly::Permissions' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_LoginChannelOnly, ExtraJson) == 0x000018, "Member 'INTLSDKAPI_LoginChannelOnly::ExtraJson' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.LoginChannelWithLIPASS
// 0x0028 (0x0028 - 0x0000)
struct INTLSDKAPI_LoginChannelWithLIPASS final
{
public:
	EINTLLoginChannel                             Channel;                                           // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Permissions;                                       // 0x0008(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ExtraJson;                                         // 0x0018(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLSDKAPI_LoginChannelWithLIPASS) == 0x000008, "Wrong alignment on INTLSDKAPI_LoginChannelWithLIPASS");
static_assert(sizeof(INTLSDKAPI_LoginChannelWithLIPASS) == 0x000028, "Wrong size on INTLSDKAPI_LoginChannelWithLIPASS");
static_assert(offsetof(INTLSDKAPI_LoginChannelWithLIPASS, Channel) == 0x000000, "Member 'INTLSDKAPI_LoginChannelWithLIPASS::Channel' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_LoginChannelWithLIPASS, Permissions) == 0x000008, "Member 'INTLSDKAPI_LoginChannelWithLIPASS::Permissions' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_LoginChannelWithLIPASS, ExtraJson) == 0x000018, "Member 'INTLSDKAPI_LoginChannelWithLIPASS::ExtraJson' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.LoginForLI
// 0x0030 (0x0030 - 0x0000)
struct INTLSDKAPI_LoginForLI final
{
public:
	EINTLLoginChannel                             Channel;                                           // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Permissions;                                       // 0x0008(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ExtraJson;                                         // 0x0018(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0028(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(INTLSDKAPI_LoginForLI) == 0x000008, "Wrong alignment on INTLSDKAPI_LoginForLI");
static_assert(sizeof(INTLSDKAPI_LoginForLI) == 0x000030, "Wrong size on INTLSDKAPI_LoginForLI");
static_assert(offsetof(INTLSDKAPI_LoginForLI, Channel) == 0x000000, "Member 'INTLSDKAPI_LoginForLI::Channel' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_LoginForLI, Permissions) == 0x000008, "Member 'INTLSDKAPI_LoginForLI::Permissions' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_LoginForLI, ExtraJson) == 0x000018, "Member 'INTLSDKAPI_LoginForLI::ExtraJson' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_LoginForLI, ReturnValue) == 0x000028, "Member 'INTLSDKAPI_LoginForLI::ReturnValue' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.LoginUsePluginCache
// 0x0004 (0x0004 - 0x0000)
struct INTLSDKAPI_LoginUsePluginCache final
{
public:
	int32                                         Request_mode;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLSDKAPI_LoginUsePluginCache) == 0x000004, "Wrong alignment on INTLSDKAPI_LoginUsePluginCache");
static_assert(sizeof(INTLSDKAPI_LoginUsePluginCache) == 0x000004, "Wrong size on INTLSDKAPI_LoginUsePluginCache");
static_assert(offsetof(INTLSDKAPI_LoginUsePluginCache, Request_mode) == 0x000000, "Member 'INTLSDKAPI_LoginUsePluginCache::Request_mode' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.LoginWithBoundChannel
// 0x0020 (0x0020 - 0x0000)
struct INTLSDKAPI_LoginWithBoundChannel final
{
public:
	EINTLLoginChannel                             Channel;                                           // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 LoginMode;                                         // 0x0008(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(INTLSDKAPI_LoginWithBoundChannel) == 0x000008, "Wrong alignment on INTLSDKAPI_LoginWithBoundChannel");
static_assert(sizeof(INTLSDKAPI_LoginWithBoundChannel) == 0x000020, "Wrong size on INTLSDKAPI_LoginWithBoundChannel");
static_assert(offsetof(INTLSDKAPI_LoginWithBoundChannel, Channel) == 0x000000, "Member 'INTLSDKAPI_LoginWithBoundChannel::Channel' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_LoginWithBoundChannel, LoginMode) == 0x000008, "Member 'INTLSDKAPI_LoginWithBoundChannel::LoginMode' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_LoginWithBoundChannel, ReturnValue) == 0x000018, "Member 'INTLSDKAPI_LoginWithBoundChannel::ReturnValue' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.LoginWithChannel
// 0x0020 (0x0020 - 0x0000)
struct INTLSDKAPI_LoginWithChannel final
{
public:
	EINTLLoginChannel                             Channel;                                           // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 LoginMode;                                         // 0x0008(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(INTLSDKAPI_LoginWithChannel) == 0x000008, "Wrong alignment on INTLSDKAPI_LoginWithChannel");
static_assert(sizeof(INTLSDKAPI_LoginWithChannel) == 0x000020, "Wrong size on INTLSDKAPI_LoginWithChannel");
static_assert(offsetof(INTLSDKAPI_LoginWithChannel, Channel) == 0x000000, "Member 'INTLSDKAPI_LoginWithChannel::Channel' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_LoginWithChannel, LoginMode) == 0x000008, "Member 'INTLSDKAPI_LoginWithChannel::LoginMode' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_LoginWithChannel, ReturnValue) == 0x000018, "Member 'INTLSDKAPI_LoginWithChannel::ReturnValue' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.LoginWithConfirmCode
// 0x0030 (0x0030 - 0x0000)
struct INTLSDKAPI_LoginWithConfirmCode final
{
public:
	int32                                         ActionType;                                        // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ConfirmCode;                                       // 0x0008(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ExtraJson;                                         // 0x0018(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0028(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(INTLSDKAPI_LoginWithConfirmCode) == 0x000008, "Wrong alignment on INTLSDKAPI_LoginWithConfirmCode");
static_assert(sizeof(INTLSDKAPI_LoginWithConfirmCode) == 0x000030, "Wrong size on INTLSDKAPI_LoginWithConfirmCode");
static_assert(offsetof(INTLSDKAPI_LoginWithConfirmCode, ActionType) == 0x000000, "Member 'INTLSDKAPI_LoginWithConfirmCode::ActionType' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_LoginWithConfirmCode, ConfirmCode) == 0x000008, "Member 'INTLSDKAPI_LoginWithConfirmCode::ConfirmCode' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_LoginWithConfirmCode, ExtraJson) == 0x000018, "Member 'INTLSDKAPI_LoginWithConfirmCode::ExtraJson' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_LoginWithConfirmCode, ReturnValue) == 0x000028, "Member 'INTLSDKAPI_LoginWithConfirmCode::ReturnValue' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.LoginWithConfirmCodeForMail
// 0x0030 (0x0030 - 0x0000)
struct INTLSDKAPI_LoginWithConfirmCodeForMail final
{
public:
	class FString                                 ChannelID;                                         // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ConfirmCode;                                       // 0x0010(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ExtraJson;                                         // 0x0020(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLSDKAPI_LoginWithConfirmCodeForMail) == 0x000008, "Wrong alignment on INTLSDKAPI_LoginWithConfirmCodeForMail");
static_assert(sizeof(INTLSDKAPI_LoginWithConfirmCodeForMail) == 0x000030, "Wrong size on INTLSDKAPI_LoginWithConfirmCodeForMail");
static_assert(offsetof(INTLSDKAPI_LoginWithConfirmCodeForMail, ChannelID) == 0x000000, "Member 'INTLSDKAPI_LoginWithConfirmCodeForMail::ChannelID' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_LoginWithConfirmCodeForMail, ConfirmCode) == 0x000010, "Member 'INTLSDKAPI_LoginWithConfirmCodeForMail::ConfirmCode' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_LoginWithConfirmCodeForMail, ExtraJson) == 0x000020, "Member 'INTLSDKAPI_LoginWithConfirmCodeForMail::ExtraJson' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.LoginWithMappedChannel
// 0x0030 (0x0030 - 0x0000)
struct INTLSDKAPI_LoginWithMappedChannel final
{
public:
	EINTLLoginChannel                             Channel;                                           // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 LoginMode;                                         // 0x0008(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Permissions;                                       // 0x0018(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0028(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(INTLSDKAPI_LoginWithMappedChannel) == 0x000008, "Wrong alignment on INTLSDKAPI_LoginWithMappedChannel");
static_assert(sizeof(INTLSDKAPI_LoginWithMappedChannel) == 0x000030, "Wrong size on INTLSDKAPI_LoginWithMappedChannel");
static_assert(offsetof(INTLSDKAPI_LoginWithMappedChannel, Channel) == 0x000000, "Member 'INTLSDKAPI_LoginWithMappedChannel::Channel' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_LoginWithMappedChannel, LoginMode) == 0x000008, "Member 'INTLSDKAPI_LoginWithMappedChannel::LoginMode' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_LoginWithMappedChannel, Permissions) == 0x000018, "Member 'INTLSDKAPI_LoginWithMappedChannel::Permissions' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_LoginWithMappedChannel, ReturnValue) == 0x000028, "Member 'INTLSDKAPI_LoginWithMappedChannel::ReturnValue' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.LoginWithPassword
// 0x0078 (0x0078 - 0x0000)
struct INTLSDKAPI_LoginWithPassword final
{
public:
	EINTLLoginChannel                             Channel;                                           // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Account;                                           // 0x0008(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Password;                                          // 0x0018(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 PhoneAreaCode;                                     // 0x0028(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 PermissionList;                                    // 0x0038(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SupportCaptcha;                                    // 0x0048(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MachineCheckType;                                  // 0x004C(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 TencentResponse;                                   // 0x0050(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 GoogleResponse;                                    // 0x0060(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0070(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(INTLSDKAPI_LoginWithPassword) == 0x000008, "Wrong alignment on INTLSDKAPI_LoginWithPassword");
static_assert(sizeof(INTLSDKAPI_LoginWithPassword) == 0x000078, "Wrong size on INTLSDKAPI_LoginWithPassword");
static_assert(offsetof(INTLSDKAPI_LoginWithPassword, Channel) == 0x000000, "Member 'INTLSDKAPI_LoginWithPassword::Channel' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_LoginWithPassword, Account) == 0x000008, "Member 'INTLSDKAPI_LoginWithPassword::Account' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_LoginWithPassword, Password) == 0x000018, "Member 'INTLSDKAPI_LoginWithPassword::Password' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_LoginWithPassword, PhoneAreaCode) == 0x000028, "Member 'INTLSDKAPI_LoginWithPassword::PhoneAreaCode' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_LoginWithPassword, PermissionList) == 0x000038, "Member 'INTLSDKAPI_LoginWithPassword::PermissionList' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_LoginWithPassword, SupportCaptcha) == 0x000048, "Member 'INTLSDKAPI_LoginWithPassword::SupportCaptcha' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_LoginWithPassword, MachineCheckType) == 0x00004C, "Member 'INTLSDKAPI_LoginWithPassword::MachineCheckType' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_LoginWithPassword, TencentResponse) == 0x000050, "Member 'INTLSDKAPI_LoginWithPassword::TencentResponse' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_LoginWithPassword, GoogleResponse) == 0x000060, "Member 'INTLSDKAPI_LoginWithPassword::GoogleResponse' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_LoginWithPassword, ReturnValue) == 0x000070, "Member 'INTLSDKAPI_LoginWithPassword::ReturnValue' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.LoginWithVerifyCode
// 0x0060 (0x0060 - 0x0000)
struct INTLSDKAPI_LoginWithVerifyCode final
{
public:
	EINTLLoginChannel                             Channel;                                           // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Account;                                           // 0x0008(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Password;                                          // 0x0018(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 VerifyCode;                                        // 0x0028(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 PhoneAreaCode;                                     // 0x0038(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 PermissionList;                                    // 0x0048(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         OnlyLoginType;                                     // 0x0058(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0059(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5A[0x6];                                       // 0x005A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(INTLSDKAPI_LoginWithVerifyCode) == 0x000008, "Wrong alignment on INTLSDKAPI_LoginWithVerifyCode");
static_assert(sizeof(INTLSDKAPI_LoginWithVerifyCode) == 0x000060, "Wrong size on INTLSDKAPI_LoginWithVerifyCode");
static_assert(offsetof(INTLSDKAPI_LoginWithVerifyCode, Channel) == 0x000000, "Member 'INTLSDKAPI_LoginWithVerifyCode::Channel' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_LoginWithVerifyCode, Account) == 0x000008, "Member 'INTLSDKAPI_LoginWithVerifyCode::Account' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_LoginWithVerifyCode, Password) == 0x000018, "Member 'INTLSDKAPI_LoginWithVerifyCode::Password' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_LoginWithVerifyCode, VerifyCode) == 0x000028, "Member 'INTLSDKAPI_LoginWithVerifyCode::VerifyCode' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_LoginWithVerifyCode, PhoneAreaCode) == 0x000038, "Member 'INTLSDKAPI_LoginWithVerifyCode::PhoneAreaCode' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_LoginWithVerifyCode, PermissionList) == 0x000048, "Member 'INTLSDKAPI_LoginWithVerifyCode::PermissionList' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_LoginWithVerifyCode, OnlyLoginType) == 0x000058, "Member 'INTLSDKAPI_LoginWithVerifyCode::OnlyLoginType' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_LoginWithVerifyCode, ReturnValue) == 0x000059, "Member 'INTLSDKAPI_LoginWithVerifyCode::ReturnValue' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.Logout
// 0x0003 (0x0003 - 0x0000)
struct INTLSDKAPI_Logout final
{
public:
	EINTLLoginChannel                             Channel;                                           // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ChannelOnly;                                       // 0x0001(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLSDKAPI_Logout) == 0x000001, "Wrong alignment on INTLSDKAPI_Logout");
static_assert(sizeof(INTLSDKAPI_Logout) == 0x000003, "Wrong size on INTLSDKAPI_Logout");
static_assert(offsetof(INTLSDKAPI_Logout, Channel) == 0x000000, "Member 'INTLSDKAPI_Logout::Channel' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_Logout, ChannelOnly) == 0x000001, "Member 'INTLSDKAPI_Logout::ChannelOnly' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_Logout, ReturnValue) == 0x000002, "Member 'INTLSDKAPI_Logout::ReturnValue' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.MarkSessionLoad
// 0x0020 (0x0020 - 0x0000)
struct INTLSDKAPI_MarkSessionLoad final
{
public:
	class FString                                 SessionName;                                       // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Extra_json;                                        // 0x0010(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLSDKAPI_MarkSessionLoad) == 0x000008, "Wrong alignment on INTLSDKAPI_MarkSessionLoad");
static_assert(sizeof(INTLSDKAPI_MarkSessionLoad) == 0x000020, "Wrong size on INTLSDKAPI_MarkSessionLoad");
static_assert(offsetof(INTLSDKAPI_MarkSessionLoad, SessionName) == 0x000000, "Member 'INTLSDKAPI_MarkSessionLoad::SessionName' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_MarkSessionLoad, Extra_json) == 0x000010, "Member 'INTLSDKAPI_MarkSessionLoad::Extra_json' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.ModifyAccountWithLoginState
// 0x0058 (0x0058 - 0x0000)
struct INTLSDKAPI_ModifyAccountWithLoginState final
{
public:
	class FString                                 OldPhoneAreaCode;                                  // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 NewAccount;                                        // 0x0010(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 NewAccountVerifyCode;                              // 0x0020(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 NewPhoneAreaCode;                                  // 0x0030(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ExtraJson;                                         // 0x0040(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0050(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(INTLSDKAPI_ModifyAccountWithLoginState) == 0x000008, "Wrong alignment on INTLSDKAPI_ModifyAccountWithLoginState");
static_assert(sizeof(INTLSDKAPI_ModifyAccountWithLoginState) == 0x000058, "Wrong size on INTLSDKAPI_ModifyAccountWithLoginState");
static_assert(offsetof(INTLSDKAPI_ModifyAccountWithLoginState, OldPhoneAreaCode) == 0x000000, "Member 'INTLSDKAPI_ModifyAccountWithLoginState::OldPhoneAreaCode' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_ModifyAccountWithLoginState, NewAccount) == 0x000010, "Member 'INTLSDKAPI_ModifyAccountWithLoginState::NewAccount' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_ModifyAccountWithLoginState, NewAccountVerifyCode) == 0x000020, "Member 'INTLSDKAPI_ModifyAccountWithLoginState::NewAccountVerifyCode' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_ModifyAccountWithLoginState, NewPhoneAreaCode) == 0x000030, "Member 'INTLSDKAPI_ModifyAccountWithLoginState::NewPhoneAreaCode' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_ModifyAccountWithLoginState, ExtraJson) == 0x000040, "Member 'INTLSDKAPI_ModifyAccountWithLoginState::ExtraJson' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_ModifyAccountWithLoginState, ReturnValue) == 0x000050, "Member 'INTLSDKAPI_ModifyAccountWithLoginState::ReturnValue' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.ModifyAccountWithPassword
// 0x0078 (0x0078 - 0x0000)
struct INTLSDKAPI_ModifyAccountWithPassword final
{
public:
	class FString                                 OldAccount;                                        // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 OldPhoneAreaCode;                                  // 0x0010(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Password;                                          // 0x0020(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 NewAccount;                                        // 0x0030(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 NewAccountVerifyCode;                              // 0x0040(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 NewPhoneAreaCode;                                  // 0x0050(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ExtraJson;                                         // 0x0060(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0070(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(INTLSDKAPI_ModifyAccountWithPassword) == 0x000008, "Wrong alignment on INTLSDKAPI_ModifyAccountWithPassword");
static_assert(sizeof(INTLSDKAPI_ModifyAccountWithPassword) == 0x000078, "Wrong size on INTLSDKAPI_ModifyAccountWithPassword");
static_assert(offsetof(INTLSDKAPI_ModifyAccountWithPassword, OldAccount) == 0x000000, "Member 'INTLSDKAPI_ModifyAccountWithPassword::OldAccount' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_ModifyAccountWithPassword, OldPhoneAreaCode) == 0x000010, "Member 'INTLSDKAPI_ModifyAccountWithPassword::OldPhoneAreaCode' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_ModifyAccountWithPassword, Password) == 0x000020, "Member 'INTLSDKAPI_ModifyAccountWithPassword::Password' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_ModifyAccountWithPassword, NewAccount) == 0x000030, "Member 'INTLSDKAPI_ModifyAccountWithPassword::NewAccount' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_ModifyAccountWithPassword, NewAccountVerifyCode) == 0x000040, "Member 'INTLSDKAPI_ModifyAccountWithPassword::NewAccountVerifyCode' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_ModifyAccountWithPassword, NewPhoneAreaCode) == 0x000050, "Member 'INTLSDKAPI_ModifyAccountWithPassword::NewPhoneAreaCode' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_ModifyAccountWithPassword, ExtraJson) == 0x000060, "Member 'INTLSDKAPI_ModifyAccountWithPassword::ExtraJson' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_ModifyAccountWithPassword, ReturnValue) == 0x000070, "Member 'INTLSDKAPI_ModifyAccountWithPassword::ReturnValue' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.ModifyAccountWithVerifyCode
// 0x0078 (0x0078 - 0x0000)
struct INTLSDKAPI_ModifyAccountWithVerifyCode final
{
public:
	class FString                                 OldAccount;                                        // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 OldAccountVerifyCode;                              // 0x0010(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 OldPhoneAreaCode;                                  // 0x0020(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 NewAccount;                                        // 0x0030(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 NewAccountVerifyCode;                              // 0x0040(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 NewPhoneAreaCode;                                  // 0x0050(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ExtraJson;                                         // 0x0060(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0070(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(INTLSDKAPI_ModifyAccountWithVerifyCode) == 0x000008, "Wrong alignment on INTLSDKAPI_ModifyAccountWithVerifyCode");
static_assert(sizeof(INTLSDKAPI_ModifyAccountWithVerifyCode) == 0x000078, "Wrong size on INTLSDKAPI_ModifyAccountWithVerifyCode");
static_assert(offsetof(INTLSDKAPI_ModifyAccountWithVerifyCode, OldAccount) == 0x000000, "Member 'INTLSDKAPI_ModifyAccountWithVerifyCode::OldAccount' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_ModifyAccountWithVerifyCode, OldAccountVerifyCode) == 0x000010, "Member 'INTLSDKAPI_ModifyAccountWithVerifyCode::OldAccountVerifyCode' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_ModifyAccountWithVerifyCode, OldPhoneAreaCode) == 0x000020, "Member 'INTLSDKAPI_ModifyAccountWithVerifyCode::OldPhoneAreaCode' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_ModifyAccountWithVerifyCode, NewAccount) == 0x000030, "Member 'INTLSDKAPI_ModifyAccountWithVerifyCode::NewAccount' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_ModifyAccountWithVerifyCode, NewAccountVerifyCode) == 0x000040, "Member 'INTLSDKAPI_ModifyAccountWithVerifyCode::NewAccountVerifyCode' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_ModifyAccountWithVerifyCode, NewPhoneAreaCode) == 0x000050, "Member 'INTLSDKAPI_ModifyAccountWithVerifyCode::NewPhoneAreaCode' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_ModifyAccountWithVerifyCode, ExtraJson) == 0x000060, "Member 'INTLSDKAPI_ModifyAccountWithVerifyCode::ExtraJson' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_ModifyAccountWithVerifyCode, ReturnValue) == 0x000070, "Member 'INTLSDKAPI_ModifyAccountWithVerifyCode::ReturnValue' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.ModifyDataProtectionAcceptance
// 0x0020 (0x0020 - 0x0000)
struct INTLSDKAPI_ModifyDataProtectionAcceptance final
{
public:
	class FString                                 PPVersion;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 TOSVersion;                                        // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLSDKAPI_ModifyDataProtectionAcceptance) == 0x000008, "Wrong alignment on INTLSDKAPI_ModifyDataProtectionAcceptance");
static_assert(sizeof(INTLSDKAPI_ModifyDataProtectionAcceptance) == 0x000020, "Wrong size on INTLSDKAPI_ModifyDataProtectionAcceptance");
static_assert(offsetof(INTLSDKAPI_ModifyDataProtectionAcceptance, PPVersion) == 0x000000, "Member 'INTLSDKAPI_ModifyDataProtectionAcceptance::PPVersion' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_ModifyDataProtectionAcceptance, TOSVersion) == 0x000010, "Member 'INTLSDKAPI_ModifyDataProtectionAcceptance::TOSVersion' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.ModifyDownloadPriority
// 0x0010 (0x0010 - 0x0000)
struct INTLSDKAPI_ModifyDownloadPriority final
{
public:
	int32                                         RepoID;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TaskId;                                            // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         DownloadPriority;                                  // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(INTLSDKAPI_ModifyDownloadPriority) == 0x000004, "Wrong alignment on INTLSDKAPI_ModifyDownloadPriority");
static_assert(sizeof(INTLSDKAPI_ModifyDownloadPriority) == 0x000010, "Wrong size on INTLSDKAPI_ModifyDownloadPriority");
static_assert(offsetof(INTLSDKAPI_ModifyDownloadPriority, RepoID) == 0x000000, "Member 'INTLSDKAPI_ModifyDownloadPriority::RepoID' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_ModifyDownloadPriority, TaskId) == 0x000004, "Member 'INTLSDKAPI_ModifyDownloadPriority::TaskId' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_ModifyDownloadPriority, DownloadPriority) == 0x000008, "Member 'INTLSDKAPI_ModifyDownloadPriority::DownloadPriority' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_ModifyDownloadPriority, ReturnValue) == 0x00000C, "Member 'INTLSDKAPI_ModifyDownloadPriority::ReturnValue' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.ModifyLegalDocumentsAcceptedVersion
// 0x0018 (0x0018 - 0x0000)
struct INTLSDKAPI_ModifyLegalDocumentsAcceptedVersion final
{
public:
	class FString                                 AcceptedVersionsJson;                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(INTLSDKAPI_ModifyLegalDocumentsAcceptedVersion) == 0x000008, "Wrong alignment on INTLSDKAPI_ModifyLegalDocumentsAcceptedVersion");
static_assert(sizeof(INTLSDKAPI_ModifyLegalDocumentsAcceptedVersion) == 0x000018, "Wrong size on INTLSDKAPI_ModifyLegalDocumentsAcceptedVersion");
static_assert(offsetof(INTLSDKAPI_ModifyLegalDocumentsAcceptedVersion, AcceptedVersionsJson) == 0x000000, "Member 'INTLSDKAPI_ModifyLegalDocumentsAcceptedVersion::AcceptedVersionsJson' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_ModifyLegalDocumentsAcceptedVersion, ReturnValue) == 0x000010, "Member 'INTLSDKAPI_ModifyLegalDocumentsAcceptedVersion::ReturnValue' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.ModifyProfile
// 0x00E0 (0x00E0 - 0x0000)
struct INTLSDKAPI_ModifyProfile final
{
public:
	struct FINTLAccountProfile                    UserProfile;                                       // 0x0000(0x00D8)(ConstParm, Parm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x00D8(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(INTLSDKAPI_ModifyProfile) == 0x000008, "Wrong alignment on INTLSDKAPI_ModifyProfile");
static_assert(sizeof(INTLSDKAPI_ModifyProfile) == 0x0000E0, "Wrong size on INTLSDKAPI_ModifyProfile");
static_assert(offsetof(INTLSDKAPI_ModifyProfile, UserProfile) == 0x000000, "Member 'INTLSDKAPI_ModifyProfile::UserProfile' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_ModifyProfile, ReturnValue) == 0x0000D8, "Member 'INTLSDKAPI_ModifyProfile::ReturnValue' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.NoticeRequestData
// 0x0040 (0x0040 - 0x0000)
struct INTLSDKAPI_NoticeRequestData final
{
public:
	class FString                                 Region;                                            // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 LangType;                                          // 0x0010(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ExtraJson;                                         // 0x0020(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0030(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLSDKAPI_NoticeRequestData) == 0x000008, "Wrong alignment on INTLSDKAPI_NoticeRequestData");
static_assert(sizeof(INTLSDKAPI_NoticeRequestData) == 0x000040, "Wrong size on INTLSDKAPI_NoticeRequestData");
static_assert(offsetof(INTLSDKAPI_NoticeRequestData, Region) == 0x000000, "Member 'INTLSDKAPI_NoticeRequestData::Region' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_NoticeRequestData, LangType) == 0x000010, "Member 'INTLSDKAPI_NoticeRequestData::LangType' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_NoticeRequestData, ExtraJson) == 0x000020, "Member 'INTLSDKAPI_NoticeRequestData::ExtraJson' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_NoticeRequestData, ReturnValue) == 0x000030, "Member 'INTLSDKAPI_NoticeRequestData::ReturnValue' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.OnTickEvent
// 0x0001 (0x0001 - 0x0000)
struct INTLSDKAPI_OnTickEvent final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLSDKAPI_OnTickEvent) == 0x000001, "Wrong alignment on INTLSDKAPI_OnTickEvent");
static_assert(sizeof(INTLSDKAPI_OnTickEvent) == 0x000001, "Wrong size on INTLSDKAPI_OnTickEvent");
static_assert(offsetof(INTLSDKAPI_OnTickEvent, ReturnValue) == 0x000000, "Member 'INTLSDKAPI_OnTickEvent::ReturnValue' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.OpenUnreadMessage
// 0x0020 (0x0020 - 0x0000)
struct INTLSDKAPI_OpenUnreadMessage final
{
public:
	class FString                                 Uid;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Push_token;                                        // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLSDKAPI_OpenUnreadMessage) == 0x000008, "Wrong alignment on INTLSDKAPI_OpenUnreadMessage");
static_assert(sizeof(INTLSDKAPI_OpenUnreadMessage) == 0x000020, "Wrong size on INTLSDKAPI_OpenUnreadMessage");
static_assert(offsetof(INTLSDKAPI_OpenUnreadMessage, Uid) == 0x000000, "Member 'INTLSDKAPI_OpenUnreadMessage::Uid' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_OpenUnreadMessage, Push_token) == 0x000010, "Member 'INTLSDKAPI_OpenUnreadMessage::Push_token' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.OpenUrl
// 0x0028 (0x0028 - 0x0000)
struct INTLSDKAPI_OpenUrl final
{
public:
	class FString                                 URL;                                               // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EINTLWebViewOrientation                       ScreenOrientation;                                 // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          FullScreenEnable;                                  // 0x0011(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          EncryptEnable;                                     // 0x0012(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          SystemBrowserEnable;                               // 0x0013(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ExtraJson;                                         // 0x0018(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLSDKAPI_OpenUrl) == 0x000008, "Wrong alignment on INTLSDKAPI_OpenUrl");
static_assert(sizeof(INTLSDKAPI_OpenUrl) == 0x000028, "Wrong size on INTLSDKAPI_OpenUrl");
static_assert(offsetof(INTLSDKAPI_OpenUrl, URL) == 0x000000, "Member 'INTLSDKAPI_OpenUrl::URL' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_OpenUrl, ScreenOrientation) == 0x000010, "Member 'INTLSDKAPI_OpenUrl::ScreenOrientation' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_OpenUrl, FullScreenEnable) == 0x000011, "Member 'INTLSDKAPI_OpenUrl::FullScreenEnable' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_OpenUrl, EncryptEnable) == 0x000012, "Member 'INTLSDKAPI_OpenUrl::EncryptEnable' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_OpenUrl, SystemBrowserEnable) == 0x000013, "Member 'INTLSDKAPI_OpenUrl::SystemBrowserEnable' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_OpenUrl, ExtraJson) == 0x000018, "Member 'INTLSDKAPI_OpenUrl::ExtraJson' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.PostFrameTimeInSession
// 0x0004 (0x0004 - 0x0000)
struct INTLSDKAPI_PostFrameTimeInSession final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLSDKAPI_PostFrameTimeInSession) == 0x000004, "Wrong alignment on INTLSDKAPI_PostFrameTimeInSession");
static_assert(sizeof(INTLSDKAPI_PostFrameTimeInSession) == 0x000004, "Wrong size on INTLSDKAPI_PostFrameTimeInSession");
static_assert(offsetof(INTLSDKAPI_PostFrameTimeInSession, DeltaSeconds) == 0x000000, "Member 'INTLSDKAPI_PostFrameTimeInSession::DeltaSeconds' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.PostNetworkLatencyInSession
// 0x0004 (0x0004 - 0x0000)
struct INTLSDKAPI_PostNetworkLatencyInSession final
{
public:
	int32                                         LatencyMs;                                         // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLSDKAPI_PostNetworkLatencyInSession) == 0x000004, "Wrong alignment on INTLSDKAPI_PostNetworkLatencyInSession");
static_assert(sizeof(INTLSDKAPI_PostNetworkLatencyInSession) == 0x000004, "Wrong size on INTLSDKAPI_PostNetworkLatencyInSession");
static_assert(offsetof(INTLSDKAPI_PostNetworkLatencyInSession, LatencyMs) == 0x000000, "Member 'INTLSDKAPI_PostNetworkLatencyInSession::LatencyMs' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.QueryAccountProfile
// 0x0001 (0x0001 - 0x0000)
struct INTLSDKAPI_QueryAccountProfile final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLSDKAPI_QueryAccountProfile) == 0x000001, "Wrong alignment on INTLSDKAPI_QueryAccountProfile");
static_assert(sizeof(INTLSDKAPI_QueryAccountProfile) == 0x000001, "Wrong size on INTLSDKAPI_QueryAccountProfile");
static_assert(offsetof(INTLSDKAPI_QueryAccountProfile, ReturnValue) == 0x000000, "Member 'INTLSDKAPI_QueryAccountProfile::ReturnValue' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.QueryAccountRegistrationInfo
// 0x0001 (0x0001 - 0x0000)
struct INTLSDKAPI_QueryAccountRegistrationInfo final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLSDKAPI_QueryAccountRegistrationInfo) == 0x000001, "Wrong alignment on INTLSDKAPI_QueryAccountRegistrationInfo");
static_assert(sizeof(INTLSDKAPI_QueryAccountRegistrationInfo) == 0x000001, "Wrong size on INTLSDKAPI_QueryAccountRegistrationInfo");
static_assert(offsetof(INTLSDKAPI_QueryAccountRegistrationInfo, ReturnValue) == 0x000000, "Member 'INTLSDKAPI_QueryAccountRegistrationInfo::ReturnValue' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.QueryActiveUser
// 0x0001 (0x0001 - 0x0000)
struct INTLSDKAPI_QueryActiveUser final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLSDKAPI_QueryActiveUser) == 0x000001, "Wrong alignment on INTLSDKAPI_QueryActiveUser");
static_assert(sizeof(INTLSDKAPI_QueryActiveUser) == 0x000001, "Wrong size on INTLSDKAPI_QueryActiveUser");
static_assert(offsetof(INTLSDKAPI_QueryActiveUser, ReturnValue) == 0x000000, "Member 'INTLSDKAPI_QueryActiveUser::ReturnValue' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.QueryBindInfo
// 0x0001 (0x0001 - 0x0000)
struct INTLSDKAPI_QueryBindInfo final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLSDKAPI_QueryBindInfo) == 0x000001, "Wrong alignment on INTLSDKAPI_QueryBindInfo");
static_assert(sizeof(INTLSDKAPI_QueryBindInfo) == 0x000001, "Wrong size on INTLSDKAPI_QueryBindInfo");
static_assert(offsetof(INTLSDKAPI_QueryBindInfo, ReturnValue) == 0x000000, "Member 'INTLSDKAPI_QueryBindInfo::ReturnValue' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.QueryBindRewardStatus
// 0x0010 (0x0010 - 0x0000)
struct INTLSDKAPI_QueryBindRewardStatus final
{
public:
	class FString                                 EventId;                                           // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLSDKAPI_QueryBindRewardStatus) == 0x000008, "Wrong alignment on INTLSDKAPI_QueryBindRewardStatus");
static_assert(sizeof(INTLSDKAPI_QueryBindRewardStatus) == 0x000010, "Wrong size on INTLSDKAPI_QueryBindRewardStatus");
static_assert(offsetof(INTLSDKAPI_QueryBindRewardStatus, EventId) == 0x000000, "Member 'INTLSDKAPI_QueryBindRewardStatus::EventId' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.QueryCanBind
// 0x0040 (0x0040 - 0x0000)
struct INTLSDKAPI_QueryCanBind final
{
public:
	int32                                         ChannelID;                                         // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         AccountPlatType;                                   // 0x0004(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Account;                                           // 0x0008(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 PhoneAreaCode;                                     // 0x0018(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ExtraJson;                                         // 0x0028(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(INTLSDKAPI_QueryCanBind) == 0x000008, "Wrong alignment on INTLSDKAPI_QueryCanBind");
static_assert(sizeof(INTLSDKAPI_QueryCanBind) == 0x000040, "Wrong size on INTLSDKAPI_QueryCanBind");
static_assert(offsetof(INTLSDKAPI_QueryCanBind, ChannelID) == 0x000000, "Member 'INTLSDKAPI_QueryCanBind::ChannelID' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_QueryCanBind, AccountPlatType) == 0x000004, "Member 'INTLSDKAPI_QueryCanBind::AccountPlatType' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_QueryCanBind, Account) == 0x000008, "Member 'INTLSDKAPI_QueryCanBind::Account' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_QueryCanBind, PhoneAreaCode) == 0x000018, "Member 'INTLSDKAPI_QueryCanBind::PhoneAreaCode' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_QueryCanBind, ExtraJson) == 0x000028, "Member 'INTLSDKAPI_QueryCanBind::ExtraJson' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_QueryCanBind, ReturnValue) == 0x000038, "Member 'INTLSDKAPI_QueryCanBind::ReturnValue' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.QueryDirNode
// 0x0008 (0x0008 - 0x0000)
struct INTLSDKAPI_QueryDirNode final
{
public:
	int32                                         TreeId;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         NodeID;                                            // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLSDKAPI_QueryDirNode) == 0x000004, "Wrong alignment on INTLSDKAPI_QueryDirNode");
static_assert(sizeof(INTLSDKAPI_QueryDirNode) == 0x000008, "Wrong size on INTLSDKAPI_QueryDirNode");
static_assert(offsetof(INTLSDKAPI_QueryDirNode, TreeId) == 0x000000, "Member 'INTLSDKAPI_QueryDirNode::TreeId' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_QueryDirNode, NodeID) == 0x000004, "Member 'INTLSDKAPI_QueryDirNode::NodeID' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.QueryDirTree
// 0x0004 (0x0004 - 0x0000)
struct INTLSDKAPI_QueryDirTree final
{
public:
	int32                                         TreeId;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLSDKAPI_QueryDirTree) == 0x000004, "Wrong alignment on INTLSDKAPI_QueryDirTree");
static_assert(sizeof(INTLSDKAPI_QueryDirTree) == 0x000004, "Wrong size on INTLSDKAPI_QueryDirTree");
static_assert(offsetof(INTLSDKAPI_QueryDirTree, TreeId) == 0x000000, "Member 'INTLSDKAPI_QueryDirTree::TreeId' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.QueryFriends
// 0x0028 (0x0028 - 0x0000)
struct INTLSDKAPI_QueryFriends final
{
public:
	EINTLLoginChannel                             Channel;                                           // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Page;                                              // 0x0004(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Count;                                             // 0x0008(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsInGame;                                          // 0x000C(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ExtraJson;                                         // 0x0010(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(INTLSDKAPI_QueryFriends) == 0x000008, "Wrong alignment on INTLSDKAPI_QueryFriends");
static_assert(sizeof(INTLSDKAPI_QueryFriends) == 0x000028, "Wrong size on INTLSDKAPI_QueryFriends");
static_assert(offsetof(INTLSDKAPI_QueryFriends, Channel) == 0x000000, "Member 'INTLSDKAPI_QueryFriends::Channel' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_QueryFriends, Page) == 0x000004, "Member 'INTLSDKAPI_QueryFriends::Page' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_QueryFriends, Count) == 0x000008, "Member 'INTLSDKAPI_QueryFriends::Count' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_QueryFriends, IsInGame) == 0x00000C, "Member 'INTLSDKAPI_QueryFriends::IsInGame' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_QueryFriends, ExtraJson) == 0x000010, "Member 'INTLSDKAPI_QueryFriends::ExtraJson' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_QueryFriends, ReturnValue) == 0x000020, "Member 'INTLSDKAPI_QueryFriends::ReturnValue' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.QueryIpByHost
// 0x0010 (0x0010 - 0x0000)
struct INTLSDKAPI_QueryIpByHost final
{
public:
	class FString                                 Host;                                              // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLSDKAPI_QueryIpByHost) == 0x000008, "Wrong alignment on INTLSDKAPI_QueryIpByHost");
static_assert(sizeof(INTLSDKAPI_QueryIpByHost) == 0x000010, "Wrong size on INTLSDKAPI_QueryIpByHost");
static_assert(offsetof(INTLSDKAPI_QueryIpByHost, Host) == 0x000000, "Member 'INTLSDKAPI_QueryIpByHost::Host' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.QueryIsEEA
// 0x0010 (0x0010 - 0x0000)
struct INTLSDKAPI_QueryIsEEA final
{
public:
	class FString                                 Region;                                            // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLSDKAPI_QueryIsEEA) == 0x000008, "Wrong alignment on INTLSDKAPI_QueryIsEEA");
static_assert(sizeof(INTLSDKAPI_QueryIsEEA) == 0x000010, "Wrong size on INTLSDKAPI_QueryIsEEA");
static_assert(offsetof(INTLSDKAPI_QueryIsEEA, Region) == 0x000000, "Member 'INTLSDKAPI_QueryIsEEA::Region' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.QueryIsReceiveEmail
// 0x0038 (0x0038 - 0x0000)
struct INTLSDKAPI_QueryIsReceiveEmail final
{
public:
	class FString                                 Account;                                           // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 PhoneAreaCode;                                     // 0x0010(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ExtraJson;                                         // 0x0020(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(INTLSDKAPI_QueryIsReceiveEmail) == 0x000008, "Wrong alignment on INTLSDKAPI_QueryIsReceiveEmail");
static_assert(sizeof(INTLSDKAPI_QueryIsReceiveEmail) == 0x000038, "Wrong size on INTLSDKAPI_QueryIsReceiveEmail");
static_assert(offsetof(INTLSDKAPI_QueryIsReceiveEmail, Account) == 0x000000, "Member 'INTLSDKAPI_QueryIsReceiveEmail::Account' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_QueryIsReceiveEmail, PhoneAreaCode) == 0x000010, "Member 'INTLSDKAPI_QueryIsReceiveEmail::PhoneAreaCode' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_QueryIsReceiveEmail, ExtraJson) == 0x000020, "Member 'INTLSDKAPI_QueryIsReceiveEmail::ExtraJson' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_QueryIsReceiveEmail, ReturnValue) == 0x000030, "Member 'INTLSDKAPI_QueryIsReceiveEmail::ReturnValue' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.QueryLegalDocumentsAcceptedVersion
// 0x0001 (0x0001 - 0x0000)
struct INTLSDKAPI_QueryLegalDocumentsAcceptedVersion final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLSDKAPI_QueryLegalDocumentsAcceptedVersion) == 0x000001, "Wrong alignment on INTLSDKAPI_QueryLegalDocumentsAcceptedVersion");
static_assert(sizeof(INTLSDKAPI_QueryLegalDocumentsAcceptedVersion) == 0x000001, "Wrong size on INTLSDKAPI_QueryLegalDocumentsAcceptedVersion");
static_assert(offsetof(INTLSDKAPI_QueryLegalDocumentsAcceptedVersion, ReturnValue) == 0x000000, "Member 'INTLSDKAPI_QueryLegalDocumentsAcceptedVersion::ReturnValue' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.QueryNeedUpgradeAndProvisionInfo
// 0x0001 (0x0001 - 0x0000)
struct INTLSDKAPI_QueryNeedUpgradeAndProvisionInfo final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLSDKAPI_QueryNeedUpgradeAndProvisionInfo) == 0x000001, "Wrong alignment on INTLSDKAPI_QueryNeedUpgradeAndProvisionInfo");
static_assert(sizeof(INTLSDKAPI_QueryNeedUpgradeAndProvisionInfo) == 0x000001, "Wrong size on INTLSDKAPI_QueryNeedUpgradeAndProvisionInfo");
static_assert(offsetof(INTLSDKAPI_QueryNeedUpgradeAndProvisionInfo, ReturnValue) == 0x000000, "Member 'INTLSDKAPI_QueryNeedUpgradeAndProvisionInfo::ReturnValue' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.QueryRegisterStatus
// 0x0038 (0x0038 - 0x0000)
struct INTLSDKAPI_QueryRegisterStatus final
{
public:
	class FString                                 Account;                                           // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 PhoneAreaCode;                                     // 0x0010(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ExtraJson;                                         // 0x0020(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(INTLSDKAPI_QueryRegisterStatus) == 0x000008, "Wrong alignment on INTLSDKAPI_QueryRegisterStatus");
static_assert(sizeof(INTLSDKAPI_QueryRegisterStatus) == 0x000038, "Wrong size on INTLSDKAPI_QueryRegisterStatus");
static_assert(offsetof(INTLSDKAPI_QueryRegisterStatus, Account) == 0x000000, "Member 'INTLSDKAPI_QueryRegisterStatus::Account' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_QueryRegisterStatus, PhoneAreaCode) == 0x000010, "Member 'INTLSDKAPI_QueryRegisterStatus::PhoneAreaCode' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_QueryRegisterStatus, ExtraJson) == 0x000020, "Member 'INTLSDKAPI_QueryRegisterStatus::ExtraJson' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_QueryRegisterStatus, ReturnValue) == 0x000030, "Member 'INTLSDKAPI_QueryRegisterStatus::ReturnValue' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.QueryRewardListStatus
// 0x0020 (0x0020 - 0x0000)
struct INTLSDKAPI_QueryRewardListStatus final
{
public:
	class FString                                 EventIds;                                          // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ExtraJson;                                         // 0x0010(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLSDKAPI_QueryRewardListStatus) == 0x000008, "Wrong alignment on INTLSDKAPI_QueryRewardListStatus");
static_assert(sizeof(INTLSDKAPI_QueryRewardListStatus) == 0x000020, "Wrong size on INTLSDKAPI_QueryRewardListStatus");
static_assert(offsetof(INTLSDKAPI_QueryRewardListStatus, EventIds) == 0x000000, "Member 'INTLSDKAPI_QueryRewardListStatus::EventIds' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_QueryRewardListStatus, ExtraJson) == 0x000010, "Member 'INTLSDKAPI_QueryRewardListStatus::ExtraJson' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.QueryUserInfo
// 0x0001 (0x0001 - 0x0000)
struct INTLSDKAPI_QueryUserInfo final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLSDKAPI_QueryUserInfo) == 0x000001, "Wrong alignment on INTLSDKAPI_QueryUserInfo");
static_assert(sizeof(INTLSDKAPI_QueryUserInfo) == 0x000001, "Wrong size on INTLSDKAPI_QueryUserInfo");
static_assert(offsetof(INTLSDKAPI_QueryUserInfo, ReturnValue) == 0x000000, "Member 'INTLSDKAPI_QueryUserInfo::ReturnValue' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.QueryUserInfoWithOpenId
// 0x0018 (0x0018 - 0x0000)
struct INTLSDKAPI_QueryUserInfoWithOpenId final
{
public:
	class FString                                 OpenID;                                            // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Is_openid;                                         // 0x0010(0x0001)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Channel_id;                                        // 0x0014(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLSDKAPI_QueryUserInfoWithOpenId) == 0x000008, "Wrong alignment on INTLSDKAPI_QueryUserInfoWithOpenId");
static_assert(sizeof(INTLSDKAPI_QueryUserInfoWithOpenId) == 0x000018, "Wrong size on INTLSDKAPI_QueryUserInfoWithOpenId");
static_assert(offsetof(INTLSDKAPI_QueryUserInfoWithOpenId, OpenID) == 0x000000, "Member 'INTLSDKAPI_QueryUserInfoWithOpenId::OpenID' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_QueryUserInfoWithOpenId, Is_openid) == 0x000010, "Member 'INTLSDKAPI_QueryUserInfoWithOpenId::Is_openid' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_QueryUserInfoWithOpenId, Channel_id) == 0x000014, "Member 'INTLSDKAPI_QueryUserInfoWithOpenId::Channel_id' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.QueryUserNameStatus
// 0x0010 (0x0010 - 0x0000)
struct INTLSDKAPI_QueryUserNameStatus final
{
public:
	class FString                                 UserName;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLSDKAPI_QueryUserNameStatus) == 0x000008, "Wrong alignment on INTLSDKAPI_QueryUserNameStatus");
static_assert(sizeof(INTLSDKAPI_QueryUserNameStatus) == 0x000010, "Wrong size on INTLSDKAPI_QueryUserNameStatus");
static_assert(offsetof(INTLSDKAPI_QueryUserNameStatus, UserName) == 0x000000, "Member 'INTLSDKAPI_QueryUserNameStatus::UserName' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.QueryVerifyCodeStatus
// 0x0050 (0x0050 - 0x0000)
struct INTLSDKAPI_QueryVerifyCodeStatus final
{
public:
	class FString                                 Account;                                           // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 VerifyCode;                                        // 0x0010(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EVerifyCodeType                               CodeType;                                          // 0x0020(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 PhoneAreaCode;                                     // 0x0028(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ExtraJson;                                         // 0x0038(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0048(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(INTLSDKAPI_QueryVerifyCodeStatus) == 0x000008, "Wrong alignment on INTLSDKAPI_QueryVerifyCodeStatus");
static_assert(sizeof(INTLSDKAPI_QueryVerifyCodeStatus) == 0x000050, "Wrong size on INTLSDKAPI_QueryVerifyCodeStatus");
static_assert(offsetof(INTLSDKAPI_QueryVerifyCodeStatus, Account) == 0x000000, "Member 'INTLSDKAPI_QueryVerifyCodeStatus::Account' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_QueryVerifyCodeStatus, VerifyCode) == 0x000010, "Member 'INTLSDKAPI_QueryVerifyCodeStatus::VerifyCode' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_QueryVerifyCodeStatus, CodeType) == 0x000020, "Member 'INTLSDKAPI_QueryVerifyCodeStatus::CodeType' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_QueryVerifyCodeStatus, PhoneAreaCode) == 0x000028, "Member 'INTLSDKAPI_QueryVerifyCodeStatus::PhoneAreaCode' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_QueryVerifyCodeStatus, ExtraJson) == 0x000038, "Member 'INTLSDKAPI_QueryVerifyCodeStatus::ExtraJson' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_QueryVerifyCodeStatus, ReturnValue) == 0x000048, "Member 'INTLSDKAPI_QueryVerifyCodeStatus::ReturnValue' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.Register
// 0x0120 (0x0120 - 0x0000)
struct INTLSDKAPI_Register final
{
public:
	class FString                                 Account;                                           // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Password;                                          // 0x0010(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 VerifyCode;                                        // 0x0020(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 PhoneAreaCode;                                     // 0x0030(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FINTLAccountProfile                    UserProfile;                                       // 0x0040(0x00D8)(ConstParm, Parm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0118(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_119[0x7];                                      // 0x0119(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(INTLSDKAPI_Register) == 0x000008, "Wrong alignment on INTLSDKAPI_Register");
static_assert(sizeof(INTLSDKAPI_Register) == 0x000120, "Wrong size on INTLSDKAPI_Register");
static_assert(offsetof(INTLSDKAPI_Register, Account) == 0x000000, "Member 'INTLSDKAPI_Register::Account' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_Register, Password) == 0x000010, "Member 'INTLSDKAPI_Register::Password' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_Register, VerifyCode) == 0x000020, "Member 'INTLSDKAPI_Register::VerifyCode' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_Register, PhoneAreaCode) == 0x000030, "Member 'INTLSDKAPI_Register::PhoneAreaCode' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_Register, UserProfile) == 0x000040, "Member 'INTLSDKAPI_Register::UserProfile' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_Register, ReturnValue) == 0x000118, "Member 'INTLSDKAPI_Register::ReturnValue' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.RegisterPush
// 0x0020 (0x0020 - 0x0000)
struct INTLSDKAPI_RegisterPush final
{
public:
	class FString                                 Channel;                                           // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Account;                                           // 0x0010(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLSDKAPI_RegisterPush) == 0x000008, "Wrong alignment on INTLSDKAPI_RegisterPush");
static_assert(sizeof(INTLSDKAPI_RegisterPush) == 0x000020, "Wrong size on INTLSDKAPI_RegisterPush");
static_assert(offsetof(INTLSDKAPI_RegisterPush, Channel) == 0x000000, "Member 'INTLSDKAPI_RegisterPush::Channel' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_RegisterPush, Account) == 0x000010, "Member 'INTLSDKAPI_RegisterPush::Account' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.RemoveCustomConfigKey
// 0x0028 (0x0028 - 0x0000)
struct INTLSDKAPI_RemoveCustomConfigKey final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Project;                                           // 0x0010(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(INTLSDKAPI_RemoveCustomConfigKey) == 0x000008, "Wrong alignment on INTLSDKAPI_RemoveCustomConfigKey");
static_assert(sizeof(INTLSDKAPI_RemoveCustomConfigKey) == 0x000028, "Wrong size on INTLSDKAPI_RemoveCustomConfigKey");
static_assert(offsetof(INTLSDKAPI_RemoveCustomConfigKey, Key) == 0x000000, "Member 'INTLSDKAPI_RemoveCustomConfigKey::Key' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_RemoveCustomConfigKey, Project) == 0x000010, "Member 'INTLSDKAPI_RemoveCustomConfigKey::Project' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_RemoveCustomConfigKey, ReturnValue) == 0x000020, "Member 'INTLSDKAPI_RemoveCustomConfigKey::ReturnValue' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.RemoveHostCache
// 0x0010 (0x0010 - 0x0000)
struct INTLSDKAPI_RemoveHostCache final
{
public:
	class FString                                 Host;                                              // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLSDKAPI_RemoveHostCache) == 0x000008, "Wrong alignment on INTLSDKAPI_RemoveHostCache");
static_assert(sizeof(INTLSDKAPI_RemoveHostCache) == 0x000010, "Wrong size on INTLSDKAPI_RemoveHostCache");
static_assert(offsetof(INTLSDKAPI_RemoveHostCache, Host) == 0x000000, "Member 'INTLSDKAPI_RemoveHostCache::Host' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.RemoveObserver
// 0x0010 (0x0010 - 0x0000)
struct INTLSDKAPI_RemoveObserver final
{
public:
	TScriptInterface<class IINTLPluginObserver>   Observer;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLSDKAPI_RemoveObserver) == 0x000008, "Wrong alignment on INTLSDKAPI_RemoveObserver");
static_assert(sizeof(INTLSDKAPI_RemoveObserver) == 0x000010, "Wrong size on INTLSDKAPI_RemoveObserver");
static_assert(offsetof(INTLSDKAPI_RemoveObserver, Observer) == 0x000000, "Member 'INTLSDKAPI_RemoveObserver::Observer' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.ReportBinary
// 0x0038 (0x0038 - 0x0000)
struct INTLSDKAPI_ReportBinary final
{
public:
	class FString                                 EventName;                                         // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Data;                                              // 0x0010(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Length;                                            // 0x0020(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 SpecificChannel;                                   // 0x0028(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLSDKAPI_ReportBinary) == 0x000008, "Wrong alignment on INTLSDKAPI_ReportBinary");
static_assert(sizeof(INTLSDKAPI_ReportBinary) == 0x000038, "Wrong size on INTLSDKAPI_ReportBinary");
static_assert(offsetof(INTLSDKAPI_ReportBinary, EventName) == 0x000000, "Member 'INTLSDKAPI_ReportBinary::EventName' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_ReportBinary, Data) == 0x000010, "Member 'INTLSDKAPI_ReportBinary::Data' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_ReportBinary, Length) == 0x000020, "Member 'INTLSDKAPI_ReportBinary::Length' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_ReportBinary, SpecificChannel) == 0x000028, "Member 'INTLSDKAPI_ReportBinary::SpecificChannel' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.ReportCustomEventStep
// 0x0080 (0x0080 - 0x0000)
struct INTLSDKAPI_ReportCustomEventStep final
{
public:
	class FString                                 EventName;                                         // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Step;                                              // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 StepName;                                          // 0x0018(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Result;                                            // 0x0028(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ErrorCode;                                         // 0x002C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class FString, class FString>            ParamsMap;                                         // 0x0030(0x0050)(ConstParm, Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLSDKAPI_ReportCustomEventStep) == 0x000008, "Wrong alignment on INTLSDKAPI_ReportCustomEventStep");
static_assert(sizeof(INTLSDKAPI_ReportCustomEventStep) == 0x000080, "Wrong size on INTLSDKAPI_ReportCustomEventStep");
static_assert(offsetof(INTLSDKAPI_ReportCustomEventStep, EventName) == 0x000000, "Member 'INTLSDKAPI_ReportCustomEventStep::EventName' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_ReportCustomEventStep, Step) == 0x000010, "Member 'INTLSDKAPI_ReportCustomEventStep::Step' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_ReportCustomEventStep, StepName) == 0x000018, "Member 'INTLSDKAPI_ReportCustomEventStep::StepName' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_ReportCustomEventStep, Result) == 0x000028, "Member 'INTLSDKAPI_ReportCustomEventStep::Result' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_ReportCustomEventStep, ErrorCode) == 0x00002C, "Member 'INTLSDKAPI_ReportCustomEventStep::ErrorCode' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_ReportCustomEventStep, ParamsMap) == 0x000030, "Member 'INTLSDKAPI_ReportCustomEventStep::ParamsMap' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.ReportEvent
// 0x0080 (0x0080 - 0x0000)
struct INTLSDKAPI_ReportEvent final
{
public:
	class FString                                 EventName;                                         // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class FString, class FString>            ParamsMap;                                         // 0x0010(0x0050)(Parm, NativeAccessSpecifierPublic)
	class FString                                 SpecificChannel;                                   // 0x0060(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ExtraJson;                                         // 0x0070(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLSDKAPI_ReportEvent) == 0x000008, "Wrong alignment on INTLSDKAPI_ReportEvent");
static_assert(sizeof(INTLSDKAPI_ReportEvent) == 0x000080, "Wrong size on INTLSDKAPI_ReportEvent");
static_assert(offsetof(INTLSDKAPI_ReportEvent, EventName) == 0x000000, "Member 'INTLSDKAPI_ReportEvent::EventName' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_ReportEvent, ParamsMap) == 0x000010, "Member 'INTLSDKAPI_ReportEvent::ParamsMap' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_ReportEvent, SpecificChannel) == 0x000060, "Member 'INTLSDKAPI_ReportEvent::SpecificChannel' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_ReportEvent, ExtraJson) == 0x000070, "Member 'INTLSDKAPI_ReportEvent::ExtraJson' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.ReportException
// 0x0088 (0x0088 - 0x0000)
struct INTLSDKAPI_ReportException final
{
public:
	int32                                         Type;                                              // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ExceptionName;                                     // 0x0008(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ExceptionMsg;                                      // 0x0018(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ExceptionStack;                                    // 0x0028(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class FString, class FString>            ExtInfo;                                           // 0x0038(0x0050)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLSDKAPI_ReportException) == 0x000008, "Wrong alignment on INTLSDKAPI_ReportException");
static_assert(sizeof(INTLSDKAPI_ReportException) == 0x000088, "Wrong size on INTLSDKAPI_ReportException");
static_assert(offsetof(INTLSDKAPI_ReportException, Type) == 0x000000, "Member 'INTLSDKAPI_ReportException::Type' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_ReportException, ExceptionName) == 0x000008, "Member 'INTLSDKAPI_ReportException::ExceptionName' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_ReportException, ExceptionMsg) == 0x000018, "Member 'INTLSDKAPI_ReportException::ExceptionMsg' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_ReportException, ExceptionStack) == 0x000028, "Member 'INTLSDKAPI_ReportException::ExceptionStack' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_ReportException, ExtInfo) == 0x000038, "Member 'INTLSDKAPI_ReportException::ExtInfo' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.ReportFunnel
// 0x0008 (0x0008 - 0x0000)
struct INTLSDKAPI_ReportFunnel final
{
public:
	EFINTLFunnelStep                              Step_name;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Error_code;                                        // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLSDKAPI_ReportFunnel) == 0x000004, "Wrong alignment on INTLSDKAPI_ReportFunnel");
static_assert(sizeof(INTLSDKAPI_ReportFunnel) == 0x000008, "Wrong size on INTLSDKAPI_ReportFunnel");
static_assert(offsetof(INTLSDKAPI_ReportFunnel, Step_name) == 0x000000, "Member 'INTLSDKAPI_ReportFunnel::Step_name' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_ReportFunnel, Error_code) == 0x000004, "Member 'INTLSDKAPI_ReportFunnel::Error_code' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.ReportFunnelCustomEvent
// 0x0028 (0x0028 - 0x0000)
struct INTLSDKAPI_ReportFunnelCustomEvent final
{
public:
	class FString                                 L1_event_name;                                     // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 L2_event_name;                                     // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Error_code;                                        // 0x0020(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(INTLSDKAPI_ReportFunnelCustomEvent) == 0x000008, "Wrong alignment on INTLSDKAPI_ReportFunnelCustomEvent");
static_assert(sizeof(INTLSDKAPI_ReportFunnelCustomEvent) == 0x000028, "Wrong size on INTLSDKAPI_ReportFunnelCustomEvent");
static_assert(offsetof(INTLSDKAPI_ReportFunnelCustomEvent, L1_event_name) == 0x000000, "Member 'INTLSDKAPI_ReportFunnelCustomEvent::L1_event_name' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_ReportFunnelCustomEvent, L2_event_name) == 0x000010, "Member 'INTLSDKAPI_ReportFunnelCustomEvent::L2_event_name' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_ReportFunnelCustomEvent, Error_code) == 0x000020, "Member 'INTLSDKAPI_ReportFunnelCustomEvent::Error_code' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.ReportFunnelCustomEventWithCustomField
// 0x0078 (0x0078 - 0x0000)
struct INTLSDKAPI_ReportFunnelCustomEventWithCustomField final
{
public:
	class FString                                 L1_event_name;                                     // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 L2_event_name;                                     // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Error_code;                                        // 0x0020(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FString, class FString>            Params_map;                                        // 0x0028(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLSDKAPI_ReportFunnelCustomEventWithCustomField) == 0x000008, "Wrong alignment on INTLSDKAPI_ReportFunnelCustomEventWithCustomField");
static_assert(sizeof(INTLSDKAPI_ReportFunnelCustomEventWithCustomField) == 0x000078, "Wrong size on INTLSDKAPI_ReportFunnelCustomEventWithCustomField");
static_assert(offsetof(INTLSDKAPI_ReportFunnelCustomEventWithCustomField, L1_event_name) == 0x000000, "Member 'INTLSDKAPI_ReportFunnelCustomEventWithCustomField::L1_event_name' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_ReportFunnelCustomEventWithCustomField, L2_event_name) == 0x000010, "Member 'INTLSDKAPI_ReportFunnelCustomEventWithCustomField::L2_event_name' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_ReportFunnelCustomEventWithCustomField, Error_code) == 0x000020, "Member 'INTLSDKAPI_ReportFunnelCustomEventWithCustomField::Error_code' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_ReportFunnelCustomEventWithCustomField, Params_map) == 0x000028, "Member 'INTLSDKAPI_ReportFunnelCustomEventWithCustomField::Params_map' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.ReportFunnelWithCustomField
// 0x0058 (0x0058 - 0x0000)
struct INTLSDKAPI_ReportFunnelWithCustomField final
{
public:
	EFINTLFunnelStep                              Step_name;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Error_code;                                        // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class FString, class FString>            Params_map;                                        // 0x0008(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLSDKAPI_ReportFunnelWithCustomField) == 0x000008, "Wrong alignment on INTLSDKAPI_ReportFunnelWithCustomField");
static_assert(sizeof(INTLSDKAPI_ReportFunnelWithCustomField) == 0x000058, "Wrong size on INTLSDKAPI_ReportFunnelWithCustomField");
static_assert(offsetof(INTLSDKAPI_ReportFunnelWithCustomField, Step_name) == 0x000000, "Member 'INTLSDKAPI_ReportFunnelWithCustomField::Step_name' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_ReportFunnelWithCustomField, Error_code) == 0x000004, "Member 'INTLSDKAPI_ReportFunnelWithCustomField::Error_code' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_ReportFunnelWithCustomField, Params_map) == 0x000008, "Member 'INTLSDKAPI_ReportFunnelWithCustomField::Params_map' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.ReportLoginStep
// 0x0070 (0x0070 - 0x0000)
struct INTLSDKAPI_ReportLoginStep final
{
public:
	int32                                         Step;                                              // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 StepName;                                          // 0x0008(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Result;                                            // 0x0018(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ErrorCode;                                         // 0x001C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class FString, class FString>            ParamsMap;                                         // 0x0020(0x0050)(ConstParm, Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLSDKAPI_ReportLoginStep) == 0x000008, "Wrong alignment on INTLSDKAPI_ReportLoginStep");
static_assert(sizeof(INTLSDKAPI_ReportLoginStep) == 0x000070, "Wrong size on INTLSDKAPI_ReportLoginStep");
static_assert(offsetof(INTLSDKAPI_ReportLoginStep, Step) == 0x000000, "Member 'INTLSDKAPI_ReportLoginStep::Step' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_ReportLoginStep, StepName) == 0x000008, "Member 'INTLSDKAPI_ReportLoginStep::StepName' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_ReportLoginStep, Result) == 0x000018, "Member 'INTLSDKAPI_ReportLoginStep::Result' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_ReportLoginStep, ErrorCode) == 0x00001C, "Member 'INTLSDKAPI_ReportLoginStep::ErrorCode' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_ReportLoginStep, ParamsMap) == 0x000020, "Member 'INTLSDKAPI_ReportLoginStep::ParamsMap' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.ReportPayStep
// 0x0070 (0x0070 - 0x0000)
struct INTLSDKAPI_ReportPayStep final
{
public:
	int32                                         Step;                                              // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 StepName;                                          // 0x0008(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Result;                                            // 0x0018(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ErrorCode;                                         // 0x001C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class FString, class FString>            ParamsMap;                                         // 0x0020(0x0050)(ConstParm, Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLSDKAPI_ReportPayStep) == 0x000008, "Wrong alignment on INTLSDKAPI_ReportPayStep");
static_assert(sizeof(INTLSDKAPI_ReportPayStep) == 0x000070, "Wrong size on INTLSDKAPI_ReportPayStep");
static_assert(offsetof(INTLSDKAPI_ReportPayStep, Step) == 0x000000, "Member 'INTLSDKAPI_ReportPayStep::Step' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_ReportPayStep, StepName) == 0x000008, "Member 'INTLSDKAPI_ReportPayStep::StepName' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_ReportPayStep, Result) == 0x000018, "Member 'INTLSDKAPI_ReportPayStep::Result' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_ReportPayStep, ErrorCode) == 0x00001C, "Member 'INTLSDKAPI_ReportPayStep::ErrorCode' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_ReportPayStep, ParamsMap) == 0x000020, "Member 'INTLSDKAPI_ReportPayStep::ParamsMap' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.ReportRevenue
// 0x00A0 (0x00A0 - 0x0000)
struct INTLSDKAPI_ReportRevenue final
{
public:
	class FString                                 EventName;                                         // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Currency;                                          // 0x0010(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 RevenueValue;                                      // 0x0020(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class FString, class FString>            ParamsMap;                                         // 0x0030(0x0050)(Parm, NativeAccessSpecifierPublic)
	class FString                                 SpecificChannel;                                   // 0x0080(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ExtraJson;                                         // 0x0090(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLSDKAPI_ReportRevenue) == 0x000008, "Wrong alignment on INTLSDKAPI_ReportRevenue");
static_assert(sizeof(INTLSDKAPI_ReportRevenue) == 0x0000A0, "Wrong size on INTLSDKAPI_ReportRevenue");
static_assert(offsetof(INTLSDKAPI_ReportRevenue, EventName) == 0x000000, "Member 'INTLSDKAPI_ReportRevenue::EventName' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_ReportRevenue, Currency) == 0x000010, "Member 'INTLSDKAPI_ReportRevenue::Currency' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_ReportRevenue, RevenueValue) == 0x000020, "Member 'INTLSDKAPI_ReportRevenue::RevenueValue' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_ReportRevenue, ParamsMap) == 0x000030, "Member 'INTLSDKAPI_ReportRevenue::ParamsMap' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_ReportRevenue, SpecificChannel) == 0x000080, "Member 'INTLSDKAPI_ReportRevenue::SpecificChannel' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_ReportRevenue, ExtraJson) == 0x000090, "Member 'INTLSDKAPI_ReportRevenue::ExtraJson' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.RequestAccountInfo
// 0x0010 (0x0010 - 0x0000)
struct INTLSDKAPI_RequestAccountInfo final
{
public:
	class FString                                 ExtraJson;                                         // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLSDKAPI_RequestAccountInfo) == 0x000008, "Wrong alignment on INTLSDKAPI_RequestAccountInfo");
static_assert(sizeof(INTLSDKAPI_RequestAccountInfo) == 0x000010, "Wrong size on INTLSDKAPI_RequestAccountInfo");
static_assert(offsetof(INTLSDKAPI_RequestAccountInfo, ExtraJson) == 0x000000, "Member 'INTLSDKAPI_RequestAccountInfo::ExtraJson' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.RequestBindDataForAccount
// 0x0030 (0x0030 - 0x0000)
struct INTLSDKAPI_RequestBindDataForAccount final
{
public:
	class FString                                 Uid;                                               // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Token;                                             // 0x0010(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ExtraJson;                                         // 0x0020(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLSDKAPI_RequestBindDataForAccount) == 0x000008, "Wrong alignment on INTLSDKAPI_RequestBindDataForAccount");
static_assert(sizeof(INTLSDKAPI_RequestBindDataForAccount) == 0x000030, "Wrong size on INTLSDKAPI_RequestBindDataForAccount");
static_assert(offsetof(INTLSDKAPI_RequestBindDataForAccount, Uid) == 0x000000, "Member 'INTLSDKAPI_RequestBindDataForAccount::Uid' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_RequestBindDataForAccount, Token) == 0x000010, "Member 'INTLSDKAPI_RequestBindDataForAccount::Token' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_RequestBindDataForAccount, ExtraJson) == 0x000020, "Member 'INTLSDKAPI_RequestBindDataForAccount::ExtraJson' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.RequestGetRecentLoginDays
// 0x0020 (0x0020 - 0x0000)
struct INTLSDKAPI_RequestGetRecentLoginDays final
{
public:
	class FString                                 RecentDay;                                         // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ExtraJson;                                         // 0x0010(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLSDKAPI_RequestGetRecentLoginDays) == 0x000008, "Wrong alignment on INTLSDKAPI_RequestGetRecentLoginDays");
static_assert(sizeof(INTLSDKAPI_RequestGetRecentLoginDays) == 0x000020, "Wrong size on INTLSDKAPI_RequestGetRecentLoginDays");
static_assert(offsetof(INTLSDKAPI_RequestGetRecentLoginDays, RecentDay) == 0x000000, "Member 'INTLSDKAPI_RequestGetRecentLoginDays::RecentDay' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_RequestGetRecentLoginDays, ExtraJson) == 0x000010, "Member 'INTLSDKAPI_RequestGetRecentLoginDays::ExtraJson' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.RequestPermission
// 0x0010 (0x0010 - 0x0000)
struct INTLSDKAPI_RequestPermission final
{
public:
	TArray<EPermissionType>                       PermissionTypeArray;                               // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLSDKAPI_RequestPermission) == 0x000008, "Wrong alignment on INTLSDKAPI_RequestPermission");
static_assert(sizeof(INTLSDKAPI_RequestPermission) == 0x000010, "Wrong size on INTLSDKAPI_RequestPermission");
static_assert(offsetof(INTLSDKAPI_RequestPermission, PermissionTypeArray) == 0x000000, "Member 'INTLSDKAPI_RequestPermission::PermissionTypeArray' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.RequestVerifyCode
// 0x0040 (0x0040 - 0x0000)
struct INTLSDKAPI_RequestVerifyCode final
{
public:
	class FString                                 Account;                                           // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EVerifyCodeType                               CodeType;                                          // 0x0010(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 PhoneAreaCode;                                     // 0x0018(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ExtraJson;                                         // 0x0028(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         OnlyLoginType;                                     // 0x0038(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x003C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(INTLSDKAPI_RequestVerifyCode) == 0x000008, "Wrong alignment on INTLSDKAPI_RequestVerifyCode");
static_assert(sizeof(INTLSDKAPI_RequestVerifyCode) == 0x000040, "Wrong size on INTLSDKAPI_RequestVerifyCode");
static_assert(offsetof(INTLSDKAPI_RequestVerifyCode, Account) == 0x000000, "Member 'INTLSDKAPI_RequestVerifyCode::Account' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_RequestVerifyCode, CodeType) == 0x000010, "Member 'INTLSDKAPI_RequestVerifyCode::CodeType' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_RequestVerifyCode, PhoneAreaCode) == 0x000018, "Member 'INTLSDKAPI_RequestVerifyCode::PhoneAreaCode' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_RequestVerifyCode, ExtraJson) == 0x000028, "Member 'INTLSDKAPI_RequestVerifyCode::ExtraJson' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_RequestVerifyCode, OnlyLoginType) == 0x000038, "Member 'INTLSDKAPI_RequestVerifyCode::OnlyLoginType' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_RequestVerifyCode, ReturnValue) == 0x00003C, "Member 'INTLSDKAPI_RequestVerifyCode::ReturnValue' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.ResetGuest
// 0x0001 (0x0001 - 0x0000)
struct INTLSDKAPI_ResetGuest final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLSDKAPI_ResetGuest) == 0x000001, "Wrong alignment on INTLSDKAPI_ResetGuest");
static_assert(sizeof(INTLSDKAPI_ResetGuest) == 0x000001, "Wrong size on INTLSDKAPI_ResetGuest");
static_assert(offsetof(INTLSDKAPI_ResetGuest, ReturnValue) == 0x000000, "Member 'INTLSDKAPI_ResetGuest::ReturnValue' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.ResetPasswordWithOldPassword
// 0x0058 (0x0058 - 0x0000)
struct INTLSDKAPI_ResetPasswordWithOldPassword final
{
public:
	class FString                                 Account;                                           // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 OldPassword;                                       // 0x0010(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 PhoneAreaCode;                                     // 0x0020(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 NewPassword;                                       // 0x0030(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ExtraJson;                                         // 0x0040(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0050(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(INTLSDKAPI_ResetPasswordWithOldPassword) == 0x000008, "Wrong alignment on INTLSDKAPI_ResetPasswordWithOldPassword");
static_assert(sizeof(INTLSDKAPI_ResetPasswordWithOldPassword) == 0x000058, "Wrong size on INTLSDKAPI_ResetPasswordWithOldPassword");
static_assert(offsetof(INTLSDKAPI_ResetPasswordWithOldPassword, Account) == 0x000000, "Member 'INTLSDKAPI_ResetPasswordWithOldPassword::Account' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_ResetPasswordWithOldPassword, OldPassword) == 0x000010, "Member 'INTLSDKAPI_ResetPasswordWithOldPassword::OldPassword' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_ResetPasswordWithOldPassword, PhoneAreaCode) == 0x000020, "Member 'INTLSDKAPI_ResetPasswordWithOldPassword::PhoneAreaCode' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_ResetPasswordWithOldPassword, NewPassword) == 0x000030, "Member 'INTLSDKAPI_ResetPasswordWithOldPassword::NewPassword' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_ResetPasswordWithOldPassword, ExtraJson) == 0x000040, "Member 'INTLSDKAPI_ResetPasswordWithOldPassword::ExtraJson' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_ResetPasswordWithOldPassword, ReturnValue) == 0x000050, "Member 'INTLSDKAPI_ResetPasswordWithOldPassword::ReturnValue' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.ResetPasswordWithVerifyCode
// 0x0058 (0x0058 - 0x0000)
struct INTLSDKAPI_ResetPasswordWithVerifyCode final
{
public:
	class FString                                 Account;                                           // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 VerifyCode;                                        // 0x0010(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 PhoneAreaCode;                                     // 0x0020(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 NewPassword;                                       // 0x0030(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ExtraJson;                                         // 0x0040(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0050(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(INTLSDKAPI_ResetPasswordWithVerifyCode) == 0x000008, "Wrong alignment on INTLSDKAPI_ResetPasswordWithVerifyCode");
static_assert(sizeof(INTLSDKAPI_ResetPasswordWithVerifyCode) == 0x000058, "Wrong size on INTLSDKAPI_ResetPasswordWithVerifyCode");
static_assert(offsetof(INTLSDKAPI_ResetPasswordWithVerifyCode, Account) == 0x000000, "Member 'INTLSDKAPI_ResetPasswordWithVerifyCode::Account' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_ResetPasswordWithVerifyCode, VerifyCode) == 0x000010, "Member 'INTLSDKAPI_ResetPasswordWithVerifyCode::VerifyCode' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_ResetPasswordWithVerifyCode, PhoneAreaCode) == 0x000020, "Member 'INTLSDKAPI_ResetPasswordWithVerifyCode::PhoneAreaCode' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_ResetPasswordWithVerifyCode, NewPassword) == 0x000030, "Member 'INTLSDKAPI_ResetPasswordWithVerifyCode::NewPassword' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_ResetPasswordWithVerifyCode, ExtraJson) == 0x000040, "Member 'INTLSDKAPI_ResetPasswordWithVerifyCode::ExtraJson' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_ResetPasswordWithVerifyCode, ReturnValue) == 0x000050, "Member 'INTLSDKAPI_ResetPasswordWithVerifyCode::ReturnValue' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.SendBindReward
// 0x0020 (0x0020 - 0x0000)
struct INTLSDKAPI_SendBindReward final
{
public:
	class FString                                 EventId;                                           // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ExtraJson;                                         // 0x0010(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLSDKAPI_SendBindReward) == 0x000008, "Wrong alignment on INTLSDKAPI_SendBindReward");
static_assert(sizeof(INTLSDKAPI_SendBindReward) == 0x000020, "Wrong size on INTLSDKAPI_SendBindReward");
static_assert(offsetof(INTLSDKAPI_SendBindReward, EventId) == 0x000000, "Member 'INTLSDKAPI_SendBindReward::EventId' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_SendBindReward, ExtraJson) == 0x000010, "Member 'INTLSDKAPI_SendBindReward::ExtraJson' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.SendMessage
// 0x00A0 (0x00A0 - 0x0000)
struct INTLSDKAPI_SendMessage final
{
public:
	struct FINTLFriendReqInfo                     Info;                                              // 0x0000(0x0088)(ConstParm, Parm, NativeAccessSpecifierPublic)
	class FString                                 Channel;                                           // 0x0088(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0098(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(INTLSDKAPI_SendMessage) == 0x000008, "Wrong alignment on INTLSDKAPI_SendMessage");
static_assert(sizeof(INTLSDKAPI_SendMessage) == 0x0000A0, "Wrong size on INTLSDKAPI_SendMessage");
static_assert(offsetof(INTLSDKAPI_SendMessage, Info) == 0x000000, "Member 'INTLSDKAPI_SendMessage::Info' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_SendMessage, Channel) == 0x000088, "Member 'INTLSDKAPI_SendMessage::Channel' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_SendMessage, ReturnValue) == 0x000098, "Member 'INTLSDKAPI_SendMessage::ReturnValue' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.SendWebSocketMsg
// 0x0020 (0x0020 - 0x0000)
struct INTLSDKAPI_SendWebSocketMsg final
{
public:
	class FString                                 URL;                                               // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Msg_content;                                       // 0x0010(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLSDKAPI_SendWebSocketMsg) == 0x000008, "Wrong alignment on INTLSDKAPI_SendWebSocketMsg");
static_assert(sizeof(INTLSDKAPI_SendWebSocketMsg) == 0x000020, "Wrong size on INTLSDKAPI_SendWebSocketMsg");
static_assert(offsetof(INTLSDKAPI_SendWebSocketMsg, URL) == 0x000000, "Member 'INTLSDKAPI_SendWebSocketMsg::URL' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_SendWebSocketMsg, Msg_content) == 0x000010, "Member 'INTLSDKAPI_SendWebSocketMsg::Msg_content' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.SetAccountInfo
// 0x0020 (0x0020 - 0x0000)
struct INTLSDKAPI_SetAccountInfo final
{
public:
	EINTLLoginChannel                             Channel;                                           // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ChannelID;                                         // 0x0004(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 LangType;                                          // 0x0008(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         AccountPlatType;                                   // 0x0018(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(INTLSDKAPI_SetAccountInfo) == 0x000008, "Wrong alignment on INTLSDKAPI_SetAccountInfo");
static_assert(sizeof(INTLSDKAPI_SetAccountInfo) == 0x000020, "Wrong size on INTLSDKAPI_SetAccountInfo");
static_assert(offsetof(INTLSDKAPI_SetAccountInfo, Channel) == 0x000000, "Member 'INTLSDKAPI_SetAccountInfo::Channel' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_SetAccountInfo, ChannelID) == 0x000004, "Member 'INTLSDKAPI_SetAccountInfo::ChannelID' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_SetAccountInfo, LangType) == 0x000008, "Member 'INTLSDKAPI_SetAccountInfo::LangType' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_SetAccountInfo, AccountPlatType) == 0x000018, "Member 'INTLSDKAPI_SetAccountInfo::AccountPlatType' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.SetAppVersion
// 0x0010 (0x0010 - 0x0000)
struct INTLSDKAPI_SetAppVersion final
{
public:
	class FString                                 AppVersion;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLSDKAPI_SetAppVersion) == 0x000008, "Wrong alignment on INTLSDKAPI_SetAppVersion");
static_assert(sizeof(INTLSDKAPI_SetAppVersion) == 0x000010, "Wrong size on INTLSDKAPI_SetAppVersion");
static_assert(offsetof(INTLSDKAPI_SetAppVersion, AppVersion) == 0x000000, "Member 'INTLSDKAPI_SetAppVersion::AppVersion' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.SetAuthEncryptData
// 0x0018 (0x0018 - 0x0000)
struct INTLSDKAPI_SetAuthEncryptData final
{
public:
	class FString                                 Auth_data;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Overwrite;                                         // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0011(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(INTLSDKAPI_SetAuthEncryptData) == 0x000008, "Wrong alignment on INTLSDKAPI_SetAuthEncryptData");
static_assert(sizeof(INTLSDKAPI_SetAuthEncryptData) == 0x000018, "Wrong size on INTLSDKAPI_SetAuthEncryptData");
static_assert(offsetof(INTLSDKAPI_SetAuthEncryptData, Auth_data) == 0x000000, "Member 'INTLSDKAPI_SetAuthEncryptData::Auth_data' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_SetAuthEncryptData, Overwrite) == 0x000010, "Member 'INTLSDKAPI_SetAuthEncryptData::Overwrite' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_SetAuthEncryptData, ReturnValue) == 0x000011, "Member 'INTLSDKAPI_SetAuthEncryptData::ReturnValue' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.SetBackgroundUpdateNotificationContentTitle
// 0x0010 (0x0010 - 0x0000)
struct INTLSDKAPI_SetBackgroundUpdateNotificationContentTitle final
{
public:
	class FString                                 Title;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLSDKAPI_SetBackgroundUpdateNotificationContentTitle) == 0x000008, "Wrong alignment on INTLSDKAPI_SetBackgroundUpdateNotificationContentTitle");
static_assert(sizeof(INTLSDKAPI_SetBackgroundUpdateNotificationContentTitle) == 0x000010, "Wrong size on INTLSDKAPI_SetBackgroundUpdateNotificationContentTitle");
static_assert(offsetof(INTLSDKAPI_SetBackgroundUpdateNotificationContentTitle, Title) == 0x000000, "Member 'INTLSDKAPI_SetBackgroundUpdateNotificationContentTitle::Title' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.SetCrashSightAppVersion
// 0x0010 (0x0010 - 0x0000)
struct INTLSDKAPI_SetCrashSightAppVersion final
{
public:
	class FString                                 AppVersion;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLSDKAPI_SetCrashSightAppVersion) == 0x000008, "Wrong alignment on INTLSDKAPI_SetCrashSightAppVersion");
static_assert(sizeof(INTLSDKAPI_SetCrashSightAppVersion) == 0x000010, "Wrong size on INTLSDKAPI_SetCrashSightAppVersion");
static_assert(offsetof(INTLSDKAPI_SetCrashSightAppVersion, AppVersion) == 0x000000, "Member 'INTLSDKAPI_SetCrashSightAppVersion::AppVersion' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.SetCrashUserId
// 0x0010 (0x0010 - 0x0000)
struct INTLSDKAPI_SetCrashUserId final
{
public:
	class FString                                 UserId;                                            // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLSDKAPI_SetCrashUserId) == 0x000008, "Wrong alignment on INTLSDKAPI_SetCrashUserId");
static_assert(sizeof(INTLSDKAPI_SetCrashUserId) == 0x000010, "Wrong size on INTLSDKAPI_SetCrashUserId");
static_assert(offsetof(INTLSDKAPI_SetCrashUserId, UserId) == 0x000000, "Member 'INTLSDKAPI_SetCrashUserId::UserId' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.SetCrashUserValue
// 0x0020 (0x0020 - 0x0000)
struct INTLSDKAPI_SetCrashUserValue final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Value;                                             // 0x0010(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLSDKAPI_SetCrashUserValue) == 0x000008, "Wrong alignment on INTLSDKAPI_SetCrashUserValue");
static_assert(sizeof(INTLSDKAPI_SetCrashUserValue) == 0x000020, "Wrong size on INTLSDKAPI_SetCrashUserValue");
static_assert(offsetof(INTLSDKAPI_SetCrashUserValue, Key) == 0x000000, "Member 'INTLSDKAPI_SetCrashUserValue::Key' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_SetCrashUserValue, Value) == 0x000010, "Member 'INTLSDKAPI_SetCrashUserValue::Value' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.SetDefaultSharedStorageDirectory
// 0x0010 (0x0010 - 0x0000)
struct INTLSDKAPI_SetDefaultSharedStorageDirectory final
{
public:
	class FString                                 Dir;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLSDKAPI_SetDefaultSharedStorageDirectory) == 0x000008, "Wrong alignment on INTLSDKAPI_SetDefaultSharedStorageDirectory");
static_assert(sizeof(INTLSDKAPI_SetDefaultSharedStorageDirectory) == 0x000010, "Wrong size on INTLSDKAPI_SetDefaultSharedStorageDirectory");
static_assert(offsetof(INTLSDKAPI_SetDefaultSharedStorageDirectory, Dir) == 0x000000, "Member 'INTLSDKAPI_SetDefaultSharedStorageDirectory::Dir' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.SetDefaultUserStorageDirectory
// 0x0010 (0x0010 - 0x0000)
struct INTLSDKAPI_SetDefaultUserStorageDirectory final
{
public:
	class FString                                 Dir;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLSDKAPI_SetDefaultUserStorageDirectory) == 0x000008, "Wrong alignment on INTLSDKAPI_SetDefaultUserStorageDirectory");
static_assert(sizeof(INTLSDKAPI_SetDefaultUserStorageDirectory) == 0x000010, "Wrong size on INTLSDKAPI_SetDefaultUserStorageDirectory");
static_assert(offsetof(INTLSDKAPI_SetDefaultUserStorageDirectory, Dir) == 0x000000, "Member 'INTLSDKAPI_SetDefaultUserStorageDirectory::Dir' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.SetDeviceLevel
// 0x0004 (0x0004 - 0x0000)
struct INTLSDKAPI_SetDeviceLevel final
{
public:
	int32                                         Level;                                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLSDKAPI_SetDeviceLevel) == 0x000004, "Wrong alignment on INTLSDKAPI_SetDeviceLevel");
static_assert(sizeof(INTLSDKAPI_SetDeviceLevel) == 0x000004, "Wrong size on INTLSDKAPI_SetDeviceLevel");
static_assert(offsetof(INTLSDKAPI_SetDeviceLevel, Level) == 0x000000, "Member 'INTLSDKAPI_SetDeviceLevel::Level' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.SetDNSRegion
// 0x0010 (0x0010 - 0x0000)
struct INTLSDKAPI_SetDNSRegion final
{
public:
	class FString                                 Region;                                            // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLSDKAPI_SetDNSRegion) == 0x000008, "Wrong alignment on INTLSDKAPI_SetDNSRegion");
static_assert(sizeof(INTLSDKAPI_SetDNSRegion) == 0x000010, "Wrong size on INTLSDKAPI_SetDNSRegion");
static_assert(offsetof(INTLSDKAPI_SetDNSRegion, Region) == 0x000000, "Member 'INTLSDKAPI_SetDNSRegion::Region' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.SetLILoginInfo
// 0x0030 (0x0030 - 0x0000)
struct INTLSDKAPI_SetLILoginInfo final
{
public:
	class FString                                 Uid;                                               // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Token;                                             // 0x0010(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Account;                                           // 0x0020(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLSDKAPI_SetLILoginInfo) == 0x000008, "Wrong alignment on INTLSDKAPI_SetLILoginInfo");
static_assert(sizeof(INTLSDKAPI_SetLILoginInfo) == 0x000030, "Wrong size on INTLSDKAPI_SetLILoginInfo");
static_assert(offsetof(INTLSDKAPI_SetLILoginInfo, Uid) == 0x000000, "Member 'INTLSDKAPI_SetLILoginInfo::Uid' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_SetLILoginInfo, Token) == 0x000010, "Member 'INTLSDKAPI_SetLILoginInfo::Token' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_SetLILoginInfo, Account) == 0x000020, "Member 'INTLSDKAPI_SetLILoginInfo::Account' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.SetLogPath
// 0x0010 (0x0010 - 0x0000)
struct INTLSDKAPI_SetLogPath final
{
public:
	class FString                                 Log_path;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLSDKAPI_SetLogPath) == 0x000008, "Wrong alignment on INTLSDKAPI_SetLogPath");
static_assert(sizeof(INTLSDKAPI_SetLogPath) == 0x000010, "Wrong size on INTLSDKAPI_SetLogPath");
static_assert(offsetof(INTLSDKAPI_SetLogPath, Log_path) == 0x000000, "Member 'INTLSDKAPI_SetLogPath::Log_path' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.SetMaxDownloadSpeed
// 0x0004 (0x0004 - 0x0000)
struct INTLSDKAPI_SetMaxDownloadSpeed final
{
public:
	int32                                         Speed;                                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLSDKAPI_SetMaxDownloadSpeed) == 0x000004, "Wrong alignment on INTLSDKAPI_SetMaxDownloadSpeed");
static_assert(sizeof(INTLSDKAPI_SetMaxDownloadSpeed) == 0x000004, "Wrong size on INTLSDKAPI_SetMaxDownloadSpeed");
static_assert(offsetof(INTLSDKAPI_SetMaxDownloadSpeed, Speed) == 0x000000, "Member 'INTLSDKAPI_SetMaxDownloadSpeed::Speed' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.SetProvision
// 0x0058 (0x0058 - 0x0000)
struct INTLSDKAPI_SetProvision final
{
public:
	class FString                                 UserAgreedGameTos;                                 // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 UserAgreedGamePP;                                  // 0x0010(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 UserAgreedLiPP;                                    // 0x0020(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 UserAgreedLiDt;                                    // 0x0030(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 UserAgreedLiTos;                                   // 0x0040(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         IsRecvEmail;                                       // 0x0050(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0054(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(INTLSDKAPI_SetProvision) == 0x000008, "Wrong alignment on INTLSDKAPI_SetProvision");
static_assert(sizeof(INTLSDKAPI_SetProvision) == 0x000058, "Wrong size on INTLSDKAPI_SetProvision");
static_assert(offsetof(INTLSDKAPI_SetProvision, UserAgreedGameTos) == 0x000000, "Member 'INTLSDKAPI_SetProvision::UserAgreedGameTos' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_SetProvision, UserAgreedGamePP) == 0x000010, "Member 'INTLSDKAPI_SetProvision::UserAgreedGamePP' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_SetProvision, UserAgreedLiPP) == 0x000020, "Member 'INTLSDKAPI_SetProvision::UserAgreedLiPP' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_SetProvision, UserAgreedLiDt) == 0x000030, "Member 'INTLSDKAPI_SetProvision::UserAgreedLiDt' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_SetProvision, UserAgreedLiTos) == 0x000040, "Member 'INTLSDKAPI_SetProvision::UserAgreedLiTos' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_SetProvision, IsRecvEmail) == 0x000050, "Member 'INTLSDKAPI_SetProvision::IsRecvEmail' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_SetProvision, ReturnValue) == 0x000054, "Member 'INTLSDKAPI_SetProvision::ReturnValue' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.SetRewardExtraJson
// 0x0010 (0x0010 - 0x0000)
struct INTLSDKAPI_SetRewardExtraJson final
{
public:
	class FString                                 ExtraJson;                                         // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLSDKAPI_SetRewardExtraJson) == 0x000008, "Wrong alignment on INTLSDKAPI_SetRewardExtraJson");
static_assert(sizeof(INTLSDKAPI_SetRewardExtraJson) == 0x000010, "Wrong size on INTLSDKAPI_SetRewardExtraJson");
static_assert(offsetof(INTLSDKAPI_SetRewardExtraJson, ExtraJson) == 0x000000, "Member 'INTLSDKAPI_SetRewardExtraJson::ExtraJson' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.SetSessionExtraParam
// 0x0010 (0x0010 - 0x0000)
struct INTLSDKAPI_SetSessionExtraParam final
{
public:
	class FString                                 Extra_json;                                        // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLSDKAPI_SetSessionExtraParam) == 0x000008, "Wrong alignment on INTLSDKAPI_SetSessionExtraParam");
static_assert(sizeof(INTLSDKAPI_SetSessionExtraParam) == 0x000010, "Wrong size on INTLSDKAPI_SetSessionExtraParam");
static_assert(offsetof(INTLSDKAPI_SetSessionExtraParam, Extra_json) == 0x000000, "Member 'INTLSDKAPI_SetSessionExtraParam::Extra_json' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.SetTag
// 0x0020 (0x0020 - 0x0000)
struct INTLSDKAPI_SetTag final
{
public:
	class FString                                 Channel;                                           // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Tag;                                               // 0x0010(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLSDKAPI_SetTag) == 0x000008, "Wrong alignment on INTLSDKAPI_SetTag");
static_assert(sizeof(INTLSDKAPI_SetTag) == 0x000020, "Wrong size on INTLSDKAPI_SetTag");
static_assert(offsetof(INTLSDKAPI_SetTag, Channel) == 0x000000, "Member 'INTLSDKAPI_SetTag::Channel' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_SetTag, Tag) == 0x000010, "Member 'INTLSDKAPI_SetTag::Tag' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.SetWebSocketHeartbeatInterval
// 0x0018 (0x0018 - 0x0000)
struct INTLSDKAPI_SetWebSocketHeartbeatInterval final
{
public:
	class FString                                 URL;                                               // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Interval;                                          // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(INTLSDKAPI_SetWebSocketHeartbeatInterval) == 0x000008, "Wrong alignment on INTLSDKAPI_SetWebSocketHeartbeatInterval");
static_assert(sizeof(INTLSDKAPI_SetWebSocketHeartbeatInterval) == 0x000018, "Wrong size on INTLSDKAPI_SetWebSocketHeartbeatInterval");
static_assert(offsetof(INTLSDKAPI_SetWebSocketHeartbeatInterval, URL) == 0x000000, "Member 'INTLSDKAPI_SetWebSocketHeartbeatInterval::URL' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_SetWebSocketHeartbeatInterval, Interval) == 0x000010, "Member 'INTLSDKAPI_SetWebSocketHeartbeatInterval::Interval' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.Share
// 0x00A0 (0x00A0 - 0x0000)
struct INTLSDKAPI_Share final
{
public:
	struct FINTLFriendReqInfo                     Info;                                              // 0x0000(0x0088)(ConstParm, Parm, NativeAccessSpecifierPublic)
	class FString                                 Channel;                                           // 0x0088(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0098(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(INTLSDKAPI_Share) == 0x000008, "Wrong alignment on INTLSDKAPI_Share");
static_assert(sizeof(INTLSDKAPI_Share) == 0x0000A0, "Wrong size on INTLSDKAPI_Share");
static_assert(offsetof(INTLSDKAPI_Share, Info) == 0x000000, "Member 'INTLSDKAPI_Share::Info' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_Share, Channel) == 0x000088, "Member 'INTLSDKAPI_Share::Channel' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_Share, ReturnValue) == 0x000098, "Member 'INTLSDKAPI_Share::ReturnValue' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.ShowAccountPicker
// 0x0001 (0x0001 - 0x0000)
struct INTLSDKAPI_ShowAccountPicker final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLSDKAPI_ShowAccountPicker) == 0x000001, "Wrong alignment on INTLSDKAPI_ShowAccountPicker");
static_assert(sizeof(INTLSDKAPI_ShowAccountPicker) == 0x000001, "Wrong size on INTLSDKAPI_ShowAccountPicker");
static_assert(offsetof(INTLSDKAPI_ShowAccountPicker, ReturnValue) == 0x000000, "Member 'INTLSDKAPI_ShowAccountPicker::ReturnValue' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.ShowFaqSection
// 0x0010 (0x0010 - 0x0000)
struct INTLSDKAPI_ShowFaqSection final
{
public:
	class FString                                 SectionID;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLSDKAPI_ShowFaqSection) == 0x000008, "Wrong alignment on INTLSDKAPI_ShowFaqSection");
static_assert(sizeof(INTLSDKAPI_ShowFaqSection) == 0x000010, "Wrong size on INTLSDKAPI_ShowFaqSection");
static_assert(offsetof(INTLSDKAPI_ShowFaqSection, SectionID) == 0x000000, "Member 'INTLSDKAPI_ShowFaqSection::SectionID' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.ShowGroupAgreementWindow
// 0x0010 (0x0010 - 0x0000)
struct INTLSDKAPI_ShowGroupAgreementWindow final
{
public:
	class FString                                 Channel;                                           // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLSDKAPI_ShowGroupAgreementWindow) == 0x000008, "Wrong alignment on INTLSDKAPI_ShowGroupAgreementWindow");
static_assert(sizeof(INTLSDKAPI_ShowGroupAgreementWindow) == 0x000010, "Wrong size on INTLSDKAPI_ShowGroupAgreementWindow");
static_assert(offsetof(INTLSDKAPI_ShowGroupAgreementWindow, Channel) == 0x000000, "Member 'INTLSDKAPI_ShowGroupAgreementWindow::Channel' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.ShowGroupChatRoom
// 0x0070 (0x0070 - 0x0000)
struct INTLSDKAPI_ShowGroupChatRoom final
{
public:
	struct FINTLGroupReqInfo                      Req_info;                                          // 0x0000(0x0060)(Parm, NativeAccessSpecifierPublic)
	class FString                                 Channel;                                           // 0x0060(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLSDKAPI_ShowGroupChatRoom) == 0x000008, "Wrong alignment on INTLSDKAPI_ShowGroupChatRoom");
static_assert(sizeof(INTLSDKAPI_ShowGroupChatRoom) == 0x000070, "Wrong size on INTLSDKAPI_ShowGroupChatRoom");
static_assert(offsetof(INTLSDKAPI_ShowGroupChatRoom, Req_info) == 0x000000, "Member 'INTLSDKAPI_ShowGroupChatRoom::Req_info' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_ShowGroupChatRoom, Channel) == 0x000060, "Member 'INTLSDKAPI_ShowGroupChatRoom::Channel' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.ShowPlayStationErrorDialog
// 0x0020 (0x0020 - 0x0000)
struct INTLSDKAPI_ShowPlayStationErrorDialog final
{
public:
	int32                                         ErrorCode;                                         // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Message;                                           // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(INTLSDKAPI_ShowPlayStationErrorDialog) == 0x000008, "Wrong alignment on INTLSDKAPI_ShowPlayStationErrorDialog");
static_assert(sizeof(INTLSDKAPI_ShowPlayStationErrorDialog) == 0x000020, "Wrong size on INTLSDKAPI_ShowPlayStationErrorDialog");
static_assert(offsetof(INTLSDKAPI_ShowPlayStationErrorDialog, ErrorCode) == 0x000000, "Member 'INTLSDKAPI_ShowPlayStationErrorDialog::ErrorCode' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_ShowPlayStationErrorDialog, Message) == 0x000008, "Member 'INTLSDKAPI_ShowPlayStationErrorDialog::Message' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_ShowPlayStationErrorDialog, ReturnValue) == 0x000018, "Member 'INTLSDKAPI_ShowPlayStationErrorDialog::ReturnValue' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.ShowSingleFAQ
// 0x0010 (0x0010 - 0x0000)
struct INTLSDKAPI_ShowSingleFAQ final
{
public:
	class FString                                 FaqId;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLSDKAPI_ShowSingleFAQ) == 0x000008, "Wrong alignment on INTLSDKAPI_ShowSingleFAQ");
static_assert(sizeof(INTLSDKAPI_ShowSingleFAQ) == 0x000010, "Wrong size on INTLSDKAPI_ShowSingleFAQ");
static_assert(offsetof(INTLSDKAPI_ShowSingleFAQ, FaqId) == 0x000000, "Member 'INTLSDKAPI_ShowSingleFAQ::FaqId' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.StartDetectNetwork
// 0x0010 (0x0010 - 0x0000)
struct INTLSDKAPI_StartDetectNetwork final
{
public:
	class FString                                 ID;                                                // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLSDKAPI_StartDetectNetwork) == 0x000008, "Wrong alignment on INTLSDKAPI_StartDetectNetwork");
static_assert(sizeof(INTLSDKAPI_StartDetectNetwork) == 0x000010, "Wrong size on INTLSDKAPI_StartDetectNetwork");
static_assert(offsetof(INTLSDKAPI_StartDetectNetwork, ID) == 0x000000, "Member 'INTLSDKAPI_StartDetectNetwork::ID' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.StartTraceRoute
// 0x0020 (0x0020 - 0x0000)
struct INTLSDKAPI_StartTraceRoute final
{
public:
	class FString                                 ID;                                                // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLSDKAPI_StartTraceRoute) == 0x000008, "Wrong alignment on INTLSDKAPI_StartTraceRoute");
static_assert(sizeof(INTLSDKAPI_StartTraceRoute) == 0x000020, "Wrong size on INTLSDKAPI_StartTraceRoute");
static_assert(offsetof(INTLSDKAPI_StartTraceRoute, ID) == 0x000000, "Member 'INTLSDKAPI_StartTraceRoute::ID' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_StartTraceRoute, ReturnValue) == 0x000010, "Member 'INTLSDKAPI_StartTraceRoute::ReturnValue' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.StartUdpSocket
// 0x0028 (0x0028 - 0x0000)
struct INTLSDKAPI_StartUdpSocket final
{
public:
	class FString                                 ID;                                                // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Count;                                             // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ExtraJson;                                         // 0x0018(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLSDKAPI_StartUdpSocket) == 0x000008, "Wrong alignment on INTLSDKAPI_StartUdpSocket");
static_assert(sizeof(INTLSDKAPI_StartUdpSocket) == 0x000028, "Wrong size on INTLSDKAPI_StartUdpSocket");
static_assert(offsetof(INTLSDKAPI_StartUdpSocket, ID) == 0x000000, "Member 'INTLSDKAPI_StartUdpSocket::ID' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_StartUdpSocket, Count) == 0x000010, "Member 'INTLSDKAPI_StartUdpSocket::Count' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_StartUdpSocket, ExtraJson) == 0x000018, "Member 'INTLSDKAPI_StartUdpSocket::ExtraJson' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.StopTraceRoute
// 0x0010 (0x0010 - 0x0000)
struct INTLSDKAPI_StopTraceRoute final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLSDKAPI_StopTraceRoute) == 0x000008, "Wrong alignment on INTLSDKAPI_StopTraceRoute");
static_assert(sizeof(INTLSDKAPI_StopTraceRoute) == 0x000010, "Wrong size on INTLSDKAPI_StopTraceRoute");
static_assert(offsetof(INTLSDKAPI_StopTraceRoute, ReturnValue) == 0x000000, "Member 'INTLSDKAPI_StopTraceRoute::ReturnValue' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.TabGetExpInfoByLayerCode
// 0x0138 (0x0138 - 0x0000)
struct INTLSDKAPI_TabGetExpInfoByLayerCode final
{
public:
	struct FINTLTabExpEntity                      Entity;                                            // 0x0000(0x0120)(Parm, OutParm, NativeAccessSpecifierPublic)
	class FString                                 LayerCode;                                         // 0x0120(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsReport;                                          // 0x0130(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0131(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_132[0x6];                                      // 0x0132(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(INTLSDKAPI_TabGetExpInfoByLayerCode) == 0x000008, "Wrong alignment on INTLSDKAPI_TabGetExpInfoByLayerCode");
static_assert(sizeof(INTLSDKAPI_TabGetExpInfoByLayerCode) == 0x000138, "Wrong size on INTLSDKAPI_TabGetExpInfoByLayerCode");
static_assert(offsetof(INTLSDKAPI_TabGetExpInfoByLayerCode, Entity) == 0x000000, "Member 'INTLSDKAPI_TabGetExpInfoByLayerCode::Entity' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_TabGetExpInfoByLayerCode, LayerCode) == 0x000120, "Member 'INTLSDKAPI_TabGetExpInfoByLayerCode::LayerCode' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_TabGetExpInfoByLayerCode, IsReport) == 0x000130, "Member 'INTLSDKAPI_TabGetExpInfoByLayerCode::IsReport' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_TabGetExpInfoByLayerCode, ReturnValue) == 0x000131, "Member 'INTLSDKAPI_TabGetExpInfoByLayerCode::ReturnValue' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.TabGetExpInfoByName
// 0x0138 (0x0138 - 0x0000)
struct INTLSDKAPI_TabGetExpInfoByName final
{
public:
	struct FINTLTabExpEntity                      Entity;                                            // 0x0000(0x0120)(Parm, OutParm, NativeAccessSpecifierPublic)
	class FString                                 ExpName;                                           // 0x0120(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsReport;                                          // 0x0130(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0131(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_132[0x6];                                      // 0x0132(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(INTLSDKAPI_TabGetExpInfoByName) == 0x000008, "Wrong alignment on INTLSDKAPI_TabGetExpInfoByName");
static_assert(sizeof(INTLSDKAPI_TabGetExpInfoByName) == 0x000138, "Wrong size on INTLSDKAPI_TabGetExpInfoByName");
static_assert(offsetof(INTLSDKAPI_TabGetExpInfoByName, Entity) == 0x000000, "Member 'INTLSDKAPI_TabGetExpInfoByName::Entity' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_TabGetExpInfoByName, ExpName) == 0x000120, "Member 'INTLSDKAPI_TabGetExpInfoByName::ExpName' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_TabGetExpInfoByName, IsReport) == 0x000130, "Member 'INTLSDKAPI_TabGetExpInfoByName::IsReport' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_TabGetExpInfoByName, ReturnValue) == 0x000131, "Member 'INTLSDKAPI_TabGetExpInfoByName::ReturnValue' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.TabInit
// 0x0028 (0x0028 - 0x0000)
struct INTLSDKAPI_TabInit final
{
public:
	class FString                                 Guid;                                              // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 SceneId;                                           // 0x0010(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsAutoPoll;                                        // 0x0020(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsAutoReport;                                      // 0x0021(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(INTLSDKAPI_TabInit) == 0x000008, "Wrong alignment on INTLSDKAPI_TabInit");
static_assert(sizeof(INTLSDKAPI_TabInit) == 0x000028, "Wrong size on INTLSDKAPI_TabInit");
static_assert(offsetof(INTLSDKAPI_TabInit, Guid) == 0x000000, "Member 'INTLSDKAPI_TabInit::Guid' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_TabInit, SceneId) == 0x000010, "Member 'INTLSDKAPI_TabInit::SceneId' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_TabInit, IsAutoPoll) == 0x000020, "Member 'INTLSDKAPI_TabInit::IsAutoPoll' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_TabInit, IsAutoReport) == 0x000021, "Member 'INTLSDKAPI_TabInit::IsAutoReport' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.TabSwitchGuid
// 0x0010 (0x0010 - 0x0000)
struct INTLSDKAPI_TabSwitchGuid final
{
public:
	class FString                                 Guid;                                              // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLSDKAPI_TabSwitchGuid) == 0x000008, "Wrong alignment on INTLSDKAPI_TabSwitchGuid");
static_assert(sizeof(INTLSDKAPI_TabSwitchGuid) == 0x000010, "Wrong size on INTLSDKAPI_TabSwitchGuid");
static_assert(offsetof(INTLSDKAPI_TabSwitchGuid, Guid) == 0x000000, "Member 'INTLSDKAPI_TabSwitchGuid::Guid' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.TestJudgeCustomDeviceLevel
// 0x0018 (0x0018 - 0x0000)
struct INTLSDKAPI_TestJudgeCustomDeviceLevel final
{
public:
	class FString                                 ParseJson;                                         // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(INTLSDKAPI_TestJudgeCustomDeviceLevel) == 0x000008, "Wrong alignment on INTLSDKAPI_TestJudgeCustomDeviceLevel");
static_assert(sizeof(INTLSDKAPI_TestJudgeCustomDeviceLevel) == 0x000018, "Wrong size on INTLSDKAPI_TestJudgeCustomDeviceLevel");
static_assert(offsetof(INTLSDKAPI_TestJudgeCustomDeviceLevel, ParseJson) == 0x000000, "Member 'INTLSDKAPI_TestJudgeCustomDeviceLevel::ParseJson' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_TestJudgeCustomDeviceLevel, ReturnValue) == 0x000010, "Member 'INTLSDKAPI_TestJudgeCustomDeviceLevel::ReturnValue' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.ToggleBackgroundUpdate
// 0x0002 (0x0002 - 0x0000)
struct INTLSDKAPI_ToggleBackgroundUpdate final
{
public:
	bool                                          Enable;                                            // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLSDKAPI_ToggleBackgroundUpdate) == 0x000001, "Wrong alignment on INTLSDKAPI_ToggleBackgroundUpdate");
static_assert(sizeof(INTLSDKAPI_ToggleBackgroundUpdate) == 0x000002, "Wrong size on INTLSDKAPI_ToggleBackgroundUpdate");
static_assert(offsetof(INTLSDKAPI_ToggleBackgroundUpdate, Enable) == 0x000000, "Member 'INTLSDKAPI_ToggleBackgroundUpdate::Enable' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_ToggleBackgroundUpdate, ReturnValue) == 0x000001, "Member 'INTLSDKAPI_ToggleBackgroundUpdate::ReturnValue' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.TransferAccount
// 0x0020 (0x0020 - 0x0000)
struct INTLSDKAPI_TransferAccount final
{
public:
	class FString                                 TransferCode;                                      // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Password;                                          // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLSDKAPI_TransferAccount) == 0x000008, "Wrong alignment on INTLSDKAPI_TransferAccount");
static_assert(sizeof(INTLSDKAPI_TransferAccount) == 0x000020, "Wrong size on INTLSDKAPI_TransferAccount");
static_assert(offsetof(INTLSDKAPI_TransferAccount, TransferCode) == 0x000000, "Member 'INTLSDKAPI_TransferAccount::TransferCode' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_TransferAccount, Password) == 0x000010, "Member 'INTLSDKAPI_TransferAccount::Password' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.Unbind
// 0x0030 (0x0030 - 0x0000)
struct INTLSDKAPI_Unbind final
{
public:
	EINTLLoginChannel                             Channel;                                           // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Uid;                                               // 0x0008(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ExtraJson;                                         // 0x0018(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0028(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(INTLSDKAPI_Unbind) == 0x000008, "Wrong alignment on INTLSDKAPI_Unbind");
static_assert(sizeof(INTLSDKAPI_Unbind) == 0x000030, "Wrong size on INTLSDKAPI_Unbind");
static_assert(offsetof(INTLSDKAPI_Unbind, Channel) == 0x000000, "Member 'INTLSDKAPI_Unbind::Channel' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_Unbind, Uid) == 0x000008, "Member 'INTLSDKAPI_Unbind::Uid' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_Unbind, ExtraJson) == 0x000018, "Member 'INTLSDKAPI_Unbind::ExtraJson' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_Unbind, ReturnValue) == 0x000028, "Member 'INTLSDKAPI_Unbind::ReturnValue' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.UnregisterPush
// 0x0010 (0x0010 - 0x0000)
struct INTLSDKAPI_UnregisterPush final
{
public:
	class FString                                 Channel;                                           // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLSDKAPI_UnregisterPush) == 0x000008, "Wrong alignment on INTLSDKAPI_UnregisterPush");
static_assert(sizeof(INTLSDKAPI_UnregisterPush) == 0x000010, "Wrong size on INTLSDKAPI_UnregisterPush");
static_assert(offsetof(INTLSDKAPI_UnregisterPush, Channel) == 0x000000, "Member 'INTLSDKAPI_UnregisterPush::Channel' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.UpdateCfg
// 0x0038 (0x0038 - 0x0000)
struct INTLSDKAPI_UpdateCfg final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 DefaultVal;                                        // 0x0010(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Project;                                           // 0x0020(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(INTLSDKAPI_UpdateCfg) == 0x000008, "Wrong alignment on INTLSDKAPI_UpdateCfg");
static_assert(sizeof(INTLSDKAPI_UpdateCfg) == 0x000038, "Wrong size on INTLSDKAPI_UpdateCfg");
static_assert(offsetof(INTLSDKAPI_UpdateCfg, Key) == 0x000000, "Member 'INTLSDKAPI_UpdateCfg::Key' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_UpdateCfg, DefaultVal) == 0x000010, "Member 'INTLSDKAPI_UpdateCfg::DefaultVal' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_UpdateCfg, Project) == 0x000020, "Member 'INTLSDKAPI_UpdateCfg::Project' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_UpdateCfg, ReturnValue) == 0x000030, "Member 'INTLSDKAPI_UpdateCfg::ReturnValue' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.UpdateConfig
// 0x0068 (0x0068 - 0x0000)
struct INTLSDKAPI_UpdateConfig final
{
public:
	TMap<class FString, class FString>            Cfg;                                               // 0x0000(0x0050)(Parm, NativeAccessSpecifierPublic)
	class FString                                 Project;                                           // 0x0050(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0060(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(INTLSDKAPI_UpdateConfig) == 0x000008, "Wrong alignment on INTLSDKAPI_UpdateConfig");
static_assert(sizeof(INTLSDKAPI_UpdateConfig) == 0x000068, "Wrong size on INTLSDKAPI_UpdateConfig");
static_assert(offsetof(INTLSDKAPI_UpdateConfig, Cfg) == 0x000000, "Member 'INTLSDKAPI_UpdateConfig::Cfg' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_UpdateConfig, Project) == 0x000050, "Member 'INTLSDKAPI_UpdateConfig::Project' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_UpdateConfig, ReturnValue) == 0x000060, "Member 'INTLSDKAPI_UpdateConfig::ReturnValue' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.UpdateContinue
// 0x0008 (0x0008 - 0x0000)
struct INTLSDKAPI_UpdateContinue final
{
public:
	int32                                         RepoID;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(INTLSDKAPI_UpdateContinue) == 0x000004, "Wrong alignment on INTLSDKAPI_UpdateContinue");
static_assert(sizeof(INTLSDKAPI_UpdateContinue) == 0x000008, "Wrong size on INTLSDKAPI_UpdateContinue");
static_assert(offsetof(INTLSDKAPI_UpdateContinue, RepoID) == 0x000000, "Member 'INTLSDKAPI_UpdateContinue::RepoID' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_UpdateContinue, ReturnValue) == 0x000004, "Member 'INTLSDKAPI_UpdateContinue::ReturnValue' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.UpdateLanguage
// 0x0010 (0x0010 - 0x0000)
struct INTLSDKAPI_UpdateLanguage final
{
public:
	class FString                                 Lan;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLSDKAPI_UpdateLanguage) == 0x000008, "Wrong alignment on INTLSDKAPI_UpdateLanguage");
static_assert(sizeof(INTLSDKAPI_UpdateLanguage) == 0x000010, "Wrong size on INTLSDKAPI_UpdateLanguage");
static_assert(offsetof(INTLSDKAPI_UpdateLanguage, Lan) == 0x000000, "Member 'INTLSDKAPI_UpdateLanguage::Lan' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.UpdateStart
// 0x0038 (0x0038 - 0x0000)
struct INTLSDKAPI_UpdateStart final
{
public:
	struct FINTLUpdateInitInfo                    Info;                                              // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(INTLSDKAPI_UpdateStart) == 0x000008, "Wrong alignment on INTLSDKAPI_UpdateStart");
static_assert(sizeof(INTLSDKAPI_UpdateStart) == 0x000038, "Wrong size on INTLSDKAPI_UpdateStart");
static_assert(offsetof(INTLSDKAPI_UpdateStart, Info) == 0x000000, "Member 'INTLSDKAPI_UpdateStart::Info' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_UpdateStart, ReturnValue) == 0x000030, "Member 'INTLSDKAPI_UpdateStart::ReturnValue' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.UpdateStop
// 0x000C (0x000C - 0x0000)
struct INTLSDKAPI_UpdateStop final
{
public:
	int32                                         RepoID;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TaskId;                                            // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(INTLSDKAPI_UpdateStop) == 0x000004, "Wrong alignment on INTLSDKAPI_UpdateStop");
static_assert(sizeof(INTLSDKAPI_UpdateStop) == 0x00000C, "Wrong size on INTLSDKAPI_UpdateStop");
static_assert(offsetof(INTLSDKAPI_UpdateStop, RepoID) == 0x000000, "Member 'INTLSDKAPI_UpdateStop::RepoID' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_UpdateStop, TaskId) == 0x000004, "Member 'INTLSDKAPI_UpdateStop::TaskId' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_UpdateStop, ReturnValue) == 0x000008, "Member 'INTLSDKAPI_UpdateStop::ReturnValue' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.UpdateUserInfo
// 0x0100 (0x0100 - 0x0000)
struct INTLSDKAPI_UpdateUserInfo final
{
public:
	struct FINTLCustomerUserProfile               UserProfile;                                       // 0x0000(0x0100)(Parm, OutParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLSDKAPI_UpdateUserInfo) == 0x000008, "Wrong alignment on INTLSDKAPI_UpdateUserInfo");
static_assert(sizeof(INTLSDKAPI_UpdateUserInfo) == 0x000100, "Wrong size on INTLSDKAPI_UpdateUserInfo");
static_assert(offsetof(INTLSDKAPI_UpdateUserInfo, UserProfile) == 0x000000, "Member 'INTLSDKAPI_UpdateUserInfo::UserProfile' has a wrong offset!");

// Function INTLCore.INTLSDKAPI.SetConsent
// 0x0028 (0x0028 - 0x0000)
struct INTLSDKAPI_SetConsent final
{
public:
	EFINTLConsentStatus                           Status;                                            // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Types;                                             // 0x0008(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 SpecificChannel;                                   // 0x0018(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLSDKAPI_SetConsent) == 0x000008, "Wrong alignment on INTLSDKAPI_SetConsent");
static_assert(sizeof(INTLSDKAPI_SetConsent) == 0x000028, "Wrong size on INTLSDKAPI_SetConsent");
static_assert(offsetof(INTLSDKAPI_SetConsent, Status) == 0x000000, "Member 'INTLSDKAPI_SetConsent::Status' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_SetConsent, Types) == 0x000008, "Member 'INTLSDKAPI_SetConsent::Types' has a wrong offset!");
static_assert(offsetof(INTLSDKAPI_SetConsent, SpecificChannel) == 0x000018, "Member 'INTLSDKAPI_SetConsent::SpecificChannel' has a wrong offset!");

// Function INTLCore.INTLUtility.AddSystemBrowserFireWallRule
// 0x0018 (0x0018 - 0x0000)
struct INTLUtility_AddSystemBrowserFireWallRule final
{
public:
	int32                                         Port;                                              // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 RuleName;                                          // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLUtility_AddSystemBrowserFireWallRule) == 0x000008, "Wrong alignment on INTLUtility_AddSystemBrowserFireWallRule");
static_assert(sizeof(INTLUtility_AddSystemBrowserFireWallRule) == 0x000018, "Wrong size on INTLUtility_AddSystemBrowserFireWallRule");
static_assert(offsetof(INTLUtility_AddSystemBrowserFireWallRule, Port) == 0x000000, "Member 'INTLUtility_AddSystemBrowserFireWallRule::Port' has a wrong offset!");
static_assert(offsetof(INTLUtility_AddSystemBrowserFireWallRule, RuleName) == 0x000008, "Member 'INTLUtility_AddSystemBrowserFireWallRule::RuleName' has a wrong offset!");

// Function INTLCore.INTLUtility.GetNewToastOrder
// 0x0004 (0x0004 - 0x0000)
struct INTLUtility_GetNewToastOrder final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLUtility_GetNewToastOrder) == 0x000004, "Wrong alignment on INTLUtility_GetNewToastOrder");
static_assert(sizeof(INTLUtility_GetNewToastOrder) == 0x000004, "Wrong size on INTLUtility_GetNewToastOrder");
static_assert(offsetof(INTLUtility_GetNewToastOrder, ReturnValue) == 0x000000, "Member 'INTLUtility_GetNewToastOrder::ReturnValue' has a wrong offset!");

// Function INTLCore.INTLUtility.RefreshCurToastCnt
// 0x0008 (0x0008 - 0x0000)
struct INTLUtility_RefreshCurToastCnt final
{
public:
	int32                                         ChangeCnt;                                         // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(INTLUtility_RefreshCurToastCnt) == 0x000004, "Wrong alignment on INTLUtility_RefreshCurToastCnt");
static_assert(sizeof(INTLUtility_RefreshCurToastCnt) == 0x000008, "Wrong size on INTLUtility_RefreshCurToastCnt");
static_assert(offsetof(INTLUtility_RefreshCurToastCnt, ChangeCnt) == 0x000000, "Member 'INTLUtility_RefreshCurToastCnt::ChangeCnt' has a wrong offset!");
static_assert(offsetof(INTLUtility_RefreshCurToastCnt, ReturnValue) == 0x000004, "Member 'INTLUtility_RefreshCurToastCnt::ReturnValue' has a wrong offset!");

// Function INTLCore.INTLUtility.Regular
// 0x0028 (0x0028 - 0x0000)
struct INTLUtility_Regular final
{
public:
	class FString                                 Str;                                               // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Reg;                                               // 0x0010(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(INTLUtility_Regular) == 0x000008, "Wrong alignment on INTLUtility_Regular");
static_assert(sizeof(INTLUtility_Regular) == 0x000028, "Wrong size on INTLUtility_Regular");
static_assert(offsetof(INTLUtility_Regular, Str) == 0x000000, "Member 'INTLUtility_Regular::Str' has a wrong offset!");
static_assert(offsetof(INTLUtility_Regular, Reg) == 0x000010, "Member 'INTLUtility_Regular::Reg' has a wrong offset!");
static_assert(offsetof(INTLUtility_Regular, ReturnValue) == 0x000020, "Member 'INTLUtility_Regular::ReturnValue' has a wrong offset!");

}

