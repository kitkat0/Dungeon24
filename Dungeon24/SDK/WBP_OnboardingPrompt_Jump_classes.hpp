#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_OnboardingPrompt_Jump

#include "Basic.hpp"

#include "WBP_OnboardingPrompt_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_OnboardingPrompt_Jump.WBP_OnboardingPrompt_Jump_C
// 0x0020 (0x02D8 - 0x02B8)
class UWBP_OnboardingPrompt_Jump_C final : public UWBP_OnboardingPrompt_C
{
public:
	class UCommonTextBlock*                       ControlText1;                                      // 0x02B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       ControlText2;                                      // 0x02C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UNamedSlot*                             NamedSlot;                                         // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_KeyMap_BLANK_C*                    WBP_KeyMap_BLANK;                                  // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_OnboardingPrompt_Jump_C">();
	}
	static class UWBP_OnboardingPrompt_Jump_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_OnboardingPrompt_Jump_C>();
	}
};
static_assert(alignof(UWBP_OnboardingPrompt_Jump_C) == 0x000008, "Wrong alignment on UWBP_OnboardingPrompt_Jump_C");
static_assert(sizeof(UWBP_OnboardingPrompt_Jump_C) == 0x0002D8, "Wrong size on UWBP_OnboardingPrompt_Jump_C");
static_assert(offsetof(UWBP_OnboardingPrompt_Jump_C, ControlText1) == 0x0002B8, "Member 'UWBP_OnboardingPrompt_Jump_C::ControlText1' has a wrong offset!");
static_assert(offsetof(UWBP_OnboardingPrompt_Jump_C, ControlText2) == 0x0002C0, "Member 'UWBP_OnboardingPrompt_Jump_C::ControlText2' has a wrong offset!");
static_assert(offsetof(UWBP_OnboardingPrompt_Jump_C, NamedSlot) == 0x0002C8, "Member 'UWBP_OnboardingPrompt_Jump_C::NamedSlot' has a wrong offset!");
static_assert(offsetof(UWBP_OnboardingPrompt_Jump_C, WBP_KeyMap_BLANK) == 0x0002D0, "Member 'UWBP_OnboardingPrompt_Jump_C::WBP_KeyMap_BLANK' has a wrong offset!");

}

