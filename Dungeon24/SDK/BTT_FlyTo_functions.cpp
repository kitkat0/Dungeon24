#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTT_FlyTo

#include "Basic.hpp"

#include "BTT_FlyTo_classes.hpp"
#include "BTT_FlyTo_parameters.hpp"


namespace SDK
{

// Function BTT_FlyTo.BTT_FlyTo_C.ExecuteUbergraph_BTT_FlyTo
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBTT_FlyTo_C::ExecuteUbergraph_BTT_FlyTo(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTT_FlyTo_C", "ExecuteUbergraph_BTT_FlyTo");

	Params::BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BTT_FlyTo.BTT_FlyTo_C.Finish
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Success                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBTT_FlyTo_C::Finish(bool Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTT_FlyTo_C", "Finish");

	Params::BTT_FlyTo_C_Finish Parms{};

	Parms.Success = Success;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BTT_FlyTo.BTT_FlyTo_C.FlyTo
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AAIController*                    OwnerController                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class APawn*                            ControlledPawn                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBTT_FlyTo_C::FlyTo(class AAIController* OwnerController, class APawn* ControlledPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTT_FlyTo_C", "FlyTo");

	Params::BTT_FlyTo_C_FlyTo Parms{};

	Parms.OwnerController = OwnerController;
	Parms.ControlledPawn = ControlledPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BTT_FlyTo.BTT_FlyTo_C.GetActorTargetLocation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class APawn*                            Param_Pawn                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBTT_FlyTo_C::GetActorTargetLocation(class APawn* Param_Pawn, class AActor* Actor, struct FVector* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTT_FlyTo_C", "GetActorTargetLocation");

	Params::BTT_FlyTo_C_GetActorTargetLocation Parms{};

	Parms.Param_Pawn = Param_Pawn;
	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = std::move(Parms.Result);
}


// Function BTT_FlyTo.BTT_FlyTo_C.IsInLineOfSight
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Src                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Dest                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBTT_FlyTo_C::IsInLineOfSight(const struct FVector& Src, const struct FVector& Dest, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTT_FlyTo_C", "IsInLineOfSight");

	Params::BTT_FlyTo_C_IsInLineOfSight Parms{};

	Parms.Src = std::move(Src);
	Parms.Dest = std::move(Dest);

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BTT_FlyTo.BTT_FlyTo_C.Move
// (BlueprintCallable, BlueprintEvent)

void UBTT_FlyTo_C::Move()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTT_FlyTo_C", "Move");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BTT_FlyTo.BTT_FlyTo_C.MoveAlongPath
// (BlueprintCallable, BlueprintEvent)

void UBTT_FlyTo_C::MoveAlongPath()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTT_FlyTo_C", "MoveAlongPath");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BTT_FlyTo.BTT_FlyTo_C.MoveFailed
// (BlueprintCallable, BlueprintEvent)

void UBTT_FlyTo_C::MoveFailed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTT_FlyTo_C", "MoveFailed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BTT_FlyTo.BTT_FlyTo_C.MoveToPoint
// (BlueprintCallable, BlueprintEvent)

void UBTT_FlyTo_C::MoveToPoint()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTT_FlyTo_C", "MoveToPoint");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BTT_FlyTo.BTT_FlyTo_C.OnActorHit
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           SelfActor                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FVector                          NormalImpulse                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       Hit                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void UBTT_FlyTo_C::OnActorHit(class AActor* SelfActor, class AActor* OtherActor, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTT_FlyTo_C", "OnActorHit");

	Params::BTT_FlyTo_C_OnActorHit Parms{};

	Parms.SelfActor = SelfActor;
	Parms.OtherActor = OtherActor;
	Parms.NormalImpulse = std::move(NormalImpulse);
	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BTT_FlyTo.BTT_FlyTo_C.OnFail_030EE864408B5095FED9AFB2CF0283FD
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EPathFollowingResult                    MovementResult                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBTT_FlyTo_C::OnFail_030EE864408B5095FED9AFB2CF0283FD(EPathFollowingResult MovementResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTT_FlyTo_C", "OnFail_030EE864408B5095FED9AFB2CF0283FD");

	Params::BTT_FlyTo_C_OnFail_030EE864408B5095FED9AFB2CF0283FD Parms{};

	Parms.MovementResult = MovementResult;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BTT_FlyTo.BTT_FlyTo_C.OnFail_90BC8C294E2B61C8AE9F219EDF52C55A
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EPathFollowingResult                    MovementResult                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBTT_FlyTo_C::OnFail_90BC8C294E2B61C8AE9F219EDF52C55A(EPathFollowingResult MovementResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTT_FlyTo_C", "OnFail_90BC8C294E2B61C8AE9F219EDF52C55A");

	Params::BTT_FlyTo_C_OnFail_90BC8C294E2B61C8AE9F219EDF52C55A Parms{};

	Parms.MovementResult = MovementResult;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BTT_FlyTo.BTT_FlyTo_C.OnSuccess_030EE864408B5095FED9AFB2CF0283FD
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EPathFollowingResult                    MovementResult                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBTT_FlyTo_C::OnSuccess_030EE864408B5095FED9AFB2CF0283FD(EPathFollowingResult MovementResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTT_FlyTo_C", "OnSuccess_030EE864408B5095FED9AFB2CF0283FD");

	Params::BTT_FlyTo_C_OnSuccess_030EE864408B5095FED9AFB2CF0283FD Parms{};

	Parms.MovementResult = MovementResult;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BTT_FlyTo.BTT_FlyTo_C.OnSuccess_90BC8C294E2B61C8AE9F219EDF52C55A
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EPathFollowingResult                    MovementResult                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBTT_FlyTo_C::OnSuccess_90BC8C294E2B61C8AE9F219EDF52C55A(EPathFollowingResult MovementResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTT_FlyTo_C", "OnSuccess_90BC8C294E2B61C8AE9F219EDF52C55A");

	Params::BTT_FlyTo_C_OnSuccess_90BC8C294E2B61C8AE9F219EDF52C55A Parms{};

	Parms.MovementResult = MovementResult;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BTT_FlyTo.BTT_FlyTo_C.OnTargetActorMoved
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBTT_FlyTo_C::OnTargetActorMoved(const struct FVector& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTT_FlyTo_C", "OnTargetActorMoved");

	Params::BTT_FlyTo_C_OnTargetActorMoved Parms{};

	Parms.Location = std::move(Location);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BTT_FlyTo.BTT_FlyTo_C.OnTargetChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// uint8                                   KeyID                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBTT_FlyTo_C::OnTargetChanged(uint8 KeyID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTT_FlyTo_C", "OnTargetChanged");

	Params::BTT_FlyTo_C_OnTargetChanged Parms{};

	Parms.KeyID = KeyID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BTT_FlyTo.BTT_FlyTo_C.PickTargetPathWaypoint
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Waypoint                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBTT_FlyTo_C::PickTargetPathWaypoint(bool* Result, struct FVector* Waypoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTT_FlyTo_C", "PickTargetPathWaypoint");

	Params::BTT_FlyTo_C_PickTargetPathWaypoint Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;

	if (Waypoint != nullptr)
		*Waypoint = std::move(Parms.Waypoint);
}


// Function BTT_FlyTo.BTT_FlyTo_C.ProjectPointToGround
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Point                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          ProjectedPoint                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBTT_FlyTo_C::ProjectPointToGround(const struct FVector& Point, struct FVector* ProjectedPoint, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTT_FlyTo_C", "ProjectPointToGround");

	Params::BTT_FlyTo_C_ProjectPointToGround Parms{};

	Parms.Point = std::move(Point);

	UObject::ProcessEvent(Func, &Parms);

	if (ProjectedPoint != nullptr)
		*ProjectedPoint = std::move(Parms.ProjectedPoint);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BTT_FlyTo.BTT_FlyTo_C.ProjectPointToNavigation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Point                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          ProjectedPoint                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBTT_FlyTo_C::ProjectPointToNavigation(const struct FVector& Point, struct FVector* ProjectedPoint, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTT_FlyTo_C", "ProjectPointToNavigation");

	Params::BTT_FlyTo_C_ProjectPointToNavigation Parms{};

	Parms.Point = std::move(Point);

	UObject::ProcessEvent(Func, &Parms);

	if (ProjectedPoint != nullptr)
		*ProjectedPoint = std::move(Parms.ProjectedPoint);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BTT_FlyTo.BTT_FlyTo_C.ReceiveAbortAI
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AAIController*                    OwnerController                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class APawn*                            ControlledPawn                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBTT_FlyTo_C::ReceiveAbortAI(class AAIController* OwnerController, class APawn* ControlledPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTT_FlyTo_C", "ReceiveAbortAI");

	Params::BTT_FlyTo_C_ReceiveAbortAI Parms{};

	Parms.OwnerController = OwnerController;
	Parms.ControlledPawn = ControlledPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BTT_FlyTo.BTT_FlyTo_C.ReceiveExecuteAI
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AAIController*                    OwnerController                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class APawn*                            ControlledPawn                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBTT_FlyTo_C::ReceiveExecuteAI(class AAIController* OwnerController, class APawn* ControlledPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTT_FlyTo_C", "ReceiveExecuteAI");

	Params::BTT_FlyTo_C_ReceiveExecuteAI Parms{};

	Parms.OwnerController = OwnerController;
	Parms.ControlledPawn = ControlledPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BTT_FlyTo.BTT_FlyTo_C.ReceiveTickAI
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AAIController*                    OwnerController                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class APawn*                            ControlledPawn                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBTT_FlyTo_C::ReceiveTickAI(class AAIController* OwnerController, class APawn* ControlledPawn, float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTT_FlyTo_C", "ReceiveTickAI");

	Params::BTT_FlyTo_C_ReceiveTickAI Parms{};

	Parms.OwnerController = OwnerController;
	Parms.ControlledPawn = ControlledPawn;
	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BTT_FlyTo.BTT_FlyTo_C.TargetPathNeedCheckReachWaypoint
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBTT_FlyTo_C::TargetPathNeedCheckReachWaypoint(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTT_FlyTo_C", "TargetPathNeedCheckReachWaypoint");

	Params::BTT_FlyTo_C_TargetPathNeedCheckReachWaypoint Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}

}

