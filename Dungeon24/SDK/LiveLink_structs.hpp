#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LiveLink

#include "Basic.hpp"


namespace SDK
{

// Enum LiveLink.ELiveLinkTimecodeProviderEvaluationType
// NumValues: 0x0004
enum class ELiveLinkTimecodeProviderEvaluationType : uint32
{
	Lerp                                     = 0,
	Nearest                                  = 1,
	Latest                                   = 2,
	ELiveLinkTimecodeProviderEvaluationType_MAX = 3,
};

// Enum LiveLink.ELiveLinkAxis
// NumValues: 0x0007
enum class ELiveLinkAxis : uint8
{
	X                                        = 0,
	Y                                        = 1,
	Z                                        = 2,
	XNeg                                     = 3,
	YNeg                                     = 4,
	ZNeg                                     = 5,
	ELiveLinkAxis_MAX                        = 6,
};

// ScriptStruct LiveLink.LiveLinkRetargetAssetReference
// 0x0001 (0x0001 - 0x0000)
struct FLiveLinkRetargetAssetReference final
{
public:
	uint8                                         Pad_0[0x1];                                        // 0x0000(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FLiveLinkRetargetAssetReference) == 0x000001, "Wrong alignment on FLiveLinkRetargetAssetReference");
static_assert(sizeof(FLiveLinkRetargetAssetReference) == 0x000001, "Wrong size on FLiveLinkRetargetAssetReference");

// ScriptStruct LiveLink.ProviderPollResult
// 0x0040 (0x0040 - 0x0000)
struct FProviderPollResult final
{
public:
	uint8                                         Pad_0[0x10];                                       // 0x0000(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Name;                                              // 0x0010(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 MachineName;                                       // 0x0020(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        MachineTimeOffset;                                 // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsValidProvider;                                  // 0x0038(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FProviderPollResult) == 0x000008, "Wrong alignment on FProviderPollResult");
static_assert(sizeof(FProviderPollResult) == 0x000040, "Wrong size on FProviderPollResult");
static_assert(offsetof(FProviderPollResult, Name) == 0x000010, "Member 'FProviderPollResult::Name' has a wrong offset!");
static_assert(offsetof(FProviderPollResult, MachineName) == 0x000020, "Member 'FProviderPollResult::MachineName' has a wrong offset!");
static_assert(offsetof(FProviderPollResult, MachineTimeOffset) == 0x000030, "Member 'FProviderPollResult::MachineTimeOffset' has a wrong offset!");
static_assert(offsetof(FProviderPollResult, bIsValidProvider) == 0x000038, "Member 'FProviderPollResult::bIsValidProvider' has a wrong offset!");

// ScriptStruct LiveLink.LiveLinkRoleProjectSetting
// 0x0028 (0x0028 - 0x0000)
struct FLiveLinkRoleProjectSetting final
{
public:
	TSubclassOf<class ULiveLinkRole>              Role;                                              // 0x0000(0x0008)(Edit, ZeroConstructor, Config, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ULiveLinkSubjectSettings>   SettingClass;                                      // 0x0008(0x0008)(Edit, ZeroConstructor, Config, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ULiveLinkFrameInterpolationProcessor> FrameInterpolationProcessor;                       // 0x0010(0x0008)(Edit, ZeroConstructor, Config, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TSubclassOf<class ULiveLinkFramePreProcessor>> FramePreProcessors;                                // 0x0018(0x0010)(Edit, ZeroConstructor, Config, UObjectWrapper, NativeAccessSpecifierPublic)
};
static_assert(alignof(FLiveLinkRoleProjectSetting) == 0x000008, "Wrong alignment on FLiveLinkRoleProjectSetting");
static_assert(sizeof(FLiveLinkRoleProjectSetting) == 0x000028, "Wrong size on FLiveLinkRoleProjectSetting");
static_assert(offsetof(FLiveLinkRoleProjectSetting, Role) == 0x000000, "Member 'FLiveLinkRoleProjectSetting::Role' has a wrong offset!");
static_assert(offsetof(FLiveLinkRoleProjectSetting, SettingClass) == 0x000008, "Member 'FLiveLinkRoleProjectSetting::SettingClass' has a wrong offset!");
static_assert(offsetof(FLiveLinkRoleProjectSetting, FrameInterpolationProcessor) == 0x000010, "Member 'FLiveLinkRoleProjectSetting::FrameInterpolationProcessor' has a wrong offset!");
static_assert(offsetof(FLiveLinkRoleProjectSetting, FramePreProcessors) == 0x000018, "Member 'FLiveLinkRoleProjectSetting::FramePreProcessors' has a wrong offset!");

}

