#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_TgfGame_InventorySlots

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "AkAudio_structs.hpp"


namespace SDK::Params
{

// Function WBP_TgfGame_InventorySlots.WBP_TgfGame_InventorySlots_C.ExecuteUbergraph_WBP_TgfGame_InventorySlots
// 0x02B0 (0x02B0 - 0x0000)
struct WBP_TgfGame_InventorySlots_C_ExecuteUbergraph_WBP_TgfGame_InventorySlots final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0014(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_not_found_Variable;                      // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FIntPoint                              CallFunc_GetInventorySize_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            Temp_wildcard_Variable;                            // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_FindParentWidgetOfType_ReturnValue;       // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesImplementInterface_ReturnValue;       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            Temp_wildcard_Variable_1;                          // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_InventoryContextHolder_C> K2Node_DynamicCast_AsBPI_Inventory_Context_Holder; // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A[0x6];                                       // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UTgfInventoryWrapper*                   CallFunc_GetInventoryContext_InventoryContextNew;  // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7A[0x2];                                       // 0x007A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_PageId;                         // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0080(0x0040)(IsPlainOldData, NoDestructor)
	struct FPointerEvent                          K2Node_Event_MouseEvent_1;                         // 0x00C0(0x0098)(ConstParm)
	struct FPointerEvent                          K2Node_Event_MouseEvent;                           // 0x0158(0x0098)(ConstParm)
	struct FEventReply                            CallFunc_UpdateHover_Ret;                          // 0x01F0(0x00B8)()
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TgfGame_InventorySlots_C_ExecuteUbergraph_WBP_TgfGame_InventorySlots) == 0x000008, "Wrong alignment on WBP_TgfGame_InventorySlots_C_ExecuteUbergraph_WBP_TgfGame_InventorySlots");
static_assert(sizeof(WBP_TgfGame_InventorySlots_C_ExecuteUbergraph_WBP_TgfGame_InventorySlots) == 0x0002B0, "Wrong size on WBP_TgfGame_InventorySlots_C_ExecuteUbergraph_WBP_TgfGame_InventorySlots");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_ExecuteUbergraph_WBP_TgfGame_InventorySlots, EntryPoint) == 0x000000, "Member 'WBP_TgfGame_InventorySlots_C_ExecuteUbergraph_WBP_TgfGame_InventorySlots::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_ExecuteUbergraph_WBP_TgfGame_InventorySlots, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'WBP_TgfGame_InventorySlots_C_ExecuteUbergraph_WBP_TgfGame_InventorySlots::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_ExecuteUbergraph_WBP_TgfGame_InventorySlots, K2Node_CreateDelegate_OutputDelegate_1) == 0x000014, "Member 'WBP_TgfGame_InventorySlots_C_ExecuteUbergraph_WBP_TgfGame_InventorySlots::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_ExecuteUbergraph_WBP_TgfGame_InventorySlots, Temp_bool_not_found_Variable) == 0x000024, "Member 'WBP_TgfGame_InventorySlots_C_ExecuteUbergraph_WBP_TgfGame_InventorySlots::Temp_bool_not_found_Variable' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_ExecuteUbergraph_WBP_TgfGame_InventorySlots, CallFunc_GetInventorySize_ReturnValue) == 0x000028, "Member 'WBP_TgfGame_InventorySlots_C_ExecuteUbergraph_WBP_TgfGame_InventorySlots::CallFunc_GetInventorySize_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_ExecuteUbergraph_WBP_TgfGame_InventorySlots, Temp_wildcard_Variable) == 0x000030, "Member 'WBP_TgfGame_InventorySlots_C_ExecuteUbergraph_WBP_TgfGame_InventorySlots::Temp_wildcard_Variable' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_ExecuteUbergraph_WBP_TgfGame_InventorySlots, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'WBP_TgfGame_InventorySlots_C_ExecuteUbergraph_WBP_TgfGame_InventorySlots::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_ExecuteUbergraph_WBP_TgfGame_InventorySlots, CallFunc_FindParentWidgetOfType_ReturnValue) == 0x000040, "Member 'WBP_TgfGame_InventorySlots_C_ExecuteUbergraph_WBP_TgfGame_InventorySlots::CallFunc_FindParentWidgetOfType_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_ExecuteUbergraph_WBP_TgfGame_InventorySlots, CallFunc_DoesImplementInterface_ReturnValue) == 0x000048, "Member 'WBP_TgfGame_InventorySlots_C_ExecuteUbergraph_WBP_TgfGame_InventorySlots::CallFunc_DoesImplementInterface_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_ExecuteUbergraph_WBP_TgfGame_InventorySlots, Temp_wildcard_Variable_1) == 0x000050, "Member 'WBP_TgfGame_InventorySlots_C_ExecuteUbergraph_WBP_TgfGame_InventorySlots::Temp_wildcard_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_ExecuteUbergraph_WBP_TgfGame_InventorySlots, K2Node_DynamicCast_AsBPI_Inventory_Context_Holder) == 0x000058, "Member 'WBP_TgfGame_InventorySlots_C_ExecuteUbergraph_WBP_TgfGame_InventorySlots::K2Node_DynamicCast_AsBPI_Inventory_Context_Holder' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_ExecuteUbergraph_WBP_TgfGame_InventorySlots, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'WBP_TgfGame_InventorySlots_C_ExecuteUbergraph_WBP_TgfGame_InventorySlots::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_ExecuteUbergraph_WBP_TgfGame_InventorySlots, CallFunc_IsValid_ReturnValue_1) == 0x000069, "Member 'WBP_TgfGame_InventorySlots_C_ExecuteUbergraph_WBP_TgfGame_InventorySlots::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_ExecuteUbergraph_WBP_TgfGame_InventorySlots, CallFunc_GetInventoryContext_InventoryContextNew) == 0x000070, "Member 'WBP_TgfGame_InventorySlots_C_ExecuteUbergraph_WBP_TgfGame_InventorySlots::CallFunc_GetInventoryContext_InventoryContextNew' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_ExecuteUbergraph_WBP_TgfGame_InventorySlots, CallFunc_IsValid_ReturnValue_2) == 0x000078, "Member 'WBP_TgfGame_InventorySlots_C_ExecuteUbergraph_WBP_TgfGame_InventorySlots::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_ExecuteUbergraph_WBP_TgfGame_InventorySlots, K2Node_Event_IsDesignTime) == 0x000079, "Member 'WBP_TgfGame_InventorySlots_C_ExecuteUbergraph_WBP_TgfGame_InventorySlots::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_ExecuteUbergraph_WBP_TgfGame_InventorySlots, K2Node_CustomEvent_PageId) == 0x00007C, "Member 'WBP_TgfGame_InventorySlots_C_ExecuteUbergraph_WBP_TgfGame_InventorySlots::K2Node_CustomEvent_PageId' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_ExecuteUbergraph_WBP_TgfGame_InventorySlots, K2Node_Event_MyGeometry) == 0x000080, "Member 'WBP_TgfGame_InventorySlots_C_ExecuteUbergraph_WBP_TgfGame_InventorySlots::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_ExecuteUbergraph_WBP_TgfGame_InventorySlots, K2Node_Event_MouseEvent_1) == 0x0000C0, "Member 'WBP_TgfGame_InventorySlots_C_ExecuteUbergraph_WBP_TgfGame_InventorySlots::K2Node_Event_MouseEvent_1' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_ExecuteUbergraph_WBP_TgfGame_InventorySlots, K2Node_Event_MouseEvent) == 0x000158, "Member 'WBP_TgfGame_InventorySlots_C_ExecuteUbergraph_WBP_TgfGame_InventorySlots::K2Node_Event_MouseEvent' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_ExecuteUbergraph_WBP_TgfGame_InventorySlots, CallFunc_UpdateHover_Ret) == 0x0001F0, "Member 'WBP_TgfGame_InventorySlots_C_ExecuteUbergraph_WBP_TgfGame_InventorySlots::CallFunc_UpdateHover_Ret' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_ExecuteUbergraph_WBP_TgfGame_InventorySlots, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0002A8, "Member 'WBP_TgfGame_InventorySlots_C_ExecuteUbergraph_WBP_TgfGame_InventorySlots::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function WBP_TgfGame_InventorySlots.WBP_TgfGame_InventorySlots_C.GetCellSize
// 0x0090 (0x0090 - 0x0000)
struct WBP_TgfGame_InventorySlots_C_GetCellSize final
{
public:
	double                                        Width;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Height;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              CallFunc_GetCachedGeometry_ReturnValue;            // 0x0010(0x0040)(ConstParm, IsPlainOldData, NoDestructor)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetLocalSize_ReturnValue;                 // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TgfGame_InventorySlots_C_GetCellSize) == 0x000008, "Wrong alignment on WBP_TgfGame_InventorySlots_C_GetCellSize");
static_assert(sizeof(WBP_TgfGame_InventorySlots_C_GetCellSize) == 0x000090, "Wrong size on WBP_TgfGame_InventorySlots_C_GetCellSize");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_GetCellSize, Width) == 0x000000, "Member 'WBP_TgfGame_InventorySlots_C_GetCellSize::Width' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_GetCellSize, Height) == 0x000008, "Member 'WBP_TgfGame_InventorySlots_C_GetCellSize::Height' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_GetCellSize, CallFunc_GetCachedGeometry_ReturnValue) == 0x000010, "Member 'WBP_TgfGame_InventorySlots_C_GetCellSize::CallFunc_GetCachedGeometry_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_GetCellSize, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000050, "Member 'WBP_TgfGame_InventorySlots_C_GetCellSize::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_GetCellSize, CallFunc_GetLocalSize_ReturnValue) == 0x000058, "Member 'WBP_TgfGame_InventorySlots_C_GetCellSize::CallFunc_GetLocalSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_GetCellSize, CallFunc_BreakVector2D_X) == 0x000068, "Member 'WBP_TgfGame_InventorySlots_C_GetCellSize::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_GetCellSize, CallFunc_BreakVector2D_Y) == 0x000070, "Member 'WBP_TgfGame_InventorySlots_C_GetCellSize::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_GetCellSize, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000078, "Member 'WBP_TgfGame_InventorySlots_C_GetCellSize::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_GetCellSize, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000080, "Member 'WBP_TgfGame_InventorySlots_C_GetCellSize::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_GetCellSize, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000088, "Member 'WBP_TgfGame_InventorySlots_C_GetCellSize::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");

// Function WBP_TgfGame_InventorySlots.WBP_TgfGame_InventorySlots_C.GetMouseCell
// 0x0150 (0x0150 - 0x0000)
struct WBP_TgfGame_InventorySlots_C_GetMouseCell final
{
public:
	struct FPointerEvent                          PointerEvent;                                      // 0x0000(0x0098)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FIntPoint                              Ret;                                               // 0x0098(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_PointerEvent_GetScreenSpacePosition_ReturnValue; // 0x00A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              CallFunc_GetCachedGeometry_ReturnValue;            // 0x00B0(0x0040)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector2D                              CallFunc_AbsoluteToLocal_ReturnValue;              // 0x00F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetCellSize_Width;                        // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetCellSize_Height;                       // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FCeil_ReturnValue;                        // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FCeil_ReturnValue_1;                      // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue_1;                      // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              K2Node_MakeStruct_IntPoint;                        // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TgfGame_InventorySlots_C_GetMouseCell) == 0x000008, "Wrong alignment on WBP_TgfGame_InventorySlots_C_GetMouseCell");
static_assert(sizeof(WBP_TgfGame_InventorySlots_C_GetMouseCell) == 0x000150, "Wrong size on WBP_TgfGame_InventorySlots_C_GetMouseCell");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_GetMouseCell, PointerEvent) == 0x000000, "Member 'WBP_TgfGame_InventorySlots_C_GetMouseCell::PointerEvent' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_GetMouseCell, Ret) == 0x000098, "Member 'WBP_TgfGame_InventorySlots_C_GetMouseCell::Ret' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_GetMouseCell, CallFunc_PointerEvent_GetScreenSpacePosition_ReturnValue) == 0x0000A0, "Member 'WBP_TgfGame_InventorySlots_C_GetMouseCell::CallFunc_PointerEvent_GetScreenSpacePosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_GetMouseCell, CallFunc_GetCachedGeometry_ReturnValue) == 0x0000B0, "Member 'WBP_TgfGame_InventorySlots_C_GetMouseCell::CallFunc_GetCachedGeometry_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_GetMouseCell, CallFunc_AbsoluteToLocal_ReturnValue) == 0x0000F0, "Member 'WBP_TgfGame_InventorySlots_C_GetMouseCell::CallFunc_AbsoluteToLocal_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_GetMouseCell, CallFunc_BreakVector2D_X) == 0x000100, "Member 'WBP_TgfGame_InventorySlots_C_GetMouseCell::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_GetMouseCell, CallFunc_BreakVector2D_Y) == 0x000108, "Member 'WBP_TgfGame_InventorySlots_C_GetMouseCell::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_GetMouseCell, CallFunc_GetCellSize_Width) == 0x000110, "Member 'WBP_TgfGame_InventorySlots_C_GetMouseCell::CallFunc_GetCellSize_Width' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_GetMouseCell, CallFunc_GetCellSize_Height) == 0x000118, "Member 'WBP_TgfGame_InventorySlots_C_GetMouseCell::CallFunc_GetCellSize_Height' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_GetMouseCell, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000120, "Member 'WBP_TgfGame_InventorySlots_C_GetMouseCell::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_GetMouseCell, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000128, "Member 'WBP_TgfGame_InventorySlots_C_GetMouseCell::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_GetMouseCell, CallFunc_FCeil_ReturnValue) == 0x000130, "Member 'WBP_TgfGame_InventorySlots_C_GetMouseCell::CallFunc_FCeil_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_GetMouseCell, CallFunc_FCeil_ReturnValue_1) == 0x000134, "Member 'WBP_TgfGame_InventorySlots_C_GetMouseCell::CallFunc_FCeil_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_GetMouseCell, CallFunc_Clamp_ReturnValue) == 0x000138, "Member 'WBP_TgfGame_InventorySlots_C_GetMouseCell::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_GetMouseCell, CallFunc_Clamp_ReturnValue_1) == 0x00013C, "Member 'WBP_TgfGame_InventorySlots_C_GetMouseCell::CallFunc_Clamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_GetMouseCell, CallFunc_Subtract_IntInt_ReturnValue) == 0x000140, "Member 'WBP_TgfGame_InventorySlots_C_GetMouseCell::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_GetMouseCell, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000144, "Member 'WBP_TgfGame_InventorySlots_C_GetMouseCell::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_GetMouseCell, K2Node_MakeStruct_IntPoint) == 0x000148, "Member 'WBP_TgfGame_InventorySlots_C_GetMouseCell::K2Node_MakeStruct_IntPoint' has a wrong offset!");

// Function WBP_TgfGame_InventorySlots.WBP_TgfGame_InventorySlots_C.GetPotentialDropPosition
// 0x0108 (0x0108 - 0x0000)
struct WBP_TgfGame_InventorySlots_C_GetPotentialDropPosition final
{
public:
	struct FVector2D                              AbsoluteCoordinate;                                // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSubclassOf<class ULyraInventoryItemDefinition> Item_Definition;                                   // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	int32                                         TopRow;                                            // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LeftColumn;                                        // 0x001C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RowSize;                                           // 0x0020(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ColumnSize;                                        // 0x0024(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ItemColumnSize;                                    // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ItemRowSize;                                       // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              CallFunc_GetCachedGeometry_ReturnValue;            // 0x0030(0x0040)(ConstParm, IsPlainOldData, NoDestructor)
	struct FIntPoint                              CallFunc_GetItemSize_ReturnValue;                  // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_AbsoluteToLocal_ReturnValue;              // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetCellSize_Width;                        // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetCellSize_Height;                       // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue_1;                      // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue_1;                      // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TgfGame_InventorySlots_C_GetPotentialDropPosition) == 0x000008, "Wrong alignment on WBP_TgfGame_InventorySlots_C_GetPotentialDropPosition");
static_assert(sizeof(WBP_TgfGame_InventorySlots_C_GetPotentialDropPosition) == 0x000108, "Wrong size on WBP_TgfGame_InventorySlots_C_GetPotentialDropPosition");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_GetPotentialDropPosition, AbsoluteCoordinate) == 0x000000, "Member 'WBP_TgfGame_InventorySlots_C_GetPotentialDropPosition::AbsoluteCoordinate' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_GetPotentialDropPosition, Item_Definition) == 0x000010, "Member 'WBP_TgfGame_InventorySlots_C_GetPotentialDropPosition::Item_Definition' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_GetPotentialDropPosition, TopRow) == 0x000018, "Member 'WBP_TgfGame_InventorySlots_C_GetPotentialDropPosition::TopRow' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_GetPotentialDropPosition, LeftColumn) == 0x00001C, "Member 'WBP_TgfGame_InventorySlots_C_GetPotentialDropPosition::LeftColumn' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_GetPotentialDropPosition, RowSize) == 0x000020, "Member 'WBP_TgfGame_InventorySlots_C_GetPotentialDropPosition::RowSize' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_GetPotentialDropPosition, ColumnSize) == 0x000024, "Member 'WBP_TgfGame_InventorySlots_C_GetPotentialDropPosition::ColumnSize' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_GetPotentialDropPosition, ItemColumnSize) == 0x000028, "Member 'WBP_TgfGame_InventorySlots_C_GetPotentialDropPosition::ItemColumnSize' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_GetPotentialDropPosition, ItemRowSize) == 0x00002C, "Member 'WBP_TgfGame_InventorySlots_C_GetPotentialDropPosition::ItemRowSize' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_GetPotentialDropPosition, CallFunc_GetCachedGeometry_ReturnValue) == 0x000030, "Member 'WBP_TgfGame_InventorySlots_C_GetPotentialDropPosition::CallFunc_GetCachedGeometry_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_GetPotentialDropPosition, CallFunc_GetItemSize_ReturnValue) == 0x000070, "Member 'WBP_TgfGame_InventorySlots_C_GetPotentialDropPosition::CallFunc_GetItemSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_GetPotentialDropPosition, CallFunc_AbsoluteToLocal_ReturnValue) == 0x000078, "Member 'WBP_TgfGame_InventorySlots_C_GetPotentialDropPosition::CallFunc_AbsoluteToLocal_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_GetPotentialDropPosition, CallFunc_BreakVector2D_X) == 0x000088, "Member 'WBP_TgfGame_InventorySlots_C_GetPotentialDropPosition::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_GetPotentialDropPosition, CallFunc_BreakVector2D_Y) == 0x000090, "Member 'WBP_TgfGame_InventorySlots_C_GetPotentialDropPosition::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_GetPotentialDropPosition, CallFunc_Subtract_IntInt_ReturnValue) == 0x000098, "Member 'WBP_TgfGame_InventorySlots_C_GetPotentialDropPosition::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_GetPotentialDropPosition, CallFunc_Conv_IntToDouble_ReturnValue) == 0x0000A0, "Member 'WBP_TgfGame_InventorySlots_C_GetPotentialDropPosition::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_GetPotentialDropPosition, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x0000A8, "Member 'WBP_TgfGame_InventorySlots_C_GetPotentialDropPosition::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_GetPotentialDropPosition, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0000B0, "Member 'WBP_TgfGame_InventorySlots_C_GetPotentialDropPosition::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_GetPotentialDropPosition, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x0000B8, "Member 'WBP_TgfGame_InventorySlots_C_GetPotentialDropPosition::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_GetPotentialDropPosition, CallFunc_GetCellSize_Width) == 0x0000C0, "Member 'WBP_TgfGame_InventorySlots_C_GetPotentialDropPosition::CallFunc_GetCellSize_Width' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_GetPotentialDropPosition, CallFunc_GetCellSize_Height) == 0x0000C8, "Member 'WBP_TgfGame_InventorySlots_C_GetPotentialDropPosition::CallFunc_GetCellSize_Height' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_GetPotentialDropPosition, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x0000D0, "Member 'WBP_TgfGame_InventorySlots_C_GetPotentialDropPosition::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_GetPotentialDropPosition, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x0000D8, "Member 'WBP_TgfGame_InventorySlots_C_GetPotentialDropPosition::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_GetPotentialDropPosition, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x0000E0, "Member 'WBP_TgfGame_InventorySlots_C_GetPotentialDropPosition::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_GetPotentialDropPosition, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0000E8, "Member 'WBP_TgfGame_InventorySlots_C_GetPotentialDropPosition::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_GetPotentialDropPosition, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x0000F0, "Member 'WBP_TgfGame_InventorySlots_C_GetPotentialDropPosition::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_GetPotentialDropPosition, CallFunc_Round_ReturnValue) == 0x0000F8, "Member 'WBP_TgfGame_InventorySlots_C_GetPotentialDropPosition::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_GetPotentialDropPosition, CallFunc_Round_ReturnValue_1) == 0x0000FC, "Member 'WBP_TgfGame_InventorySlots_C_GetPotentialDropPosition::CallFunc_Round_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_GetPotentialDropPosition, CallFunc_Clamp_ReturnValue) == 0x000100, "Member 'WBP_TgfGame_InventorySlots_C_GetPotentialDropPosition::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_GetPotentialDropPosition, CallFunc_Clamp_ReturnValue_1) == 0x000104, "Member 'WBP_TgfGame_InventorySlots_C_GetPotentialDropPosition::CallFunc_Clamp_ReturnValue_1' has a wrong offset!");

// Function WBP_TgfGame_InventorySlots.WBP_TgfGame_InventorySlots_C.OnDragEnter
// 0x00E8 (0x00E8 - 0x0000)
struct WBP_TgfGame_InventorySlots_C_OnDragEnter final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          PointerEvent;                                      // 0x0040(0x0098)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UDragDropOperation*                     Operation;                                         // 0x00D8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ObjectIsA_ReturnValue;                    // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TgfGame_InventorySlots_C_OnDragEnter) == 0x000008, "Wrong alignment on WBP_TgfGame_InventorySlots_C_OnDragEnter");
static_assert(sizeof(WBP_TgfGame_InventorySlots_C_OnDragEnter) == 0x0000E8, "Wrong size on WBP_TgfGame_InventorySlots_C_OnDragEnter");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_OnDragEnter, MyGeometry) == 0x000000, "Member 'WBP_TgfGame_InventorySlots_C_OnDragEnter::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_OnDragEnter, PointerEvent) == 0x000040, "Member 'WBP_TgfGame_InventorySlots_C_OnDragEnter::PointerEvent' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_OnDragEnter, Operation) == 0x0000D8, "Member 'WBP_TgfGame_InventorySlots_C_OnDragEnter::Operation' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_OnDragEnter, CallFunc_ObjectIsA_ReturnValue) == 0x0000E0, "Member 'WBP_TgfGame_InventorySlots_C_OnDragEnter::CallFunc_ObjectIsA_ReturnValue' has a wrong offset!");

// Function WBP_TgfGame_InventorySlots.WBP_TgfGame_InventorySlots_C.OnDragLeave
// 0x00A0 (0x00A0 - 0x0000)
struct WBP_TgfGame_InventorySlots_C_OnDragLeave final
{
public:
	struct FPointerEvent                          PointerEvent;                                      // 0x0000(0x0098)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UDragDropOperation*                     Operation;                                         // 0x0098(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TgfGame_InventorySlots_C_OnDragLeave) == 0x000008, "Wrong alignment on WBP_TgfGame_InventorySlots_C_OnDragLeave");
static_assert(sizeof(WBP_TgfGame_InventorySlots_C_OnDragLeave) == 0x0000A0, "Wrong size on WBP_TgfGame_InventorySlots_C_OnDragLeave");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_OnDragLeave, PointerEvent) == 0x000000, "Member 'WBP_TgfGame_InventorySlots_C_OnDragLeave::PointerEvent' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_OnDragLeave, Operation) == 0x000098, "Member 'WBP_TgfGame_InventorySlots_C_OnDragLeave::Operation' has a wrong offset!");

// Function WBP_TgfGame_InventorySlots.WBP_TgfGame_InventorySlots_C.OnDragOver
// 0x0170 (0x0170 - 0x0000)
struct WBP_TgfGame_InventorySlots_C_OnDragOver final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          PointerEvent;                                      // 0x0040(0x0098)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UDragDropOperation*                     Operation;                                         // 0x00D8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x00E0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bAllowed;                                          // 0x00E1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E3[0x5];                                       // 0x00E3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_Inventory_DragDrop_Base_C*          K2Node_DynamicCast_AsBP_Inventory_Drag_Drop_Base;  // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_PointerEvent_GetScreenSpacePosition_ReturnValue; // 0x00F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable;                              // 0x0108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TSubclassOf<class UTgfInventoryItemDefinition> CallFunc_GetItemDefinition_ReturnValue;            // 0x0110(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	int32                                         CallFunc_GetPotentialDropPosition_TopRow;          // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPotentialDropPosition_LeftColumn;      // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPotentialDropPosition_RowSize;         // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPotentialDropPosition_ColumnSize;      // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_1;                            // 0x0128(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              K2Node_MakeStruct_IntPoint;                        // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              K2Node_MakeStruct_IntPoint_1;                      // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGridSlot*                              CallFunc_SlotAsGridSlot_ReturnValue;               // 0x0140(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_DropToInventory_OutFailReason;            // 0x0148(0x0018)()
	bool                                          CallFunc_DropToInventory_ReturnValue;              // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_161[0x7];                                      // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_Select_Default;                             // 0x0168(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TgfGame_InventorySlots_C_OnDragOver) == 0x000008, "Wrong alignment on WBP_TgfGame_InventorySlots_C_OnDragOver");
static_assert(sizeof(WBP_TgfGame_InventorySlots_C_OnDragOver) == 0x000170, "Wrong size on WBP_TgfGame_InventorySlots_C_OnDragOver");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_OnDragOver, MyGeometry) == 0x000000, "Member 'WBP_TgfGame_InventorySlots_C_OnDragOver::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_OnDragOver, PointerEvent) == 0x000040, "Member 'WBP_TgfGame_InventorySlots_C_OnDragOver::PointerEvent' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_OnDragOver, Operation) == 0x0000D8, "Member 'WBP_TgfGame_InventorySlots_C_OnDragOver::Operation' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_OnDragOver, ReturnValue) == 0x0000E0, "Member 'WBP_TgfGame_InventorySlots_C_OnDragOver::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_OnDragOver, bAllowed) == 0x0000E1, "Member 'WBP_TgfGame_InventorySlots_C_OnDragOver::bAllowed' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_OnDragOver, Temp_bool_Variable) == 0x0000E2, "Member 'WBP_TgfGame_InventorySlots_C_OnDragOver::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_OnDragOver, K2Node_DynamicCast_AsBP_Inventory_Drag_Drop_Base) == 0x0000E8, "Member 'WBP_TgfGame_InventorySlots_C_OnDragOver::K2Node_DynamicCast_AsBP_Inventory_Drag_Drop_Base' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_OnDragOver, K2Node_DynamicCast_bSuccess) == 0x0000F0, "Member 'WBP_TgfGame_InventorySlots_C_OnDragOver::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_OnDragOver, CallFunc_PointerEvent_GetScreenSpacePosition_ReturnValue) == 0x0000F8, "Member 'WBP_TgfGame_InventorySlots_C_OnDragOver::CallFunc_PointerEvent_GetScreenSpacePosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_OnDragOver, Temp_object_Variable) == 0x000108, "Member 'WBP_TgfGame_InventorySlots_C_OnDragOver::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_OnDragOver, CallFunc_GetItemDefinition_ReturnValue) == 0x000110, "Member 'WBP_TgfGame_InventorySlots_C_OnDragOver::CallFunc_GetItemDefinition_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_OnDragOver, CallFunc_GetPotentialDropPosition_TopRow) == 0x000118, "Member 'WBP_TgfGame_InventorySlots_C_OnDragOver::CallFunc_GetPotentialDropPosition_TopRow' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_OnDragOver, CallFunc_GetPotentialDropPosition_LeftColumn) == 0x00011C, "Member 'WBP_TgfGame_InventorySlots_C_OnDragOver::CallFunc_GetPotentialDropPosition_LeftColumn' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_OnDragOver, CallFunc_GetPotentialDropPosition_RowSize) == 0x000120, "Member 'WBP_TgfGame_InventorySlots_C_OnDragOver::CallFunc_GetPotentialDropPosition_RowSize' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_OnDragOver, CallFunc_GetPotentialDropPosition_ColumnSize) == 0x000124, "Member 'WBP_TgfGame_InventorySlots_C_OnDragOver::CallFunc_GetPotentialDropPosition_ColumnSize' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_OnDragOver, Temp_object_Variable_1) == 0x000128, "Member 'WBP_TgfGame_InventorySlots_C_OnDragOver::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_OnDragOver, K2Node_MakeStruct_IntPoint) == 0x000130, "Member 'WBP_TgfGame_InventorySlots_C_OnDragOver::K2Node_MakeStruct_IntPoint' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_OnDragOver, K2Node_MakeStruct_IntPoint_1) == 0x000138, "Member 'WBP_TgfGame_InventorySlots_C_OnDragOver::K2Node_MakeStruct_IntPoint_1' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_OnDragOver, CallFunc_SlotAsGridSlot_ReturnValue) == 0x000140, "Member 'WBP_TgfGame_InventorySlots_C_OnDragOver::CallFunc_SlotAsGridSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_OnDragOver, CallFunc_DropToInventory_OutFailReason) == 0x000148, "Member 'WBP_TgfGame_InventorySlots_C_OnDragOver::CallFunc_DropToInventory_OutFailReason' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_OnDragOver, CallFunc_DropToInventory_ReturnValue) == 0x000160, "Member 'WBP_TgfGame_InventorySlots_C_OnDragOver::CallFunc_DropToInventory_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_OnDragOver, K2Node_Select_Default) == 0x000168, "Member 'WBP_TgfGame_InventorySlots_C_OnDragOver::K2Node_Select_Default' has a wrong offset!");

// Function WBP_TgfGame_InventorySlots.WBP_TgfGame_InventorySlots_C.OnDrop
// 0x0170 (0x0170 - 0x0000)
struct WBP_TgfGame_InventorySlots_C_OnDrop final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          PointerEvent;                                      // 0x0040(0x0098)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UDragDropOperation*                     Operation;                                         // 0x00D8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x00E0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_Inventory_DragDrop_Base_C*          K2Node_DynamicCast_AsBP_Inventory_Drag_Drop_Base;  // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_PointerEvent_GetScreenSpacePosition_ReturnValue; // 0x00F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UInventoryFragment_Sound*         CallFunc_FindFragmentByClass_ReturnValue;          // 0x0108(0x0008)(ConstParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TSubclassOf<class UTgfInventoryItemDefinition> CallFunc_GetItemDefinition_ReturnValue;            // 0x0110(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_119[0x3];                                      // 0x0119(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetPotentialDropPosition_TopRow;          // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPotentialDropPosition_LeftColumn;      // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPotentialDropPosition_RowSize;         // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPotentialDropPosition_ColumnSize;      // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              K2Node_MakeStruct_IntPoint;                        // 0x012C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              K2Node_MakeStruct_IntPoint_1;                      // 0x0134(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x013C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13D[0x3];                                      // 0x013D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable;                            // 0x0140(0x0010)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_DropToInventory_OutFailReason;            // 0x0150(0x0018)()
	bool                                          CallFunc_DropToInventory_ReturnValue;              // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_169[0x3];                                      // 0x0169(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_PostEvent_ReturnValue;                    // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TgfGame_InventorySlots_C_OnDrop) == 0x000008, "Wrong alignment on WBP_TgfGame_InventorySlots_C_OnDrop");
static_assert(sizeof(WBP_TgfGame_InventorySlots_C_OnDrop) == 0x000170, "Wrong size on WBP_TgfGame_InventorySlots_C_OnDrop");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_OnDrop, MyGeometry) == 0x000000, "Member 'WBP_TgfGame_InventorySlots_C_OnDrop::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_OnDrop, PointerEvent) == 0x000040, "Member 'WBP_TgfGame_InventorySlots_C_OnDrop::PointerEvent' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_OnDrop, Operation) == 0x0000D8, "Member 'WBP_TgfGame_InventorySlots_C_OnDrop::Operation' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_OnDrop, ReturnValue) == 0x0000E0, "Member 'WBP_TgfGame_InventorySlots_C_OnDrop::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_OnDrop, K2Node_DynamicCast_AsBP_Inventory_Drag_Drop_Base) == 0x0000E8, "Member 'WBP_TgfGame_InventorySlots_C_OnDrop::K2Node_DynamicCast_AsBP_Inventory_Drag_Drop_Base' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_OnDrop, K2Node_DynamicCast_bSuccess) == 0x0000F0, "Member 'WBP_TgfGame_InventorySlots_C_OnDrop::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_OnDrop, CallFunc_PointerEvent_GetScreenSpacePosition_ReturnValue) == 0x0000F8, "Member 'WBP_TgfGame_InventorySlots_C_OnDrop::CallFunc_PointerEvent_GetScreenSpacePosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_OnDrop, CallFunc_FindFragmentByClass_ReturnValue) == 0x000108, "Member 'WBP_TgfGame_InventorySlots_C_OnDrop::CallFunc_FindFragmentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_OnDrop, CallFunc_GetItemDefinition_ReturnValue) == 0x000110, "Member 'WBP_TgfGame_InventorySlots_C_OnDrop::CallFunc_GetItemDefinition_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_OnDrop, CallFunc_IsValid_ReturnValue) == 0x000118, "Member 'WBP_TgfGame_InventorySlots_C_OnDrop::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_OnDrop, CallFunc_GetPotentialDropPosition_TopRow) == 0x00011C, "Member 'WBP_TgfGame_InventorySlots_C_OnDrop::CallFunc_GetPotentialDropPosition_TopRow' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_OnDrop, CallFunc_GetPotentialDropPosition_LeftColumn) == 0x000120, "Member 'WBP_TgfGame_InventorySlots_C_OnDrop::CallFunc_GetPotentialDropPosition_LeftColumn' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_OnDrop, CallFunc_GetPotentialDropPosition_RowSize) == 0x000124, "Member 'WBP_TgfGame_InventorySlots_C_OnDrop::CallFunc_GetPotentialDropPosition_RowSize' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_OnDrop, CallFunc_GetPotentialDropPosition_ColumnSize) == 0x000128, "Member 'WBP_TgfGame_InventorySlots_C_OnDrop::CallFunc_GetPotentialDropPosition_ColumnSize' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_OnDrop, K2Node_MakeStruct_IntPoint) == 0x00012C, "Member 'WBP_TgfGame_InventorySlots_C_OnDrop::K2Node_MakeStruct_IntPoint' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_OnDrop, K2Node_MakeStruct_IntPoint_1) == 0x000134, "Member 'WBP_TgfGame_InventorySlots_C_OnDrop::K2Node_MakeStruct_IntPoint_1' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_OnDrop, CallFunc_IsValid_ReturnValue_1) == 0x00013C, "Member 'WBP_TgfGame_InventorySlots_C_OnDrop::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_OnDrop, Temp_delegate_Variable) == 0x000140, "Member 'WBP_TgfGame_InventorySlots_C_OnDrop::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_OnDrop, CallFunc_DropToInventory_OutFailReason) == 0x000150, "Member 'WBP_TgfGame_InventorySlots_C_OnDrop::CallFunc_DropToInventory_OutFailReason' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_OnDrop, CallFunc_DropToInventory_ReturnValue) == 0x000168, "Member 'WBP_TgfGame_InventorySlots_C_OnDrop::CallFunc_DropToInventory_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_OnDrop, CallFunc_PostEvent_ReturnValue) == 0x00016C, "Member 'WBP_TgfGame_InventorySlots_C_OnDrop::CallFunc_PostEvent_ReturnValue' has a wrong offset!");

// Function WBP_TgfGame_InventorySlots.WBP_TgfGame_InventorySlots_C.OnMouseEnter
// 0x00D8 (0x00D8 - 0x0000)
struct WBP_TgfGame_InventorySlots_C_OnMouseEnter final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0040(0x0098)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_TgfGame_InventorySlots_C_OnMouseEnter) == 0x000008, "Wrong alignment on WBP_TgfGame_InventorySlots_C_OnMouseEnter");
static_assert(sizeof(WBP_TgfGame_InventorySlots_C_OnMouseEnter) == 0x0000D8, "Wrong size on WBP_TgfGame_InventorySlots_C_OnMouseEnter");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_OnMouseEnter, MyGeometry) == 0x000000, "Member 'WBP_TgfGame_InventorySlots_C_OnMouseEnter::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_OnMouseEnter, MouseEvent) == 0x000040, "Member 'WBP_TgfGame_InventorySlots_C_OnMouseEnter::MouseEvent' has a wrong offset!");

// Function WBP_TgfGame_InventorySlots.WBP_TgfGame_InventorySlots_C.OnMouseLeave
// 0x0098 (0x0098 - 0x0000)
struct WBP_TgfGame_InventorySlots_C_OnMouseLeave final
{
public:
	struct FPointerEvent                          MouseEvent;                                        // 0x0000(0x0098)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_TgfGame_InventorySlots_C_OnMouseLeave) == 0x000008, "Wrong alignment on WBP_TgfGame_InventorySlots_C_OnMouseLeave");
static_assert(sizeof(WBP_TgfGame_InventorySlots_C_OnMouseLeave) == 0x000098, "Wrong size on WBP_TgfGame_InventorySlots_C_OnMouseLeave");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_OnMouseLeave, MouseEvent) == 0x000000, "Member 'WBP_TgfGame_InventorySlots_C_OnMouseLeave::MouseEvent' has a wrong offset!");

// Function WBP_TgfGame_InventorySlots.WBP_TgfGame_InventorySlots_C.OnMouseMove
// 0x0248 (0x0248 - 0x0000)
struct WBP_TgfGame_InventorySlots_C_OnMouseMove final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0040(0x0098)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00D8(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_UpdateHover_Ret;                          // 0x0190(0x00B8)()
};
static_assert(alignof(WBP_TgfGame_InventorySlots_C_OnMouseMove) == 0x000008, "Wrong alignment on WBP_TgfGame_InventorySlots_C_OnMouseMove");
static_assert(sizeof(WBP_TgfGame_InventorySlots_C_OnMouseMove) == 0x000248, "Wrong size on WBP_TgfGame_InventorySlots_C_OnMouseMove");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_OnMouseMove, MyGeometry) == 0x000000, "Member 'WBP_TgfGame_InventorySlots_C_OnMouseMove::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_OnMouseMove, MouseEvent) == 0x000040, "Member 'WBP_TgfGame_InventorySlots_C_OnMouseMove::MouseEvent' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_OnMouseMove, ReturnValue) == 0x0000D8, "Member 'WBP_TgfGame_InventorySlots_C_OnMouseMove::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_OnMouseMove, CallFunc_UpdateHover_Ret) == 0x000190, "Member 'WBP_TgfGame_InventorySlots_C_OnMouseMove::CallFunc_UpdateHover_Ret' has a wrong offset!");

// Function WBP_TgfGame_InventorySlots.WBP_TgfGame_InventorySlots_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_TgfGame_InventorySlots_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TgfGame_InventorySlots_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_TgfGame_InventorySlots_C_PreConstruct");
static_assert(sizeof(WBP_TgfGame_InventorySlots_C_PreConstruct) == 0x000001, "Wrong size on WBP_TgfGame_InventorySlots_C_PreConstruct");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_TgfGame_InventorySlots_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_TgfGame_InventorySlots.WBP_TgfGame_InventorySlots_C.PreviewGrid
// 0x0150 (0x0150 - 0x0000)
struct WBP_TgfGame_InventorySlots_C_PreviewGrid final
{
public:
	int32                                         Rows;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Columns;                                           // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UWidget*>                        CachedGridCells;                                   // 0x0008(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_3;            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGridSlot*                              CallFunc_SlotAsGridSlot_ReturnValue;               // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UGridSlot*                              CallFunc_SlotAsGridSlot_ReturnValue_1;             // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue_1;            // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x0080(0x00D0)()
};
static_assert(alignof(WBP_TgfGame_InventorySlots_C_PreviewGrid) == 0x000010, "Wrong alignment on WBP_TgfGame_InventorySlots_C_PreviewGrid");
static_assert(sizeof(WBP_TgfGame_InventorySlots_C_PreviewGrid) == 0x000150, "Wrong size on WBP_TgfGame_InventorySlots_C_PreviewGrid");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_PreviewGrid, Rows) == 0x000000, "Member 'WBP_TgfGame_InventorySlots_C_PreviewGrid::Rows' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_PreviewGrid, Columns) == 0x000004, "Member 'WBP_TgfGame_InventorySlots_C_PreviewGrid::Columns' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_PreviewGrid, CachedGridCells) == 0x000008, "Member 'WBP_TgfGame_InventorySlots_C_PreviewGrid::CachedGridCells' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_PreviewGrid, CallFunc_Subtract_IntInt_ReturnValue) == 0x000018, "Member 'WBP_TgfGame_InventorySlots_C_PreviewGrid::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_PreviewGrid, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x00001C, "Member 'WBP_TgfGame_InventorySlots_C_PreviewGrid::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_PreviewGrid, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x000020, "Member 'WBP_TgfGame_InventorySlots_C_PreviewGrid::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_PreviewGrid, CallFunc_Subtract_IntInt_ReturnValue_3) == 0x000024, "Member 'WBP_TgfGame_InventorySlots_C_PreviewGrid::CallFunc_Subtract_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_PreviewGrid, Temp_int_Variable) == 0x000028, "Member 'WBP_TgfGame_InventorySlots_C_PreviewGrid::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_PreviewGrid, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00002C, "Member 'WBP_TgfGame_InventorySlots_C_PreviewGrid::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_PreviewGrid, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'WBP_TgfGame_InventorySlots_C_PreviewGrid::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_PreviewGrid, CallFunc_SlotAsGridSlot_ReturnValue) == 0x000038, "Member 'WBP_TgfGame_InventorySlots_C_PreviewGrid::CallFunc_SlotAsGridSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_PreviewGrid, CallFunc_SlotAsGridSlot_ReturnValue_1) == 0x000040, "Member 'WBP_TgfGame_InventorySlots_C_PreviewGrid::CallFunc_SlotAsGridSlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_PreviewGrid, Temp_int_Variable_1) == 0x000048, "Member 'WBP_TgfGame_InventorySlots_C_PreviewGrid::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_PreviewGrid, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x00004C, "Member 'WBP_TgfGame_InventorySlots_C_PreviewGrid::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_PreviewGrid, CallFunc_Add_IntInt_ReturnValue_1) == 0x000050, "Member 'WBP_TgfGame_InventorySlots_C_PreviewGrid::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_PreviewGrid, CallFunc_Multiply_IntInt_ReturnValue) == 0x000054, "Member 'WBP_TgfGame_InventorySlots_C_PreviewGrid::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_PreviewGrid, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000058, "Member 'WBP_TgfGame_InventorySlots_C_PreviewGrid::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_PreviewGrid, CallFunc_Multiply_IntInt_ReturnValue_1) == 0x000060, "Member 'WBP_TgfGame_InventorySlots_C_PreviewGrid::CallFunc_Multiply_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_PreviewGrid, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000068, "Member 'WBP_TgfGame_InventorySlots_C_PreviewGrid::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_PreviewGrid, CallFunc_MakeVector2D_ReturnValue) == 0x000070, "Member 'WBP_TgfGame_InventorySlots_C_PreviewGrid::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_PreviewGrid, K2Node_MakeStruct_SlateBrush) == 0x000080, "Member 'WBP_TgfGame_InventorySlots_C_PreviewGrid::K2Node_MakeStruct_SlateBrush' has a wrong offset!");

// Function WBP_TgfGame_InventorySlots.WBP_TgfGame_InventorySlots_C.RefreshEntries
// 0x0060 (0x0060 - 0x0000)
struct WBP_TgfGame_InventorySlots_C_RefreshEntries final
{
public:
	class UWBP_TgfGame_InventoryEntry_C*          CallFunc_Create_ReturnValue;                       // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UTgfInventoryItemWrapper*>       CallFunc_GetInventoryItems_OutItems;               // 0x0018(0x0010)(ReferenceParm)
	class UTgfInventoryItemWrapper*               CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGridSlot*                              CallFunc_AddChildToGrid_ReturnValue;               // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_Array_Get_Item_1;                         // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TgfGame_InventorySlots_C_RefreshEntries) == 0x000008, "Wrong alignment on WBP_TgfGame_InventorySlots_C_RefreshEntries");
static_assert(sizeof(WBP_TgfGame_InventorySlots_C_RefreshEntries) == 0x000060, "Wrong size on WBP_TgfGame_InventorySlots_C_RefreshEntries");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_RefreshEntries, CallFunc_Create_ReturnValue) == 0x000000, "Member 'WBP_TgfGame_InventorySlots_C_RefreshEntries::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_RefreshEntries, Temp_int_Array_Index_Variable) == 0x000008, "Member 'WBP_TgfGame_InventorySlots_C_RefreshEntries::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_RefreshEntries, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'WBP_TgfGame_InventorySlots_C_RefreshEntries::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_RefreshEntries, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'WBP_TgfGame_InventorySlots_C_RefreshEntries::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_RefreshEntries, Temp_int_Array_Index_Variable_1) == 0x000014, "Member 'WBP_TgfGame_InventorySlots_C_RefreshEntries::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_RefreshEntries, CallFunc_GetInventoryItems_OutItems) == 0x000018, "Member 'WBP_TgfGame_InventorySlots_C_RefreshEntries::CallFunc_GetInventoryItems_OutItems' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_RefreshEntries, CallFunc_Array_Get_Item) == 0x000028, "Member 'WBP_TgfGame_InventorySlots_C_RefreshEntries::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_RefreshEntries, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'WBP_TgfGame_InventorySlots_C_RefreshEntries::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_RefreshEntries, CallFunc_Array_Add_ReturnValue) == 0x000034, "Member 'WBP_TgfGame_InventorySlots_C_RefreshEntries::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_RefreshEntries, CallFunc_AddChildToGrid_ReturnValue) == 0x000038, "Member 'WBP_TgfGame_InventorySlots_C_RefreshEntries::CallFunc_AddChildToGrid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_RefreshEntries, Temp_int_Loop_Counter_Variable_1) == 0x000040, "Member 'WBP_TgfGame_InventorySlots_C_RefreshEntries::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_RefreshEntries, CallFunc_Less_IntInt_ReturnValue) == 0x000044, "Member 'WBP_TgfGame_InventorySlots_C_RefreshEntries::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_RefreshEntries, CallFunc_Add_IntInt_ReturnValue_1) == 0x000048, "Member 'WBP_TgfGame_InventorySlots_C_RefreshEntries::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_RefreshEntries, CallFunc_Array_Get_Item_1) == 0x000050, "Member 'WBP_TgfGame_InventorySlots_C_RefreshEntries::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_RefreshEntries, CallFunc_Array_Length_ReturnValue_1) == 0x000058, "Member 'WBP_TgfGame_InventorySlots_C_RefreshEntries::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_RefreshEntries, CallFunc_Less_IntInt_ReturnValue_1) == 0x00005C, "Member 'WBP_TgfGame_InventorySlots_C_RefreshEntries::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function WBP_TgfGame_InventorySlots.WBP_TgfGame_InventorySlots_C.SetDropIndicatorStats
// 0x0020 (0x0020 - 0x0000)
struct WBP_TgfGame_InventorySlots_C_SetDropIndicatorStats final
{
public:
	bool                                          Stats;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_1;                            // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_Select_Default;                             // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TgfGame_InventorySlots_C_SetDropIndicatorStats) == 0x000008, "Wrong alignment on WBP_TgfGame_InventorySlots_C_SetDropIndicatorStats");
static_assert(sizeof(WBP_TgfGame_InventorySlots_C_SetDropIndicatorStats) == 0x000020, "Wrong size on WBP_TgfGame_InventorySlots_C_SetDropIndicatorStats");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_SetDropIndicatorStats, Stats) == 0x000000, "Member 'WBP_TgfGame_InventorySlots_C_SetDropIndicatorStats::Stats' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_SetDropIndicatorStats, Temp_bool_Variable) == 0x000001, "Member 'WBP_TgfGame_InventorySlots_C_SetDropIndicatorStats::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_SetDropIndicatorStats, Temp_object_Variable) == 0x000008, "Member 'WBP_TgfGame_InventorySlots_C_SetDropIndicatorStats::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_SetDropIndicatorStats, Temp_object_Variable_1) == 0x000010, "Member 'WBP_TgfGame_InventorySlots_C_SetDropIndicatorStats::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_SetDropIndicatorStats, K2Node_Select_Default) == 0x000018, "Member 'WBP_TgfGame_InventorySlots_C_SetDropIndicatorStats::K2Node_Select_Default' has a wrong offset!");

// Function WBP_TgfGame_InventorySlots.WBP_TgfGame_InventorySlots_C.SetDropIndicatorVisibility
// 0x0005 (0x0005 - 0x0000)
struct WBP_TgfGame_InventorySlots_C_SetDropIndicatorVisibility final
{
public:
	bool                                          bVisible;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TgfGame_InventorySlots_C_SetDropIndicatorVisibility) == 0x000001, "Wrong alignment on WBP_TgfGame_InventorySlots_C_SetDropIndicatorVisibility");
static_assert(sizeof(WBP_TgfGame_InventorySlots_C_SetDropIndicatorVisibility) == 0x000005, "Wrong size on WBP_TgfGame_InventorySlots_C_SetDropIndicatorVisibility");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_SetDropIndicatorVisibility, bVisible) == 0x000000, "Member 'WBP_TgfGame_InventorySlots_C_SetDropIndicatorVisibility::bVisible' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_SetDropIndicatorVisibility, Temp_bool_Variable) == 0x000001, "Member 'WBP_TgfGame_InventorySlots_C_SetDropIndicatorVisibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_SetDropIndicatorVisibility, Temp_byte_Variable) == 0x000002, "Member 'WBP_TgfGame_InventorySlots_C_SetDropIndicatorVisibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_SetDropIndicatorVisibility, Temp_byte_Variable_1) == 0x000003, "Member 'WBP_TgfGame_InventorySlots_C_SetDropIndicatorVisibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_SetDropIndicatorVisibility, K2Node_Select_Default) == 0x000004, "Member 'WBP_TgfGame_InventorySlots_C_SetDropIndicatorVisibility::K2Node_Select_Default' has a wrong offset!");

// Function WBP_TgfGame_InventorySlots.WBP_TgfGame_InventorySlots_C.SetHover
// 0x0018 (0x0018 - 0x0000)
struct WBP_TgfGame_InventorySlots_C_SetHover final
{
public:
	bool                                          Show;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Row;                                               // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Col;                                               // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              CallFunc_GetVisibility_ReturnValue;                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UGridSlot*                              CallFunc_SlotAsGridSlot_ReturnValue;               // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TgfGame_InventorySlots_C_SetHover) == 0x000008, "Wrong alignment on WBP_TgfGame_InventorySlots_C_SetHover");
static_assert(sizeof(WBP_TgfGame_InventorySlots_C_SetHover) == 0x000018, "Wrong size on WBP_TgfGame_InventorySlots_C_SetHover");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_SetHover, Show) == 0x000000, "Member 'WBP_TgfGame_InventorySlots_C_SetHover::Show' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_SetHover, Row) == 0x000004, "Member 'WBP_TgfGame_InventorySlots_C_SetHover::Row' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_SetHover, Col) == 0x000008, "Member 'WBP_TgfGame_InventorySlots_C_SetHover::Col' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_SetHover, CallFunc_GetVisibility_ReturnValue) == 0x00000C, "Member 'WBP_TgfGame_InventorySlots_C_SetHover::CallFunc_GetVisibility_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_SetHover, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x00000D, "Member 'WBP_TgfGame_InventorySlots_C_SetHover::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_SetHover, CallFunc_SlotAsGridSlot_ReturnValue) == 0x000010, "Member 'WBP_TgfGame_InventorySlots_C_SetHover::CallFunc_SlotAsGridSlot_ReturnValue' has a wrong offset!");

// Function WBP_TgfGame_InventorySlots.WBP_TgfGame_InventorySlots_C.SetUp
// 0x0004 (0x0004 - 0x0000)
struct WBP_TgfGame_InventorySlots_C_SetUp final
{
public:
	int32                                         PageId;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TgfGame_InventorySlots_C_SetUp) == 0x000004, "Wrong alignment on WBP_TgfGame_InventorySlots_C_SetUp");
static_assert(sizeof(WBP_TgfGame_InventorySlots_C_SetUp) == 0x000004, "Wrong size on WBP_TgfGame_InventorySlots_C_SetUp");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_SetUp, PageId) == 0x000000, "Member 'WBP_TgfGame_InventorySlots_C_SetUp::PageId' has a wrong offset!");

// Function WBP_TgfGame_InventorySlots.WBP_TgfGame_InventorySlots_C.SetupGrid
// 0x0150 (0x0150 - 0x0000)
struct WBP_TgfGame_InventorySlots_C_SetupGrid final
{
public:
	int32                                         Rows;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Columns;                                           // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UWidget*>                        CachedGridCells;                                   // 0x0008(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_3;            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGridSlot*                              CallFunc_SlotAsGridSlot_ReturnValue;               // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UGridSlot*                              CallFunc_SlotAsGridSlot_ReturnValue_1;             // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue_1;            // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x0080(0x00D0)()
};
static_assert(alignof(WBP_TgfGame_InventorySlots_C_SetupGrid) == 0x000010, "Wrong alignment on WBP_TgfGame_InventorySlots_C_SetupGrid");
static_assert(sizeof(WBP_TgfGame_InventorySlots_C_SetupGrid) == 0x000150, "Wrong size on WBP_TgfGame_InventorySlots_C_SetupGrid");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_SetupGrid, Rows) == 0x000000, "Member 'WBP_TgfGame_InventorySlots_C_SetupGrid::Rows' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_SetupGrid, Columns) == 0x000004, "Member 'WBP_TgfGame_InventorySlots_C_SetupGrid::Columns' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_SetupGrid, CachedGridCells) == 0x000008, "Member 'WBP_TgfGame_InventorySlots_C_SetupGrid::CachedGridCells' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_SetupGrid, CallFunc_Subtract_IntInt_ReturnValue) == 0x000018, "Member 'WBP_TgfGame_InventorySlots_C_SetupGrid::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_SetupGrid, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x00001C, "Member 'WBP_TgfGame_InventorySlots_C_SetupGrid::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_SetupGrid, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x000020, "Member 'WBP_TgfGame_InventorySlots_C_SetupGrid::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_SetupGrid, CallFunc_Subtract_IntInt_ReturnValue_3) == 0x000024, "Member 'WBP_TgfGame_InventorySlots_C_SetupGrid::CallFunc_Subtract_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_SetupGrid, Temp_int_Variable) == 0x000028, "Member 'WBP_TgfGame_InventorySlots_C_SetupGrid::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_SetupGrid, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00002C, "Member 'WBP_TgfGame_InventorySlots_C_SetupGrid::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_SetupGrid, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'WBP_TgfGame_InventorySlots_C_SetupGrid::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_SetupGrid, CallFunc_SlotAsGridSlot_ReturnValue) == 0x000038, "Member 'WBP_TgfGame_InventorySlots_C_SetupGrid::CallFunc_SlotAsGridSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_SetupGrid, CallFunc_SlotAsGridSlot_ReturnValue_1) == 0x000040, "Member 'WBP_TgfGame_InventorySlots_C_SetupGrid::CallFunc_SlotAsGridSlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_SetupGrid, Temp_int_Variable_1) == 0x000048, "Member 'WBP_TgfGame_InventorySlots_C_SetupGrid::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_SetupGrid, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x00004C, "Member 'WBP_TgfGame_InventorySlots_C_SetupGrid::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_SetupGrid, CallFunc_Add_IntInt_ReturnValue_1) == 0x000050, "Member 'WBP_TgfGame_InventorySlots_C_SetupGrid::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_SetupGrid, CallFunc_Multiply_IntInt_ReturnValue) == 0x000054, "Member 'WBP_TgfGame_InventorySlots_C_SetupGrid::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_SetupGrid, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000058, "Member 'WBP_TgfGame_InventorySlots_C_SetupGrid::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_SetupGrid, CallFunc_Multiply_IntInt_ReturnValue_1) == 0x000060, "Member 'WBP_TgfGame_InventorySlots_C_SetupGrid::CallFunc_Multiply_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_SetupGrid, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000068, "Member 'WBP_TgfGame_InventorySlots_C_SetupGrid::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_SetupGrid, CallFunc_MakeVector2D_ReturnValue) == 0x000070, "Member 'WBP_TgfGame_InventorySlots_C_SetupGrid::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_SetupGrid, K2Node_MakeStruct_SlateBrush) == 0x000080, "Member 'WBP_TgfGame_InventorySlots_C_SetupGrid::K2Node_MakeStruct_SlateBrush' has a wrong offset!");

// Function WBP_TgfGame_InventorySlots.WBP_TgfGame_InventorySlots_C.UpdateHover
// 0x03A0 (0x03A0 - 0x0000)
struct WBP_TgfGame_InventorySlots_C_UpdateHover final
{
public:
	struct FPointerEvent                          MouseEvent;                                        // 0x0000(0x0098)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FEventReply                            Ret;                                               // 0x0098(0x00B8)(Parm, OutParm)
	struct FIntPoint                              CallFunc_GetMouseCell_ret;                         // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_PointerEvent_IsMouseButtonDown_ReturnValue; // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_159[0x3];                                      // 0x0159(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FEventReply                            CallFunc_Unhandled_ReturnValue;                    // 0x0168(0x00B8)()
	class UWBP_TgfGame_InventoryEntry_C*          CallFunc_Array_Get_Item;                           // 0x0220(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x022C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22D[0x3];                                      // 0x022D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_Unhandled_ReturnValue_1;                  // 0x0230(0x00B8)()
	struct FEventReply                            CallFunc_Unhandled_ReturnValue_2;                  // 0x02E8(0x00B8)()
};
static_assert(alignof(WBP_TgfGame_InventorySlots_C_UpdateHover) == 0x000008, "Wrong alignment on WBP_TgfGame_InventorySlots_C_UpdateHover");
static_assert(sizeof(WBP_TgfGame_InventorySlots_C_UpdateHover) == 0x0003A0, "Wrong size on WBP_TgfGame_InventorySlots_C_UpdateHover");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_UpdateHover, MouseEvent) == 0x000000, "Member 'WBP_TgfGame_InventorySlots_C_UpdateHover::MouseEvent' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_UpdateHover, Ret) == 0x000098, "Member 'WBP_TgfGame_InventorySlots_C_UpdateHover::Ret' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_UpdateHover, CallFunc_GetMouseCell_ret) == 0x000150, "Member 'WBP_TgfGame_InventorySlots_C_UpdateHover::CallFunc_GetMouseCell_ret' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_UpdateHover, CallFunc_PointerEvent_IsMouseButtonDown_ReturnValue) == 0x000158, "Member 'WBP_TgfGame_InventorySlots_C_UpdateHover::CallFunc_PointerEvent_IsMouseButtonDown_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_UpdateHover, Temp_int_Array_Index_Variable) == 0x00015C, "Member 'WBP_TgfGame_InventorySlots_C_UpdateHover::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_UpdateHover, Temp_int_Loop_Counter_Variable) == 0x000160, "Member 'WBP_TgfGame_InventorySlots_C_UpdateHover::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_UpdateHover, CallFunc_Add_IntInt_ReturnValue) == 0x000164, "Member 'WBP_TgfGame_InventorySlots_C_UpdateHover::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_UpdateHover, CallFunc_Unhandled_ReturnValue) == 0x000168, "Member 'WBP_TgfGame_InventorySlots_C_UpdateHover::CallFunc_Unhandled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_UpdateHover, CallFunc_Array_Get_Item) == 0x000220, "Member 'WBP_TgfGame_InventorySlots_C_UpdateHover::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_UpdateHover, CallFunc_Array_Length_ReturnValue) == 0x000228, "Member 'WBP_TgfGame_InventorySlots_C_UpdateHover::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_UpdateHover, CallFunc_Less_IntInt_ReturnValue) == 0x00022C, "Member 'WBP_TgfGame_InventorySlots_C_UpdateHover::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_UpdateHover, CallFunc_Unhandled_ReturnValue_1) == 0x000230, "Member 'WBP_TgfGame_InventorySlots_C_UpdateHover::CallFunc_Unhandled_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_UpdateHover, CallFunc_Unhandled_ReturnValue_2) == 0x0002E8, "Member 'WBP_TgfGame_InventorySlots_C_UpdateHover::CallFunc_Unhandled_ReturnValue_2' has a wrong offset!");

// Function WBP_TgfGame_InventorySlots.WBP_TgfGame_InventorySlots_C.GetModuleName
// 0x0010 (0x0010 - 0x0000)
struct WBP_TgfGame_InventorySlots_C_GetModuleName final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TgfGame_InventorySlots_C_GetModuleName) == 0x000008, "Wrong alignment on WBP_TgfGame_InventorySlots_C_GetModuleName");
static_assert(sizeof(WBP_TgfGame_InventorySlots_C_GetModuleName) == 0x000010, "Wrong size on WBP_TgfGame_InventorySlots_C_GetModuleName");
static_assert(offsetof(WBP_TgfGame_InventorySlots_C_GetModuleName, ReturnValue) == 0x000000, "Member 'WBP_TgfGame_InventorySlots_C_GetModuleName::ReturnValue' has a wrong offset!");

}

