#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GameSettings

#include "Basic.hpp"


namespace SDK
{

// ScriptStruct GameSettings.GameSettingFilterState
// 0x03B8 (0x03B8 - 0x0000)
struct FGameSettingFilterState final
{
public:
	bool                                          bIncludeDisabled;                                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIncludeHidden;                                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIncludeResetable;                                 // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIncludeNestedPages;                               // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x394];                                      // 0x0004(0x0394)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UGameSetting*>                   SettingRootList;                                   // 0x0398(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	TArray<class UGameSetting*>                   SettingAllowList;                                  // 0x03A8(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate)
};
static_assert(alignof(FGameSettingFilterState) == 0x000008, "Wrong alignment on FGameSettingFilterState");
static_assert(sizeof(FGameSettingFilterState) == 0x0003B8, "Wrong size on FGameSettingFilterState");
static_assert(offsetof(FGameSettingFilterState, bIncludeDisabled) == 0x000000, "Member 'FGameSettingFilterState::bIncludeDisabled' has a wrong offset!");
static_assert(offsetof(FGameSettingFilterState, bIncludeHidden) == 0x000001, "Member 'FGameSettingFilterState::bIncludeHidden' has a wrong offset!");
static_assert(offsetof(FGameSettingFilterState, bIncludeResetable) == 0x000002, "Member 'FGameSettingFilterState::bIncludeResetable' has a wrong offset!");
static_assert(offsetof(FGameSettingFilterState, bIncludeNestedPages) == 0x000003, "Member 'FGameSettingFilterState::bIncludeNestedPages' has a wrong offset!");
static_assert(offsetof(FGameSettingFilterState, SettingRootList) == 0x000398, "Member 'FGameSettingFilterState::SettingRootList' has a wrong offset!");
static_assert(offsetof(FGameSettingFilterState, SettingAllowList) == 0x0003A8, "Member 'FGameSettingFilterState::SettingAllowList' has a wrong offset!");

// ScriptStruct GameSettings.GameSettingClassExtensions
// 0x0010 (0x0010 - 0x0000)
struct FGameSettingClassExtensions final
{
public:
	TArray<TSoftClassPtr<class UClass>>           Extensions;                                        // 0x0000(0x0010)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
};
static_assert(alignof(FGameSettingClassExtensions) == 0x000008, "Wrong alignment on FGameSettingClassExtensions");
static_assert(sizeof(FGameSettingClassExtensions) == 0x000010, "Wrong size on FGameSettingClassExtensions");
static_assert(offsetof(FGameSettingClassExtensions, Extensions) == 0x000000, "Member 'FGameSettingClassExtensions::Extensions' has a wrong offset!");

// ScriptStruct GameSettings.GameSettingNameExtensions
// 0x0018 (0x0018 - 0x0000)
struct FGameSettingNameExtensions final
{
public:
	bool                                          bIncludeClassDefaultExtensions;                    // 0x0000(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftClassPtr<class UClass>>           Extensions;                                        // 0x0008(0x0010)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
};
static_assert(alignof(FGameSettingNameExtensions) == 0x000008, "Wrong alignment on FGameSettingNameExtensions");
static_assert(sizeof(FGameSettingNameExtensions) == 0x000018, "Wrong size on FGameSettingNameExtensions");
static_assert(offsetof(FGameSettingNameExtensions, bIncludeClassDefaultExtensions) == 0x000000, "Member 'FGameSettingNameExtensions::bIncludeClassDefaultExtensions' has a wrong offset!");
static_assert(offsetof(FGameSettingNameExtensions, Extensions) == 0x000008, "Member 'FGameSettingNameExtensions::Extensions' has a wrong offset!");

}

