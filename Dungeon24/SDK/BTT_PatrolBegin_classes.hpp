#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTT_PatrolBegin

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AIModule_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BTT_PatrolBegin.BTT_PatrolBegin_C
// 0x0028 (0x00D0 - 0x00A8)
class UBTT_PatrolBegin_C final : public UBTTask_BlueprintBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class FName                                   PatrolPointIndex;                                  // 0x00B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   PatrolPoint;                                       // 0x00B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   PatrolDirection;                                   // 0x00C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   PatrolCompleted;                                   // 0x00C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BTT_PatrolBegin(int32 EntryPoint);
	void FindNearestPatrolPoint(class ABP_Tgf_Monster_C* Monster, int32* Param_PatrolPointIndex, struct FVector* Param_PatrolPoint);
	void ReceiveExecuteAI(class AAIController* OwnerController, class APawn* ControlledPawn);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BTT_PatrolBegin_C">();
	}
	static class UBTT_PatrolBegin_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBTT_PatrolBegin_C>();
	}
};
static_assert(alignof(UBTT_PatrolBegin_C) == 0x000008, "Wrong alignment on UBTT_PatrolBegin_C");
static_assert(sizeof(UBTT_PatrolBegin_C) == 0x0000D0, "Wrong size on UBTT_PatrolBegin_C");
static_assert(offsetof(UBTT_PatrolBegin_C, UberGraphFrame) == 0x0000A8, "Member 'UBTT_PatrolBegin_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBTT_PatrolBegin_C, PatrolPointIndex) == 0x0000B0, "Member 'UBTT_PatrolBegin_C::PatrolPointIndex' has a wrong offset!");
static_assert(offsetof(UBTT_PatrolBegin_C, PatrolPoint) == 0x0000B8, "Member 'UBTT_PatrolBegin_C::PatrolPoint' has a wrong offset!");
static_assert(offsetof(UBTT_PatrolBegin_C, PatrolDirection) == 0x0000C0, "Member 'UBTT_PatrolBegin_C::PatrolDirection' has a wrong offset!");
static_assert(offsetof(UBTT_PatrolBegin_C, PatrolCompleted) == 0x0000C8, "Member 'UBTT_PatrolBegin_C::PatrolCompleted' has a wrong offset!");

}

