#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LiveLinkComponents

#include "Basic.hpp"


namespace SDK
{

// ScriptStruct LiveLinkComponents.LiveLinkTransformControllerData
// 0x0006 (0x0006 - 0x0000)
struct FLiveLinkTransformControllerData final
{
public:
	bool                                          bWorldTransform;                                   // 0x0000(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseLocation;                                      // 0x0001(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseRotation;                                      // 0x0002(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseScale;                                         // 0x0003(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSweep;                                            // 0x0004(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bTeleport;                                         // 0x0005(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FLiveLinkTransformControllerData) == 0x000001, "Wrong alignment on FLiveLinkTransformControllerData");
static_assert(sizeof(FLiveLinkTransformControllerData) == 0x000006, "Wrong size on FLiveLinkTransformControllerData");
static_assert(offsetof(FLiveLinkTransformControllerData, bWorldTransform) == 0x000000, "Member 'FLiveLinkTransformControllerData::bWorldTransform' has a wrong offset!");
static_assert(offsetof(FLiveLinkTransformControllerData, bUseLocation) == 0x000001, "Member 'FLiveLinkTransformControllerData::bUseLocation' has a wrong offset!");
static_assert(offsetof(FLiveLinkTransformControllerData, bUseRotation) == 0x000002, "Member 'FLiveLinkTransformControllerData::bUseRotation' has a wrong offset!");
static_assert(offsetof(FLiveLinkTransformControllerData, bUseScale) == 0x000003, "Member 'FLiveLinkTransformControllerData::bUseScale' has a wrong offset!");
static_assert(offsetof(FLiveLinkTransformControllerData, bSweep) == 0x000004, "Member 'FLiveLinkTransformControllerData::bSweep' has a wrong offset!");
static_assert(offsetof(FLiveLinkTransformControllerData, bTeleport) == 0x000005, "Member 'FLiveLinkTransformControllerData::bTeleport' has a wrong offset!");

}

