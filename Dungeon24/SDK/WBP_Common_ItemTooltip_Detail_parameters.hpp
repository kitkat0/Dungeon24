#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Common_ItemTooltip_Detail

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "Slate_structs.hpp"
#include "LyraGame_structs.hpp"


namespace SDK::Params
{

// Function WBP_Common_ItemTooltip_Detail.WBP_Common_ItemTooltip_Detail_C.AttributeValueToText
// 0x0120 (0x0120 - 0x0000)
struct WBP_Common_ItemTooltip_Detail_C_AttributeValueToText final
{
public:
	struct FAffixDisplayConfig                    RefAffix;                                          // 0x0000(0x0100)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          bHideSign;                                         // 0x0100(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          EnableRange;                                       // 0x0101(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_102[0x6];                                      // 0x0102(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Color;                                             // 0x0108(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          NeedAppendRange;                                   // 0x0118(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Common_ItemTooltip_Detail_C_AttributeValueToText) == 0x000008, "Wrong alignment on WBP_Common_ItemTooltip_Detail_C_AttributeValueToText");
static_assert(sizeof(WBP_Common_ItemTooltip_Detail_C_AttributeValueToText) == 0x000120, "Wrong size on WBP_Common_ItemTooltip_Detail_C_AttributeValueToText");
static_assert(offsetof(WBP_Common_ItemTooltip_Detail_C_AttributeValueToText, RefAffix) == 0x000000, "Member 'WBP_Common_ItemTooltip_Detail_C_AttributeValueToText::RefAffix' has a wrong offset!");
static_assert(offsetof(WBP_Common_ItemTooltip_Detail_C_AttributeValueToText, bHideSign) == 0x000100, "Member 'WBP_Common_ItemTooltip_Detail_C_AttributeValueToText::bHideSign' has a wrong offset!");
static_assert(offsetof(WBP_Common_ItemTooltip_Detail_C_AttributeValueToText, EnableRange) == 0x000101, "Member 'WBP_Common_ItemTooltip_Detail_C_AttributeValueToText::EnableRange' has a wrong offset!");
static_assert(offsetof(WBP_Common_ItemTooltip_Detail_C_AttributeValueToText, Color) == 0x000108, "Member 'WBP_Common_ItemTooltip_Detail_C_AttributeValueToText::Color' has a wrong offset!");
static_assert(offsetof(WBP_Common_ItemTooltip_Detail_C_AttributeValueToText, NeedAppendRange) == 0x000118, "Member 'WBP_Common_ItemTooltip_Detail_C_AttributeValueToText::NeedAppendRange' has a wrong offset!");

// Function WBP_Common_ItemTooltip_Detail.WBP_Common_ItemTooltip_Detail_C.Is Positive Affix
// 0x0108 (0x0108 - 0x0000)
struct WBP_Common_ItemTooltip_Detail_C_Is_Positive_Affix final
{
public:
	struct FAffixDisplayConfig                    Ref_Affix;                                         // 0x0000(0x0100)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          bIsPositive;                                       // 0x0100(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Common_ItemTooltip_Detail_C_Is_Positive_Affix) == 0x000008, "Wrong alignment on WBP_Common_ItemTooltip_Detail_C_Is_Positive_Affix");
static_assert(sizeof(WBP_Common_ItemTooltip_Detail_C_Is_Positive_Affix) == 0x000108, "Wrong size on WBP_Common_ItemTooltip_Detail_C_Is_Positive_Affix");
static_assert(offsetof(WBP_Common_ItemTooltip_Detail_C_Is_Positive_Affix, Ref_Affix) == 0x000000, "Member 'WBP_Common_ItemTooltip_Detail_C_Is_Positive_Affix::Ref_Affix' has a wrong offset!");
static_assert(offsetof(WBP_Common_ItemTooltip_Detail_C_Is_Positive_Affix, bIsPositive) == 0x000100, "Member 'WBP_Common_ItemTooltip_Detail_C_Is_Positive_Affix::bIsPositive' has a wrong offset!");
static_assert(offsetof(WBP_Common_ItemTooltip_Detail_C_Is_Positive_Affix, CallFunc_IsValid_ReturnValue) == 0x000101, "Member 'WBP_Common_ItemTooltip_Detail_C_Is_Positive_Affix::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WBP_Common_ItemTooltip_Detail.WBP_Common_ItemTooltip_Detail_C.OverrideInputPrompt
// 0x0060 (0x0060 - 0x0000)
struct WBP_Common_ItemTooltip_Detail_C_OverrideInputPrompt final
{
public:
	struct FInputChord                            Default_Keyboard_Input;                            // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          bEnable;                                           // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Text;                                              // 0x0028(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   SetText;                                           // 0x0040(0x0018)(Edit, BlueprintVisible)
	ESlateVisibility                              Param_SetVisibility;                               // 0x0058(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue;            // 0x005B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue_1;          // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x005E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Common_ItemTooltip_Detail_C_OverrideInputPrompt) == 0x000008, "Wrong alignment on WBP_Common_ItemTooltip_Detail_C_OverrideInputPrompt");
static_assert(sizeof(WBP_Common_ItemTooltip_Detail_C_OverrideInputPrompt) == 0x000060, "Wrong size on WBP_Common_ItemTooltip_Detail_C_OverrideInputPrompt");
static_assert(offsetof(WBP_Common_ItemTooltip_Detail_C_OverrideInputPrompt, Default_Keyboard_Input) == 0x000000, "Member 'WBP_Common_ItemTooltip_Detail_C_OverrideInputPrompt::Default_Keyboard_Input' has a wrong offset!");
static_assert(offsetof(WBP_Common_ItemTooltip_Detail_C_OverrideInputPrompt, bEnable) == 0x000020, "Member 'WBP_Common_ItemTooltip_Detail_C_OverrideInputPrompt::bEnable' has a wrong offset!");
static_assert(offsetof(WBP_Common_ItemTooltip_Detail_C_OverrideInputPrompt, Text) == 0x000028, "Member 'WBP_Common_ItemTooltip_Detail_C_OverrideInputPrompt::Text' has a wrong offset!");
static_assert(offsetof(WBP_Common_ItemTooltip_Detail_C_OverrideInputPrompt, SetText) == 0x000040, "Member 'WBP_Common_ItemTooltip_Detail_C_OverrideInputPrompt::SetText' has a wrong offset!");
static_assert(offsetof(WBP_Common_ItemTooltip_Detail_C_OverrideInputPrompt, Param_SetVisibility) == 0x000058, "Member 'WBP_Common_ItemTooltip_Detail_C_OverrideInputPrompt::Param_SetVisibility' has a wrong offset!");
static_assert(offsetof(WBP_Common_ItemTooltip_Detail_C_OverrideInputPrompt, Temp_byte_Variable) == 0x000059, "Member 'WBP_Common_ItemTooltip_Detail_C_OverrideInputPrompt::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Common_ItemTooltip_Detail_C_OverrideInputPrompt, Temp_byte_Variable_1) == 0x00005A, "Member 'WBP_Common_ItemTooltip_Detail_C_OverrideInputPrompt::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Common_ItemTooltip_Detail_C_OverrideInputPrompt, CallFunc_EqualEqual_KeyKey_ReturnValue) == 0x00005B, "Member 'WBP_Common_ItemTooltip_Detail_C_OverrideInputPrompt::CallFunc_EqualEqual_KeyKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Common_ItemTooltip_Detail_C_OverrideInputPrompt, CallFunc_EqualEqual_KeyKey_ReturnValue_1) == 0x00005C, "Member 'WBP_Common_ItemTooltip_Detail_C_OverrideInputPrompt::CallFunc_EqualEqual_KeyKey_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Common_ItemTooltip_Detail_C_OverrideInputPrompt, Temp_bool_Variable) == 0x00005D, "Member 'WBP_Common_ItemTooltip_Detail_C_OverrideInputPrompt::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Common_ItemTooltip_Detail_C_OverrideInputPrompt, K2Node_Select_Default) == 0x00005E, "Member 'WBP_Common_ItemTooltip_Detail_C_OverrideInputPrompt::K2Node_Select_Default' has a wrong offset!");

// Function WBP_Common_ItemTooltip_Detail.WBP_Common_ItemTooltip_Detail_C.TradeShowLeft
// 0x0028 (0x0028 - 0x0000)
struct WBP_Common_ItemTooltip_Detail_C_TradeShowLeft final
{
public:
	struct FAnchors                               K2Node_MakeStruct_Anchors;                         // 0x0000(0x0020)(NoDestructor)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Common_ItemTooltip_Detail_C_TradeShowLeft) == 0x000008, "Wrong alignment on WBP_Common_ItemTooltip_Detail_C_TradeShowLeft");
static_assert(sizeof(WBP_Common_ItemTooltip_Detail_C_TradeShowLeft) == 0x000028, "Wrong size on WBP_Common_ItemTooltip_Detail_C_TradeShowLeft");
static_assert(offsetof(WBP_Common_ItemTooltip_Detail_C_TradeShowLeft, K2Node_MakeStruct_Anchors) == 0x000000, "Member 'WBP_Common_ItemTooltip_Detail_C_TradeShowLeft::K2Node_MakeStruct_Anchors' has a wrong offset!");
static_assert(offsetof(WBP_Common_ItemTooltip_Detail_C_TradeShowLeft, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000020, "Member 'WBP_Common_ItemTooltip_Detail_C_TradeShowLeft::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");

// Function WBP_Common_ItemTooltip_Detail.WBP_Common_ItemTooltip_Detail_C.TradeShowRight
// 0x0028 (0x0028 - 0x0000)
struct WBP_Common_ItemTooltip_Detail_C_TradeShowRight final
{
public:
	struct FAnchors                               K2Node_MakeStruct_Anchors;                         // 0x0000(0x0020)(NoDestructor)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Common_ItemTooltip_Detail_C_TradeShowRight) == 0x000008, "Wrong alignment on WBP_Common_ItemTooltip_Detail_C_TradeShowRight");
static_assert(sizeof(WBP_Common_ItemTooltip_Detail_C_TradeShowRight) == 0x000028, "Wrong size on WBP_Common_ItemTooltip_Detail_C_TradeShowRight");
static_assert(offsetof(WBP_Common_ItemTooltip_Detail_C_TradeShowRight, K2Node_MakeStruct_Anchors) == 0x000000, "Member 'WBP_Common_ItemTooltip_Detail_C_TradeShowRight::K2Node_MakeStruct_Anchors' has a wrong offset!");
static_assert(offsetof(WBP_Common_ItemTooltip_Detail_C_TradeShowRight, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000020, "Member 'WBP_Common_ItemTooltip_Detail_C_TradeShowRight::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");

// Function WBP_Common_ItemTooltip_Detail.WBP_Common_ItemTooltip_Detail_C.UpdateAttackLevel
// 0x0018 (0x0018 - 0x0000)
struct WBP_Common_ItemTooltip_Detail_C_UpdateAttackLevel final
{
public:
	TArray<struct FAffixDisplayConfig>            Attrs;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         NewLocalVar_2;                                     // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Common_ItemTooltip_Detail_C_UpdateAttackLevel) == 0x000008, "Wrong alignment on WBP_Common_ItemTooltip_Detail_C_UpdateAttackLevel");
static_assert(sizeof(WBP_Common_ItemTooltip_Detail_C_UpdateAttackLevel) == 0x000018, "Wrong size on WBP_Common_ItemTooltip_Detail_C_UpdateAttackLevel");
static_assert(offsetof(WBP_Common_ItemTooltip_Detail_C_UpdateAttackLevel, Attrs) == 0x000000, "Member 'WBP_Common_ItemTooltip_Detail_C_UpdateAttackLevel::Attrs' has a wrong offset!");
static_assert(offsetof(WBP_Common_ItemTooltip_Detail_C_UpdateAttackLevel, NewLocalVar_2) == 0x000010, "Member 'WBP_Common_ItemTooltip_Detail_C_UpdateAttackLevel::NewLocalVar_2' has a wrong offset!");

// Function WBP_Common_ItemTooltip_Detail.WBP_Common_ItemTooltip_Detail_C.UpdateAttrsBase
// 0x0138 (0x0138 - 0x0000)
struct WBP_Common_ItemTooltip_Detail_C_UpdateAttrsBase final
{
public:
	TArray<struct FAffixDisplayConfig>            Attrs;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         BuffIndex;                                         // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 AttrColor;                                         // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class UWBP_ItemTooltips_Buffline_C*           CurBuff;                                           // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         BufflineCount;                                     // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAffixDisplayConfig                    CurAttr;                                           // 0x0038(0x0100)(Edit, BlueprintVisible)
};
static_assert(alignof(WBP_Common_ItemTooltip_Detail_C_UpdateAttrsBase) == 0x000008, "Wrong alignment on WBP_Common_ItemTooltip_Detail_C_UpdateAttrsBase");
static_assert(sizeof(WBP_Common_ItemTooltip_Detail_C_UpdateAttrsBase) == 0x000138, "Wrong size on WBP_Common_ItemTooltip_Detail_C_UpdateAttrsBase");
static_assert(offsetof(WBP_Common_ItemTooltip_Detail_C_UpdateAttrsBase, Attrs) == 0x000000, "Member 'WBP_Common_ItemTooltip_Detail_C_UpdateAttrsBase::Attrs' has a wrong offset!");
static_assert(offsetof(WBP_Common_ItemTooltip_Detail_C_UpdateAttrsBase, BuffIndex) == 0x000010, "Member 'WBP_Common_ItemTooltip_Detail_C_UpdateAttrsBase::BuffIndex' has a wrong offset!");
static_assert(offsetof(WBP_Common_ItemTooltip_Detail_C_UpdateAttrsBase, AttrColor) == 0x000018, "Member 'WBP_Common_ItemTooltip_Detail_C_UpdateAttrsBase::AttrColor' has a wrong offset!");
static_assert(offsetof(WBP_Common_ItemTooltip_Detail_C_UpdateAttrsBase, CurBuff) == 0x000028, "Member 'WBP_Common_ItemTooltip_Detail_C_UpdateAttrsBase::CurBuff' has a wrong offset!");
static_assert(offsetof(WBP_Common_ItemTooltip_Detail_C_UpdateAttrsBase, BufflineCount) == 0x000030, "Member 'WBP_Common_ItemTooltip_Detail_C_UpdateAttrsBase::BufflineCount' has a wrong offset!");
static_assert(offsetof(WBP_Common_ItemTooltip_Detail_C_UpdateAttrsBase, CurAttr) == 0x000038, "Member 'WBP_Common_ItemTooltip_Detail_C_UpdateAttrsBase::CurAttr' has a wrong offset!");

// Function WBP_Common_ItemTooltip_Detail.WBP_Common_ItemTooltip_Detail_C.UpdateDurability
// 0x0001 (0x0001 - 0x0000)
struct WBP_Common_ItemTooltip_Detail_C_UpdateDurability final
{
public:
	bool                                          Ret;                                               // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Common_ItemTooltip_Detail_C_UpdateDurability) == 0x000001, "Wrong alignment on WBP_Common_ItemTooltip_Detail_C_UpdateDurability");
static_assert(sizeof(WBP_Common_ItemTooltip_Detail_C_UpdateDurability) == 0x000001, "Wrong size on WBP_Common_ItemTooltip_Detail_C_UpdateDurability");
static_assert(offsetof(WBP_Common_ItemTooltip_Detail_C_UpdateDurability, Ret) == 0x000000, "Member 'WBP_Common_ItemTooltip_Detail_C_UpdateDurability::Ret' has a wrong offset!");

// Function WBP_Common_ItemTooltip_Detail.WBP_Common_ItemTooltip_Detail_C.UpdateOtherInfo
// 0x0630 (0x0630 - 0x0000)
struct WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo final
{
public:
	bool                                          Match_career;                                      // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         As_show;                                           // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UExcelLoaderConfigGroupWrapper*         ConfigApi;                                         // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UExcelLoaderTgfConfigExcelGearTemplate* NewLocalVar_1;                                     // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UExcelLoaderTgfConfigExcelItemType*     NewLocalVar_0;                                     // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class UExcelLoaderTgfConfigExcelItemType*> NewLocalVar;                                       // 0x0020(0x0010)(Edit, BlueprintVisible)
	class FString                                 Careerstr;                                         // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetText_ReturnValue;                      // 0x0048(0x0018)()
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0068(0x0018)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0080(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0098(0x0050)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00E8(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0138(0x0010)(ReferenceParm)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0148(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0158(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0170(0x0018)()
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0188(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_MakeLiteralString_ReturnValue;            // 0x0198(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int64                                         CallFunc_GetSpecialCareerRequireSize_ReturnValue;  // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Subtract_Int64Int64_ReturnValue;          // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetLevelRequire_IsValid;                  // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B9[0x3];                                      // 0x01B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetLevelRequire_ReturnValue;              // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_Int64ToInt_ReturnValue;              // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C4[0x4];                                      // 0x01C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_Int64Int64_ReturnValue;           // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D1[0x7];                                      // 0x01D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x01D8(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x0228(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x0238(0x0018)()
	bool                                          CallFunc_GetSystemRepurchasePrice_IsValid;         // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_251[0x3];                                      // 0x0251(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetSystemRepurchasePrice_ReturnValue;     // 0x0254(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_259[0x7];                                      // 0x0259(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_1;            // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0268(0x0050)(HasGetValueTypeHash)
	class FText                                   CallFunc_GetEmptyText_ReturnValue;                 // 0x02B8(0x0018)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_3;                          // 0x02D0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_3;                     // 0x02E0(0x0018)()
	int32                                         Temp_int_Variable;                                 // 0x02F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x02FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FD[0x3];                                      // 0x02FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_2;            // 0x0300(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSpecialCareerRequire_IsValid;          // 0x0308(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_309[0x3];                                      // 0x0309(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetSpecialCareerRequire_ReturnValue;      // 0x030C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0310(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_311[0x7];                                      // 0x0311(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0318(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0328(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0338(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_339[0x7];                                      // 0x0339(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_TextFromStringTable_ReturnValue;          // 0x0340(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0358(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0368(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36C[0x4];                                      // 0x036C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0370(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0380(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetTypeName_IsValid;                      // 0x0390(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_391[0x7];                                      // 0x0391(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetTypeName_ReturnValue;                  // 0x0398(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_TextFromStringTable_ReturnValue_1;        // 0x03A8(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_4;            // 0x03C0(0x0050)(HasGetValueTypeHash)
	bool                                          CallFunc_GetName_IsValid;                          // 0x0410(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_411[0x7];                                      // 0x0411(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetName_ReturnValue;                      // 0x0418(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_TextFromStringTable_ReturnValue_2;        // 0x0428(0x0018)()
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_1;             // 0x0440(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_444[0x4];                                      // 0x0444(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_5;            // 0x0448(0x0050)(HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_3;            // 0x0498(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_4;            // 0x04A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_6;            // 0x04A8(0x0050)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_7;            // 0x04F8(0x0050)(HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0548(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_4;                          // 0x0558(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x0568(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue_4;                     // 0x0578(0x0018)()
	class FText                                   CallFunc_TextFromStringTable_ReturnValue_3;        // 0x0590(0x0018)()
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x05A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A9[0x7];                                      // 0x05A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_8;            // 0x05B0(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_5;                          // 0x0600(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_5;                     // 0x0610(0x0018)()
	bool                                          Temp_bool_Variable;                                // 0x0628(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0629(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo) == 0x000008, "Wrong alignment on WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo");
static_assert(sizeof(WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo) == 0x000630, "Wrong size on WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo");
static_assert(offsetof(WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo, Match_career) == 0x000000, "Member 'WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo::Match_career' has a wrong offset!");
static_assert(offsetof(WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo, As_show) == 0x000004, "Member 'WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo::As_show' has a wrong offset!");
static_assert(offsetof(WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo, ConfigApi) == 0x000008, "Member 'WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo::ConfigApi' has a wrong offset!");
static_assert(offsetof(WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo, NewLocalVar_1) == 0x000010, "Member 'WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo::NewLocalVar_1' has a wrong offset!");
static_assert(offsetof(WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo, NewLocalVar_0) == 0x000018, "Member 'WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo, NewLocalVar) == 0x000020, "Member 'WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo::NewLocalVar' has a wrong offset!");
static_assert(offsetof(WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo, Careerstr) == 0x000030, "Member 'WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo::Careerstr' has a wrong offset!");
static_assert(offsetof(WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000040, "Member 'WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo, CallFunc_GetText_ReturnValue) == 0x000048, "Member 'WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo::CallFunc_GetText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo, CallFunc_TextIsEmpty_ReturnValue) == 0x000060, "Member 'WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo, CallFunc_Conv_StringToText_ReturnValue) == 0x000068, "Member 'WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000080, "Member 'WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo, K2Node_MakeStruct_FormatArgumentData) == 0x000098, "Member 'WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000E8, "Member 'WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo, K2Node_MakeArray_Array) == 0x000138, "Member 'WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo, K2Node_MakeArray_Array_1) == 0x000148, "Member 'WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo, CallFunc_Format_ReturnValue) == 0x000158, "Member 'WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo, CallFunc_Format_ReturnValue_1) == 0x000170, "Member 'WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo, CallFunc_Concat_StrStr_ReturnValue) == 0x000188, "Member 'WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo, CallFunc_MakeLiteralString_ReturnValue) == 0x000198, "Member 'WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo::CallFunc_MakeLiteralString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo, CallFunc_GetSpecialCareerRequireSize_ReturnValue) == 0x0001A8, "Member 'WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo::CallFunc_GetSpecialCareerRequireSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo, CallFunc_Subtract_Int64Int64_ReturnValue) == 0x0001B0, "Member 'WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo::CallFunc_Subtract_Int64Int64_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo, CallFunc_GetLevelRequire_IsValid) == 0x0001B8, "Member 'WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo::CallFunc_GetLevelRequire_IsValid' has a wrong offset!");
static_assert(offsetof(WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo, CallFunc_GetLevelRequire_ReturnValue) == 0x0001BC, "Member 'WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo::CallFunc_GetLevelRequire_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo, CallFunc_Conv_Int64ToInt_ReturnValue) == 0x0001C0, "Member 'WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo::CallFunc_Conv_Int64ToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo, CallFunc_Conv_IntToInt64_ReturnValue) == 0x0001C8, "Member 'WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo, CallFunc_Greater_Int64Int64_ReturnValue) == 0x0001D0, "Member 'WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo::CallFunc_Greater_Int64Int64_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo, K2Node_MakeStruct_FormatArgumentData_2) == 0x0001D8, "Member 'WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo, K2Node_MakeArray_Array_2) == 0x000228, "Member 'WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo, CallFunc_Format_ReturnValue_2) == 0x000238, "Member 'WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo::CallFunc_Format_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo, CallFunc_GetSystemRepurchasePrice_IsValid) == 0x000250, "Member 'WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo::CallFunc_GetSystemRepurchasePrice_IsValid' has a wrong offset!");
static_assert(offsetof(WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo, CallFunc_GetSystemRepurchasePrice_ReturnValue) == 0x000254, "Member 'WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo::CallFunc_GetSystemRepurchasePrice_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo, Temp_byte_Variable) == 0x000258, "Member 'WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo, CallFunc_Conv_IntToInt64_ReturnValue_1) == 0x000260, "Member 'WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo::CallFunc_Conv_IntToInt64_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo, K2Node_MakeStruct_FormatArgumentData_3) == 0x000268, "Member 'WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo, CallFunc_GetEmptyText_ReturnValue) == 0x0002B8, "Member 'WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo::CallFunc_GetEmptyText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo, K2Node_MakeArray_Array_3) == 0x0002D0, "Member 'WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo, CallFunc_Format_ReturnValue_3) == 0x0002E0, "Member 'WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo::CallFunc_Format_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo, Temp_int_Variable) == 0x0002F8, "Member 'WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo, CallFunc_Greater_IntInt_ReturnValue) == 0x0002FC, "Member 'WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo, CallFunc_Conv_IntToInt64_ReturnValue_2) == 0x000300, "Member 'WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo::CallFunc_Conv_IntToInt64_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo, CallFunc_GetSpecialCareerRequire_IsValid) == 0x000308, "Member 'WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo::CallFunc_GetSpecialCareerRequire_IsValid' has a wrong offset!");
static_assert(offsetof(WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo, CallFunc_GetSpecialCareerRequire_ReturnValue) == 0x00030C, "Member 'WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo::CallFunc_GetSpecialCareerRequire_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000310, "Member 'WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo, CallFunc_Conv_IntToString_ReturnValue) == 0x000318, "Member 'WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000328, "Member 'WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000338, "Member 'WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo, CallFunc_TextFromStringTable_ReturnValue) == 0x000340, "Member 'WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo::CallFunc_TextFromStringTable_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo, CallFunc_Conv_TextToString_ReturnValue) == 0x000358, "Member 'WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo, CallFunc_Add_IntInt_ReturnValue) == 0x000368, "Member 'WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000370, "Member 'WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000380, "Member 'WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo, CallFunc_GetTypeName_IsValid) == 0x000390, "Member 'WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo::CallFunc_GetTypeName_IsValid' has a wrong offset!");
static_assert(offsetof(WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo, CallFunc_GetTypeName_ReturnValue) == 0x000398, "Member 'WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo::CallFunc_GetTypeName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo, CallFunc_TextFromStringTable_ReturnValue_1) == 0x0003A8, "Member 'WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo::CallFunc_TextFromStringTable_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo, K2Node_MakeStruct_FormatArgumentData_4) == 0x0003C0, "Member 'WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo::K2Node_MakeStruct_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo, CallFunc_GetName_IsValid) == 0x000410, "Member 'WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo::CallFunc_GetName_IsValid' has a wrong offset!");
static_assert(offsetof(WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo, CallFunc_GetName_ReturnValue) == 0x000418, "Member 'WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo::CallFunc_GetName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo, CallFunc_TextFromStringTable_ReturnValue_2) == 0x000428, "Member 'WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo::CallFunc_TextFromStringTable_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo, CallFunc_Conv_ByteToInt_ReturnValue_1) == 0x000440, "Member 'WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo::CallFunc_Conv_ByteToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo, K2Node_MakeStruct_FormatArgumentData_5) == 0x000448, "Member 'WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo::K2Node_MakeStruct_FormatArgumentData_5' has a wrong offset!");
static_assert(offsetof(WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo, CallFunc_Conv_IntToInt64_ReturnValue_3) == 0x000498, "Member 'WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo::CallFunc_Conv_IntToInt64_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo, CallFunc_Conv_IntToInt64_ReturnValue_4) == 0x0004A0, "Member 'WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo::CallFunc_Conv_IntToInt64_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo, K2Node_MakeStruct_FormatArgumentData_6) == 0x0004A8, "Member 'WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo::K2Node_MakeStruct_FormatArgumentData_6' has a wrong offset!");
static_assert(offsetof(WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo, K2Node_MakeStruct_FormatArgumentData_7) == 0x0004F8, "Member 'WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo::K2Node_MakeStruct_FormatArgumentData_7' has a wrong offset!");
static_assert(offsetof(WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000548, "Member 'WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo, K2Node_MakeArray_Array_4) == 0x000558, "Member 'WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo::K2Node_MakeArray_Array_4' has a wrong offset!");
static_assert(offsetof(WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo, CallFunc_Concat_StrStr_ReturnValue_4) == 0x000568, "Member 'WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo, CallFunc_Format_ReturnValue_4) == 0x000578, "Member 'WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo::CallFunc_Format_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo, CallFunc_TextFromStringTable_ReturnValue_3) == 0x000590, "Member 'WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo::CallFunc_TextFromStringTable_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo, Temp_byte_Variable_1) == 0x0005A8, "Member 'WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo, K2Node_MakeStruct_FormatArgumentData_8) == 0x0005B0, "Member 'WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo::K2Node_MakeStruct_FormatArgumentData_8' has a wrong offset!");
static_assert(offsetof(WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo, K2Node_MakeArray_Array_5) == 0x000600, "Member 'WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo::K2Node_MakeArray_Array_5' has a wrong offset!");
static_assert(offsetof(WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo, CallFunc_Format_ReturnValue_5) == 0x000610, "Member 'WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo::CallFunc_Format_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo, Temp_bool_Variable) == 0x000628, "Member 'WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo, K2Node_Select_Default) == 0x000629, "Member 'WBP_Common_ItemTooltip_Detail_C_UpdateOtherInfo::K2Node_Select_Default' has a wrong offset!");

// Function WBP_Common_ItemTooltip_Detail.WBP_Common_ItemTooltip_Detail_C.UpdateTopAffixes
// 0x0050 (0x0050 - 0x0000)
struct WBP_Common_ItemTooltip_Detail_C_UpdateTopAffixes final
{
public:
	TArray<struct FAffixDisplayConfig>            Attrs;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 NewLocalVar_4;                                     // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FText                                   NewLocalVar_3;                                     // 0x0020(0x0018)(Edit, BlueprintVisible)
	bool                                          HideSign;                                          // 0x0038(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_ItemTooltips_MainBasic_C*          CurLine;                                           // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         LineCount;                                         // 0x0048(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ArrtCount;                                         // 0x004C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Common_ItemTooltip_Detail_C_UpdateTopAffixes) == 0x000008, "Wrong alignment on WBP_Common_ItemTooltip_Detail_C_UpdateTopAffixes");
static_assert(sizeof(WBP_Common_ItemTooltip_Detail_C_UpdateTopAffixes) == 0x000050, "Wrong size on WBP_Common_ItemTooltip_Detail_C_UpdateTopAffixes");
static_assert(offsetof(WBP_Common_ItemTooltip_Detail_C_UpdateTopAffixes, Attrs) == 0x000000, "Member 'WBP_Common_ItemTooltip_Detail_C_UpdateTopAffixes::Attrs' has a wrong offset!");
static_assert(offsetof(WBP_Common_ItemTooltip_Detail_C_UpdateTopAffixes, NewLocalVar_4) == 0x000010, "Member 'WBP_Common_ItemTooltip_Detail_C_UpdateTopAffixes::NewLocalVar_4' has a wrong offset!");
static_assert(offsetof(WBP_Common_ItemTooltip_Detail_C_UpdateTopAffixes, NewLocalVar_3) == 0x000020, "Member 'WBP_Common_ItemTooltip_Detail_C_UpdateTopAffixes::NewLocalVar_3' has a wrong offset!");
static_assert(offsetof(WBP_Common_ItemTooltip_Detail_C_UpdateTopAffixes, HideSign) == 0x000038, "Member 'WBP_Common_ItemTooltip_Detail_C_UpdateTopAffixes::HideSign' has a wrong offset!");
static_assert(offsetof(WBP_Common_ItemTooltip_Detail_C_UpdateTopAffixes, CurLine) == 0x000040, "Member 'WBP_Common_ItemTooltip_Detail_C_UpdateTopAffixes::CurLine' has a wrong offset!");
static_assert(offsetof(WBP_Common_ItemTooltip_Detail_C_UpdateTopAffixes, LineCount) == 0x000048, "Member 'WBP_Common_ItemTooltip_Detail_C_UpdateTopAffixes::LineCount' has a wrong offset!");
static_assert(offsetof(WBP_Common_ItemTooltip_Detail_C_UpdateTopAffixes, ArrtCount) == 0x00004C, "Member 'WBP_Common_ItemTooltip_Detail_C_UpdateTopAffixes::ArrtCount' has a wrong offset!");

// Function WBP_Common_ItemTooltip_Detail.WBP_Common_ItemTooltip_Detail_C.GetModuleName
// 0x0010 (0x0010 - 0x0000)
struct WBP_Common_ItemTooltip_Detail_C_GetModuleName final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Common_ItemTooltip_Detail_C_GetModuleName) == 0x000008, "Wrong alignment on WBP_Common_ItemTooltip_Detail_C_GetModuleName");
static_assert(sizeof(WBP_Common_ItemTooltip_Detail_C_GetModuleName) == 0x000010, "Wrong size on WBP_Common_ItemTooltip_Detail_C_GetModuleName");
static_assert(offsetof(WBP_Common_ItemTooltip_Detail_C_GetModuleName, ReturnValue) == 0x000000, "Member 'WBP_Common_ItemTooltip_Detail_C_GetModuleName::ReturnValue' has a wrong offset!");

}

