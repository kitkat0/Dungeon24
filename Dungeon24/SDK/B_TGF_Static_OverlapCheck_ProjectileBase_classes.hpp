#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_TGF_Static_OverlapCheck_ProjectileBase

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AkAudio_structs.hpp"
#include "LyraGame_structs.hpp"
#include "LyraGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass B_TGF_Static_OverlapCheck_ProjectileBase.B_TGF_Static_OverlapCheck_ProjectileBase_C
// 0x0178 (0x0820 - 0x06A8)
class AB_TGF_Static_OverlapCheck_ProjectileBase_C final : public ATgfProjectileBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x06A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCapsuleComponent*                      Capsule;                                           // 0x06B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAkComponent*                           Ak;                                                // 0x06B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          TriggerImmediately;                                // 0x06C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C1[0x7];                                      // 0x06C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        TriggerDeltaTime;                                  // 0x06C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaxExistTime;                                      // 0x06D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AffectTeamRelation;                                // 0x06D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CapsuleRadius;                                     // 0x06DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CapsuleHalfHeight;                                 // 0x06E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E4[0x4];                                      // 0x06E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        HeightDeltaCheck;                                  // 0x06E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CurrentHitActor;                                   // 0x06F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CurrentHitResult;                                  // 0x06F8(0x00E8)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	double                                        CurrentHeight;                                     // 0x07E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CurrentProcessedActor;                             // 0x07E8(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	struct FTimerHandle                           LooperTimer;                                       // 0x07F8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          LoopSound;                                         // 0x0800(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          TriggerSound;                                      // 0x0808(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	EDrawDebugTrace                               Draw_Debug_Type;                                   // 0x0810(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_811[0x7];                                      // 0x0811(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        TriggerDelay;                                      // 0x0818(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void DoExceedMaxTime();
	void DoTriggerCheck();
	void ExecuteUbergraph_B_TGF_Static_OverlapCheck_ProjectileBase(int32 EntryPoint);
	void GetCheckResult(TArray<struct FHitResult>* Hits, bool* Result);
	void ReceiveBeginPlay();
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_TGF_Static_OverlapCheck_ProjectileBase_C">();
	}
	static class AB_TGF_Static_OverlapCheck_ProjectileBase_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AB_TGF_Static_OverlapCheck_ProjectileBase_C>();
	}
};
static_assert(alignof(AB_TGF_Static_OverlapCheck_ProjectileBase_C) == 0x000008, "Wrong alignment on AB_TGF_Static_OverlapCheck_ProjectileBase_C");
static_assert(sizeof(AB_TGF_Static_OverlapCheck_ProjectileBase_C) == 0x000820, "Wrong size on AB_TGF_Static_OverlapCheck_ProjectileBase_C");
static_assert(offsetof(AB_TGF_Static_OverlapCheck_ProjectileBase_C, UberGraphFrame) == 0x0006A8, "Member 'AB_TGF_Static_OverlapCheck_ProjectileBase_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AB_TGF_Static_OverlapCheck_ProjectileBase_C, Capsule) == 0x0006B0, "Member 'AB_TGF_Static_OverlapCheck_ProjectileBase_C::Capsule' has a wrong offset!");
static_assert(offsetof(AB_TGF_Static_OverlapCheck_ProjectileBase_C, Ak) == 0x0006B8, "Member 'AB_TGF_Static_OverlapCheck_ProjectileBase_C::Ak' has a wrong offset!");
static_assert(offsetof(AB_TGF_Static_OverlapCheck_ProjectileBase_C, TriggerImmediately) == 0x0006C0, "Member 'AB_TGF_Static_OverlapCheck_ProjectileBase_C::TriggerImmediately' has a wrong offset!");
static_assert(offsetof(AB_TGF_Static_OverlapCheck_ProjectileBase_C, TriggerDeltaTime) == 0x0006C8, "Member 'AB_TGF_Static_OverlapCheck_ProjectileBase_C::TriggerDeltaTime' has a wrong offset!");
static_assert(offsetof(AB_TGF_Static_OverlapCheck_ProjectileBase_C, MaxExistTime) == 0x0006D0, "Member 'AB_TGF_Static_OverlapCheck_ProjectileBase_C::MaxExistTime' has a wrong offset!");
static_assert(offsetof(AB_TGF_Static_OverlapCheck_ProjectileBase_C, AffectTeamRelation) == 0x0006D8, "Member 'AB_TGF_Static_OverlapCheck_ProjectileBase_C::AffectTeamRelation' has a wrong offset!");
static_assert(offsetof(AB_TGF_Static_OverlapCheck_ProjectileBase_C, CapsuleRadius) == 0x0006DC, "Member 'AB_TGF_Static_OverlapCheck_ProjectileBase_C::CapsuleRadius' has a wrong offset!");
static_assert(offsetof(AB_TGF_Static_OverlapCheck_ProjectileBase_C, CapsuleHalfHeight) == 0x0006E0, "Member 'AB_TGF_Static_OverlapCheck_ProjectileBase_C::CapsuleHalfHeight' has a wrong offset!");
static_assert(offsetof(AB_TGF_Static_OverlapCheck_ProjectileBase_C, HeightDeltaCheck) == 0x0006E8, "Member 'AB_TGF_Static_OverlapCheck_ProjectileBase_C::HeightDeltaCheck' has a wrong offset!");
static_assert(offsetof(AB_TGF_Static_OverlapCheck_ProjectileBase_C, CurrentHitActor) == 0x0006F0, "Member 'AB_TGF_Static_OverlapCheck_ProjectileBase_C::CurrentHitActor' has a wrong offset!");
static_assert(offsetof(AB_TGF_Static_OverlapCheck_ProjectileBase_C, CurrentHitResult) == 0x0006F8, "Member 'AB_TGF_Static_OverlapCheck_ProjectileBase_C::CurrentHitResult' has a wrong offset!");
static_assert(offsetof(AB_TGF_Static_OverlapCheck_ProjectileBase_C, CurrentHeight) == 0x0007E0, "Member 'AB_TGF_Static_OverlapCheck_ProjectileBase_C::CurrentHeight' has a wrong offset!");
static_assert(offsetof(AB_TGF_Static_OverlapCheck_ProjectileBase_C, CurrentProcessedActor) == 0x0007E8, "Member 'AB_TGF_Static_OverlapCheck_ProjectileBase_C::CurrentProcessedActor' has a wrong offset!");
static_assert(offsetof(AB_TGF_Static_OverlapCheck_ProjectileBase_C, LooperTimer) == 0x0007F8, "Member 'AB_TGF_Static_OverlapCheck_ProjectileBase_C::LooperTimer' has a wrong offset!");
static_assert(offsetof(AB_TGF_Static_OverlapCheck_ProjectileBase_C, LoopSound) == 0x000800, "Member 'AB_TGF_Static_OverlapCheck_ProjectileBase_C::LoopSound' has a wrong offset!");
static_assert(offsetof(AB_TGF_Static_OverlapCheck_ProjectileBase_C, TriggerSound) == 0x000808, "Member 'AB_TGF_Static_OverlapCheck_ProjectileBase_C::TriggerSound' has a wrong offset!");
static_assert(offsetof(AB_TGF_Static_OverlapCheck_ProjectileBase_C, Draw_Debug_Type) == 0x000810, "Member 'AB_TGF_Static_OverlapCheck_ProjectileBase_C::Draw_Debug_Type' has a wrong offset!");
static_assert(offsetof(AB_TGF_Static_OverlapCheck_ProjectileBase_C, TriggerDelay) == 0x000818, "Member 'AB_TGF_Static_OverlapCheck_ProjectileBase_C::TriggerDelay' has a wrong offset!");

}

