#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: EnhancedInput

#include "Basic.hpp"

#include "InputCore_structs.hpp"
#include "EnhancedInput_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function EnhancedInput.EnhancedInputSubsystemInterface.AddMappingContext
// 0x0010 (0x0010 - 0x0000)
struct EnhancedInputSubsystemInterface_AddMappingContext final
{
public:
	const class UInputMappingContext*             MappingContext;                                    // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Priority;                                          // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FModifyContextOptions                  Options;                                           // 0x000C(0x0001)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(EnhancedInputSubsystemInterface_AddMappingContext) == 0x000008, "Wrong alignment on EnhancedInputSubsystemInterface_AddMappingContext");
static_assert(sizeof(EnhancedInputSubsystemInterface_AddMappingContext) == 0x000010, "Wrong size on EnhancedInputSubsystemInterface_AddMappingContext");
static_assert(offsetof(EnhancedInputSubsystemInterface_AddMappingContext, MappingContext) == 0x000000, "Member 'EnhancedInputSubsystemInterface_AddMappingContext::MappingContext' has a wrong offset!");
static_assert(offsetof(EnhancedInputSubsystemInterface_AddMappingContext, Priority) == 0x000008, "Member 'EnhancedInputSubsystemInterface_AddMappingContext::Priority' has a wrong offset!");
static_assert(offsetof(EnhancedInputSubsystemInterface_AddMappingContext, Options) == 0x00000C, "Member 'EnhancedInputSubsystemInterface_AddMappingContext::Options' has a wrong offset!");

// Function EnhancedInput.EnhancedInputSubsystemInterface.AddPlayerMappableConfig
// 0x0010 (0x0010 - 0x0000)
struct EnhancedInputSubsystemInterface_AddPlayerMappableConfig final
{
public:
	const class UPlayerMappableInputConfig*       Config;                                            // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FModifyContextOptions                  Options;                                           // 0x0008(0x0001)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(EnhancedInputSubsystemInterface_AddPlayerMappableConfig) == 0x000008, "Wrong alignment on EnhancedInputSubsystemInterface_AddPlayerMappableConfig");
static_assert(sizeof(EnhancedInputSubsystemInterface_AddPlayerMappableConfig) == 0x000010, "Wrong size on EnhancedInputSubsystemInterface_AddPlayerMappableConfig");
static_assert(offsetof(EnhancedInputSubsystemInterface_AddPlayerMappableConfig, Config) == 0x000000, "Member 'EnhancedInputSubsystemInterface_AddPlayerMappableConfig::Config' has a wrong offset!");
static_assert(offsetof(EnhancedInputSubsystemInterface_AddPlayerMappableConfig, Options) == 0x000008, "Member 'EnhancedInputSubsystemInterface_AddPlayerMappableConfig::Options' has a wrong offset!");

// Function EnhancedInput.EnhancedInputSubsystemInterface.AddPlayerMappedKey
// 0x0028 (0x0028 - 0x0000)
struct EnhancedInputSubsystemInterface_AddPlayerMappedKey final
{
public:
	class FName                                   MappingName;                                       // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FKey                                   NewKey;                                            // 0x0008(0x0018)(ConstParm, Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FModifyContextOptions                  Options;                                           // 0x0020(0x0001)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ReturnValue;                                       // 0x0024(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(EnhancedInputSubsystemInterface_AddPlayerMappedKey) == 0x000008, "Wrong alignment on EnhancedInputSubsystemInterface_AddPlayerMappedKey");
static_assert(sizeof(EnhancedInputSubsystemInterface_AddPlayerMappedKey) == 0x000028, "Wrong size on EnhancedInputSubsystemInterface_AddPlayerMappedKey");
static_assert(offsetof(EnhancedInputSubsystemInterface_AddPlayerMappedKey, MappingName) == 0x000000, "Member 'EnhancedInputSubsystemInterface_AddPlayerMappedKey::MappingName' has a wrong offset!");
static_assert(offsetof(EnhancedInputSubsystemInterface_AddPlayerMappedKey, NewKey) == 0x000008, "Member 'EnhancedInputSubsystemInterface_AddPlayerMappedKey::NewKey' has a wrong offset!");
static_assert(offsetof(EnhancedInputSubsystemInterface_AddPlayerMappedKey, Options) == 0x000020, "Member 'EnhancedInputSubsystemInterface_AddPlayerMappedKey::Options' has a wrong offset!");
static_assert(offsetof(EnhancedInputSubsystemInterface_AddPlayerMappedKey, ReturnValue) == 0x000024, "Member 'EnhancedInputSubsystemInterface_AddPlayerMappedKey::ReturnValue' has a wrong offset!");

// Function EnhancedInput.EnhancedInputSubsystemInterface.InjectInputForAction
// 0x0048 (0x0048 - 0x0000)
struct EnhancedInputSubsystemInterface_InjectInputForAction final
{
public:
	const class UInputAction*                     Action;                                            // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FInputActionValue                      RawValue;                                          // 0x0008(0x0020)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TArray<class UInputModifier*>                 Modifiers;                                         // 0x0028(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	TArray<class UInputTrigger*>                  Triggers;                                          // 0x0038(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(EnhancedInputSubsystemInterface_InjectInputForAction) == 0x000008, "Wrong alignment on EnhancedInputSubsystemInterface_InjectInputForAction");
static_assert(sizeof(EnhancedInputSubsystemInterface_InjectInputForAction) == 0x000048, "Wrong size on EnhancedInputSubsystemInterface_InjectInputForAction");
static_assert(offsetof(EnhancedInputSubsystemInterface_InjectInputForAction, Action) == 0x000000, "Member 'EnhancedInputSubsystemInterface_InjectInputForAction::Action' has a wrong offset!");
static_assert(offsetof(EnhancedInputSubsystemInterface_InjectInputForAction, RawValue) == 0x000008, "Member 'EnhancedInputSubsystemInterface_InjectInputForAction::RawValue' has a wrong offset!");
static_assert(offsetof(EnhancedInputSubsystemInterface_InjectInputForAction, Modifiers) == 0x000028, "Member 'EnhancedInputSubsystemInterface_InjectInputForAction::Modifiers' has a wrong offset!");
static_assert(offsetof(EnhancedInputSubsystemInterface_InjectInputForAction, Triggers) == 0x000038, "Member 'EnhancedInputSubsystemInterface_InjectInputForAction::Triggers' has a wrong offset!");

// Function EnhancedInput.EnhancedInputSubsystemInterface.InjectInputVectorForAction
// 0x0040 (0x0040 - 0x0000)
struct EnhancedInputSubsystemInterface_InjectInputVectorForAction final
{
public:
	const class UInputAction*                     Action;                                            // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                Value;                                             // 0x0008(0x0018)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UInputModifier*>                 Modifiers;                                         // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	TArray<class UInputTrigger*>                  Triggers;                                          // 0x0030(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(EnhancedInputSubsystemInterface_InjectInputVectorForAction) == 0x000008, "Wrong alignment on EnhancedInputSubsystemInterface_InjectInputVectorForAction");
static_assert(sizeof(EnhancedInputSubsystemInterface_InjectInputVectorForAction) == 0x000040, "Wrong size on EnhancedInputSubsystemInterface_InjectInputVectorForAction");
static_assert(offsetof(EnhancedInputSubsystemInterface_InjectInputVectorForAction, Action) == 0x000000, "Member 'EnhancedInputSubsystemInterface_InjectInputVectorForAction::Action' has a wrong offset!");
static_assert(offsetof(EnhancedInputSubsystemInterface_InjectInputVectorForAction, Value) == 0x000008, "Member 'EnhancedInputSubsystemInterface_InjectInputVectorForAction::Value' has a wrong offset!");
static_assert(offsetof(EnhancedInputSubsystemInterface_InjectInputVectorForAction, Modifiers) == 0x000020, "Member 'EnhancedInputSubsystemInterface_InjectInputVectorForAction::Modifiers' has a wrong offset!");
static_assert(offsetof(EnhancedInputSubsystemInterface_InjectInputVectorForAction, Triggers) == 0x000030, "Member 'EnhancedInputSubsystemInterface_InjectInputVectorForAction::Triggers' has a wrong offset!");

// Function EnhancedInput.EnhancedInputSubsystemInterface.QueryMapKeyInActiveContextSet
// 0x0040 (0x0040 - 0x0000)
struct EnhancedInputSubsystemInterface_QueryMapKeyInActiveContextSet final
{
public:
	const class UInputMappingContext*             InputContext;                                      // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class UInputAction*                     Action;                                            // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FKey                                   Key;                                               // 0x0010(0x0018)(Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FMappingQueryIssue>             OutIssues;                                         // 0x0028(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	EMappingQueryIssue                            BlockingIssues;                                    // 0x0038(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EMappingQueryResult                           ReturnValue;                                       // 0x0039(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(EnhancedInputSubsystemInterface_QueryMapKeyInActiveContextSet) == 0x000008, "Wrong alignment on EnhancedInputSubsystemInterface_QueryMapKeyInActiveContextSet");
static_assert(sizeof(EnhancedInputSubsystemInterface_QueryMapKeyInActiveContextSet) == 0x000040, "Wrong size on EnhancedInputSubsystemInterface_QueryMapKeyInActiveContextSet");
static_assert(offsetof(EnhancedInputSubsystemInterface_QueryMapKeyInActiveContextSet, InputContext) == 0x000000, "Member 'EnhancedInputSubsystemInterface_QueryMapKeyInActiveContextSet::InputContext' has a wrong offset!");
static_assert(offsetof(EnhancedInputSubsystemInterface_QueryMapKeyInActiveContextSet, Action) == 0x000008, "Member 'EnhancedInputSubsystemInterface_QueryMapKeyInActiveContextSet::Action' has a wrong offset!");
static_assert(offsetof(EnhancedInputSubsystemInterface_QueryMapKeyInActiveContextSet, Key) == 0x000010, "Member 'EnhancedInputSubsystemInterface_QueryMapKeyInActiveContextSet::Key' has a wrong offset!");
static_assert(offsetof(EnhancedInputSubsystemInterface_QueryMapKeyInActiveContextSet, OutIssues) == 0x000028, "Member 'EnhancedInputSubsystemInterface_QueryMapKeyInActiveContextSet::OutIssues' has a wrong offset!");
static_assert(offsetof(EnhancedInputSubsystemInterface_QueryMapKeyInActiveContextSet, BlockingIssues) == 0x000038, "Member 'EnhancedInputSubsystemInterface_QueryMapKeyInActiveContextSet::BlockingIssues' has a wrong offset!");
static_assert(offsetof(EnhancedInputSubsystemInterface_QueryMapKeyInActiveContextSet, ReturnValue) == 0x000039, "Member 'EnhancedInputSubsystemInterface_QueryMapKeyInActiveContextSet::ReturnValue' has a wrong offset!");

// Function EnhancedInput.EnhancedInputSubsystemInterface.QueryMapKeyInContextSet
// 0x0050 (0x0050 - 0x0000)
struct EnhancedInputSubsystemInterface_QueryMapKeyInContextSet final
{
public:
	TArray<class UInputMappingContext*>           PrioritizedActiveContexts;                         // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	const class UInputMappingContext*             InputContext;                                      // 0x0010(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class UInputAction*                     Action;                                            // 0x0018(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FKey                                   Key;                                               // 0x0020(0x0018)(Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FMappingQueryIssue>             OutIssues;                                         // 0x0038(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	EMappingQueryIssue                            BlockingIssues;                                    // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EMappingQueryResult                           ReturnValue;                                       // 0x0049(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4A[0x6];                                       // 0x004A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(EnhancedInputSubsystemInterface_QueryMapKeyInContextSet) == 0x000008, "Wrong alignment on EnhancedInputSubsystemInterface_QueryMapKeyInContextSet");
static_assert(sizeof(EnhancedInputSubsystemInterface_QueryMapKeyInContextSet) == 0x000050, "Wrong size on EnhancedInputSubsystemInterface_QueryMapKeyInContextSet");
static_assert(offsetof(EnhancedInputSubsystemInterface_QueryMapKeyInContextSet, PrioritizedActiveContexts) == 0x000000, "Member 'EnhancedInputSubsystemInterface_QueryMapKeyInContextSet::PrioritizedActiveContexts' has a wrong offset!");
static_assert(offsetof(EnhancedInputSubsystemInterface_QueryMapKeyInContextSet, InputContext) == 0x000010, "Member 'EnhancedInputSubsystemInterface_QueryMapKeyInContextSet::InputContext' has a wrong offset!");
static_assert(offsetof(EnhancedInputSubsystemInterface_QueryMapKeyInContextSet, Action) == 0x000018, "Member 'EnhancedInputSubsystemInterface_QueryMapKeyInContextSet::Action' has a wrong offset!");
static_assert(offsetof(EnhancedInputSubsystemInterface_QueryMapKeyInContextSet, Key) == 0x000020, "Member 'EnhancedInputSubsystemInterface_QueryMapKeyInContextSet::Key' has a wrong offset!");
static_assert(offsetof(EnhancedInputSubsystemInterface_QueryMapKeyInContextSet, OutIssues) == 0x000038, "Member 'EnhancedInputSubsystemInterface_QueryMapKeyInContextSet::OutIssues' has a wrong offset!");
static_assert(offsetof(EnhancedInputSubsystemInterface_QueryMapKeyInContextSet, BlockingIssues) == 0x000048, "Member 'EnhancedInputSubsystemInterface_QueryMapKeyInContextSet::BlockingIssues' has a wrong offset!");
static_assert(offsetof(EnhancedInputSubsystemInterface_QueryMapKeyInContextSet, ReturnValue) == 0x000049, "Member 'EnhancedInputSubsystemInterface_QueryMapKeyInContextSet::ReturnValue' has a wrong offset!");

// Function EnhancedInput.EnhancedInputSubsystemInterface.RemoveAllPlayerMappedKeys
// 0x0001 (0x0001 - 0x0000)
struct EnhancedInputSubsystemInterface_RemoveAllPlayerMappedKeys final
{
public:
	struct FModifyContextOptions                  Options;                                           // 0x0000(0x0001)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(EnhancedInputSubsystemInterface_RemoveAllPlayerMappedKeys) == 0x000001, "Wrong alignment on EnhancedInputSubsystemInterface_RemoveAllPlayerMappedKeys");
static_assert(sizeof(EnhancedInputSubsystemInterface_RemoveAllPlayerMappedKeys) == 0x000001, "Wrong size on EnhancedInputSubsystemInterface_RemoveAllPlayerMappedKeys");
static_assert(offsetof(EnhancedInputSubsystemInterface_RemoveAllPlayerMappedKeys, Options) == 0x000000, "Member 'EnhancedInputSubsystemInterface_RemoveAllPlayerMappedKeys::Options' has a wrong offset!");

// Function EnhancedInput.EnhancedInputSubsystemInterface.RemoveMappingContext
// 0x0010 (0x0010 - 0x0000)
struct EnhancedInputSubsystemInterface_RemoveMappingContext final
{
public:
	const class UInputMappingContext*             MappingContext;                                    // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FModifyContextOptions                  Options;                                           // 0x0008(0x0001)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(EnhancedInputSubsystemInterface_RemoveMappingContext) == 0x000008, "Wrong alignment on EnhancedInputSubsystemInterface_RemoveMappingContext");
static_assert(sizeof(EnhancedInputSubsystemInterface_RemoveMappingContext) == 0x000010, "Wrong size on EnhancedInputSubsystemInterface_RemoveMappingContext");
static_assert(offsetof(EnhancedInputSubsystemInterface_RemoveMappingContext, MappingContext) == 0x000000, "Member 'EnhancedInputSubsystemInterface_RemoveMappingContext::MappingContext' has a wrong offset!");
static_assert(offsetof(EnhancedInputSubsystemInterface_RemoveMappingContext, Options) == 0x000008, "Member 'EnhancedInputSubsystemInterface_RemoveMappingContext::Options' has a wrong offset!");

// Function EnhancedInput.EnhancedInputSubsystemInterface.RemovePlayerMappableConfig
// 0x0010 (0x0010 - 0x0000)
struct EnhancedInputSubsystemInterface_RemovePlayerMappableConfig final
{
public:
	const class UPlayerMappableInputConfig*       Config;                                            // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FModifyContextOptions                  Options;                                           // 0x0008(0x0001)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(EnhancedInputSubsystemInterface_RemovePlayerMappableConfig) == 0x000008, "Wrong alignment on EnhancedInputSubsystemInterface_RemovePlayerMappableConfig");
static_assert(sizeof(EnhancedInputSubsystemInterface_RemovePlayerMappableConfig) == 0x000010, "Wrong size on EnhancedInputSubsystemInterface_RemovePlayerMappableConfig");
static_assert(offsetof(EnhancedInputSubsystemInterface_RemovePlayerMappableConfig, Config) == 0x000000, "Member 'EnhancedInputSubsystemInterface_RemovePlayerMappableConfig::Config' has a wrong offset!");
static_assert(offsetof(EnhancedInputSubsystemInterface_RemovePlayerMappableConfig, Options) == 0x000008, "Member 'EnhancedInputSubsystemInterface_RemovePlayerMappableConfig::Options' has a wrong offset!");

// Function EnhancedInput.EnhancedInputSubsystemInterface.RemovePlayerMappedKey
// 0x0010 (0x0010 - 0x0000)
struct EnhancedInputSubsystemInterface_RemovePlayerMappedKey final
{
public:
	class FName                                   MappingName;                                       // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FModifyContextOptions                  Options;                                           // 0x0008(0x0001)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ReturnValue;                                       // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(EnhancedInputSubsystemInterface_RemovePlayerMappedKey) == 0x000004, "Wrong alignment on EnhancedInputSubsystemInterface_RemovePlayerMappedKey");
static_assert(sizeof(EnhancedInputSubsystemInterface_RemovePlayerMappedKey) == 0x000010, "Wrong size on EnhancedInputSubsystemInterface_RemovePlayerMappedKey");
static_assert(offsetof(EnhancedInputSubsystemInterface_RemovePlayerMappedKey, MappingName) == 0x000000, "Member 'EnhancedInputSubsystemInterface_RemovePlayerMappedKey::MappingName' has a wrong offset!");
static_assert(offsetof(EnhancedInputSubsystemInterface_RemovePlayerMappedKey, Options) == 0x000008, "Member 'EnhancedInputSubsystemInterface_RemovePlayerMappedKey::Options' has a wrong offset!");
static_assert(offsetof(EnhancedInputSubsystemInterface_RemovePlayerMappedKey, ReturnValue) == 0x00000C, "Member 'EnhancedInputSubsystemInterface_RemovePlayerMappedKey::ReturnValue' has a wrong offset!");

// Function EnhancedInput.EnhancedInputSubsystemInterface.RequestRebuildControlMappings
// 0x0002 (0x0002 - 0x0000)
struct EnhancedInputSubsystemInterface_RequestRebuildControlMappings final
{
public:
	struct FModifyContextOptions                  Options;                                           // 0x0000(0x0001)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	EInputMappingRebuildType                      RebuildType;                                       // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(EnhancedInputSubsystemInterface_RequestRebuildControlMappings) == 0x000001, "Wrong alignment on EnhancedInputSubsystemInterface_RequestRebuildControlMappings");
static_assert(sizeof(EnhancedInputSubsystemInterface_RequestRebuildControlMappings) == 0x000002, "Wrong size on EnhancedInputSubsystemInterface_RequestRebuildControlMappings");
static_assert(offsetof(EnhancedInputSubsystemInterface_RequestRebuildControlMappings, Options) == 0x000000, "Member 'EnhancedInputSubsystemInterface_RequestRebuildControlMappings::Options' has a wrong offset!");
static_assert(offsetof(EnhancedInputSubsystemInterface_RequestRebuildControlMappings, RebuildType) == 0x000001, "Member 'EnhancedInputSubsystemInterface_RequestRebuildControlMappings::RebuildType' has a wrong offset!");

// Function EnhancedInput.EnhancedInputSubsystemInterface.ResetInputForAction
// 0x0008 (0x0008 - 0x0000)
struct EnhancedInputSubsystemInterface_ResetInputForAction final
{
public:
	const class UInputAction*                     Action;                                            // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(EnhancedInputSubsystemInterface_ResetInputForAction) == 0x000008, "Wrong alignment on EnhancedInputSubsystemInterface_ResetInputForAction");
static_assert(sizeof(EnhancedInputSubsystemInterface_ResetInputForAction) == 0x000008, "Wrong size on EnhancedInputSubsystemInterface_ResetInputForAction");
static_assert(offsetof(EnhancedInputSubsystemInterface_ResetInputForAction, Action) == 0x000000, "Member 'EnhancedInputSubsystemInterface_ResetInputForAction::Action' has a wrong offset!");

// Function EnhancedInput.EnhancedInputSubsystemInterface.GetAllPlayerMappableActionKeyMappings
// 0x0010 (0x0010 - 0x0000)
struct EnhancedInputSubsystemInterface_GetAllPlayerMappableActionKeyMappings final
{
public:
	TArray<struct FEnhancedActionKeyMapping>      ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
static_assert(alignof(EnhancedInputSubsystemInterface_GetAllPlayerMappableActionKeyMappings) == 0x000008, "Wrong alignment on EnhancedInputSubsystemInterface_GetAllPlayerMappableActionKeyMappings");
static_assert(sizeof(EnhancedInputSubsystemInterface_GetAllPlayerMappableActionKeyMappings) == 0x000010, "Wrong size on EnhancedInputSubsystemInterface_GetAllPlayerMappableActionKeyMappings");
static_assert(offsetof(EnhancedInputSubsystemInterface_GetAllPlayerMappableActionKeyMappings, ReturnValue) == 0x000000, "Member 'EnhancedInputSubsystemInterface_GetAllPlayerMappableActionKeyMappings::ReturnValue' has a wrong offset!");

// Function EnhancedInput.EnhancedInputSubsystemInterface.GetPlayerMappedKey
// 0x0020 (0x0020 - 0x0000)
struct EnhancedInputSubsystemInterface_GetPlayerMappedKey final
{
public:
	class FName                                   MappingName;                                       // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FKey                                   ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(EnhancedInputSubsystemInterface_GetPlayerMappedKey) == 0x000008, "Wrong alignment on EnhancedInputSubsystemInterface_GetPlayerMappedKey");
static_assert(sizeof(EnhancedInputSubsystemInterface_GetPlayerMappedKey) == 0x000020, "Wrong size on EnhancedInputSubsystemInterface_GetPlayerMappedKey");
static_assert(offsetof(EnhancedInputSubsystemInterface_GetPlayerMappedKey, MappingName) == 0x000000, "Member 'EnhancedInputSubsystemInterface_GetPlayerMappedKey::MappingName' has a wrong offset!");
static_assert(offsetof(EnhancedInputSubsystemInterface_GetPlayerMappedKey, ReturnValue) == 0x000008, "Member 'EnhancedInputSubsystemInterface_GetPlayerMappedKey::ReturnValue' has a wrong offset!");

// Function EnhancedInput.EnhancedInputSubsystemInterface.HasMappingContext
// 0x0010 (0x0010 - 0x0000)
struct EnhancedInputSubsystemInterface_HasMappingContext final
{
public:
	const class UInputMappingContext*             MappingContext;                                    // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         OutFoundPriority;                                  // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(EnhancedInputSubsystemInterface_HasMappingContext) == 0x000008, "Wrong alignment on EnhancedInputSubsystemInterface_HasMappingContext");
static_assert(sizeof(EnhancedInputSubsystemInterface_HasMappingContext) == 0x000010, "Wrong size on EnhancedInputSubsystemInterface_HasMappingContext");
static_assert(offsetof(EnhancedInputSubsystemInterface_HasMappingContext, MappingContext) == 0x000000, "Member 'EnhancedInputSubsystemInterface_HasMappingContext::MappingContext' has a wrong offset!");
static_assert(offsetof(EnhancedInputSubsystemInterface_HasMappingContext, OutFoundPriority) == 0x000008, "Member 'EnhancedInputSubsystemInterface_HasMappingContext::OutFoundPriority' has a wrong offset!");
static_assert(offsetof(EnhancedInputSubsystemInterface_HasMappingContext, ReturnValue) == 0x00000C, "Member 'EnhancedInputSubsystemInterface_HasMappingContext::ReturnValue' has a wrong offset!");

// Function EnhancedInput.EnhancedInputSubsystemInterface.QueryKeysMappedToAction
// 0x0018 (0x0018 - 0x0000)
struct EnhancedInputSubsystemInterface_QueryKeysMappedToAction final
{
public:
	const class UInputAction*                     Action;                                            // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FKey>                           ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(EnhancedInputSubsystemInterface_QueryKeysMappedToAction) == 0x000008, "Wrong alignment on EnhancedInputSubsystemInterface_QueryKeysMappedToAction");
static_assert(sizeof(EnhancedInputSubsystemInterface_QueryKeysMappedToAction) == 0x000018, "Wrong size on EnhancedInputSubsystemInterface_QueryKeysMappedToAction");
static_assert(offsetof(EnhancedInputSubsystemInterface_QueryKeysMappedToAction, Action) == 0x000000, "Member 'EnhancedInputSubsystemInterface_QueryKeysMappedToAction::Action' has a wrong offset!");
static_assert(offsetof(EnhancedInputSubsystemInterface_QueryKeysMappedToAction, ReturnValue) == 0x000008, "Member 'EnhancedInputSubsystemInterface_QueryKeysMappedToAction::ReturnValue' has a wrong offset!");

// Function EnhancedInput.EnhancedInputComponent.GetBoundActionValue
// 0x0028 (0x0028 - 0x0000)
struct EnhancedInputComponent_GetBoundActionValue final
{
public:
	const class UInputAction*                     Action;                                            // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FInputActionValue                      ReturnValue;                                       // 0x0008(0x0020)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(EnhancedInputComponent_GetBoundActionValue) == 0x000008, "Wrong alignment on EnhancedInputComponent_GetBoundActionValue");
static_assert(sizeof(EnhancedInputComponent_GetBoundActionValue) == 0x000028, "Wrong size on EnhancedInputComponent_GetBoundActionValue");
static_assert(offsetof(EnhancedInputComponent_GetBoundActionValue, Action) == 0x000000, "Member 'EnhancedInputComponent_GetBoundActionValue::Action' has a wrong offset!");
static_assert(offsetof(EnhancedInputComponent_GetBoundActionValue, ReturnValue) == 0x000008, "Member 'EnhancedInputComponent_GetBoundActionValue::ReturnValue' has a wrong offset!");

// Function EnhancedInput.EnhancedInputLibrary.BreakInputActionValue
// 0x0040 (0x0040 - 0x0000)
struct EnhancedInputLibrary_BreakInputActionValue final
{
public:
	struct FInputActionValue                      InActionValue;                                     // 0x0000(0x0020)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	double                                        X;                                                 // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        Y;                                                 // 0x0028(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        Z;                                                 // 0x0030(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EInputActionValueType                         Type;                                              // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(EnhancedInputLibrary_BreakInputActionValue) == 0x000008, "Wrong alignment on EnhancedInputLibrary_BreakInputActionValue");
static_assert(sizeof(EnhancedInputLibrary_BreakInputActionValue) == 0x000040, "Wrong size on EnhancedInputLibrary_BreakInputActionValue");
static_assert(offsetof(EnhancedInputLibrary_BreakInputActionValue, InActionValue) == 0x000000, "Member 'EnhancedInputLibrary_BreakInputActionValue::InActionValue' has a wrong offset!");
static_assert(offsetof(EnhancedInputLibrary_BreakInputActionValue, X) == 0x000020, "Member 'EnhancedInputLibrary_BreakInputActionValue::X' has a wrong offset!");
static_assert(offsetof(EnhancedInputLibrary_BreakInputActionValue, Y) == 0x000028, "Member 'EnhancedInputLibrary_BreakInputActionValue::Y' has a wrong offset!");
static_assert(offsetof(EnhancedInputLibrary_BreakInputActionValue, Z) == 0x000030, "Member 'EnhancedInputLibrary_BreakInputActionValue::Z' has a wrong offset!");
static_assert(offsetof(EnhancedInputLibrary_BreakInputActionValue, Type) == 0x000038, "Member 'EnhancedInputLibrary_BreakInputActionValue::Type' has a wrong offset!");

// Function EnhancedInput.EnhancedInputLibrary.Conv_InputActionValueToAxis1D
// 0x0028 (0x0028 - 0x0000)
struct EnhancedInputLibrary_Conv_InputActionValueToAxis1D final
{
public:
	struct FInputActionValue                      InValue;                                           // 0x0000(0x0020)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	double                                        ReturnValue;                                       // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(EnhancedInputLibrary_Conv_InputActionValueToAxis1D) == 0x000008, "Wrong alignment on EnhancedInputLibrary_Conv_InputActionValueToAxis1D");
static_assert(sizeof(EnhancedInputLibrary_Conv_InputActionValueToAxis1D) == 0x000028, "Wrong size on EnhancedInputLibrary_Conv_InputActionValueToAxis1D");
static_assert(offsetof(EnhancedInputLibrary_Conv_InputActionValueToAxis1D, InValue) == 0x000000, "Member 'EnhancedInputLibrary_Conv_InputActionValueToAxis1D::InValue' has a wrong offset!");
static_assert(offsetof(EnhancedInputLibrary_Conv_InputActionValueToAxis1D, ReturnValue) == 0x000020, "Member 'EnhancedInputLibrary_Conv_InputActionValueToAxis1D::ReturnValue' has a wrong offset!");

// Function EnhancedInput.EnhancedInputLibrary.Conv_InputActionValueToAxis2D
// 0x0030 (0x0030 - 0x0000)
struct EnhancedInputLibrary_Conv_InputActionValueToAxis2D final
{
public:
	struct FInputActionValue                      InValue;                                           // 0x0000(0x0020)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector2D                              ReturnValue;                                       // 0x0020(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(EnhancedInputLibrary_Conv_InputActionValueToAxis2D) == 0x000008, "Wrong alignment on EnhancedInputLibrary_Conv_InputActionValueToAxis2D");
static_assert(sizeof(EnhancedInputLibrary_Conv_InputActionValueToAxis2D) == 0x000030, "Wrong size on EnhancedInputLibrary_Conv_InputActionValueToAxis2D");
static_assert(offsetof(EnhancedInputLibrary_Conv_InputActionValueToAxis2D, InValue) == 0x000000, "Member 'EnhancedInputLibrary_Conv_InputActionValueToAxis2D::InValue' has a wrong offset!");
static_assert(offsetof(EnhancedInputLibrary_Conv_InputActionValueToAxis2D, ReturnValue) == 0x000020, "Member 'EnhancedInputLibrary_Conv_InputActionValueToAxis2D::ReturnValue' has a wrong offset!");

// Function EnhancedInput.EnhancedInputLibrary.Conv_InputActionValueToAxis3D
// 0x0038 (0x0038 - 0x0000)
struct EnhancedInputLibrary_Conv_InputActionValueToAxis3D final
{
public:
	struct FInputActionValue                      ActionValue;                                       // 0x0000(0x0020)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                                ReturnValue;                                       // 0x0020(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(EnhancedInputLibrary_Conv_InputActionValueToAxis3D) == 0x000008, "Wrong alignment on EnhancedInputLibrary_Conv_InputActionValueToAxis3D");
static_assert(sizeof(EnhancedInputLibrary_Conv_InputActionValueToAxis3D) == 0x000038, "Wrong size on EnhancedInputLibrary_Conv_InputActionValueToAxis3D");
static_assert(offsetof(EnhancedInputLibrary_Conv_InputActionValueToAxis3D, ActionValue) == 0x000000, "Member 'EnhancedInputLibrary_Conv_InputActionValueToAxis3D::ActionValue' has a wrong offset!");
static_assert(offsetof(EnhancedInputLibrary_Conv_InputActionValueToAxis3D, ReturnValue) == 0x000020, "Member 'EnhancedInputLibrary_Conv_InputActionValueToAxis3D::ReturnValue' has a wrong offset!");

// Function EnhancedInput.EnhancedInputLibrary.Conv_InputActionValueToBool
// 0x0028 (0x0028 - 0x0000)
struct EnhancedInputLibrary_Conv_InputActionValueToBool final
{
public:
	struct FInputActionValue                      InValue;                                           // 0x0000(0x0020)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(EnhancedInputLibrary_Conv_InputActionValueToBool) == 0x000008, "Wrong alignment on EnhancedInputLibrary_Conv_InputActionValueToBool");
static_assert(sizeof(EnhancedInputLibrary_Conv_InputActionValueToBool) == 0x000028, "Wrong size on EnhancedInputLibrary_Conv_InputActionValueToBool");
static_assert(offsetof(EnhancedInputLibrary_Conv_InputActionValueToBool, InValue) == 0x000000, "Member 'EnhancedInputLibrary_Conv_InputActionValueToBool::InValue' has a wrong offset!");
static_assert(offsetof(EnhancedInputLibrary_Conv_InputActionValueToBool, ReturnValue) == 0x000020, "Member 'EnhancedInputLibrary_Conv_InputActionValueToBool::ReturnValue' has a wrong offset!");

// Function EnhancedInput.EnhancedInputLibrary.Conv_InputActionValueToString
// 0x0030 (0x0030 - 0x0000)
struct EnhancedInputLibrary_Conv_InputActionValueToString final
{
public:
	struct FInputActionValue                      ActionValue;                                       // 0x0000(0x0020)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0020(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(EnhancedInputLibrary_Conv_InputActionValueToString) == 0x000008, "Wrong alignment on EnhancedInputLibrary_Conv_InputActionValueToString");
static_assert(sizeof(EnhancedInputLibrary_Conv_InputActionValueToString) == 0x000030, "Wrong size on EnhancedInputLibrary_Conv_InputActionValueToString");
static_assert(offsetof(EnhancedInputLibrary_Conv_InputActionValueToString, ActionValue) == 0x000000, "Member 'EnhancedInputLibrary_Conv_InputActionValueToString::ActionValue' has a wrong offset!");
static_assert(offsetof(EnhancedInputLibrary_Conv_InputActionValueToString, ReturnValue) == 0x000020, "Member 'EnhancedInputLibrary_Conv_InputActionValueToString::ReturnValue' has a wrong offset!");

// Function EnhancedInput.EnhancedInputLibrary.GetBoundActionValue
// 0x0030 (0x0030 - 0x0000)
struct EnhancedInputLibrary_GetBoundActionValue final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class UInputAction*                     Action;                                            // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FInputActionValue                      ReturnValue;                                       // 0x0010(0x0020)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(EnhancedInputLibrary_GetBoundActionValue) == 0x000008, "Wrong alignment on EnhancedInputLibrary_GetBoundActionValue");
static_assert(sizeof(EnhancedInputLibrary_GetBoundActionValue) == 0x000030, "Wrong size on EnhancedInputLibrary_GetBoundActionValue");
static_assert(offsetof(EnhancedInputLibrary_GetBoundActionValue, Actor) == 0x000000, "Member 'EnhancedInputLibrary_GetBoundActionValue::Actor' has a wrong offset!");
static_assert(offsetof(EnhancedInputLibrary_GetBoundActionValue, Action) == 0x000008, "Member 'EnhancedInputLibrary_GetBoundActionValue::Action' has a wrong offset!");
static_assert(offsetof(EnhancedInputLibrary_GetBoundActionValue, ReturnValue) == 0x000010, "Member 'EnhancedInputLibrary_GetBoundActionValue::ReturnValue' has a wrong offset!");

// Function EnhancedInput.EnhancedInputLibrary.MakeInputActionValue
// 0x0058 (0x0058 - 0x0000)
struct EnhancedInputLibrary_MakeInputActionValue final
{
public:
	double                                        X;                                                 // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        Y;                                                 // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        Z;                                                 // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FInputActionValue                      MatchValueType;                                    // 0x0018(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FInputActionValue                      ReturnValue;                                       // 0x0038(0x0020)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(EnhancedInputLibrary_MakeInputActionValue) == 0x000008, "Wrong alignment on EnhancedInputLibrary_MakeInputActionValue");
static_assert(sizeof(EnhancedInputLibrary_MakeInputActionValue) == 0x000058, "Wrong size on EnhancedInputLibrary_MakeInputActionValue");
static_assert(offsetof(EnhancedInputLibrary_MakeInputActionValue, X) == 0x000000, "Member 'EnhancedInputLibrary_MakeInputActionValue::X' has a wrong offset!");
static_assert(offsetof(EnhancedInputLibrary_MakeInputActionValue, Y) == 0x000008, "Member 'EnhancedInputLibrary_MakeInputActionValue::Y' has a wrong offset!");
static_assert(offsetof(EnhancedInputLibrary_MakeInputActionValue, Z) == 0x000010, "Member 'EnhancedInputLibrary_MakeInputActionValue::Z' has a wrong offset!");
static_assert(offsetof(EnhancedInputLibrary_MakeInputActionValue, MatchValueType) == 0x000018, "Member 'EnhancedInputLibrary_MakeInputActionValue::MatchValueType' has a wrong offset!");
static_assert(offsetof(EnhancedInputLibrary_MakeInputActionValue, ReturnValue) == 0x000038, "Member 'EnhancedInputLibrary_MakeInputActionValue::ReturnValue' has a wrong offset!");

// Function EnhancedInput.EnhancedInputLibrary.MakeInputActionValueOfType
// 0x0040 (0x0040 - 0x0000)
struct EnhancedInputLibrary_MakeInputActionValueOfType final
{
public:
	double                                        X;                                                 // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        Y;                                                 // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        Z;                                                 // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EInputActionValueType                         ValueType;                                         // 0x0018(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputActionValue                      ReturnValue;                                       // 0x0020(0x0020)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(EnhancedInputLibrary_MakeInputActionValueOfType) == 0x000008, "Wrong alignment on EnhancedInputLibrary_MakeInputActionValueOfType");
static_assert(sizeof(EnhancedInputLibrary_MakeInputActionValueOfType) == 0x000040, "Wrong size on EnhancedInputLibrary_MakeInputActionValueOfType");
static_assert(offsetof(EnhancedInputLibrary_MakeInputActionValueOfType, X) == 0x000000, "Member 'EnhancedInputLibrary_MakeInputActionValueOfType::X' has a wrong offset!");
static_assert(offsetof(EnhancedInputLibrary_MakeInputActionValueOfType, Y) == 0x000008, "Member 'EnhancedInputLibrary_MakeInputActionValueOfType::Y' has a wrong offset!");
static_assert(offsetof(EnhancedInputLibrary_MakeInputActionValueOfType, Z) == 0x000010, "Member 'EnhancedInputLibrary_MakeInputActionValueOfType::Z' has a wrong offset!");
static_assert(offsetof(EnhancedInputLibrary_MakeInputActionValueOfType, ValueType) == 0x000018, "Member 'EnhancedInputLibrary_MakeInputActionValueOfType::ValueType' has a wrong offset!");
static_assert(offsetof(EnhancedInputLibrary_MakeInputActionValueOfType, ReturnValue) == 0x000020, "Member 'EnhancedInputLibrary_MakeInputActionValueOfType::ReturnValue' has a wrong offset!");

// Function EnhancedInput.EnhancedInputLibrary.RequestRebuildControlMappingsUsingContext
// 0x0010 (0x0010 - 0x0000)
struct EnhancedInputLibrary_RequestRebuildControlMappingsUsingContext final
{
public:
	const class UInputMappingContext*             Context;                                           // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bForceImmediately;                                 // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(EnhancedInputLibrary_RequestRebuildControlMappingsUsingContext) == 0x000008, "Wrong alignment on EnhancedInputLibrary_RequestRebuildControlMappingsUsingContext");
static_assert(sizeof(EnhancedInputLibrary_RequestRebuildControlMappingsUsingContext) == 0x000010, "Wrong size on EnhancedInputLibrary_RequestRebuildControlMappingsUsingContext");
static_assert(offsetof(EnhancedInputLibrary_RequestRebuildControlMappingsUsingContext, Context) == 0x000000, "Member 'EnhancedInputLibrary_RequestRebuildControlMappingsUsingContext::Context' has a wrong offset!");
static_assert(offsetof(EnhancedInputLibrary_RequestRebuildControlMappingsUsingContext, bForceImmediately) == 0x000008, "Member 'EnhancedInputLibrary_RequestRebuildControlMappingsUsingContext::bForceImmediately' has a wrong offset!");

// Function EnhancedInput.EnhancedInputPlatformData.GetContextRedirect
// 0x0010 (0x0010 - 0x0000)
struct EnhancedInputPlatformData_GetContextRedirect final
{
public:
	class UInputMappingContext*                   InContext;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class UInputMappingContext*             ReturnValue;                                       // 0x0008(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(EnhancedInputPlatformData_GetContextRedirect) == 0x000008, "Wrong alignment on EnhancedInputPlatformData_GetContextRedirect");
static_assert(sizeof(EnhancedInputPlatformData_GetContextRedirect) == 0x000010, "Wrong size on EnhancedInputPlatformData_GetContextRedirect");
static_assert(offsetof(EnhancedInputPlatformData_GetContextRedirect, InContext) == 0x000000, "Member 'EnhancedInputPlatformData_GetContextRedirect::InContext' has a wrong offset!");
static_assert(offsetof(EnhancedInputPlatformData_GetContextRedirect, ReturnValue) == 0x000008, "Member 'EnhancedInputPlatformData_GetContextRedirect::ReturnValue' has a wrong offset!");

// Function EnhancedInput.InputMappingContext.MapKey
// 0x00B8 (0x00B8 - 0x0000)
struct InputMappingContext_MapKey final
{
public:
	const class UInputAction*                     Action;                                            // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FKey                                   ToKey;                                             // 0x0008(0x0018)(Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEnhancedActionKeyMapping              ReturnValue;                                       // 0x0020(0x0098)(Parm, OutParm, ReturnParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
static_assert(alignof(InputMappingContext_MapKey) == 0x000008, "Wrong alignment on InputMappingContext_MapKey");
static_assert(sizeof(InputMappingContext_MapKey) == 0x0000B8, "Wrong size on InputMappingContext_MapKey");
static_assert(offsetof(InputMappingContext_MapKey, Action) == 0x000000, "Member 'InputMappingContext_MapKey::Action' has a wrong offset!");
static_assert(offsetof(InputMappingContext_MapKey, ToKey) == 0x000008, "Member 'InputMappingContext_MapKey::ToKey' has a wrong offset!");
static_assert(offsetof(InputMappingContext_MapKey, ReturnValue) == 0x000020, "Member 'InputMappingContext_MapKey::ReturnValue' has a wrong offset!");

// Function EnhancedInput.InputMappingContext.UnmapAction
// 0x0008 (0x0008 - 0x0000)
struct InputMappingContext_UnmapAction final
{
public:
	const class UInputAction*                     Action;                                            // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InputMappingContext_UnmapAction) == 0x000008, "Wrong alignment on InputMappingContext_UnmapAction");
static_assert(sizeof(InputMappingContext_UnmapAction) == 0x000008, "Wrong size on InputMappingContext_UnmapAction");
static_assert(offsetof(InputMappingContext_UnmapAction, Action) == 0x000000, "Member 'InputMappingContext_UnmapAction::Action' has a wrong offset!");

// Function EnhancedInput.InputMappingContext.UnmapAllKeysFromAction
// 0x0008 (0x0008 - 0x0000)
struct InputMappingContext_UnmapAllKeysFromAction final
{
public:
	const class UInputAction*                     Action;                                            // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InputMappingContext_UnmapAllKeysFromAction) == 0x000008, "Wrong alignment on InputMappingContext_UnmapAllKeysFromAction");
static_assert(sizeof(InputMappingContext_UnmapAllKeysFromAction) == 0x000008, "Wrong size on InputMappingContext_UnmapAllKeysFromAction");
static_assert(offsetof(InputMappingContext_UnmapAllKeysFromAction, Action) == 0x000000, "Member 'InputMappingContext_UnmapAllKeysFromAction::Action' has a wrong offset!");

// Function EnhancedInput.InputMappingContext.UnmapKey
// 0x0020 (0x0020 - 0x0000)
struct InputMappingContext_UnmapKey final
{
public:
	const class UInputAction*                     Action;                                            // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FKey                                   Key;                                               // 0x0008(0x0018)(Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InputMappingContext_UnmapKey) == 0x000008, "Wrong alignment on InputMappingContext_UnmapKey");
static_assert(sizeof(InputMappingContext_UnmapKey) == 0x000020, "Wrong size on InputMappingContext_UnmapKey");
static_assert(offsetof(InputMappingContext_UnmapKey, Action) == 0x000000, "Member 'InputMappingContext_UnmapKey::Action' has a wrong offset!");
static_assert(offsetof(InputMappingContext_UnmapKey, Key) == 0x000008, "Member 'InputMappingContext_UnmapKey::Key' has a wrong offset!");

// Function EnhancedInput.InputModifier.GetVisualizationColor
// 0x0050 (0x0050 - 0x0000)
struct InputModifier_GetVisualizationColor final
{
public:
	struct FInputActionValue                      SampleValue;                                       // 0x0000(0x0020)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	struct FInputActionValue                      FinalValue;                                        // 0x0020(0x0020)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	struct FLinearColor                           ReturnValue;                                       // 0x0040(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InputModifier_GetVisualizationColor) == 0x000008, "Wrong alignment on InputModifier_GetVisualizationColor");
static_assert(sizeof(InputModifier_GetVisualizationColor) == 0x000050, "Wrong size on InputModifier_GetVisualizationColor");
static_assert(offsetof(InputModifier_GetVisualizationColor, SampleValue) == 0x000000, "Member 'InputModifier_GetVisualizationColor::SampleValue' has a wrong offset!");
static_assert(offsetof(InputModifier_GetVisualizationColor, FinalValue) == 0x000020, "Member 'InputModifier_GetVisualizationColor::FinalValue' has a wrong offset!");
static_assert(offsetof(InputModifier_GetVisualizationColor, ReturnValue) == 0x000040, "Member 'InputModifier_GetVisualizationColor::ReturnValue' has a wrong offset!");

// Function EnhancedInput.InputModifier.ModifyRaw
// 0x0050 (0x0050 - 0x0000)
struct InputModifier_ModifyRaw final
{
public:
	const class UEnhancedPlayerInput*             PlayerInput;                                       // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FInputActionValue                      CurrentValue;                                      // 0x0008(0x0020)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	float                                         DeltaTime;                                         // 0x0028(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputActionValue                      ReturnValue;                                       // 0x0030(0x0020)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(InputModifier_ModifyRaw) == 0x000008, "Wrong alignment on InputModifier_ModifyRaw");
static_assert(sizeof(InputModifier_ModifyRaw) == 0x000050, "Wrong size on InputModifier_ModifyRaw");
static_assert(offsetof(InputModifier_ModifyRaw, PlayerInput) == 0x000000, "Member 'InputModifier_ModifyRaw::PlayerInput' has a wrong offset!");
static_assert(offsetof(InputModifier_ModifyRaw, CurrentValue) == 0x000008, "Member 'InputModifier_ModifyRaw::CurrentValue' has a wrong offset!");
static_assert(offsetof(InputModifier_ModifyRaw, DeltaTime) == 0x000028, "Member 'InputModifier_ModifyRaw::DeltaTime' has a wrong offset!");
static_assert(offsetof(InputModifier_ModifyRaw, ReturnValue) == 0x000030, "Member 'InputModifier_ModifyRaw::ReturnValue' has a wrong offset!");

// Function EnhancedInput.InputTrigger.UpdateState
// 0x0030 (0x0030 - 0x0000)
struct InputTrigger_UpdateState final
{
public:
	const class UEnhancedPlayerInput*             PlayerInput;                                       // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FInputActionValue                      ModifiedValue;                                     // 0x0008(0x0020)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	float                                         DeltaTime;                                         // 0x0028(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETriggerState                                 ReturnValue;                                       // 0x002C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(InputTrigger_UpdateState) == 0x000008, "Wrong alignment on InputTrigger_UpdateState");
static_assert(sizeof(InputTrigger_UpdateState) == 0x000030, "Wrong size on InputTrigger_UpdateState");
static_assert(offsetof(InputTrigger_UpdateState, PlayerInput) == 0x000000, "Member 'InputTrigger_UpdateState::PlayerInput' has a wrong offset!");
static_assert(offsetof(InputTrigger_UpdateState, ModifiedValue) == 0x000008, "Member 'InputTrigger_UpdateState::ModifiedValue' has a wrong offset!");
static_assert(offsetof(InputTrigger_UpdateState, DeltaTime) == 0x000028, "Member 'InputTrigger_UpdateState::DeltaTime' has a wrong offset!");
static_assert(offsetof(InputTrigger_UpdateState, ReturnValue) == 0x00002C, "Member 'InputTrigger_UpdateState::ReturnValue' has a wrong offset!");

// Function EnhancedInput.InputTrigger.GetTriggerType
// 0x0001 (0x0001 - 0x0000)
struct InputTrigger_GetTriggerType final
{
public:
	ETriggerType                                  ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InputTrigger_GetTriggerType) == 0x000001, "Wrong alignment on InputTrigger_GetTriggerType");
static_assert(sizeof(InputTrigger_GetTriggerType) == 0x000001, "Wrong size on InputTrigger_GetTriggerType");
static_assert(offsetof(InputTrigger_GetTriggerType, ReturnValue) == 0x000000, "Member 'InputTrigger_GetTriggerType::ReturnValue' has a wrong offset!");

// Function EnhancedInput.InputTrigger.IsActuated
// 0x0028 (0x0028 - 0x0000)
struct InputTrigger_IsActuated final
{
public:
	struct FInputActionValue                      ForValue;                                          // 0x0000(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(InputTrigger_IsActuated) == 0x000008, "Wrong alignment on InputTrigger_IsActuated");
static_assert(sizeof(InputTrigger_IsActuated) == 0x000028, "Wrong size on InputTrigger_IsActuated");
static_assert(offsetof(InputTrigger_IsActuated, ForValue) == 0x000000, "Member 'InputTrigger_IsActuated::ForValue' has a wrong offset!");
static_assert(offsetof(InputTrigger_IsActuated, ReturnValue) == 0x000020, "Member 'InputTrigger_IsActuated::ReturnValue' has a wrong offset!");

// Function EnhancedInput.PlayerMappableInputConfig.GetConfigName
// 0x0008 (0x0008 - 0x0000)
struct PlayerMappableInputConfig_GetConfigName final
{
public:
	class FName                                   ReturnValue;                                       // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayerMappableInputConfig_GetConfigName) == 0x000004, "Wrong alignment on PlayerMappableInputConfig_GetConfigName");
static_assert(sizeof(PlayerMappableInputConfig_GetConfigName) == 0x000008, "Wrong size on PlayerMappableInputConfig_GetConfigName");
static_assert(offsetof(PlayerMappableInputConfig_GetConfigName, ReturnValue) == 0x000000, "Member 'PlayerMappableInputConfig_GetConfigName::ReturnValue' has a wrong offset!");

// Function EnhancedInput.PlayerMappableInputConfig.GetDisplayName
// 0x0018 (0x0018 - 0x0000)
struct PlayerMappableInputConfig_GetDisplayName final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayerMappableInputConfig_GetDisplayName) == 0x000008, "Wrong alignment on PlayerMappableInputConfig_GetDisplayName");
static_assert(sizeof(PlayerMappableInputConfig_GetDisplayName) == 0x000018, "Wrong size on PlayerMappableInputConfig_GetDisplayName");
static_assert(offsetof(PlayerMappableInputConfig_GetDisplayName, ReturnValue) == 0x000000, "Member 'PlayerMappableInputConfig_GetDisplayName::ReturnValue' has a wrong offset!");

// Function EnhancedInput.PlayerMappableInputConfig.GetKeysBoundToAction
// 0x0018 (0x0018 - 0x0000)
struct PlayerMappableInputConfig_GetKeysBoundToAction final
{
public:
	const class UInputAction*                     InAction;                                          // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FEnhancedActionKeyMapping>      ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayerMappableInputConfig_GetKeysBoundToAction) == 0x000008, "Wrong alignment on PlayerMappableInputConfig_GetKeysBoundToAction");
static_assert(sizeof(PlayerMappableInputConfig_GetKeysBoundToAction) == 0x000018, "Wrong size on PlayerMappableInputConfig_GetKeysBoundToAction");
static_assert(offsetof(PlayerMappableInputConfig_GetKeysBoundToAction, InAction) == 0x000000, "Member 'PlayerMappableInputConfig_GetKeysBoundToAction::InAction' has a wrong offset!");
static_assert(offsetof(PlayerMappableInputConfig_GetKeysBoundToAction, ReturnValue) == 0x000008, "Member 'PlayerMappableInputConfig_GetKeysBoundToAction::ReturnValue' has a wrong offset!");

// Function EnhancedInput.PlayerMappableInputConfig.GetMappingByName
// 0x00A0 (0x00A0 - 0x0000)
struct PlayerMappableInputConfig_GetMappingByName final
{
public:
	class FName                                   MappingName;                                       // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEnhancedActionKeyMapping              ReturnValue;                                       // 0x0008(0x0098)(Parm, OutParm, ReturnParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayerMappableInputConfig_GetMappingByName) == 0x000008, "Wrong alignment on PlayerMappableInputConfig_GetMappingByName");
static_assert(sizeof(PlayerMappableInputConfig_GetMappingByName) == 0x0000A0, "Wrong size on PlayerMappableInputConfig_GetMappingByName");
static_assert(offsetof(PlayerMappableInputConfig_GetMappingByName, MappingName) == 0x000000, "Member 'PlayerMappableInputConfig_GetMappingByName::MappingName' has a wrong offset!");
static_assert(offsetof(PlayerMappableInputConfig_GetMappingByName, ReturnValue) == 0x000008, "Member 'PlayerMappableInputConfig_GetMappingByName::ReturnValue' has a wrong offset!");

// Function EnhancedInput.PlayerMappableInputConfig.GetMappingContexts
// 0x0050 (0x0050 - 0x0000)
struct PlayerMappableInputConfig_GetMappingContexts final
{
public:
	TMap<class UInputMappingContext*, int32>      ReturnValue;                                       // 0x0000(0x0050)(ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayerMappableInputConfig_GetMappingContexts) == 0x000008, "Wrong alignment on PlayerMappableInputConfig_GetMappingContexts");
static_assert(sizeof(PlayerMappableInputConfig_GetMappingContexts) == 0x000050, "Wrong size on PlayerMappableInputConfig_GetMappingContexts");
static_assert(offsetof(PlayerMappableInputConfig_GetMappingContexts, ReturnValue) == 0x000000, "Member 'PlayerMappableInputConfig_GetMappingContexts::ReturnValue' has a wrong offset!");

// Function EnhancedInput.PlayerMappableInputConfig.GetMetadata
// 0x0008 (0x0008 - 0x0000)
struct PlayerMappableInputConfig_GetMetadata final
{
public:
	class UObject*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayerMappableInputConfig_GetMetadata) == 0x000008, "Wrong alignment on PlayerMappableInputConfig_GetMetadata");
static_assert(sizeof(PlayerMappableInputConfig_GetMetadata) == 0x000008, "Wrong size on PlayerMappableInputConfig_GetMetadata");
static_assert(offsetof(PlayerMappableInputConfig_GetMetadata, ReturnValue) == 0x000000, "Member 'PlayerMappableInputConfig_GetMetadata::ReturnValue' has a wrong offset!");

// Function EnhancedInput.PlayerMappableInputConfig.GetPlayerMappableKeys
// 0x0010 (0x0010 - 0x0000)
struct PlayerMappableInputConfig_GetPlayerMappableKeys final
{
public:
	TArray<struct FEnhancedActionKeyMapping>      ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayerMappableInputConfig_GetPlayerMappableKeys) == 0x000008, "Wrong alignment on PlayerMappableInputConfig_GetPlayerMappableKeys");
static_assert(sizeof(PlayerMappableInputConfig_GetPlayerMappableKeys) == 0x000010, "Wrong size on PlayerMappableInputConfig_GetPlayerMappableKeys");
static_assert(offsetof(PlayerMappableInputConfig_GetPlayerMappableKeys, ReturnValue) == 0x000000, "Member 'PlayerMappableInputConfig_GetPlayerMappableKeys::ReturnValue' has a wrong offset!");

// Function EnhancedInput.PlayerMappableInputConfig.IsDeprecated
// 0x0001 (0x0001 - 0x0000)
struct PlayerMappableInputConfig_IsDeprecated final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayerMappableInputConfig_IsDeprecated) == 0x000001, "Wrong alignment on PlayerMappableInputConfig_IsDeprecated");
static_assert(sizeof(PlayerMappableInputConfig_IsDeprecated) == 0x000001, "Wrong size on PlayerMappableInputConfig_IsDeprecated");
static_assert(offsetof(PlayerMappableInputConfig_IsDeprecated, ReturnValue) == 0x000000, "Member 'PlayerMappableInputConfig_IsDeprecated::ReturnValue' has a wrong offset!");

}

