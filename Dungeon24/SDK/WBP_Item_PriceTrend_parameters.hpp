#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Item_PriceTrend

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function WBP_Item_PriceTrend.WBP_Item_PriceTrend_C.ExecuteUbergraph_WBP_Item_PriceTrend
// 0x0008 (0x0008 - 0x0000)
struct WBP_Item_PriceTrend_C_ExecuteUbergraph_WBP_Item_PriceTrend final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Item_PriceTrend_C_ExecuteUbergraph_WBP_Item_PriceTrend) == 0x000004, "Wrong alignment on WBP_Item_PriceTrend_C_ExecuteUbergraph_WBP_Item_PriceTrend");
static_assert(sizeof(WBP_Item_PriceTrend_C_ExecuteUbergraph_WBP_Item_PriceTrend) == 0x000008, "Wrong size on WBP_Item_PriceTrend_C_ExecuteUbergraph_WBP_Item_PriceTrend");
static_assert(offsetof(WBP_Item_PriceTrend_C_ExecuteUbergraph_WBP_Item_PriceTrend, EntryPoint) == 0x000000, "Member 'WBP_Item_PriceTrend_C_ExecuteUbergraph_WBP_Item_PriceTrend::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_Item_PriceTrend_C_ExecuteUbergraph_WBP_Item_PriceTrend, K2Node_Event_IsDesignTime) == 0x000004, "Member 'WBP_Item_PriceTrend_C_ExecuteUbergraph_WBP_Item_PriceTrend::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function WBP_Item_PriceTrend.WBP_Item_PriceTrend_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_Item_PriceTrend_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Item_PriceTrend_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_Item_PriceTrend_C_PreConstruct");
static_assert(sizeof(WBP_Item_PriceTrend_C_PreConstruct) == 0x000001, "Wrong size on WBP_Item_PriceTrend_C_PreConstruct");
static_assert(offsetof(WBP_Item_PriceTrend_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_Item_PriceTrend_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_Item_PriceTrend.WBP_Item_PriceTrend_C.SeriesPlotMaterialFill
// 0x01B0 (0x01B0 - 0x0000)
struct WBP_Item_PriceTrend_C_SeriesPlotMaterialFill final
{
public:
	class UImage*                                 Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        WidthDivisions;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        HeightDivisions;                                   // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Resolution;                                        // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector2D>                      Points;                                            // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 CallFunc_CreateRenderTarget2D_ReturnValue;         // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvas*                                CallFunc_BeginDrawCanvasToRenderTarget_Canvas;     // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_BeginDrawCanvasToRenderTarget_Size;       // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDrawToRenderTargetContext             CallFunc_BeginDrawCanvasToRenderTarget_Context;    // 0x0088(0x0008)(NoDestructor)
	struct FVector2D                              CallFunc_Divide_Vector2DVector2D_ReturnValue;      // 0x0090(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_2;               // 0x00C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_3;               // 0x00D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F4[0x4];                                       // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Multiply_Vector2DVector2D_ReturnValue;    // 0x00F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DVector2D_ReturnValue_1;  // 0x0108(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue_1;                      // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_2;           // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_3;           // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_4;           // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_171[0x7];                                      // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_2;      // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_199[0x3];                                      // 0x0199(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_MakeColor_ReturnValue;                    // 0x019C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeColor_R_ImplicitCast;                 // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Item_PriceTrend_C_SeriesPlotMaterialFill) == 0x000008, "Wrong alignment on WBP_Item_PriceTrend_C_SeriesPlotMaterialFill");
static_assert(sizeof(WBP_Item_PriceTrend_C_SeriesPlotMaterialFill) == 0x0001B0, "Wrong size on WBP_Item_PriceTrend_C_SeriesPlotMaterialFill");
static_assert(offsetof(WBP_Item_PriceTrend_C_SeriesPlotMaterialFill, Target) == 0x000000, "Member 'WBP_Item_PriceTrend_C_SeriesPlotMaterialFill::Target' has a wrong offset!");
static_assert(offsetof(WBP_Item_PriceTrend_C_SeriesPlotMaterialFill, WidthDivisions) == 0x000008, "Member 'WBP_Item_PriceTrend_C_SeriesPlotMaterialFill::WidthDivisions' has a wrong offset!");
static_assert(offsetof(WBP_Item_PriceTrend_C_SeriesPlotMaterialFill, HeightDivisions) == 0x000010, "Member 'WBP_Item_PriceTrend_C_SeriesPlotMaterialFill::HeightDivisions' has a wrong offset!");
static_assert(offsetof(WBP_Item_PriceTrend_C_SeriesPlotMaterialFill, Resolution) == 0x000018, "Member 'WBP_Item_PriceTrend_C_SeriesPlotMaterialFill::Resolution' has a wrong offset!");
static_assert(offsetof(WBP_Item_PriceTrend_C_SeriesPlotMaterialFill, Points) == 0x000020, "Member 'WBP_Item_PriceTrend_C_SeriesPlotMaterialFill::Points' has a wrong offset!");
static_assert(offsetof(WBP_Item_PriceTrend_C_SeriesPlotMaterialFill, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'WBP_Item_PriceTrend_C_SeriesPlotMaterialFill::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Item_PriceTrend_C_SeriesPlotMaterialFill, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000038, "Member 'WBP_Item_PriceTrend_C_SeriesPlotMaterialFill::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Item_PriceTrend_C_SeriesPlotMaterialFill, CallFunc_Subtract_IntInt_ReturnValue) == 0x000040, "Member 'WBP_Item_PriceTrend_C_SeriesPlotMaterialFill::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Item_PriceTrend_C_SeriesPlotMaterialFill, CallFunc_MakeVector2D_ReturnValue) == 0x000048, "Member 'WBP_Item_PriceTrend_C_SeriesPlotMaterialFill::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Item_PriceTrend_C_SeriesPlotMaterialFill, CallFunc_CreateRenderTarget2D_ReturnValue) == 0x000058, "Member 'WBP_Item_PriceTrend_C_SeriesPlotMaterialFill::CallFunc_CreateRenderTarget2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Item_PriceTrend_C_SeriesPlotMaterialFill, CallFunc_MakeVector2D_ReturnValue_1) == 0x000060, "Member 'WBP_Item_PriceTrend_C_SeriesPlotMaterialFill::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Item_PriceTrend_C_SeriesPlotMaterialFill, CallFunc_BeginDrawCanvasToRenderTarget_Canvas) == 0x000070, "Member 'WBP_Item_PriceTrend_C_SeriesPlotMaterialFill::CallFunc_BeginDrawCanvasToRenderTarget_Canvas' has a wrong offset!");
static_assert(offsetof(WBP_Item_PriceTrend_C_SeriesPlotMaterialFill, CallFunc_BeginDrawCanvasToRenderTarget_Size) == 0x000078, "Member 'WBP_Item_PriceTrend_C_SeriesPlotMaterialFill::CallFunc_BeginDrawCanvasToRenderTarget_Size' has a wrong offset!");
static_assert(offsetof(WBP_Item_PriceTrend_C_SeriesPlotMaterialFill, CallFunc_BeginDrawCanvasToRenderTarget_Context) == 0x000088, "Member 'WBP_Item_PriceTrend_C_SeriesPlotMaterialFill::CallFunc_BeginDrawCanvasToRenderTarget_Context' has a wrong offset!");
static_assert(offsetof(WBP_Item_PriceTrend_C_SeriesPlotMaterialFill, CallFunc_Divide_Vector2DVector2D_ReturnValue) == 0x000090, "Member 'WBP_Item_PriceTrend_C_SeriesPlotMaterialFill::CallFunc_Divide_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Item_PriceTrend_C_SeriesPlotMaterialFill, CallFunc_GetDynamicMaterial_ReturnValue) == 0x0000A0, "Member 'WBP_Item_PriceTrend_C_SeriesPlotMaterialFill::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Item_PriceTrend_C_SeriesPlotMaterialFill, Temp_int_Variable) == 0x0000A8, "Member 'WBP_Item_PriceTrend_C_SeriesPlotMaterialFill::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Item_PriceTrend_C_SeriesPlotMaterialFill, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x0000B0, "Member 'WBP_Item_PriceTrend_C_SeriesPlotMaterialFill::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Item_PriceTrend_C_SeriesPlotMaterialFill, CallFunc_Add_IntInt_ReturnValue) == 0x0000B8, "Member 'WBP_Item_PriceTrend_C_SeriesPlotMaterialFill::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Item_PriceTrend_C_SeriesPlotMaterialFill, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0000C0, "Member 'WBP_Item_PriceTrend_C_SeriesPlotMaterialFill::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Item_PriceTrend_C_SeriesPlotMaterialFill, CallFunc_MakeVector2D_ReturnValue_2) == 0x0000C8, "Member 'WBP_Item_PriceTrend_C_SeriesPlotMaterialFill::CallFunc_MakeVector2D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Item_PriceTrend_C_SeriesPlotMaterialFill, CallFunc_MakeVector2D_ReturnValue_3) == 0x0000D8, "Member 'WBP_Item_PriceTrend_C_SeriesPlotMaterialFill::CallFunc_MakeVector2D_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_Item_PriceTrend_C_SeriesPlotMaterialFill, Temp_int_Variable_1) == 0x0000E8, "Member 'WBP_Item_PriceTrend_C_SeriesPlotMaterialFill::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Item_PriceTrend_C_SeriesPlotMaterialFill, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000EC, "Member 'WBP_Item_PriceTrend_C_SeriesPlotMaterialFill::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Item_PriceTrend_C_SeriesPlotMaterialFill, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000F0, "Member 'WBP_Item_PriceTrend_C_SeriesPlotMaterialFill::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Item_PriceTrend_C_SeriesPlotMaterialFill, CallFunc_Multiply_Vector2DVector2D_ReturnValue) == 0x0000F8, "Member 'WBP_Item_PriceTrend_C_SeriesPlotMaterialFill::CallFunc_Multiply_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Item_PriceTrend_C_SeriesPlotMaterialFill, CallFunc_Multiply_Vector2DVector2D_ReturnValue_1) == 0x000108, "Member 'WBP_Item_PriceTrend_C_SeriesPlotMaterialFill::CallFunc_Multiply_Vector2DVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Item_PriceTrend_C_SeriesPlotMaterialFill, CallFunc_BreakVector2D_X) == 0x000118, "Member 'WBP_Item_PriceTrend_C_SeriesPlotMaterialFill::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WBP_Item_PriceTrend_C_SeriesPlotMaterialFill, CallFunc_BreakVector2D_Y) == 0x000120, "Member 'WBP_Item_PriceTrend_C_SeriesPlotMaterialFill::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WBP_Item_PriceTrend_C_SeriesPlotMaterialFill, CallFunc_BreakVector2D_X_1) == 0x000128, "Member 'WBP_Item_PriceTrend_C_SeriesPlotMaterialFill::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(WBP_Item_PriceTrend_C_SeriesPlotMaterialFill, CallFunc_BreakVector2D_Y_1) == 0x000130, "Member 'WBP_Item_PriceTrend_C_SeriesPlotMaterialFill::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(WBP_Item_PriceTrend_C_SeriesPlotMaterialFill, CallFunc_Round_ReturnValue) == 0x000138, "Member 'WBP_Item_PriceTrend_C_SeriesPlotMaterialFill::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Item_PriceTrend_C_SeriesPlotMaterialFill, CallFunc_Round_ReturnValue_1) == 0x00013C, "Member 'WBP_Item_PriceTrend_C_SeriesPlotMaterialFill::CallFunc_Round_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Item_PriceTrend_C_SeriesPlotMaterialFill, CallFunc_Conv_IntToDouble_ReturnValue_2) == 0x000140, "Member 'WBP_Item_PriceTrend_C_SeriesPlotMaterialFill::CallFunc_Conv_IntToDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Item_PriceTrend_C_SeriesPlotMaterialFill, CallFunc_Conv_IntToDouble_ReturnValue_3) == 0x000148, "Member 'WBP_Item_PriceTrend_C_SeriesPlotMaterialFill::CallFunc_Conv_IntToDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_Item_PriceTrend_C_SeriesPlotMaterialFill, CallFunc_Conv_IntToDouble_ReturnValue_4) == 0x000150, "Member 'WBP_Item_PriceTrend_C_SeriesPlotMaterialFill::CallFunc_Conv_IntToDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_Item_PriceTrend_C_SeriesPlotMaterialFill, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000158, "Member 'WBP_Item_PriceTrend_C_SeriesPlotMaterialFill::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Item_PriceTrend_C_SeriesPlotMaterialFill, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000160, "Member 'WBP_Item_PriceTrend_C_SeriesPlotMaterialFill::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Item_PriceTrend_C_SeriesPlotMaterialFill, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000168, "Member 'WBP_Item_PriceTrend_C_SeriesPlotMaterialFill::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Item_PriceTrend_C_SeriesPlotMaterialFill, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000170, "Member 'WBP_Item_PriceTrend_C_SeriesPlotMaterialFill::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Item_PriceTrend_C_SeriesPlotMaterialFill, CallFunc_Subtract_DoubleDouble_ReturnValue_2) == 0x000178, "Member 'WBP_Item_PriceTrend_C_SeriesPlotMaterialFill::CallFunc_Subtract_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Item_PriceTrend_C_SeriesPlotMaterialFill, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000180, "Member 'WBP_Item_PriceTrend_C_SeriesPlotMaterialFill::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Item_PriceTrend_C_SeriesPlotMaterialFill, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000188, "Member 'WBP_Item_PriceTrend_C_SeriesPlotMaterialFill::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Item_PriceTrend_C_SeriesPlotMaterialFill, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000190, "Member 'WBP_Item_PriceTrend_C_SeriesPlotMaterialFill::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Item_PriceTrend_C_SeriesPlotMaterialFill, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000198, "Member 'WBP_Item_PriceTrend_C_SeriesPlotMaterialFill::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Item_PriceTrend_C_SeriesPlotMaterialFill, CallFunc_MakeColor_ReturnValue) == 0x00019C, "Member 'WBP_Item_PriceTrend_C_SeriesPlotMaterialFill::CallFunc_MakeColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Item_PriceTrend_C_SeriesPlotMaterialFill, CallFunc_MakeColor_R_ImplicitCast) == 0x0001AC, "Member 'WBP_Item_PriceTrend_C_SeriesPlotMaterialFill::CallFunc_MakeColor_R_ImplicitCast' has a wrong offset!");

// Function WBP_Item_PriceTrend.WBP_Item_PriceTrend_C.GetModuleName
// 0x0010 (0x0010 - 0x0000)
struct WBP_Item_PriceTrend_C_GetModuleName final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Item_PriceTrend_C_GetModuleName) == 0x000008, "Wrong alignment on WBP_Item_PriceTrend_C_GetModuleName");
static_assert(sizeof(WBP_Item_PriceTrend_C_GetModuleName) == 0x000010, "Wrong size on WBP_Item_PriceTrend_C_GetModuleName");
static_assert(offsetof(WBP_Item_PriceTrend_C_GetModuleName, ReturnValue) == 0x000000, "Member 'WBP_Item_PriceTrend_C_GetModuleName::ReturnValue' has a wrong offset!");

}

