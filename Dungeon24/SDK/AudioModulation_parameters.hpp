#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AudioModulation

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "AudioModulation_structs.hpp"


namespace SDK::Params
{

// Function AudioModulation.AudioModulationStyle.GetControlBusColor
// 0x0004 (0x0004 - 0x0000)
struct AudioModulationStyle_GetControlBusColor final
{
public:
	struct FColor                                 ReturnValue;                                       // 0x0000(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AudioModulationStyle_GetControlBusColor) == 0x000004, "Wrong alignment on AudioModulationStyle_GetControlBusColor");
static_assert(sizeof(AudioModulationStyle_GetControlBusColor) == 0x000004, "Wrong size on AudioModulationStyle_GetControlBusColor");
static_assert(offsetof(AudioModulationStyle_GetControlBusColor, ReturnValue) == 0x000000, "Member 'AudioModulationStyle_GetControlBusColor::ReturnValue' has a wrong offset!");

// Function AudioModulation.AudioModulationStyle.GetControlBusMixColor
// 0x0004 (0x0004 - 0x0000)
struct AudioModulationStyle_GetControlBusMixColor final
{
public:
	struct FColor                                 ReturnValue;                                       // 0x0000(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AudioModulationStyle_GetControlBusMixColor) == 0x000004, "Wrong alignment on AudioModulationStyle_GetControlBusMixColor");
static_assert(sizeof(AudioModulationStyle_GetControlBusMixColor) == 0x000004, "Wrong size on AudioModulationStyle_GetControlBusMixColor");
static_assert(offsetof(AudioModulationStyle_GetControlBusMixColor, ReturnValue) == 0x000000, "Member 'AudioModulationStyle_GetControlBusMixColor::ReturnValue' has a wrong offset!");

// Function AudioModulation.AudioModulationStyle.GetModulationGeneratorColor
// 0x0004 (0x0004 - 0x0000)
struct AudioModulationStyle_GetModulationGeneratorColor final
{
public:
	struct FColor                                 ReturnValue;                                       // 0x0000(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AudioModulationStyle_GetModulationGeneratorColor) == 0x000004, "Wrong alignment on AudioModulationStyle_GetModulationGeneratorColor");
static_assert(sizeof(AudioModulationStyle_GetModulationGeneratorColor) == 0x000004, "Wrong size on AudioModulationStyle_GetModulationGeneratorColor");
static_assert(offsetof(AudioModulationStyle_GetModulationGeneratorColor, ReturnValue) == 0x000000, "Member 'AudioModulationStyle_GetModulationGeneratorColor::ReturnValue' has a wrong offset!");

// Function AudioModulation.AudioModulationStyle.GetParameterColor
// 0x0004 (0x0004 - 0x0000)
struct AudioModulationStyle_GetParameterColor final
{
public:
	struct FColor                                 ReturnValue;                                       // 0x0000(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AudioModulationStyle_GetParameterColor) == 0x000004, "Wrong alignment on AudioModulationStyle_GetParameterColor");
static_assert(sizeof(AudioModulationStyle_GetParameterColor) == 0x000004, "Wrong size on AudioModulationStyle_GetParameterColor");
static_assert(offsetof(AudioModulationStyle_GetParameterColor, ReturnValue) == 0x000000, "Member 'AudioModulationStyle_GetParameterColor::ReturnValue' has a wrong offset!");

// Function AudioModulation.AudioModulationStyle.GetPatchColor
// 0x0004 (0x0004 - 0x0000)
struct AudioModulationStyle_GetPatchColor final
{
public:
	struct FColor                                 ReturnValue;                                       // 0x0000(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AudioModulationStyle_GetPatchColor) == 0x000004, "Wrong alignment on AudioModulationStyle_GetPatchColor");
static_assert(sizeof(AudioModulationStyle_GetPatchColor) == 0x000004, "Wrong size on AudioModulationStyle_GetPatchColor");
static_assert(offsetof(AudioModulationStyle_GetPatchColor, ReturnValue) == 0x000000, "Member 'AudioModulationStyle_GetPatchColor::ReturnValue' has a wrong offset!");

// Function AudioModulation.AudioModulationStatics.ActivateBus
// 0x0010 (0x0010 - 0x0000)
struct AudioModulationStatics_ActivateBus final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundControlBus*                       Bus;                                               // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AudioModulationStatics_ActivateBus) == 0x000008, "Wrong alignment on AudioModulationStatics_ActivateBus");
static_assert(sizeof(AudioModulationStatics_ActivateBus) == 0x000010, "Wrong size on AudioModulationStatics_ActivateBus");
static_assert(offsetof(AudioModulationStatics_ActivateBus, WorldContextObject) == 0x000000, "Member 'AudioModulationStatics_ActivateBus::WorldContextObject' has a wrong offset!");
static_assert(offsetof(AudioModulationStatics_ActivateBus, Bus) == 0x000008, "Member 'AudioModulationStatics_ActivateBus::Bus' has a wrong offset!");

// Function AudioModulation.AudioModulationStatics.ActivateBusMix
// 0x0010 (0x0010 - 0x0000)
struct AudioModulationStatics_ActivateBusMix final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundControlBusMix*                    Mix;                                               // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AudioModulationStatics_ActivateBusMix) == 0x000008, "Wrong alignment on AudioModulationStatics_ActivateBusMix");
static_assert(sizeof(AudioModulationStatics_ActivateBusMix) == 0x000010, "Wrong size on AudioModulationStatics_ActivateBusMix");
static_assert(offsetof(AudioModulationStatics_ActivateBusMix, WorldContextObject) == 0x000000, "Member 'AudioModulationStatics_ActivateBusMix::WorldContextObject' has a wrong offset!");
static_assert(offsetof(AudioModulationStatics_ActivateBusMix, Mix) == 0x000008, "Member 'AudioModulationStatics_ActivateBusMix::Mix' has a wrong offset!");

// Function AudioModulation.AudioModulationStatics.ActivateGenerator
// 0x0010 (0x0010 - 0x0000)
struct AudioModulationStatics_ActivateGenerator final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundModulationGenerator*              Generator;                                         // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AudioModulationStatics_ActivateGenerator) == 0x000008, "Wrong alignment on AudioModulationStatics_ActivateGenerator");
static_assert(sizeof(AudioModulationStatics_ActivateGenerator) == 0x000010, "Wrong size on AudioModulationStatics_ActivateGenerator");
static_assert(offsetof(AudioModulationStatics_ActivateGenerator, WorldContextObject) == 0x000000, "Member 'AudioModulationStatics_ActivateGenerator::WorldContextObject' has a wrong offset!");
static_assert(offsetof(AudioModulationStatics_ActivateGenerator, Generator) == 0x000008, "Member 'AudioModulationStatics_ActivateGenerator::Generator' has a wrong offset!");

// Function AudioModulation.AudioModulationStatics.ClearAllGlobalBusMixValues
// 0x0010 (0x0010 - 0x0000)
struct AudioModulationStatics_ClearAllGlobalBusMixValues final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FadeTime;                                          // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(AudioModulationStatics_ClearAllGlobalBusMixValues) == 0x000008, "Wrong alignment on AudioModulationStatics_ClearAllGlobalBusMixValues");
static_assert(sizeof(AudioModulationStatics_ClearAllGlobalBusMixValues) == 0x000010, "Wrong size on AudioModulationStatics_ClearAllGlobalBusMixValues");
static_assert(offsetof(AudioModulationStatics_ClearAllGlobalBusMixValues, WorldContextObject) == 0x000000, "Member 'AudioModulationStatics_ClearAllGlobalBusMixValues::WorldContextObject' has a wrong offset!");
static_assert(offsetof(AudioModulationStatics_ClearAllGlobalBusMixValues, FadeTime) == 0x000008, "Member 'AudioModulationStatics_ClearAllGlobalBusMixValues::FadeTime' has a wrong offset!");

// Function AudioModulation.AudioModulationStatics.ClearGlobalBusMixValue
// 0x0018 (0x0018 - 0x0000)
struct AudioModulationStatics_ClearGlobalBusMixValue final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundControlBus*                       Bus;                                               // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FadeTime;                                          // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(AudioModulationStatics_ClearGlobalBusMixValue) == 0x000008, "Wrong alignment on AudioModulationStatics_ClearGlobalBusMixValue");
static_assert(sizeof(AudioModulationStatics_ClearGlobalBusMixValue) == 0x000018, "Wrong size on AudioModulationStatics_ClearGlobalBusMixValue");
static_assert(offsetof(AudioModulationStatics_ClearGlobalBusMixValue, WorldContextObject) == 0x000000, "Member 'AudioModulationStatics_ClearGlobalBusMixValue::WorldContextObject' has a wrong offset!");
static_assert(offsetof(AudioModulationStatics_ClearGlobalBusMixValue, Bus) == 0x000008, "Member 'AudioModulationStatics_ClearGlobalBusMixValue::Bus' has a wrong offset!");
static_assert(offsetof(AudioModulationStatics_ClearGlobalBusMixValue, FadeTime) == 0x000010, "Member 'AudioModulationStatics_ClearGlobalBusMixValue::FadeTime' has a wrong offset!");

// Function AudioModulation.AudioModulationStatics.CreateBus
// 0x0028 (0x0028 - 0x0000)
struct AudioModulationStatics_CreateBus final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   Param_Name;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundModulationParameter*              Parameter;                                         // 0x0010(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Activate;                                          // 0x0018(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundControlBus*                       ReturnValue;                                       // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AudioModulationStatics_CreateBus) == 0x000008, "Wrong alignment on AudioModulationStatics_CreateBus");
static_assert(sizeof(AudioModulationStatics_CreateBus) == 0x000028, "Wrong size on AudioModulationStatics_CreateBus");
static_assert(offsetof(AudioModulationStatics_CreateBus, WorldContextObject) == 0x000000, "Member 'AudioModulationStatics_CreateBus::WorldContextObject' has a wrong offset!");
static_assert(offsetof(AudioModulationStatics_CreateBus, Param_Name) == 0x000008, "Member 'AudioModulationStatics_CreateBus::Param_Name' has a wrong offset!");
static_assert(offsetof(AudioModulationStatics_CreateBus, Parameter) == 0x000010, "Member 'AudioModulationStatics_CreateBus::Parameter' has a wrong offset!");
static_assert(offsetof(AudioModulationStatics_CreateBus, Activate) == 0x000018, "Member 'AudioModulationStatics_CreateBus::Activate' has a wrong offset!");
static_assert(offsetof(AudioModulationStatics_CreateBus, ReturnValue) == 0x000020, "Member 'AudioModulationStatics_CreateBus::ReturnValue' has a wrong offset!");

// Function AudioModulation.AudioModulationStatics.CreateBusMix
// 0x0030 (0x0030 - 0x0000)
struct AudioModulationStatics_CreateBusMix final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   Param_Name;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FSoundControlBusMixStage>       Stages;                                            // 0x0010(0x0010)(Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          Activate;                                          // 0x0020(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundControlBusMix*                    ReturnValue;                                       // 0x0028(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AudioModulationStatics_CreateBusMix) == 0x000008, "Wrong alignment on AudioModulationStatics_CreateBusMix");
static_assert(sizeof(AudioModulationStatics_CreateBusMix) == 0x000030, "Wrong size on AudioModulationStatics_CreateBusMix");
static_assert(offsetof(AudioModulationStatics_CreateBusMix, WorldContextObject) == 0x000000, "Member 'AudioModulationStatics_CreateBusMix::WorldContextObject' has a wrong offset!");
static_assert(offsetof(AudioModulationStatics_CreateBusMix, Param_Name) == 0x000008, "Member 'AudioModulationStatics_CreateBusMix::Param_Name' has a wrong offset!");
static_assert(offsetof(AudioModulationStatics_CreateBusMix, Stages) == 0x000010, "Member 'AudioModulationStatics_CreateBusMix::Stages' has a wrong offset!");
static_assert(offsetof(AudioModulationStatics_CreateBusMix, Activate) == 0x000020, "Member 'AudioModulationStatics_CreateBusMix::Activate' has a wrong offset!");
static_assert(offsetof(AudioModulationStatics_CreateBusMix, ReturnValue) == 0x000028, "Member 'AudioModulationStatics_CreateBusMix::ReturnValue' has a wrong offset!");

// Function AudioModulation.AudioModulationStatics.CreateBusMixStage
// 0x0048 (0x0048 - 0x0000)
struct AudioModulationStatics_CreateBusMixStage final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundControlBus*                       Bus;                                               // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Value;                                             // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AttackTime;                                        // 0x0014(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReleaseTime;                                       // 0x0018(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSoundControlBusMixStage               ReturnValue;                                       // 0x0020(0x0028)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(AudioModulationStatics_CreateBusMixStage) == 0x000008, "Wrong alignment on AudioModulationStatics_CreateBusMixStage");
static_assert(sizeof(AudioModulationStatics_CreateBusMixStage) == 0x000048, "Wrong size on AudioModulationStatics_CreateBusMixStage");
static_assert(offsetof(AudioModulationStatics_CreateBusMixStage, WorldContextObject) == 0x000000, "Member 'AudioModulationStatics_CreateBusMixStage::WorldContextObject' has a wrong offset!");
static_assert(offsetof(AudioModulationStatics_CreateBusMixStage, Bus) == 0x000008, "Member 'AudioModulationStatics_CreateBusMixStage::Bus' has a wrong offset!");
static_assert(offsetof(AudioModulationStatics_CreateBusMixStage, Value) == 0x000010, "Member 'AudioModulationStatics_CreateBusMixStage::Value' has a wrong offset!");
static_assert(offsetof(AudioModulationStatics_CreateBusMixStage, AttackTime) == 0x000014, "Member 'AudioModulationStatics_CreateBusMixStage::AttackTime' has a wrong offset!");
static_assert(offsetof(AudioModulationStatics_CreateBusMixStage, ReleaseTime) == 0x000018, "Member 'AudioModulationStatics_CreateBusMixStage::ReleaseTime' has a wrong offset!");
static_assert(offsetof(AudioModulationStatics_CreateBusMixStage, ReturnValue) == 0x000020, "Member 'AudioModulationStatics_CreateBusMixStage::ReturnValue' has a wrong offset!");

// Function AudioModulation.AudioModulationStatics.DeactivateBus
// 0x0010 (0x0010 - 0x0000)
struct AudioModulationStatics_DeactivateBus final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundControlBus*                       Bus;                                               // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AudioModulationStatics_DeactivateBus) == 0x000008, "Wrong alignment on AudioModulationStatics_DeactivateBus");
static_assert(sizeof(AudioModulationStatics_DeactivateBus) == 0x000010, "Wrong size on AudioModulationStatics_DeactivateBus");
static_assert(offsetof(AudioModulationStatics_DeactivateBus, WorldContextObject) == 0x000000, "Member 'AudioModulationStatics_DeactivateBus::WorldContextObject' has a wrong offset!");
static_assert(offsetof(AudioModulationStatics_DeactivateBus, Bus) == 0x000008, "Member 'AudioModulationStatics_DeactivateBus::Bus' has a wrong offset!");

// Function AudioModulation.AudioModulationStatics.DeactivateBusMix
// 0x0010 (0x0010 - 0x0000)
struct AudioModulationStatics_DeactivateBusMix final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundControlBusMix*                    Mix;                                               // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AudioModulationStatics_DeactivateBusMix) == 0x000008, "Wrong alignment on AudioModulationStatics_DeactivateBusMix");
static_assert(sizeof(AudioModulationStatics_DeactivateBusMix) == 0x000010, "Wrong size on AudioModulationStatics_DeactivateBusMix");
static_assert(offsetof(AudioModulationStatics_DeactivateBusMix, WorldContextObject) == 0x000000, "Member 'AudioModulationStatics_DeactivateBusMix::WorldContextObject' has a wrong offset!");
static_assert(offsetof(AudioModulationStatics_DeactivateBusMix, Mix) == 0x000008, "Member 'AudioModulationStatics_DeactivateBusMix::Mix' has a wrong offset!");

// Function AudioModulation.AudioModulationStatics.DeactivateGenerator
// 0x0010 (0x0010 - 0x0000)
struct AudioModulationStatics_DeactivateGenerator final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundModulationGenerator*              Generator;                                         // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AudioModulationStatics_DeactivateGenerator) == 0x000008, "Wrong alignment on AudioModulationStatics_DeactivateGenerator");
static_assert(sizeof(AudioModulationStatics_DeactivateGenerator) == 0x000010, "Wrong size on AudioModulationStatics_DeactivateGenerator");
static_assert(offsetof(AudioModulationStatics_DeactivateGenerator, WorldContextObject) == 0x000000, "Member 'AudioModulationStatics_DeactivateGenerator::WorldContextObject' has a wrong offset!");
static_assert(offsetof(AudioModulationStatics_DeactivateGenerator, Generator) == 0x000008, "Member 'AudioModulationStatics_DeactivateGenerator::Generator' has a wrong offset!");

// Function AudioModulation.AudioModulationStatics.LoadMixFromProfile
// 0x0028 (0x0028 - 0x0000)
struct AudioModulationStatics_LoadMixFromProfile final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundControlBusMix*                    Mix;                                               // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bActivate;                                         // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ProfileIndex;                                      // 0x0014(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FSoundControlBusMixStage>       ReturnValue;                                       // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(AudioModulationStatics_LoadMixFromProfile) == 0x000008, "Wrong alignment on AudioModulationStatics_LoadMixFromProfile");
static_assert(sizeof(AudioModulationStatics_LoadMixFromProfile) == 0x000028, "Wrong size on AudioModulationStatics_LoadMixFromProfile");
static_assert(offsetof(AudioModulationStatics_LoadMixFromProfile, WorldContextObject) == 0x000000, "Member 'AudioModulationStatics_LoadMixFromProfile::WorldContextObject' has a wrong offset!");
static_assert(offsetof(AudioModulationStatics_LoadMixFromProfile, Mix) == 0x000008, "Member 'AudioModulationStatics_LoadMixFromProfile::Mix' has a wrong offset!");
static_assert(offsetof(AudioModulationStatics_LoadMixFromProfile, bActivate) == 0x000010, "Member 'AudioModulationStatics_LoadMixFromProfile::bActivate' has a wrong offset!");
static_assert(offsetof(AudioModulationStatics_LoadMixFromProfile, ProfileIndex) == 0x000014, "Member 'AudioModulationStatics_LoadMixFromProfile::ProfileIndex' has a wrong offset!");
static_assert(offsetof(AudioModulationStatics_LoadMixFromProfile, ReturnValue) == 0x000018, "Member 'AudioModulationStatics_LoadMixFromProfile::ReturnValue' has a wrong offset!");

// Function AudioModulation.AudioModulationStatics.SaveMixToProfile
// 0x0018 (0x0018 - 0x0000)
struct AudioModulationStatics_SaveMixToProfile final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundControlBusMix*                    Mix;                                               // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ProfileIndex;                                      // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(AudioModulationStatics_SaveMixToProfile) == 0x000008, "Wrong alignment on AudioModulationStatics_SaveMixToProfile");
static_assert(sizeof(AudioModulationStatics_SaveMixToProfile) == 0x000018, "Wrong size on AudioModulationStatics_SaveMixToProfile");
static_assert(offsetof(AudioModulationStatics_SaveMixToProfile, WorldContextObject) == 0x000000, "Member 'AudioModulationStatics_SaveMixToProfile::WorldContextObject' has a wrong offset!");
static_assert(offsetof(AudioModulationStatics_SaveMixToProfile, Mix) == 0x000008, "Member 'AudioModulationStatics_SaveMixToProfile::Mix' has a wrong offset!");
static_assert(offsetof(AudioModulationStatics_SaveMixToProfile, ProfileIndex) == 0x000010, "Member 'AudioModulationStatics_SaveMixToProfile::ProfileIndex' has a wrong offset!");

// Function AudioModulation.AudioModulationStatics.SetGlobalBusMixValue
// 0x0018 (0x0018 - 0x0000)
struct AudioModulationStatics_SetGlobalBusMixValue final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundControlBus*                       Bus;                                               // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Value;                                             // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FadeTime;                                          // 0x0014(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AudioModulationStatics_SetGlobalBusMixValue) == 0x000008, "Wrong alignment on AudioModulationStatics_SetGlobalBusMixValue");
static_assert(sizeof(AudioModulationStatics_SetGlobalBusMixValue) == 0x000018, "Wrong size on AudioModulationStatics_SetGlobalBusMixValue");
static_assert(offsetof(AudioModulationStatics_SetGlobalBusMixValue, WorldContextObject) == 0x000000, "Member 'AudioModulationStatics_SetGlobalBusMixValue::WorldContextObject' has a wrong offset!");
static_assert(offsetof(AudioModulationStatics_SetGlobalBusMixValue, Bus) == 0x000008, "Member 'AudioModulationStatics_SetGlobalBusMixValue::Bus' has a wrong offset!");
static_assert(offsetof(AudioModulationStatics_SetGlobalBusMixValue, Value) == 0x000010, "Member 'AudioModulationStatics_SetGlobalBusMixValue::Value' has a wrong offset!");
static_assert(offsetof(AudioModulationStatics_SetGlobalBusMixValue, FadeTime) == 0x000014, "Member 'AudioModulationStatics_SetGlobalBusMixValue::FadeTime' has a wrong offset!");

// Function AudioModulation.AudioModulationStatics.UpdateMix
// 0x0028 (0x0028 - 0x0000)
struct AudioModulationStatics_UpdateMix final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundControlBusMix*                    Mix;                                               // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FSoundControlBusMixStage>       Stages;                                            // 0x0010(0x0010)(Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                         FadeTime;                                          // 0x0020(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(AudioModulationStatics_UpdateMix) == 0x000008, "Wrong alignment on AudioModulationStatics_UpdateMix");
static_assert(sizeof(AudioModulationStatics_UpdateMix) == 0x000028, "Wrong size on AudioModulationStatics_UpdateMix");
static_assert(offsetof(AudioModulationStatics_UpdateMix, WorldContextObject) == 0x000000, "Member 'AudioModulationStatics_UpdateMix::WorldContextObject' has a wrong offset!");
static_assert(offsetof(AudioModulationStatics_UpdateMix, Mix) == 0x000008, "Member 'AudioModulationStatics_UpdateMix::Mix' has a wrong offset!");
static_assert(offsetof(AudioModulationStatics_UpdateMix, Stages) == 0x000010, "Member 'AudioModulationStatics_UpdateMix::Stages' has a wrong offset!");
static_assert(offsetof(AudioModulationStatics_UpdateMix, FadeTime) == 0x000020, "Member 'AudioModulationStatics_UpdateMix::FadeTime' has a wrong offset!");

// Function AudioModulation.AudioModulationStatics.UpdateMixByFilter
// 0x0038 (0x0038 - 0x0000)
struct AudioModulationStatics_UpdateMixByFilter final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundControlBusMix*                    Mix;                                               // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 AddressFilter;                                     // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class USoundModulationParameter>  ParamClassFilter;                                  // 0x0020(0x0008)(Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundModulationParameter*              ParamFilter;                                       // 0x0028(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Value;                                             // 0x0030(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FadeTime;                                          // 0x0034(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AudioModulationStatics_UpdateMixByFilter) == 0x000008, "Wrong alignment on AudioModulationStatics_UpdateMixByFilter");
static_assert(sizeof(AudioModulationStatics_UpdateMixByFilter) == 0x000038, "Wrong size on AudioModulationStatics_UpdateMixByFilter");
static_assert(offsetof(AudioModulationStatics_UpdateMixByFilter, WorldContextObject) == 0x000000, "Member 'AudioModulationStatics_UpdateMixByFilter::WorldContextObject' has a wrong offset!");
static_assert(offsetof(AudioModulationStatics_UpdateMixByFilter, Mix) == 0x000008, "Member 'AudioModulationStatics_UpdateMixByFilter::Mix' has a wrong offset!");
static_assert(offsetof(AudioModulationStatics_UpdateMixByFilter, AddressFilter) == 0x000010, "Member 'AudioModulationStatics_UpdateMixByFilter::AddressFilter' has a wrong offset!");
static_assert(offsetof(AudioModulationStatics_UpdateMixByFilter, ParamClassFilter) == 0x000020, "Member 'AudioModulationStatics_UpdateMixByFilter::ParamClassFilter' has a wrong offset!");
static_assert(offsetof(AudioModulationStatics_UpdateMixByFilter, ParamFilter) == 0x000028, "Member 'AudioModulationStatics_UpdateMixByFilter::ParamFilter' has a wrong offset!");
static_assert(offsetof(AudioModulationStatics_UpdateMixByFilter, Value) == 0x000030, "Member 'AudioModulationStatics_UpdateMixByFilter::Value' has a wrong offset!");
static_assert(offsetof(AudioModulationStatics_UpdateMixByFilter, FadeTime) == 0x000034, "Member 'AudioModulationStatics_UpdateMixByFilter::FadeTime' has a wrong offset!");

// Function AudioModulation.AudioModulationStatics.UpdateMixFromObject
// 0x0018 (0x0018 - 0x0000)
struct AudioModulationStatics_UpdateMixFromObject final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundControlBusMix*                    Mix;                                               // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FadeTime;                                          // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(AudioModulationStatics_UpdateMixFromObject) == 0x000008, "Wrong alignment on AudioModulationStatics_UpdateMixFromObject");
static_assert(sizeof(AudioModulationStatics_UpdateMixFromObject) == 0x000018, "Wrong size on AudioModulationStatics_UpdateMixFromObject");
static_assert(offsetof(AudioModulationStatics_UpdateMixFromObject, WorldContextObject) == 0x000000, "Member 'AudioModulationStatics_UpdateMixFromObject::WorldContextObject' has a wrong offset!");
static_assert(offsetof(AudioModulationStatics_UpdateMixFromObject, Mix) == 0x000008, "Member 'AudioModulationStatics_UpdateMixFromObject::Mix' has a wrong offset!");
static_assert(offsetof(AudioModulationStatics_UpdateMixFromObject, FadeTime) == 0x000010, "Member 'AudioModulationStatics_UpdateMixFromObject::FadeTime' has a wrong offset!");

// Function AudioModulation.AudioModulationStatics.UpdateModulator
// 0x0010 (0x0010 - 0x0000)
struct AudioModulationStatics_UpdateModulator final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundModulatorBase*                    Modulator;                                         // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AudioModulationStatics_UpdateModulator) == 0x000008, "Wrong alignment on AudioModulationStatics_UpdateModulator");
static_assert(sizeof(AudioModulationStatics_UpdateModulator) == 0x000010, "Wrong size on AudioModulationStatics_UpdateModulator");
static_assert(offsetof(AudioModulationStatics_UpdateModulator, WorldContextObject) == 0x000000, "Member 'AudioModulationStatics_UpdateModulator::WorldContextObject' has a wrong offset!");
static_assert(offsetof(AudioModulationStatics_UpdateModulator, Modulator) == 0x000008, "Member 'AudioModulationStatics_UpdateModulator::Modulator' has a wrong offset!");

}

