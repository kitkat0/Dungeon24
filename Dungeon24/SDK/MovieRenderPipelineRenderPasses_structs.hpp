#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MovieRenderPipelineRenderPasses

#include "Basic.hpp"


namespace SDK
{

// Enum MovieRenderPipelineRenderPasses.EEXRCompressionFormat
// NumValues: 0x0006
enum class EEXRCompressionFormat : uint8
{
	None                                     = 0,
	PIZ                                      = 1,
	ZIP                                      = 2,
	DWAA                                     = 3,
	DWAB                                     = 4,
	EEXRCompressionFormat_MAX                = 5,
};

// ScriptStruct MovieRenderPipelineRenderPasses.MoviePipelinePostProcessPass
// 0x0038 (0x0038 - 0x0000)
struct FMoviePipelinePostProcessPass final
{
public:
	bool                                          bEnabled;                                          // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UMaterialInterface>      Material;                                          // 0x0008(0x0030)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMoviePipelinePostProcessPass) == 0x000008, "Wrong alignment on FMoviePipelinePostProcessPass");
static_assert(sizeof(FMoviePipelinePostProcessPass) == 0x000038, "Wrong size on FMoviePipelinePostProcessPass");
static_assert(offsetof(FMoviePipelinePostProcessPass, bEnabled) == 0x000000, "Member 'FMoviePipelinePostProcessPass::bEnabled' has a wrong offset!");
static_assert(offsetof(FMoviePipelinePostProcessPass, Material) == 0x000008, "Member 'FMoviePipelinePostProcessPass::Material' has a wrong offset!");

}

