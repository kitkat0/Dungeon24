#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_KeyMap_Common

#include "Basic.hpp"


namespace SDK::Params
{

// Function WBP_KeyMap_Common.WBP_KeyMap_Common_C.ExecuteUbergraph_WBP_KeyMap_Common
// 0x0008 (0x0008 - 0x0000)
struct WBP_KeyMap_Common_C_ExecuteUbergraph_WBP_KeyMap_Common final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_KeyMap_Common_C_ExecuteUbergraph_WBP_KeyMap_Common) == 0x000004, "Wrong alignment on WBP_KeyMap_Common_C_ExecuteUbergraph_WBP_KeyMap_Common");
static_assert(sizeof(WBP_KeyMap_Common_C_ExecuteUbergraph_WBP_KeyMap_Common) == 0x000008, "Wrong size on WBP_KeyMap_Common_C_ExecuteUbergraph_WBP_KeyMap_Common");
static_assert(offsetof(WBP_KeyMap_Common_C_ExecuteUbergraph_WBP_KeyMap_Common, EntryPoint) == 0x000000, "Member 'WBP_KeyMap_Common_C_ExecuteUbergraph_WBP_KeyMap_Common::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_KeyMap_Common_C_ExecuteUbergraph_WBP_KeyMap_Common, K2Node_Event_IsDesignTime) == 0x000004, "Member 'WBP_KeyMap_Common_C_ExecuteUbergraph_WBP_KeyMap_Common::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function WBP_KeyMap_Common.WBP_KeyMap_Common_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_KeyMap_Common_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_KeyMap_Common_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_KeyMap_Common_C_PreConstruct");
static_assert(sizeof(WBP_KeyMap_Common_C_PreConstruct) == 0x000001, "Wrong size on WBP_KeyMap_Common_C_PreConstruct");
static_assert(offsetof(WBP_KeyMap_Common_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_KeyMap_Common_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_KeyMap_Common.WBP_KeyMap_Common_C.SetKey
// 0x0018 (0x0018 - 0x0000)
struct WBP_KeyMap_Common_C_SetKey final
{
public:
	class FText                                   Param_Key;                                         // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WBP_KeyMap_Common_C_SetKey) == 0x000008, "Wrong alignment on WBP_KeyMap_Common_C_SetKey");
static_assert(sizeof(WBP_KeyMap_Common_C_SetKey) == 0x000018, "Wrong size on WBP_KeyMap_Common_C_SetKey");
static_assert(offsetof(WBP_KeyMap_Common_C_SetKey, Param_Key) == 0x000000, "Member 'WBP_KeyMap_Common_C_SetKey::Param_Key' has a wrong offset!");

// Function WBP_KeyMap_Common.WBP_KeyMap_Common_C.SwitchKeyState
// 0x0001 (0x0001 - 0x0000)
struct WBP_KeyMap_Common_C_SwitchKeyState final
{
public:
	bool                                          bHighLight;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_KeyMap_Common_C_SwitchKeyState) == 0x000001, "Wrong alignment on WBP_KeyMap_Common_C_SwitchKeyState");
static_assert(sizeof(WBP_KeyMap_Common_C_SwitchKeyState) == 0x000001, "Wrong size on WBP_KeyMap_Common_C_SwitchKeyState");
static_assert(offsetof(WBP_KeyMap_Common_C_SwitchKeyState, bHighLight) == 0x000000, "Member 'WBP_KeyMap_Common_C_SwitchKeyState::bHighLight' has a wrong offset!");

}

