#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTT_MoveTo

#include "Basic.hpp"

#include "BTT_MoveTo_classes.hpp"
#include "BTT_MoveTo_parameters.hpp"


namespace SDK
{

// Function BTT_MoveTo.BTT_MoveTo_C.ExecuteUbergraph_BTT_MoveTo
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBTT_MoveTo_C::ExecuteUbergraph_BTT_MoveTo(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTT_MoveTo_C", "ExecuteUbergraph_BTT_MoveTo");

	Params::BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BTT_MoveTo.BTT_MoveTo_C.GetNavigableLocationNearby
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          CurrentLocation                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Location                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBTT_MoveTo_C::GetNavigableLocationNearby(const struct FVector& CurrentLocation, bool* Result, struct FVector* Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTT_MoveTo_C", "GetNavigableLocationNearby");

	Params::BTT_MoveTo_C_GetNavigableLocationNearby Parms{};

	Parms.CurrentLocation = std::move(CurrentLocation);

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;

	if (Location != nullptr)
		*Location = std::move(Parms.Location);
}


// Function BTT_MoveTo.BTT_MoveTo_C.GetTargetLocation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBTT_MoveTo_C::GetTargetLocation(const struct FVector& Location, class AActor* Actor, struct FVector* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTT_MoveTo_C", "GetTargetLocation");

	Params::BTT_MoveTo_C_GetTargetLocation Parms{};

	Parms.Location = std::move(Location);
	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = std::move(Parms.Result);
}


// Function BTT_MoveTo.BTT_MoveTo_C.IsPointReachable
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Point                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBTT_MoveTo_C::IsPointReachable(const struct FVector& Point, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTT_MoveTo_C", "IsPointReachable");

	Params::BTT_MoveTo_C_IsPointReachable Parms{};

	Parms.Point = std::move(Point);

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BTT_MoveTo.BTT_MoveTo_C.MoveTo
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class APawn*                            Pawn                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBTT_MoveTo_C::MoveTo(class APawn* Pawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTT_MoveTo_C", "MoveTo");

	Params::BTT_MoveTo_C_MoveTo Parms{};

	Parms.Pawn = Pawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BTT_MoveTo.BTT_MoveTo_C.MoveToLocationNearby
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class APawn*                            Pawn                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    UsePathfinding                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           ObserveTarget                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBTT_MoveTo_C::MoveToLocationNearby(class APawn* Pawn, const struct FVector& Location, bool UsePathfinding, class AActor* ObserveTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTT_MoveTo_C", "MoveToLocationNearby");

	Params::BTT_MoveTo_C_MoveToLocationNearby Parms{};

	Parms.Pawn = Pawn;
	Parms.Location = std::move(Location);
	Parms.UsePathfinding = UsePathfinding;
	Parms.ObserveTarget = ObserveTarget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BTT_MoveTo.BTT_MoveTo_C.MoveToTarget
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class APawn*                            Pawn                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBTT_MoveTo_C::MoveToTarget(class APawn* Pawn, const struct FVector& Location, class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTT_MoveTo_C", "MoveToTarget");

	Params::BTT_MoveTo_C_MoveToTarget Parms{};

	Parms.Pawn = Pawn;
	Parms.Location = std::move(Location);
	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BTT_MoveTo.BTT_MoveTo_C.OnFail_10B4AC5B433818C972C40BB663D8FC16
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EPathFollowingResult                    MovementResult                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBTT_MoveTo_C::OnFail_10B4AC5B433818C972C40BB663D8FC16(EPathFollowingResult MovementResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTT_MoveTo_C", "OnFail_10B4AC5B433818C972C40BB663D8FC16");

	Params::BTT_MoveTo_C_OnFail_10B4AC5B433818C972C40BB663D8FC16 Parms{};

	Parms.MovementResult = MovementResult;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BTT_MoveTo.BTT_MoveTo_C.OnFail_9E5D74E8496A9FC6C0E927BBCEBB275B
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EPathFollowingResult                    MovementResult                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBTT_MoveTo_C::OnFail_9E5D74E8496A9FC6C0E927BBCEBB275B(EPathFollowingResult MovementResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTT_MoveTo_C", "OnFail_9E5D74E8496A9FC6C0E927BBCEBB275B");

	Params::BTT_MoveTo_C_OnFail_9E5D74E8496A9FC6C0E927BBCEBB275B Parms{};

	Parms.MovementResult = MovementResult;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BTT_MoveTo.BTT_MoveTo_C.OnSuccess_10B4AC5B433818C972C40BB663D8FC16
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EPathFollowingResult                    MovementResult                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBTT_MoveTo_C::OnSuccess_10B4AC5B433818C972C40BB663D8FC16(EPathFollowingResult MovementResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTT_MoveTo_C", "OnSuccess_10B4AC5B433818C972C40BB663D8FC16");

	Params::BTT_MoveTo_C_OnSuccess_10B4AC5B433818C972C40BB663D8FC16 Parms{};

	Parms.MovementResult = MovementResult;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BTT_MoveTo.BTT_MoveTo_C.OnSuccess_9E5D74E8496A9FC6C0E927BBCEBB275B
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EPathFollowingResult                    MovementResult                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBTT_MoveTo_C::OnSuccess_9E5D74E8496A9FC6C0E927BBCEBB275B(EPathFollowingResult MovementResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTT_MoveTo_C", "OnSuccess_9E5D74E8496A9FC6C0E927BBCEBB275B");

	Params::BTT_MoveTo_C_OnSuccess_9E5D74E8496A9FC6C0E927BBCEBB275B Parms{};

	Parms.MovementResult = MovementResult;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BTT_MoveTo.BTT_MoveTo_C.OnTargetChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// uint8                                   KeyID                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBTT_MoveTo_C::OnTargetChanged(uint8 KeyID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTT_MoveTo_C", "OnTargetChanged");

	Params::BTT_MoveTo_C_OnTargetChanged Parms{};

	Parms.KeyID = KeyID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BTT_MoveTo.BTT_MoveTo_C.PickTargetPathWaypoint
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Waypoint                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBTT_MoveTo_C::PickTargetPathWaypoint(bool* Result, struct FVector* Waypoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTT_MoveTo_C", "PickTargetPathWaypoint");

	Params::BTT_MoveTo_C_PickTargetPathWaypoint Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;

	if (Waypoint != nullptr)
		*Waypoint = std::move(Parms.Waypoint);
}


// Function BTT_MoveTo.BTT_MoveTo_C.ReceiveAbortAI
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AAIController*                    OwnerController                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class APawn*                            ControlledPawn                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBTT_MoveTo_C::ReceiveAbortAI(class AAIController* OwnerController, class APawn* ControlledPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTT_MoveTo_C", "ReceiveAbortAI");

	Params::BTT_MoveTo_C_ReceiveAbortAI Parms{};

	Parms.OwnerController = OwnerController;
	Parms.ControlledPawn = ControlledPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BTT_MoveTo.BTT_MoveTo_C.ReceiveExecuteAI
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AAIController*                    OwnerController                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class APawn*                            ControlledPawn                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBTT_MoveTo_C::ReceiveExecuteAI(class AAIController* OwnerController, class APawn* ControlledPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTT_MoveTo_C", "ReceiveExecuteAI");

	Params::BTT_MoveTo_C_ReceiveExecuteAI Parms{};

	Parms.OwnerController = OwnerController;
	Parms.ControlledPawn = ControlledPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BTT_MoveTo.BTT_MoveTo_C.ReceiveTickAI
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AAIController*                    OwnerController                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class APawn*                            ControlledPawn                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBTT_MoveTo_C::ReceiveTickAI(class AAIController* OwnerController, class APawn* ControlledPawn, float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTT_MoveTo_C", "ReceiveTickAI");

	Params::BTT_MoveTo_C_ReceiveTickAI Parms{};

	Parms.OwnerController = OwnerController;
	Parms.ControlledPawn = ControlledPawn;
	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BTT_MoveTo.BTT_MoveTo_C.TargetPathNeedCheckReachWaypoint
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBTT_MoveTo_C::TargetPathNeedCheckReachWaypoint(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTT_MoveTo_C", "TargetPathNeedCheckReachWaypoint");

	Params::BTT_MoveTo_C_TargetPathNeedCheckReachWaypoint Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}

}

