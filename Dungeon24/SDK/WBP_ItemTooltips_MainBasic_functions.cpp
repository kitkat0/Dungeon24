#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_ItemTooltips_MainBasic

#include "Basic.hpp"

#include "WBP_ItemTooltips_MainBasic_classes.hpp"
#include "WBP_ItemTooltips_MainBasic_parameters.hpp"


namespace SDK
{

// Function WBP_ItemTooltips_MainBasic.WBP_ItemTooltips_MainBasic_C.SetDamage
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Element                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  DPH                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Min_val                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Max_val                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bNeedAppendRange                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_ItemTooltips_MainBasic_C::SetDamage(int32 Element, double DPH, double Min_val, double Max_val, bool bNeedAppendRange)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemTooltips_MainBasic_C", "SetDamage");

	Params::WBP_ItemTooltips_MainBasic_C_SetDamage Parms{};

	Parms.Element = Element;
	Parms.DPH = DPH;
	Parms.Min_val = Min_val;
	Parms.Max_val = Max_val;
	Parms.bNeedAppendRange = bNeedAppendRange;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ItemTooltips_MainBasic.WBP_ItemTooltips_MainBasic_C.SetTextValue
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Text                                                   (BlueprintVisible, BlueprintReadOnly, Parm)

void UWBP_ItemTooltips_MainBasic_C::SetTextValue(const class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemTooltips_MainBasic_C", "SetTextValue");

	Params::WBP_ItemTooltips_MainBasic_C_SetTextValue Parms{};

	Parms.Text = std::move(Text);

	UObject::ProcessEvent(Func, &Parms);
}

}

