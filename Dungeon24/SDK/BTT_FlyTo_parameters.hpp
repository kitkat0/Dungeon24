#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTT_FlyTo

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "AIModule_structs.hpp"


namespace SDK::Params
{

// Function BTT_FlyTo.BTT_FlyTo_C.ExecuteUbergraph_BTT_FlyTo
// 0x05B8 (0x05B8 - 0x0000)
struct BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(uint8 KeyID)>                  K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_Event_OwnerController_2;                    // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn_2;                     // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EPathFollowingResult                          Temp_byte_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_ProjectPointToGround_ProjectedPoint;      // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ProjectPointToGround_Result;              // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Vector_Distance_ReturnValue;              // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_ProjectPointToNavigation_ProjectedPoint;  // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ProjectPointToNavigation_Result;          // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetActorSimpleCollisionHalfHeight_ReturnValue; // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPathFollowingResult                          K2Node_CustomEvent_MovementResult;                 // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EPathFollowingResult MovementResult)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x00C4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x00D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPathFollowingResult                          K2Node_CustomEvent_MovementResult_1;               // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Vector_Distance2D_ReturnValue;            // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_101[0x3];                                      // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0108(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetActorSimpleCollisionHalfHeight_ReturnValue_1; // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EPathFollowingResult MovementResult)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0124(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_134[0x4];                                      // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x0138(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Success;                        // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_Event_OwnerController_1;                    // 0x0158(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn_1;                     // 0x0160(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16C[0x4];                                      // 0x016C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x0170(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPathFollowingComponent*                CallFunc_GetPathFollowingComponent_ReturnValue;    // 0x0188(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Vector_IsNearlyZero_ReturnValue;          // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0191(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_192[0x6];                                      // 0x0192(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_Event_OwnerController;                      // 0x0198(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn;                       // 0x01A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue_1;      // 0x01A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AA[0x6];                                      // 0x01AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Vector_Distance_ReturnValue_1;            // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetBlackboardValueAsVector_ReturnValue;   // 0x01B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_ProjectPointToGround_ProjectedPoint_1;    // 0x01D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ProjectPointToGround_Result_1;            // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E9[0x7];                                      // 0x01E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x01F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_ProjectPointToNavigation_ProjectedPoint_1; // 0x0208(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ProjectPointToNavigation_Result_1;        // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_221[0x7];                                      // 0x0221(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0228(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNavigationPath*                        CallFunc_FindPathToLocationSynchronously_ReturnValue; // 0x0240(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInLineOfSight_Result;                   // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0249(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24A[0x6];                                      // 0x024A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Vector_Distance_ReturnValue_2;            // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x025C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0261(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_262[0x6];                                      // 0x0262(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorTargetLocation_Result;            // 0x0268(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Vector_Distance_ReturnValue_3;            // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPathFollowingResult                          Temp_byte_Variable_1;                              // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0289(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28A[0x6];                                      // 0x028A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_299[0x7];                                      // 0x0299(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPathFollowingResult                          K2Node_CustomEvent_MovementResult_2;               // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A9[0x7];                                      // 0x02A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FMin_ReturnValue;                         // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_2;                // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_3;                 // 0x02C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x02E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x02F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Location;                       // 0x0310(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_SelfActor;                      // 0x0328(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_OtherActor;                     // 0x0330(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_NormalImpulse;                  // 0x0338(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_CustomEvent_Hit;                            // 0x0350(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	TDelegate<void(class AActor* SelfActor, class AActor* OtherActor, const struct FVector& NormalImpulse, struct FHitResult& Hit)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x0438(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0448(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0449(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsTaskExecuting_ReturnValue;              // 0x044A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44B[0x5];                                      // 0x044B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_3;                // 0x0450(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAIAsyncTaskBlueprintProxy*             CallFunc_CreateMoveToProxyObjectEx_ReturnValue;    // 0x0458(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAIAsyncTaskBlueprintProxy*             CallFunc_CreateMoveToProxyObjectEx_ReturnValue_1;  // 0x0460(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0468(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0469(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_2;       // 0x046A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsTaskAborting_ReturnValue;               // 0x046B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46C[0x4];                                      // 0x046C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_CustomEvent_OwnerController;                // 0x0470(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_CustomEvent_ControlledPawn;                 // 0x0478(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EPathFollowingResult MovementResult)> K2Node_CreateDelegate_OutputDelegate_4;            // 0x0480(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AActor* SelfActor, class AActor* OtherActor, const struct FVector& NormalImpulse, struct FHitResult& Hit)> K2Node_CreateDelegate_OutputDelegate_5;            // 0x0490(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         K2Node_CustomEvent_KeyID;                          // 0x04A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A1[0x7];                                      // 0x04A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_GetBlackboardValueAsObject_ReturnValue;   // 0x04A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x04B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B1[0x7];                                      // 0x04B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWaypointPath*                          K2Node_DynamicCast_AsWaypoint_Path;                // 0x04B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x04C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C1[0x7];                                      // 0x04C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_DynamicCast_AsActor;                        // 0x04C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x04D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_PickTargetPathWaypoint_Result;            // 0x04D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D2[0x6];                                      // 0x04D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_PickTargetPathWaypoint_Waypoint;          // 0x04D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorTargetLocation_Result_1;          // 0x04F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_PickTargetPathWaypoint_Result_1;          // 0x0508(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_509[0x7];                                      // 0x0509(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_PickTargetPathWaypoint_Waypoint_1;        // 0x0510(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x0528(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPathFollowingResult                          K2Node_CustomEvent_MovementResult_3;               // 0x0529(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52A[0x2];                                      // 0x052A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EPathFollowingResult MovementResult)> K2Node_CreateDelegate_OutputDelegate_6;            // 0x052C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53C[0x4];                                      // 0x053C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0540(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_3;       // 0x0548(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TargetPathNeedCheckReachWaypoint_Result;  // 0x0549(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_PickTargetPathWaypoint_Result_2;          // 0x054A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54B[0x5];                                      // 0x054B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_PickTargetPathWaypoint_Waypoint_2;        // 0x0550(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0568(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetBlackboardValueAsFloat_ReturnValue;    // 0x0570(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckReachedDestination_ReturnValue;      // 0x0574(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_4;       // 0x0575(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue_2;      // 0x0576(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_577[0x1];                                      // 0x0577(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MakeVector_Z_ImplicitCast;                // 0x0578(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector_Z_ImplicitCast_1;              // 0x0580(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x0588(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast_1;        // 0x0590(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CreateMoveToProxyObjectEx_AcceptanceRadius_ImplicitCast; // 0x0598(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CreateMoveToProxyObjectEx_AcceptanceRadius_ImplicitCast_1; // 0x059C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CheckReachedDestination_InAcceptanceRadius_ImplicitCast; // 0x05A0(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A4[0x4];                                      // 0x05A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet_AcceptanceRadiusDestination_ImplicitCast; // 0x05A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x05B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo) == 0x000008, "Wrong alignment on BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo");
static_assert(sizeof(BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo) == 0x0005B8, "Wrong size on BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo");
static_assert(offsetof(BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo, EntryPoint) == 0x000000, "Member 'BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo::EntryPoint' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo, K2Node_Event_OwnerController_2) == 0x000018, "Member 'BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo::K2Node_Event_OwnerController_2' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo, K2Node_Event_ControlledPawn_2) == 0x000020, "Member 'BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo::K2Node_Event_ControlledPawn_2' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo, Temp_byte_Variable) == 0x000028, "Member 'BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000030, "Member 'BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo, CallFunc_ProjectPointToGround_ProjectedPoint) == 0x000048, "Member 'BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo::CallFunc_ProjectPointToGround_ProjectedPoint' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo, CallFunc_ProjectPointToGround_Result) == 0x000060, "Member 'BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo::CallFunc_ProjectPointToGround_Result' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo, CallFunc_Array_Length_ReturnValue) == 0x000064, "Member 'BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo, CallFunc_Vector_Distance_ReturnValue) == 0x000068, "Member 'BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000070, "Member 'BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo, CallFunc_ProjectPointToNavigation_ProjectedPoint) == 0x000078, "Member 'BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo::CallFunc_ProjectPointToNavigation_ProjectedPoint' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo, CallFunc_ProjectPointToNavigation_Result) == 0x000090, "Member 'BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo::CallFunc_ProjectPointToNavigation_Result' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo, CallFunc_GetActorSimpleCollisionHalfHeight_ReturnValue) == 0x000094, "Member 'BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo::CallFunc_GetActorSimpleCollisionHalfHeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo, CallFunc_MakeVector_ReturnValue) == 0x000098, "Member 'BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo, K2Node_CustomEvent_MovementResult) == 0x0000B0, "Member 'BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo::K2Node_CustomEvent_MovementResult' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo, CallFunc_Add_IntInt_ReturnValue) == 0x0000B4, "Member 'BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo, CallFunc_Array_Length_ReturnValue_1) == 0x0000B8, "Member 'BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000BC, "Member 'BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x0000C0, "Member 'BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo, K2Node_CreateDelegate_OutputDelegate_1) == 0x0000C4, "Member 'BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x0000D8, "Member 'BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo, K2Node_CustomEvent_MovementResult_1) == 0x0000F0, "Member 'BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo::K2Node_CustomEvent_MovementResult_1' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo, CallFunc_Vector_Distance2D_ReturnValue) == 0x0000F8, "Member 'BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo::CallFunc_Vector_Distance2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000100, "Member 'BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo, CallFunc_SelectInt_ReturnValue) == 0x000104, "Member 'BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo, CallFunc_MakeVector_ReturnValue_1) == 0x000108, "Member 'BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo, CallFunc_GetActorSimpleCollisionHalfHeight_ReturnValue_1) == 0x000120, "Member 'BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo::CallFunc_GetActorSimpleCollisionHalfHeight_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo, K2Node_CreateDelegate_OutputDelegate_2) == 0x000124, "Member 'BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo, CallFunc_MakeVector_ReturnValue_2) == 0x000138, "Member 'BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo, K2Node_CustomEvent_Success) == 0x000150, "Member 'BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo::K2Node_CustomEvent_Success' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo, K2Node_Event_OwnerController_1) == 0x000158, "Member 'BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo::K2Node_Event_OwnerController_1' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo, K2Node_Event_ControlledPawn_1) == 0x000160, "Member 'BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo::K2Node_Event_ControlledPawn_1' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo, K2Node_Event_DeltaSeconds) == 0x000168, "Member 'BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo, CallFunc_GetVelocity_ReturnValue) == 0x000170, "Member 'BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo, CallFunc_GetPathFollowingComponent_ReturnValue) == 0x000188, "Member 'BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo::CallFunc_GetPathFollowingComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo, CallFunc_Vector_IsNearlyZero_ReturnValue) == 0x000190, "Member 'BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo::CallFunc_Vector_IsNearlyZero_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo, CallFunc_IsValid_ReturnValue) == 0x000191, "Member 'BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo, K2Node_Event_OwnerController) == 0x000198, "Member 'BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo::K2Node_Event_OwnerController' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo, K2Node_Event_ControlledPawn) == 0x0001A0, "Member 'BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo::K2Node_Event_ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x0001A8, "Member 'BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo, CallFunc_EqualEqual_ClassClass_ReturnValue_1) == 0x0001A9, "Member 'BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo::CallFunc_EqualEqual_ClassClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo, CallFunc_Vector_Distance_ReturnValue_1) == 0x0001B0, "Member 'BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo::CallFunc_Vector_Distance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo, CallFunc_GetBlackboardValueAsVector_ReturnValue) == 0x0001B8, "Member 'BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo::CallFunc_GetBlackboardValueAsVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo, CallFunc_ProjectPointToGround_ProjectedPoint_1) == 0x0001D0, "Member 'BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo::CallFunc_ProjectPointToGround_ProjectedPoint_1' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo, CallFunc_ProjectPointToGround_Result_1) == 0x0001E8, "Member 'BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo::CallFunc_ProjectPointToGround_Result_1' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo, CallFunc_Add_VectorVector_ReturnValue) == 0x0001F0, "Member 'BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo, CallFunc_ProjectPointToNavigation_ProjectedPoint_1) == 0x000208, "Member 'BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo::CallFunc_ProjectPointToNavigation_ProjectedPoint_1' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo, CallFunc_ProjectPointToNavigation_Result_1) == 0x000220, "Member 'BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo::CallFunc_ProjectPointToNavigation_Result_1' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000228, "Member 'BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo, CallFunc_FindPathToLocationSynchronously_ReturnValue) == 0x000240, "Member 'BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo::CallFunc_FindPathToLocationSynchronously_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo, CallFunc_IsInLineOfSight_Result) == 0x000248, "Member 'BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo::CallFunc_IsInLineOfSight_Result' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo, CallFunc_IsValid_ReturnValue_1) == 0x000249, "Member 'BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo, CallFunc_Vector_Distance_ReturnValue_2) == 0x000250, "Member 'BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo::CallFunc_Vector_Distance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo, CallFunc_Array_Length_ReturnValue_2) == 0x000258, "Member 'BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo, Temp_int_Variable) == 0x00025C, "Member 'BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo, CallFunc_Greater_IntInt_ReturnValue) == 0x000260, "Member 'BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo, CallFunc_IsValid_ReturnValue_2) == 0x000261, "Member 'BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo, CallFunc_GetActorTargetLocation_Result) == 0x000268, "Member 'BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo::CallFunc_GetActorTargetLocation_Result' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo, CallFunc_Vector_Distance_ReturnValue_3) == 0x000280, "Member 'BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo::CallFunc_Vector_Distance_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo, Temp_byte_Variable_1) == 0x000288, "Member 'BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000289, "Member 'BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000290, "Member 'BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000298, "Member 'BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo, CallFunc_SelectFloat_ReturnValue) == 0x0002A0, "Member 'BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo, K2Node_CustomEvent_MovementResult_2) == 0x0002A8, "Member 'BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo::K2Node_CustomEvent_MovementResult_2' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo, CallFunc_FMin_ReturnValue) == 0x0002B0, "Member 'BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo, CallFunc_SelectFloat_ReturnValue_1) == 0x0002B8, "Member 'BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo, CallFunc_SelectFloat_ReturnValue_2) == 0x0002C0, "Member 'BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo, CallFunc_MakeVector_ReturnValue_3) == 0x0002C8, "Member 'BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo::CallFunc_MakeVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0002E0, "Member 'BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x0002F8, "Member 'BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo, K2Node_CustomEvent_Location) == 0x000310, "Member 'BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo::K2Node_CustomEvent_Location' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo, K2Node_CustomEvent_SelfActor) == 0x000328, "Member 'BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo::K2Node_CustomEvent_SelfActor' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo, K2Node_CustomEvent_OtherActor) == 0x000330, "Member 'BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo::K2Node_CustomEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo, K2Node_CustomEvent_NormalImpulse) == 0x000338, "Member 'BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo::K2Node_CustomEvent_NormalImpulse' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo, K2Node_CustomEvent_Hit) == 0x000350, "Member 'BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo::K2Node_CustomEvent_Hit' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo, K2Node_CreateDelegate_OutputDelegate_3) == 0x000438, "Member 'BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000448, "Member 'BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo, CallFunc_IsValid_ReturnValue_3) == 0x000449, "Member 'BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo, CallFunc_IsTaskExecuting_ReturnValue) == 0x00044A, "Member 'BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo::CallFunc_IsTaskExecuting_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo, CallFunc_SelectFloat_ReturnValue_3) == 0x000450, "Member 'BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo::CallFunc_SelectFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo, CallFunc_CreateMoveToProxyObjectEx_ReturnValue) == 0x000458, "Member 'BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo::CallFunc_CreateMoveToProxyObjectEx_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo, CallFunc_CreateMoveToProxyObjectEx_ReturnValue_1) == 0x000460, "Member 'BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo::CallFunc_CreateMoveToProxyObjectEx_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo, CallFunc_IsValid_ReturnValue_4) == 0x000468, "Member 'BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo, CallFunc_IsValid_ReturnValue_5) == 0x000469, "Member 'BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo, CallFunc_Greater_DoubleDouble_ReturnValue_2) == 0x00046A, "Member 'BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo::CallFunc_Greater_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo, CallFunc_IsTaskAborting_ReturnValue) == 0x00046B, "Member 'BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo::CallFunc_IsTaskAborting_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo, K2Node_CustomEvent_OwnerController) == 0x000470, "Member 'BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo::K2Node_CustomEvent_OwnerController' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo, K2Node_CustomEvent_ControlledPawn) == 0x000478, "Member 'BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo::K2Node_CustomEvent_ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo, K2Node_CreateDelegate_OutputDelegate_4) == 0x000480, "Member 'BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo, K2Node_CreateDelegate_OutputDelegate_5) == 0x000490, "Member 'BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo, K2Node_CustomEvent_KeyID) == 0x0004A0, "Member 'BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo::K2Node_CustomEvent_KeyID' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo, CallFunc_GetBlackboardValueAsObject_ReturnValue) == 0x0004A8, "Member 'BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo::CallFunc_GetBlackboardValueAsObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo, CallFunc_IsValid_ReturnValue_6) == 0x0004B0, "Member 'BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo, K2Node_DynamicCast_AsWaypoint_Path) == 0x0004B8, "Member 'BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo::K2Node_DynamicCast_AsWaypoint_Path' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo, K2Node_DynamicCast_bSuccess) == 0x0004C0, "Member 'BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo, K2Node_DynamicCast_AsActor) == 0x0004C8, "Member 'BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo::K2Node_DynamicCast_AsActor' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo, K2Node_DynamicCast_bSuccess_1) == 0x0004D0, "Member 'BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo, CallFunc_PickTargetPathWaypoint_Result) == 0x0004D1, "Member 'BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo::CallFunc_PickTargetPathWaypoint_Result' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo, CallFunc_PickTargetPathWaypoint_Waypoint) == 0x0004D8, "Member 'BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo::CallFunc_PickTargetPathWaypoint_Waypoint' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo, CallFunc_GetActorTargetLocation_Result_1) == 0x0004F0, "Member 'BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo::CallFunc_GetActorTargetLocation_Result_1' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo, CallFunc_PickTargetPathWaypoint_Result_1) == 0x000508, "Member 'BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo::CallFunc_PickTargetPathWaypoint_Result_1' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo, CallFunc_PickTargetPathWaypoint_Waypoint_1) == 0x000510, "Member 'BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo::CallFunc_PickTargetPathWaypoint_Waypoint_1' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo, CallFunc_IsValid_ReturnValue_7) == 0x000528, "Member 'BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo, K2Node_CustomEvent_MovementResult_3) == 0x000529, "Member 'BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo::K2Node_CustomEvent_MovementResult_3' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo, K2Node_CreateDelegate_OutputDelegate_6) == 0x00052C, "Member 'BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000540, "Member 'BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo, CallFunc_Greater_DoubleDouble_ReturnValue_3) == 0x000548, "Member 'BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo::CallFunc_Greater_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo, CallFunc_TargetPathNeedCheckReachWaypoint_Result) == 0x000549, "Member 'BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo::CallFunc_TargetPathNeedCheckReachWaypoint_Result' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo, CallFunc_PickTargetPathWaypoint_Result_2) == 0x00054A, "Member 'BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo::CallFunc_PickTargetPathWaypoint_Result_2' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo, CallFunc_PickTargetPathWaypoint_Waypoint_2) == 0x000550, "Member 'BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo::CallFunc_PickTargetPathWaypoint_Waypoint_2' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000568, "Member 'BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo, CallFunc_GetBlackboardValueAsFloat_ReturnValue) == 0x000570, "Member 'BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo::CallFunc_GetBlackboardValueAsFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo, CallFunc_CheckReachedDestination_ReturnValue) == 0x000574, "Member 'BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo::CallFunc_CheckReachedDestination_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo, CallFunc_Greater_DoubleDouble_ReturnValue_4) == 0x000575, "Member 'BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo::CallFunc_Greater_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo, CallFunc_EqualEqual_ClassClass_ReturnValue_2) == 0x000576, "Member 'BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo::CallFunc_EqualEqual_ClassClass_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo, CallFunc_MakeVector_Z_ImplicitCast) == 0x000578, "Member 'BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo::CallFunc_MakeVector_Z_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo, CallFunc_MakeVector_Z_ImplicitCast_1) == 0x000580, "Member 'BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo::CallFunc_MakeVector_Z_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x000588, "Member 'BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo, CallFunc_Add_DoubleDouble_A_ImplicitCast_1) == 0x000590, "Member 'BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo::CallFunc_Add_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo, CallFunc_CreateMoveToProxyObjectEx_AcceptanceRadius_ImplicitCast) == 0x000598, "Member 'BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo::CallFunc_CreateMoveToProxyObjectEx_AcceptanceRadius_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo, CallFunc_CreateMoveToProxyObjectEx_AcceptanceRadius_ImplicitCast_1) == 0x00059C, "Member 'BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo::CallFunc_CreateMoveToProxyObjectEx_AcceptanceRadius_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo, CallFunc_CheckReachedDestination_InAcceptanceRadius_ImplicitCast) == 0x0005A0, "Member 'BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo::CallFunc_CheckReachedDestination_InAcceptanceRadius_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo, K2Node_VariableSet_AcceptanceRadiusDestination_ImplicitCast) == 0x0005A8, "Member 'BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo::K2Node_VariableSet_AcceptanceRadiusDestination_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x0005B0, "Member 'BTT_FlyTo_C_ExecuteUbergraph_BTT_FlyTo::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function BTT_FlyTo.BTT_FlyTo_C.Finish
// 0x0001 (0x0001 - 0x0000)
struct BTT_FlyTo_C_Finish final
{
public:
	bool                                          Success;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_FlyTo_C_Finish) == 0x000001, "Wrong alignment on BTT_FlyTo_C_Finish");
static_assert(sizeof(BTT_FlyTo_C_Finish) == 0x000001, "Wrong size on BTT_FlyTo_C_Finish");
static_assert(offsetof(BTT_FlyTo_C_Finish, Success) == 0x000000, "Member 'BTT_FlyTo_C_Finish::Success' has a wrong offset!");

// Function BTT_FlyTo.BTT_FlyTo_C.FlyTo
// 0x0010 (0x0010 - 0x0000)
struct BTT_FlyTo_C_FlyTo final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_FlyTo_C_FlyTo) == 0x000008, "Wrong alignment on BTT_FlyTo_C_FlyTo");
static_assert(sizeof(BTT_FlyTo_C_FlyTo) == 0x000010, "Wrong size on BTT_FlyTo_C_FlyTo");
static_assert(offsetof(BTT_FlyTo_C_FlyTo, OwnerController) == 0x000000, "Member 'BTT_FlyTo_C_FlyTo::OwnerController' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_FlyTo, ControlledPawn) == 0x000008, "Member 'BTT_FlyTo_C_FlyTo::ControlledPawn' has a wrong offset!");

// Function BTT_FlyTo.BTT_FlyTo_C.GetActorTargetLocation
// 0x0080 (0x0080 - 0x0000)
struct BTT_FlyTo_C_GetActorTargetLocation final
{
public:
	class APawn*                                  Param_Pawn;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Actor;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Result;                                            // 0x0010(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Tgf_Monster_C*                      K2Node_DynamicCast_AsBP_Tgf_Monster;               // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_FlyTo_C_GetActorTargetLocation) == 0x000008, "Wrong alignment on BTT_FlyTo_C_GetActorTargetLocation");
static_assert(sizeof(BTT_FlyTo_C_GetActorTargetLocation) == 0x000080, "Wrong size on BTT_FlyTo_C_GetActorTargetLocation");
static_assert(offsetof(BTT_FlyTo_C_GetActorTargetLocation, Param_Pawn) == 0x000000, "Member 'BTT_FlyTo_C_GetActorTargetLocation::Param_Pawn' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_GetActorTargetLocation, Actor) == 0x000008, "Member 'BTT_FlyTo_C_GetActorTargetLocation::Actor' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_GetActorTargetLocation, Result) == 0x000010, "Member 'BTT_FlyTo_C_GetActorTargetLocation::Result' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_GetActorTargetLocation, K2Node_DynamicCast_AsBP_Tgf_Monster) == 0x000028, "Member 'BTT_FlyTo_C_GetActorTargetLocation::K2Node_DynamicCast_AsBP_Tgf_Monster' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_GetActorTargetLocation, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BTT_FlyTo_C_GetActorTargetLocation::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_GetActorTargetLocation, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000038, "Member 'BTT_FlyTo_C_GetActorTargetLocation::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_GetActorTargetLocation, CallFunc_MakeVector_ReturnValue) == 0x000050, "Member 'BTT_FlyTo_C_GetActorTargetLocation::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_GetActorTargetLocation, CallFunc_Add_VectorVector_ReturnValue) == 0x000068, "Member 'BTT_FlyTo_C_GetActorTargetLocation::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");

// Function BTT_FlyTo.BTT_FlyTo_C.IsInLineOfSight
// 0x0138 (0x0138 - 0x0000)
struct BTT_FlyTo_C_IsInLineOfSight final
{
public:
	struct FVector                                Src;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Dest;                                              // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0038(0x0010)(ConstParm, ReferenceParm)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0048(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_FlyTo_C_IsInLineOfSight) == 0x000008, "Wrong alignment on BTT_FlyTo_C_IsInLineOfSight");
static_assert(sizeof(BTT_FlyTo_C_IsInLineOfSight) == 0x000138, "Wrong size on BTT_FlyTo_C_IsInLineOfSight");
static_assert(offsetof(BTT_FlyTo_C_IsInLineOfSight, Src) == 0x000000, "Member 'BTT_FlyTo_C_IsInLineOfSight::Src' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_IsInLineOfSight, Dest) == 0x000018, "Member 'BTT_FlyTo_C_IsInLineOfSight::Dest' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_IsInLineOfSight, Result) == 0x000030, "Member 'BTT_FlyTo_C_IsInLineOfSight::Result' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_IsInLineOfSight, Temp_object_Variable) == 0x000038, "Member 'BTT_FlyTo_C_IsInLineOfSight::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_IsInLineOfSight, CallFunc_LineTraceSingle_OutHit) == 0x000048, "Member 'BTT_FlyTo_C_IsInLineOfSight::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_IsInLineOfSight, CallFunc_LineTraceSingle_ReturnValue) == 0x000130, "Member 'BTT_FlyTo_C_IsInLineOfSight::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_IsInLineOfSight, CallFunc_Not_PreBool_ReturnValue) == 0x000131, "Member 'BTT_FlyTo_C_IsInLineOfSight::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BTT_FlyTo.BTT_FlyTo_C.OnActorHit
// 0x0110 (0x0110 - 0x0000)
struct BTT_FlyTo_C_OnActorHit final
{
public:
	class AActor*                                 SelfActor;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalImpulse;                                     // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0028(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BTT_FlyTo_C_OnActorHit) == 0x000008, "Wrong alignment on BTT_FlyTo_C_OnActorHit");
static_assert(sizeof(BTT_FlyTo_C_OnActorHit) == 0x000110, "Wrong size on BTT_FlyTo_C_OnActorHit");
static_assert(offsetof(BTT_FlyTo_C_OnActorHit, SelfActor) == 0x000000, "Member 'BTT_FlyTo_C_OnActorHit::SelfActor' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_OnActorHit, OtherActor) == 0x000008, "Member 'BTT_FlyTo_C_OnActorHit::OtherActor' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_OnActorHit, NormalImpulse) == 0x000010, "Member 'BTT_FlyTo_C_OnActorHit::NormalImpulse' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_OnActorHit, Hit) == 0x000028, "Member 'BTT_FlyTo_C_OnActorHit::Hit' has a wrong offset!");

// Function BTT_FlyTo.BTT_FlyTo_C.OnFail_030EE864408B5095FED9AFB2CF0283FD
// 0x0001 (0x0001 - 0x0000)
struct BTT_FlyTo_C_OnFail_030EE864408B5095FED9AFB2CF0283FD final
{
public:
	EPathFollowingResult                          MovementResult;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_FlyTo_C_OnFail_030EE864408B5095FED9AFB2CF0283FD) == 0x000001, "Wrong alignment on BTT_FlyTo_C_OnFail_030EE864408B5095FED9AFB2CF0283FD");
static_assert(sizeof(BTT_FlyTo_C_OnFail_030EE864408B5095FED9AFB2CF0283FD) == 0x000001, "Wrong size on BTT_FlyTo_C_OnFail_030EE864408B5095FED9AFB2CF0283FD");
static_assert(offsetof(BTT_FlyTo_C_OnFail_030EE864408B5095FED9AFB2CF0283FD, MovementResult) == 0x000000, "Member 'BTT_FlyTo_C_OnFail_030EE864408B5095FED9AFB2CF0283FD::MovementResult' has a wrong offset!");

// Function BTT_FlyTo.BTT_FlyTo_C.OnFail_90BC8C294E2B61C8AE9F219EDF52C55A
// 0x0001 (0x0001 - 0x0000)
struct BTT_FlyTo_C_OnFail_90BC8C294E2B61C8AE9F219EDF52C55A final
{
public:
	EPathFollowingResult                          MovementResult;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_FlyTo_C_OnFail_90BC8C294E2B61C8AE9F219EDF52C55A) == 0x000001, "Wrong alignment on BTT_FlyTo_C_OnFail_90BC8C294E2B61C8AE9F219EDF52C55A");
static_assert(sizeof(BTT_FlyTo_C_OnFail_90BC8C294E2B61C8AE9F219EDF52C55A) == 0x000001, "Wrong size on BTT_FlyTo_C_OnFail_90BC8C294E2B61C8AE9F219EDF52C55A");
static_assert(offsetof(BTT_FlyTo_C_OnFail_90BC8C294E2B61C8AE9F219EDF52C55A, MovementResult) == 0x000000, "Member 'BTT_FlyTo_C_OnFail_90BC8C294E2B61C8AE9F219EDF52C55A::MovementResult' has a wrong offset!");

// Function BTT_FlyTo.BTT_FlyTo_C.OnSuccess_030EE864408B5095FED9AFB2CF0283FD
// 0x0001 (0x0001 - 0x0000)
struct BTT_FlyTo_C_OnSuccess_030EE864408B5095FED9AFB2CF0283FD final
{
public:
	EPathFollowingResult                          MovementResult;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_FlyTo_C_OnSuccess_030EE864408B5095FED9AFB2CF0283FD) == 0x000001, "Wrong alignment on BTT_FlyTo_C_OnSuccess_030EE864408B5095FED9AFB2CF0283FD");
static_assert(sizeof(BTT_FlyTo_C_OnSuccess_030EE864408B5095FED9AFB2CF0283FD) == 0x000001, "Wrong size on BTT_FlyTo_C_OnSuccess_030EE864408B5095FED9AFB2CF0283FD");
static_assert(offsetof(BTT_FlyTo_C_OnSuccess_030EE864408B5095FED9AFB2CF0283FD, MovementResult) == 0x000000, "Member 'BTT_FlyTo_C_OnSuccess_030EE864408B5095FED9AFB2CF0283FD::MovementResult' has a wrong offset!");

// Function BTT_FlyTo.BTT_FlyTo_C.OnSuccess_90BC8C294E2B61C8AE9F219EDF52C55A
// 0x0001 (0x0001 - 0x0000)
struct BTT_FlyTo_C_OnSuccess_90BC8C294E2B61C8AE9F219EDF52C55A final
{
public:
	EPathFollowingResult                          MovementResult;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_FlyTo_C_OnSuccess_90BC8C294E2B61C8AE9F219EDF52C55A) == 0x000001, "Wrong alignment on BTT_FlyTo_C_OnSuccess_90BC8C294E2B61C8AE9F219EDF52C55A");
static_assert(sizeof(BTT_FlyTo_C_OnSuccess_90BC8C294E2B61C8AE9F219EDF52C55A) == 0x000001, "Wrong size on BTT_FlyTo_C_OnSuccess_90BC8C294E2B61C8AE9F219EDF52C55A");
static_assert(offsetof(BTT_FlyTo_C_OnSuccess_90BC8C294E2B61C8AE9F219EDF52C55A, MovementResult) == 0x000000, "Member 'BTT_FlyTo_C_OnSuccess_90BC8C294E2B61C8AE9F219EDF52C55A::MovementResult' has a wrong offset!");

// Function BTT_FlyTo.BTT_FlyTo_C.OnTargetActorMoved
// 0x0018 (0x0018 - 0x0000)
struct BTT_FlyTo_C_OnTargetActorMoved final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_FlyTo_C_OnTargetActorMoved) == 0x000008, "Wrong alignment on BTT_FlyTo_C_OnTargetActorMoved");
static_assert(sizeof(BTT_FlyTo_C_OnTargetActorMoved) == 0x000018, "Wrong size on BTT_FlyTo_C_OnTargetActorMoved");
static_assert(offsetof(BTT_FlyTo_C_OnTargetActorMoved, Location) == 0x000000, "Member 'BTT_FlyTo_C_OnTargetActorMoved::Location' has a wrong offset!");

// Function BTT_FlyTo.BTT_FlyTo_C.OnTargetChanged
// 0x0001 (0x0001 - 0x0000)
struct BTT_FlyTo_C_OnTargetChanged final
{
public:
	uint8                                         KeyID;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_FlyTo_C_OnTargetChanged) == 0x000001, "Wrong alignment on BTT_FlyTo_C_OnTargetChanged");
static_assert(sizeof(BTT_FlyTo_C_OnTargetChanged) == 0x000001, "Wrong size on BTT_FlyTo_C_OnTargetChanged");
static_assert(offsetof(BTT_FlyTo_C_OnTargetChanged, KeyID) == 0x000000, "Member 'BTT_FlyTo_C_OnTargetChanged::KeyID' has a wrong offset!");

// Function BTT_FlyTo.BTT_FlyTo_C.PickTargetPathWaypoint
// 0x0038 (0x0038 - 0x0000)
struct BTT_FlyTo_C_PickTargetPathWaypoint final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Waypoint;                                          // 0x0008(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E[0x2];                                       // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_FlyTo_C_PickTargetPathWaypoint) == 0x000008, "Wrong alignment on BTT_FlyTo_C_PickTargetPathWaypoint");
static_assert(sizeof(BTT_FlyTo_C_PickTargetPathWaypoint) == 0x000038, "Wrong size on BTT_FlyTo_C_PickTargetPathWaypoint");
static_assert(offsetof(BTT_FlyTo_C_PickTargetPathWaypoint, Result) == 0x000000, "Member 'BTT_FlyTo_C_PickTargetPathWaypoint::Result' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_PickTargetPathWaypoint, Waypoint) == 0x000008, "Member 'BTT_FlyTo_C_PickTargetPathWaypoint::Waypoint' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_PickTargetPathWaypoint, Temp_int_Variable) == 0x000020, "Member 'BTT_FlyTo_C_PickTargetPathWaypoint::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_PickTargetPathWaypoint, CallFunc_Subtract_IntInt_ReturnValue) == 0x000024, "Member 'BTT_FlyTo_C_PickTargetPathWaypoint::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_PickTargetPathWaypoint, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BTT_FlyTo_C_PickTargetPathWaypoint::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_PickTargetPathWaypoint, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'BTT_FlyTo_C_PickTargetPathWaypoint::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_PickTargetPathWaypoint, CallFunc_IsValid_ReturnValue) == 0x00002D, "Member 'BTT_FlyTo_C_PickTargetPathWaypoint::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_PickTargetPathWaypoint, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'BTT_FlyTo_C_PickTargetPathWaypoint::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BTT_FlyTo.BTT_FlyTo_C.ProjectPointToGround
// 0x0240 (0x0240 - 0x0000)
struct BTT_FlyTo_C_ProjectPointToGround final
{
public:
	struct FVector                                Point;                                             // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ProjectedPoint;                                    // 0x0018(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0038(0x0010)(ConstParm, ReferenceParm)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0080(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0169(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x016A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16B[0x1];                                      // 0x016B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_174[0x4];                                      // 0x0174(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0178(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0190(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x01A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x01C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x01D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x01E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x01E8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_20C[0x4];                                      // 0x020C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0210(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0228(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_FlyTo_C_ProjectPointToGround) == 0x000008, "Wrong alignment on BTT_FlyTo_C_ProjectPointToGround");
static_assert(sizeof(BTT_FlyTo_C_ProjectPointToGround) == 0x000240, "Wrong size on BTT_FlyTo_C_ProjectPointToGround");
static_assert(offsetof(BTT_FlyTo_C_ProjectPointToGround, Point) == 0x000000, "Member 'BTT_FlyTo_C_ProjectPointToGround::Point' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ProjectPointToGround, ProjectedPoint) == 0x000018, "Member 'BTT_FlyTo_C_ProjectPointToGround::ProjectedPoint' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ProjectPointToGround, Result) == 0x000030, "Member 'BTT_FlyTo_C_ProjectPointToGround::Result' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ProjectPointToGround, Temp_object_Variable) == 0x000038, "Member 'BTT_FlyTo_C_ProjectPointToGround::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ProjectPointToGround, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000048, "Member 'BTT_FlyTo_C_ProjectPointToGround::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ProjectPointToGround, CallFunc_MakeVector_ReturnValue) == 0x000050, "Member 'BTT_FlyTo_C_ProjectPointToGround::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ProjectPointToGround, CallFunc_Add_VectorVector_ReturnValue) == 0x000068, "Member 'BTT_FlyTo_C_ProjectPointToGround::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ProjectPointToGround, CallFunc_LineTraceSingle_OutHit) == 0x000080, "Member 'BTT_FlyTo_C_ProjectPointToGround::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ProjectPointToGround, CallFunc_LineTraceSingle_ReturnValue) == 0x000168, "Member 'BTT_FlyTo_C_ProjectPointToGround::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ProjectPointToGround, CallFunc_BreakHitResult_bBlockingHit) == 0x000169, "Member 'BTT_FlyTo_C_ProjectPointToGround::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ProjectPointToGround, CallFunc_BreakHitResult_bInitialOverlap) == 0x00016A, "Member 'BTT_FlyTo_C_ProjectPointToGround::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ProjectPointToGround, CallFunc_BreakHitResult_Time) == 0x00016C, "Member 'BTT_FlyTo_C_ProjectPointToGround::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ProjectPointToGround, CallFunc_BreakHitResult_Distance) == 0x000170, "Member 'BTT_FlyTo_C_ProjectPointToGround::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ProjectPointToGround, CallFunc_BreakHitResult_Location) == 0x000178, "Member 'BTT_FlyTo_C_ProjectPointToGround::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ProjectPointToGround, CallFunc_BreakHitResult_ImpactPoint) == 0x000190, "Member 'BTT_FlyTo_C_ProjectPointToGround::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ProjectPointToGround, CallFunc_BreakHitResult_Normal) == 0x0001A8, "Member 'BTT_FlyTo_C_ProjectPointToGround::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ProjectPointToGround, CallFunc_BreakHitResult_ImpactNormal) == 0x0001C0, "Member 'BTT_FlyTo_C_ProjectPointToGround::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ProjectPointToGround, CallFunc_BreakHitResult_PhysMat) == 0x0001D8, "Member 'BTT_FlyTo_C_ProjectPointToGround::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ProjectPointToGround, CallFunc_BreakHitResult_HitActor) == 0x0001E0, "Member 'BTT_FlyTo_C_ProjectPointToGround::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ProjectPointToGround, CallFunc_BreakHitResult_HitComponent) == 0x0001E8, "Member 'BTT_FlyTo_C_ProjectPointToGround::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ProjectPointToGround, CallFunc_BreakHitResult_HitBoneName) == 0x0001F0, "Member 'BTT_FlyTo_C_ProjectPointToGround::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ProjectPointToGround, CallFunc_BreakHitResult_BoneName) == 0x0001F8, "Member 'BTT_FlyTo_C_ProjectPointToGround::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ProjectPointToGround, CallFunc_BreakHitResult_HitItem) == 0x000200, "Member 'BTT_FlyTo_C_ProjectPointToGround::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ProjectPointToGround, CallFunc_BreakHitResult_ElementIndex) == 0x000204, "Member 'BTT_FlyTo_C_ProjectPointToGround::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ProjectPointToGround, CallFunc_BreakHitResult_FaceIndex) == 0x000208, "Member 'BTT_FlyTo_C_ProjectPointToGround::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ProjectPointToGround, CallFunc_BreakHitResult_TraceStart) == 0x000210, "Member 'BTT_FlyTo_C_ProjectPointToGround::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ProjectPointToGround, CallFunc_BreakHitResult_TraceEnd) == 0x000228, "Member 'BTT_FlyTo_C_ProjectPointToGround::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");

// Function BTT_FlyTo.BTT_FlyTo_C.ProjectPointToNavigation
// 0x0098 (0x0098 - 0x0000)
struct BTT_FlyTo_C_ProjectPointToNavigation final
{
public:
	struct FVector                                Point;                                             // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ProjectedPoint;                                    // 0x0018(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_ProjectPointToNavigation_ProjectedLocation; // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_ProjectPointToNavigation_ReturnValue;  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetRandomLocationInNavigableRadius_RandomLocation; // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_GetRandomLocationInNavigableRadius_ReturnValue; // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_GetRandomLocationInNavigableRadius_Radius_ImplicitCast; // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_FlyTo_C_ProjectPointToNavigation) == 0x000008, "Wrong alignment on BTT_FlyTo_C_ProjectPointToNavigation");
static_assert(sizeof(BTT_FlyTo_C_ProjectPointToNavigation) == 0x000098, "Wrong size on BTT_FlyTo_C_ProjectPointToNavigation");
static_assert(offsetof(BTT_FlyTo_C_ProjectPointToNavigation, Point) == 0x000000, "Member 'BTT_FlyTo_C_ProjectPointToNavigation::Point' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ProjectPointToNavigation, ProjectedPoint) == 0x000018, "Member 'BTT_FlyTo_C_ProjectPointToNavigation::ProjectedPoint' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ProjectPointToNavigation, Result) == 0x000030, "Member 'BTT_FlyTo_C_ProjectPointToNavigation::Result' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ProjectPointToNavigation, CallFunc_K2_ProjectPointToNavigation_ProjectedLocation) == 0x000038, "Member 'BTT_FlyTo_C_ProjectPointToNavigation::CallFunc_K2_ProjectPointToNavigation_ProjectedLocation' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ProjectPointToNavigation, CallFunc_K2_ProjectPointToNavigation_ReturnValue) == 0x000050, "Member 'BTT_FlyTo_C_ProjectPointToNavigation::CallFunc_K2_ProjectPointToNavigation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ProjectPointToNavigation, Temp_int_Variable) == 0x000054, "Member 'BTT_FlyTo_C_ProjectPointToNavigation::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ProjectPointToNavigation, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000058, "Member 'BTT_FlyTo_C_ProjectPointToNavigation::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ProjectPointToNavigation, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000060, "Member 'BTT_FlyTo_C_ProjectPointToNavigation::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ProjectPointToNavigation, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000068, "Member 'BTT_FlyTo_C_ProjectPointToNavigation::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ProjectPointToNavigation, CallFunc_K2_GetRandomLocationInNavigableRadius_RandomLocation) == 0x000070, "Member 'BTT_FlyTo_C_ProjectPointToNavigation::CallFunc_K2_GetRandomLocationInNavigableRadius_RandomLocation' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ProjectPointToNavigation, CallFunc_K2_GetRandomLocationInNavigableRadius_ReturnValue) == 0x000088, "Member 'BTT_FlyTo_C_ProjectPointToNavigation::CallFunc_K2_GetRandomLocationInNavigableRadius_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ProjectPointToNavigation, CallFunc_Add_IntInt_ReturnValue) == 0x00008C, "Member 'BTT_FlyTo_C_ProjectPointToNavigation::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ProjectPointToNavigation, CallFunc_K2_GetRandomLocationInNavigableRadius_Radius_ImplicitCast) == 0x000090, "Member 'BTT_FlyTo_C_ProjectPointToNavigation::CallFunc_K2_GetRandomLocationInNavigableRadius_Radius_ImplicitCast' has a wrong offset!");

// Function BTT_FlyTo.BTT_FlyTo_C.ReceiveAbortAI
// 0x0010 (0x0010 - 0x0000)
struct BTT_FlyTo_C_ReceiveAbortAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_FlyTo_C_ReceiveAbortAI) == 0x000008, "Wrong alignment on BTT_FlyTo_C_ReceiveAbortAI");
static_assert(sizeof(BTT_FlyTo_C_ReceiveAbortAI) == 0x000010, "Wrong size on BTT_FlyTo_C_ReceiveAbortAI");
static_assert(offsetof(BTT_FlyTo_C_ReceiveAbortAI, OwnerController) == 0x000000, "Member 'BTT_FlyTo_C_ReceiveAbortAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ReceiveAbortAI, ControlledPawn) == 0x000008, "Member 'BTT_FlyTo_C_ReceiveAbortAI::ControlledPawn' has a wrong offset!");

// Function BTT_FlyTo.BTT_FlyTo_C.ReceiveExecuteAI
// 0x0010 (0x0010 - 0x0000)
struct BTT_FlyTo_C_ReceiveExecuteAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_FlyTo_C_ReceiveExecuteAI) == 0x000008, "Wrong alignment on BTT_FlyTo_C_ReceiveExecuteAI");
static_assert(sizeof(BTT_FlyTo_C_ReceiveExecuteAI) == 0x000010, "Wrong size on BTT_FlyTo_C_ReceiveExecuteAI");
static_assert(offsetof(BTT_FlyTo_C_ReceiveExecuteAI, OwnerController) == 0x000000, "Member 'BTT_FlyTo_C_ReceiveExecuteAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ReceiveExecuteAI, ControlledPawn) == 0x000008, "Member 'BTT_FlyTo_C_ReceiveExecuteAI::ControlledPawn' has a wrong offset!");

// Function BTT_FlyTo.BTT_FlyTo_C.ReceiveTickAI
// 0x0018 (0x0018 - 0x0000)
struct BTT_FlyTo_C_ReceiveTickAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaSeconds;                                      // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_FlyTo_C_ReceiveTickAI) == 0x000008, "Wrong alignment on BTT_FlyTo_C_ReceiveTickAI");
static_assert(sizeof(BTT_FlyTo_C_ReceiveTickAI) == 0x000018, "Wrong size on BTT_FlyTo_C_ReceiveTickAI");
static_assert(offsetof(BTT_FlyTo_C_ReceiveTickAI, OwnerController) == 0x000000, "Member 'BTT_FlyTo_C_ReceiveTickAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ReceiveTickAI, ControlledPawn) == 0x000008, "Member 'BTT_FlyTo_C_ReceiveTickAI::ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_ReceiveTickAI, DeltaSeconds) == 0x000010, "Member 'BTT_FlyTo_C_ReceiveTickAI::DeltaSeconds' has a wrong offset!");

// Function BTT_FlyTo.BTT_FlyTo_C.TargetPathNeedCheckReachWaypoint
// 0x000C (0x000C - 0x0000)
struct BTT_FlyTo_C_TargetPathNeedCheckReachWaypoint final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_FlyTo_C_TargetPathNeedCheckReachWaypoint) == 0x000004, "Wrong alignment on BTT_FlyTo_C_TargetPathNeedCheckReachWaypoint");
static_assert(sizeof(BTT_FlyTo_C_TargetPathNeedCheckReachWaypoint) == 0x00000C, "Wrong size on BTT_FlyTo_C_TargetPathNeedCheckReachWaypoint");
static_assert(offsetof(BTT_FlyTo_C_TargetPathNeedCheckReachWaypoint, Result) == 0x000000, "Member 'BTT_FlyTo_C_TargetPathNeedCheckReachWaypoint::Result' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_TargetPathNeedCheckReachWaypoint, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'BTT_FlyTo_C_TargetPathNeedCheckReachWaypoint::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_TargetPathNeedCheckReachWaypoint, CallFunc_Array_Length_ReturnValue) == 0x000004, "Member 'BTT_FlyTo_C_TargetPathNeedCheckReachWaypoint::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_FlyTo_C_TargetPathNeedCheckReachWaypoint, CallFunc_Less_IntInt_ReturnValue) == 0x000008, "Member 'BTT_FlyTo_C_TargetPathNeedCheckReachWaypoint::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

}

