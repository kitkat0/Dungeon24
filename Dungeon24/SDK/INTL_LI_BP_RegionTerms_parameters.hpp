#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: INTL_LI_BP_RegionTerms

#include "Basic.hpp"


namespace SDK::Params
{

// Function INTL_LI_BP_RegionTerms.INTL_LI_BP_RegionTerms_C.BirthComboxNavigationDown
// 0x0028 (0x0028 - 0x0000)
struct INTL_LI_BP_RegionTerms_C_BirthComboxNavigationDown final
{
public:
	class UWidget*                                FocusWidget;                                       // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsEnabled_ReturnValue;                 // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UINTL_LI_BP_RegionTerms_TermItem_C*     CallFunc_GetNextTermItem_nextTermIterm;            // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTL_LI_BP_RegionTerms_C_BirthComboxNavigationDown) == 0x000008, "Wrong alignment on INTL_LI_BP_RegionTerms_C_BirthComboxNavigationDown");
static_assert(sizeof(INTL_LI_BP_RegionTerms_C_BirthComboxNavigationDown) == 0x000028, "Wrong size on INTL_LI_BP_RegionTerms_C_BirthComboxNavigationDown");
static_assert(offsetof(INTL_LI_BP_RegionTerms_C_BirthComboxNavigationDown, FocusWidget) == 0x000000, "Member 'INTL_LI_BP_RegionTerms_C_BirthComboxNavigationDown::FocusWidget' has a wrong offset!");
static_assert(offsetof(INTL_LI_BP_RegionTerms_C_BirthComboxNavigationDown, CallFunc_GetIsEnabled_ReturnValue) == 0x000008, "Member 'INTL_LI_BP_RegionTerms_C_BirthComboxNavigationDown::CallFunc_GetIsEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTL_LI_BP_RegionTerms_C_BirthComboxNavigationDown, CallFunc_GetOwningPlayer_ReturnValue) == 0x000010, "Member 'INTL_LI_BP_RegionTerms_C_BirthComboxNavigationDown::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTL_LI_BP_RegionTerms_C_BirthComboxNavigationDown, CallFunc_GetNextTermItem_nextTermIterm) == 0x000018, "Member 'INTL_LI_BP_RegionTerms_C_BirthComboxNavigationDown::CallFunc_GetNextTermItem_nextTermIterm' has a wrong offset!");
static_assert(offsetof(INTL_LI_BP_RegionTerms_C_BirthComboxNavigationDown, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'INTL_LI_BP_RegionTerms_C_BirthComboxNavigationDown::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function INTL_LI_BP_RegionTerms.INTL_LI_BP_RegionTerms_C.ContinueBtnNavigationUp
// 0x0038 (0x0038 - 0x0000)
struct INTL_LI_BP_RegionTerms_C_ContinueBtnNavigationUp final
{
public:
	class UWidget*                                FocusWidget;                                       // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetActiveWidgetIndex_ReturnValue;         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F[0x1];                                        // 0x000F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetActiveWidgetIndex_ReturnValue_1;       // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue_1;                  // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17[0x1];                                       // 0x0017(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue_2;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UINTL_LI_BP_RegionTerms_TermItem_C*     CallFunc_GetNextTermItem_nextTermIterm;            // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTL_LI_BP_RegionTerms_C_ContinueBtnNavigationUp) == 0x000008, "Wrong alignment on INTL_LI_BP_RegionTerms_C_ContinueBtnNavigationUp");
static_assert(sizeof(INTL_LI_BP_RegionTerms_C_ContinueBtnNavigationUp) == 0x000038, "Wrong size on INTL_LI_BP_RegionTerms_C_ContinueBtnNavigationUp");
static_assert(offsetof(INTL_LI_BP_RegionTerms_C_ContinueBtnNavigationUp, FocusWidget) == 0x000000, "Member 'INTL_LI_BP_RegionTerms_C_ContinueBtnNavigationUp::FocusWidget' has a wrong offset!");
static_assert(offsetof(INTL_LI_BP_RegionTerms_C_ContinueBtnNavigationUp, CallFunc_GetActiveWidgetIndex_ReturnValue) == 0x000008, "Member 'INTL_LI_BP_RegionTerms_C_ContinueBtnNavigationUp::CallFunc_GetActiveWidgetIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTL_LI_BP_RegionTerms_C_ContinueBtnNavigationUp, CallFunc_IsVisible_ReturnValue) == 0x00000C, "Member 'INTL_LI_BP_RegionTerms_C_ContinueBtnNavigationUp::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTL_LI_BP_RegionTerms_C_ContinueBtnNavigationUp, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00000D, "Member 'INTL_LI_BP_RegionTerms_C_ContinueBtnNavigationUp::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTL_LI_BP_RegionTerms_C_ContinueBtnNavigationUp, CallFunc_BooleanAND_ReturnValue) == 0x00000E, "Member 'INTL_LI_BP_RegionTerms_C_ContinueBtnNavigationUp::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTL_LI_BP_RegionTerms_C_ContinueBtnNavigationUp, CallFunc_GetActiveWidgetIndex_ReturnValue_1) == 0x000010, "Member 'INTL_LI_BP_RegionTerms_C_ContinueBtnNavigationUp::CallFunc_GetActiveWidgetIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTL_LI_BP_RegionTerms_C_ContinueBtnNavigationUp, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000014, "Member 'INTL_LI_BP_RegionTerms_C_ContinueBtnNavigationUp::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTL_LI_BP_RegionTerms_C_ContinueBtnNavigationUp, CallFunc_IsVisible_ReturnValue_1) == 0x000015, "Member 'INTL_LI_BP_RegionTerms_C_ContinueBtnNavigationUp::CallFunc_IsVisible_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTL_LI_BP_RegionTerms_C_ContinueBtnNavigationUp, CallFunc_BooleanAND_ReturnValue_1) == 0x000016, "Member 'INTL_LI_BP_RegionTerms_C_ContinueBtnNavigationUp::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTL_LI_BP_RegionTerms_C_ContinueBtnNavigationUp, CallFunc_GetOwningPlayer_ReturnValue) == 0x000018, "Member 'INTL_LI_BP_RegionTerms_C_ContinueBtnNavigationUp::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTL_LI_BP_RegionTerms_C_ContinueBtnNavigationUp, CallFunc_IsVisible_ReturnValue_2) == 0x000020, "Member 'INTL_LI_BP_RegionTerms_C_ContinueBtnNavigationUp::CallFunc_IsVisible_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(INTL_LI_BP_RegionTerms_C_ContinueBtnNavigationUp, CallFunc_GetNextTermItem_nextTermIterm) == 0x000028, "Member 'INTL_LI_BP_RegionTerms_C_ContinueBtnNavigationUp::CallFunc_GetNextTermItem_nextTermIterm' has a wrong offset!");
static_assert(offsetof(INTL_LI_BP_RegionTerms_C_ContinueBtnNavigationUp, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'INTL_LI_BP_RegionTerms_C_ContinueBtnNavigationUp::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function INTL_LI_BP_RegionTerms.INTL_LI_BP_RegionTerms_C.EventTermItemNavigationDown
// 0x0008 (0x0008 - 0x0000)
struct INTL_LI_BP_RegionTerms_C_EventTermItemNavigationDown final
{
public:
	class UUserWidget*                            TermIterm;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTL_LI_BP_RegionTerms_C_EventTermItemNavigationDown) == 0x000008, "Wrong alignment on INTL_LI_BP_RegionTerms_C_EventTermItemNavigationDown");
static_assert(sizeof(INTL_LI_BP_RegionTerms_C_EventTermItemNavigationDown) == 0x000008, "Wrong size on INTL_LI_BP_RegionTerms_C_EventTermItemNavigationDown");
static_assert(offsetof(INTL_LI_BP_RegionTerms_C_EventTermItemNavigationDown, TermIterm) == 0x000000, "Member 'INTL_LI_BP_RegionTerms_C_EventTermItemNavigationDown::TermIterm' has a wrong offset!");

// Function INTL_LI_BP_RegionTerms.INTL_LI_BP_RegionTerms_C.EventTermItemNavigationUp
// 0x0008 (0x0008 - 0x0000)
struct INTL_LI_BP_RegionTerms_C_EventTermItemNavigationUp final
{
public:
	class UUserWidget*                            TermItem;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTL_LI_BP_RegionTerms_C_EventTermItemNavigationUp) == 0x000008, "Wrong alignment on INTL_LI_BP_RegionTerms_C_EventTermItemNavigationUp");
static_assert(sizeof(INTL_LI_BP_RegionTerms_C_EventTermItemNavigationUp) == 0x000008, "Wrong size on INTL_LI_BP_RegionTerms_C_EventTermItemNavigationUp");
static_assert(offsetof(INTL_LI_BP_RegionTerms_C_EventTermItemNavigationUp, TermItem) == 0x000000, "Member 'INTL_LI_BP_RegionTerms_C_EventTermItemNavigationUp::TermItem' has a wrong offset!");

// Function INTL_LI_BP_RegionTerms.INTL_LI_BP_RegionTerms_C.ExecuteUbergraph_INTL_LI_BP_RegionTerms
// 0x0020 (0x0020 - 0x0000)
struct INTL_LI_BP_RegionTerms_C_ExecuteUbergraph_INTL_LI_BP_RegionTerms final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            K2Node_CustomEvent_TermIterm;                      // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            K2Node_CustomEvent_TermItem;                       // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTL_LI_BP_RegionTerms_C_ExecuteUbergraph_INTL_LI_BP_RegionTerms) == 0x000008, "Wrong alignment on INTL_LI_BP_RegionTerms_C_ExecuteUbergraph_INTL_LI_BP_RegionTerms");
static_assert(sizeof(INTL_LI_BP_RegionTerms_C_ExecuteUbergraph_INTL_LI_BP_RegionTerms) == 0x000020, "Wrong size on INTL_LI_BP_RegionTerms_C_ExecuteUbergraph_INTL_LI_BP_RegionTerms");
static_assert(offsetof(INTL_LI_BP_RegionTerms_C_ExecuteUbergraph_INTL_LI_BP_RegionTerms, EntryPoint) == 0x000000, "Member 'INTL_LI_BP_RegionTerms_C_ExecuteUbergraph_INTL_LI_BP_RegionTerms::EntryPoint' has a wrong offset!");
static_assert(offsetof(INTL_LI_BP_RegionTerms_C_ExecuteUbergraph_INTL_LI_BP_RegionTerms, K2Node_CustomEvent_TermIterm) == 0x000008, "Member 'INTL_LI_BP_RegionTerms_C_ExecuteUbergraph_INTL_LI_BP_RegionTerms::K2Node_CustomEvent_TermIterm' has a wrong offset!");
static_assert(offsetof(INTL_LI_BP_RegionTerms_C_ExecuteUbergraph_INTL_LI_BP_RegionTerms, K2Node_Event_IsDesignTime) == 0x000010, "Member 'INTL_LI_BP_RegionTerms_C_ExecuteUbergraph_INTL_LI_BP_RegionTerms::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(INTL_LI_BP_RegionTerms_C_ExecuteUbergraph_INTL_LI_BP_RegionTerms, K2Node_CustomEvent_TermItem) == 0x000018, "Member 'INTL_LI_BP_RegionTerms_C_ExecuteUbergraph_INTL_LI_BP_RegionTerms::K2Node_CustomEvent_TermItem' has a wrong offset!");

// Function INTL_LI_BP_RegionTerms.INTL_LI_BP_RegionTerms_C.GetNextTermItem
// 0x0068 (0x0068 - 0x0000)
struct INTL_LI_BP_RegionTerms_C_GetNextTermItem final
{
public:
	bool                                          IsDown;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         StartFromIndex;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UINTL_LI_BP_RegionTerms_TermItem_C*     NextTermIterm;                                     // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Found;                                             // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         PreIndex;                                          // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsEnabled_ReturnValue;                 // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33[0x5];                                       // 0x0033(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_Array_Get_Item_1;                         // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UINTL_LI_BP_RegionTerms_TermItem_C*     K2Node_DynamicCast_AsINTL_LI_BP_Region_Terms_Term_Item; // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_Array_Get_Item_2;                         // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsEnabled_ReturnValue_1;               // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue_1;                  // 0x0066(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0067(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTL_LI_BP_RegionTerms_C_GetNextTermItem) == 0x000008, "Wrong alignment on INTL_LI_BP_RegionTerms_C_GetNextTermItem");
static_assert(sizeof(INTL_LI_BP_RegionTerms_C_GetNextTermItem) == 0x000068, "Wrong size on INTL_LI_BP_RegionTerms_C_GetNextTermItem");
static_assert(offsetof(INTL_LI_BP_RegionTerms_C_GetNextTermItem, IsDown) == 0x000000, "Member 'INTL_LI_BP_RegionTerms_C_GetNextTermItem::IsDown' has a wrong offset!");
static_assert(offsetof(INTL_LI_BP_RegionTerms_C_GetNextTermItem, StartFromIndex) == 0x000004, "Member 'INTL_LI_BP_RegionTerms_C_GetNextTermItem::StartFromIndex' has a wrong offset!");
static_assert(offsetof(INTL_LI_BP_RegionTerms_C_GetNextTermItem, NextTermIterm) == 0x000008, "Member 'INTL_LI_BP_RegionTerms_C_GetNextTermItem::NextTermIterm' has a wrong offset!");
static_assert(offsetof(INTL_LI_BP_RegionTerms_C_GetNextTermItem, Found) == 0x000010, "Member 'INTL_LI_BP_RegionTerms_C_GetNextTermItem::Found' has a wrong offset!");
static_assert(offsetof(INTL_LI_BP_RegionTerms_C_GetNextTermItem, PreIndex) == 0x000014, "Member 'INTL_LI_BP_RegionTerms_C_GetNextTermItem::PreIndex' has a wrong offset!");
static_assert(offsetof(INTL_LI_BP_RegionTerms_C_GetNextTermItem, CallFunc_Greater_IntInt_ReturnValue) == 0x000018, "Member 'INTL_LI_BP_RegionTerms_C_GetNextTermItem::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTL_LI_BP_RegionTerms_C_GetNextTermItem, CallFunc_Subtract_IntInt_ReturnValue) == 0x00001C, "Member 'INTL_LI_BP_RegionTerms_C_GetNextTermItem::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTL_LI_BP_RegionTerms_C_GetNextTermItem, CallFunc_Not_PreBool_ReturnValue) == 0x000020, "Member 'INTL_LI_BP_RegionTerms_C_GetNextTermItem::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTL_LI_BP_RegionTerms_C_GetNextTermItem, CallFunc_Array_Get_Item) == 0x000028, "Member 'INTL_LI_BP_RegionTerms_C_GetNextTermItem::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(INTL_LI_BP_RegionTerms_C_GetNextTermItem, CallFunc_GetIsEnabled_ReturnValue) == 0x000030, "Member 'INTL_LI_BP_RegionTerms_C_GetNextTermItem::CallFunc_GetIsEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTL_LI_BP_RegionTerms_C_GetNextTermItem, CallFunc_IsVisible_ReturnValue) == 0x000031, "Member 'INTL_LI_BP_RegionTerms_C_GetNextTermItem::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTL_LI_BP_RegionTerms_C_GetNextTermItem, CallFunc_BooleanAND_ReturnValue) == 0x000032, "Member 'INTL_LI_BP_RegionTerms_C_GetNextTermItem::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTL_LI_BP_RegionTerms_C_GetNextTermItem, CallFunc_Array_Get_Item_1) == 0x000038, "Member 'INTL_LI_BP_RegionTerms_C_GetNextTermItem::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(INTL_LI_BP_RegionTerms_C_GetNextTermItem, CallFunc_Not_PreBool_ReturnValue_1) == 0x000040, "Member 'INTL_LI_BP_RegionTerms_C_GetNextTermItem::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTL_LI_BP_RegionTerms_C_GetNextTermItem, K2Node_DynamicCast_AsINTL_LI_BP_Region_Terms_Term_Item) == 0x000048, "Member 'INTL_LI_BP_RegionTerms_C_GetNextTermItem::K2Node_DynamicCast_AsINTL_LI_BP_Region_Terms_Term_Item' has a wrong offset!");
static_assert(offsetof(INTL_LI_BP_RegionTerms_C_GetNextTermItem, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'INTL_LI_BP_RegionTerms_C_GetNextTermItem::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTL_LI_BP_RegionTerms_C_GetNextTermItem, CallFunc_Add_IntInt_ReturnValue) == 0x000054, "Member 'INTL_LI_BP_RegionTerms_C_GetNextTermItem::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTL_LI_BP_RegionTerms_C_GetNextTermItem, CallFunc_Array_Get_Item_2) == 0x000058, "Member 'INTL_LI_BP_RegionTerms_C_GetNextTermItem::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(INTL_LI_BP_RegionTerms_C_GetNextTermItem, CallFunc_Array_Length_ReturnValue) == 0x000060, "Member 'INTL_LI_BP_RegionTerms_C_GetNextTermItem::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTL_LI_BP_RegionTerms_C_GetNextTermItem, CallFunc_GetIsEnabled_ReturnValue_1) == 0x000064, "Member 'INTL_LI_BP_RegionTerms_C_GetNextTermItem::CallFunc_GetIsEnabled_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTL_LI_BP_RegionTerms_C_GetNextTermItem, CallFunc_Less_IntInt_ReturnValue) == 0x000065, "Member 'INTL_LI_BP_RegionTerms_C_GetNextTermItem::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTL_LI_BP_RegionTerms_C_GetNextTermItem, CallFunc_IsVisible_ReturnValue_1) == 0x000066, "Member 'INTL_LI_BP_RegionTerms_C_GetNextTermItem::CallFunc_IsVisible_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTL_LI_BP_RegionTerms_C_GetNextTermItem, CallFunc_BooleanAND_ReturnValue_1) == 0x000067, "Member 'INTL_LI_BP_RegionTerms_C_GetNextTermItem::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function INTL_LI_BP_RegionTerms.INTL_LI_BP_RegionTerms_C.InitTermItems
// 0x0040 (0x0040 - 0x0000)
struct INTL_LI_BP_RegionTerms_C_InitTermItems final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UINTL_LI_BP_RegionTerms_TermItem_C*     K2Node_DynamicCast_AsINTL_LI_BP_Region_Terms_Term_Item; // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UUserWidget*>                    K2Node_MakeArray_Array;                            // 0x0030(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(INTL_LI_BP_RegionTerms_C_InitTermItems) == 0x000008, "Wrong alignment on INTL_LI_BP_RegionTerms_C_InitTermItems");
static_assert(sizeof(INTL_LI_BP_RegionTerms_C_InitTermItems) == 0x000040, "Wrong size on INTL_LI_BP_RegionTerms_C_InitTermItems");
static_assert(offsetof(INTL_LI_BP_RegionTerms_C_InitTermItems, Temp_int_Array_Index_Variable) == 0x000000, "Member 'INTL_LI_BP_RegionTerms_C_InitTermItems::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(INTL_LI_BP_RegionTerms_C_InitTermItems, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'INTL_LI_BP_RegionTerms_C_InitTermItems::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(INTL_LI_BP_RegionTerms_C_InitTermItems, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'INTL_LI_BP_RegionTerms_C_InitTermItems::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTL_LI_BP_RegionTerms_C_InitTermItems, CallFunc_Array_Get_Item) == 0x000010, "Member 'INTL_LI_BP_RegionTerms_C_InitTermItems::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(INTL_LI_BP_RegionTerms_C_InitTermItems, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'INTL_LI_BP_RegionTerms_C_InitTermItems::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTL_LI_BP_RegionTerms_C_InitTermItems, K2Node_DynamicCast_AsINTL_LI_BP_Region_Terms_Term_Item) == 0x000020, "Member 'INTL_LI_BP_RegionTerms_C_InitTermItems::K2Node_DynamicCast_AsINTL_LI_BP_Region_Terms_Term_Item' has a wrong offset!");
static_assert(offsetof(INTL_LI_BP_RegionTerms_C_InitTermItems, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'INTL_LI_BP_RegionTerms_C_InitTermItems::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTL_LI_BP_RegionTerms_C_InitTermItems, CallFunc_Less_IntInt_ReturnValue) == 0x000029, "Member 'INTL_LI_BP_RegionTerms_C_InitTermItems::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTL_LI_BP_RegionTerms_C_InitTermItems, K2Node_MakeArray_Array) == 0x000030, "Member 'INTL_LI_BP_RegionTerms_C_InitTermItems::K2Node_MakeArray_Array' has a wrong offset!");

// Function INTL_LI_BP_RegionTerms.INTL_LI_BP_RegionTerms_C.OnComboBoxGenerateWidget
// 0x0018 (0x0018 - 0x0000)
struct INTL_LI_BP_RegionTerms_C_OnComboBoxGenerateWidget final
{
public:
	class FString                                 Item;                                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UWidget*                                ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTL_LI_BP_RegionTerms_C_OnComboBoxGenerateWidget) == 0x000008, "Wrong alignment on INTL_LI_BP_RegionTerms_C_OnComboBoxGenerateWidget");
static_assert(sizeof(INTL_LI_BP_RegionTerms_C_OnComboBoxGenerateWidget) == 0x000018, "Wrong size on INTL_LI_BP_RegionTerms_C_OnComboBoxGenerateWidget");
static_assert(offsetof(INTL_LI_BP_RegionTerms_C_OnComboBoxGenerateWidget, Item) == 0x000000, "Member 'INTL_LI_BP_RegionTerms_C_OnComboBoxGenerateWidget::Item' has a wrong offset!");
static_assert(offsetof(INTL_LI_BP_RegionTerms_C_OnComboBoxGenerateWidget, ReturnValue) == 0x000010, "Member 'INTL_LI_BP_RegionTerms_C_OnComboBoxGenerateWidget::ReturnValue' has a wrong offset!");

// Function INTL_LI_BP_RegionTerms.INTL_LI_BP_RegionTerms_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct INTL_LI_BP_RegionTerms_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTL_LI_BP_RegionTerms_C_PreConstruct) == 0x000001, "Wrong alignment on INTL_LI_BP_RegionTerms_C_PreConstruct");
static_assert(sizeof(INTL_LI_BP_RegionTerms_C_PreConstruct) == 0x000001, "Wrong size on INTL_LI_BP_RegionTerms_C_PreConstruct");
static_assert(offsetof(INTL_LI_BP_RegionTerms_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'INTL_LI_BP_RegionTerms_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function INTL_LI_BP_RegionTerms.INTL_LI_BP_RegionTerms_C.RegionComboxNavigationDown
// 0x0030 (0x0030 - 0x0000)
struct INTL_LI_BP_RegionTerms_C_RegionComboxNavigationDown final
{
public:
	class UWidget*                                FocusWidget;                                       // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetActiveWidgetIndex_ReturnValue;         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetActiveWidgetIndex_ReturnValue_1;       // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue_1;                  // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsEnabled_ReturnValue;                 // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17[0x1];                                       // 0x0017(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UINTL_LI_BP_RegionTerms_TermItem_C*     CallFunc_GetNextTermItem_nextTermIterm;            // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTL_LI_BP_RegionTerms_C_RegionComboxNavigationDown) == 0x000008, "Wrong alignment on INTL_LI_BP_RegionTerms_C_RegionComboxNavigationDown");
static_assert(sizeof(INTL_LI_BP_RegionTerms_C_RegionComboxNavigationDown) == 0x000030, "Wrong size on INTL_LI_BP_RegionTerms_C_RegionComboxNavigationDown");
static_assert(offsetof(INTL_LI_BP_RegionTerms_C_RegionComboxNavigationDown, FocusWidget) == 0x000000, "Member 'INTL_LI_BP_RegionTerms_C_RegionComboxNavigationDown::FocusWidget' has a wrong offset!");
static_assert(offsetof(INTL_LI_BP_RegionTerms_C_RegionComboxNavigationDown, CallFunc_GetActiveWidgetIndex_ReturnValue) == 0x000008, "Member 'INTL_LI_BP_RegionTerms_C_RegionComboxNavigationDown::CallFunc_GetActiveWidgetIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTL_LI_BP_RegionTerms_C_RegionComboxNavigationDown, CallFunc_GetActiveWidgetIndex_ReturnValue_1) == 0x00000C, "Member 'INTL_LI_BP_RegionTerms_C_RegionComboxNavigationDown::CallFunc_GetActiveWidgetIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTL_LI_BP_RegionTerms_C_RegionComboxNavigationDown, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000010, "Member 'INTL_LI_BP_RegionTerms_C_RegionComboxNavigationDown::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTL_LI_BP_RegionTerms_C_RegionComboxNavigationDown, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000011, "Member 'INTL_LI_BP_RegionTerms_C_RegionComboxNavigationDown::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTL_LI_BP_RegionTerms_C_RegionComboxNavigationDown, CallFunc_IsVisible_ReturnValue) == 0x000012, "Member 'INTL_LI_BP_RegionTerms_C_RegionComboxNavigationDown::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTL_LI_BP_RegionTerms_C_RegionComboxNavigationDown, CallFunc_IsVisible_ReturnValue_1) == 0x000013, "Member 'INTL_LI_BP_RegionTerms_C_RegionComboxNavigationDown::CallFunc_IsVisible_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTL_LI_BP_RegionTerms_C_RegionComboxNavigationDown, CallFunc_BooleanAND_ReturnValue) == 0x000014, "Member 'INTL_LI_BP_RegionTerms_C_RegionComboxNavigationDown::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTL_LI_BP_RegionTerms_C_RegionComboxNavigationDown, CallFunc_BooleanAND_ReturnValue_1) == 0x000015, "Member 'INTL_LI_BP_RegionTerms_C_RegionComboxNavigationDown::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTL_LI_BP_RegionTerms_C_RegionComboxNavigationDown, CallFunc_GetIsEnabled_ReturnValue) == 0x000016, "Member 'INTL_LI_BP_RegionTerms_C_RegionComboxNavigationDown::CallFunc_GetIsEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTL_LI_BP_RegionTerms_C_RegionComboxNavigationDown, CallFunc_GetNextTermItem_nextTermIterm) == 0x000018, "Member 'INTL_LI_BP_RegionTerms_C_RegionComboxNavigationDown::CallFunc_GetNextTermItem_nextTermIterm' has a wrong offset!");
static_assert(offsetof(INTL_LI_BP_RegionTerms_C_RegionComboxNavigationDown, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'INTL_LI_BP_RegionTerms_C_RegionComboxNavigationDown::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTL_LI_BP_RegionTerms_C_RegionComboxNavigationDown, CallFunc_GetOwningPlayer_ReturnValue) == 0x000028, "Member 'INTL_LI_BP_RegionTerms_C_RegionComboxNavigationDown::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");

// Function INTL_LI_BP_RegionTerms.INTL_LI_BP_RegionTerms_C.TermItemNavigationDown
// 0x0038 (0x0038 - 0x0000)
struct INTL_LI_BP_RegionTerms_C_TermItemNavigationDown final
{
public:
	class UUserWidget*                            TermIterm;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                FocusWidget;                                       // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         NextTermItermIndex;                                // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsEnabled_ReturnValue;                 // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16[0x2];                                       // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UINTL_LI_BP_RegionTerms_TermItem_C*     CallFunc_GetNextTermItem_nextTermIterm;            // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTL_LI_BP_RegionTerms_C_TermItemNavigationDown) == 0x000008, "Wrong alignment on INTL_LI_BP_RegionTerms_C_TermItemNavigationDown");
static_assert(sizeof(INTL_LI_BP_RegionTerms_C_TermItemNavigationDown) == 0x000038, "Wrong size on INTL_LI_BP_RegionTerms_C_TermItemNavigationDown");
static_assert(offsetof(INTL_LI_BP_RegionTerms_C_TermItemNavigationDown, TermIterm) == 0x000000, "Member 'INTL_LI_BP_RegionTerms_C_TermItemNavigationDown::TermIterm' has a wrong offset!");
static_assert(offsetof(INTL_LI_BP_RegionTerms_C_TermItemNavigationDown, FocusWidget) == 0x000008, "Member 'INTL_LI_BP_RegionTerms_C_TermItemNavigationDown::FocusWidget' has a wrong offset!");
static_assert(offsetof(INTL_LI_BP_RegionTerms_C_TermItemNavigationDown, NextTermItermIndex) == 0x000010, "Member 'INTL_LI_BP_RegionTerms_C_TermItemNavigationDown::NextTermItermIndex' has a wrong offset!");
static_assert(offsetof(INTL_LI_BP_RegionTerms_C_TermItemNavigationDown, CallFunc_IsValid_ReturnValue) == 0x000014, "Member 'INTL_LI_BP_RegionTerms_C_TermItemNavigationDown::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTL_LI_BP_RegionTerms_C_TermItemNavigationDown, CallFunc_GetIsEnabled_ReturnValue) == 0x000015, "Member 'INTL_LI_BP_RegionTerms_C_TermItemNavigationDown::CallFunc_GetIsEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTL_LI_BP_RegionTerms_C_TermItemNavigationDown, CallFunc_GetOwningPlayer_ReturnValue) == 0x000018, "Member 'INTL_LI_BP_RegionTerms_C_TermItemNavigationDown::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTL_LI_BP_RegionTerms_C_TermItemNavigationDown, CallFunc_Array_Find_ReturnValue) == 0x000020, "Member 'INTL_LI_BP_RegionTerms_C_TermItemNavigationDown::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTL_LI_BP_RegionTerms_C_TermItemNavigationDown, CallFunc_GetNextTermItem_nextTermIterm) == 0x000028, "Member 'INTL_LI_BP_RegionTerms_C_TermItemNavigationDown::CallFunc_GetNextTermItem_nextTermIterm' has a wrong offset!");
static_assert(offsetof(INTL_LI_BP_RegionTerms_C_TermItemNavigationDown, CallFunc_IsValid_ReturnValue_1) == 0x000030, "Member 'INTL_LI_BP_RegionTerms_C_TermItemNavigationDown::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function INTL_LI_BP_RegionTerms.INTL_LI_BP_RegionTerms_C.TermItemNavigationUp
// 0x0048 (0x0048 - 0x0000)
struct INTL_LI_BP_RegionTerms_C_TermItemNavigationUp final
{
public:
	class UUserWidget*                            TermIterm;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                FocusWidget;                                       // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         PreTermItemIndex;                                  // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16[0x2];                                       // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetActiveWidgetIndex_ReturnValue;         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue_1;                  // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F[0x1];                                       // 0x001F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetActiveWidgetIndex_ReturnValue_1;       // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue_2;                  // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_27[0x1];                                       // 0x0027(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UINTL_LI_BP_RegionTerms_TermItem_C*     CallFunc_GetNextTermItem_nextTermIterm;            // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTL_LI_BP_RegionTerms_C_TermItemNavigationUp) == 0x000008, "Wrong alignment on INTL_LI_BP_RegionTerms_C_TermItemNavigationUp");
static_assert(sizeof(INTL_LI_BP_RegionTerms_C_TermItemNavigationUp) == 0x000048, "Wrong size on INTL_LI_BP_RegionTerms_C_TermItemNavigationUp");
static_assert(offsetof(INTL_LI_BP_RegionTerms_C_TermItemNavigationUp, TermIterm) == 0x000000, "Member 'INTL_LI_BP_RegionTerms_C_TermItemNavigationUp::TermIterm' has a wrong offset!");
static_assert(offsetof(INTL_LI_BP_RegionTerms_C_TermItemNavigationUp, FocusWidget) == 0x000008, "Member 'INTL_LI_BP_RegionTerms_C_TermItemNavigationUp::FocusWidget' has a wrong offset!");
static_assert(offsetof(INTL_LI_BP_RegionTerms_C_TermItemNavigationUp, PreTermItemIndex) == 0x000010, "Member 'INTL_LI_BP_RegionTerms_C_TermItemNavigationUp::PreTermItemIndex' has a wrong offset!");
static_assert(offsetof(INTL_LI_BP_RegionTerms_C_TermItemNavigationUp, CallFunc_IsVisible_ReturnValue) == 0x000014, "Member 'INTL_LI_BP_RegionTerms_C_TermItemNavigationUp::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTL_LI_BP_RegionTerms_C_TermItemNavigationUp, CallFunc_IsValid_ReturnValue) == 0x000015, "Member 'INTL_LI_BP_RegionTerms_C_TermItemNavigationUp::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTL_LI_BP_RegionTerms_C_TermItemNavigationUp, CallFunc_GetActiveWidgetIndex_ReturnValue) == 0x000018, "Member 'INTL_LI_BP_RegionTerms_C_TermItemNavigationUp::CallFunc_GetActiveWidgetIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTL_LI_BP_RegionTerms_C_TermItemNavigationUp, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00001C, "Member 'INTL_LI_BP_RegionTerms_C_TermItemNavigationUp::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTL_LI_BP_RegionTerms_C_TermItemNavigationUp, CallFunc_IsVisible_ReturnValue_1) == 0x00001D, "Member 'INTL_LI_BP_RegionTerms_C_TermItemNavigationUp::CallFunc_IsVisible_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTL_LI_BP_RegionTerms_C_TermItemNavigationUp, CallFunc_BooleanAND_ReturnValue) == 0x00001E, "Member 'INTL_LI_BP_RegionTerms_C_TermItemNavigationUp::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTL_LI_BP_RegionTerms_C_TermItemNavigationUp, CallFunc_GetActiveWidgetIndex_ReturnValue_1) == 0x000020, "Member 'INTL_LI_BP_RegionTerms_C_TermItemNavigationUp::CallFunc_GetActiveWidgetIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTL_LI_BP_RegionTerms_C_TermItemNavigationUp, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000024, "Member 'INTL_LI_BP_RegionTerms_C_TermItemNavigationUp::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTL_LI_BP_RegionTerms_C_TermItemNavigationUp, CallFunc_IsVisible_ReturnValue_2) == 0x000025, "Member 'INTL_LI_BP_RegionTerms_C_TermItemNavigationUp::CallFunc_IsVisible_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(INTL_LI_BP_RegionTerms_C_TermItemNavigationUp, CallFunc_BooleanAND_ReturnValue_1) == 0x000026, "Member 'INTL_LI_BP_RegionTerms_C_TermItemNavigationUp::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTL_LI_BP_RegionTerms_C_TermItemNavigationUp, CallFunc_GetOwningPlayer_ReturnValue) == 0x000028, "Member 'INTL_LI_BP_RegionTerms_C_TermItemNavigationUp::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTL_LI_BP_RegionTerms_C_TermItemNavigationUp, CallFunc_Array_Find_ReturnValue) == 0x000030, "Member 'INTL_LI_BP_RegionTerms_C_TermItemNavigationUp::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTL_LI_BP_RegionTerms_C_TermItemNavigationUp, CallFunc_GetNextTermItem_nextTermIterm) == 0x000038, "Member 'INTL_LI_BP_RegionTerms_C_TermItemNavigationUp::CallFunc_GetNextTermItem_nextTermIterm' has a wrong offset!");
static_assert(offsetof(INTL_LI_BP_RegionTerms_C_TermItemNavigationUp, CallFunc_IsValid_ReturnValue_1) == 0x000040, "Member 'INTL_LI_BP_RegionTerms_C_TermItemNavigationUp::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

}

