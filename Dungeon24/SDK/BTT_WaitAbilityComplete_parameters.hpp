#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTT_WaitAbilityComplete

#include "Basic.hpp"

#include "AIModule_structs.hpp"


namespace SDK::Params
{

// Function BTT_WaitAbilityComplete.BTT_WaitAbilityComplete_C.CleanUp
// 0x0010 (0x0010 - 0x0000)
struct BTT_WaitAbilityComplete_C_CleanUp final
{
public:
	class AAIController*                          Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  Pawn;                                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_WaitAbilityComplete_C_CleanUp) == 0x000008, "Wrong alignment on BTT_WaitAbilityComplete_C_CleanUp");
static_assert(sizeof(BTT_WaitAbilityComplete_C_CleanUp) == 0x000010, "Wrong size on BTT_WaitAbilityComplete_C_CleanUp");
static_assert(offsetof(BTT_WaitAbilityComplete_C_CleanUp, Controller) == 0x000000, "Member 'BTT_WaitAbilityComplete_C_CleanUp::Controller' has a wrong offset!");
static_assert(offsetof(BTT_WaitAbilityComplete_C_CleanUp, Pawn) == 0x000008, "Member 'BTT_WaitAbilityComplete_C_CleanUp::Pawn' has a wrong offset!");

// Function BTT_WaitAbilityComplete.BTT_WaitAbilityComplete_C.ClearFocus
// 0x0008 (0x0008 - 0x0000)
struct BTT_WaitAbilityComplete_C_ClearFocus final
{
public:
	class AAIController*                          Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_WaitAbilityComplete_C_ClearFocus) == 0x000008, "Wrong alignment on BTT_WaitAbilityComplete_C_ClearFocus");
static_assert(sizeof(BTT_WaitAbilityComplete_C_ClearFocus) == 0x000008, "Wrong size on BTT_WaitAbilityComplete_C_ClearFocus");
static_assert(offsetof(BTT_WaitAbilityComplete_C_ClearFocus, Controller) == 0x000000, "Member 'BTT_WaitAbilityComplete_C_ClearFocus::Controller' has a wrong offset!");

// Function BTT_WaitAbilityComplete.BTT_WaitAbilityComplete_C.ExecuteUbergraph_BTT_WaitAbilityComplete
// 0x00A0 (0x00A0 - 0x0000)
struct BTT_WaitAbilityComplete_C_ExecuteUbergraph_BTT_WaitAbilityComplete final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_Event_OwnerController_2;                    // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn_2;                     // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue_1;     // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPathFollowingStatus                          CallFunc_GetMoveStatus_ReturnValue;                // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x001F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_Event_OwnerController_1;                    // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn_1;                     // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAIController*                          K2Node_CustomEvent_Controller_2;                   // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AAIController*                          K2Node_CustomEvent_Controller_1;                   // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetFocusActor_ReturnValue;                // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_63[0x5];                                       // 0x0063(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_CustomEvent_Controller;                     // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_CustomEvent_Pawn;                           // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AAIController*                          K2Node_Event_OwnerController;                      // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn;                       // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetBlackboardValueAsActor_ReturnValue;    // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast;          // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_WaitAbilityComplete_C_ExecuteUbergraph_BTT_WaitAbilityComplete) == 0x000008, "Wrong alignment on BTT_WaitAbilityComplete_C_ExecuteUbergraph_BTT_WaitAbilityComplete");
static_assert(sizeof(BTT_WaitAbilityComplete_C_ExecuteUbergraph_BTT_WaitAbilityComplete) == 0x0000A0, "Wrong size on BTT_WaitAbilityComplete_C_ExecuteUbergraph_BTT_WaitAbilityComplete");
static_assert(offsetof(BTT_WaitAbilityComplete_C_ExecuteUbergraph_BTT_WaitAbilityComplete, EntryPoint) == 0x000000, "Member 'BTT_WaitAbilityComplete_C_ExecuteUbergraph_BTT_WaitAbilityComplete::EntryPoint' has a wrong offset!");
static_assert(offsetof(BTT_WaitAbilityComplete_C_ExecuteUbergraph_BTT_WaitAbilityComplete, K2Node_Event_OwnerController_2) == 0x000008, "Member 'BTT_WaitAbilityComplete_C_ExecuteUbergraph_BTT_WaitAbilityComplete::K2Node_Event_OwnerController_2' has a wrong offset!");
static_assert(offsetof(BTT_WaitAbilityComplete_C_ExecuteUbergraph_BTT_WaitAbilityComplete, K2Node_Event_ControlledPawn_2) == 0x000010, "Member 'BTT_WaitAbilityComplete_C_ExecuteUbergraph_BTT_WaitAbilityComplete::K2Node_Event_ControlledPawn_2' has a wrong offset!");
static_assert(offsetof(BTT_WaitAbilityComplete_C_ExecuteUbergraph_BTT_WaitAbilityComplete, K2Node_Event_DeltaSeconds) == 0x000018, "Member 'BTT_WaitAbilityComplete_C_ExecuteUbergraph_BTT_WaitAbilityComplete::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BTT_WaitAbilityComplete_C_ExecuteUbergraph_BTT_WaitAbilityComplete, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x00001C, "Member 'BTT_WaitAbilityComplete_C_ExecuteUbergraph_BTT_WaitAbilityComplete::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_WaitAbilityComplete_C_ExecuteUbergraph_BTT_WaitAbilityComplete, CallFunc_HasMatchingGameplayTag_ReturnValue_1) == 0x00001D, "Member 'BTT_WaitAbilityComplete_C_ExecuteUbergraph_BTT_WaitAbilityComplete::CallFunc_HasMatchingGameplayTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTT_WaitAbilityComplete_C_ExecuteUbergraph_BTT_WaitAbilityComplete, CallFunc_GetMoveStatus_ReturnValue) == 0x00001E, "Member 'BTT_WaitAbilityComplete_C_ExecuteUbergraph_BTT_WaitAbilityComplete::CallFunc_GetMoveStatus_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_WaitAbilityComplete_C_ExecuteUbergraph_BTT_WaitAbilityComplete, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00001F, "Member 'BTT_WaitAbilityComplete_C_ExecuteUbergraph_BTT_WaitAbilityComplete::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_WaitAbilityComplete_C_ExecuteUbergraph_BTT_WaitAbilityComplete, CallFunc_BooleanAND_ReturnValue) == 0x000020, "Member 'BTT_WaitAbilityComplete_C_ExecuteUbergraph_BTT_WaitAbilityComplete::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_WaitAbilityComplete_C_ExecuteUbergraph_BTT_WaitAbilityComplete, K2Node_Event_OwnerController_1) == 0x000028, "Member 'BTT_WaitAbilityComplete_C_ExecuteUbergraph_BTT_WaitAbilityComplete::K2Node_Event_OwnerController_1' has a wrong offset!");
static_assert(offsetof(BTT_WaitAbilityComplete_C_ExecuteUbergraph_BTT_WaitAbilityComplete, K2Node_Event_ControlledPawn_1) == 0x000030, "Member 'BTT_WaitAbilityComplete_C_ExecuteUbergraph_BTT_WaitAbilityComplete::K2Node_Event_ControlledPawn_1' has a wrong offset!");
static_assert(offsetof(BTT_WaitAbilityComplete_C_ExecuteUbergraph_BTT_WaitAbilityComplete, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000038, "Member 'BTT_WaitAbilityComplete_C_ExecuteUbergraph_BTT_WaitAbilityComplete::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_WaitAbilityComplete_C_ExecuteUbergraph_BTT_WaitAbilityComplete, K2Node_CustomEvent_Controller_2) == 0x000040, "Member 'BTT_WaitAbilityComplete_C_ExecuteUbergraph_BTT_WaitAbilityComplete::K2Node_CustomEvent_Controller_2' has a wrong offset!");
static_assert(offsetof(BTT_WaitAbilityComplete_C_ExecuteUbergraph_BTT_WaitAbilityComplete, K2Node_CustomEvent_Controller_1) == 0x000048, "Member 'BTT_WaitAbilityComplete_C_ExecuteUbergraph_BTT_WaitAbilityComplete::K2Node_CustomEvent_Controller_1' has a wrong offset!");
static_assert(offsetof(BTT_WaitAbilityComplete_C_ExecuteUbergraph_BTT_WaitAbilityComplete, CallFunc_IsValid_ReturnValue) == 0x000050, "Member 'BTT_WaitAbilityComplete_C_ExecuteUbergraph_BTT_WaitAbilityComplete::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_WaitAbilityComplete_C_ExecuteUbergraph_BTT_WaitAbilityComplete, CallFunc_GetFocusActor_ReturnValue) == 0x000058, "Member 'BTT_WaitAbilityComplete_C_ExecuteUbergraph_BTT_WaitAbilityComplete::CallFunc_GetFocusActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_WaitAbilityComplete_C_ExecuteUbergraph_BTT_WaitAbilityComplete, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000060, "Member 'BTT_WaitAbilityComplete_C_ExecuteUbergraph_BTT_WaitAbilityComplete::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_WaitAbilityComplete_C_ExecuteUbergraph_BTT_WaitAbilityComplete, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000061, "Member 'BTT_WaitAbilityComplete_C_ExecuteUbergraph_BTT_WaitAbilityComplete::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_WaitAbilityComplete_C_ExecuteUbergraph_BTT_WaitAbilityComplete, CallFunc_IsValid_ReturnValue_1) == 0x000062, "Member 'BTT_WaitAbilityComplete_C_ExecuteUbergraph_BTT_WaitAbilityComplete::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTT_WaitAbilityComplete_C_ExecuteUbergraph_BTT_WaitAbilityComplete, K2Node_CustomEvent_Controller) == 0x000068, "Member 'BTT_WaitAbilityComplete_C_ExecuteUbergraph_BTT_WaitAbilityComplete::K2Node_CustomEvent_Controller' has a wrong offset!");
static_assert(offsetof(BTT_WaitAbilityComplete_C_ExecuteUbergraph_BTT_WaitAbilityComplete, K2Node_CustomEvent_Pawn) == 0x000070, "Member 'BTT_WaitAbilityComplete_C_ExecuteUbergraph_BTT_WaitAbilityComplete::K2Node_CustomEvent_Pawn' has a wrong offset!");
static_assert(offsetof(BTT_WaitAbilityComplete_C_ExecuteUbergraph_BTT_WaitAbilityComplete, K2Node_Event_OwnerController) == 0x000078, "Member 'BTT_WaitAbilityComplete_C_ExecuteUbergraph_BTT_WaitAbilityComplete::K2Node_Event_OwnerController' has a wrong offset!");
static_assert(offsetof(BTT_WaitAbilityComplete_C_ExecuteUbergraph_BTT_WaitAbilityComplete, K2Node_Event_ControlledPawn) == 0x000080, "Member 'BTT_WaitAbilityComplete_C_ExecuteUbergraph_BTT_WaitAbilityComplete::K2Node_Event_ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTT_WaitAbilityComplete_C_ExecuteUbergraph_BTT_WaitAbilityComplete, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000088, "Member 'BTT_WaitAbilityComplete_C_ExecuteUbergraph_BTT_WaitAbilityComplete::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_WaitAbilityComplete_C_ExecuteUbergraph_BTT_WaitAbilityComplete, CallFunc_GetBlackboardValueAsActor_ReturnValue) == 0x000090, "Member 'BTT_WaitAbilityComplete_C_ExecuteUbergraph_BTT_WaitAbilityComplete::CallFunc_GetBlackboardValueAsActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_WaitAbilityComplete_C_ExecuteUbergraph_BTT_WaitAbilityComplete, CallFunc_Add_DoubleDouble_B_ImplicitCast) == 0x000098, "Member 'BTT_WaitAbilityComplete_C_ExecuteUbergraph_BTT_WaitAbilityComplete::CallFunc_Add_DoubleDouble_B_ImplicitCast' has a wrong offset!");

// Function BTT_WaitAbilityComplete.BTT_WaitAbilityComplete_C.ReceiveAbortAI
// 0x0010 (0x0010 - 0x0000)
struct BTT_WaitAbilityComplete_C_ReceiveAbortAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_WaitAbilityComplete_C_ReceiveAbortAI) == 0x000008, "Wrong alignment on BTT_WaitAbilityComplete_C_ReceiveAbortAI");
static_assert(sizeof(BTT_WaitAbilityComplete_C_ReceiveAbortAI) == 0x000010, "Wrong size on BTT_WaitAbilityComplete_C_ReceiveAbortAI");
static_assert(offsetof(BTT_WaitAbilityComplete_C_ReceiveAbortAI, OwnerController) == 0x000000, "Member 'BTT_WaitAbilityComplete_C_ReceiveAbortAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTT_WaitAbilityComplete_C_ReceiveAbortAI, ControlledPawn) == 0x000008, "Member 'BTT_WaitAbilityComplete_C_ReceiveAbortAI::ControlledPawn' has a wrong offset!");

// Function BTT_WaitAbilityComplete.BTT_WaitAbilityComplete_C.ReceiveExecuteAI
// 0x0010 (0x0010 - 0x0000)
struct BTT_WaitAbilityComplete_C_ReceiveExecuteAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_WaitAbilityComplete_C_ReceiveExecuteAI) == 0x000008, "Wrong alignment on BTT_WaitAbilityComplete_C_ReceiveExecuteAI");
static_assert(sizeof(BTT_WaitAbilityComplete_C_ReceiveExecuteAI) == 0x000010, "Wrong size on BTT_WaitAbilityComplete_C_ReceiveExecuteAI");
static_assert(offsetof(BTT_WaitAbilityComplete_C_ReceiveExecuteAI, OwnerController) == 0x000000, "Member 'BTT_WaitAbilityComplete_C_ReceiveExecuteAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTT_WaitAbilityComplete_C_ReceiveExecuteAI, ControlledPawn) == 0x000008, "Member 'BTT_WaitAbilityComplete_C_ReceiveExecuteAI::ControlledPawn' has a wrong offset!");

// Function BTT_WaitAbilityComplete.BTT_WaitAbilityComplete_C.ReceiveTickAI
// 0x0018 (0x0018 - 0x0000)
struct BTT_WaitAbilityComplete_C_ReceiveTickAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaSeconds;                                      // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_WaitAbilityComplete_C_ReceiveTickAI) == 0x000008, "Wrong alignment on BTT_WaitAbilityComplete_C_ReceiveTickAI");
static_assert(sizeof(BTT_WaitAbilityComplete_C_ReceiveTickAI) == 0x000018, "Wrong size on BTT_WaitAbilityComplete_C_ReceiveTickAI");
static_assert(offsetof(BTT_WaitAbilityComplete_C_ReceiveTickAI, OwnerController) == 0x000000, "Member 'BTT_WaitAbilityComplete_C_ReceiveTickAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTT_WaitAbilityComplete_C_ReceiveTickAI, ControlledPawn) == 0x000008, "Member 'BTT_WaitAbilityComplete_C_ReceiveTickAI::ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTT_WaitAbilityComplete_C_ReceiveTickAI, DeltaSeconds) == 0x000010, "Member 'BTT_WaitAbilityComplete_C_ReceiveTickAI::DeltaSeconds' has a wrong offset!");

// Function BTT_WaitAbilityComplete.BTT_WaitAbilityComplete_C.SetFocus
// 0x0008 (0x0008 - 0x0000)
struct BTT_WaitAbilityComplete_C_SetFocus final
{
public:
	class AAIController*                          Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_WaitAbilityComplete_C_SetFocus) == 0x000008, "Wrong alignment on BTT_WaitAbilityComplete_C_SetFocus");
static_assert(sizeof(BTT_WaitAbilityComplete_C_SetFocus) == 0x000008, "Wrong size on BTT_WaitAbilityComplete_C_SetFocus");
static_assert(offsetof(BTT_WaitAbilityComplete_C_SetFocus, Controller) == 0x000000, "Member 'BTT_WaitAbilityComplete_C_SetFocus::Controller' has a wrong offset!");

}

