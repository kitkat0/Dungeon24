#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_TGF_Character_Base

#include "Basic.hpp"

#include "LyraGame_structs.hpp"
#include "LyraGame_classes.hpp"
#include "Engine_structs.hpp"
#include "ABP_TGF_Character_Base_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "AnimStruct_DirectionContainer_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_TGF_Character_Base.ABP_TGF_Character_Base_C
// 0x2970 (0x2DB0 - 0x0440)
class UABP_TGF_Character_Base_C final : public ULyraAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0440(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct ABP_TGF_Character_Base::FAnimBlueprintGeneratedMutableData __AnimBlueprintMutables;                           // 0x0448(0x0003)(HasGetValueTypeHash)
	uint8                                         Pad_44B[0x5];                                      // 0x044B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0450(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0458(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root_15;                             // 0x0460(0x0020)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_9;                   // 0x0480(0x00C8)()
	struct FAnimNode_Root                         AnimGraphNode_Root_14;                             // 0x0548(0x0020)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_8;                   // 0x0568(0x00C8)()
	struct FAnimNode_Root                         AnimGraphNode_Root_13;                             // 0x0630(0x0020)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_7;                   // 0x0650(0x00C8)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_6;                   // 0x0718(0x00C8)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_5;                   // 0x07E0(0x00C8)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_4;                   // 0x08A8(0x00C8)()
	struct FAnimNode_Root                         AnimGraphNode_Root_12;                             // 0x0970(0x0020)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_3;                   // 0x0990(0x00C8)()
	struct FAnimNode_Root                         AnimGraphNode_Root_11;                             // 0x0A58(0x0020)()
	struct FAnimNode_Root                         AnimGraphNode_Root_10;                             // 0x0A78(0x0020)()
	struct FAnimNode_Root                         AnimGraphNode_Root_9;                              // 0x0A98(0x0020)()
	struct FAnimNode_Root                         AnimGraphNode_Root_8;                              // 0x0AB8(0x0020)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_2;                   // 0x0AD8(0x00C8)()
	struct FAnimNode_Root                         AnimGraphNode_Root_7;                              // 0x0BA0(0x0020)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_1;                   // 0x0BC0(0x00C8)()
	struct FAnimNode_Root                         AnimGraphNode_Root_6;                              // 0x0C88(0x0020)()
	struct FAnimNode_Root                         AnimGraphNode_Root_5;                              // 0x0CA8(0x0020)()
	struct FAnimNode_Root                         AnimGraphNode_Root_4;                              // 0x0CC8(0x0020)()
	struct FAnimNode_Root                         AnimGraphNode_Root_3;                              // 0x0CE8(0x0020)()
	struct FAnimNode_Root                         AnimGraphNode_Root_2;                              // 0x0D08(0x0020)()
	struct FAnimNode_Root                         AnimGraphNode_Root_1;                              // 0x0D28(0x0020)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose;                     // 0x0D48(0x00C8)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_3;                    // 0x0E10(0x0108)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_1;                   // 0x0F18(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_7;                     // 0x0F60(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_6;                     // 0x0F88(0x0028)()
	struct FAnimNode_Inertialization              AnimGraphNode_Inertialization;                     // 0x0FB0(0x0100)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x10B0(0x0020)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_12;                 // 0x10D0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_11;                 // 0x10F8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_10;                 // 0x1120(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_9;                  // 0x1148(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_8;                  // 0x1170(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_7;                  // 0x1198(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_6;                  // 0x11C0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x11E8(0x0028)()
	struct FAnimNode_LinkedAnimLayer              AnimGraphNode_LinkedAnimLayer_14;                  // 0x1210(0x00C8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_8;                       // 0x12D8(0x0020)()
	struct FAnimNode_LinkedAnimLayer              AnimGraphNode_LinkedAnimLayer_13;                  // 0x12F8(0x00C8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_7;                       // 0x13C0(0x0020)()
	struct FAnimNode_LinkedAnimLayer              AnimGraphNode_LinkedAnimLayer_12;                  // 0x13E0(0x00C8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_6;                       // 0x14A8(0x0020)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x14C8(0x0028)()
	struct FAnimNode_LinkedAnimLayer              AnimGraphNode_LinkedAnimLayer_11;                  // 0x14F0(0x00C8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_5;                       // 0x15B8(0x0020)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x15D8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x1600(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x1628(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x1650(0x0028)()
	struct FAnimNode_LinkedAnimLayer              AnimGraphNode_LinkedAnimLayer_10;                  // 0x1678(0x00C8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_4;                       // 0x1740(0x0020)()
	struct FAnimNode_LinkedAnimLayer              AnimGraphNode_LinkedAnimLayer_9;                   // 0x1760(0x00C8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x1828(0x0020)()
	struct FAnimNode_LinkedAnimLayer              AnimGraphNode_LinkedAnimLayer_8;                   // 0x1848(0x00C8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x1910(0x0020)()
	struct FAnimNode_LinkedAnimLayer              AnimGraphNode_LinkedAnimLayer_7;                   // 0x1930(0x00C8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x19F8(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_1;                      // 0x1A18(0x00C8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x1AE0(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x1B00(0x00C8)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_9;                              // 0x1BC8(0x0048)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_8;                              // 0x1C10(0x0048)()
	struct FAnimNode_LinkedAnimLayer              AnimGraphNode_LinkedAnimLayer_6;                   // 0x1C58(0x00C8)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_2;                    // 0x1D20(0x0108)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_5;                     // 0x1E28(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_4;                     // 0x1E50(0x0028)()
	struct FAnimNode_RefPose                      AnimGraphNode_IdentityPose_2;                      // 0x1E78(0x0010)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_7;                              // 0x1E88(0x0048)()
	struct FAnimNode_LinkedAnimLayer              AnimGraphNode_LinkedAnimLayer_5;                   // 0x1ED0(0x00C8)()
	struct FAnimNode_LinkedAnimLayer              AnimGraphNode_LinkedAnimLayer_4;                   // 0x1F98(0x00C8)()
	struct FAnimNode_LinkedAnimLayer              AnimGraphNode_LinkedAnimLayer_3;                   // 0x2060(0x00C8)()
	struct FAnimNode_LinkedAnimLayer              AnimGraphNode_LinkedAnimLayer_2;                   // 0x2128(0x00C8)()
	struct FAnimNode_LinkedAnimLayer              AnimGraphNode_LinkedAnimLayer_1;                   // 0x21F0(0x00C8)()
	struct FAnimNode_LinkedAnimLayer              AnimGraphNode_LinkedAnimLayer;                     // 0x22B8(0x00C8)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_6;                              // 0x2380(0x0048)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_5;                              // 0x23C8(0x0048)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_4;                              // 0x2410(0x0048)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_3;                              // 0x2458(0x0048)()
	struct FAnimNode_RefPose                      AnimGraphNode_IdentityPose_1;                      // 0x24A0(0x0010)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x24B0(0x0048)()
	struct FAnimNode_PoseSnapshot                 AnimGraphNode_PoseSnapshot;                        // 0x24F8(0x0090)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_1;                  // 0x2588(0x00E0)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_1;                    // 0x2668(0x0108)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_3;                     // 0x2770(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_2;                     // 0x2798(0x0028)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_2;                              // 0x27C0(0x0048)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_1;                              // 0x2808(0x0048)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x2850(0x0048)()
	struct FAnimNode_RefPose                      AnimGraphNode_IdentityPose;                        // 0x2898(0x0010)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive;                       // 0x28A8(0x00C8)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend;                    // 0x2970(0x00E0)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x2A50(0x0108)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x2B58(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x2B80(0x0028)()
	bool                                          K2Node_PropertyAccess_17;                          // 0x2BA8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2BA9[0x7];                                     // 0x2BA9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_PropertyAccess_16;                          // 0x2BB0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               K2Node_PropertyAccess_15;                          // 0x2BB8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_PropertyAccess_14;                          // 0x2BD0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2BD1[0x7];                                     // 0x2BD1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               K2Node_PropertyAccess_13;                          // 0x2BD8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               K2Node_PropertyAccess_12;                          // 0x2BF0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               K2Node_PropertyAccess_11;                          // 0x2C08(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                K2Node_PropertyAccess_9;                           // 0x2C20(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETgfDeathState                                K2Node_PropertyAccess_8;                           // 0x2C38(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAnimConfigDirection                          K2Node_PropertyAccess_7;                           // 0x2C39(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_PropertyAccess_6;                           // 0x2C3A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C3B[0x1];                                     // 0x2C3B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_PropertyAccess_5;                           // 0x2C3C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_PropertyAccess_4;                           // 0x2C40(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_PropertyAccess_3;                           // 0x2C41(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_PropertyAccess_2;                           // 0x2C42(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          __CustomProperty_bDeath_7B79F33A487FD5B768F999875CB3E863; // 0x2C43(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C44[0x4];                                     // 0x2C44(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        __CustomProperty_AimYaw_E475ECE746CBC124125BDE8344E63969; // 0x2C48(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        __CustomProperty_AimPitch_E475ECE746CBC124125BDE8344E63969; // 0x2C50(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                WorldVelocity;                                     // 0x2C58(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               WorldRotation;                                     // 0x2C70(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bIsCrouching;                                      // 0x2C88(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsFalling;                                        // 0x2C89(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C8A[0x6];                                     // 0x2C8A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                WorldVelocity2D;                                   // 0x2C90(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAnimConfigDirection8                         VelocityDirection;                                 // 0x2CA8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsOnGround;                                       // 0x2CA9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bHasVelocity;                                      // 0x2CAA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2CAB[0x5];                                     // 0x2CAB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        AimPitch;                                          // 0x2CB0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        AimYaw;                                            // 0x2CB8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         FootstepType;                                      // 0x2CC0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2CC4[0x4];                                     // 0x2CC4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        TimeToJumpApex;                                    // 0x2CC8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LowerBodyAddtiveRate;                              // 0x2CD0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bBasePoseAdditiveSplit;                            // 0x2CD8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2CD9[0x7];                                     // 0x2CD9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        BlendPoseDefaultTime;                              // 0x2CE0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bCrouchingStateChange;                             // 0x2CE8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsDeath;                                          // 0x2CE9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAnimConfigDirection                          DeathDirection;                                    // 0x2CEA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsDeathFinish;                                    // 0x2CEB(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBlendingUtilParamsCache               BlendingParams;                                    // 0x2CEC(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bGameplayTagRebounding;                            // 0x2CF8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2CF9[0x7];                                     // 0x2CF9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                WeaponHandOffsetLocation;                          // 0x2D00(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bGameplayTagADS;                                   // 0x2D18(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bCachedTagADS;                                     // 0x2D19(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bADSStateChange;                                   // 0x2D1A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D1B[0x5];                                     // 0x2D1B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimStruct_DirectionContainer         DeathAnim;                                         // 0x2D20(0x0040)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<double>                                AdditiveRateConfigValues;                          // 0x2D60(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	double                                        RotationYawSpeed;                                  // 0x2D70(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        RotationPitchSpeed;                                // 0x2D78(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAnimConfigDirection8                         AccelerationDirection;                             // 0x2D80(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bGameplayTagStaffFireADS;                          // 0x2D81(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasAcceleration;                                   // 0x2D82(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D83[0x5];                                     // 0x2D83(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Accleration;                                       // 0x2D88(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bGameplayTagDelayFreeze;                           // 0x2DA0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(struct FPoseLink* Param_AnimGraph);
	void AnimNotify_EnterDeathLoopState();
	void BlueprintInitializeAnimation();
	void BlueprintThreadSafeUpdateAnimation(float DeltaTime);
	bool DisableInertBlend();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_TGF_Character_Base_AnimGraphNode_PoseSnapshot_75424ACF481BA0E097BECDA7F453CEAE();
	void ExecuteUbergraph_ABP_TGF_Character_Base(int32 EntryPoint);
	void FullBody_Additive(const struct FPoseLink& BasePose, struct FPoseLink* Param_FullBody_Additive);
	void FullBody_Aiming(const struct FPoseLink& InPose, double Param_AimPitch, double Param_AimYaw, struct FPoseLink* Param_FullBody_Aiming);
	void FullBody_ApexState(struct FPoseLink* Param_FullBody_ApexState);
	void FullBody_CrouchingEndState(struct FPoseLink* Param_FullBody_CrouchingEndState);
	void FullBody_CrouchingIdleState(struct FPoseLink* Param_FullBody_CrouchingIdleState);
	void FullBody_CrouchingStartState(struct FPoseLink* Param_FullBody_CrouchingStartState);
	void FullBody_DeathLayer(const struct FPoseLink& NormalPose, bool bDeath, struct FPoseLink* Param_FullBody_DeathLayer);
	void FullBody_FallState(struct FPoseLink* Param_FullBody_FallState);
	void FullBody_IdleState(struct FPoseLink* Param_FullBody_IdleState);
	void FullBody_JumpStartState(struct FPoseLink* Param_FullBody_JumpStartState);
	void FullBody_LandState(struct FPoseLink* Param_FullBody_LandState);
	void FullBody_LegIK(const struct FPoseLink& InFKPose, struct FPoseLink* Param_FullBody_LegIK);
	void FullBody_PostProcess(const struct FPoseLink& FullBodyPose, struct FPoseLink* Param_FullBody_PostProcess);
	double GetAdditiveRateValue();
	bool GetFullBodyCurveValue();
	class ABP_Tgf_Character_Default_C* GetLyraCharacterThreadSafe();
	bool GetNeedFreeze();
	bool GetShouldLandEnding();
	void InertBlendLayer(const struct FPoseLink& InBlendPose, struct FPoseLink* Param_InertBlendLayer);
	void LowerBodyUpperBodySplit(const struct FPoseLink& InBaseLocomition, const struct FPoseLink& InBaseUpperBodyMontage, const struct FPoseLink& InAdditivePose, const struct FPoseLink& DefaultAdditive, struct FPoseLink* Param_LowerBodyUpperBodySplit);
	void UpdateAdditiveRate(double DeltaTime);
	void UpdateADSState();
	void UpdateAimingData(double DeltaTime);
	void UpdateCharacterState();
	void UpdateMovingVelocity();
	void UpdateRotationData(double DeltaTime);
	void UpdateWeaponInfo();

	float GetCurrentDeathAnimationLength() const;
	float GetDeathAnimationLength(EAnimConfigDirection Param_DeathDirection) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_TGF_Character_Base_C">();
	}
	static class UABP_TGF_Character_Base_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_TGF_Character_Base_C>();
	}
};
static_assert(alignof(UABP_TGF_Character_Base_C) == 0x000010, "Wrong alignment on UABP_TGF_Character_Base_C");
static_assert(sizeof(UABP_TGF_Character_Base_C) == 0x002DB0, "Wrong size on UABP_TGF_Character_Base_C");
static_assert(offsetof(UABP_TGF_Character_Base_C, UberGraphFrame) == 0x000440, "Member 'UABP_TGF_Character_Base_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, __AnimBlueprintMutables) == 0x000448, "Member 'UABP_TGF_Character_Base_C::__AnimBlueprintMutables' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, AnimBlueprintExtension_PropertyAccess) == 0x000450, "Member 'UABP_TGF_Character_Base_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, AnimBlueprintExtension_Base) == 0x000458, "Member 'UABP_TGF_Character_Base_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, AnimGraphNode_Root_15) == 0x000460, "Member 'UABP_TGF_Character_Base_C::AnimGraphNode_Root_15' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, AnimGraphNode_LinkedInputPose_9) == 0x000480, "Member 'UABP_TGF_Character_Base_C::AnimGraphNode_LinkedInputPose_9' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, AnimGraphNode_Root_14) == 0x000548, "Member 'UABP_TGF_Character_Base_C::AnimGraphNode_Root_14' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, AnimGraphNode_LinkedInputPose_8) == 0x000568, "Member 'UABP_TGF_Character_Base_C::AnimGraphNode_LinkedInputPose_8' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, AnimGraphNode_Root_13) == 0x000630, "Member 'UABP_TGF_Character_Base_C::AnimGraphNode_Root_13' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, AnimGraphNode_LinkedInputPose_7) == 0x000650, "Member 'UABP_TGF_Character_Base_C::AnimGraphNode_LinkedInputPose_7' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, AnimGraphNode_LinkedInputPose_6) == 0x000718, "Member 'UABP_TGF_Character_Base_C::AnimGraphNode_LinkedInputPose_6' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, AnimGraphNode_LinkedInputPose_5) == 0x0007E0, "Member 'UABP_TGF_Character_Base_C::AnimGraphNode_LinkedInputPose_5' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, AnimGraphNode_LinkedInputPose_4) == 0x0008A8, "Member 'UABP_TGF_Character_Base_C::AnimGraphNode_LinkedInputPose_4' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, AnimGraphNode_Root_12) == 0x000970, "Member 'UABP_TGF_Character_Base_C::AnimGraphNode_Root_12' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, AnimGraphNode_LinkedInputPose_3) == 0x000990, "Member 'UABP_TGF_Character_Base_C::AnimGraphNode_LinkedInputPose_3' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, AnimGraphNode_Root_11) == 0x000A58, "Member 'UABP_TGF_Character_Base_C::AnimGraphNode_Root_11' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, AnimGraphNode_Root_10) == 0x000A78, "Member 'UABP_TGF_Character_Base_C::AnimGraphNode_Root_10' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, AnimGraphNode_Root_9) == 0x000A98, "Member 'UABP_TGF_Character_Base_C::AnimGraphNode_Root_9' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, AnimGraphNode_Root_8) == 0x000AB8, "Member 'UABP_TGF_Character_Base_C::AnimGraphNode_Root_8' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, AnimGraphNode_LinkedInputPose_2) == 0x000AD8, "Member 'UABP_TGF_Character_Base_C::AnimGraphNode_LinkedInputPose_2' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, AnimGraphNode_Root_7) == 0x000BA0, "Member 'UABP_TGF_Character_Base_C::AnimGraphNode_Root_7' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, AnimGraphNode_LinkedInputPose_1) == 0x000BC0, "Member 'UABP_TGF_Character_Base_C::AnimGraphNode_LinkedInputPose_1' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, AnimGraphNode_Root_6) == 0x000C88, "Member 'UABP_TGF_Character_Base_C::AnimGraphNode_Root_6' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, AnimGraphNode_Root_5) == 0x000CA8, "Member 'UABP_TGF_Character_Base_C::AnimGraphNode_Root_5' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, AnimGraphNode_Root_4) == 0x000CC8, "Member 'UABP_TGF_Character_Base_C::AnimGraphNode_Root_4' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, AnimGraphNode_Root_3) == 0x000CE8, "Member 'UABP_TGF_Character_Base_C::AnimGraphNode_Root_3' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, AnimGraphNode_Root_2) == 0x000D08, "Member 'UABP_TGF_Character_Base_C::AnimGraphNode_Root_2' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, AnimGraphNode_Root_1) == 0x000D28, "Member 'UABP_TGF_Character_Base_C::AnimGraphNode_Root_1' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, AnimGraphNode_LinkedInputPose) == 0x000D48, "Member 'UABP_TGF_Character_Base_C::AnimGraphNode_LinkedInputPose' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, AnimGraphNode_SaveCachedPose_3) == 0x000E10, "Member 'UABP_TGF_Character_Base_C::AnimGraphNode_SaveCachedPose_3' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, AnimGraphNode_BlendListByBool_1) == 0x000F18, "Member 'UABP_TGF_Character_Base_C::AnimGraphNode_BlendListByBool_1' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, AnimGraphNode_UseCachedPose_7) == 0x000F60, "Member 'UABP_TGF_Character_Base_C::AnimGraphNode_UseCachedPose_7' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, AnimGraphNode_UseCachedPose_6) == 0x000F88, "Member 'UABP_TGF_Character_Base_C::AnimGraphNode_UseCachedPose_6' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, AnimGraphNode_Inertialization) == 0x000FB0, "Member 'UABP_TGF_Character_Base_C::AnimGraphNode_Inertialization' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, AnimGraphNode_Root) == 0x0010B0, "Member 'UABP_TGF_Character_Base_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, AnimGraphNode_TransitionResult_12) == 0x0010D0, "Member 'UABP_TGF_Character_Base_C::AnimGraphNode_TransitionResult_12' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, AnimGraphNode_TransitionResult_11) == 0x0010F8, "Member 'UABP_TGF_Character_Base_C::AnimGraphNode_TransitionResult_11' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, AnimGraphNode_TransitionResult_10) == 0x001120, "Member 'UABP_TGF_Character_Base_C::AnimGraphNode_TransitionResult_10' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, AnimGraphNode_TransitionResult_9) == 0x001148, "Member 'UABP_TGF_Character_Base_C::AnimGraphNode_TransitionResult_9' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, AnimGraphNode_TransitionResult_8) == 0x001170, "Member 'UABP_TGF_Character_Base_C::AnimGraphNode_TransitionResult_8' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, AnimGraphNode_TransitionResult_7) == 0x001198, "Member 'UABP_TGF_Character_Base_C::AnimGraphNode_TransitionResult_7' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, AnimGraphNode_TransitionResult_6) == 0x0011C0, "Member 'UABP_TGF_Character_Base_C::AnimGraphNode_TransitionResult_6' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, AnimGraphNode_TransitionResult_5) == 0x0011E8, "Member 'UABP_TGF_Character_Base_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, AnimGraphNode_LinkedAnimLayer_14) == 0x001210, "Member 'UABP_TGF_Character_Base_C::AnimGraphNode_LinkedAnimLayer_14' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, AnimGraphNode_StateResult_8) == 0x0012D8, "Member 'UABP_TGF_Character_Base_C::AnimGraphNode_StateResult_8' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, AnimGraphNode_LinkedAnimLayer_13) == 0x0012F8, "Member 'UABP_TGF_Character_Base_C::AnimGraphNode_LinkedAnimLayer_13' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, AnimGraphNode_StateResult_7) == 0x0013C0, "Member 'UABP_TGF_Character_Base_C::AnimGraphNode_StateResult_7' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, AnimGraphNode_LinkedAnimLayer_12) == 0x0013E0, "Member 'UABP_TGF_Character_Base_C::AnimGraphNode_LinkedAnimLayer_12' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, AnimGraphNode_StateResult_6) == 0x0014A8, "Member 'UABP_TGF_Character_Base_C::AnimGraphNode_StateResult_6' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, AnimGraphNode_TransitionResult_4) == 0x0014C8, "Member 'UABP_TGF_Character_Base_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, AnimGraphNode_LinkedAnimLayer_11) == 0x0014F0, "Member 'UABP_TGF_Character_Base_C::AnimGraphNode_LinkedAnimLayer_11' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, AnimGraphNode_StateResult_5) == 0x0015B8, "Member 'UABP_TGF_Character_Base_C::AnimGraphNode_StateResult_5' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, AnimGraphNode_TransitionResult_3) == 0x0015D8, "Member 'UABP_TGF_Character_Base_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, AnimGraphNode_TransitionResult_2) == 0x001600, "Member 'UABP_TGF_Character_Base_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, AnimGraphNode_TransitionResult_1) == 0x001628, "Member 'UABP_TGF_Character_Base_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, AnimGraphNode_TransitionResult) == 0x001650, "Member 'UABP_TGF_Character_Base_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, AnimGraphNode_LinkedAnimLayer_10) == 0x001678, "Member 'UABP_TGF_Character_Base_C::AnimGraphNode_LinkedAnimLayer_10' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, AnimGraphNode_StateResult_4) == 0x001740, "Member 'UABP_TGF_Character_Base_C::AnimGraphNode_StateResult_4' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, AnimGraphNode_LinkedAnimLayer_9) == 0x001760, "Member 'UABP_TGF_Character_Base_C::AnimGraphNode_LinkedAnimLayer_9' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, AnimGraphNode_StateResult_3) == 0x001828, "Member 'UABP_TGF_Character_Base_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, AnimGraphNode_LinkedAnimLayer_8) == 0x001848, "Member 'UABP_TGF_Character_Base_C::AnimGraphNode_LinkedAnimLayer_8' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, AnimGraphNode_StateResult_2) == 0x001910, "Member 'UABP_TGF_Character_Base_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, AnimGraphNode_LinkedAnimLayer_7) == 0x001930, "Member 'UABP_TGF_Character_Base_C::AnimGraphNode_LinkedAnimLayer_7' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, AnimGraphNode_StateResult_1) == 0x0019F8, "Member 'UABP_TGF_Character_Base_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, AnimGraphNode_StateMachine_1) == 0x001A18, "Member 'UABP_TGF_Character_Base_C::AnimGraphNode_StateMachine_1' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, AnimGraphNode_StateResult) == 0x001AE0, "Member 'UABP_TGF_Character_Base_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, AnimGraphNode_StateMachine) == 0x001B00, "Member 'UABP_TGF_Character_Base_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, AnimGraphNode_Slot_9) == 0x001BC8, "Member 'UABP_TGF_Character_Base_C::AnimGraphNode_Slot_9' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, AnimGraphNode_Slot_8) == 0x001C10, "Member 'UABP_TGF_Character_Base_C::AnimGraphNode_Slot_8' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, AnimGraphNode_LinkedAnimLayer_6) == 0x001C58, "Member 'UABP_TGF_Character_Base_C::AnimGraphNode_LinkedAnimLayer_6' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, AnimGraphNode_SaveCachedPose_2) == 0x001D20, "Member 'UABP_TGF_Character_Base_C::AnimGraphNode_SaveCachedPose_2' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, AnimGraphNode_UseCachedPose_5) == 0x001E28, "Member 'UABP_TGF_Character_Base_C::AnimGraphNode_UseCachedPose_5' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, AnimGraphNode_UseCachedPose_4) == 0x001E50, "Member 'UABP_TGF_Character_Base_C::AnimGraphNode_UseCachedPose_4' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, AnimGraphNode_IdentityPose_2) == 0x001E78, "Member 'UABP_TGF_Character_Base_C::AnimGraphNode_IdentityPose_2' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, AnimGraphNode_Slot_7) == 0x001E88, "Member 'UABP_TGF_Character_Base_C::AnimGraphNode_Slot_7' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, AnimGraphNode_LinkedAnimLayer_5) == 0x001ED0, "Member 'UABP_TGF_Character_Base_C::AnimGraphNode_LinkedAnimLayer_5' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, AnimGraphNode_LinkedAnimLayer_4) == 0x001F98, "Member 'UABP_TGF_Character_Base_C::AnimGraphNode_LinkedAnimLayer_4' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, AnimGraphNode_LinkedAnimLayer_3) == 0x002060, "Member 'UABP_TGF_Character_Base_C::AnimGraphNode_LinkedAnimLayer_3' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, AnimGraphNode_LinkedAnimLayer_2) == 0x002128, "Member 'UABP_TGF_Character_Base_C::AnimGraphNode_LinkedAnimLayer_2' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, AnimGraphNode_LinkedAnimLayer_1) == 0x0021F0, "Member 'UABP_TGF_Character_Base_C::AnimGraphNode_LinkedAnimLayer_1' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, AnimGraphNode_LinkedAnimLayer) == 0x0022B8, "Member 'UABP_TGF_Character_Base_C::AnimGraphNode_LinkedAnimLayer' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, AnimGraphNode_Slot_6) == 0x002380, "Member 'UABP_TGF_Character_Base_C::AnimGraphNode_Slot_6' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, AnimGraphNode_Slot_5) == 0x0023C8, "Member 'UABP_TGF_Character_Base_C::AnimGraphNode_Slot_5' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, AnimGraphNode_Slot_4) == 0x002410, "Member 'UABP_TGF_Character_Base_C::AnimGraphNode_Slot_4' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, AnimGraphNode_Slot_3) == 0x002458, "Member 'UABP_TGF_Character_Base_C::AnimGraphNode_Slot_3' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, AnimGraphNode_IdentityPose_1) == 0x0024A0, "Member 'UABP_TGF_Character_Base_C::AnimGraphNode_IdentityPose_1' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, AnimGraphNode_BlendListByBool) == 0x0024B0, "Member 'UABP_TGF_Character_Base_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, AnimGraphNode_PoseSnapshot) == 0x0024F8, "Member 'UABP_TGF_Character_Base_C::AnimGraphNode_PoseSnapshot' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, AnimGraphNode_LayeredBoneBlend_1) == 0x002588, "Member 'UABP_TGF_Character_Base_C::AnimGraphNode_LayeredBoneBlend_1' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, AnimGraphNode_SaveCachedPose_1) == 0x002668, "Member 'UABP_TGF_Character_Base_C::AnimGraphNode_SaveCachedPose_1' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, AnimGraphNode_UseCachedPose_3) == 0x002770, "Member 'UABP_TGF_Character_Base_C::AnimGraphNode_UseCachedPose_3' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, AnimGraphNode_UseCachedPose_2) == 0x002798, "Member 'UABP_TGF_Character_Base_C::AnimGraphNode_UseCachedPose_2' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, AnimGraphNode_Slot_2) == 0x0027C0, "Member 'UABP_TGF_Character_Base_C::AnimGraphNode_Slot_2' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, AnimGraphNode_Slot_1) == 0x002808, "Member 'UABP_TGF_Character_Base_C::AnimGraphNode_Slot_1' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, AnimGraphNode_Slot) == 0x002850, "Member 'UABP_TGF_Character_Base_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, AnimGraphNode_IdentityPose) == 0x002898, "Member 'UABP_TGF_Character_Base_C::AnimGraphNode_IdentityPose' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, AnimGraphNode_ApplyAdditive) == 0x0028A8, "Member 'UABP_TGF_Character_Base_C::AnimGraphNode_ApplyAdditive' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, AnimGraphNode_LayeredBoneBlend) == 0x002970, "Member 'UABP_TGF_Character_Base_C::AnimGraphNode_LayeredBoneBlend' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, AnimGraphNode_SaveCachedPose) == 0x002A50, "Member 'UABP_TGF_Character_Base_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, AnimGraphNode_UseCachedPose_1) == 0x002B58, "Member 'UABP_TGF_Character_Base_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, AnimGraphNode_UseCachedPose) == 0x002B80, "Member 'UABP_TGF_Character_Base_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, K2Node_PropertyAccess_17) == 0x002BA8, "Member 'UABP_TGF_Character_Base_C::K2Node_PropertyAccess_17' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, K2Node_PropertyAccess_16) == 0x002BB0, "Member 'UABP_TGF_Character_Base_C::K2Node_PropertyAccess_16' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, K2Node_PropertyAccess_15) == 0x002BB8, "Member 'UABP_TGF_Character_Base_C::K2Node_PropertyAccess_15' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, K2Node_PropertyAccess_14) == 0x002BD0, "Member 'UABP_TGF_Character_Base_C::K2Node_PropertyAccess_14' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, K2Node_PropertyAccess_13) == 0x002BD8, "Member 'UABP_TGF_Character_Base_C::K2Node_PropertyAccess_13' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, K2Node_PropertyAccess_12) == 0x002BF0, "Member 'UABP_TGF_Character_Base_C::K2Node_PropertyAccess_12' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, K2Node_PropertyAccess_11) == 0x002C08, "Member 'UABP_TGF_Character_Base_C::K2Node_PropertyAccess_11' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, K2Node_PropertyAccess_9) == 0x002C20, "Member 'UABP_TGF_Character_Base_C::K2Node_PropertyAccess_9' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, K2Node_PropertyAccess_8) == 0x002C38, "Member 'UABP_TGF_Character_Base_C::K2Node_PropertyAccess_8' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, K2Node_PropertyAccess_7) == 0x002C39, "Member 'UABP_TGF_Character_Base_C::K2Node_PropertyAccess_7' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, K2Node_PropertyAccess_6) == 0x002C3A, "Member 'UABP_TGF_Character_Base_C::K2Node_PropertyAccess_6' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, K2Node_PropertyAccess_5) == 0x002C3C, "Member 'UABP_TGF_Character_Base_C::K2Node_PropertyAccess_5' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, K2Node_PropertyAccess_4) == 0x002C40, "Member 'UABP_TGF_Character_Base_C::K2Node_PropertyAccess_4' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, K2Node_PropertyAccess_3) == 0x002C41, "Member 'UABP_TGF_Character_Base_C::K2Node_PropertyAccess_3' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, K2Node_PropertyAccess_2) == 0x002C42, "Member 'UABP_TGF_Character_Base_C::K2Node_PropertyAccess_2' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, __CustomProperty_bDeath_7B79F33A487FD5B768F999875CB3E863) == 0x002C43, "Member 'UABP_TGF_Character_Base_C::__CustomProperty_bDeath_7B79F33A487FD5B768F999875CB3E863' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, __CustomProperty_AimYaw_E475ECE746CBC124125BDE8344E63969) == 0x002C48, "Member 'UABP_TGF_Character_Base_C::__CustomProperty_AimYaw_E475ECE746CBC124125BDE8344E63969' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, __CustomProperty_AimPitch_E475ECE746CBC124125BDE8344E63969) == 0x002C50, "Member 'UABP_TGF_Character_Base_C::__CustomProperty_AimPitch_E475ECE746CBC124125BDE8344E63969' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, WorldVelocity) == 0x002C58, "Member 'UABP_TGF_Character_Base_C::WorldVelocity' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, WorldRotation) == 0x002C70, "Member 'UABP_TGF_Character_Base_C::WorldRotation' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, bIsCrouching) == 0x002C88, "Member 'UABP_TGF_Character_Base_C::bIsCrouching' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, bIsFalling) == 0x002C89, "Member 'UABP_TGF_Character_Base_C::bIsFalling' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, WorldVelocity2D) == 0x002C90, "Member 'UABP_TGF_Character_Base_C::WorldVelocity2D' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, VelocityDirection) == 0x002CA8, "Member 'UABP_TGF_Character_Base_C::VelocityDirection' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, bIsOnGround) == 0x002CA9, "Member 'UABP_TGF_Character_Base_C::bIsOnGround' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, bHasVelocity) == 0x002CAA, "Member 'UABP_TGF_Character_Base_C::bHasVelocity' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, AimPitch) == 0x002CB0, "Member 'UABP_TGF_Character_Base_C::AimPitch' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, AimYaw) == 0x002CB8, "Member 'UABP_TGF_Character_Base_C::AimYaw' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, FootstepType) == 0x002CC0, "Member 'UABP_TGF_Character_Base_C::FootstepType' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, TimeToJumpApex) == 0x002CC8, "Member 'UABP_TGF_Character_Base_C::TimeToJumpApex' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, LowerBodyAddtiveRate) == 0x002CD0, "Member 'UABP_TGF_Character_Base_C::LowerBodyAddtiveRate' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, bBasePoseAdditiveSplit) == 0x002CD8, "Member 'UABP_TGF_Character_Base_C::bBasePoseAdditiveSplit' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, BlendPoseDefaultTime) == 0x002CE0, "Member 'UABP_TGF_Character_Base_C::BlendPoseDefaultTime' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, bCrouchingStateChange) == 0x002CE8, "Member 'UABP_TGF_Character_Base_C::bCrouchingStateChange' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, bIsDeath) == 0x002CE9, "Member 'UABP_TGF_Character_Base_C::bIsDeath' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, DeathDirection) == 0x002CEA, "Member 'UABP_TGF_Character_Base_C::DeathDirection' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, bIsDeathFinish) == 0x002CEB, "Member 'UABP_TGF_Character_Base_C::bIsDeathFinish' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, BlendingParams) == 0x002CEC, "Member 'UABP_TGF_Character_Base_C::BlendingParams' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, bGameplayTagRebounding) == 0x002CF8, "Member 'UABP_TGF_Character_Base_C::bGameplayTagRebounding' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, WeaponHandOffsetLocation) == 0x002D00, "Member 'UABP_TGF_Character_Base_C::WeaponHandOffsetLocation' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, bGameplayTagADS) == 0x002D18, "Member 'UABP_TGF_Character_Base_C::bGameplayTagADS' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, bCachedTagADS) == 0x002D19, "Member 'UABP_TGF_Character_Base_C::bCachedTagADS' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, bADSStateChange) == 0x002D1A, "Member 'UABP_TGF_Character_Base_C::bADSStateChange' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, DeathAnim) == 0x002D20, "Member 'UABP_TGF_Character_Base_C::DeathAnim' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, AdditiveRateConfigValues) == 0x002D60, "Member 'UABP_TGF_Character_Base_C::AdditiveRateConfigValues' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, RotationYawSpeed) == 0x002D70, "Member 'UABP_TGF_Character_Base_C::RotationYawSpeed' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, RotationPitchSpeed) == 0x002D78, "Member 'UABP_TGF_Character_Base_C::RotationPitchSpeed' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, AccelerationDirection) == 0x002D80, "Member 'UABP_TGF_Character_Base_C::AccelerationDirection' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, bGameplayTagStaffFireADS) == 0x002D81, "Member 'UABP_TGF_Character_Base_C::bGameplayTagStaffFireADS' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, HasAcceleration) == 0x002D82, "Member 'UABP_TGF_Character_Base_C::HasAcceleration' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, Accleration) == 0x002D88, "Member 'UABP_TGF_Character_Base_C::Accleration' has a wrong offset!");
static_assert(offsetof(UABP_TGF_Character_Base_C, bGameplayTagDelayFreeze) == 0x002DA0, "Member 'UABP_TGF_Character_Base_C::bGameplayTagDelayFreeze' has a wrong offset!");

}

