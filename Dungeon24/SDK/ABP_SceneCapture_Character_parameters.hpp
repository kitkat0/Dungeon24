#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_SceneCapture_Character

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "LyraGame_structs.hpp"


namespace SDK::Params
{

// Function ABP_SceneCapture_Character.ABP_SceneCapture_Character_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct ABP_SceneCapture_Character_C_AnimGraph final
{
public:
	struct FPoseLink                              Param_AnimGraph;                                   // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABP_SceneCapture_Character_C_AnimGraph) == 0x000008, "Wrong alignment on ABP_SceneCapture_Character_C_AnimGraph");
static_assert(sizeof(ABP_SceneCapture_Character_C_AnimGraph) == 0x000010, "Wrong size on ABP_SceneCapture_Character_C_AnimGraph");
static_assert(offsetof(ABP_SceneCapture_Character_C_AnimGraph, Param_AnimGraph) == 0x000000, "Member 'ABP_SceneCapture_Character_C_AnimGraph::Param_AnimGraph' has a wrong offset!");

// Function ABP_SceneCapture_Character.ABP_SceneCapture_Character_C.ExecuteUbergraph_ABP_SceneCapture_Character
// 0x0180 (0x0180 - 0x0000)
struct ABP_SceneCapture_Character_C_ExecuteUbergraph_ABP_SceneCapture_Character final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      K2Node_CustomEvent_Next;                           // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bIsRight;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETgfActorRace                                 K2Node_CustomEvent_Race;                           // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRaceAvatarData_HeightOffset;           // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTgfRaceAvatarBodyModifyData           CallFunc_GetRaceAvatarData_ReturnValue;            // 0x0018(0x0168)(ConstParm, NoDestructor)
};
static_assert(alignof(ABP_SceneCapture_Character_C_ExecuteUbergraph_ABP_SceneCapture_Character) == 0x000008, "Wrong alignment on ABP_SceneCapture_Character_C_ExecuteUbergraph_ABP_SceneCapture_Character");
static_assert(sizeof(ABP_SceneCapture_Character_C_ExecuteUbergraph_ABP_SceneCapture_Character) == 0x000180, "Wrong size on ABP_SceneCapture_Character_C_ExecuteUbergraph_ABP_SceneCapture_Character");
static_assert(offsetof(ABP_SceneCapture_Character_C_ExecuteUbergraph_ABP_SceneCapture_Character, EntryPoint) == 0x000000, "Member 'ABP_SceneCapture_Character_C_ExecuteUbergraph_ABP_SceneCapture_Character::EntryPoint' has a wrong offset!");
static_assert(offsetof(ABP_SceneCapture_Character_C_ExecuteUbergraph_ABP_SceneCapture_Character, K2Node_CustomEvent_Next) == 0x000008, "Member 'ABP_SceneCapture_Character_C_ExecuteUbergraph_ABP_SceneCapture_Character::K2Node_CustomEvent_Next' has a wrong offset!");
static_assert(offsetof(ABP_SceneCapture_Character_C_ExecuteUbergraph_ABP_SceneCapture_Character, K2Node_CustomEvent_bIsRight) == 0x000010, "Member 'ABP_SceneCapture_Character_C_ExecuteUbergraph_ABP_SceneCapture_Character::K2Node_CustomEvent_bIsRight' has a wrong offset!");
static_assert(offsetof(ABP_SceneCapture_Character_C_ExecuteUbergraph_ABP_SceneCapture_Character, K2Node_CustomEvent_Race) == 0x000011, "Member 'ABP_SceneCapture_Character_C_ExecuteUbergraph_ABP_SceneCapture_Character::K2Node_CustomEvent_Race' has a wrong offset!");
static_assert(offsetof(ABP_SceneCapture_Character_C_ExecuteUbergraph_ABP_SceneCapture_Character, CallFunc_GetRaceAvatarData_HeightOffset) == 0x000014, "Member 'ABP_SceneCapture_Character_C_ExecuteUbergraph_ABP_SceneCapture_Character::CallFunc_GetRaceAvatarData_HeightOffset' has a wrong offset!");
static_assert(offsetof(ABP_SceneCapture_Character_C_ExecuteUbergraph_ABP_SceneCapture_Character, CallFunc_GetRaceAvatarData_ReturnValue) == 0x000018, "Member 'ABP_SceneCapture_Character_C_ExecuteUbergraph_ABP_SceneCapture_Character::CallFunc_GetRaceAvatarData_ReturnValue' has a wrong offset!");

// Function ABP_SceneCapture_Character.ABP_SceneCapture_Character_C.QueueNextLoop
// 0x0010 (0x0010 - 0x0000)
struct ABP_SceneCapture_Character_C_QueueNextLoop final
{
public:
	class UAnimSequenceBase*                      Next;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Param_bIsRight;                                    // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETgfActorRace                                 Race;                                              // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_SceneCapture_Character_C_QueueNextLoop) == 0x000008, "Wrong alignment on ABP_SceneCapture_Character_C_QueueNextLoop");
static_assert(sizeof(ABP_SceneCapture_Character_C_QueueNextLoop) == 0x000010, "Wrong size on ABP_SceneCapture_Character_C_QueueNextLoop");
static_assert(offsetof(ABP_SceneCapture_Character_C_QueueNextLoop, Next) == 0x000000, "Member 'ABP_SceneCapture_Character_C_QueueNextLoop::Next' has a wrong offset!");
static_assert(offsetof(ABP_SceneCapture_Character_C_QueueNextLoop, Param_bIsRight) == 0x000008, "Member 'ABP_SceneCapture_Character_C_QueueNextLoop::Param_bIsRight' has a wrong offset!");
static_assert(offsetof(ABP_SceneCapture_Character_C_QueueNextLoop, Race) == 0x000009, "Member 'ABP_SceneCapture_Character_C_QueueNextLoop::Race' has a wrong offset!");

}

