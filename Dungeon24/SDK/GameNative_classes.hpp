#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GameNative

#include "Basic.hpp"

#include "Engine_classes.hpp"


namespace SDK
{

// Class GameNative.INTLGameNativeAPI
// 0x0000 (0x0028 - 0x0028)
class UINTLGameNativeAPI final : public UBlueprintFunctionLibrary
{
public:
	static int32 Close();
	static int32 CmdToGameNative(const class FString& JsonMsg);
	static bool FocusLIPassUI();
	static void InformGameEvent(const class FString& EventName, const class FString& ExtraParams);
	static int32 Init(class UGameInstance* Instance, const class FString& Host, bool IsTest, const class FString& DefaultActivity);
	static bool IsLoadDefaultActivityFromApp();
	static void IsPopPanelAllowedResult(const class FString& ModuleName, bool Allowed, const class FString& ActivityClassification);
	static int32 LoadLIAsset();
	static void NotifyGameTaskCompleted(const class FString& TaskName, const class FString& ExtraParams);
	static bool OnBackPressed();
	static void SetLIPASSVersion(const class FString& Version);
	static void SetLuaReportEnable(bool Enable);
	static void SetUICustomScale(const float Scale);
	static int32 SetUserData(const struct FINTLUserData& UserData);
	static void SetXWID(const class FString& Xwid);
	static void ShareResult(const class FString& ShareType, const class FString& ModuleName, bool Success);
	static int32 Start();
	static int32 StartLI();
	static void TestLuaError();
	static void UpdatePlayerLevel(int32 PlayerLevel);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"INTLGameNativeAPI">();
	}
	static class UINTLGameNativeAPI* GetDefaultObj()
	{
		return GetDefaultObjImpl<UINTLGameNativeAPI>();
	}
};
static_assert(alignof(UINTLGameNativeAPI) == 0x000008, "Wrong alignment on UINTLGameNativeAPI");
static_assert(sizeof(UINTLGameNativeAPI) == 0x000028, "Wrong size on UINTLGameNativeAPI");

}

