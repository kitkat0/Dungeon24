#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_TGF_Active_Base

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "LyraGame_structs.hpp"
#include "GA_TGF_Base_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_TGF_Active_Base.GA_TGF_Active_Base_C
// 0x0110 (0x0E00 - 0x0CF0)
class UGA_TGF_Active_Base_C : public UGA_TGF_Base_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0CF0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBP_CharacterSelectionComponent_C*      SelectionComponent;                                // 0x0CF8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           CurMontage;                                        // 0x0D00(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           TriggerTag;                                        // 0x0D08(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          bDoingAnimAfterHit;                                // 0x0D10(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDoingServerRebound;                               // 0x0D11(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseHitAnim;                                        // 0x0D12(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D13[0x5];                                      // 0x0D13(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        HitAnimDelay;                                      // 0x0D18(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           ReboundMontageClient;                              // 0x0D20(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        StartOffset;                                       // 0x0D28(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        StartRate;                                         // 0x0D30(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Rate2;                                             // 0x0D38(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<double>                                DelayTimes;                                        // 0x0D40(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FGameplayTag>                   AdditionalTags;                                    // 0x0D50(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	double                                        AdditionalTagsDelay;                               // 0x0D60(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTgfSnapToTargetDataAsset*              SnapTargetQueryConfig;                             // 0x0D68(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 SnapTarget;                                        // 0x0D70(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	double                                        SnapNotifyDuration;                                // 0x0D78(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	class UAbilityTask_SnapToTarget*              SnapTargetTask;                                    // 0x0D80(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	bool                                          ReceivedSnapNotify;                                // 0x0D88(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	bool                                          ShouldUncrouch;                                    // 0x0D89(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D8A[0x6];                                      // 0x0D8A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilityTask*                           MoveActorTask;                                     // 0x0D90(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	bool                                          ReceviedMoveActorBlocked;                          // 0x0D98(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	uint8                                         Pad_D99[0x7];                                      // 0x0D99(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  MontageFilterTags;                                 // 0x0DA0(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FTgfMoveActorConfig                    CurMoveActorConfig;                                // 0x0DC0(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, AdvancedDisplay)
	double                                        CurMoveActorDuration;                              // 0x0DF0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	int32                                         SnapToTargetPriority;                              // 0x0DF8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CloseLooseServerDistCheck;                         // 0x0DFC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	bool                                          OpenLooseServerDistCheck;                          // 0x0DFD(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	bool                                          UseLooseServerDistCheck;                           // 0x0DFE(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AddAdditionalTags();
	void AddReboundingTag();
	void ApplySnapToTargetRMS();
	void CheckExtraConfig();
	void CREATEDELEGATE_PROXYFUNCTION_0(const struct FHitResult& ImpactHit);
	void CREATEDELEGATE_PROXYFUNCTION_1(const struct FHitResult& ImpactHit);
	void DoHitAnim();
	void DoHitRebound();
	void DoWhenReboundFinish();
	void EventReceived_298CFAF646EA172F9053FA9891656768(const struct FGameplayEventData& Payload);
	void EventReceived_36C95C8F43C1DF682B745E8A54A25F5B(const struct FGameplayEventData& Payload);
	void EventReceived_7FEE91B14FD6027BD4217DA62C6AE99E(const struct FGameplayEventData& Payload);
	void EventReceived_E1A9AC7843199DF93A1849B9FD51B139(const struct FGameplayEventData& Payload);
	void EventReceived_EE42EF1C48B1307038F4E49AA420638A(const struct FGameplayEventData& Payload);
	void ExecuteUbergraph_GA_TGF_Active_Base(int32 EntryPoint);
	void GetMontageStartTime(double* StartTime);
	void GetSelectionComponent(class UBP_CharacterSelectionComponent_C** SelectComponent);
	void InitMoveActor();
	void InitSnapConfig();
	void K2_ActivateAbility();
	void K2_ActivateAbilityFromEvent(const struct FGameplayEventData& EventData);
	void K2_OnAbilityAdded();
	void K2_OnEndAbility(bool bWasCancelled);
	void MakeMagicMontageFilterTag();
	void OnBlendOut_99CA57034AF33DAA6EAAA9A130DEC4EC(class FName NotifyName);
	void OnBlendOut_99CA57034AF33DAA6EAAA9A1D37E8D9D(class FName NotifyName);
	void OnCancelled_99CA57034AF33DAA6EAAA9A130DEC4EC(class FName NotifyName);
	void OnCancelled_99CA57034AF33DAA6EAAA9A1D37E8D9D(class FName NotifyName);
	void OnCompleted_99CA57034AF33DAA6EAAA9A130DEC4EC(class FName NotifyName);
	void OnCompleted_99CA57034AF33DAA6EAAA9A1D37E8D9D(class FName NotifyName);
	void OnFinish_9CB0A5304BEABE70843AF4A0EAFC14D3();
	void OnFinished_5467B94A478269C5CA65F5A15FDE1A8D(bool DestinationReached, bool TimedOut, const struct FVector& FinalTargetLocation);
	void OnInterrupted_99CA57034AF33DAA6EAAA9A130DEC4EC(class FName NotifyName);
	void OnInterrupted_99CA57034AF33DAA6EAAA9A1D37E8D9D(class FName NotifyName);
	void OnMoveActorBlocked(const struct FHitResult& ImpactHitResult);
	void OnNotifyBegin_99CA57034AF33DAA6EAAA9A130DEC4EC(class FName NotifyName);
	void OnNotifyBegin_99CA57034AF33DAA6EAAA9A1D37E8D9D(class FName NotifyName);
	void OnNotifyEnd_99CA57034AF33DAA6EAAA9A130DEC4EC(class FName NotifyName);
	void OnNotifyEnd_99CA57034AF33DAA6EAAA9A1D37E8D9D(class FName NotifyName);
	void OnReceivedSnapNotify();
	void OnTimedOut_1EC492C643A79EB15F2E77B95E2DB0B9();
	void ProcessAnimAfterHit(const struct FGameplayTag& Param_TriggerTag, const struct FGameplayEventData& Payload);
	void ProcessMoveBlockedAfterHit();
	void RemoveAdditionalTags();
	void RemoveMoveActorTask();
	void RemoveReboundingTag();
	void RemoveSnapToTargetTask();
	void TryMoveActor();
	void TrySnapToTarget();
	void UnbindMoveBlockEvent();

	class UBP_CharacterSelectionComponent_C* GetSelectionComponentConst() const;
	bool IsCharacterStateValid() const;
	bool K2_CanActivateAbility(const struct FGameplayAbilityActorInfo& ActorInfo, const struct FGameplayAbilitySpecHandle& Handle, struct FGameplayTagContainer* RelevantTags) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_TGF_Active_Base_C">();
	}
	static class UGA_TGF_Active_Base_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_TGF_Active_Base_C>();
	}
};
static_assert(alignof(UGA_TGF_Active_Base_C) == 0x000010, "Wrong alignment on UGA_TGF_Active_Base_C");
static_assert(sizeof(UGA_TGF_Active_Base_C) == 0x000E00, "Wrong size on UGA_TGF_Active_Base_C");
static_assert(offsetof(UGA_TGF_Active_Base_C, UberGraphFrame) == 0x000CF0, "Member 'UGA_TGF_Active_Base_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGA_TGF_Active_Base_C, SelectionComponent) == 0x000CF8, "Member 'UGA_TGF_Active_Base_C::SelectionComponent' has a wrong offset!");
static_assert(offsetof(UGA_TGF_Active_Base_C, CurMontage) == 0x000D00, "Member 'UGA_TGF_Active_Base_C::CurMontage' has a wrong offset!");
static_assert(offsetof(UGA_TGF_Active_Base_C, TriggerTag) == 0x000D08, "Member 'UGA_TGF_Active_Base_C::TriggerTag' has a wrong offset!");
static_assert(offsetof(UGA_TGF_Active_Base_C, bDoingAnimAfterHit) == 0x000D10, "Member 'UGA_TGF_Active_Base_C::bDoingAnimAfterHit' has a wrong offset!");
static_assert(offsetof(UGA_TGF_Active_Base_C, bDoingServerRebound) == 0x000D11, "Member 'UGA_TGF_Active_Base_C::bDoingServerRebound' has a wrong offset!");
static_assert(offsetof(UGA_TGF_Active_Base_C, UseHitAnim) == 0x000D12, "Member 'UGA_TGF_Active_Base_C::UseHitAnim' has a wrong offset!");
static_assert(offsetof(UGA_TGF_Active_Base_C, HitAnimDelay) == 0x000D18, "Member 'UGA_TGF_Active_Base_C::HitAnimDelay' has a wrong offset!");
static_assert(offsetof(UGA_TGF_Active_Base_C, ReboundMontageClient) == 0x000D20, "Member 'UGA_TGF_Active_Base_C::ReboundMontageClient' has a wrong offset!");
static_assert(offsetof(UGA_TGF_Active_Base_C, StartOffset) == 0x000D28, "Member 'UGA_TGF_Active_Base_C::StartOffset' has a wrong offset!");
static_assert(offsetof(UGA_TGF_Active_Base_C, StartRate) == 0x000D30, "Member 'UGA_TGF_Active_Base_C::StartRate' has a wrong offset!");
static_assert(offsetof(UGA_TGF_Active_Base_C, Rate2) == 0x000D38, "Member 'UGA_TGF_Active_Base_C::Rate2' has a wrong offset!");
static_assert(offsetof(UGA_TGF_Active_Base_C, DelayTimes) == 0x000D40, "Member 'UGA_TGF_Active_Base_C::DelayTimes' has a wrong offset!");
static_assert(offsetof(UGA_TGF_Active_Base_C, AdditionalTags) == 0x000D50, "Member 'UGA_TGF_Active_Base_C::AdditionalTags' has a wrong offset!");
static_assert(offsetof(UGA_TGF_Active_Base_C, AdditionalTagsDelay) == 0x000D60, "Member 'UGA_TGF_Active_Base_C::AdditionalTagsDelay' has a wrong offset!");
static_assert(offsetof(UGA_TGF_Active_Base_C, SnapTargetQueryConfig) == 0x000D68, "Member 'UGA_TGF_Active_Base_C::SnapTargetQueryConfig' has a wrong offset!");
static_assert(offsetof(UGA_TGF_Active_Base_C, SnapTarget) == 0x000D70, "Member 'UGA_TGF_Active_Base_C::SnapTarget' has a wrong offset!");
static_assert(offsetof(UGA_TGF_Active_Base_C, SnapNotifyDuration) == 0x000D78, "Member 'UGA_TGF_Active_Base_C::SnapNotifyDuration' has a wrong offset!");
static_assert(offsetof(UGA_TGF_Active_Base_C, SnapTargetTask) == 0x000D80, "Member 'UGA_TGF_Active_Base_C::SnapTargetTask' has a wrong offset!");
static_assert(offsetof(UGA_TGF_Active_Base_C, ReceivedSnapNotify) == 0x000D88, "Member 'UGA_TGF_Active_Base_C::ReceivedSnapNotify' has a wrong offset!");
static_assert(offsetof(UGA_TGF_Active_Base_C, ShouldUncrouch) == 0x000D89, "Member 'UGA_TGF_Active_Base_C::ShouldUncrouch' has a wrong offset!");
static_assert(offsetof(UGA_TGF_Active_Base_C, MoveActorTask) == 0x000D90, "Member 'UGA_TGF_Active_Base_C::MoveActorTask' has a wrong offset!");
static_assert(offsetof(UGA_TGF_Active_Base_C, ReceviedMoveActorBlocked) == 0x000D98, "Member 'UGA_TGF_Active_Base_C::ReceviedMoveActorBlocked' has a wrong offset!");
static_assert(offsetof(UGA_TGF_Active_Base_C, MontageFilterTags) == 0x000DA0, "Member 'UGA_TGF_Active_Base_C::MontageFilterTags' has a wrong offset!");
static_assert(offsetof(UGA_TGF_Active_Base_C, CurMoveActorConfig) == 0x000DC0, "Member 'UGA_TGF_Active_Base_C::CurMoveActorConfig' has a wrong offset!");
static_assert(offsetof(UGA_TGF_Active_Base_C, CurMoveActorDuration) == 0x000DF0, "Member 'UGA_TGF_Active_Base_C::CurMoveActorDuration' has a wrong offset!");
static_assert(offsetof(UGA_TGF_Active_Base_C, SnapToTargetPriority) == 0x000DF8, "Member 'UGA_TGF_Active_Base_C::SnapToTargetPriority' has a wrong offset!");
static_assert(offsetof(UGA_TGF_Active_Base_C, CloseLooseServerDistCheck) == 0x000DFC, "Member 'UGA_TGF_Active_Base_C::CloseLooseServerDistCheck' has a wrong offset!");
static_assert(offsetof(UGA_TGF_Active_Base_C, OpenLooseServerDistCheck) == 0x000DFD, "Member 'UGA_TGF_Active_Base_C::OpenLooseServerDistCheck' has a wrong offset!");
static_assert(offsetof(UGA_TGF_Active_Base_C, UseLooseServerDistCheck) == 0x000DFE, "Member 'UGA_TGF_Active_Base_C::UseLooseServerDistCheck' has a wrong offset!");

}

