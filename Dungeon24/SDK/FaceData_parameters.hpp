#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FaceData

#include "Basic.hpp"

#include "LyraGame_structs.hpp"


namespace SDK::Params
{

// Function FaceData.FaceData_C.GetFaceConfigs
// 0x0080 (0x0080 - 0x0000)
struct FaceData_C_GetFaceConfigs final
{
public:
	class UExcelLoaderConfigGroupWrapper*         ConfigApi;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         FaceId;                                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SkinId;                                            // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Completed;                                         // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTgfFaceConfig                         FaceConfig;                                        // 0x0018(0x0068)(Parm, OutParm)
};
static_assert(alignof(FaceData_C_GetFaceConfigs) == 0x000008, "Wrong alignment on FaceData_C_GetFaceConfigs");
static_assert(sizeof(FaceData_C_GetFaceConfigs) == 0x000080, "Wrong size on FaceData_C_GetFaceConfigs");
static_assert(offsetof(FaceData_C_GetFaceConfigs, ConfigApi) == 0x000000, "Member 'FaceData_C_GetFaceConfigs::ConfigApi' has a wrong offset!");
static_assert(offsetof(FaceData_C_GetFaceConfigs, FaceId) == 0x000008, "Member 'FaceData_C_GetFaceConfigs::FaceId' has a wrong offset!");
static_assert(offsetof(FaceData_C_GetFaceConfigs, SkinId) == 0x00000C, "Member 'FaceData_C_GetFaceConfigs::SkinId' has a wrong offset!");
static_assert(offsetof(FaceData_C_GetFaceConfigs, Completed) == 0x000010, "Member 'FaceData_C_GetFaceConfigs::Completed' has a wrong offset!");
static_assert(offsetof(FaceData_C_GetFaceConfigs, FaceConfig) == 0x000018, "Member 'FaceData_C_GetFaceConfigs::FaceConfig' has a wrong offset!");

// Function FaceData.FaceData_C.SwitchFace
// 0x0018 (0x0018 - 0x0000)
struct FaceData_C_SwitchFace final
{
public:
	class UExcelLoaderConfigGroupWrapper*         ConfigApi;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         FaceId;                                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ATgfAvatarActor*                        InAvatar;                                          // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FaceData_C_SwitchFace) == 0x000008, "Wrong alignment on FaceData_C_SwitchFace");
static_assert(sizeof(FaceData_C_SwitchFace) == 0x000018, "Wrong size on FaceData_C_SwitchFace");
static_assert(offsetof(FaceData_C_SwitchFace, ConfigApi) == 0x000000, "Member 'FaceData_C_SwitchFace::ConfigApi' has a wrong offset!");
static_assert(offsetof(FaceData_C_SwitchFace, FaceId) == 0x000008, "Member 'FaceData_C_SwitchFace::FaceId' has a wrong offset!");
static_assert(offsetof(FaceData_C_SwitchFace, InAvatar) == 0x000010, "Member 'FaceData_C_SwitchFace::InAvatar' has a wrong offset!");

// Function FaceData.FaceData_C.SwitchSkinMaterials
// 0x0018 (0x0018 - 0x0000)
struct FaceData_C_SwitchSkinMaterials final
{
public:
	TArray<class UMaterialInstance*>              SkinMaterials;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class USkeletalMeshComponent*                 SkeletalMeshComponent;                             // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FaceData_C_SwitchSkinMaterials) == 0x000008, "Wrong alignment on FaceData_C_SwitchSkinMaterials");
static_assert(sizeof(FaceData_C_SwitchSkinMaterials) == 0x000018, "Wrong size on FaceData_C_SwitchSkinMaterials");
static_assert(offsetof(FaceData_C_SwitchSkinMaterials, SkinMaterials) == 0x000000, "Member 'FaceData_C_SwitchSkinMaterials::SkinMaterials' has a wrong offset!");
static_assert(offsetof(FaceData_C_SwitchSkinMaterials, SkeletalMeshComponent) == 0x000010, "Member 'FaceData_C_SwitchSkinMaterials::SkeletalMeshComponent' has a wrong offset!");

}

