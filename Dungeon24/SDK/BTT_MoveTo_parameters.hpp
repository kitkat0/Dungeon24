#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTT_MoveTo

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "AIModule_structs.hpp"


namespace SDK::Params
{

// Function BTT_MoveTo.BTT_MoveTo_C.ExecuteUbergraph_BTT_MoveTo
// 0x0308 (0x0308 - 0x0000)
struct BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPathFollowingResult                          K2Node_CustomEvent_MovementResult_1;               // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EPathFollowingResult MovementResult)> K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EPathFollowingResult                          K2Node_CustomEvent_MovementResult;                 // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EPathFollowingResult MovementResult)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x001C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EPathFollowingResult                          Temp_byte_Variable;                                // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(uint8 KeyID)>                  K2Node_CreateDelegate_OutputDelegate_2;            // 0x0030(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EPathFollowingResult                          K2Node_CustomEvent_MovementResult_3;               // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EPathFollowingResult MovementResult)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x0044(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_Event_OwnerController_2;                    // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn_2;                     // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue_1;      // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A[0x6];                                       // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_Event_OwnerController_1;                    // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn_1;                     // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetBlackboardValueAsVector_ReturnValue;   // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_CustomEvent_Pawn_2;                         // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsTaskExecuting_ReturnValue;              // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_CustomEvent_Pawn_1;                         // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Location_1;                     // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_Actor;                          // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAIAsyncTaskBlueprintProxy*             CallFunc_CreateMoveToProxyObject_ReturnValue;      // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetTargetLocation_Result;                 // 0x00D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPointReachable_Result;                  // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F3[0x5];                                       // 0x00F3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPointReachable_Result_1;                // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_CustomEvent_Pawn;                           // 0x0118(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Location;                       // 0x0120(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_UsePathfinding;                 // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_ObserveTarget;                  // 0x0140(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_149[0x7];                                      // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0150(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0169(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetNavigableLocationNearby_Result;        // 0x016A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16B[0x5];                                      // 0x016B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetNavigableLocationNearby_Location;      // 0x0170(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsTaskExecuting_ReturnValue_1;            // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_189[0x7];                                      // 0x0189(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAIAsyncTaskBlueprintProxy*             CallFunc_CreateMoveToProxyObjectEx_ReturnValue;    // 0x0190(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_199[0x7];                                      // 0x0199(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_Event_OwnerController;                      // 0x01A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn;                       // 0x01A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B4[0x4];                                      // 0x01B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x01B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Vector_IsNearlyZero_ReturnValue;          // 0x01D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D2[0x6];                                      // 0x01D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x01D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPathFollowingComponent*                CallFunc_GetPathFollowingComponent_ReturnValue;    // 0x01F0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F9[0x7];                                      // 0x01F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPathFollowingResult                          Temp_byte_Variable_1;                              // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0209(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_20A[0x6];                                      // 0x020A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Vector_Distance_ReturnValue;              // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x0219(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x021A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         K2Node_CustomEvent_KeyID;                          // 0x021B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21C[0x4];                                      // 0x021C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_GetBlackboardValueAsObject_ReturnValue;   // 0x0220(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_PickTargetPathWaypoint_Result;            // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_229[0x7];                                      // 0x0229(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_PickTargetPathWaypoint_Waypoint;          // 0x0230(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_249[0x7];                                      // 0x0249(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWaypointPath*                          K2Node_DynamicCast_AsWaypoint_Path;                // 0x0250(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_259[0x7];                                      // 0x0259(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_DynamicCast_AsActor;                        // 0x0260(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_PickTargetPathWaypoint_Result_1;          // 0x0269(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26A[0x6];                                      // 0x026A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_PickTargetPathWaypoint_Waypoint_1;        // 0x0270(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_9;                    // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPathFollowingResult                          K2Node_CustomEvent_MovementResult_2;               // 0x0289(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28A[0x6];                                      // 0x028A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_2;       // 0x0298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TargetPathNeedCheckReachWaypoint_Result;  // 0x0299(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29A[0x2];                                      // 0x029A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EPathFollowingResult MovementResult)> K2Node_CreateDelegate_OutputDelegate_4;            // 0x029C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_PickTargetPathWaypoint_Result_2;          // 0x02AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2AD[0x3];                                      // 0x02AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_PickTargetPathWaypoint_Waypoint_2;        // 0x02B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetBlackboardValueAsFloat_ReturnValue;    // 0x02D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckReachedDestination_ReturnValue;      // 0x02D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_3;       // 0x02D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue_2;      // 0x02D6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D7[0x1];                                      // 0x02D7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_CreateMoveToProxyObject_AcceptanceRadius_ImplicitCast; // 0x02D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CreateMoveToProxyObjectEx_AcceptanceRadius_ImplicitCast; // 0x02DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast_1;        // 0x02E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CheckReachedDestination_InAcceptanceRadius_ImplicitCast; // 0x02F0(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F4[0x4];                                      // 0x02F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet_AcceptanceRadius_ImplicitCast;  // 0x02F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x0300(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo) == 0x000008, "Wrong alignment on BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo");
static_assert(sizeof(BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo) == 0x000308, "Wrong size on BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo");
static_assert(offsetof(BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo, EntryPoint) == 0x000000, "Member 'BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo::EntryPoint' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo, K2Node_CustomEvent_MovementResult_1) == 0x000004, "Member 'BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo::K2Node_CustomEvent_MovementResult_1' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo, K2Node_CustomEvent_MovementResult) == 0x000018, "Member 'BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo::K2Node_CustomEvent_MovementResult' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo, K2Node_CreateDelegate_OutputDelegate_1) == 0x00001C, "Member 'BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo, Temp_byte_Variable) == 0x00002C, "Member 'BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo, K2Node_CreateDelegate_OutputDelegate_2) == 0x000030, "Member 'BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo, K2Node_CustomEvent_MovementResult_3) == 0x000040, "Member 'BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo::K2Node_CustomEvent_MovementResult_3' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo, K2Node_CreateDelegate_OutputDelegate_3) == 0x000044, "Member 'BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo, K2Node_Event_OwnerController_2) == 0x000058, "Member 'BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo::K2Node_Event_OwnerController_2' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo, K2Node_Event_ControlledPawn_2) == 0x000060, "Member 'BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo::K2Node_Event_ControlledPawn_2' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x000068, "Member 'BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo, CallFunc_EqualEqual_ClassClass_ReturnValue_1) == 0x000069, "Member 'BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo::CallFunc_EqualEqual_ClassClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo, K2Node_Event_OwnerController_1) == 0x000070, "Member 'BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo::K2Node_Event_OwnerController_1' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo, K2Node_Event_ControlledPawn_1) == 0x000078, "Member 'BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo::K2Node_Event_ControlledPawn_1' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo, CallFunc_GetBlackboardValueAsVector_ReturnValue) == 0x000080, "Member 'BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo::CallFunc_GetBlackboardValueAsVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo, K2Node_CustomEvent_Pawn_2) == 0x000098, "Member 'BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo::K2Node_CustomEvent_Pawn_2' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo, CallFunc_IsTaskExecuting_ReturnValue) == 0x0000A0, "Member 'BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo::CallFunc_IsTaskExecuting_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo, K2Node_CustomEvent_Pawn_1) == 0x0000A8, "Member 'BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo::K2Node_CustomEvent_Pawn_1' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo, K2Node_CustomEvent_Location_1) == 0x0000B0, "Member 'BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo::K2Node_CustomEvent_Location_1' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo, K2Node_CustomEvent_Actor) == 0x0000C8, "Member 'BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo::K2Node_CustomEvent_Actor' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo, CallFunc_CreateMoveToProxyObject_ReturnValue) == 0x0000D0, "Member 'BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo::CallFunc_CreateMoveToProxyObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo, CallFunc_GetTargetLocation_Result) == 0x0000D8, "Member 'BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo::CallFunc_GetTargetLocation_Result' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo, CallFunc_IsPointReachable_Result) == 0x0000F0, "Member 'BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo::CallFunc_IsPointReachable_Result' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo, CallFunc_IsValid_ReturnValue) == 0x0000F1, "Member 'BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo, CallFunc_IsValid_ReturnValue_1) == 0x0000F2, "Member 'BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000F8, "Member 'BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo, CallFunc_IsPointReachable_Result_1) == 0x000110, "Member 'BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo::CallFunc_IsPointReachable_Result_1' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo, K2Node_CustomEvent_Pawn) == 0x000118, "Member 'BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo::K2Node_CustomEvent_Pawn' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo, K2Node_CustomEvent_Location) == 0x000120, "Member 'BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo::K2Node_CustomEvent_Location' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo, K2Node_CustomEvent_UsePathfinding) == 0x000138, "Member 'BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo::K2Node_CustomEvent_UsePathfinding' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo, K2Node_CustomEvent_ObserveTarget) == 0x000140, "Member 'BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo::K2Node_CustomEvent_ObserveTarget' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo, CallFunc_IsValid_ReturnValue_2) == 0x000148, "Member 'BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000150, "Member 'BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo, CallFunc_Not_PreBool_ReturnValue) == 0x000168, "Member 'BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo, CallFunc_IsValid_ReturnValue_3) == 0x000169, "Member 'BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo, CallFunc_GetNavigableLocationNearby_Result) == 0x00016A, "Member 'BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo::CallFunc_GetNavigableLocationNearby_Result' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo, CallFunc_GetNavigableLocationNearby_Location) == 0x000170, "Member 'BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo::CallFunc_GetNavigableLocationNearby_Location' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo, CallFunc_IsTaskExecuting_ReturnValue_1) == 0x000188, "Member 'BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo::CallFunc_IsTaskExecuting_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo, CallFunc_CreateMoveToProxyObjectEx_ReturnValue) == 0x000190, "Member 'BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo::CallFunc_CreateMoveToProxyObjectEx_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo, CallFunc_IsValid_ReturnValue_4) == 0x000198, "Member 'BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo, K2Node_Event_OwnerController) == 0x0001A0, "Member 'BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo::K2Node_Event_OwnerController' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo, K2Node_Event_ControlledPawn) == 0x0001A8, "Member 'BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo::K2Node_Event_ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo, K2Node_Event_DeltaSeconds) == 0x0001B0, "Member 'BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo, CallFunc_GetVelocity_ReturnValue) == 0x0001B8, "Member 'BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo, CallFunc_IsValid_ReturnValue_5) == 0x0001D0, "Member 'BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo, CallFunc_Vector_IsNearlyZero_ReturnValue) == 0x0001D1, "Member 'BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo::CallFunc_Vector_IsNearlyZero_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x0001D8, "Member 'BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo, CallFunc_GetPathFollowingComponent_ReturnValue) == 0x0001F0, "Member 'BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo::CallFunc_GetPathFollowingComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo, CallFunc_IsValid_ReturnValue_6) == 0x0001F8, "Member 'BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000200, "Member 'BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo, Temp_byte_Variable_1) == 0x000208, "Member 'BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000209, "Member 'BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo, CallFunc_Vector_Distance_ReturnValue) == 0x000210, "Member 'BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000218, "Member 'BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo, CallFunc_IsValid_ReturnValue_7) == 0x000219, "Member 'BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo, CallFunc_BooleanOR_ReturnValue) == 0x00021A, "Member 'BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo, K2Node_CustomEvent_KeyID) == 0x00021B, "Member 'BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo::K2Node_CustomEvent_KeyID' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo, CallFunc_GetBlackboardValueAsObject_ReturnValue) == 0x000220, "Member 'BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo::CallFunc_GetBlackboardValueAsObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo, CallFunc_PickTargetPathWaypoint_Result) == 0x000228, "Member 'BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo::CallFunc_PickTargetPathWaypoint_Result' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo, CallFunc_PickTargetPathWaypoint_Waypoint) == 0x000230, "Member 'BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo::CallFunc_PickTargetPathWaypoint_Waypoint' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo, CallFunc_IsValid_ReturnValue_8) == 0x000248, "Member 'BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo, K2Node_DynamicCast_AsWaypoint_Path) == 0x000250, "Member 'BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo::K2Node_DynamicCast_AsWaypoint_Path' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo, K2Node_DynamicCast_bSuccess) == 0x000258, "Member 'BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo, K2Node_DynamicCast_AsActor) == 0x000260, "Member 'BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo::K2Node_DynamicCast_AsActor' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo, K2Node_DynamicCast_bSuccess_1) == 0x000268, "Member 'BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo, CallFunc_PickTargetPathWaypoint_Result_1) == 0x000269, "Member 'BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo::CallFunc_PickTargetPathWaypoint_Result_1' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo, CallFunc_PickTargetPathWaypoint_Waypoint_1) == 0x000270, "Member 'BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo::CallFunc_PickTargetPathWaypoint_Waypoint_1' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo, CallFunc_IsValid_ReturnValue_9) == 0x000288, "Member 'BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo::CallFunc_IsValid_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo, K2Node_CustomEvent_MovementResult_2) == 0x000289, "Member 'BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo::K2Node_CustomEvent_MovementResult_2' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000290, "Member 'BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo, CallFunc_Greater_DoubleDouble_ReturnValue_2) == 0x000298, "Member 'BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo::CallFunc_Greater_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo, CallFunc_TargetPathNeedCheckReachWaypoint_Result) == 0x000299, "Member 'BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo::CallFunc_TargetPathNeedCheckReachWaypoint_Result' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo, K2Node_CreateDelegate_OutputDelegate_4) == 0x00029C, "Member 'BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo, CallFunc_PickTargetPathWaypoint_Result_2) == 0x0002AC, "Member 'BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo::CallFunc_PickTargetPathWaypoint_Result_2' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo, CallFunc_PickTargetPathWaypoint_Waypoint_2) == 0x0002B0, "Member 'BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo::CallFunc_PickTargetPathWaypoint_Waypoint_2' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0002C8, "Member 'BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo, CallFunc_GetBlackboardValueAsFloat_ReturnValue) == 0x0002D0, "Member 'BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo::CallFunc_GetBlackboardValueAsFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo, CallFunc_CheckReachedDestination_ReturnValue) == 0x0002D4, "Member 'BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo::CallFunc_CheckReachedDestination_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo, CallFunc_Greater_DoubleDouble_ReturnValue_3) == 0x0002D5, "Member 'BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo::CallFunc_Greater_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo, CallFunc_EqualEqual_ClassClass_ReturnValue_2) == 0x0002D6, "Member 'BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo::CallFunc_EqualEqual_ClassClass_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo, CallFunc_CreateMoveToProxyObject_AcceptanceRadius_ImplicitCast) == 0x0002D8, "Member 'BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo::CallFunc_CreateMoveToProxyObject_AcceptanceRadius_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo, CallFunc_CreateMoveToProxyObjectEx_AcceptanceRadius_ImplicitCast) == 0x0002DC, "Member 'BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo::CallFunc_CreateMoveToProxyObjectEx_AcceptanceRadius_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x0002E0, "Member 'BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo, CallFunc_Add_DoubleDouble_A_ImplicitCast_1) == 0x0002E8, "Member 'BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo::CallFunc_Add_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo, CallFunc_CheckReachedDestination_InAcceptanceRadius_ImplicitCast) == 0x0002F0, "Member 'BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo::CallFunc_CheckReachedDestination_InAcceptanceRadius_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo, K2Node_VariableSet_AcceptanceRadius_ImplicitCast) == 0x0002F8, "Member 'BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo::K2Node_VariableSet_AcceptanceRadius_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x000300, "Member 'BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function BTT_MoveTo.BTT_MoveTo_C.GetNavigableLocationNearby
// 0x0098 (0x0098 - 0x0000)
struct BTT_MoveTo_C_GetNavigableLocationNearby final
{
public:
	struct FVector                                CurrentLocation;                                   // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Location;                                          // 0x0020(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        NavigableSearchStep;                               // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetRandomLocationInNavigableRadius_RandomLocation; // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_GetRandomLocationInNavigableRadius_ReturnValue; // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Vector_Distance_ReturnValue;              // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_K2_GetRandomLocationInNavigableRadius_Radius_ImplicitCast; // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_MoveTo_C_GetNavigableLocationNearby) == 0x000008, "Wrong alignment on BTT_MoveTo_C_GetNavigableLocationNearby");
static_assert(sizeof(BTT_MoveTo_C_GetNavigableLocationNearby) == 0x000098, "Wrong size on BTT_MoveTo_C_GetNavigableLocationNearby");
static_assert(offsetof(BTT_MoveTo_C_GetNavigableLocationNearby, CurrentLocation) == 0x000000, "Member 'BTT_MoveTo_C_GetNavigableLocationNearby::CurrentLocation' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_GetNavigableLocationNearby, Result) == 0x000018, "Member 'BTT_MoveTo_C_GetNavigableLocationNearby::Result' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_GetNavigableLocationNearby, Location) == 0x000020, "Member 'BTT_MoveTo_C_GetNavigableLocationNearby::Location' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_GetNavigableLocationNearby, NavigableSearchStep) == 0x000038, "Member 'BTT_MoveTo_C_GetNavigableLocationNearby::NavigableSearchStep' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_GetNavigableLocationNearby, Temp_int_Variable) == 0x000040, "Member 'BTT_MoveTo_C_GetNavigableLocationNearby::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_GetNavigableLocationNearby, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000048, "Member 'BTT_MoveTo_C_GetNavigableLocationNearby::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_GetNavigableLocationNearby, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000050, "Member 'BTT_MoveTo_C_GetNavigableLocationNearby::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_GetNavigableLocationNearby, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000058, "Member 'BTT_MoveTo_C_GetNavigableLocationNearby::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_GetNavigableLocationNearby, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000060, "Member 'BTT_MoveTo_C_GetNavigableLocationNearby::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_GetNavigableLocationNearby, CallFunc_K2_GetRandomLocationInNavigableRadius_RandomLocation) == 0x000068, "Member 'BTT_MoveTo_C_GetNavigableLocationNearby::CallFunc_K2_GetRandomLocationInNavigableRadius_RandomLocation' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_GetNavigableLocationNearby, CallFunc_K2_GetRandomLocationInNavigableRadius_ReturnValue) == 0x000080, "Member 'BTT_MoveTo_C_GetNavigableLocationNearby::CallFunc_K2_GetRandomLocationInNavigableRadius_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_GetNavigableLocationNearby, CallFunc_Add_IntInt_ReturnValue) == 0x000084, "Member 'BTT_MoveTo_C_GetNavigableLocationNearby::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_GetNavigableLocationNearby, CallFunc_Vector_Distance_ReturnValue) == 0x000088, "Member 'BTT_MoveTo_C_GetNavigableLocationNearby::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_GetNavigableLocationNearby, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000090, "Member 'BTT_MoveTo_C_GetNavigableLocationNearby::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_GetNavigableLocationNearby, CallFunc_K2_GetRandomLocationInNavigableRadius_Radius_ImplicitCast) == 0x000094, "Member 'BTT_MoveTo_C_GetNavigableLocationNearby::CallFunc_K2_GetRandomLocationInNavigableRadius_Radius_ImplicitCast' has a wrong offset!");

// Function BTT_MoveTo.BTT_MoveTo_C.GetTargetLocation
// 0x0058 (0x0058 - 0x0000)
struct BTT_MoveTo_C_GetTargetLocation final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Actor;                                             // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Result;                                            // 0x0020(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_MoveTo_C_GetTargetLocation) == 0x000008, "Wrong alignment on BTT_MoveTo_C_GetTargetLocation");
static_assert(sizeof(BTT_MoveTo_C_GetTargetLocation) == 0x000058, "Wrong size on BTT_MoveTo_C_GetTargetLocation");
static_assert(offsetof(BTT_MoveTo_C_GetTargetLocation, Location) == 0x000000, "Member 'BTT_MoveTo_C_GetTargetLocation::Location' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_GetTargetLocation, Actor) == 0x000018, "Member 'BTT_MoveTo_C_GetTargetLocation::Actor' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_GetTargetLocation, Result) == 0x000020, "Member 'BTT_MoveTo_C_GetTargetLocation::Result' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_GetTargetLocation, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'BTT_MoveTo_C_GetTargetLocation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_GetTargetLocation, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000040, "Member 'BTT_MoveTo_C_GetTargetLocation::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");

// Function BTT_MoveTo.BTT_MoveTo_C.IsPointReachable
// 0x0040 (0x0040 - 0x0000)
struct BTT_MoveTo_C_IsPointReachable final
{
public:
	struct FVector                                Point;                                             // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_ProjectPointToNavigation_ProjectedLocation; // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_ProjectPointToNavigation_ReturnValue;  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_MoveTo_C_IsPointReachable) == 0x000008, "Wrong alignment on BTT_MoveTo_C_IsPointReachable");
static_assert(sizeof(BTT_MoveTo_C_IsPointReachable) == 0x000040, "Wrong size on BTT_MoveTo_C_IsPointReachable");
static_assert(offsetof(BTT_MoveTo_C_IsPointReachable, Point) == 0x000000, "Member 'BTT_MoveTo_C_IsPointReachable::Point' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_IsPointReachable, Result) == 0x000018, "Member 'BTT_MoveTo_C_IsPointReachable::Result' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_IsPointReachable, CallFunc_K2_ProjectPointToNavigation_ProjectedLocation) == 0x000020, "Member 'BTT_MoveTo_C_IsPointReachable::CallFunc_K2_ProjectPointToNavigation_ProjectedLocation' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_IsPointReachable, CallFunc_K2_ProjectPointToNavigation_ReturnValue) == 0x000038, "Member 'BTT_MoveTo_C_IsPointReachable::CallFunc_K2_ProjectPointToNavigation_ReturnValue' has a wrong offset!");

// Function BTT_MoveTo.BTT_MoveTo_C.MoveTo
// 0x0008 (0x0008 - 0x0000)
struct BTT_MoveTo_C_MoveTo final
{
public:
	class APawn*                                  Pawn;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_MoveTo_C_MoveTo) == 0x000008, "Wrong alignment on BTT_MoveTo_C_MoveTo");
static_assert(sizeof(BTT_MoveTo_C_MoveTo) == 0x000008, "Wrong size on BTT_MoveTo_C_MoveTo");
static_assert(offsetof(BTT_MoveTo_C_MoveTo, Pawn) == 0x000000, "Member 'BTT_MoveTo_C_MoveTo::Pawn' has a wrong offset!");

// Function BTT_MoveTo.BTT_MoveTo_C.MoveToLocationNearby
// 0x0030 (0x0030 - 0x0000)
struct BTT_MoveTo_C_MoveToLocationNearby final
{
public:
	class APawn*                                  Pawn;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UsePathfinding;                                    // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 ObserveTarget;                                     // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_MoveTo_C_MoveToLocationNearby) == 0x000008, "Wrong alignment on BTT_MoveTo_C_MoveToLocationNearby");
static_assert(sizeof(BTT_MoveTo_C_MoveToLocationNearby) == 0x000030, "Wrong size on BTT_MoveTo_C_MoveToLocationNearby");
static_assert(offsetof(BTT_MoveTo_C_MoveToLocationNearby, Pawn) == 0x000000, "Member 'BTT_MoveTo_C_MoveToLocationNearby::Pawn' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_MoveToLocationNearby, Location) == 0x000008, "Member 'BTT_MoveTo_C_MoveToLocationNearby::Location' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_MoveToLocationNearby, UsePathfinding) == 0x000020, "Member 'BTT_MoveTo_C_MoveToLocationNearby::UsePathfinding' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_MoveToLocationNearby, ObserveTarget) == 0x000028, "Member 'BTT_MoveTo_C_MoveToLocationNearby::ObserveTarget' has a wrong offset!");

// Function BTT_MoveTo.BTT_MoveTo_C.MoveToTarget
// 0x0028 (0x0028 - 0x0000)
struct BTT_MoveTo_C_MoveToTarget final
{
public:
	class APawn*                                  Pawn;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Actor;                                             // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_MoveTo_C_MoveToTarget) == 0x000008, "Wrong alignment on BTT_MoveTo_C_MoveToTarget");
static_assert(sizeof(BTT_MoveTo_C_MoveToTarget) == 0x000028, "Wrong size on BTT_MoveTo_C_MoveToTarget");
static_assert(offsetof(BTT_MoveTo_C_MoveToTarget, Pawn) == 0x000000, "Member 'BTT_MoveTo_C_MoveToTarget::Pawn' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_MoveToTarget, Location) == 0x000008, "Member 'BTT_MoveTo_C_MoveToTarget::Location' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_MoveToTarget, Actor) == 0x000020, "Member 'BTT_MoveTo_C_MoveToTarget::Actor' has a wrong offset!");

// Function BTT_MoveTo.BTT_MoveTo_C.OnFail_10B4AC5B433818C972C40BB663D8FC16
// 0x0001 (0x0001 - 0x0000)
struct BTT_MoveTo_C_OnFail_10B4AC5B433818C972C40BB663D8FC16 final
{
public:
	EPathFollowingResult                          MovementResult;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_MoveTo_C_OnFail_10B4AC5B433818C972C40BB663D8FC16) == 0x000001, "Wrong alignment on BTT_MoveTo_C_OnFail_10B4AC5B433818C972C40BB663D8FC16");
static_assert(sizeof(BTT_MoveTo_C_OnFail_10B4AC5B433818C972C40BB663D8FC16) == 0x000001, "Wrong size on BTT_MoveTo_C_OnFail_10B4AC5B433818C972C40BB663D8FC16");
static_assert(offsetof(BTT_MoveTo_C_OnFail_10B4AC5B433818C972C40BB663D8FC16, MovementResult) == 0x000000, "Member 'BTT_MoveTo_C_OnFail_10B4AC5B433818C972C40BB663D8FC16::MovementResult' has a wrong offset!");

// Function BTT_MoveTo.BTT_MoveTo_C.OnFail_9E5D74E8496A9FC6C0E927BBCEBB275B
// 0x0001 (0x0001 - 0x0000)
struct BTT_MoveTo_C_OnFail_9E5D74E8496A9FC6C0E927BBCEBB275B final
{
public:
	EPathFollowingResult                          MovementResult;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_MoveTo_C_OnFail_9E5D74E8496A9FC6C0E927BBCEBB275B) == 0x000001, "Wrong alignment on BTT_MoveTo_C_OnFail_9E5D74E8496A9FC6C0E927BBCEBB275B");
static_assert(sizeof(BTT_MoveTo_C_OnFail_9E5D74E8496A9FC6C0E927BBCEBB275B) == 0x000001, "Wrong size on BTT_MoveTo_C_OnFail_9E5D74E8496A9FC6C0E927BBCEBB275B");
static_assert(offsetof(BTT_MoveTo_C_OnFail_9E5D74E8496A9FC6C0E927BBCEBB275B, MovementResult) == 0x000000, "Member 'BTT_MoveTo_C_OnFail_9E5D74E8496A9FC6C0E927BBCEBB275B::MovementResult' has a wrong offset!");

// Function BTT_MoveTo.BTT_MoveTo_C.OnSuccess_10B4AC5B433818C972C40BB663D8FC16
// 0x0001 (0x0001 - 0x0000)
struct BTT_MoveTo_C_OnSuccess_10B4AC5B433818C972C40BB663D8FC16 final
{
public:
	EPathFollowingResult                          MovementResult;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_MoveTo_C_OnSuccess_10B4AC5B433818C972C40BB663D8FC16) == 0x000001, "Wrong alignment on BTT_MoveTo_C_OnSuccess_10B4AC5B433818C972C40BB663D8FC16");
static_assert(sizeof(BTT_MoveTo_C_OnSuccess_10B4AC5B433818C972C40BB663D8FC16) == 0x000001, "Wrong size on BTT_MoveTo_C_OnSuccess_10B4AC5B433818C972C40BB663D8FC16");
static_assert(offsetof(BTT_MoveTo_C_OnSuccess_10B4AC5B433818C972C40BB663D8FC16, MovementResult) == 0x000000, "Member 'BTT_MoveTo_C_OnSuccess_10B4AC5B433818C972C40BB663D8FC16::MovementResult' has a wrong offset!");

// Function BTT_MoveTo.BTT_MoveTo_C.OnSuccess_9E5D74E8496A9FC6C0E927BBCEBB275B
// 0x0001 (0x0001 - 0x0000)
struct BTT_MoveTo_C_OnSuccess_9E5D74E8496A9FC6C0E927BBCEBB275B final
{
public:
	EPathFollowingResult                          MovementResult;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_MoveTo_C_OnSuccess_9E5D74E8496A9FC6C0E927BBCEBB275B) == 0x000001, "Wrong alignment on BTT_MoveTo_C_OnSuccess_9E5D74E8496A9FC6C0E927BBCEBB275B");
static_assert(sizeof(BTT_MoveTo_C_OnSuccess_9E5D74E8496A9FC6C0E927BBCEBB275B) == 0x000001, "Wrong size on BTT_MoveTo_C_OnSuccess_9E5D74E8496A9FC6C0E927BBCEBB275B");
static_assert(offsetof(BTT_MoveTo_C_OnSuccess_9E5D74E8496A9FC6C0E927BBCEBB275B, MovementResult) == 0x000000, "Member 'BTT_MoveTo_C_OnSuccess_9E5D74E8496A9FC6C0E927BBCEBB275B::MovementResult' has a wrong offset!");

// Function BTT_MoveTo.BTT_MoveTo_C.OnTargetChanged
// 0x0001 (0x0001 - 0x0000)
struct BTT_MoveTo_C_OnTargetChanged final
{
public:
	uint8                                         KeyID;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_MoveTo_C_OnTargetChanged) == 0x000001, "Wrong alignment on BTT_MoveTo_C_OnTargetChanged");
static_assert(sizeof(BTT_MoveTo_C_OnTargetChanged) == 0x000001, "Wrong size on BTT_MoveTo_C_OnTargetChanged");
static_assert(offsetof(BTT_MoveTo_C_OnTargetChanged, KeyID) == 0x000000, "Member 'BTT_MoveTo_C_OnTargetChanged::KeyID' has a wrong offset!");

// Function BTT_MoveTo.BTT_MoveTo_C.PickTargetPathWaypoint
// 0x0038 (0x0038 - 0x0000)
struct BTT_MoveTo_C_PickTargetPathWaypoint final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Waypoint;                                          // 0x0008(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E[0x2];                                       // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_MoveTo_C_PickTargetPathWaypoint) == 0x000008, "Wrong alignment on BTT_MoveTo_C_PickTargetPathWaypoint");
static_assert(sizeof(BTT_MoveTo_C_PickTargetPathWaypoint) == 0x000038, "Wrong size on BTT_MoveTo_C_PickTargetPathWaypoint");
static_assert(offsetof(BTT_MoveTo_C_PickTargetPathWaypoint, Result) == 0x000000, "Member 'BTT_MoveTo_C_PickTargetPathWaypoint::Result' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_PickTargetPathWaypoint, Waypoint) == 0x000008, "Member 'BTT_MoveTo_C_PickTargetPathWaypoint::Waypoint' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_PickTargetPathWaypoint, Temp_int_Variable) == 0x000020, "Member 'BTT_MoveTo_C_PickTargetPathWaypoint::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_PickTargetPathWaypoint, CallFunc_Subtract_IntInt_ReturnValue) == 0x000024, "Member 'BTT_MoveTo_C_PickTargetPathWaypoint::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_PickTargetPathWaypoint, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BTT_MoveTo_C_PickTargetPathWaypoint::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_PickTargetPathWaypoint, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'BTT_MoveTo_C_PickTargetPathWaypoint::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_PickTargetPathWaypoint, CallFunc_IsValid_ReturnValue) == 0x00002D, "Member 'BTT_MoveTo_C_PickTargetPathWaypoint::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_PickTargetPathWaypoint, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'BTT_MoveTo_C_PickTargetPathWaypoint::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BTT_MoveTo.BTT_MoveTo_C.ReceiveAbortAI
// 0x0010 (0x0010 - 0x0000)
struct BTT_MoveTo_C_ReceiveAbortAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_MoveTo_C_ReceiveAbortAI) == 0x000008, "Wrong alignment on BTT_MoveTo_C_ReceiveAbortAI");
static_assert(sizeof(BTT_MoveTo_C_ReceiveAbortAI) == 0x000010, "Wrong size on BTT_MoveTo_C_ReceiveAbortAI");
static_assert(offsetof(BTT_MoveTo_C_ReceiveAbortAI, OwnerController) == 0x000000, "Member 'BTT_MoveTo_C_ReceiveAbortAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_ReceiveAbortAI, ControlledPawn) == 0x000008, "Member 'BTT_MoveTo_C_ReceiveAbortAI::ControlledPawn' has a wrong offset!");

// Function BTT_MoveTo.BTT_MoveTo_C.ReceiveExecuteAI
// 0x0010 (0x0010 - 0x0000)
struct BTT_MoveTo_C_ReceiveExecuteAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_MoveTo_C_ReceiveExecuteAI) == 0x000008, "Wrong alignment on BTT_MoveTo_C_ReceiveExecuteAI");
static_assert(sizeof(BTT_MoveTo_C_ReceiveExecuteAI) == 0x000010, "Wrong size on BTT_MoveTo_C_ReceiveExecuteAI");
static_assert(offsetof(BTT_MoveTo_C_ReceiveExecuteAI, OwnerController) == 0x000000, "Member 'BTT_MoveTo_C_ReceiveExecuteAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_ReceiveExecuteAI, ControlledPawn) == 0x000008, "Member 'BTT_MoveTo_C_ReceiveExecuteAI::ControlledPawn' has a wrong offset!");

// Function BTT_MoveTo.BTT_MoveTo_C.ReceiveTickAI
// 0x0018 (0x0018 - 0x0000)
struct BTT_MoveTo_C_ReceiveTickAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaSeconds;                                      // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_MoveTo_C_ReceiveTickAI) == 0x000008, "Wrong alignment on BTT_MoveTo_C_ReceiveTickAI");
static_assert(sizeof(BTT_MoveTo_C_ReceiveTickAI) == 0x000018, "Wrong size on BTT_MoveTo_C_ReceiveTickAI");
static_assert(offsetof(BTT_MoveTo_C_ReceiveTickAI, OwnerController) == 0x000000, "Member 'BTT_MoveTo_C_ReceiveTickAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_ReceiveTickAI, ControlledPawn) == 0x000008, "Member 'BTT_MoveTo_C_ReceiveTickAI::ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_ReceiveTickAI, DeltaSeconds) == 0x000010, "Member 'BTT_MoveTo_C_ReceiveTickAI::DeltaSeconds' has a wrong offset!");

// Function BTT_MoveTo.BTT_MoveTo_C.TargetPathNeedCheckReachWaypoint
// 0x000C (0x000C - 0x0000)
struct BTT_MoveTo_C_TargetPathNeedCheckReachWaypoint final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_MoveTo_C_TargetPathNeedCheckReachWaypoint) == 0x000004, "Wrong alignment on BTT_MoveTo_C_TargetPathNeedCheckReachWaypoint");
static_assert(sizeof(BTT_MoveTo_C_TargetPathNeedCheckReachWaypoint) == 0x00000C, "Wrong size on BTT_MoveTo_C_TargetPathNeedCheckReachWaypoint");
static_assert(offsetof(BTT_MoveTo_C_TargetPathNeedCheckReachWaypoint, Result) == 0x000000, "Member 'BTT_MoveTo_C_TargetPathNeedCheckReachWaypoint::Result' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_TargetPathNeedCheckReachWaypoint, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'BTT_MoveTo_C_TargetPathNeedCheckReachWaypoint::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_TargetPathNeedCheckReachWaypoint, CallFunc_Array_Length_ReturnValue) == 0x000004, "Member 'BTT_MoveTo_C_TargetPathNeedCheckReachWaypoint::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_TargetPathNeedCheckReachWaypoint, CallFunc_Less_IntInt_ReturnValue) == 0x000008, "Member 'BTT_MoveTo_C_TargetPathNeedCheckReachWaypoint::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

}

