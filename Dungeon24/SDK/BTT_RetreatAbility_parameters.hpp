#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTT_RetreatAbility

#include "Basic.hpp"


namespace SDK::Params
{

// Function BTT_RetreatAbility.BTT_RetreatAbility_C.ExecuteUbergraph_BTT_RetreatAbility
// 0x0048 (0x0048 - 0x0000)
struct BTT_RetreatAbility_C_ExecuteUbergraph_BTT_RetreatAbility final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_Event_OwnerController;                      // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn;                       // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetBlackboardValueAsInt_ReturnValue;      // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Tgf_Monster_C*                      K2Node_DynamicCast_AsBP_Tgf_Monster;               // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloat_ReturnValue;                  // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryActivateAbilityByClass_ReturnValue;    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_RetreatAbility_C_ExecuteUbergraph_BTT_RetreatAbility) == 0x000008, "Wrong alignment on BTT_RetreatAbility_C_ExecuteUbergraph_BTT_RetreatAbility");
static_assert(sizeof(BTT_RetreatAbility_C_ExecuteUbergraph_BTT_RetreatAbility) == 0x000048, "Wrong size on BTT_RetreatAbility_C_ExecuteUbergraph_BTT_RetreatAbility");
static_assert(offsetof(BTT_RetreatAbility_C_ExecuteUbergraph_BTT_RetreatAbility, EntryPoint) == 0x000000, "Member 'BTT_RetreatAbility_C_ExecuteUbergraph_BTT_RetreatAbility::EntryPoint' has a wrong offset!");
static_assert(offsetof(BTT_RetreatAbility_C_ExecuteUbergraph_BTT_RetreatAbility, K2Node_Event_OwnerController) == 0x000008, "Member 'BTT_RetreatAbility_C_ExecuteUbergraph_BTT_RetreatAbility::K2Node_Event_OwnerController' has a wrong offset!");
static_assert(offsetof(BTT_RetreatAbility_C_ExecuteUbergraph_BTT_RetreatAbility, K2Node_Event_ControlledPawn) == 0x000010, "Member 'BTT_RetreatAbility_C_ExecuteUbergraph_BTT_RetreatAbility::K2Node_Event_ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTT_RetreatAbility_C_ExecuteUbergraph_BTT_RetreatAbility, CallFunc_GetBlackboardValueAsInt_ReturnValue) == 0x000018, "Member 'BTT_RetreatAbility_C_ExecuteUbergraph_BTT_RetreatAbility::CallFunc_GetBlackboardValueAsInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_RetreatAbility_C_ExecuteUbergraph_BTT_RetreatAbility, K2Node_DynamicCast_AsBP_Tgf_Monster) == 0x000020, "Member 'BTT_RetreatAbility_C_ExecuteUbergraph_BTT_RetreatAbility::K2Node_DynamicCast_AsBP_Tgf_Monster' has a wrong offset!");
static_assert(offsetof(BTT_RetreatAbility_C_ExecuteUbergraph_BTT_RetreatAbility, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BTT_RetreatAbility_C_ExecuteUbergraph_BTT_RetreatAbility::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BTT_RetreatAbility_C_ExecuteUbergraph_BTT_RetreatAbility, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x000030, "Member 'BTT_RetreatAbility_C_ExecuteUbergraph_BTT_RetreatAbility::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_RetreatAbility_C_ExecuteUbergraph_BTT_RetreatAbility, CallFunc_RandomFloat_ReturnValue) == 0x000038, "Member 'BTT_RetreatAbility_C_ExecuteUbergraph_BTT_RetreatAbility::CallFunc_RandomFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_RetreatAbility_C_ExecuteUbergraph_BTT_RetreatAbility, CallFunc_TryActivateAbilityByClass_ReturnValue) == 0x000040, "Member 'BTT_RetreatAbility_C_ExecuteUbergraph_BTT_RetreatAbility::CallFunc_TryActivateAbilityByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_RetreatAbility_C_ExecuteUbergraph_BTT_RetreatAbility, CallFunc_IsValidClass_ReturnValue) == 0x000041, "Member 'BTT_RetreatAbility_C_ExecuteUbergraph_BTT_RetreatAbility::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_RetreatAbility_C_ExecuteUbergraph_BTT_RetreatAbility, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000042, "Member 'BTT_RetreatAbility_C_ExecuteUbergraph_BTT_RetreatAbility::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");

// Function BTT_RetreatAbility.BTT_RetreatAbility_C.ReceiveExecuteAI
// 0x0010 (0x0010 - 0x0000)
struct BTT_RetreatAbility_C_ReceiveExecuteAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_RetreatAbility_C_ReceiveExecuteAI) == 0x000008, "Wrong alignment on BTT_RetreatAbility_C_ReceiveExecuteAI");
static_assert(sizeof(BTT_RetreatAbility_C_ReceiveExecuteAI) == 0x000010, "Wrong size on BTT_RetreatAbility_C_ReceiveExecuteAI");
static_assert(offsetof(BTT_RetreatAbility_C_ReceiveExecuteAI, OwnerController) == 0x000000, "Member 'BTT_RetreatAbility_C_ReceiveExecuteAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTT_RetreatAbility_C_ReceiveExecuteAI, ControlledPawn) == 0x000008, "Member 'BTT_RetreatAbility_C_ReceiveExecuteAI::ControlledPawn' has a wrong offset!");

}

