#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WwiseResourceLoader

#include "Basic.hpp"

#include "WwiseResourceLoader_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function WwiseResourceLoader.WwiseEventInfoLibrary.BreakStruct
// 0x0050 (0x0050 - 0x0000)
struct WwiseEventInfoLibrary_BreakStruct final
{
public:
	struct FWwiseEventInfo                        Ref;                                               // 0x0000(0x0024)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGuid                                  OutWwiseGuid;                                      // 0x0024(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         OutWwiseShortId;                                   // 0x0034(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 OutWwiseName;                                      // 0x0038(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EWwiseEventSwitchContainerLoading             OutSwitchContainerLoading;                         // 0x0048(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EWwiseEventDestroyOptions                     OutDestroyOptions;                                 // 0x0049(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4A[0x2];                                       // 0x004A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         OutHardCodedSoundBankShortId;                      // 0x004C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WwiseEventInfoLibrary_BreakStruct) == 0x000008, "Wrong alignment on WwiseEventInfoLibrary_BreakStruct");
static_assert(sizeof(WwiseEventInfoLibrary_BreakStruct) == 0x000050, "Wrong size on WwiseEventInfoLibrary_BreakStruct");
static_assert(offsetof(WwiseEventInfoLibrary_BreakStruct, Ref) == 0x000000, "Member 'WwiseEventInfoLibrary_BreakStruct::Ref' has a wrong offset!");
static_assert(offsetof(WwiseEventInfoLibrary_BreakStruct, OutWwiseGuid) == 0x000024, "Member 'WwiseEventInfoLibrary_BreakStruct::OutWwiseGuid' has a wrong offset!");
static_assert(offsetof(WwiseEventInfoLibrary_BreakStruct, OutWwiseShortId) == 0x000034, "Member 'WwiseEventInfoLibrary_BreakStruct::OutWwiseShortId' has a wrong offset!");
static_assert(offsetof(WwiseEventInfoLibrary_BreakStruct, OutWwiseName) == 0x000038, "Member 'WwiseEventInfoLibrary_BreakStruct::OutWwiseName' has a wrong offset!");
static_assert(offsetof(WwiseEventInfoLibrary_BreakStruct, OutSwitchContainerLoading) == 0x000048, "Member 'WwiseEventInfoLibrary_BreakStruct::OutSwitchContainerLoading' has a wrong offset!");
static_assert(offsetof(WwiseEventInfoLibrary_BreakStruct, OutDestroyOptions) == 0x000049, "Member 'WwiseEventInfoLibrary_BreakStruct::OutDestroyOptions' has a wrong offset!");
static_assert(offsetof(WwiseEventInfoLibrary_BreakStruct, OutHardCodedSoundBankShortId) == 0x00004C, "Member 'WwiseEventInfoLibrary_BreakStruct::OutHardCodedSoundBankShortId' has a wrong offset!");

// Function WwiseResourceLoader.WwiseEventInfoLibrary.GetDestroyOptions
// 0x0028 (0x0028 - 0x0000)
struct WwiseEventInfoLibrary_GetDestroyOptions final
{
public:
	struct FWwiseEventInfo                        Ref;                                               // 0x0000(0x0024)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EWwiseEventDestroyOptions                     ReturnValue;                                       // 0x0024(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(WwiseEventInfoLibrary_GetDestroyOptions) == 0x000004, "Wrong alignment on WwiseEventInfoLibrary_GetDestroyOptions");
static_assert(sizeof(WwiseEventInfoLibrary_GetDestroyOptions) == 0x000028, "Wrong size on WwiseEventInfoLibrary_GetDestroyOptions");
static_assert(offsetof(WwiseEventInfoLibrary_GetDestroyOptions, Ref) == 0x000000, "Member 'WwiseEventInfoLibrary_GetDestroyOptions::Ref' has a wrong offset!");
static_assert(offsetof(WwiseEventInfoLibrary_GetDestroyOptions, ReturnValue) == 0x000024, "Member 'WwiseEventInfoLibrary_GetDestroyOptions::ReturnValue' has a wrong offset!");

// Function WwiseResourceLoader.WwiseEventInfoLibrary.GetHardCodedSoundBankShortId
// 0x0028 (0x0028 - 0x0000)
struct WwiseEventInfoLibrary_GetHardCodedSoundBankShortId final
{
public:
	struct FWwiseEventInfo                        Ref;                                               // 0x0000(0x0024)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0024(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WwiseEventInfoLibrary_GetHardCodedSoundBankShortId) == 0x000004, "Wrong alignment on WwiseEventInfoLibrary_GetHardCodedSoundBankShortId");
static_assert(sizeof(WwiseEventInfoLibrary_GetHardCodedSoundBankShortId) == 0x000028, "Wrong size on WwiseEventInfoLibrary_GetHardCodedSoundBankShortId");
static_assert(offsetof(WwiseEventInfoLibrary_GetHardCodedSoundBankShortId, Ref) == 0x000000, "Member 'WwiseEventInfoLibrary_GetHardCodedSoundBankShortId::Ref' has a wrong offset!");
static_assert(offsetof(WwiseEventInfoLibrary_GetHardCodedSoundBankShortId, ReturnValue) == 0x000024, "Member 'WwiseEventInfoLibrary_GetHardCodedSoundBankShortId::ReturnValue' has a wrong offset!");

// Function WwiseResourceLoader.WwiseEventInfoLibrary.GetSwitchContainerLoading
// 0x0028 (0x0028 - 0x0000)
struct WwiseEventInfoLibrary_GetSwitchContainerLoading final
{
public:
	struct FWwiseEventInfo                        Ref;                                               // 0x0000(0x0024)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EWwiseEventSwitchContainerLoading             ReturnValue;                                       // 0x0024(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(WwiseEventInfoLibrary_GetSwitchContainerLoading) == 0x000004, "Wrong alignment on WwiseEventInfoLibrary_GetSwitchContainerLoading");
static_assert(sizeof(WwiseEventInfoLibrary_GetSwitchContainerLoading) == 0x000028, "Wrong size on WwiseEventInfoLibrary_GetSwitchContainerLoading");
static_assert(offsetof(WwiseEventInfoLibrary_GetSwitchContainerLoading, Ref) == 0x000000, "Member 'WwiseEventInfoLibrary_GetSwitchContainerLoading::Ref' has a wrong offset!");
static_assert(offsetof(WwiseEventInfoLibrary_GetSwitchContainerLoading, ReturnValue) == 0x000024, "Member 'WwiseEventInfoLibrary_GetSwitchContainerLoading::ReturnValue' has a wrong offset!");

// Function WwiseResourceLoader.WwiseEventInfoLibrary.GetWwiseGuid
// 0x0034 (0x0034 - 0x0000)
struct WwiseEventInfoLibrary_GetWwiseGuid final
{
public:
	struct FWwiseEventInfo                        Ref;                                               // 0x0000(0x0024)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGuid                                  ReturnValue;                                       // 0x0024(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WwiseEventInfoLibrary_GetWwiseGuid) == 0x000004, "Wrong alignment on WwiseEventInfoLibrary_GetWwiseGuid");
static_assert(sizeof(WwiseEventInfoLibrary_GetWwiseGuid) == 0x000034, "Wrong size on WwiseEventInfoLibrary_GetWwiseGuid");
static_assert(offsetof(WwiseEventInfoLibrary_GetWwiseGuid, Ref) == 0x000000, "Member 'WwiseEventInfoLibrary_GetWwiseGuid::Ref' has a wrong offset!");
static_assert(offsetof(WwiseEventInfoLibrary_GetWwiseGuid, ReturnValue) == 0x000024, "Member 'WwiseEventInfoLibrary_GetWwiseGuid::ReturnValue' has a wrong offset!");

// Function WwiseResourceLoader.WwiseEventInfoLibrary.GetWwiseName
// 0x0038 (0x0038 - 0x0000)
struct WwiseEventInfoLibrary_GetWwiseName final
{
public:
	struct FWwiseEventInfo                        Ref;                                               // 0x0000(0x0024)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ReturnValue;                                       // 0x0028(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WwiseEventInfoLibrary_GetWwiseName) == 0x000008, "Wrong alignment on WwiseEventInfoLibrary_GetWwiseName");
static_assert(sizeof(WwiseEventInfoLibrary_GetWwiseName) == 0x000038, "Wrong size on WwiseEventInfoLibrary_GetWwiseName");
static_assert(offsetof(WwiseEventInfoLibrary_GetWwiseName, Ref) == 0x000000, "Member 'WwiseEventInfoLibrary_GetWwiseName::Ref' has a wrong offset!");
static_assert(offsetof(WwiseEventInfoLibrary_GetWwiseName, ReturnValue) == 0x000028, "Member 'WwiseEventInfoLibrary_GetWwiseName::ReturnValue' has a wrong offset!");

// Function WwiseResourceLoader.WwiseEventInfoLibrary.GetWwiseShortID
// 0x0028 (0x0028 - 0x0000)
struct WwiseEventInfoLibrary_GetWwiseShortID final
{
public:
	struct FWwiseEventInfo                        Ref;                                               // 0x0000(0x0024)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0024(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WwiseEventInfoLibrary_GetWwiseShortID) == 0x000004, "Wrong alignment on WwiseEventInfoLibrary_GetWwiseShortID");
static_assert(sizeof(WwiseEventInfoLibrary_GetWwiseShortID) == 0x000028, "Wrong size on WwiseEventInfoLibrary_GetWwiseShortID");
static_assert(offsetof(WwiseEventInfoLibrary_GetWwiseShortID, Ref) == 0x000000, "Member 'WwiseEventInfoLibrary_GetWwiseShortID::Ref' has a wrong offset!");
static_assert(offsetof(WwiseEventInfoLibrary_GetWwiseShortID, ReturnValue) == 0x000024, "Member 'WwiseEventInfoLibrary_GetWwiseShortID::ReturnValue' has a wrong offset!");

// Function WwiseResourceLoader.WwiseEventInfoLibrary.MakeStruct
// 0x0058 (0x0058 - 0x0000)
struct WwiseEventInfoLibrary_MakeStruct final
{
public:
	struct FGuid                                  WwiseGuid;                                         // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         WwiseShortId;                                      // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 WwiseName;                                         // 0x0018(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EWwiseEventSwitchContainerLoading             SwitchContainerLoading;                            // 0x0028(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EWwiseEventDestroyOptions                     DestroyOptions;                                    // 0x0029(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2A[0x2];                                       // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         HardCodedSoundBankShortId;                         // 0x002C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FWwiseEventInfo                        ReturnValue;                                       // 0x0030(0x0024)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(WwiseEventInfoLibrary_MakeStruct) == 0x000008, "Wrong alignment on WwiseEventInfoLibrary_MakeStruct");
static_assert(sizeof(WwiseEventInfoLibrary_MakeStruct) == 0x000058, "Wrong size on WwiseEventInfoLibrary_MakeStruct");
static_assert(offsetof(WwiseEventInfoLibrary_MakeStruct, WwiseGuid) == 0x000000, "Member 'WwiseEventInfoLibrary_MakeStruct::WwiseGuid' has a wrong offset!");
static_assert(offsetof(WwiseEventInfoLibrary_MakeStruct, WwiseShortId) == 0x000010, "Member 'WwiseEventInfoLibrary_MakeStruct::WwiseShortId' has a wrong offset!");
static_assert(offsetof(WwiseEventInfoLibrary_MakeStruct, WwiseName) == 0x000018, "Member 'WwiseEventInfoLibrary_MakeStruct::WwiseName' has a wrong offset!");
static_assert(offsetof(WwiseEventInfoLibrary_MakeStruct, SwitchContainerLoading) == 0x000028, "Member 'WwiseEventInfoLibrary_MakeStruct::SwitchContainerLoading' has a wrong offset!");
static_assert(offsetof(WwiseEventInfoLibrary_MakeStruct, DestroyOptions) == 0x000029, "Member 'WwiseEventInfoLibrary_MakeStruct::DestroyOptions' has a wrong offset!");
static_assert(offsetof(WwiseEventInfoLibrary_MakeStruct, HardCodedSoundBankShortId) == 0x00002C, "Member 'WwiseEventInfoLibrary_MakeStruct::HardCodedSoundBankShortId' has a wrong offset!");
static_assert(offsetof(WwiseEventInfoLibrary_MakeStruct, ReturnValue) == 0x000030, "Member 'WwiseEventInfoLibrary_MakeStruct::ReturnValue' has a wrong offset!");

// Function WwiseResourceLoader.WwiseEventInfoLibrary.SetDestroyOptions
// 0x004C (0x004C - 0x0000)
struct WwiseEventInfoLibrary_SetDestroyOptions final
{
public:
	struct FWwiseEventInfo                        Ref;                                               // 0x0000(0x0024)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EWwiseEventDestroyOptions                     DestroyOptions;                                    // 0x0024(0x0001)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWwiseEventInfo                        ReturnValue;                                       // 0x0028(0x0024)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WwiseEventInfoLibrary_SetDestroyOptions) == 0x000004, "Wrong alignment on WwiseEventInfoLibrary_SetDestroyOptions");
static_assert(sizeof(WwiseEventInfoLibrary_SetDestroyOptions) == 0x00004C, "Wrong size on WwiseEventInfoLibrary_SetDestroyOptions");
static_assert(offsetof(WwiseEventInfoLibrary_SetDestroyOptions, Ref) == 0x000000, "Member 'WwiseEventInfoLibrary_SetDestroyOptions::Ref' has a wrong offset!");
static_assert(offsetof(WwiseEventInfoLibrary_SetDestroyOptions, DestroyOptions) == 0x000024, "Member 'WwiseEventInfoLibrary_SetDestroyOptions::DestroyOptions' has a wrong offset!");
static_assert(offsetof(WwiseEventInfoLibrary_SetDestroyOptions, ReturnValue) == 0x000028, "Member 'WwiseEventInfoLibrary_SetDestroyOptions::ReturnValue' has a wrong offset!");

// Function WwiseResourceLoader.WwiseEventInfoLibrary.SetHardCodedSoundBankShortId
// 0x004C (0x004C - 0x0000)
struct WwiseEventInfoLibrary_SetHardCodedSoundBankShortId final
{
public:
	struct FWwiseEventInfo                        Ref;                                               // 0x0000(0x0024)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         HardCodedSoundBankShortId;                         // 0x0024(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FWwiseEventInfo                        ReturnValue;                                       // 0x0028(0x0024)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WwiseEventInfoLibrary_SetHardCodedSoundBankShortId) == 0x000004, "Wrong alignment on WwiseEventInfoLibrary_SetHardCodedSoundBankShortId");
static_assert(sizeof(WwiseEventInfoLibrary_SetHardCodedSoundBankShortId) == 0x00004C, "Wrong size on WwiseEventInfoLibrary_SetHardCodedSoundBankShortId");
static_assert(offsetof(WwiseEventInfoLibrary_SetHardCodedSoundBankShortId, Ref) == 0x000000, "Member 'WwiseEventInfoLibrary_SetHardCodedSoundBankShortId::Ref' has a wrong offset!");
static_assert(offsetof(WwiseEventInfoLibrary_SetHardCodedSoundBankShortId, HardCodedSoundBankShortId) == 0x000024, "Member 'WwiseEventInfoLibrary_SetHardCodedSoundBankShortId::HardCodedSoundBankShortId' has a wrong offset!");
static_assert(offsetof(WwiseEventInfoLibrary_SetHardCodedSoundBankShortId, ReturnValue) == 0x000028, "Member 'WwiseEventInfoLibrary_SetHardCodedSoundBankShortId::ReturnValue' has a wrong offset!");

// Function WwiseResourceLoader.WwiseEventInfoLibrary.SetSwitchContainerLoading
// 0x004C (0x004C - 0x0000)
struct WwiseEventInfoLibrary_SetSwitchContainerLoading final
{
public:
	struct FWwiseEventInfo                        Ref;                                               // 0x0000(0x0024)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EWwiseEventSwitchContainerLoading             SwitchContainerLoading;                            // 0x0024(0x0001)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWwiseEventInfo                        ReturnValue;                                       // 0x0028(0x0024)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WwiseEventInfoLibrary_SetSwitchContainerLoading) == 0x000004, "Wrong alignment on WwiseEventInfoLibrary_SetSwitchContainerLoading");
static_assert(sizeof(WwiseEventInfoLibrary_SetSwitchContainerLoading) == 0x00004C, "Wrong size on WwiseEventInfoLibrary_SetSwitchContainerLoading");
static_assert(offsetof(WwiseEventInfoLibrary_SetSwitchContainerLoading, Ref) == 0x000000, "Member 'WwiseEventInfoLibrary_SetSwitchContainerLoading::Ref' has a wrong offset!");
static_assert(offsetof(WwiseEventInfoLibrary_SetSwitchContainerLoading, SwitchContainerLoading) == 0x000024, "Member 'WwiseEventInfoLibrary_SetSwitchContainerLoading::SwitchContainerLoading' has a wrong offset!");
static_assert(offsetof(WwiseEventInfoLibrary_SetSwitchContainerLoading, ReturnValue) == 0x000028, "Member 'WwiseEventInfoLibrary_SetSwitchContainerLoading::ReturnValue' has a wrong offset!");

// Function WwiseResourceLoader.WwiseEventInfoLibrary.SetWwiseGuid
// 0x0058 (0x0058 - 0x0000)
struct WwiseEventInfoLibrary_SetWwiseGuid final
{
public:
	struct FWwiseEventInfo                        Ref;                                               // 0x0000(0x0024)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGuid                                  WwiseGuid;                                         // 0x0024(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FWwiseEventInfo                        ReturnValue;                                       // 0x0034(0x0024)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WwiseEventInfoLibrary_SetWwiseGuid) == 0x000004, "Wrong alignment on WwiseEventInfoLibrary_SetWwiseGuid");
static_assert(sizeof(WwiseEventInfoLibrary_SetWwiseGuid) == 0x000058, "Wrong size on WwiseEventInfoLibrary_SetWwiseGuid");
static_assert(offsetof(WwiseEventInfoLibrary_SetWwiseGuid, Ref) == 0x000000, "Member 'WwiseEventInfoLibrary_SetWwiseGuid::Ref' has a wrong offset!");
static_assert(offsetof(WwiseEventInfoLibrary_SetWwiseGuid, WwiseGuid) == 0x000024, "Member 'WwiseEventInfoLibrary_SetWwiseGuid::WwiseGuid' has a wrong offset!");
static_assert(offsetof(WwiseEventInfoLibrary_SetWwiseGuid, ReturnValue) == 0x000034, "Member 'WwiseEventInfoLibrary_SetWwiseGuid::ReturnValue' has a wrong offset!");

// Function WwiseResourceLoader.WwiseEventInfoLibrary.SetWwiseName
// 0x0060 (0x0060 - 0x0000)
struct WwiseEventInfoLibrary_SetWwiseName final
{
public:
	struct FWwiseEventInfo                        Ref;                                               // 0x0000(0x0024)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 WwiseName;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FWwiseEventInfo                        ReturnValue;                                       // 0x0038(0x0024)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(WwiseEventInfoLibrary_SetWwiseName) == 0x000008, "Wrong alignment on WwiseEventInfoLibrary_SetWwiseName");
static_assert(sizeof(WwiseEventInfoLibrary_SetWwiseName) == 0x000060, "Wrong size on WwiseEventInfoLibrary_SetWwiseName");
static_assert(offsetof(WwiseEventInfoLibrary_SetWwiseName, Ref) == 0x000000, "Member 'WwiseEventInfoLibrary_SetWwiseName::Ref' has a wrong offset!");
static_assert(offsetof(WwiseEventInfoLibrary_SetWwiseName, WwiseName) == 0x000028, "Member 'WwiseEventInfoLibrary_SetWwiseName::WwiseName' has a wrong offset!");
static_assert(offsetof(WwiseEventInfoLibrary_SetWwiseName, ReturnValue) == 0x000038, "Member 'WwiseEventInfoLibrary_SetWwiseName::ReturnValue' has a wrong offset!");

// Function WwiseResourceLoader.WwiseEventInfoLibrary.SetWwiseShortId
// 0x004C (0x004C - 0x0000)
struct WwiseEventInfoLibrary_SetWwiseShortId final
{
public:
	struct FWwiseEventInfo                        Ref;                                               // 0x0000(0x0024)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         WwiseShortId;                                      // 0x0024(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FWwiseEventInfo                        ReturnValue;                                       // 0x0028(0x0024)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WwiseEventInfoLibrary_SetWwiseShortId) == 0x000004, "Wrong alignment on WwiseEventInfoLibrary_SetWwiseShortId");
static_assert(sizeof(WwiseEventInfoLibrary_SetWwiseShortId) == 0x00004C, "Wrong size on WwiseEventInfoLibrary_SetWwiseShortId");
static_assert(offsetof(WwiseEventInfoLibrary_SetWwiseShortId, Ref) == 0x000000, "Member 'WwiseEventInfoLibrary_SetWwiseShortId::Ref' has a wrong offset!");
static_assert(offsetof(WwiseEventInfoLibrary_SetWwiseShortId, WwiseShortId) == 0x000024, "Member 'WwiseEventInfoLibrary_SetWwiseShortId::WwiseShortId' has a wrong offset!");
static_assert(offsetof(WwiseEventInfoLibrary_SetWwiseShortId, ReturnValue) == 0x000028, "Member 'WwiseEventInfoLibrary_SetWwiseShortId::ReturnValue' has a wrong offset!");

// Function WwiseResourceLoader.WwiseGroupValueInfoLibrary.BreakStruct
// 0x0050 (0x0050 - 0x0000)
struct WwiseGroupValueInfoLibrary_BreakStruct final
{
public:
	struct FWwiseGroupValueInfo                   Ref;                                               // 0x0000(0x0024)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGuid                                  OutAssetGuid;                                      // 0x0024(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         OutGroupShortId;                                   // 0x0034(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         OutWwiseShortId;                                   // 0x0038(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 OutWwiseName;                                      // 0x0040(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WwiseGroupValueInfoLibrary_BreakStruct) == 0x000008, "Wrong alignment on WwiseGroupValueInfoLibrary_BreakStruct");
static_assert(sizeof(WwiseGroupValueInfoLibrary_BreakStruct) == 0x000050, "Wrong size on WwiseGroupValueInfoLibrary_BreakStruct");
static_assert(offsetof(WwiseGroupValueInfoLibrary_BreakStruct, Ref) == 0x000000, "Member 'WwiseGroupValueInfoLibrary_BreakStruct::Ref' has a wrong offset!");
static_assert(offsetof(WwiseGroupValueInfoLibrary_BreakStruct, OutAssetGuid) == 0x000024, "Member 'WwiseGroupValueInfoLibrary_BreakStruct::OutAssetGuid' has a wrong offset!");
static_assert(offsetof(WwiseGroupValueInfoLibrary_BreakStruct, OutGroupShortId) == 0x000034, "Member 'WwiseGroupValueInfoLibrary_BreakStruct::OutGroupShortId' has a wrong offset!");
static_assert(offsetof(WwiseGroupValueInfoLibrary_BreakStruct, OutWwiseShortId) == 0x000038, "Member 'WwiseGroupValueInfoLibrary_BreakStruct::OutWwiseShortId' has a wrong offset!");
static_assert(offsetof(WwiseGroupValueInfoLibrary_BreakStruct, OutWwiseName) == 0x000040, "Member 'WwiseGroupValueInfoLibrary_BreakStruct::OutWwiseName' has a wrong offset!");

// Function WwiseResourceLoader.WwiseGroupValueInfoLibrary.GetAssetGuid
// 0x0034 (0x0034 - 0x0000)
struct WwiseGroupValueInfoLibrary_GetAssetGuid final
{
public:
	struct FWwiseGroupValueInfo                   Ref;                                               // 0x0000(0x0024)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGuid                                  ReturnValue;                                       // 0x0024(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WwiseGroupValueInfoLibrary_GetAssetGuid) == 0x000004, "Wrong alignment on WwiseGroupValueInfoLibrary_GetAssetGuid");
static_assert(sizeof(WwiseGroupValueInfoLibrary_GetAssetGuid) == 0x000034, "Wrong size on WwiseGroupValueInfoLibrary_GetAssetGuid");
static_assert(offsetof(WwiseGroupValueInfoLibrary_GetAssetGuid, Ref) == 0x000000, "Member 'WwiseGroupValueInfoLibrary_GetAssetGuid::Ref' has a wrong offset!");
static_assert(offsetof(WwiseGroupValueInfoLibrary_GetAssetGuid, ReturnValue) == 0x000024, "Member 'WwiseGroupValueInfoLibrary_GetAssetGuid::ReturnValue' has a wrong offset!");

// Function WwiseResourceLoader.WwiseGroupValueInfoLibrary.GetGroupShortId
// 0x0028 (0x0028 - 0x0000)
struct WwiseGroupValueInfoLibrary_GetGroupShortId final
{
public:
	struct FWwiseGroupValueInfo                   Ref;                                               // 0x0000(0x0024)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0024(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WwiseGroupValueInfoLibrary_GetGroupShortId) == 0x000004, "Wrong alignment on WwiseGroupValueInfoLibrary_GetGroupShortId");
static_assert(sizeof(WwiseGroupValueInfoLibrary_GetGroupShortId) == 0x000028, "Wrong size on WwiseGroupValueInfoLibrary_GetGroupShortId");
static_assert(offsetof(WwiseGroupValueInfoLibrary_GetGroupShortId, Ref) == 0x000000, "Member 'WwiseGroupValueInfoLibrary_GetGroupShortId::Ref' has a wrong offset!");
static_assert(offsetof(WwiseGroupValueInfoLibrary_GetGroupShortId, ReturnValue) == 0x000024, "Member 'WwiseGroupValueInfoLibrary_GetGroupShortId::ReturnValue' has a wrong offset!");

// Function WwiseResourceLoader.WwiseGroupValueInfoLibrary.GetWwiseName
// 0x0038 (0x0038 - 0x0000)
struct WwiseGroupValueInfoLibrary_GetWwiseName final
{
public:
	struct FWwiseGroupValueInfo                   Ref;                                               // 0x0000(0x0024)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ReturnValue;                                       // 0x0028(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WwiseGroupValueInfoLibrary_GetWwiseName) == 0x000008, "Wrong alignment on WwiseGroupValueInfoLibrary_GetWwiseName");
static_assert(sizeof(WwiseGroupValueInfoLibrary_GetWwiseName) == 0x000038, "Wrong size on WwiseGroupValueInfoLibrary_GetWwiseName");
static_assert(offsetof(WwiseGroupValueInfoLibrary_GetWwiseName, Ref) == 0x000000, "Member 'WwiseGroupValueInfoLibrary_GetWwiseName::Ref' has a wrong offset!");
static_assert(offsetof(WwiseGroupValueInfoLibrary_GetWwiseName, ReturnValue) == 0x000028, "Member 'WwiseGroupValueInfoLibrary_GetWwiseName::ReturnValue' has a wrong offset!");

// Function WwiseResourceLoader.WwiseGroupValueInfoLibrary.GetWwiseShortID
// 0x0028 (0x0028 - 0x0000)
struct WwiseGroupValueInfoLibrary_GetWwiseShortID final
{
public:
	struct FWwiseGroupValueInfo                   Ref;                                               // 0x0000(0x0024)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0024(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WwiseGroupValueInfoLibrary_GetWwiseShortID) == 0x000004, "Wrong alignment on WwiseGroupValueInfoLibrary_GetWwiseShortID");
static_assert(sizeof(WwiseGroupValueInfoLibrary_GetWwiseShortID) == 0x000028, "Wrong size on WwiseGroupValueInfoLibrary_GetWwiseShortID");
static_assert(offsetof(WwiseGroupValueInfoLibrary_GetWwiseShortID, Ref) == 0x000000, "Member 'WwiseGroupValueInfoLibrary_GetWwiseShortID::Ref' has a wrong offset!");
static_assert(offsetof(WwiseGroupValueInfoLibrary_GetWwiseShortID, ReturnValue) == 0x000024, "Member 'WwiseGroupValueInfoLibrary_GetWwiseShortID::ReturnValue' has a wrong offset!");

// Function WwiseResourceLoader.WwiseGroupValueInfoLibrary.MakeStruct
// 0x0050 (0x0050 - 0x0000)
struct WwiseGroupValueInfoLibrary_MakeStruct final
{
public:
	struct FGuid                                  AssetGuid;                                         // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         GroupShortId;                                      // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         WwiseShortId;                                      // 0x0014(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 WwiseName;                                         // 0x0018(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FWwiseGroupValueInfo                   ReturnValue;                                       // 0x0028(0x0024)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(WwiseGroupValueInfoLibrary_MakeStruct) == 0x000008, "Wrong alignment on WwiseGroupValueInfoLibrary_MakeStruct");
static_assert(sizeof(WwiseGroupValueInfoLibrary_MakeStruct) == 0x000050, "Wrong size on WwiseGroupValueInfoLibrary_MakeStruct");
static_assert(offsetof(WwiseGroupValueInfoLibrary_MakeStruct, AssetGuid) == 0x000000, "Member 'WwiseGroupValueInfoLibrary_MakeStruct::AssetGuid' has a wrong offset!");
static_assert(offsetof(WwiseGroupValueInfoLibrary_MakeStruct, GroupShortId) == 0x000010, "Member 'WwiseGroupValueInfoLibrary_MakeStruct::GroupShortId' has a wrong offset!");
static_assert(offsetof(WwiseGroupValueInfoLibrary_MakeStruct, WwiseShortId) == 0x000014, "Member 'WwiseGroupValueInfoLibrary_MakeStruct::WwiseShortId' has a wrong offset!");
static_assert(offsetof(WwiseGroupValueInfoLibrary_MakeStruct, WwiseName) == 0x000018, "Member 'WwiseGroupValueInfoLibrary_MakeStruct::WwiseName' has a wrong offset!");
static_assert(offsetof(WwiseGroupValueInfoLibrary_MakeStruct, ReturnValue) == 0x000028, "Member 'WwiseGroupValueInfoLibrary_MakeStruct::ReturnValue' has a wrong offset!");

// Function WwiseResourceLoader.WwiseGroupValueInfoLibrary.SetAssetGuid
// 0x0058 (0x0058 - 0x0000)
struct WwiseGroupValueInfoLibrary_SetAssetGuid final
{
public:
	struct FWwiseGroupValueInfo                   Ref;                                               // 0x0000(0x0024)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGuid                                  AssetGuid;                                         // 0x0024(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FWwiseGroupValueInfo                   ReturnValue;                                       // 0x0034(0x0024)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WwiseGroupValueInfoLibrary_SetAssetGuid) == 0x000004, "Wrong alignment on WwiseGroupValueInfoLibrary_SetAssetGuid");
static_assert(sizeof(WwiseGroupValueInfoLibrary_SetAssetGuid) == 0x000058, "Wrong size on WwiseGroupValueInfoLibrary_SetAssetGuid");
static_assert(offsetof(WwiseGroupValueInfoLibrary_SetAssetGuid, Ref) == 0x000000, "Member 'WwiseGroupValueInfoLibrary_SetAssetGuid::Ref' has a wrong offset!");
static_assert(offsetof(WwiseGroupValueInfoLibrary_SetAssetGuid, AssetGuid) == 0x000024, "Member 'WwiseGroupValueInfoLibrary_SetAssetGuid::AssetGuid' has a wrong offset!");
static_assert(offsetof(WwiseGroupValueInfoLibrary_SetAssetGuid, ReturnValue) == 0x000034, "Member 'WwiseGroupValueInfoLibrary_SetAssetGuid::ReturnValue' has a wrong offset!");

// Function WwiseResourceLoader.WwiseGroupValueInfoLibrary.SetGroupShortId
// 0x004C (0x004C - 0x0000)
struct WwiseGroupValueInfoLibrary_SetGroupShortId final
{
public:
	struct FWwiseGroupValueInfo                   Ref;                                               // 0x0000(0x0024)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         GroupShortId;                                      // 0x0024(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FWwiseGroupValueInfo                   ReturnValue;                                       // 0x0028(0x0024)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WwiseGroupValueInfoLibrary_SetGroupShortId) == 0x000004, "Wrong alignment on WwiseGroupValueInfoLibrary_SetGroupShortId");
static_assert(sizeof(WwiseGroupValueInfoLibrary_SetGroupShortId) == 0x00004C, "Wrong size on WwiseGroupValueInfoLibrary_SetGroupShortId");
static_assert(offsetof(WwiseGroupValueInfoLibrary_SetGroupShortId, Ref) == 0x000000, "Member 'WwiseGroupValueInfoLibrary_SetGroupShortId::Ref' has a wrong offset!");
static_assert(offsetof(WwiseGroupValueInfoLibrary_SetGroupShortId, GroupShortId) == 0x000024, "Member 'WwiseGroupValueInfoLibrary_SetGroupShortId::GroupShortId' has a wrong offset!");
static_assert(offsetof(WwiseGroupValueInfoLibrary_SetGroupShortId, ReturnValue) == 0x000028, "Member 'WwiseGroupValueInfoLibrary_SetGroupShortId::ReturnValue' has a wrong offset!");

// Function WwiseResourceLoader.WwiseGroupValueInfoLibrary.SetWwiseName
// 0x0060 (0x0060 - 0x0000)
struct WwiseGroupValueInfoLibrary_SetWwiseName final
{
public:
	struct FWwiseGroupValueInfo                   Ref;                                               // 0x0000(0x0024)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 WwiseName;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FWwiseGroupValueInfo                   ReturnValue;                                       // 0x0038(0x0024)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(WwiseGroupValueInfoLibrary_SetWwiseName) == 0x000008, "Wrong alignment on WwiseGroupValueInfoLibrary_SetWwiseName");
static_assert(sizeof(WwiseGroupValueInfoLibrary_SetWwiseName) == 0x000060, "Wrong size on WwiseGroupValueInfoLibrary_SetWwiseName");
static_assert(offsetof(WwiseGroupValueInfoLibrary_SetWwiseName, Ref) == 0x000000, "Member 'WwiseGroupValueInfoLibrary_SetWwiseName::Ref' has a wrong offset!");
static_assert(offsetof(WwiseGroupValueInfoLibrary_SetWwiseName, WwiseName) == 0x000028, "Member 'WwiseGroupValueInfoLibrary_SetWwiseName::WwiseName' has a wrong offset!");
static_assert(offsetof(WwiseGroupValueInfoLibrary_SetWwiseName, ReturnValue) == 0x000038, "Member 'WwiseGroupValueInfoLibrary_SetWwiseName::ReturnValue' has a wrong offset!");

// Function WwiseResourceLoader.WwiseGroupValueInfoLibrary.SetWwiseShortId
// 0x004C (0x004C - 0x0000)
struct WwiseGroupValueInfoLibrary_SetWwiseShortId final
{
public:
	struct FWwiseGroupValueInfo                   Ref;                                               // 0x0000(0x0024)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         WwiseShortId;                                      // 0x0024(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FWwiseGroupValueInfo                   ReturnValue;                                       // 0x0028(0x0024)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WwiseGroupValueInfoLibrary_SetWwiseShortId) == 0x000004, "Wrong alignment on WwiseGroupValueInfoLibrary_SetWwiseShortId");
static_assert(sizeof(WwiseGroupValueInfoLibrary_SetWwiseShortId) == 0x00004C, "Wrong size on WwiseGroupValueInfoLibrary_SetWwiseShortId");
static_assert(offsetof(WwiseGroupValueInfoLibrary_SetWwiseShortId, Ref) == 0x000000, "Member 'WwiseGroupValueInfoLibrary_SetWwiseShortId::Ref' has a wrong offset!");
static_assert(offsetof(WwiseGroupValueInfoLibrary_SetWwiseShortId, WwiseShortId) == 0x000024, "Member 'WwiseGroupValueInfoLibrary_SetWwiseShortId::WwiseShortId' has a wrong offset!");
static_assert(offsetof(WwiseGroupValueInfoLibrary_SetWwiseShortId, ReturnValue) == 0x000028, "Member 'WwiseGroupValueInfoLibrary_SetWwiseShortId::ReturnValue' has a wrong offset!");

// Function WwiseResourceLoader.WwiseObjectInfoLibrary.BreakStruct
// 0x0050 (0x0050 - 0x0000)
struct WwiseObjectInfoLibrary_BreakStruct final
{
public:
	struct FWwiseObjectInfo                       Ref;                                               // 0x0000(0x0020)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGuid                                  OutWwiseGuid;                                      // 0x0020(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         OutWwiseShortId;                                   // 0x0030(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 OutWwiseName;                                      // 0x0038(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         OutHardCodedSoundBankShortId;                      // 0x0048(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(WwiseObjectInfoLibrary_BreakStruct) == 0x000008, "Wrong alignment on WwiseObjectInfoLibrary_BreakStruct");
static_assert(sizeof(WwiseObjectInfoLibrary_BreakStruct) == 0x000050, "Wrong size on WwiseObjectInfoLibrary_BreakStruct");
static_assert(offsetof(WwiseObjectInfoLibrary_BreakStruct, Ref) == 0x000000, "Member 'WwiseObjectInfoLibrary_BreakStruct::Ref' has a wrong offset!");
static_assert(offsetof(WwiseObjectInfoLibrary_BreakStruct, OutWwiseGuid) == 0x000020, "Member 'WwiseObjectInfoLibrary_BreakStruct::OutWwiseGuid' has a wrong offset!");
static_assert(offsetof(WwiseObjectInfoLibrary_BreakStruct, OutWwiseShortId) == 0x000030, "Member 'WwiseObjectInfoLibrary_BreakStruct::OutWwiseShortId' has a wrong offset!");
static_assert(offsetof(WwiseObjectInfoLibrary_BreakStruct, OutWwiseName) == 0x000038, "Member 'WwiseObjectInfoLibrary_BreakStruct::OutWwiseName' has a wrong offset!");
static_assert(offsetof(WwiseObjectInfoLibrary_BreakStruct, OutHardCodedSoundBankShortId) == 0x000048, "Member 'WwiseObjectInfoLibrary_BreakStruct::OutHardCodedSoundBankShortId' has a wrong offset!");

// Function WwiseResourceLoader.WwiseObjectInfoLibrary.GetHardCodedSoundBankShortId
// 0x0024 (0x0024 - 0x0000)
struct WwiseObjectInfoLibrary_GetHardCodedSoundBankShortId final
{
public:
	struct FWwiseObjectInfo                       Ref;                                               // 0x0000(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0020(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WwiseObjectInfoLibrary_GetHardCodedSoundBankShortId) == 0x000004, "Wrong alignment on WwiseObjectInfoLibrary_GetHardCodedSoundBankShortId");
static_assert(sizeof(WwiseObjectInfoLibrary_GetHardCodedSoundBankShortId) == 0x000024, "Wrong size on WwiseObjectInfoLibrary_GetHardCodedSoundBankShortId");
static_assert(offsetof(WwiseObjectInfoLibrary_GetHardCodedSoundBankShortId, Ref) == 0x000000, "Member 'WwiseObjectInfoLibrary_GetHardCodedSoundBankShortId::Ref' has a wrong offset!");
static_assert(offsetof(WwiseObjectInfoLibrary_GetHardCodedSoundBankShortId, ReturnValue) == 0x000020, "Member 'WwiseObjectInfoLibrary_GetHardCodedSoundBankShortId::ReturnValue' has a wrong offset!");

// Function WwiseResourceLoader.WwiseObjectInfoLibrary.GetWwiseGuid
// 0x0030 (0x0030 - 0x0000)
struct WwiseObjectInfoLibrary_GetWwiseGuid final
{
public:
	struct FWwiseObjectInfo                       Ref;                                               // 0x0000(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGuid                                  ReturnValue;                                       // 0x0020(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WwiseObjectInfoLibrary_GetWwiseGuid) == 0x000004, "Wrong alignment on WwiseObjectInfoLibrary_GetWwiseGuid");
static_assert(sizeof(WwiseObjectInfoLibrary_GetWwiseGuid) == 0x000030, "Wrong size on WwiseObjectInfoLibrary_GetWwiseGuid");
static_assert(offsetof(WwiseObjectInfoLibrary_GetWwiseGuid, Ref) == 0x000000, "Member 'WwiseObjectInfoLibrary_GetWwiseGuid::Ref' has a wrong offset!");
static_assert(offsetof(WwiseObjectInfoLibrary_GetWwiseGuid, ReturnValue) == 0x000020, "Member 'WwiseObjectInfoLibrary_GetWwiseGuid::ReturnValue' has a wrong offset!");

// Function WwiseResourceLoader.WwiseObjectInfoLibrary.GetWwiseName
// 0x0030 (0x0030 - 0x0000)
struct WwiseObjectInfoLibrary_GetWwiseName final
{
public:
	struct FWwiseObjectInfo                       Ref;                                               // 0x0000(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0020(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WwiseObjectInfoLibrary_GetWwiseName) == 0x000008, "Wrong alignment on WwiseObjectInfoLibrary_GetWwiseName");
static_assert(sizeof(WwiseObjectInfoLibrary_GetWwiseName) == 0x000030, "Wrong size on WwiseObjectInfoLibrary_GetWwiseName");
static_assert(offsetof(WwiseObjectInfoLibrary_GetWwiseName, Ref) == 0x000000, "Member 'WwiseObjectInfoLibrary_GetWwiseName::Ref' has a wrong offset!");
static_assert(offsetof(WwiseObjectInfoLibrary_GetWwiseName, ReturnValue) == 0x000020, "Member 'WwiseObjectInfoLibrary_GetWwiseName::ReturnValue' has a wrong offset!");

// Function WwiseResourceLoader.WwiseObjectInfoLibrary.GetWwiseShortID
// 0x0024 (0x0024 - 0x0000)
struct WwiseObjectInfoLibrary_GetWwiseShortID final
{
public:
	struct FWwiseObjectInfo                       Ref;                                               // 0x0000(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0020(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WwiseObjectInfoLibrary_GetWwiseShortID) == 0x000004, "Wrong alignment on WwiseObjectInfoLibrary_GetWwiseShortID");
static_assert(sizeof(WwiseObjectInfoLibrary_GetWwiseShortID) == 0x000024, "Wrong size on WwiseObjectInfoLibrary_GetWwiseShortID");
static_assert(offsetof(WwiseObjectInfoLibrary_GetWwiseShortID, Ref) == 0x000000, "Member 'WwiseObjectInfoLibrary_GetWwiseShortID::Ref' has a wrong offset!");
static_assert(offsetof(WwiseObjectInfoLibrary_GetWwiseShortID, ReturnValue) == 0x000020, "Member 'WwiseObjectInfoLibrary_GetWwiseShortID::ReturnValue' has a wrong offset!");

// Function WwiseResourceLoader.WwiseObjectInfoLibrary.MakeStruct
// 0x0050 (0x0050 - 0x0000)
struct WwiseObjectInfoLibrary_MakeStruct final
{
public:
	struct FGuid                                  WwiseGuid;                                         // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         WwiseShortId;                                      // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 WwiseName;                                         // 0x0018(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         HardCodedSoundBankShortId;                         // 0x0028(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FWwiseObjectInfo                       ReturnValue;                                       // 0x002C(0x0020)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(WwiseObjectInfoLibrary_MakeStruct) == 0x000008, "Wrong alignment on WwiseObjectInfoLibrary_MakeStruct");
static_assert(sizeof(WwiseObjectInfoLibrary_MakeStruct) == 0x000050, "Wrong size on WwiseObjectInfoLibrary_MakeStruct");
static_assert(offsetof(WwiseObjectInfoLibrary_MakeStruct, WwiseGuid) == 0x000000, "Member 'WwiseObjectInfoLibrary_MakeStruct::WwiseGuid' has a wrong offset!");
static_assert(offsetof(WwiseObjectInfoLibrary_MakeStruct, WwiseShortId) == 0x000010, "Member 'WwiseObjectInfoLibrary_MakeStruct::WwiseShortId' has a wrong offset!");
static_assert(offsetof(WwiseObjectInfoLibrary_MakeStruct, WwiseName) == 0x000018, "Member 'WwiseObjectInfoLibrary_MakeStruct::WwiseName' has a wrong offset!");
static_assert(offsetof(WwiseObjectInfoLibrary_MakeStruct, HardCodedSoundBankShortId) == 0x000028, "Member 'WwiseObjectInfoLibrary_MakeStruct::HardCodedSoundBankShortId' has a wrong offset!");
static_assert(offsetof(WwiseObjectInfoLibrary_MakeStruct, ReturnValue) == 0x00002C, "Member 'WwiseObjectInfoLibrary_MakeStruct::ReturnValue' has a wrong offset!");

// Function WwiseResourceLoader.WwiseObjectInfoLibrary.SetHardCodedSoundBankShortId
// 0x0044 (0x0044 - 0x0000)
struct WwiseObjectInfoLibrary_SetHardCodedSoundBankShortId final
{
public:
	struct FWwiseObjectInfo                       Ref;                                               // 0x0000(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         HardCodedSoundBankShortId;                         // 0x0020(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FWwiseObjectInfo                       ReturnValue;                                       // 0x0024(0x0020)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WwiseObjectInfoLibrary_SetHardCodedSoundBankShortId) == 0x000004, "Wrong alignment on WwiseObjectInfoLibrary_SetHardCodedSoundBankShortId");
static_assert(sizeof(WwiseObjectInfoLibrary_SetHardCodedSoundBankShortId) == 0x000044, "Wrong size on WwiseObjectInfoLibrary_SetHardCodedSoundBankShortId");
static_assert(offsetof(WwiseObjectInfoLibrary_SetHardCodedSoundBankShortId, Ref) == 0x000000, "Member 'WwiseObjectInfoLibrary_SetHardCodedSoundBankShortId::Ref' has a wrong offset!");
static_assert(offsetof(WwiseObjectInfoLibrary_SetHardCodedSoundBankShortId, HardCodedSoundBankShortId) == 0x000020, "Member 'WwiseObjectInfoLibrary_SetHardCodedSoundBankShortId::HardCodedSoundBankShortId' has a wrong offset!");
static_assert(offsetof(WwiseObjectInfoLibrary_SetHardCodedSoundBankShortId, ReturnValue) == 0x000024, "Member 'WwiseObjectInfoLibrary_SetHardCodedSoundBankShortId::ReturnValue' has a wrong offset!");

// Function WwiseResourceLoader.WwiseObjectInfoLibrary.SetWwiseGuid
// 0x0050 (0x0050 - 0x0000)
struct WwiseObjectInfoLibrary_SetWwiseGuid final
{
public:
	struct FWwiseObjectInfo                       Ref;                                               // 0x0000(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGuid                                  WwiseGuid;                                         // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FWwiseObjectInfo                       ReturnValue;                                       // 0x0030(0x0020)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WwiseObjectInfoLibrary_SetWwiseGuid) == 0x000004, "Wrong alignment on WwiseObjectInfoLibrary_SetWwiseGuid");
static_assert(sizeof(WwiseObjectInfoLibrary_SetWwiseGuid) == 0x000050, "Wrong size on WwiseObjectInfoLibrary_SetWwiseGuid");
static_assert(offsetof(WwiseObjectInfoLibrary_SetWwiseGuid, Ref) == 0x000000, "Member 'WwiseObjectInfoLibrary_SetWwiseGuid::Ref' has a wrong offset!");
static_assert(offsetof(WwiseObjectInfoLibrary_SetWwiseGuid, WwiseGuid) == 0x000020, "Member 'WwiseObjectInfoLibrary_SetWwiseGuid::WwiseGuid' has a wrong offset!");
static_assert(offsetof(WwiseObjectInfoLibrary_SetWwiseGuid, ReturnValue) == 0x000030, "Member 'WwiseObjectInfoLibrary_SetWwiseGuid::ReturnValue' has a wrong offset!");

// Function WwiseResourceLoader.WwiseObjectInfoLibrary.SetWwiseName
// 0x0050 (0x0050 - 0x0000)
struct WwiseObjectInfoLibrary_SetWwiseName final
{
public:
	struct FWwiseObjectInfo                       Ref;                                               // 0x0000(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 WwiseName;                                         // 0x0020(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FWwiseObjectInfo                       ReturnValue;                                       // 0x0030(0x0020)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WwiseObjectInfoLibrary_SetWwiseName) == 0x000008, "Wrong alignment on WwiseObjectInfoLibrary_SetWwiseName");
static_assert(sizeof(WwiseObjectInfoLibrary_SetWwiseName) == 0x000050, "Wrong size on WwiseObjectInfoLibrary_SetWwiseName");
static_assert(offsetof(WwiseObjectInfoLibrary_SetWwiseName, Ref) == 0x000000, "Member 'WwiseObjectInfoLibrary_SetWwiseName::Ref' has a wrong offset!");
static_assert(offsetof(WwiseObjectInfoLibrary_SetWwiseName, WwiseName) == 0x000020, "Member 'WwiseObjectInfoLibrary_SetWwiseName::WwiseName' has a wrong offset!");
static_assert(offsetof(WwiseObjectInfoLibrary_SetWwiseName, ReturnValue) == 0x000030, "Member 'WwiseObjectInfoLibrary_SetWwiseName::ReturnValue' has a wrong offset!");

// Function WwiseResourceLoader.WwiseObjectInfoLibrary.SetWwiseShortId
// 0x0044 (0x0044 - 0x0000)
struct WwiseObjectInfoLibrary_SetWwiseShortId final
{
public:
	struct FWwiseObjectInfo                       Ref;                                               // 0x0000(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         WwiseShortId;                                      // 0x0020(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FWwiseObjectInfo                       ReturnValue;                                       // 0x0024(0x0020)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WwiseObjectInfoLibrary_SetWwiseShortId) == 0x000004, "Wrong alignment on WwiseObjectInfoLibrary_SetWwiseShortId");
static_assert(sizeof(WwiseObjectInfoLibrary_SetWwiseShortId) == 0x000044, "Wrong size on WwiseObjectInfoLibrary_SetWwiseShortId");
static_assert(offsetof(WwiseObjectInfoLibrary_SetWwiseShortId, Ref) == 0x000000, "Member 'WwiseObjectInfoLibrary_SetWwiseShortId::Ref' has a wrong offset!");
static_assert(offsetof(WwiseObjectInfoLibrary_SetWwiseShortId, WwiseShortId) == 0x000020, "Member 'WwiseObjectInfoLibrary_SetWwiseShortId::WwiseShortId' has a wrong offset!");
static_assert(offsetof(WwiseObjectInfoLibrary_SetWwiseShortId, ReturnValue) == 0x000024, "Member 'WwiseObjectInfoLibrary_SetWwiseShortId::ReturnValue' has a wrong offset!");

}

