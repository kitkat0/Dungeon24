#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GothicPack

#include "Basic.hpp"


namespace SDK
{

// Enum GothicPack.SidewalkSize
// NumValues: 0x0003
enum class ESidewalkSize : uint8
{
	WIDE                                     = 0,
	NARROW                                   = 1,
	SidewalkSize_MAX                         = 2,
};

// ScriptStruct GothicPack.RailingVariationParent
// 0x0010 (0x0010 - 0x0000)
struct FRailingVariationParent final
{
public:
	TArray<class UStaticMesh*>                    Meshes;                                            // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FRailingVariationParent) == 0x000008, "Wrong alignment on FRailingVariationParent");
static_assert(sizeof(FRailingVariationParent) == 0x000010, "Wrong size on FRailingVariationParent");
static_assert(offsetof(FRailingVariationParent, Meshes) == 0x000000, "Member 'FRailingVariationParent::Meshes' has a wrong offset!");

// ScriptStruct GothicPack.SidewalkVariationParent
// 0x0020 (0x0020 - 0x0000)
struct FSidewalkVariationParent final
{
public:
	TArray<class UStaticMesh*>                    MiddleSidewalkMeshes;                              // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	class UStaticMesh*                            EndSidewalkMesh;                                   // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                            StartSidewalkMesh;                                 // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FSidewalkVariationParent) == 0x000008, "Wrong alignment on FSidewalkVariationParent");
static_assert(sizeof(FSidewalkVariationParent) == 0x000020, "Wrong size on FSidewalkVariationParent");
static_assert(offsetof(FSidewalkVariationParent, MiddleSidewalkMeshes) == 0x000000, "Member 'FSidewalkVariationParent::MiddleSidewalkMeshes' has a wrong offset!");
static_assert(offsetof(FSidewalkVariationParent, EndSidewalkMesh) == 0x000010, "Member 'FSidewalkVariationParent::EndSidewalkMesh' has a wrong offset!");
static_assert(offsetof(FSidewalkVariationParent, StartSidewalkMesh) == 0x000018, "Member 'FSidewalkVariationParent::StartSidewalkMesh' has a wrong offset!");

}

