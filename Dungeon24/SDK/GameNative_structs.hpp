#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GameNative

#include "Basic.hpp"


namespace SDK
{

// ScriptStruct GameNative.INTLFrameInfo
// 0x0028 (0x0028 - 0x0000)
struct FINTLFrameInfo final
{
public:
	class FString                                 Path;                                              // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Md5;                                               // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Size;                                              // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FINTLFrameInfo) == 0x000008, "Wrong alignment on FINTLFrameInfo");
static_assert(sizeof(FINTLFrameInfo) == 0x000028, "Wrong size on FINTLFrameInfo");
static_assert(offsetof(FINTLFrameInfo, Path) == 0x000000, "Member 'FINTLFrameInfo::Path' has a wrong offset!");
static_assert(offsetof(FINTLFrameInfo, Md5) == 0x000010, "Member 'FINTLFrameInfo::Md5' has a wrong offset!");
static_assert(offsetof(FINTLFrameInfo, Size) == 0x000020, "Member 'FINTLFrameInfo::Size' has a wrong offset!");

// ScriptStruct GameNative.INTLUserData
// 0x00E8 (0x00E8 - 0x0000)
struct FINTLUserData final
{
public:
	int32                                         GameId;                                            // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ChannelID;                                         // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 OpenID;                                            // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Token;                                             // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 RoleID;                                            // 0x0038(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Region;                                            // 0x0048(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         AreaId;                                            // 0x0058(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ZoneId;                                            // 0x005C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Os;                                                // 0x0060(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 LangType;                                          // 0x0068(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 DefLangType;                                       // 0x0078(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 RoleName;                                          // 0x0088(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 PayToken;                                          // 0x0098(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 HeadUrl;                                           // 0x00A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 PlayerLevel;                                       // 0x00B8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 AppVersion;                                        // 0x00C8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ExtraJson;                                         // 0x00D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FINTLUserData) == 0x000008, "Wrong alignment on FINTLUserData");
static_assert(sizeof(FINTLUserData) == 0x0000E8, "Wrong size on FINTLUserData");
static_assert(offsetof(FINTLUserData, GameId) == 0x000000, "Member 'FINTLUserData::GameId' has a wrong offset!");
static_assert(offsetof(FINTLUserData, ChannelID) == 0x000008, "Member 'FINTLUserData::ChannelID' has a wrong offset!");
static_assert(offsetof(FINTLUserData, OpenID) == 0x000018, "Member 'FINTLUserData::OpenID' has a wrong offset!");
static_assert(offsetof(FINTLUserData, Token) == 0x000028, "Member 'FINTLUserData::Token' has a wrong offset!");
static_assert(offsetof(FINTLUserData, RoleID) == 0x000038, "Member 'FINTLUserData::RoleID' has a wrong offset!");
static_assert(offsetof(FINTLUserData, Region) == 0x000048, "Member 'FINTLUserData::Region' has a wrong offset!");
static_assert(offsetof(FINTLUserData, AreaId) == 0x000058, "Member 'FINTLUserData::AreaId' has a wrong offset!");
static_assert(offsetof(FINTLUserData, ZoneId) == 0x00005C, "Member 'FINTLUserData::ZoneId' has a wrong offset!");
static_assert(offsetof(FINTLUserData, Os) == 0x000060, "Member 'FINTLUserData::Os' has a wrong offset!");
static_assert(offsetof(FINTLUserData, LangType) == 0x000068, "Member 'FINTLUserData::LangType' has a wrong offset!");
static_assert(offsetof(FINTLUserData, DefLangType) == 0x000078, "Member 'FINTLUserData::DefLangType' has a wrong offset!");
static_assert(offsetof(FINTLUserData, RoleName) == 0x000088, "Member 'FINTLUserData::RoleName' has a wrong offset!");
static_assert(offsetof(FINTLUserData, PayToken) == 0x000098, "Member 'FINTLUserData::PayToken' has a wrong offset!");
static_assert(offsetof(FINTLUserData, HeadUrl) == 0x0000A8, "Member 'FINTLUserData::HeadUrl' has a wrong offset!");
static_assert(offsetof(FINTLUserData, PlayerLevel) == 0x0000B8, "Member 'FINTLUserData::PlayerLevel' has a wrong offset!");
static_assert(offsetof(FINTLUserData, AppVersion) == 0x0000C8, "Member 'FINTLUserData::AppVersion' has a wrong offset!");
static_assert(offsetof(FINTLUserData, ExtraJson) == 0x0000D8, "Member 'FINTLUserData::ExtraJson' has a wrong offset!");

}

