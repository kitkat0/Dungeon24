#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LiveLinkControlRig

#include "Basic.hpp"

#include "LiveLinkInterface_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "ControlRig_structs.hpp"


namespace SDK
{

// ScriptStruct LiveLinkControlRig.RigUnit_LiveLinkBase
// 0x0000 (0x0008 - 0x0008)
struct FRigUnit_LiveLinkBase : public FRigUnit
{
};
static_assert(alignof(FRigUnit_LiveLinkBase) == 0x000008, "Wrong alignment on FRigUnit_LiveLinkBase");
static_assert(sizeof(FRigUnit_LiveLinkBase) == 0x000008, "Wrong size on FRigUnit_LiveLinkBase");

// ScriptStruct LiveLinkControlRig.RigUnit_LiveLinkEvaluteFrameAnimation
// 0x00A8 (0x00B0 - 0x0008)
struct FRigUnit_LiveLinkEvaluteFrameAnimation final : public FRigUnit_LiveLinkBase
{
public:
	class FName                                   SubjectName;                                       // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDrawDebug;                                        // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           DebugColor;                                        // 0x0014(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0xC];                                       // 0x0024(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             DebugDrawOffset;                                   // 0x0030(0x0060)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSubjectFrameHandle                    SubjectFrame;                                      // 0x0090(0x0018)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	uint8                                         Pad_A8[0x8];                                       // 0x00A8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FRigUnit_LiveLinkEvaluteFrameAnimation) == 0x000010, "Wrong alignment on FRigUnit_LiveLinkEvaluteFrameAnimation");
static_assert(sizeof(FRigUnit_LiveLinkEvaluteFrameAnimation) == 0x0000B0, "Wrong size on FRigUnit_LiveLinkEvaluteFrameAnimation");
static_assert(offsetof(FRigUnit_LiveLinkEvaluteFrameAnimation, SubjectName) == 0x000008, "Member 'FRigUnit_LiveLinkEvaluteFrameAnimation::SubjectName' has a wrong offset!");
static_assert(offsetof(FRigUnit_LiveLinkEvaluteFrameAnimation, bDrawDebug) == 0x000010, "Member 'FRigUnit_LiveLinkEvaluteFrameAnimation::bDrawDebug' has a wrong offset!");
static_assert(offsetof(FRigUnit_LiveLinkEvaluteFrameAnimation, DebugColor) == 0x000014, "Member 'FRigUnit_LiveLinkEvaluteFrameAnimation::DebugColor' has a wrong offset!");
static_assert(offsetof(FRigUnit_LiveLinkEvaluteFrameAnimation, DebugDrawOffset) == 0x000030, "Member 'FRigUnit_LiveLinkEvaluteFrameAnimation::DebugDrawOffset' has a wrong offset!");
static_assert(offsetof(FRigUnit_LiveLinkEvaluteFrameAnimation, SubjectFrame) == 0x000090, "Member 'FRigUnit_LiveLinkEvaluteFrameAnimation::SubjectFrame' has a wrong offset!");

// ScriptStruct LiveLinkControlRig.RigUnit_LiveLinkGetTransformByName
// 0x0088 (0x0090 - 0x0008)
struct FRigUnit_LiveLinkGetTransformByName final : public FRigUnit_LiveLinkBase
{
public:
	struct FSubjectFrameHandle                    SubjectFrame;                                      // 0x0008(0x0018)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class FName                                   TransformName;                                     // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EBoneGetterSetterMode                         Space;                                             // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Transform;                                         // 0x0030(0x0060)(BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FRigUnit_LiveLinkGetTransformByName) == 0x000010, "Wrong alignment on FRigUnit_LiveLinkGetTransformByName");
static_assert(sizeof(FRigUnit_LiveLinkGetTransformByName) == 0x000090, "Wrong size on FRigUnit_LiveLinkGetTransformByName");
static_assert(offsetof(FRigUnit_LiveLinkGetTransformByName, SubjectFrame) == 0x000008, "Member 'FRigUnit_LiveLinkGetTransformByName::SubjectFrame' has a wrong offset!");
static_assert(offsetof(FRigUnit_LiveLinkGetTransformByName, TransformName) == 0x000020, "Member 'FRigUnit_LiveLinkGetTransformByName::TransformName' has a wrong offset!");
static_assert(offsetof(FRigUnit_LiveLinkGetTransformByName, Space) == 0x000028, "Member 'FRigUnit_LiveLinkGetTransformByName::Space' has a wrong offset!");
static_assert(offsetof(FRigUnit_LiveLinkGetTransformByName, Transform) == 0x000030, "Member 'FRigUnit_LiveLinkGetTransformByName::Transform' has a wrong offset!");

// ScriptStruct LiveLinkControlRig.RigUnit_LiveLinkGetParameterValueByName
// 0x0028 (0x0030 - 0x0008)
struct FRigUnit_LiveLinkGetParameterValueByName final : public FRigUnit_LiveLinkBase
{
public:
	struct FSubjectFrameHandle                    SubjectFrame;                                      // 0x0008(0x0018)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class FName                                   ParameterName;                                     // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Value;                                             // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FRigUnit_LiveLinkGetParameterValueByName) == 0x000008, "Wrong alignment on FRigUnit_LiveLinkGetParameterValueByName");
static_assert(sizeof(FRigUnit_LiveLinkGetParameterValueByName) == 0x000030, "Wrong size on FRigUnit_LiveLinkGetParameterValueByName");
static_assert(offsetof(FRigUnit_LiveLinkGetParameterValueByName, SubjectFrame) == 0x000008, "Member 'FRigUnit_LiveLinkGetParameterValueByName::SubjectFrame' has a wrong offset!");
static_assert(offsetof(FRigUnit_LiveLinkGetParameterValueByName, ParameterName) == 0x000020, "Member 'FRigUnit_LiveLinkGetParameterValueByName::ParameterName' has a wrong offset!");
static_assert(offsetof(FRigUnit_LiveLinkGetParameterValueByName, Value) == 0x000028, "Member 'FRigUnit_LiveLinkGetParameterValueByName::Value' has a wrong offset!");

// ScriptStruct LiveLinkControlRig.RigUnit_LiveLinkEvaluteFrameTransform
// 0x00E8 (0x00F0 - 0x0008)
struct FRigUnit_LiveLinkEvaluteFrameTransform final : public FRigUnit_LiveLinkBase
{
public:
	class FName                                   SubjectName;                                       // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDrawDebug;                                        // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           DebugColor;                                        // 0x0014(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0xC];                                       // 0x0024(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             DebugDrawOffset;                                   // 0x0030(0x0060)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTransform                             Transform;                                         // 0x0090(0x0060)(BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FRigUnit_LiveLinkEvaluteFrameTransform) == 0x000010, "Wrong alignment on FRigUnit_LiveLinkEvaluteFrameTransform");
static_assert(sizeof(FRigUnit_LiveLinkEvaluteFrameTransform) == 0x0000F0, "Wrong size on FRigUnit_LiveLinkEvaluteFrameTransform");
static_assert(offsetof(FRigUnit_LiveLinkEvaluteFrameTransform, SubjectName) == 0x000008, "Member 'FRigUnit_LiveLinkEvaluteFrameTransform::SubjectName' has a wrong offset!");
static_assert(offsetof(FRigUnit_LiveLinkEvaluteFrameTransform, bDrawDebug) == 0x000010, "Member 'FRigUnit_LiveLinkEvaluteFrameTransform::bDrawDebug' has a wrong offset!");
static_assert(offsetof(FRigUnit_LiveLinkEvaluteFrameTransform, DebugColor) == 0x000014, "Member 'FRigUnit_LiveLinkEvaluteFrameTransform::DebugColor' has a wrong offset!");
static_assert(offsetof(FRigUnit_LiveLinkEvaluteFrameTransform, DebugDrawOffset) == 0x000030, "Member 'FRigUnit_LiveLinkEvaluteFrameTransform::DebugDrawOffset' has a wrong offset!");
static_assert(offsetof(FRigUnit_LiveLinkEvaluteFrameTransform, Transform) == 0x000090, "Member 'FRigUnit_LiveLinkEvaluteFrameTransform::Transform' has a wrong offset!");

}

